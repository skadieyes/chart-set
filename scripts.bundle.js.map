{"version":3,"sources":["/Users/skadyeyes/代码/chart/~/bootstrap-table/dist/bootstrap-table.min.js","/Users/skadyeyes/代码/chart/~/bootstrap-table/dist/locale/bootstrap-table-zh-CN.min.js","/Users/skadyeyes/代码/chart/~/bootstrap/dist/js/bootstrap.min.js","/Users/skadyeyes/代码/chart/~/echarts/dist/echarts.js","/Users/skadyeyes/代码/chart/~/echarts/map/js/china.js","/Users/skadyeyes/代码/chart/~/jquery/dist/jquery.js","/Users/skadyeyes/代码/chart/~/prismjs/prism.js","/Users/skadyeyes/代码/chart/~/script-loader/addScript.js","/Users/skadyeyes/代码/chart/~/bootstrap-table/dist/bootstrap-table.min.js?5dcd","/Users/skadyeyes/代码/chart/~/bootstrap-table/dist/locale/bootstrap-table-zh-CN.min.js?dd3a","/Users/skadyeyes/代码/chart/~/bootstrap/dist/js/bootstrap.min.js?6f20","/Users/skadyeyes/代码/chart/~/echarts/dist/echarts.js?079c","/Users/skadyeyes/代码/chart/~/echarts/map/js/china.js?0791","/Users/skadyeyes/代码/chart/~/jquery/dist/jquery.js?f983","/Users/skadyeyes/代码/chart/~/prismjs/prism.js?2c78"],"names":[],"mappings":";;;;;AAAA,0LAA0L,eAAe,yBAAyB,yBAAyB,oCAAoC,aAAa,4CAA4C,WAAW,qBAAqB,WAAW,8BAA8B,+BAA+B,IAAI,iBAAiB,SAAS,8BAA8B,+BAA+B,IAAI,eAAe,mBAAmB,QAAQ,cAAc,0BAA0B,QAAQ,WAAW,oBAAoB,IAAI,eAAe,QAAQ,WAAW,YAAY,cAAc,KAAK,iEAAiE,2EAA2E,IAAI,iBAAiB,QAAQ,IAAI,kBAAkB,cAAc,aAAa,oHAAoH,oJAAoJ,SAAS,qBAAqB,QAAQ,yBAAyB,qBAAqB,4CAA4C,OAAO,eAAe,yJAAyJ,mBAAmB,2EAA2E,mCAAmC,YAAY,WAAW,sDAAsD,SAAS,eAAe,iDAAiD,uBAAuB,uBAAuB,0BAA0B,yBAAyB,yBAAyB,MAAM,eAAe,gBAAgB,qDAAqD,+BAA+B,SAAS,mBAAmB,QAAQ,mEAAmE,qBAAqB,mDAAmD,gBAAgB,cAAc,qGAAqG,cAAc,qCAAqC,0CAA0C,cAAc,6KAA6K,mBAAmB,sHAAsH,aAAa,kCAAkC,aAAa,IAAI,iCAAiC,UAAU,IAAI,iBAAiB,6GAA6G,YAAY,uUAAuU,yBAAyB,SAAS,uDAAuD,SAAS,iQAAiQ,gCAAgC,kWAAkW,WAAW,mQAAmQ,2UAA2U,2DAA2D,SAAS,0BAA0B,SAAS,wBAAwB,SAAS,kBAAkB,SAAS,wBAAwB,SAAS,2BAA2B,SAAS,uBAAuB,SAAS,0BAA0B,SAAS,mBAAmB,SAAS,oBAAoB,SAAS,sBAAsB,SAAS,uBAAuB,SAAS,yBAAyB,SAAS,wBAAwB,SAAS,0BAA0B,SAAS,0BAA0B,SAAS,wBAAwB,SAAS,2BAA2B,SAAS,yBAAyB,SAAS,qBAAqB,SAAS,qBAAqB,SAAS,sBAAsB,SAAS,uBAAuB,SAAS,yBAAyB,SAAS,wBAAwB,SAAS,0BAA0B,SAAS,6BAA6B,SAAS,sBAAsB,SAAS,wBAAwB,UAAU,aAAa,oCAAoC,gCAAgC,kCAAkC,kCAAkC,iCAAiC,mCAAmC,gDAAgD,oCAAoC,gCAAgC,yBAAyB,iBAAiB,4BAA4B,oCAAoC,mCAAmC,+BAA+B,0BAA0B,kBAAkB,yBAAyB,iBAAiB,0BAA0B,kBAAkB,0BAA0B,eAAe,8DAA8D,8YAA8Y,WAAW,2/BAA2/B,6BAA6B,mOAAmO,mCAAmC,wBAAwB,uCAAuC,+WAA+W,sCAAsC,8OAA8O,wwCAAwwC,kCAAkC,qBAAqB,kKAAkK,SAAS,qCAAqC,sHAAsH,EAAE,oOAAoO,kBAAkB,YAAY,kOAAkO,uBAAuB,aAAa,gHAAgH,EAAE,6BAA6B,SAAS,8CAA8C,SAAS,6HAA6H,0EAA0E,cAAc,KAAK,QAAQ,MAAM,YAAY,MAAM,+BAA+B,yBAAyB,mSAAmS,YAAY,oDAAoD,mCAAmC,eAAe,MAAM,aAAa,4GAA4G,2CAA2C,wMAAwM,oHAAoH,2NAA2N,oDAAoD,sCAAsC,+BAA+B,wFAAwF,qYAAqY,6CAA6C,aAAa,isBAAisB,oBAAoB,wFAAwF,yCAAyC,sFAAsF,cAAc,uJAAuJ,mFAAmF,gDAAgD,yBAAyB,oBAAoB,meAAme,gCAAgC,sDAAsD,EAAE,mCAAmC,kGAAkG,oCAAoC,ySAAyS,iCAAiC,sIAAsI,sMAAsM,iDAAiD,+BAA+B,iDAAiD,gGAAgG,iTAAiT,4EAA4E,uCAAuC,4EAA4E,uEAAuE,SAAS,gCAAgC,qHAAqH,wiBAAwiB,oCAAoC,4BAA4B,kjEAAkjE,+DAA+D,4CAA4C,8JAA8J,igBAAigB,eAAe,sMAAsM,6BAA6B,2DAA2D,cAAc,8HAA8H,gYAAgY,4HAA4H,cAAc,2BAA2B,qDAAqD,wCAAwC,cAAc,0BAA0B,GAAG,kCAAkC,uCAAuC,qPAAqP,mCAAmC,WAAW,6CAA6C,0GAA0G,4JAA4J,iDAAiD,qGAAqG,SAAS,+DAA+D,YAAY,yBAAyB,gCAAgC,uHAAuH,yBAAyB,IAAI,6BAA6B,WAAW,cAAc,gEAAgE,YAAY,yEAAyE,uCAAuC,wDAAwD,SAAS,aAAa,uCAAuC,gEAAgE,wBAAwB,gFAAgF,yHAAyH,0GAA0G,wDAAwD,iLAAiL,mEAAmE,+GAA+G,qoBAAqoB,qCAAqC,kfAAkf,6CAA6C,oGAAoG,4BAA4B,+FAA+F,EAAE,2BAA2B,+DAA+D,MAAM,+KAA+K,mkCAAmkC,KAAK,iIAAiI,meAAme,6nCAA6nC,0CAA0C,6QAA6Q,0CAA0C,yBAAyB,sSAAsS,qCAAqC,6DAA6D,mCAAmC,2IAA2I,oCAAoC,yIAAyI,oCAAoC,2EAA2E,sCAAsC,oJAAoJ,mCAAmC,sBAAsB,iBAAiB,MAAM,uCAAuC,qGAAqG,oGAAoG,wEAAwE,6CAA6C,slBAAslB,uDAAuD,yEAAyE,2FAA2F,8EAA8E,icAAic,SAAS,6CAA6C,wDAAwD,MAAM,gJAAgJ,6CAA6C,8iCAA8iC,kFAAkF,kCAAkC,4BAA4B,sPAAsP,mEAAmE,cAAc,KAAK,qCAAqC,gCAAgC,qSAAqS,0MAA0M,iPAAiP,0DAA0D,wBAAwB,mGAAmG,+DAA+D,iLAAiL,KAAK,yLAAyL,kFAAkF,0DAA0D,wBAAwB,4IAA4I,6BAA6B,gEAAgE,wFAAwF,0BAA0B,4FAA4F,wDAAwD,+HAA+H,0CAA0C,MAAM,oCAAoC,6DAA6D,kDAAkD,4EAA4E,uIAAuI,kCAAkC,2CAA2C,wBAAwB,EAAE,GAAG,uEAAuE,wCAAwC,iBAAiB,IAAI,4FAA4F,sQAAsQ,sDAAsD,gaAAga,qDAAqD,mCAAmC,2QAA2Q,iHAAiH,mBAAmB,gEAAgE,sIAAsI,uCAAuC,wDAAwD,4CAA4C,8CAA8C,gBAAgB,GAAG,iCAAiC,WAAW,+CAA+C,oIAAoI,EAAE,uCAAuC,qKAAqK,2FAA2F,8FAA8F,EAAE,mCAAmC,WAAW,iCAAiC,+EAA+E,EAAE,kCAAkC,WAAW,+BAA+B,sHAAsH,wBAAwB,iCAAiC,8CAA8C,0KAA0K,oCAAoC,sHAAsH,kCAAkC,mBAAmB,0FAA0F,+MAA+M,wBAAwB,eAAe,6BAA6B,eAAe,oDAAoD,0DAA0D,6HAA6H,mBAAmB,iTAAiT,yFAAyF,EAAE,2DAA2D,iFAAiF,kBAAkB,mIAAmI,uDAAuD,iFAAiF,2DAA2D,2IAA2I,6BAA6B,oCAAoC,8BAA8B,6IAA6I,8EAA8E,6BAA6B,mCAAmC,oDAAoD,wBAAwB,wDAAwD,gGAAgG,0DAA0D,yFAAyF,aAAa,sGAAsG,4MAA4M,kCAAkC,UAAU,6NAA6N,mBAAmB,mMAAmM,cAAc,kDAAkD,GAAG,0CAA0C,2IAA2I,qEAAqE,sKAAsK,yCAAyC,gBAAgB,+CAA+C,gCAAgC,qBAAqB,IAAI,mCAAmC,QAAQ,wMAAwM,iGAAiG,8CAA8C,yhBAAyhB,iCAAiC,0OAA0O,8BAA8B,SAAS,4PAA4P,gCAAgC,sGAAsG,iCAAiC,uGAAuG,gCAAgC,mCAAmC,8DAA8D,UAAU,KAAK,iMAAiM,2GAA2G,kCAAkC,6IAA6I,0CAA0C,oEAAoE,UAAU,KAAK,KAAK,qDAAqD,KAAK,uCAAuC,aAAa,mJAAmJ,IAAI,OAAO,SAAS,0CAA0C,0DAA0D,sJAAsJ,0CAA0C,gCAAgC,uBAAuB,MAAM,sJAAsJ,4EAA4E,mCAAmC,sKAAsK,mCAAmC,gCAAgC,uBAAuB,gGAAgG,4EAA4E,uCAAuC,mBAAmB,iCAAiC,qBAAqB,iCAAiC,qBAAqB,qCAAqC,QAAQ,yPAAyP,sCAAsC,iCAAiC,8BAA8B,wCAAwC,sBAAsB,oCAAoC,0HAA0H,2HAA2H,QAAQ,MAAM,YAAY,MAAM,uCAAuC,kDAAkD,oCAAoC,gLAAgL,mCAAmC,oBAAoB,sCAAsC,WAAW,4CAA4C,mCAAmC,EAAE,yCAAyC,WAAW,4CAA4C,8BAA8B,EAAE,iCAAiC,mBAAmB,mCAAmC,mBAAmB,oCAAoC,yEAAyE,kBAAkB,qDAAqD,kHAAkH,mCAAmC,MAAM,8OAA8O,+BAA+B,kBAAkB,iCAAiC,kBAAkB,kCAAkC,8EAA8E,kHAAkH,iCAAiC,oBAAoB,mCAAmC,oBAAoB,oCAAoC,8DAA8D,gBAAgB,uCAAuC,uCAAuC,wCAAwC,gGAAgG,2EAA2E,2EAA2E,gCAAgC,yPAAyP,oCAAoC,0BAA0B,oCAAoC,0BAA0B,yCAAyC,iDAAiD,gEAAgE,gOAAgO,iCAAiC,0NAA0N,mCAAmC,yGAAyG,oCAAoC,2CAA2C,oCAAoC,2CAA2C,yCAAyC,uCAAuC,iBAAiB,EAAE,0CAA0C,uCAAuC,iBAAiB,EAAE,0CAA0C,mCAAmC,0BAA0B,sGAAsG,qEAAqE,+GAA+G,uCAAuC,0BAA0B,uCAAuC,0BAA0B,kCAAkC,wCAAwC,uEAAuE,kCAAkC,+LAA+L,0CAA0C,uBAAuB,oCAAoC,qFAAqF,iCAAiC,+EAA+E,iCAAiC,qGAAqG,mCAAmC,8HAA8H,wCAAwC,wIAAwI,qCAAqC,4CAA4C,8BAA8B,gBAAgB,EAAE,sCAAsC,sDAAsD,qFAAqF,mCAAmC,sBAAsB,qCAAqC,sBAAsB,uCAAuC,MAAM,8EAA8E,+KAA+K,yBAAyB,uGAAuG,IAAI,SAAS,kBAAkB,yCAAyC,WAAW,gDAAgD,yCAAyC,2BAA2B,yCAAyC,WAAW,gDAAgD,4CAA4C,kGAAkG,SAAS,wHAAwH,+zBAA+zB,gCAAgC,gDAAgD,4BAA4B,yDAAyD,8CAA8C,yBAAyB,4DAA4D,aAAa,qEAAqE,+CAA+C,iCAAiC,+NAA+N,4GAA4G,cAAc,8CAA8C,EAAE,SAAS,C;;;;;;;ACAlvuD,0LAA0L,eAAe,wCAAwC,gCAAgC,2BAA2B,kCAAkC,2BAA2B,mCAAmC,oDAAoD,yBAAyB,aAAa,4BAA4B,oBAAoB,mCAAmC,kBAAkB,0BAA0B,aAAa,yBAAyB,aAAa,0BAA0B,YAAY,yBAAyB,eAAe,+BAA+B,gBAAgB,+EAA+E,SAAS,C;;;;;;;ACA72B,gPAAgP,aAAa,eAAe,+CAA+C,kKAAkK,sBAAsB,eAAe,aAAa,+CAA+C,qJAAqJ,6CAA6C,UAAU,SAAS,sCAAsC,gBAAgB,2CAA2C,KAAK,EAAE,iBAAiB,2CAA2C,4BAA4B,cAAc,iFAAiF,2FAA2F,0EAA0E,EAAE,EAAE,sBAAsB,eAAe,cAAc,4BAA4B,qCAAqC,yEAAyE,EAAE,+CAA+C,iCAAiC,4EAA4E,aAAa,iDAAiD,wCAAwC,+DAA+D,wBAAwB,4QAA4Q,iBAAiB,uEAAuE,yBAAyB,iEAAiE,sBAAsB,eAAe,cAAc,4BAA4B,gEAAgE,mFAAmF,EAAE,oBAAoB,2CAA2C,kCAAkC,gCAAgC,2BAA2B,kCAAkC,iFAAiF,0FAA0F,8LAA8L,UAAU,+BAA+B,8DAA8D,aAAa,oCAAoC,kWAAkW,qHAAqH,kBAAkB,0EAA0E,0BAA0B,qFAAqF,oCAAoC,6NAA6N,kGAAkG,iFAAiF,EAAE,sBAAsB,eAAe,cAAc,4BAA4B,qDAAqD,+EAA+E,+GAA+G,EAAE,oBAAoB,meAAme,0DAA0D,iDAAiD,iCAAiC,8CAA8C,gBAAgB,oBAAoB,MAAM,oBAAoB,MAAM,eAAe,oBAAoB,+BAA+B,4LAA4L,sCAAsC,qFAAqF,+CAA+C,sFAAsF,kCAAkC,kDAAkD,yBAAyB,4BAA4B,kFAAkF,wGAAwG,QAAQ,gFAAgF,+BAA+B,+MAA+M,6BAA6B,6CAA6C,6BAA6B,6CAA6C,iCAAiC,sIAAsI,iDAAiD,4CAA4C,4BAA4B,EAAE,qDAAqD,4DAA4D,2DAA2D,2DAA2D,0BAA0B,oCAAoC,4BAA4B,EAAE,gKAAgK,mIAAmI,sBAAsB,IAAI,kKAAkK,oBAAoB,gFAAgF,6BAA6B,kBAAkB,sGAAsG,6BAA6B,iBAAiB,gDAAgD,qFAAqF,4JAA4J,8CAA8C,cAAc,mBAAmB,EAAE,EAAE,sBAAsB,eAAe,cAAc,yFAAyF,YAAY,cAAc,4BAA4B,qDAAqD,8CAA8C,yHAAyH,EAAE,oBAAoB,2CAA2C,gTAAgT,0DAA0D,UAAU,kCAAkC,wCAAwC,8BAA8B,6BAA6B,yDAAyD,uFAAuF,mEAAmE,oCAAoC,qDAAqD,kEAAkE,uBAAuB,2LAA2L,iBAAiB,gJAAgJ,6CAA6C,8CAA8C,8HAA8H,6BAA6B,wDAAwD,oCAAoC,qDAAqD,uBAAuB,0OAA0O,iBAAiB,uHAAuH,yJAAyJ,+BAA+B,yDAAyD,kCAAkC,qIAAqI,WAAW,sCAAsC,cAAc,oDAAoD,yBAAyB,uFAAuF,oBAAoB,gFAAgF,4BAA4B,wFAAwF,cAAc,4CAA4C,6DAA6D,YAAY,EAAE,sBAAsB,eAAe,cAAc,8BAA8B,oFAAoF,cAAc,gCAAgC,cAAc,oDAAoD,wBAAwB,oBAAoB,mSAAmS,GAAG,cAAc,4BAA4B,wCAAwC,4EAA4E,EAAE,0EAA0E,4CAA4C,mDAAmD,cAAc,oCAAoC,kCAAkC,WAAW,yLAAyL,OAAO,oBAAoB,8EAA8E,wHAAwH,UAAU,iCAAiC,6EAA6E,cAAc,2EAA2E,kCAAkC,yGAAyG,sEAAsE,aAAa,wBAAwB,8FAA8F,oBAAoB,gFAAgF,4BAA4B,mHAAmH,oBAAoB,iMAAiM,sBAAsB,eAAe,gBAAgB,4BAA4B,kDAAkD,8CAA8C,uFAAuF,EAAE,oBAAoB,2UAA2U,2CAA2C,SAAS,6FAA6F,gCAAgC,gCAAgC,6CAA6C,8BAA8B,wCAAwC,gBAAgB,EAAE,oVAAoV,wDAAwD,uDAAuD,EAAE,2BAA2B,0DAA0D,mLAAmL,kCAAkC,gBAAgB,EAAE,+CAA+C,yCAAyC,uFAAuF,GAAG,8BAA8B,ohBAAohB,qCAAqC,kFAAkF,uHAAuH,QAAQ,+BAA+B,sGAAsG,yBAAyB,sEAAsE,+BAA+B,kHAAkH,kCAAkC,WAAW,8CAA8C,oHAAoH,EAAE,uCAAuC,4DAA4D,kCAAkC,4DAA4D,wCAAwC,8BAA8B,0KAA0K,6KAA6K,mFAAmF,qGAAqG,uCAAuC,mCAAmC,iBAAiB,2BAA2B,0JAA0J,YAAY,qCAAqC,oBAAoB,qCAAqC,0EAA0E,mBAAmB,iIAAiI,EAAE,yCAAyC,mBAAmB,mCAAmC,EAAE,uCAAuC,wBAAwB,OAAO,uDAAuD,2BAA2B,+FAA+F,qCAAqC,wDAAwD,4IAA4I,uCAAuC,uDAAuD,yCAAyC,sCAAsC,6DAA6D,kCAAkC,uCAAuC,iBAAiB,uEAAuE,yBAAyB,kFAAkF,gJAAgJ,uBAAuB,oBAAoB,oEAAoE,6DAA6D,yCAAyC,EAAE,mBAAmB,EAAE,sBAAsB,eAAe,cAAc,4BAA4B,iEAAiE,qGAAqG,EAAE,oBAAoB,2JAA2J,0DAA0D,qPAAqP,6BAA6B,kCAAkC,kRAAkR,2BAA2B,mMAAmM,uDAAuD,IAAI,EAAE,WAAW,uGAAuG,uBAAuB,yFAAyF,uKAAuK,+CAA+C,eAAe,iCAAiC,kBAAkB,oCAAoC,kBAAkB,oCAAoC,oBAAoB,2FAA2F,0BAA0B,IAAI,2CAA2C,QAAQ,sBAAsB,yDAAyD,kBAAkB,IAAI,+BAA+B,iFAAiF,0YAA0Y,+BAA+B,kCAAkC,sCAAsC,sDAAsD,SAAS,+BAA+B,iFAAiF,wVAAwV,gCAAgC,iCAAiC,6BAA6B,sCAAsC,oCAAoC,yBAAyB,kFAAkF,qCAAqC,iDAAiD,2HAA2H,gKAAgK,kDAAkD,+BAA+B,oLAAoL,gEAAgE,MAAM,2CAA2C,iMAAiM,wCAAwC,yBAAyB,iBAAiB,mBAAmB,mFAAmF,iIAAiI,0CAA0C,mIAAmI,qFAAqF,kBAAkB,OAAO,8CAA8C,GAAG,0BAA0B,2CAA2C,oCAAoC,6CAA6C,mCAAmC,6FAA6F,2CAA2C,0CAA0C,mFAAmF,mCAAmC,mCAAmC,oHAAoH,8BAA8B,aAAa,+HAA+H,4DAA4D,mOAAmO,iCAAiC,oBAAoB,sJAAsJ,mCAAmC,uBAAuB,qCAAqC,mBAAmB,6DAA6D,6BAA6B,IAAI,2CAA2C,GAAG,6DAA6D,aAAa,sBAAsB,mFAAmF,MAAM,kDAAkD,MAAM,kBAAkB,UAAU,mDAAmD,qBAAqB,6CAA6C,aAAa,sCAAsC,cAAc,uCAAuC,EAAE,8CAA8C,wDAAwD,OAAO,cAAc,4BAA4B,iGAAiG,yBAAyB,4CAA4C,iEAAiE,KAAK,4BAA4B,8DAA8D,SAAS,iCAAiC,qCAAqC,oGAAoG,gCAAgC,4BAA4B,kCAAkC,SAAS,4BAA4B,uKAAuK,iBAAiB,8BAA8B,oEAAoE,+BAA+B,gBAAgB,gCAAgC,gBAAgB,sCAAsC,2BAA2B,gCAAgC,WAAW,kSAAkS,gCAAgC,WAAW,gDAAgD,2IAA2I,GAAG,mBAAmB,6EAA6E,4BAA4B,sBAAsB,eAAe,cAAc,4BAA4B,iEAAiE,qGAAqG,EAAE,oBAAoB,4BAA4B,kEAAkE,0CAA0C,oCAAoC,8MAA8M,yBAAyB,kGAAkG,kBAAkB,mCAAmC,uDAAuD,wTAAwT,mCAAmC,0CAA0C,mCAAmC,mCAAmC,iGAAiG,8BAA8B,6DAA6D,mBAAmB,6EAA6E,4BAA4B,sBAAsB,eAAe,gBAAgB,2GAA2G,8PAA8P,cAAc,4BAA4B,mEAAmE,yEAAyE,EAAE,gCAAgC,UAAU,wCAAwC,uHAAuH,gCAAgC,4BAA4B,8MAA8M,2EAA2E,iEAAiE,qBAAqB,iBAAiB,kBAAkB,gDAAgD,EAAE,gCAAgC,4LAA4L,2FAA2F,wDAAwD,eAAe,IAAI,oEAAoE,kCAAkC,mCAAmC,4HAA4H,8HAA8H,8BAA8B,wFAAwF,qBAAqB,mFAAmF,6BAA6B,wDAAwD,2CAA2C,cAAc,mBAAmB,EAAE,EAAE,sBAAsB,eAAe,cAAc,4BAA4B,mCAAmC,iEAAiE,EAAE,kBAAkB,mBAAmB,0EAA0E,gFAAgF,0GAA0G,4DAA4D,mBAAmB,6BAA6B,mBAAmB,EAAE,+EAA+E,WAAW,yEAAyE,WAAW,0CAA0C,aAAa,yCAAyC,EAAE,IAAI,sCAAsC,aAAa,icAAic,sHAAsH,gHAAgH,eAAe,iEAAiE,wBAAwB,kBAAkB,6CAA6C,6HAA6H,sBAAsB,eAAe,cAAc,4BAA4B,+DAA+D,qEAAqE,EAAE,oBAAoB,wBAAwB,qSAAqS,yEAAyE,uBAAuB,wCAAwC,gFAAgF,sDAAsD,sGAAsG,6CAA6C,2DAA2D,wCAAwC,8CAA8C,uDAAuD,wDAAwD,iCAAiC,mDAAmD,+CAA+C,sCAAsC,mCAAmC,iIAAiI,mIAAmI,6BAA6B,oBAAoB,kDAAkD,4DAA4D,0DAA0D,2KAA2K,qCAAqC,UAAU,IAAI,iBAAiB,uEAAuE,yBAAyB,kCAAkC,0CAA0C,yBAAyB,qBAAqB,kHAAkH,EAAE,EAAE,SAAS,C;;;;;;;ACA/yqC,6EAA6E,kGAAkG,iFAAiF,+EAA+E,4CAA4C,GAAG,oBAAoB,sCAAsC,2FAA2F,2FAA2F,uJAAuJ,6HAA6H,4BAA4B,8EAA8E,kJAAkJ,iFAAiF,yFAAyF,cAAc,gHAAgH,+FAA+F,mFAAmF,iGAAiG,YAAY,2JAA2J,oGAAoG,sEAAsE,6BAA6B,6BAA6B,6BAA6B,6BAA6B,+BAA+B,6BAA6B,6BAA6B,6BAA6B,6BAA6B,6BAA6B,6BAA6B,6BAA6B,6BAA6B,6BAA6B,6BAA6B,6BAA6B,6BAA6B,6BAA6B,6BAA6B,+BAA+B,6BAA6B,6BAA6B,6BAA6B,6BAA6B,6BAA6B,6BAA6B,6BAA6B,6BAA6B,6BAA6B,6BAA6B,+BAA+B,+BAA+B,6BAA6B,+BAA+B,6BAA6B,6BAA6B,+BAA+B,6BAA6B,+BAA+B,aAAa,kEAAkE,sPAAsP,iEAAiE,kCAAkC,SAAS,mEAAmE,kCAAkC,SAAS,KAAK,oTAAoT,mDAAmD,mDAAmD,8DAA8D,oDAAoD,uDAAuD,kDAAkD,sDAAsD,gDAAgD,8CAA8C,+CAA+C,+CAA+C,gDAAgD,4CAA4C,gDAAgD,+CAA+C,8CAA8C,iCAAiC,2DAA2D,+CAA+C,gDAAgD,8CAA8C,0CAA0C,yCAAyC,6CAA6C,8EAA8E,ubAAub,oEAAoE,+CAA+C,2CAA2C,iEAAiE,2DAA2D,+GAA+G,mFAAmF,cAAc,SAAS,kGAAkG,gCAAgC,SAAS,gFAAgF,kFAAkF,kFAAkF,8CAA8C,sGAAsG,8BAA8B,8EAA8E,4CAA4C,aAAa,uCAAuC,OAAO,mCAAmC,4DAA4D,OAAO,sCAAsC,qCAAqC,eAAe,kEAAkE,qCAAqC,uBAAuB,yFAAyF,8LAA8L,EAAE,oEAAoE,SAAS,4HAA4H,uCAAuC,OAAO,oFAAoF,uCAAuC,kCAAkC,yEAAyE,uCAAuC,2CAA2C,uEAAuE,uCAAuC,sCAAsC,6EAA6E,uCAAuC,+CAA+C,2EAA2E,uCAAuC,gCAAgC,oGAAoG,uCAAuC,4BAA4B,uFAAuF,kCAAkC,uCAAuC,6BAA6B,4FAA4F,iEAAiE,oIAAoI,uGAAuG,0EAA0E,uCAAuC,aAAa,mDAAmD,0DAA0D,4DAA4D,+FAA+F,SAAS,+CAA+C,+CAA+C,iEAAiE,yDAAyD,+CAA+C,4DAA4D,gDAAgD,+CAA+C,yDAAyD,yDAAyD,aAAa,UAAU,+BAA+B,eAAe,sDAAsD,6BAA6B,UAAU,iCAAiC,uBAAuB,qDAAqD,4BAA4B,UAAU,uFAAuF,oCAAoC,kGAAkG,EAAE,6BAA6B,OAAO,0BAA0B,eAAe,4CAA4C,QAAQ,yCAAyC,QAAQ,+IAA+I,uBAAuB,+GAA+G,aAAa,yBAAyB,4CAA4C,iDAAiD,yCAAyC,6CAA6C,aAAa,2CAA2C,6CAA6C,iEAAiE,wCAAwC,8FAA8F,+DAA+D,aAAa,qEAAqE,+BAA+B,wCAAwC,gBAAgB,8CAA8C,aAAa,kBAAkB,0DAA0D,gKAAgK,+CAA+C,8CAA8C,yDAAyD,uDAAuD,aAAa,UAAU,2FAA2F,2EAA2E,UAAU,iCAAiC,4BAA4B,wDAAwD,+BAA+B,UAAU,iCAAiC,OAAO,yDAAyD,0DAA0D,UAAU,iCAAiC,OAAO,wDAAwD,uCAAuC,UAAU,iCAAiC,OAAO,yDAAyD,wCAAwC,UAAU,iCAAiC,OAAO,mEAAmE,wEAAwE,UAAU,kFAAkF,OAAO,wBAAwB,OAAO,4FAA4F,uCAAuC,uBAAuB,aAAa,8BAA8B,mDAAmD,6GAA6G,8BAA8B,mDAAmD,2EAA2E,uCAAuC,aAAa,EAAE,sDAAsD,UAAU,+BAA+B,OAAO,mBAAmB,OAAO,wBAAwB,OAAO,qCAAqC,OAAO,uCAAuC,OAAO,0CAA0C,OAAO,uFAAuF,8BAA8B,2DAA2D,sCAAsC,4CAA4C,4BAA4B,gEAAgE,uCAAuC,4DAA4D,wBAAwB,uEAAuE,6CAA6C,0DAA0D,iDAAiD,qBAAqB,iBAAiB,EAAE,aAAa,EAAE,oIAAoI,4DAA4D,0CAA0C,aAAa,EAAE,uBAAuB,UAAU,mCAAmC,OAAO,mBAAmB,OAAO,wBAAwB,OAAO,qCAAqC,OAAO,uCAAuC,OAAO,8FAA8F,uCAAuC,uBAAuB,aAAa,qCAAqC,mCAAmC,mCAAmC,sCAAsC,2CAA2C,sCAAsC,qCAAqC,wCAAwC,yCAAyC,oCAAoC,yDAAyD,+DAA+D,kDAAkD,qIAAqI,kFAAkF,gEAAgE,6DAA6D,mEAAmE,sEAAsE,yCAAyC,sKAAsK,EAAE,qBAAqB,iBAAiB,EAAE,8BAA8B,2BAA2B,6BAA6B,8BAA8B,yCAAyC,0CAA0C,yDAAyD,2CAA2C,6CAA6C,oDAAoD,oDAAoD,iDAAiD,gCAAgC,8KAA8K,qBAAqB,EAAE,gCAAgC,iBAAiB,EAAE,wCAAwC,yFAAyF,aAAa,kBAAkB,6CAA6C,aAAa,UAAU,4JAA4J,cAAc,wDAAwD,YAAY,8FAA8F,8XAA8X,mBAAmB,aAAa,0BAA0B,aAAa,uGAAuG,8JAA8J,cAAc,wDAAwD,YAAY,8FAA8F,8XAA8X,mBAAmB,aAAa,0BAA0B,aAAa,2GAA2G,8DAA8D,sCAAsC,wEAAwE,uBAAuB,8DAA8D,6BAA6B,yBAAyB,OAAO,+CAA+C,iJAAiJ,kCAAkC,iBAAiB,aAAa,yBAAyB,qJAAqJ,aAAa,SAAS,2HAA2H,cAAc,wDAAwD,YAAY,8FAA8F,+XAA+X,mBAAmB,aAAa,0BAA0B,QAAQ,gFAAgF,sCAAsC,uBAAuB,8DAA8D,0DAA0D,oFAAoF,0DAA0D,4DAA4D,iEAAiE,qBAAqB,sDAAsD,mEAAmE,wDAAwD,sEAAsE,yBAAyB,8BAA8B,uCAAuC,yQAAyQ,6BAA6B,yBAAyB,qBAAqB,0BAA0B,mCAAmC,kFAAkF,yBAAyB,qBAAqB,iBAAiB,QAAQ,aAAa,QAAQ,8BAA8B,UAAU,0EAA0E,cAAc,2DAA2D,eAAe,8FAA8F,8HAA8H,wRAAwR,OAAO,sHAAsH,sCAAsC,+DAA+D,0BAA0B,EAAE,mDAAmD,yBAAyB,mCAAmC,uEAAuE,iBAAiB,aAAa,+CAA+C,uPAAuP,0JAA0J,UAAU,qFAAqF,+BAA+B,mCAAmC,8BAA8B,qFAAqF,gEAAgE,UAAU,kFAAkF,4BAA4B,gCAAgC,0BAA0B,+EAA+E,yDAAyD,UAAU,iCAAiC,wCAAwC,OAAO,sFAAsF,gEAAgE,4CAA4C,oCAAoC,oDAAoD,kCAAkC,yEAAyE,2BAA2B,iBAAiB,oFAAoF,2cAA2c,uDAAuD,sDAAsD,mDAAmD,gEAAgE,wDAAwD,yHAAyH,2CAA2C,qHAAqH,uCAAuC,wEAAwE,EAAE,iBAAiB,sBAAsB,4EAA4E,wEAAwE,+EAA+E,gDAAgD,4DAA4D,yBAAyB,qBAAqB,8EAA8E,sIAAsI,gFAAgF,EAAE,gEAAgE,qEAAqE,qBAAqB,0BAA0B,+DAA+D,+CAA+C,6EAA6E,EAAE,yBAAyB,iEAAiE,uEAAuE,qBAAqB,iBAAiB,yDAAyD,uCAAuC,iBAAiB,EAAE,qEAAqE,aAAa,yCAAyC,OAAO,0FAA0F,0CAA0C,2EAA2E,2BAA2B,iBAAiB,6DAA6D,2DAA2D,iBAAiB,EAAE,gEAAgE,gFAAgF,aAAa,yCAAyC,OAAO,4FAA4F,0CAA0C,2EAA2E,2BAA2B,iBAAiB,6DAA6D,2DAA2D,iBAAiB,EAAE,sEAAsE,kFAAkF,aAAa,yCAAyC,OAAO,4FAA4F,0CAA0C,2EAA2E,2BAA2B,iBAAiB,wDAAwD,kFAAkF,aAAa,yCAAyC,OAAO,gGAAgG,0CAA0C,+DAA+D,2DAA2D,2DAA2D,aAAa,UAAU,uHAAuH,uCAAuC,sDAAsD,kFAAkF,uBAAuB,aAAa,6BAA6B,8DAA8D,oEAAoE,kEAAkE,+BAA+B,kCAAkC,qDAAqD,wCAAwC,iJAAiJ,6IAA6I,aAAa,SAAS,uCAAuC,qJAAqJ,aAAa,SAAS,2DAA2D,OAAO,wBAAwB,OAAO,2EAA2E,OAAO,4EAA4E,QAAQ,8EAA8E,uBAAuB,4GAA4G,aAAa,2CAA2C,oCAAoC,kFAAkF,6EAA6E,qDAAqD,8FAA8F,4CAA4C,+CAA+C,qDAAqD,qDAAqD,UAAU,+DAA+D,OAAO,qCAAqC,OAAO,0EAA0E,wCAAwC,2BAA2B,0BAA0B,aAAa,qCAAqC,iCAAiC,wCAAwC,2BAA2B,6EAA6E,iBAAiB,uBAAuB,aAAa,0DAA0D,8BAA8B,iCAAiC,yBAAyB,UAAU,sGAAsG,gEAAgE,mCAAmC,UAAU,gCAAgC,OAAO,6BAA6B,OAAO,2EAA2E,0CAA0C,YAAY,yDAAyD,2BAA2B,UAAU,kDAAkD,OAAO,2BAA2B,OAAO,8CAA8C,eAAe,2DAA2D,QAAQ,8DAA8D,QAAQ,wYAAwY,wCAAwC,uBAAuB,eAAe,aAAa,2CAA2C,uBAAuB,aAAa,kGAAkG,mDAAmD,uBAAuB,aAAa,+DAA+D,8BAA8B,qCAAqC,aAAa,iEAAiE,4cAA4c,aAAa,yDAAyD,yDAAyD,UAAU,sDAAsD,2CAA2C,sDAAsD,kDAAkD,mDAAmD,uEAAuE,6CAA6C,uEAAuE,2CAA2C,uCAAuC,gCAAgC,2DAA2D,+BAA+B,sEAAsE,2DAA2D,kBAAkB,sCAAsC,gCAAgC,iBAAiB,EAAE,aAAa,qCAAqC,yBAAyB,uFAAuF,mDAAmD,6IAA6I,4FAA4F,aAAa,8GAA8G,6CAA6C,oHAAoH,qIAAqI,iBAAiB,mCAAmC,6FAA6F,iBAAiB,aAAa,QAAQ,uEAAuE,yEAAyE,kHAAkH,iDAAiD,iBAAiB,sBAAsB,oEAAoE,iBAAiB,aAAa,0EAA0E,4BAA4B,qKAAqK,aAAa,kBAAkB,4CAA4C,aAAa,4CAA4C,8EAA8E,SAAS,gDAAgD,sDAAsD,2CAA2C,qDAAqD,6DAA6D,aAAa,SAAS,gDAAgD,+CAA+C,SAAS,wIAAwI,uEAAuE,uEAAuE,gCAAgC,OAAO,4GAA4G,gCAAgC,oGAAoG,uDAAuD,6EAA6E,qDAAqD,aAAa,QAAQ,6FAA6F,kEAAkE,sEAAsE,8CAA8C,gEAAgE,aAAa,QAAQ,yFAAyF,+EAA+E,mCAAmC,aAAa,EAAE,SAAS,2FAA2F,4BAA4B,mFAAmF,mDAAmD,mFAAmF,8EAA8E,8BAA8B,6BAA6B,qBAAqB,OAAO,4CAA4C,aAAa,qGAAqG,kCAAkC,qDAAqD,+BAA+B,qBAAqB,iBAAiB,sBAAsB,0CAA0C,iBAAiB,0HAA0H,2CAA2C,4BAA4B,+DAA+D,sLAAsL,gCAAgC,2CAA2C,sDAAsD,+CAA+C,4CAA4C,2CAA2C,qBAAqB,0BAA0B,+DAA+D,qBAAqB,iBAAiB,sDAAsD,oCAAoC,qCAAqC,gDAAgD,8GAA8G,aAAa,QAAQ,6BAA6B,qBAAqB,GAAG,uCAAuC,oCAAoC,0CAA0C,qDAAqD,0CAA0C,8CAA8C,oEAAoE,iBAAiB,sBAAsB,wBAAwB,iBAAiB,aAAa,SAAS,kFAAkF,4BAA4B,kFAAkF,yDAAyD,2CAA2C,aAAa,EAAE,SAAS,sFAAsF,oCAAoC,kDAAkD,gDAAgD,4CAA4C,oDAAoD,8DAA8D,2IAA2I,uDAAuD,qBAAqB,iDAAiD,iBAAiB,aAAa,EAAE,SAAS,gIAAgI,4BAA4B,mFAAmF,gCAAgC,iDAAiD,sCAAsC,uDAAuD,iBAAiB,aAAa,EAAE,SAAS,6GAA6G,4BAA4B,2BAA2B,OAAO,0BAA0B,QAAQ,oHAAoH,gCAAgC,wCAAwC,uDAAuD,gDAAgD,aAAa,EAAE,iDAAiD,+GAA+G,aAAa,EAAE,SAAS,kIAAkI,gCAAgC,sGAAsG,2DAA2D,4EAA4E,yDAAyD,aAAa,QAAQ,wDAAwD,sCAAsC,aAAa,QAAQ,8FAA8F,sEAAsE,yCAAyC,qEAAqE,uEAAuE,kDAAkD,oEAAoE,eAAe,QAAQ,yFAAyF,yGAAyG,qCAAqC,+CAA+C,iBAAiB,aAAa,QAAQ,SAAS,iLAAiL,yFAAyF,wDAAwD,mDAAmD,kDAAkD,sCAAsC,+BAA+B,wGAAwG,oCAAoC,qBAAqB,0DAA0D,iGAAiG,uGAAuG,qBAAqB,sHAAsH,iDAAiD,gBAAgB,qBAAqB,mCAAmC,yCAAyC,8CAA8C,sDAAsD,qBAAqB,mBAAmB,QAAQ,aAAa,QAAQ,qEAAqE,oEAAoE,mDAAmD,iBAAiB,QAAQ,aAAa,QAAQ,UAAU,iCAAiC,QAAQ,0DAA0D,kCAAkC,UAAU,kFAAkF,4BAA4B,aAAa,QAAQ,UAAU,+FAA+F,iCAAiC,2BAA2B,+EAA+E,iBAAiB,uBAAuB,aAAa,kCAAkC,kCAAkC,sCAAsC,gEAAgE,gDAAgD,aAAa,EAAE,sDAAsD,4CAA4C,aAAa,EAAE,gFAAgF,wCAAwC,UAAU,0CAA0C,wDAAwD,qCAAqC,4BAA4B,4CAA4C,kCAAkC,8BAA8B,iBAAiB,aAAa,EAAE,4EAA4E,gDAAgD,sCAAsC,gDAAgD,qBAAqB,iBAAiB,EAAE,aAAa,SAAS,8EAA8E,2DAA2D,yBAAyB,wDAAwD,oFAAoF,oEAAoE,oDAAoD,wDAAwD,8BAA8B,iBAAiB,aAAa,EAAE,+DAA+D,iHAAiH,kCAAkC,wDAAwD,8FAA8F,gIAAgI,8CAA8C,mDAAmD,yBAAyB,qBAAqB,iBAAiB,EAAE,aAAa,oGAAoG,uBAAuB,uFAAuF,kEAAkE,iBAAiB,aAAa,oDAAoD,sFAAsF,oDAAoD,iBAAiB,aAAa,EAAE,SAAS,gCAAgC,2DAA2D,yBAAyB,wDAAwD,uDAAuD,mCAAmC,6CAA6C,8EAA8E,0CAA0C,4CAA4C,2DAA2D,iBAAiB,aAAa,EAAE,SAAS,mDAAmD,sDAAsD,gEAAgE,4NAA4N,gCAAgC,6DAA6D,gDAAgD,uGAAuG,yBAAyB,uCAAuC,qBAAqB,iBAAiB,aAAa,EAAE,SAAS,+BAA+B,OAAO,sEAAsE,qEAAqE,OAAO,2CAA2C,gFAAgF,kCAAkC,gEAAgE,+BAA+B,iBAAiB,qEAAqE,+BAA+B,iBAAiB,6DAA6D,iFAAiF,kCAAkC,yDAAyD,qDAAqD,qBAAqB,yCAAyC,gFAAgF,+BAA+B,iCAAiC,sCAAsC,yCAAyC,qDAAqD,+EAA+E,qCAAqC,OAAO,uEAAuE,6CAA6C,UAAU,yCAAyC,mCAAmC,oCAAoC,mCAAmC,qDAAqD,oEAAoE,+BAA+B,mBAAmB,OAAO,+CAA+C,oDAAoD,iBAAiB,aAAa,4EAA4E,qEAAqE,+FAA+F,2DAA2D,mCAAmC,yBAAyB,wEAAwE,6CAA6C,wEAAwE,2FAA2F,6DAA6D,6BAA6B,yBAAyB,EAAE,mFAAmF,iEAAiE,6EAA6E,kEAAkE,6BAA6B,yBAAyB,EAAE,iFAAiF,qBAAqB,iBAAiB,EAAE,aAAa,EAAE,SAAS,gCAAgC,eAAe,uBAAuB,OAAO,2BAA2B,OAAO,wBAAwB,OAAO,kFAAkF,OAAO,yEAAyE,OAAO,iKAAiK,OAAO,gNAAgN,uBAAuB,mJAAmJ,2SAA2S,iBAAiB,6BAA6B,uEAAuE,iBAAiB,aAAa,gEAAgE,gCAAgC,2BAA2B,8FAA8F,iBAAiB,qCAAqC,aAAa,yBAAyB,8TAA8T,oEAAoE,iBAAiB,aAAa,wDAAwD,wCAAwC,wCAAwC,qCAAqC,8DAA8D,aAAa,kBAAkB,kDAAkD,aAAa,mCAAmC,2BAA2B,UAAU,iCAAiC,sCAAsC,iEAAiE,2EAA2E,qCAAqC,+BAA+B,+FAA+F,8CAA8C,8CAA8C,qBAAqB,iBAAiB,EAAE,4DAA4D,sDAAsD,0CAA0C,iBAAiB,EAAE,aAAa,4CAA4C,2BAA2B,UAAU,uDAAuD,OAAO,oEAAoE,6CAA6C,UAAU,iCAAiC,OAAO,mEAAmE,oEAAoE,6CAA6C,6DAA6D,4CAA4C,yCAAyC,aAAa,kDAAkD,8FAA8F,aAAa,oEAAoE,gCAAgC,aAAa,UAAU,iCAAiC,eAAe,wBAAwB,gBAAgB,8DAA8D,oBAAoB,mCAAmC,0DAA0D,aAAa,kBAAkB,6CAA6C,aAAa,kCAAkC,UAAU,gCAAgC,OAAO,wBAAwB,gBAAgB,6DAA6D,kCAAkC,UAAU,yGAAyG,uCAAuC,UAAU,uEAAuE,SAAS,gGAAgG,2DAA2D,UAAU,gCAAgC,OAAO,mCAAmC,SAAS,iGAAiG,iDAAiD,yCAAyC,qDAAqD,aAAa,uBAAuB,sCAAsC,iEAAiE,iBAAiB,aAAa,qCAAqC,+EAA+E,EAAE,UAAU,+DAA+D,SAAS,0FAA0F,iDAAiD,UAAU,gGAAgG,MAAM,EAAE,qDAAqD,MAAM,EAAE,0CAA0C,6DAA6D,6BAA6B,MAAM,aAAa,6BAA6B,gBAAgB,8BAA8B,OAAO,mCAAmC,OAAO,sCAAsC,OAAO,uCAAuC,OAAO,+BAA+B,SAAS,6FAA6F,kDAAkD,mCAAmC,+BAA+B,aAAa,uIAAuI,qDAAqD,MAAM,0HAA0H,yCAAyC,0IAA0I,yCAAyC,uCAAuC,wCAAwC,aAAa,mDAAmD,UAAU,gCAAgC,OAAO,wBAAwB,EAAE,0GAA0G,qEAAqE,UAAU,yFAAyF,OAAO,yBAAyB,sBAAsB,4EAA4E,oEAAoE,kCAAkC,kLAAkL,aAAa,UAAU,iOAAiO,OAAO,mCAAmC,SAAS,wFAAwF,iDAAiD,sCAAsC,kDAAkD,aAAa,uBAAuB,sCAAsC,8DAA8D,iBAAiB,aAAa,8BAA8B,2GAA2G,EAAE,UAAU,gCAAgC,OAAO,mCAAmC,SAAS,wFAAwF,iDAAiD,sCAAsC,iDAAiD,aAAa,uBAAuB,sCAAsC,8DAA8D,iBAAiB,aAAa,8BAA8B,4EAA4E,EAAE,UAAU,gCAAgC,OAAO,8EAA8E,6CAA6C,UAAU,gCAAgC,OAAO,wBAAwB,OAAO,gGAAgG,0CAA0C,gCAAgC,8DAA8D,wFAAwF,gBAAgB,+CAA+C,UAAU,gCAAgC,OAAO,wBAAwB,OAAO,+FAA+F,yCAAyC,gCAAgC,8DAA8D,uFAAuF,gBAAgB,8CAA8C,UAAU,gCAAgC,OAAO,wBAAwB,OAAO,6FAA6F,uCAAuC,gCAAgC,8EAA8E,8DAA8D,wFAAwF,gBAAgB,4CAA4C,UAAU,gCAAgC,OAAO,wBAAwB,OAAO,2FAA2F,qCAAqC,gCAAgC,kEAAkE,8DAA8D,oEAAoE,gBAAgB,0CAA0C,UAAU,iVAAiV,SAAS,yEAAyE,gDAAgD,qDAAqD,wFAAwF,gBAAgB,EAAE,kEAAkE,0CAA0C,UAAU,kFAAkF,8DAA8D,oEAAoE,2DAA2D,qGAAqG,eAAe,gCAAgC,kGAAkG,eAAe,8FAA8F,iDAAiD,gDAAgD,kDAAkD,oDAAoD,gDAAgD,gDAAgD,6CAA6C,iDAAiD,iDAAiD,gDAAgD,4BAA4B,mRAAmR,kDAAkD,aAAa,UAAU,oDAAoD,mDAAmD,wBAAwB,sHAAsH,sBAAsB,yPAAyP,UAAU,mCAAmC,aAAa,6CAA6C,wMAAwM,+CAA+C,yCAAyC,2BAA2B,uBAAuB,4HAA4H,SAAS,cAAc,8CAA8C,SAAS,+BAA+B,6JAA6J,wBAAwB,6BAA6B,qDAAqD,IAAI,YAAY,iDAAiD,uBAAuB,6DAA6D,gEAAgE,2EAA2E,sEAAsE,4DAA4D,2DAA2D,wDAAwD,8EAA8E,kEAAkE,6EAA6E,mDAAmD,4FAA4F,0DAA0D,uEAAuE,gGAAgG,sFAAsF,mEAAmE,oDAAoD,yEAAyE,saAAsa,yEAAyE,yGAAyG,0FAA0F,2GAA2G,iEAAiE,gDAAgD,gFAAgF,8DAA8D,mFAAmF,qDAAqD,oEAAoE,wEAAwE,uFAAuF,8EAA8E,0BAA0B,uCAAuC,6CAA6C,aAAa,qFAAqF,mDAAmD,uBAAuB,kCAAkC,wCAAwC,aAAa,yBAAyB,oCAAoC,0CAA0C,aAAa,yLAAyL,sCAAsC,aAAa,8LAA8L,0QAA0Q,sBAAsB,g2CAAg2C,SAAS,aAAa,kEAAkE,0DAA0D,qBAAqB,8sBAA8sB,+CAA+C,4CAA4C,+BAA+B,mCAAmC,6BAA6B,qCAAqC,qCAAqC,uCAAuC,uDAAuD,sDAAsD,gDAAgD,uFAAuF,OAAO,0BAA0B,2BAA2B,+BAA+B,OAAO,yDAAyD,iHAAiH,oCAAoC,qCAAqC,2EAA2E,2BAA2B,6FAA6F,+CAA+C,mCAAmC,uEAAuE,aAAa,sEAAsE,oJAAoJ,iFAAiF,yCAAyC,aAAa,yCAAyC,OAAO,+QAA+Q,QAAQ,iFAAiF,0CAA0C,wDAAwD,qDAAqD,oFAAoF,gEAAgE,wDAAwD,qBAAqB,0BAA0B,2CAA2C,qDAAqD,qBAAqB,yCAAyC,iBAAiB,gEAAgE,uCAAuC,iBAAiB,4EAA4E,+EAA+E,+FAA+F,iBAAiB,yEAAyE,qFAAqF,8CAA8C,mEAAmE,gFAAgF,yBAAyB,QAAQ,qBAAqB,iBAAiB,uCAAuC,aAAa,yGAAyG,yCAAyC,wDAAwD,qCAAqC,6HAA6H,kDAAkD,+BAA+B,qBAAqB,+DAA+D,kNAAkN,qBAAqB,0BAA0B,mDAAmD,qBAAqB,iBAAiB,EAAE,2MAA2M,kEAAkE,mEAAmE,2FAA2F,2JAA2J,yDAAyD,uHAAuH,8CAA8C,4CAA4C,6DAA6D,+FAA+F,yBAAyB,qBAAqB,EAAE,0IAA0I,4CAA4C,oDAAoD,oEAAoE,8DAA8D,6DAA6D,+LAA+L,0FAA0F,oLAAoL,yDAAyD,QAAQ,2DAA2D,SAAS,yBAAyB,8BAA8B,sLAAsL,oGAAoG,8EAA8E,+EAA+E,kFAAkF,6BAA6B,kCAAkC,+JAA+J,2KAA2K,yFAAyF,iLAAiL,wEAAwE,wFAAwF,+WAA+W,6BAA6B,yBAAyB,8EAA8E,wEAAwE,qBAAqB,QAAQ,qGAAqG,+FAA+F,qBAAqB,iBAAiB,aAAa,2IAA2I,OAAO,mDAAmD,uDAAuD,0DAA0D,4DAA4D,oEAAoE,qDAAqD,QAAQ,OAAO,2HAA2H,kDAAkD,6BAA6B,yBAAyB,gDAAgD,qBAAqB,iBAAiB,EAAE,kDAAkD,gCAAgC,aAAa,0CAA0C,2BAA2B,kDAAkD,mCAAmC,aAAa,yCAAyC,OAAO,gCAAgC,OAAO,gCAAgC,+BAA+B,mEAAmE,6DAA6D,2BAA2B,0CAA0C,iBAAiB,aAAa,mIAAmI,OAAO,iCAAiC,OAAO,0CAA0C,OAAO,6EAA6E,sBAAsB,2EAA2E,sBAAsB,wEAAwE,sBAAsB,2EAA2E,uCAAuC,kEAAkE,kDAAkD,gCAAgC,8BAA8B,iBAAiB,8CAA8C,sCAAsC,0CAA0C,+DAA+D,8CAA8C,8BAA8B,iBAAiB,6BAA6B,sCAAsC,0CAA0C,wCAAwC,qBAAqB,+DAA+D,yCAAyC,qBAAqB,mBAAmB,qCAAqC,qBAAqB,EAAE,iBAAiB,sCAAsC,gDAAgD,0DAA0D,mIAAmI,qBAAqB,EAAE,iBAAiB,wCAAwC,oDAAoD,0DAA0D,+IAA+I,qBAAqB,EAAE,iBAAiB,sBAAsB,oGAAoG,iBAAiB,4DAA4D,aAAa,sOAAsO,8BAA8B,mBAAmB,iBAAiB,+DAA+D,4CAA4C,mBAAmB,iBAAiB,+DAA+D,mBAAmB,6CAA6C,IAAI,iBAAiB,gGAAgG,OAAO,iCAAiC,OAAO,qDAAqD,OAAO,qDAAqD,OAAO,yBAAyB,yBAAyB,yTAAyT,SAAS,iFAAiF,uCAAuC,iEAAiE,4CAA4C,kDAAkD,sDAAsD,mJAAmJ,sEAAsE,4CAA4C,uDAAuD,iDAAiD,qDAAqD,uOAAuO,+QAA+Q,+BAA+B,iBAAiB,0CAA0C,kIAAkI,iBAAiB,aAAa,6GAA6G,sCAAsC,EAAE,qEAAqE,2IAA2I,EAAE,iDAAiD,8BAA8B,mBAAmB,6CAA6C,IAAI,iBAAiB,iDAAiD,4CAA4C,mBAAmB,6CAA6C,IAAI,iBAAiB,qCAAqC,eAAe,mKAAmK,SAAS,0BAA0B,EAAE,oFAAoF,wDAAwD,uDAAuD,iCAAiC,kCAAkC,6EAA6E,sEAAsE,8EAA8E,yBAAyB,EAAE,qBAAqB,EAAE,iBAAiB,qDAAqD,mEAAmE,iBAAiB,8CAA8C,oEAAoE,mDAAmD,iBAAiB,aAAa,yCAAyC,OAAO,6BAA6B,oCAAoC,6DAA6D,+DAA+D,4DAA4D,mDAAmD,iBAAiB,EAAE,aAAa,yCAAyC,OAAO,oCAAoC,4BAA4B,qEAAqE,sEAAsE,aAAa,yCAAyC,OAAO,gCAAgC,oCAAoC,gEAAgE,+DAA+D,4DAA4D,yDAAyD,iBAAiB,EAAE,aAAa,0CAA0C,oCAAoC,mDAAmD,iEAAiE,aAAa,8IAA8I,SAAS,0BAA0B,EAAE,uEAAuE,8CAA8C,qEAAqE,mFAAmF,6DAA6D,iBAAiB,QAAQ,aAAa,yGAAyG,SAAS,0BAA0B,EAAE,0EAA0E,qEAAqE,aAAa,+IAA+I,OAAO,+BAA+B,SAAS,0BAA0B,EAAE,sFAAsF,8CAA8C,qEAAqE,mFAAmF,qDAAqD,iEAAiE,qBAAqB,iBAAiB,QAAQ,aAAa,uHAAuH,OAAO,+BAA+B,SAAS,0BAA0B,EAAE,yFAAyF,wEAAwE,aAAa,yCAAyC,4BAA4B,iFAAiF,8CAA8C,2FAA2F,aAAa,0CAA0C,eAAe,iEAAiE,2DAA2D,aAAa,yCAAyC,SAAS,0BAA0B,EAAE,yEAAyE,8CAA8C,gIAAgI,0EAA0E,aAAa,yCAAyC,wDAAwD,yFAAyF,0CAA0C,yEAAyE,uDAAuD,iBAAiB,EAAE,4MAA4M,qFAAqF,oDAAoD,yBAAyB,EAAE,qBAAqB,kBAAkB,aAAa,WAAW,EAAE,qFAAqF,2DAA2D,sHAAsH,wDAAwD,oLAAoL,qBAAqB,0BAA0B,mDAAmD,qDAAqD,yBAAyB,qBAAqB,iBAAiB,aAAa,EAAE,SAAS,yCAAyC,oCAAoC,uJAAuJ,2CAA2C,8CAA8C,yJAAyJ,oDAAoD,8FAA8F,WAAW,EAAE,sLAAsL,eAAe,6EAA6E,yDAAyD,mIAAmI,2CAA2C,SAAS,iDAAiD,sBAAsB,sCAAsC,OAAO,OAAO,OAAO,eAAe,eAAe,+EAA+E,yCAAyC,6CAA6C,aAAa,2BAA2B,yCAAyC,oEAAoE,aAAa,EAAE,yBAAyB,SAAS,oHAAoH,6SAA6S,kGAAkG,SAAS,6FAA6F,wDAAwD,6CAA6C,aAAa,QAAQ,SAAS,kGAAkG,yNAAyN,6DAA6D,iBAAiB,8BAA8B,SAAS,4FAA4F,qLAAqL,8CAA8C,sEAAsE,iBAAiB,aAAa,SAAS,6DAA6D,uCAAuC,aAAa,6CAA6C,qHAAqH,4TAA4T,6BAA6B,kWAAkW,sDAAsD,2CAA2C,+CAA+C,6CAA6C,2CAA2C,uCAAuC,6CAA6C,+pBAA+pB,EAAE,2BAA2B,EAAE,+CAA+C,8DAA8D,8BAA8B,aAAa,kCAAkC,mDAAmD,iDAAiD,4BAA4B,oDAAoD,SAAS,OAAO,iDAAiD,iBAAiB,aAAa,4CAA4C,yDAAyD,aAAa,0FAA0F,4BAA4B,yCAAyC,qDAAqD,yDAAyD,qBAAqB,iBAAiB,aAAa,4BAA4B,SAAS,6EAA6E,EAAE,0BAA0B,EAAE,0BAA0B,QAAQ,gFAAgF,sJAAsJ,0DAA0D,aAAa,uCAAuC,iDAAiD,iDAAiD,iDAAiD,ggBAAggB,+GAA+G,qBAAqB,6DAA6D,wLAAwL,qBAAqB,iBAAiB,aAAa,4BAA4B,SAAS,gCAAgC,MAAM,wFAAwF,QAAQ,sCAAsC,EAAE,0EAA0E,6CAA6C,0DAA0D,SAAS,OAAO,uEAAuE,aAAa,0BAA0B,SAAS,gCAAgC,EAAE,0BAA0B,EAAE,wGAAwG,qCAAqC,iDAAiD,8CAA8C,iBAAiB,aAAa,0BAA0B,SAAS,gCAAgC,EAAE,0BAA0B,EAAE,0BAA0B,OAAO,4HAA4H,qCAAqC,6IAA6I,8CAA8C,iBAAiB,aAAa,0BAA0B,SAAS,mCAAmC,oDAAoD,SAAS,iCAAiC,+BAA+B,wBAAwB,+MAA+M,aAAa,wBAAwB,SAAS,qIAAqI,wBAAwB,oCAAoC,gDAAgD,iBAAiB,mDAAmD,SAAS,OAAO,6CAA6C,iCAAiC,qBAAqB,iBAAiB,aAAa,sBAAsB,SAAS,yGAAyG,SAAS,4BAA4B,SAAS,qEAAqE,iDAAiD,2BAA2B,8CAA8C,sCAAsC,gDAAgD,6DAA6D,aAAa,gDAAgD,yCAAyC,SAAS,6EAA6E,gBAAgB,0BAA0B,gBAAgB,yBAAyB,QAAQ,oEAAoE,uEAAuE,uEAAuE,gDAAgD,SAAS,gEAAgE,iBAAiB,oDAAoD,yBAAyB,uBAAuB,aAAa,0CAA0C,6BAA6B,aAAa,kDAAkD,SAAS,+FAA+F,aAAa,uBAAuB,SAAS,sBAAsB,EAAE,8DAA8D,+BAA+B,uBAAuB,aAAa,+DAA+D,yCAAyC,aAAa,kDAAkD,iDAAiD,SAAS,OAAO,qDAAqD,iBAAiB,aAAa,kBAAkB,sCAAsC,kDAAkD,6DAA6D,qBAAqB,iBAAiB,aAAa,SAAS,4FAA4F,MAAM,uBAAuB,SAAS,sBAAsB,EAAE,8BAA8B,MAAM,mDAAmD,+BAA+B,uBAAuB,aAAa,mDAAmD,4CAA4C,aAAa,kBAAkB,gCAAgC,iDAAiD,SAAS,OAAO,kEAAkE,iBAAiB,8BAA8B,aAAa,SAAS,6EAA6E,MAAM,uBAAuB,SAAS,sBAAsB,OAAO,0BAA0B,EAAE,8BAA8B,MAAM,4DAA4D,+BAA+B,uBAAuB,aAAa,4DAA4D,qDAAqD,aAAa,kBAAkB,iDAAiD,SAAS,OAAO,kEAAkE,iBAAiB,4BAA4B,aAAa,SAAS,4FAA4F,MAAM,uBAAuB,SAAS,sBAAsB,EAAE,8BAA8B,MAAM,sDAAsD,+BAA+B,uBAAuB,aAAa,4DAA4D,+CAA+C,aAAa,kBAAkB,gCAAgC,iDAAiD,SAAS,OAAO,2DAA2D,4CAA4C,qBAAqB,iBAAiB,8BAA8B,aAAa,SAAS,6FAA6F,MAAM,uBAAuB,SAAS,sBAAsB,EAAE,8BAA8B,MAAM,oDAAoD,+BAA+B,uBAAuB,aAAa,6CAA6C,SAAS,OAAO,uDAAuD,kCAAkC,iBAAiB,aAAa,SAAS,6EAA6E,SAAS,wBAAwB,EAAE,4BAA4B,SAAS,iDAAiD,sDAAsD,gCAAgC,qFAAqF,cAAc,SAAS,6EAA6E,SAAS,yBAAyB,SAAS,yCAAyC,sDAAsD,gCAAgC,kFAAkF,cAAc,SAAS,6EAA6E,EAAE,0BAA0B,QAAQ,4CAA4C,gEAAgE,SAAS,6EAA6E,EAAE,0BAA0B,QAAQ,+CAA+C,+CAA+C,SAAS,6EAA6E,EAAE,0BAA0B,QAAQ,6CAA6C,iEAAiE,SAAS,6EAA6E,EAAE,0BAA0B,QAAQ,6CAA6C,6KAA6K,wEAAwE,SAAS,6EAA6E,EAAE,0BAA0B,QAAQ,oDAAoD,6DAA6D,SAAS,6EAA6E,EAAE,0BAA0B,QAAQ,0CAA0C,4JAA4J,SAAS,kGAAkG,EAAE,0BAA0B,QAAQ,0CAA0C,mCAAmC,SAAS,oKAAoK,EAAE,0DAA0D,mDAAmD,SAAS,OAAO,2CAA2C,wCAAwC,iBAAiB,aAAa,SAAS,6EAA6E,MAAM,uBAAuB,OAAO,8BAA8B,OAAO,6BAA6B,MAAM,qCAAqC,+DAA+D,SAAS,6EAA6E,QAAQ,6BAA6B,OAAO,gEAAgE,6BAA6B,yCAAyC,aAAa,SAAS,gDAAgD,qJAAqJ,qCAAqC,SAAS,qCAAqC,qCAAqC,SAAS,uDAAuD,OAAO,wEAAwE,oDAAoD,qCAAqC,aAAa,QAAQ,SAAS,qGAAqG,uCAAuC,+BAA+B,wPAAwP,mDAAmD,aAAa,yCAAyC,oDAAoD,kKAAkK,8BAA8B,aAAa,6LAA6L,+DAA+D,+CAA+C,gJAAgJ,iBAAiB,aAAa,uGAAuG,iCAAiC,aAAa,UAAU,uCAAuC,oCAAoC,SAAS,sBAAsB,45BAA45B,UAAU,8BAA8B,eAAe,kEAAkE,wDAAwD,gDAAgD,4CAA4C,4CAA4C,+BAA+B,uCAAuC,6BAA6B,8FAA8F,EAAE,0BAA0B,MAAM,mFAAmF,6IAA6I,UAAU,yKAAyK,4BAA4B,iHAAiH,+DAA+D,oBAAoB,+BAA+B,qDAAqD,gBAAgB,mBAAmB,OAAO,uBAAuB,eAAe,iFAAiF,sBAAsB,oEAAoE,8DAA8D,6GAA6G,8FAA8F,sCAAsC,sDAAsD,qBAAqB,iBAAiB,EAAE,aAAa,UAAU,yGAAyG,kDAAkD,WAAW,eAAe,eAAe,2EAA2E,gCAAgC,6BAA6B,8CAA8C,qEAAqE,yHAAyH,UAAU,kDAAkD,WAAW,eAAe,eAAe,sGAAsG,gCAAgC,8EAA8E,qFAAqF,iJAAiJ,UAAU,oFAAoF,mBAAmB,yBAAyB,cAAc,qIAAqI,uFAAuF,wCAAwC,6BAA6B,aAAa,+MAA+M,qDAAqD,aAAa,8OAA8O,0DAA0D,mIAAmI,yBAAyB,wBAAwB,OAAO,uBAAuB,OAAO,qCAAqC,OAAO,8BAA8B,OAAO,kCAAkC,OAAO,yFAAyF,oCAAoC,2DAA2D,gDAAgD,wCAAwC,0CAA0C,wCAAwC,2CAA2C,4BAA4B,cAAc,yBAAyB,UAAU,uEAAuE,6EAA6E,OAAO,iCAAiC,OAAO,mCAAmC,OAAO,0EAA0E,kDAAkD,qEAAqE,+DAA+D,yDAAyD,6DAA6D,mEAAmE,0BAA0B,uuBAAuuB,aAAa,oEAAoE,OAAO,iCAAiC,OAAO,gEAAgE,OAAO,kCAAkC,OAAO,kCAAkC,OAAO,4CAA4C,OAAO,2GAA2G,4CAA4C,kDAAkD,6DAA6D,uEAAuE,0EAA0E,0DAA0D,iBAAiB,6FAA6F,wDAAwD,2CAA2C,6CAA6C,iBAAiB,yDAAyD,mEAAmE,iBAAiB,aAAa,+EAA+E,OAAO,2BAA2B,OAAO,mCAAmC,OAAO,kEAAkE,kDAAkD,wDAAwD,uCAAuC,mIAAmI,iBAAiB,aAAa,8EAA8E,OAAO,iCAAiC,QAAQ,8CAA8C,OAAO,mCAAmC,OAAO,8EAA8E,mGAAmG,sDAAsD,0BAA0B,sBAAsB,kCAAkC,eAAe,gBAAgB,wBAAwB,IAAI,4JAA4J,oeAAoe,2EAA2E,wBAAwB,YAAY,aAAa,EAAE,iHAAiH,2CAA2C,2BAA2B,iBAAiB,4EAA4E,mBAAmB,OAAO,oNAAoN,qDAAqD,oDAAoD,+BAA+B,qBAAqB,iBAAiB,iCAAiC,mBAAmB,OAAO,gDAAgD,gdAAgd,qDAAqD,oDAAoD,+BAA+B,qBAAqB,iBAAiB,aAAa,EAAE,yGAAyG,2CAA2C,2BAA2B,iBAAiB,4BAA4B,sBAAsB,mBAAmB,OAAO,gDAAgD,svBAAsvB,qDAAqD,8BAA8B,qBAAqB,iBAAiB,2CAA2C,iCAAiC,kBAAkB,EAAE,iBAAiB,aAAa,EAAE,4BAA4B,UAAU,sKAAsK,eAAe,gBAAgB,wBAAwB,IAAI,4FAA4F,eAAe,8EAA8E,ynBAAynB,sDAAsD,0CAA0C,yDAAyD,aAAa,EAAE,sDAAsD,sCAAsC,wMAAwM,mEAAmE,mDAAmD,EAAE,aAAa,EAAE,sFAAsF,0CAA0C,sCAAsC,2CAA2C,uCAAuC,2BAA2B,iBAAiB,+dAA+d,iFAAiF,6CAA6C,iBAAiB,0CAA0C,6CAA6C,iBAAiB,sBAAsB,kFAAkF,UAAU,GAAG,UAAU,GAAG,GAAG,mCAAmC,GAAG,GAAG,UAAU,GAAG,UAAU,uJAAuJ,wBAAwB,4EAA4E,qBAAqB,kDAAkD,iBAAiB,8CAA8C,aAAa,EAAE,UAAU,kDAAkD,OAAO,8BAA8B,QAAQ,+DAA+D,wIAAwI,UAAU,4KAA4K,eAAe,gBAAgB,mCAAmC,yBAAyB,eAAe,gBAAgB,mCAAmC,0BAA0B,uCAAuC,+GAA+G,0BAA0B,0BAA0B,0CAA0C,8CAA8C,0DAA0D,4DAA4D,yDAAyD,SAAS,OAAO,2DAA2D,2FAA2F,0EAA0E,gEAAgE,UAAU,OAAO,uDAAuD,gFAAgF,+DAA+D,yBAAyB,8BAA8B,iEAAiE,kBAAkB,yBAAyB,qBAAqB,iBAAiB,aAAa,gDAAgD,gCAAgC,oCAAoC,kEAAkE,qCAAqC,4CAA4C,yBAAyB,8BAA8B,uEAAuE,+DAA+D,oCAAoC,EAAE,yBAAyB,qBAAqB,iBAAiB,8BAA8B,aAAa,UAAU,gCAAgC,yBAAyB,wBAAwB,OAAO,uKAAuK,sBAAsB,uHAAuH,kDAAkD,+CAA+C,aAAa,iDAAiD,8HAA8H,2DAA2D,qBAAqB,+DAA+D,aAAa,4CAA4C,oHAAoH,uDAAuD,qBAAqB,sDAAsD,aAAa,UAAU,kMAAkM,6CAA6C,kDAAkD,+BAA+B,8BAA8B,SAAS,wDAAwD,0BAA0B,gCAAgC,2DAA2D,2CAA2C,6DAA6D,EAAE,kBAAkB,cAAc,SAAS,IAAI,gCAAgC,4BAA4B,2BAA2B,cAAc,wDAAwD,YAAY,8FAA8F,mXAAmX,uJAAuJ,8IAA8I,wLAAwL,OAAO,yBAAyB,OAAO,yCAAyC,eAAe,2CAA2C,OAAO,gCAAgC,qSAAqS,4EAA4E,0CAA0C,6BAA6B,0CAA0C,6BAA6B,aAAa,+DAA+D,wNAAwN,sDAAsD,aAAa,8BAA8B,kDAAkD,wCAAwC,sIAAsI,wCAAwC,2BAA2B,iBAAiB,6EAA6E,4CAA4C,mEAAmE,mSAAmS,2BAA2B,iBAAiB,oCAAoC,oBAAoB,+DAA+D,kDAAkD,iBAAiB,mEAAmE,qDAAqD,uDAAuD,aAAa,EAAE,4BAA4B,UAAU,8BAA8B,8CAA8C,mBAAmB,yBAAyB,wBAAwB,cAAc,4BAA4B,OAAO,2EAA2E,6CAA6C,iDAAiD,2BAA2B,uBAAuB,OAAO,mEAAmE,+CAA+C,4CAA4C,iBAAiB,aAAa,UAAU,8BAA8B,8CAA8C,mBAAmB,yBAAyB,wBAAwB,OAAO,6BAA6B,eAAe,6GAA6G,6BAA6B,sDAAsD,6DAA6D,oDAAoD,kEAAkE,iBAAiB,aAAa,EAAE,2BAA2B,UAAU,8BAA8B,8CAA8C,mBAAmB,yBAAyB,wBAAwB,OAAO,4GAA4G,eAAe,6GAA6G,6BAA6B,sDAAsD,6DAA6D,kDAAkD,mDAAmD,6DAA6D,qDAAqD,iBAAiB,aAAa,EAAE,2BAA2B,UAAU,mCAAmC,mDAAmD,SAAS,qCAAqC,eAAe,kEAAkE,oDAAoD,gDAAgD,iDAAiD,8BAA8B,qDAAqD,cAAc,sBAAsB,OAAO,wDAAwD,2BAA2B,2BAA2B,aAAa,oCAAoC,sCAAsC,IAAI,WAAW,EAAE,2EAA2E,UAAU,gCAAgC,OAAO,uBAAuB,QAAQ,2CAA2C,OAAO,gFAAgF,sFAAsF,4CAA4C,aAAa,EAAE,0CAA0C,iEAAiE,aAAa,yBAAyB,UAAU,qMAAqM,sBAAsB,sEAAsE,iCAAiC,4CAA4C,4CAA4C,aAAa,iCAAiC,gGAAgG,aAAa,iCAAiC,oGAAoG,aAAa,uBAAuB,UAAU,sEAAsE,sEAAsE,sCAAsC,sCAAsC,yCAAyC,uCAAuC,GAAG,UAAU,kEAAkE,uDAAuD,qBAAqB,uDAAuD,EAAE,UAAU,6DAA6D,OAAO,uBAAuB,sBAAsB,8BAA8B,QAAQ,mCAAmC,OAAO,8EAA8E,8CAA8C,0CAA0C,aAAa,8CAA8C,6BAA6B,0BAA0B,aAAa,oDAAoD,2BAA2B,kBAAkB,OAAO,6CAA6C,4CAA4C,kFAAkF,aAAa,mCAAmC,uBAAuB,eAAe,+BAA+B,kBAAkB,OAAO,8DAA8D,+KAA+K,iBAAiB,aAAa,yBAAyB,UAAU,8EAA8E,OAAO,uBAAuB,OAAO,yBAAyB,QAAQ,mCAAmC,OAAO,+EAA+E,sDAAsD,wDAAwD,YAAY,0EAA0E,aAAa,EAAE,uBAAuB,UAAU,gCAAgC,OAAO,yBAAyB,OAAO,mCAAmC,OAAO,iFAAiF,8EAA8E,iBAAiB,2CAA2C,UAAU,WAAW,yEAAyE,4DAA4D,UAAU,gCAAgC,OAAO,wBAAwB,OAAO,8DAA8D,gDAAgD,UAAU,0DAA0D,OAAO,uBAAuB,OAAO,yBAAyB,QAAQ,mPAAmP,0LAA0L,qCAAqC,aAAa,qDAAqD,yCAAyC,qDAAqD,sDAAsD,iDAAiD,kDAAkD,oDAAoD,oDAAoD,8aAA8a,yBAAyB,UAAU,wDAAwD,OAAO,wBAAwB,OAAO,6DAA6D,2EAA2E,UAAU,6DAA6D,sCAAsC,eAAe,kEAAkE,iHAAiH,0BAA0B,oCAAoC,+BAA+B,iEAAiE,SAAS,sIAAsI,wBAAwB,wBAAwB,eAAe,gFAAgF,eAAe,6EAA6E,QAAQ,0BAA0B,uBAAuB,4EAA4E,kDAAkD,+CAA+C,oCAAoC,mHAAmH,aAAa,0TAA0T,oCAAoC,2CAA2C,wCAAwC,qBAAqB,gDAAgD,wCAAwC,qBAAqB,iBAAiB,sBAAsB,2CAA2C,wCAAwC,qBAAqB,gDAAgD,wCAAwC,qBAAqB,iBAAiB,aAAa,kBAAkB,wCAAwC,oCAAoC,iBAAiB,wCAAwC,oCAAoC,iBAAiB,aAAa,yEAAyE,UAAU,uMAAuM,cAAc,2BAA2B,OAAO,wBAAwB,OAAO,iEAAiE,8BAA8B,gGAAgG,0BAA0B,0FAA0F,0BAA0B,gGAAgG,0BAA0B,aAAa,8CAA8C,iDAAiD,2DAA2D,iBAAiB,6CAA6C,aAAa,sDAAsD,UAAU,6KAA6K,OAAO,qBAAqB,OAAO,+BAA+B,QAAQ,gCAAgC,cAAc,sEAAsE,oCAAoC,+BAA+B,aAAa,6FAA6F,wCAAwC,sCAAsC,UAAU,uCAAuC,sCAAsC,6BAA6B,aAAa,EAAE,uBAAuB,UAAU,wDAAwD,OAAO,6DAA6D,uBAAuB,6BAA6B,yBAAyB,aAAa,iIAAiI,6DAA6D,qEAAqE,0BAA0B,qDAAqD,wBAAwB,wBAAwB,aAAa,yBAAyB,UAAU,gCAAgC,cAAc,wBAAwB,OAAO,6DAA6D,qCAAqC,4GAA4G,6BAA6B,uDAAuD,sDAAsD,aAAa,kBAAkB,gDAAgD,oEAAoE,aAAa,UAAU,oHAAoH,eAAe,8BAA8B,eAAe,gCAAgC,OAAO,4FAA4F,+BAA+B,iCAAiC,qFAAqF,iGAAiG,sJAAsJ,yDAAyD,UAAU,gQAAgQ,eAAe,gDAAgD,OAAO,sEAAsE,OAAO,yEAAyE,OAAO,wHAAwH,kCAAkC,yBAAyB,aAAa,sEAAsE,oDAAoD,aAAa,KAAK,4BAA4B,yBAAyB,aAAa,mDAAmD,sEAAsE,mEAAmE,aAAa,EAAE,2CAA2C,sEAAsE,mFAAmF,aAAa,EAAE,uEAAuE,iCAAiC,aAAa,KAAK,+EAA+E,0CAA0C,aAAa,EAAE,oFAAoF,kGAAkG,iCAAiC,uDAAuD,SAAS,OAAO,6CAA6C,2CAA2C,kCAAkC,qBAAqB,iBAAiB,gFAAgF,qCAAqC,6BAA6B,aAAa,yCAAyC,UAAU,2GAA2G,sFAAsF,OAAO,2BAA2B,OAAO,yDAAyD,kCAAkC,8CAA8C,UAAU,gCAAgC,KAAK,2BAA2B,QAAQ,+DAA+D,iEAAiE,UAAU,mCAAmC,EAAE,eAAe,IAAI,eAAe,IAAI,aAAa,IAAI,kFAAkF,uDAAuD,OAAO,sEAAsE,oDAAoD,UAAU,gCAAgC,mBAAmB,45BAA45B,KAAK,6DAA6D,wCAAwC,6BAA6B,aAAa,iDAAiD,iVAAiV,+BAA+B,oFAAoF,iBAAiB,kEAAkE,2NAA2N,0aAA0a,aAAa,qCAAqC,qCAAqC,aAAa,iDAAiD,UAAU,gGAAgG,OAAO,wBAAwB,OAAO,qDAAqD,uDAAuD,UAAU,0CAA0C,yDAAyD,SAAS,sYAAsY,OAAO,4CAA4C,QAAQ,0BAA0B,OAAO,wDAAwD,iDAAiD,+CAA+C,gCAAgC,kCAAkC,wBAAwB,8BAA8B,QAAQ,EAAE,mCAAmC,QAAQ,EAAE,iCAAiC,QAAQ,EAAE,iCAAiC,QAAQ,EAAE,sBAAsB,SAAS,EAAE,aAAa,kBAAkB,4BAA4B,QAAQ,EAAE,iCAAiC,QAAQ,EAAE,iCAAiC,QAAQ,EAAE,iCAAiC,QAAQ,EAAE,sBAAsB,SAAS,EAAE,aAAa,6BAA6B,iNAAiN,UAAU,uIAAuI,kCAAkC,iBAAiB,0CAA0C,iBAAiB,oCAAoC,iBAAiB,mCAAmC,iBAAiB,mCAAmC,iBAAiB,oCAAoC,iBAAiB,yCAAyC,wCAAwC,0CAA0C,iBAAiB,oCAAoC,iBAAiB,mCAAmC,iBAAiB,kCAAkC,iBAAiB,mCAAmC,iBAAiB,yCAAyC,cAAc,mBAAmB,eAAe,uHAAuH,eAAe,uGAAuG,uCAAuC,oDAAoD,aAAa,EAAE,mCAAmC,8BAA8B,2BAA2B,iBAAiB,GAAG,gDAAgD,0CAA0C,kCAAkC,QAAQ,QAAQ,+CAA+C,4CAA4C,4DAA4D,qBAAqB,wCAAwC,0CAA0C,iBAAiB,iFAAiF,sCAAsC,iBAAiB,sBAAsB,wBAAwB,iBAAiB,aAAa,0BAA0B,6CAA6C,uVAAuV,aAAa,UAAU,oQAAoQ,EAAE,sBAAsB,QAAQ,oDAAoD,0CAA0C,UAAU,kCAAkC,aAAa,kEAAkE,wCAAwC,sCAAsC,kCAAkC,4CAA4C,kDAAkD,qCAAqC,iDAAiD,4CAA4C,sCAAsC,2CAA2C,aAAa,uDAAuD,0BAA0B,mDAAmD,OAAO,OAAO,oJAAoJ,aAAa,2DAA2D,0CAA0C,oCAAoC,aAAa,oCAAoC,wCAAwC,2BAA2B,SAAS,yEAAyE,sEAAsE,uDAAuD,sFAAsF,kDAAkD,+DAA+D,+FAA+F,qCAAqC,yGAAyG,0BAA0B,2EAA2E,0BAA0B,6EAA6E,6EAA6E,iGAAiG,0BAA0B,2EAA2E,0BAA0B,4EAA4E,0BAA0B,SAAS,qFAAqF,6BAA6B,2BAA2B,uCAAuC,mCAAmC,+CAA+C,mDAAmD,sEAAsE,qCAAqC,qCAAqC,8DAA8D,oCAAoC,wCAAwC,0BAA0B,uEAAuE,oCAAoC,uCAAuC,0BAA0B,8DAA8D,4DAA4D,yCAAyC,0BAA0B,iEAAiE,wDAAwD,yCAAyC,0BAA0B,iEAAiE,oCAAoC,yCAAyC,0BAA0B,oEAAoE,oCAAoC,uCAAuC,0BAA0B,6EAA6E,oCAAoC,wCAAwC,0BAA0B,oEAAoE,+CAA+C,yCAAyC,0BAA0B,uEAAuE,qEAAqE,yCAAyC,0BAA0B,uEAAuE,+CAA+C,uCAAuC,0BAA0B,gFAAgF,+CAA+C,wCAAwC,0BAA0B,0EAA0E,qEAAqE,0BAA0B,mFAAmF,qEAAqE,wCAAwC,0BAA0B,aAAa,sBAAsB,uIAAuI,SAAS,gFAAgF,OAAO,yBAAyB,OAAO,mCAAmC,OAAO,6BAA6B,OAAO,qCAAqC,OAAO,8BAA8B,OAAO,8CAA8C,OAAO,6MAA6M,OAAO,sFAAsF,OAAO,6FAA6F,kCAAkC,0BAA0B,aAAa,sCAAsC,mDAAmD,mEAAmE,uDAAuD,6GAA6G,yHAAyH,gEAAgE,0QAA0Q,gDAAgD,6CAA6C,OAAO,6CAA6C,aAAa,yDAAyD,+CAA+C,8BAA8B,kCAAkC,aAAa,4DAA4D,uDAAuD,qDAAqD,SAAS,OAAO,4CAA4C,iEAAiE,oDAAoD,6BAA6B,iBAAiB,kCAAkC,OAAO,0EAA0E,6CAA6C,8BAA8B,qBAAqB,2RAA2R,+DAA+D,iEAAiE,iBAAiB,wCAAwC,2CAA2C,iBAAiB,0CAA0C,aAAa,2CAA2C,SAAS,kFAAkF,0BAA0B,sBAAsB,uCAAuC,iCAAiC,OAAO,kDAAkD,yFAAyF,aAAa,qBAAqB,SAAS,6BAA6B,gPAAgP,4CAA4C,yDAAyD,6CAA6C,aAAa,UAAU,uCAAuC,aAAa,kEAAkE,mBAAmB,qGAAqG,6CAA6C,qDAAqD,+BAA+B,+BAA+B,4HAA4H,8BAA8B,8BAA8B,+BAA+B,aAAa,6BAA6B,+BAA+B,iCAAiC,aAAa,uCAAuC,OAAO,sCAAsC,qCAAqC,OAAO,sCAAsC,qCAAqC,OAAO,8CAA8C,qCAAqC,OAAO,gDAAgD,SAAS,oCAAoC,gFAAgF,iCAAiC,0DAA0D,iDAAiD,iDAAiD,0JAA0J,2JAA2J,2BAA2B,2BAA2B,aAAa,yCAAyC,eAAe,kFAAkF,4BAA4B,4BAA4B,4BAA4B,4BAA4B,qCAAqC,sMAAsM,+BAA+B,qBAAqB,2CAA2C,2CAA2C,wDAAwD,yDAAyD,kDAAkD,gDAAgD,gDAAgD,gDAAgD,mEAAmE,iEAAiE,mEAAmE,mEAAmE,+CAA+C,gDAAgD,kBAAkB,aAAa,qHAAqH,iCAAiC,0BAA0B,eAAe,6DAA6D,6BAA6B,2CAA2C,6CAA6C,0CAA0C,8EAA8E,6CAA6C,mDAAmD,2BAA2B,aAAa,yCAAyC,0CAA0C,0BAA0B,QAAQ,oDAAoD,yBAAyB,iCAAiC,iBAAiB,qDAAqD,sGAAsG,iBAAiB,+BAA+B,8BAA8B,wCAAwC,8BAA8B,yCAAyC,gCAAgC,wCAAwC,8BAA8B,yCAAyC,8EAA8E,aAAa,yCAAyC,gCAAgC,wKAAwK,aAAa,0CAA0C,iCAAiC,+CAA+C,iFAAiF,aAAa,0GAA0G,iCAAiC,iCAAiC,yCAAyC,2CAA2C,aAAa,mCAAmC,wBAAwB,2JAA2J,aAAa,UAAU,gCAAgC,wCAAwC,wBAAwB,OAAO,0BAA0B,OAAO,0BAA0B,OAAO,8BAA8B,OAAO,gCAAgC,iCAAiC,0DAA0D,6EAA6E,UAAU,wCAAwC,aAAa,8CAA8C,+GAA+G,kCAAkC,4BAA4B,sHAAsH,2DAA2D,OAAO,6BAA6B,OAAO,8BAA8B,QAAQ,oDAAoD,2CAA2C,gCAAgC,0BAA0B,iBAAiB,gCAAgC,0BAA0B,iBAAiB,2BAA2B,2BAA2B,2BAA2B,aAAa,8DAA8D,QAAQ,2BAA2B,QAAQ,0BAA0B,QAAQ,oDAAoD,8BAA8B,8BAA8B,2BAA2B,aAAa,8DAA8D,QAAQ,0BAA0B,QAAQ,gDAAgD,2CAA2C,8BAA8B,8BAA8B,2BAA2B,aAAa,gEAAgE,QAAQ,2BAA2B,OAAO,yBAAyB,OAAO,0BAA0B,QAAQ,yDAAyD,2BAA2B,2BAA2B,2BAA2B,aAAa,4DAA4D,QAAQ,2BAA2B,QAAQ,0BAA0B,QAAQ,2DAA2D,uCAAuC,uCAAuC,2BAA2B,aAAa,+DAA+D,QAAQ,2BAA2B,QAAQ,0BAA0B,QAAQ,0BAA0B,OAAO,qEAAqE,2CAA2C,2CAA2C,2BAA2B,aAAa,4DAA4D,QAAQ,2BAA2B,QAAQ,0BAA0B,QAAQ,2DAA2D,uCAAuC,uCAAuC,2BAA2B,aAAa,4DAA4D,QAAQ,0BAA0B,OAAO,8CAA8C,oDAAoD,aAAa,8DAA8D,QAAQ,0BAA0B,OAAO,oDAAoD,iDAAiD,aAAa,4DAA4D,QAAQ,2BAA2B,QAAQ,0BAA0B,QAAQ,2DAA2D,uCAAuC,uCAAuC,2BAA2B,aAAa,4DAA4D,QAAQ,2BAA2B,QAAQ,0BAA0B,QAAQ,2DAA2D,uCAAuC,uCAAuC,2BAA2B,aAAa,4DAA4D,QAAQ,0BAA0B,QAAQ,2BAA2B,OAAO,mDAAmD,qDAAqD,aAAa,4DAA4D,QAAQ,2BAA2B,QAAQ,yBAAyB,OAAO,0DAA0D,kCAAkC,kCAAkC,2BAA2B,aAAa,6DAA6D,QAAQ,2BAA2B,QAAQ,2DAA2D,sCAAsC,8BAA8B,+BAA+B,+BAA+B,iBAAiB,sBAAsB,sCAAsC,sCAAsC,iBAAiB,2BAA2B,aAAa,+DAA+D,QAAQ,0BAA0B,QAAQ,2BAA2B,OAAO,wDAAwD,+JAA+J,aAAa,8DAA8D,QAAQ,0BAA0B,QAAQ,2BAA2B,OAAO,8DAA8D,gHAAgH,aAAa,4DAA4D,QAAQ,2BAA2B,QAAQ,wDAAwD,+BAA+B,+BAA+B,2BAA2B,aAAa,6DAA6D,QAAQ,2BAA2B,QAAQ,0BAA0B,QAAQ,0BAA0B,OAAO,8DAA8D,qDAAqD,qDAAqD,2BAA2B,aAAa,8DAA8D,QAAQ,2BAA2B,QAAQ,yBAAyB,QAAQ,mEAAmE,6BAA6B,6BAA6B,oDAAoD,oDAAoD,2BAA2B,aAAa,+DAA+D,QAAQ,4BAA4B,QAAQ,2BAA2B,QAAQ,2DAA2D,gDAAgD,gDAAgD,2BAA2B,aAAa,+DAA+D,QAAQ,4BAA4B,QAAQ,2BAA2B,QAAQ,2DAA2D,gDAAgD,gDAAgD,2BAA2B,aAAa,UAAU,qCAAqC,+CAA+C,sCAAsC,kDAAkD,kCAAkC,eAAe,8CAA8C,+GAA+G,sGAAsG,8DAA8D,4BAA4B,gDAAgD,2CAA2C,qCAAqC,6BAA6B,aAAa,+DAA+D,4BAA4B,yDAAyD,2BAA2B,2BAA2B,2BAA2B,2BAA2B,2BAA2B,2BAA2B,2BAA2B,aAAa,0DAA0D,4BAA4B,2BAA2B,4BAA4B,qDAAqD,8BAA8B,8BAA8B,8BAA8B,8BAA8B,8BAA8B,8BAA8B,2BAA2B,aAAa,0DAA0D,4BAA4B,2BAA2B,4BAA4B,0BAA0B,4BAA4B,4DAA4D,iDAAiD,gKAAgK,yDAAyD,yDAAyD,yDAAyD,iEAAiE,iEAAiE,8BAA8B,8BAA8B,8BAA8B,8BAA8B,8BAA8B,8BAA8B,2BAA2B,aAAa,0DAA0D,4BAA4B,2BAA2B,4BAA4B,yBAAyB,4BAA4B,8DAA8D,8BAA8B,8BAA8B,8BAA8B,8BAA8B,qCAAqC,qCAAqC,2BAA2B,aAAa,0DAA0D,4BAA4B,2BAA2B,4BAA4B,yBAAyB,OAAO,+DAA+D,8BAA8B,8BAA8B,+BAA+B,8BAA8B,8BAA8B,+BAA+B,uCAAuC,uCAAuC,6CAA6C,4CAA4C,2CAA2C,4CAA4C,6CAA6C,6CAA6C,2BAA2B,aAAa,0DAA0D,4BAA4B,2BAA2B,4BAA4B,yBAAyB,4BAA4B,0DAA0D,8BAA8B,8BAA8B,mCAAmC,mCAAmC,mCAAmC,mCAAmC,mCAAmC,mCAAmC,2BAA2B,aAAa,0DAA0D,4BAA4B,2BAA2B,4BAA4B,wDAAwD,gCAAgC,8BAA8B,+BAA+B,8BAA8B,8BAA8B,+BAA+B,8CAA8C,2BAA2B,gCAAgC,iBAAiB,gCAAgC,oCAAoC,mCAAmC,mCAAmC,kCAAkC,qDAAqD,qDAAqD,2BAA2B,aAAa,UAAU,kCAAkC,eAAe,mEAAmE,kGAAkG,gDAAgD,yCAAyC,mGAAmG,OAAO,0BAA0B,2BAA2B,iCAAiC,4BAA4B,2EAA2E,qCAAqC,2BAA2B,kFAAkF,uCAAuC,4BAA4B,0EAA0E,uCAAuC,OAAO,yEAAyE,mEAAmE,+CAA+C,yEAAyE,oBAAoB,yBAAyB,wDAAwD,oBAAoB,gBAAgB,SAAS,6BAA6B,oGAAoG,OAAO,wJAAwJ,wDAAwD,aAAa,yCAAyC,sBAAsB,4BAA4B,QAAQ,6CAA6C,EAAE,+DAA+D,mCAAmC,uCAAuC,iBAAiB,oLAAoL,aAAa,yCAAyC,OAAO,2BAA2B,QAAQ,6CAA6C,EAAE,qEAAqE,yCAAyC,kEAAkE,wEAAwE,iDAAiD,sDAAsD,iBAAiB,2BAA2B,aAAa,yCAAyC,sBAAsB,8BAA8B,2BAA2B,sCAAsC,2BAA2B,mEAAmE,6IAA6I,sCAAsC,sLAAsL,mEAAmE,aAAa,qGAAqG,2CAA2C,aAAa,0CAA0C,yDAAyD,4CAA4C,2DAA2D,aAAa,mDAAmD,wDAAwD,aAAa,0GAA0G,+CAA+C,2CAA2C,iBAAiB,4BAA4B,aAAa,yCAAyC,SAAS,6CAA6C,sBAAsB,mCAAmC,2BAA2B,2EAA2E,kEAAkE,aAAa,gDAAgD,gCAAgC,wDAAwD,uDAAuD,qBAAqB,gDAAgD,qEAAqE,qBAAqB,iBAAiB,aAAa,UAAU,qDAAqD,2BAA2B,oBAAoB,OAAO,iEAAiE,6BAA6B,iBAAiB,0IAA0I,kCAAkC,0BAA0B,iBAAiB,aAAa,6CAA6C,+CAA+C,aAAa,uBAAuB,SAAS,kFAAkF,oEAAoE,2FAA2F,SAAS,4EAA4E,mCAAmC,8CAA8C,8CAA8C,8CAA8C,8CAA8C,iCAAiC,aAAa,mEAAmE,oDAAoD,yBAAyB,mCAAmC,4DAA4D,wCAAwC,sGAAsG,qGAAqG,wDAAwD,UAAU,8FAA8F,yEAAyE,8CAA8C,UAAU,mHAAmH,4EAA4E,6DAA6D,UAAU,mEAAmE,kBAAkB,2GAA2G,uBAAuB,mBAAmB,gCAAgC,oEAAoE,kDAAkD,iDAAiD,aAAa,uBAAuB,UAAU,0FAA0F,kLAAkL,SAAS,oHAAoH,iDAAiD,iDAAiD,6BAA6B,qEAAqE,6CAA6C,qOAAqO,yBAAyB,qBAAqB,EAAE,iBAAiB,wCAAwC,iDAAiD,8CAA8C,0DAA0D,qBAAqB,0BAA0B,kEAAkE,qBAAqB,kBAAkB,gEAAgE,qDAAqD,oDAAoD,sDAAsD,qDAAqD,sDAAsD,uCAAuC,cAAc,UAAU,oZAAoZ,kDAAkD,8EAA8E,SAAS,0DAA0D,8EAA8E,SAAS,gCAAgC,OAAO,0BAA0B,OAAO,2BAA2B,QAAQ,4HAA4H,oCAAoC,uRAAuR,OAAO,4CAA4C,sEAAsE,oCAAoC,kDAAkD,kEAAkE,+CAA+C,mCAAmC,8DAA8D,8EAA8E,6BAA6B,yBAAyB,4DAA4D,qBAAqB,kEAAkE,qEAAqE,6DAA6D,qBAAqB,iBAAiB,6BAA6B,cAAc,0FAA0F,uDAAuD,qDAAqD,4DAA4D,iBAAiB,oDAAoD,mSAAmS,iBAAiB,+BAA+B,cAAc,sEAAsE,8DAA8D,kCAAkC,sDAAsD,iDAAiD,yDAAyD,gEAAgE,qBAAqB,EAAE,iBAAiB,sBAAsB,qCAAqC,iBAAiB,gCAAgC,cAAc,0DAA0D,kHAAkH,qDAAqD,cAAc,yCAAyC,eAAe,kHAAkH,+BAA+B,2DAA2D,qCAAqC,iBAAiB,EAAE,6BAA6B,cAAc,qGAAqG,OAAO,kCAAkC,QAAQ,0EAA0E,8DAA8D,sDAAsD,gDAAgD,cAAc,qDAAqD,qDAAqD,4DAA4D,6DAA6D,iEAAiE,mDAAmD,iBAAiB,iCAAiC,aAAa,+CAA+C,mDAAmD,qCAAqC,sDAAsD,6EAA6E,+EAA+E,sBAAsB,iBAAiB,aAAa,4BAA4B,UAAU,gCAAgC,sBAAsB,8EAA8E,+GAA+G,uEAAuE,gBAAgB,wDAAwD,yCAAyC,sGAAsG,gFAAgF,EAAE,sIAAsI,gBAAgB,EAAE,UAAU,iCAAiC,aAAa,mEAAmE,sUAAsU,0BAA0B,+CAA+C,8DAA8D,iEAAiE,wDAAwD,6BAA6B,aAAa,kDAAkD,wCAAwC,kCAAkC,iBAAiB,gDAAgD,qDAAqD,6CAA6C,kKAAkK,aAAa,UAAU,aAAa,mEAAmE,mHAAmH,kDAAkD,mDAAmD,uBAAuB,OAAO,wCAAwC,uDAAuD,iBAAiB,aAAa,kDAAkD,+BAA+B,+BAA+B,uBAAuB,OAAO,oDAAoD,mLAAmL,iCAAiC,qBAAqB,wDAAwD,sCAAsC,sDAAsD,qBAAqB,iBAAiB,6BAA6B,cAAc,UAAU,aAAa,mEAAmE,gCAAgC,mUAAmU,aAAa,mEAAmE,yDAAyD,kDAAkD,4BAA4B,iHAAiH,OAAO,sDAAsD,2CAA2C,kHAAkH,aAAa,4HAA4H,OAAO,iDAAiD,4CAA4C,kQAAkQ,gBAAgB,aAAa,6CAA6C,6NAA6N,aAAa,iFAAiF,6IAA6I,aAAa,UAAU,aAAa,mEAAmE,mBAAmB,gDAAgD,iDAAiD,2CAA2C,gDAAgD,6CAA6C,6CAA6C,oDAAoD,kDAAkD,iCAAiC,+BAA+B,+BAA+B,2BAA2B,kDAAkD,kDAAkD,iDAAiD,mDAAmD,mDAAmD,iDAAiD,oDAAoD,qDAAqD,iDAAiD,iDAAiD,wDAAwD,gDAAgD,yDAAyD,2DAA2D,2DAA2D,8CAA8C,8GAA8G,qCAAqC,UAAU,sGAAsG,6DAA6D,UAAU,sFAAsF,OAAO,4BAA4B,OAAO,wBAAwB,iCAAiC,wBAAwB,OAAO,kHAAkH,iEAAiE,sDAAsD,uBAAuB,sEAAsE,4CAA4C,0HAA0H,+BAA+B,8CAA8C,6CAA6C,qBAAqB,0BAA0B,2CAA2C,gDAAgD,qBAAqB,qDAAqD,sDAAsD,8CAA8C,6CAA6C,uCAAuC,yCAAyC,iBAAiB,iDAAiD,aAAa,wBAAwB,UAAU,yHAAyH,4BAA4B,wBAAwB,OAAO,oEAAoE,uCAAuC,uBAAuB,aAAa,oDAAoD,wDAAwD,qCAAqC,UAAU,uFAAuF,OAAO,yBAAyB,OAAO,iCAAiC,OAAO,oCAAoC,OAAO,oCAAoC,OAAO,oCAAoC,OAAO,oCAAoC,OAAO,iCAAiC,OAAO,4CAA4C,OAAO,mFAAmF,4DAA4D,oCAAoC,kDAAkD,gEAAgE,kFAAkF,aAAa,8DAA8D,kFAAkF,aAAa,yBAAyB,UAAU,uFAAuF,OAAO,yBAAyB,OAAO,iCAAiC,OAAO,mCAAmC,OAAO,mCAAmC,OAAO,uCAAuC,OAAO,wCAAwC,OAAO,iCAAiC,OAAO,4CAA4C,OAAO,mFAAmF,4DAA4D,oCAAoC,kDAAkD,kCAAkC,kCAAkC,0CAA0C,4CAA4C,iEAAiE,iEAAiE,8KAA8K,iLAAiL,yBAAyB,UAAU,kFAAkF,OAAO,qDAAqD,OAAO,4DAA4D,SAAS,iEAAiE,OAAO,sHAAsH,uLAAuL,8KAA8K,UAAU,kDAAkD,kEAAkE,SAAS,qCAAqC,mFAAmF,SAAS,iFAAiF,qCAAqC,6CAA6C,yCAAyC,kGAAkG,yHAAyH,iIAAiI,uCAAuC,8CAA8C,0DAA0D,2DAA2D,qBAAqB,iBAAiB,+CAA+C,6CAA6C,aAAa,SAAS,oFAAoF,+BAA+B,uBAAuB,aAAa,kCAAkC,qCAAqC,+DAA+D,aAAa,kBAAkB,2CAA2C,2BAA2B,aAAa,kCAAkC,SAAS,kFAAkF,gCAAgC,uBAAuB,aAAa,6CAA6C,mCAAmC,mDAAmD,aAAa,kBAAkB,oDAAoD,2BAA2B,aAAa,mCAAmC,SAAS,4EAA4E,+EAA+E,iDAAiD,kDAAkD,qBAAqB,iBAAiB,0CAA0C,SAAS,qCAAqC,+EAA+E,iDAAiD,kDAAkD,qBAAqB,iBAAiB,0CAA0C,SAAS,4FAA4F,qPAAqP,sCAAsC,iCAAiC,oCAAoC,aAAa,SAAS,iFAAiF,2DAA2D,uBAAuB,aAAa,+GAA+G,SAAS,gFAAgF,2DAA2D,uBAAuB,aAAa,+GAA+G,SAAS,2EAA2E,qCAAqC,+BAA+B,SAAS,2EAA2E,sCAAsC,+BAA+B,SAAS,yIAAyI,uBAAuB,sBAAsB,OAAO,gCAAgC,OAAO,yBAAyB,QAAQ,uxBAAuxB,oEAAoE,iFAAiF,iDAAiD,8DAA8D,qBAAqB,iBAAiB,sDAAsD,8KAA8K,kJAAkJ,UAAU,uEAAuE,OAAO,6BAA6B,2BAA2B,8BAA8B,OAAO,oFAAoF,8EAA8E,8DAA8D,oFAAoF,kEAAkE,sCAAsC,8RAA8R,EAAE,UAAU,qDAAqD,2EAA2E,8gBAA8gB,UAAU,2FAA2F,kDAAkD,+BAA+B,iCAAiC,aAAa,iUAAiU,qCAAqC,uDAAuD,yFAAyF,8FAA8F,4FAA4F,2DAA2D,iSAAiS,iBAAiB,qDAAqD,mDAAmD,iBAAiB,kMAAkM,aAAa,kBAAkB,mCAAmC,+BAA+B,2BAA2B,aAAa,SAAS,+IAA+I,uBAAuB,sBAAsB,OAAO,yBAAyB,2BAA2B,qCAAqC,OAAO,+BAA+B,SAAS,gEAAgE,uDAAuD,uCAAuC,gCAAgC,EAAE,EAAE,4DAA4D,uDAAuD,4BAA4B,gCAAgC,EAAE,EAAE,+FAA+F,+EAA+E,UAAU,6IAA6I,uBAAuB,sBAAsB,OAAO,yBAAyB,2BAA2B,qCAAqC,OAAO,+BAA+B,SAAS,gGAAgG,gFAAgF,UAAU,4JAA4J,mCAAmC,0BAA0B,mCAAmC,kFAAkF,0CAA0C,qDAAqD,iEAAiE,uCAAuC,aAAa,yBAAyB,UAAU,wEAAwE,eAAe,iCAAiC,0CAA0C,gGAAgG,0BAA0B,yDAAyD,SAAS,sDAAsD,eAAe,yFAAyF,8DAA8D,uEAAuE,aAAa,2BAA2B,yDAAyD,aAAa,gEAAgE,UAAU,gCAAgC,OAAO,2DAA2D,eAAe,uEAAuE,SAAS,sDAAsD,OAAO,8IAA8I,sOAAsO,wJAAwJ,6MAA6M,yEAAyE,uKAAuK,UAAU,2MAA2M,6BAA6B,uBAAuB,aAAa,oCAAoC,+BAA+B,0CAA0C,iDAAiD,4CAA4C,qBAAqB,iBAAiB,EAAE,6BAA6B,aAAa,6CAA6C,2BAA2B,mHAAmH,+BAA+B,gDAAgD,YAAY,iBAAiB,2BAA2B,aAAa,sCAAsC,yCAAyC,6CAA6C,gDAAgD,gCAAgC,6DAA6D,2DAA2D,wFAAwF,qBAAqB,6BAA6B,kDAAkD,8EAA8E,wBAAwB,iBAAiB,aAAa,EAAE,UAAU,gCAAgC,uBAAuB,0DAA0D,OAAO,OAAO,oBAAoB,oBAAoB,uBAAuB,6FAA6F,wDAAwD,iCAAiC,uCAAuC,oDAAoD,iCAAiC,uCAAuC,qDAAqD,8BAA8B,aAAa,EAAE,UAAU,gCAAgC,OAAO,aAAa,oBAAoB,mBAAmB,OAAO,OAAO,oBAAoB,oBAAoB,OAAO,0IAA0I,kDAAkD,mFAAmF,kDAAkD,qFAAqF,uCAAuC,wBAAwB,wIAAwI,aAAa,UAAU,mCAAmC,eAAe,mEAAmE,mDAAmD,gDAAgD,oDAAoD,+KAA+K,mCAAmC,+BAA+B,+BAA+B,yBAAyB,kCAAkC,wDAAwD,UAAU,qCAAqC,qEAAqE,UAAU,qCAAqC,qGAAqG,UAAU,kFAAkF,4CAA4C,yGAAyG,8GAA8G,yEAAyE,+BAA+B,uCAAuC,uCAAuC,aAAa,oSAAoS,yCAAyC,wCAAwC,yHAAyH,qHAAqH,iFAAiF,yDAAyD,mEAAmE,sCAAsC,uCAAuC,4BAA4B,aAAa,oCAAoC,2BAA2B,aAAa,yCAAyC,yCAAyC,aAAa,yCAAyC,yCAAyC,aAAa,wEAAwE,SAAS,oDAAoD,wBAAwB,0BAA0B,aAAa,wLAAwL,oBAAoB,gFAAgF,eAAe,OAAO,qEAAqE,aAAa,iEAAiE,yDAAyD,wBAAwB,yCAAyC,oCAAoC,0BAA0B,uBAAuB,gBAAgB,OAAO,iCAAiC,sCAAsC,4BAA4B,sEAAsE,wBAAwB,oDAAoD,8BAA8B,iBAAiB,iCAAiC,cAAc,OAAO,4CAA4C,iBAAiB,0DAA0D,sCAAsC,8BAA8B,qBAAqB,+BAA+B,+BAA+B,6BAA6B,2BAA2B,4BAA4B,2BAA2B,2BAA2B,mCAAmC,iCAAiC,uFAAuF,6EAA6E,4CAA4C,wCAAwC,wDAAwD,kCAAkC,4EAA4E,2CAA2C,wCAAwC,wDAAwD,kCAAkC,6EAA6E,4CAA4C,wCAAwC,wDAAwD,oCAAoC,kCAAkC,4EAA4E,2CAA2C,wCAAwC,wDAAwD,oCAAoC,kCAAkC,6EAA6E,wCAAwC,wDAAwD,kCAAkC,4EAA4E,wCAAwC,wDAAwD,kCAAkC,6EAA6E,wCAAwC,wDAAwD,kCAAkC,4EAA4E,wCAAwC,wDAAwD,kCAAkC,yEAAyE,sKAAsK,6CAA6C,6CAA6C,kCAAkC,yEAAyE,uSAAuS,8CAA8C,8CAA8C,kCAAkC,0EAA0E,yCAAyC,iDAAiD,qDAAqD,oDAAoD,kEAAkE,kEAAkE,6BAA6B,wCAAwC,0CAA0C,0CAA0C,2CAA2C,2CAA2C,gFAAgF,kCAAkC,0EAA0E,yCAAyC,iDAAiD,qDAAqD,oDAAoD,kEAAkE,kEAAkE,6BAA6B,wCAAwC,gDAAgD,gDAAgD,4CAA4C,4CAA4C,gFAAgF,kCAAkC,2EAA2E,0CAA0C,2CAA2C,2CAA2C,wCAAwC,gEAAgE,kCAAkC,iFAAiF,gDAAgD,4CAA4C,4CAA4C,wCAAwC,gEAAgE,kCAAkC,0EAA0E,yCAAyC,iDAAiD,qDAAqD,oDAAoD,kEAAkE,kEAAkE,6BAA6B,2CAA2C,2CAA2C,wCAAwC,wEAAwE,kCAAkC,0EAA0E,yCAAyC,iDAAiD,qDAAqD,oDAAoD,kEAAkE,kEAAkE,6BAA6B,4CAA4C,4CAA4C,wCAAwC,wEAAwE,kCAAkC,2EAA2E,0CAA0C,2CAA2C,0CAA0C,0CAA0C,iDAAiD,2CAA2C,2CAA2C,wCAAwC,qJAAqJ,kCAAkC,2EAA2E,0CAA0C,2CAA2C,0CAA0C,0CAA0C,iDAAiD,4CAA4C,4CAA4C,wCAAwC,qJAAqJ,kCAAkC,qBAAqB,iBAAiB,+CAA+C,gCAAgC,sCAAsC,iBAAiB,gCAAgC,aAAa,8BAA8B,0BAA0B,SAAS,oGAAoG,2DAA2D,8BAA8B,8CAA8C,mCAAmC,iDAAiD,8GAA8G,8BAA8B,8CAA8C,qBAAqB,iBAAiB,sBAAsB,mCAAmC,+CAA+C,iBAAiB,cAAc,kDAAkD,4CAA4C,mCAAmC,cAAc,0BAA0B,SAAS,4BAA4B,2JAA2J,OAAO,sFAAsF,8DAA8D,aAAa,kGAAkG,OAAO,4BAA4B,OAAO,sFAAsF,iEAAiE,aAAa,8OAA8O,kCAAkC,yCAAyC,+BAA+B,SAAS,OAAO,4CAA4C,uCAAuC,iDAAiD,qBAAqB,6CAA6C,0EAA0E,qBAAqB,+CAA+C,iBAAiB,kDAAkD,gFAAgF,wDAAwD,8CAA8C,8GAA8G,8BAA8B,8CAA8C,qBAAqB,kBAAkB,oCAAoC,aAAa,UAAU,aAAa,mEAAmE,8HAA8H,4CAA4C,gDAAgD,kDAAkD,gDAAgD,kEAAkE,6BAA6B,qDAAqD,wJAAwJ,OAAO,6CAA6C,yCAAyC,uCAAuC,8BAA8B,oEAAoE,SAAS,4BAA4B,gLAAgL,uCAAuC,yDAAyD,kDAAkD,8CAA8C,sCAAsC,0CAA0C,qEAAqE,2EAA2E,+DAA+D,qEAAqE,gDAAgD,uCAAuC,qCAAqC,6BAA6B,kHAAkH,8DAA8D,gFAAgF,qBAAqB,4CAA4C,8DAA8D,oFAAoF,qBAAqB,iBAAiB,oFAAoF,kHAAkH,iBAAiB,0CAA0C,qEAAqE,iBAAiB,wCAAwC,2DAA2D,iBAAiB,4CAA4C,yEAAyE,iBAAiB,gDAAgD,0DAA0D,sDAAsD,yFAAyF,kDAAkD,+YAA+Y,wCAAwC,+GAA+G,mDAAmD,+DAA+D,qBAAqB,8DAA8D,kFAAkF,iDAAiD,qBAAqB,iBAAiB,sBAAsB,+EAA+E,+CAA+C,iBAAiB,4CAA4C,gDAAgD,8CAA8C,wDAAwD,iBAAiB,gDAAgD,gDAAgD,4GAA4G,iBAAiB,+CAA+C,4EAA4E,mEAAmE,iBAAiB,aAAa,sMAAsM,6CAA6C,4CAA4C,aAAa,6CAA6C,sCAAsC,uCAAuC,4CAA4C,sCAAsC,yCAAyC,gCAAgC,4GAA4G,qBAAqB,2CAA2C,yCAAyC,gEAAgE,qBAAqB,kDAAkD,iBAAiB,kCAAkC,0CAA0C,gRAAgR,0DAA0D,kDAAkD,2GAA2G,sLAAsL,iIAAiI,8EAA8E,yBAAyB,+FAA+F,gDAAgD,kEAAkE,mEAAmE,kEAAkE,kEAAkE,yBAAyB,qBAAqB,0FAA0F,iBAAiB,8BAA8B,aAAa,yCAAyC,gEAAgE,kDAAkD,uCAAuC,gCAAgC,gCAAgC,2CAA2C,kDAAkD,4CAA4C,wDAAwD,sFAAsF,iDAAiD,gDAAgD,uIAAuI,6FAA6F,6BAA6B,+JAA+J,4CAA4C,6BAA6B,yBAAyB,qBAAqB,0CAA0C,mEAAmE,qBAAqB,iBAAiB,6BAA6B,aAAa,0CAA0C,QAAQ,kEAAkE,wCAAwC,qCAAqC,iBAAiB,kFAAkF,iDAAiD,sCAAsC,iBAAiB,sCAAsC,mDAAmD,oFAAoF,8CAA8C,iBAAiB,aAAa,kFAAkF,QAAQ,+DAA+D,mDAAmD,aAAa,6EAA6E,8DAA8D,yCAAyC,4CAA4C,sCAAsC,iBAAiB,sBAAsB,wEAAwE,iBAAiB,aAAa,yCAAyC,cAAc,2BAA2B,EAAE,kEAAkE,uCAAuC,kFAAkF,+CAA+C,+CAA+C,2DAA2D,wDAAwD,6BAA6B,yBAAyB,qBAAqB,0BAA0B,2CAA2C,qBAAqB,qCAAqC,iBAAiB,4BAA4B,aAAa,0CAA0C,uCAAuC,uYAAuY,aAAa,UAAU,sGAAsG,OAAO,yBAAyB,OAAO,wCAAwC,SAAS,yCAAyC,SAAS,8DAA8D,OAAO,+DAA+D,OAAO,kGAAkG,uCAAuC,sCAAsC,uCAAuC,4GAA4G,iBAAiB,2FAA2F,mCAAmC,kDAAkD,+CAA+C,oDAAoD,mLAAmL,iEAAiE,yBAAyB,qBAAqB,iBAAiB,kEAAkE,cAAc,yCAAyC,iGAAiG,oHAAoH,yDAAyD,iBAAiB,aAAa,yBAAyB,UAAU,6CAA6C,gCAAgC,aAAa,mEAAmE,+KAA+K,8CAA8C,gDAAgD,+CAA+C,sDAAsD,mNAAmN,gCAAgC,uCAAuC,sEAAsE,2HAA2H,4CAA4C,iBAAiB,aAAa,uCAAuC,6BAA6B,8DAA8D,gCAAgC,6EAA6E,8GAA8G,SAAS,mCAAmC,+UAA+U,QAAQ,6RAA6R,QAAQ,0KAA0K,OAAO,0JAA0J,OAAO,qMAAqM,OAAO,2LAA2L,QAAQ,uMAAuM,QAAQ,qMAAqM,QAAQ,6IAA6I,QAAQ,qNAAqN,OAAO,mMAAmM,OAAO,6LAA6L,OAAO,uFAAuF,4CAA4C,8DAA8D,yBAAyB,uFAAuF,gEAAgE,iCAAiC,kFAAkF,iIAAiI,OAAO,0BAA0B,OAAO,0BAA0B,QAAQ,qDAAqD,8CAA8C,aAAa,0CAA0C,SAAS,4BAA4B,uEAAuE,uCAAuC,aAAa,0IAA0I,OAAO,0BAA0B,OAAO,0BAA0B,QAAQ,yDAAyD,6DAA6D,kDAAkD,wDAAwD,aAAa,qKAAqK,oCAAoC,oCAAoC,mDAAmD,aAAa,uHAAuH,QAAQ,uFAAuF,2XAA2X,gBAAgB,gFAAgF,QAAQ,+DAA+D,mDAAmD,aAAa,8CAA8C,sCAAsC,oEAAoE,iBAAiB,sBAAsB,0CAA0C,iBAAiB,aAAa,yCAAyC,cAAc,2BAA2B,EAAE,kEAAkE,2CAA2C,kCAAkC,4BAA4B,aAAa,+EAA+E,OAAO,yDAAyD,4CAA4C,kCAAkC,4BAA4B,aAAa,UAAU,gDAAgD,8CAA8C,+CAA+C,uCAAuC,aAAa,8CAA8C,iRAAiR,+DAA+D,wDAAwD,uCAAuC,kCAAkC,UAAU,yDAAyD,8CAA8C,iDAAiD,8CAA8C,iDAAiD,gCAAgC,4CAA4C,8CAA8C,6CAA6C,+CAA+C,aAAa,0EAA0E,oCAAoC,SAAS,yDAAyD,mCAAmC,qCAAqC,8CAA8C,kDAAkD,gDAAgD,gDAAgD,8BAA8B,uCAAuC,wCAAwC,4BAA4B,aAAa,8EAA8E,oCAAoC,SAAS,+BAA+B,wEAAwE,OAAO,kFAAkF,OAAO,+EAA+E,OAAO,6EAA6E,eAAe,iFAAiF,OAAO,oFAAoF,OAAO,gFAAgF,OAAO,mFAAmF,OAAO,mFAAmF,OAAO,oHAAoH,QAAQ,sLAAsL,OAAO,6EAA6E,OAAO,mFAAmF,OAAO,iKAAiK,sBAAsB,kMAAkM,OAAO,8GAA8G,eAAe,mFAAmF,OAAO,qFAAqF,OAAO,kFAAkF,OAAO,8IAA8I,OAAO,sIAAsI,OAAO,wIAAwI,OAAO,2IAA2I,OAAO,2KAA2K,QAAQ,8RAA8R,OAAO,gMAAgM,yBAAyB,iEAAiE,iCAAiC,uDAAuD,2CAA2C,iCAAiC,+BAA+B,OAAO,qDAAqD,4CAA4C,mFAAmF,yKAAyK,qBAAqB,iBAAiB,qEAAqE,+CAA+C,iBAAiB,uEAAuE,mDAAmD,iBAAiB,yEAAyE,gFAAgF,iBAAiB,uEAAuE,gFAAgF,iBAAiB,uCAAuC,oDAAoD,oKAAoK,iBAAiB,aAAa,qCAAqC,qCAAqC,uDAAuD,aAAa,uCAAuC,yCAAyC,iFAAiF,aAAa,+EAA+E,sBAAsB,kCAAkC,QAAQ,mFAAmF,iCAAiC,sCAAsC,kDAAkD,iKAAiK,4DAA4D,yBAAyB,qBAAqB,iBAAiB,aAAa,+FAA+F,cAAc,2BAA2B,EAAE,6DAA6D,8CAA8C,sCAAsC,iBAAiB,sBAAsB,+CAA+C,iBAAiB,aAAa,8DAA8D,sBAAsB,6DAA6D,sDAAsD,gDAAgD,gCAAgC,aAAa,uDAAuD,iGAAiG,4DAA4D,gDAAgD,+BAA+B,uBAAuB,OAAO,uIAAuI,iBAAiB,sCAAsC,aAAa,UAAU,2CAA2C,uBAAuB,+BAA+B,OAAO,6CAA6C,2CAA2C,8CAA8C,aAAa,SAAS,kFAAkF,iCAAiC,aAAa,mEAAmE,mBAAmB,2FAA2F,+CAA+C,oDAAoD,iDAAiD,4CAA4C,iGAAiG,gCAAgC,qBAAqB,mCAAmC,qBAAqB,8BAA8B,kDAAkD,6CAA6C,sCAAsC,wCAAwC,4DAA4D,OAAO,uDAAuD,UAAU,+BAA+B,qFAAqF,OAAO,gIAAgI,OAAO,+QAA+Q,uBAAuB,0OAA0O,QAAQ,kMAAkM,4BAA4B,0MAA0M,OAAO,kDAAkD,OAAO,+EAA+E,yCAAyC,qEAAqE,8BAA8B,mEAAmE,8BAA8B,iBAAiB,yCAAyC,yBAAyB,4DAA4D,iBAAiB,2BAA2B,2BAA2B,4CAA4C,kCAAkC,aAAa,0GAA0G,sGAAsG,gGAAgG,uCAAuC,aAAa,0CAA0C,SAAS,4BAA4B,wEAAwE,qGAAqG,gFAAgF,qEAAqE,+CAA+C,sCAAsC,oDAAoD,yBAAyB,6CAA6C,6CAA6C,qBAAqB,iBAAiB,sBAAsB,sCAAsC,iBAAiB,aAAa,+FAA+F,mCAAmC,iDAAiD,aAAa,+FAA+F,oCAAoC,iDAAiD,aAAa,yCAAyC,cAAc,2BAA2B,EAAE,8DAA8D,8CAA8C,4CAA4C,iBAAiB,gDAAgD,2CAA2C,uDAAuD,yDAAyD,yBAAyB,qBAAqB,iBAAiB,oCAAoC,8BAA8B,aAAa,yCAAyC,4BAA4B,sEAAsE,mCAAmC,yBAAyB,6CAA6C,iBAAiB,gHAAgH,0CAA0C,iBAAiB,2CAA2C,mCAAmC,6CAA6C,oCAAoC,aAAa,0EAA0E,6CAA6C,+BAA+B,wCAAwC,iEAAiE,qBAAqB,2CAA2C,iDAAiD,yCAAyC,wCAAwC,iBAAiB,aAAa,+KAA+K,uBAAuB,0DAA0D,+BAA+B,sEAAsE,gCAAgC,mCAAmC,sBAAsB,OAAO,+DAA+D,qBAAqB,iBAAiB,sCAAsC,kDAAkD,iBAAiB,aAAa,kLAAkL,uBAAuB,+DAA+D,iCAAiC,sEAAsE,gCAAgC,mCAAmC,sBAAsB,OAAO,kEAAkE,qBAAqB,iBAAiB,sCAAsC,uDAAuD,iBAAiB,aAAa,UAAU,4CAA4C,6CAA6C,wCAAwC,mCAAmC,aAAa,8CAA8C,yHAAyH,wCAAwC,6BAA6B,UAAU,eAAe,8CAA8C,kOAAkO,kJAAkJ,iCAAiC,UAAU,gCAAgC,0HAA0H,OAAO,iCAAiC,SAAS,oCAAoC,OAAO,4EAA4E,yCAAyC,2CAA2C,gCAAgC,iBAAiB,mCAAmC,mCAAmC,iBAAiB,iCAAiC,sBAAsB,OAAO,qDAAqD,oCAAoC,qBAAqB,iBAAiB,kCAAkC,sHAAsH,EAAE,8BAA8B,aAAa,4DAA4D,OAAO,iCAAiC,SAAS,sCAAsC,OAAO,6EAA6E,yCAAyC,2CAA2C,gCAAgC,iBAAiB,mCAAmC,mCAAmC,iBAAiB,iCAAiC,sBAAsB,OAAO,qDAAqD,oCAAoC,qBAAqB,iBAAiB,kCAAkC,uHAAuH,EAAE,8BAA8B,aAAa,gEAAgE,OAAO,+BAA+B,QAAQ,uDAAuD,yCAAyC,qDAAqD,aAAa,4DAA4D,OAAO,iCAAiC,SAAS,4EAA4E,yCAAyC,+BAA+B,yCAAyC,gCAAgC,iBAAiB,gCAAgC,oCAAoC,yCAAyC,6DAA6D,OAAO,OAAO,+DAA+D,2DAA2D,6BAA6B,yBAAyB,4CAA4C,qBAAqB,gEAAgE,yCAAyC,qBAAqB,iBAAiB,sBAAsB,qCAAqC,iBAAiB,8BAA8B,aAAa,0EAA0E,OAAO,+DAA+D,4CAA4C,yCAAyC,6CAA6C,uCAAuC,uDAAuD,qBAAqB,qDAAqD,wCAAwC,mCAAmC,SAAS,GAAG,iGAAiG,iGAAiG,sCAAsC,0GAA0G,sCAAsC,mHAAmH,sCAAsC,4KAA4K,sCAAsC,yBAAyB,6CAA6C,4CAA4C,kCAAkC,yBAAyB,8BAA8B,gCAAgC,yBAAyB,qBAAqB,iBAAiB,8BAA8B,aAAa,2FAA2F,OAAO,0EAA0E,4CAA4C,yCAAyC,6CAA6C,uCAAuC,wEAAwE,qBAAqB,oDAAoD,qDAAqD,wCAAwC,mCAAmC,SAAS,GAAG,iGAAiG,wFAAwF,sCAAsC,iGAAiG,sCAAsC,0GAA0G,sCAAsC,mKAAmK,sCAAsC,yBAAyB,6CAA6C,4CAA4C,kCAAkC,yBAAyB,8BAA8B,gCAAgC,yBAAyB,qBAAqB,iBAAiB,8BAA8B,aAAa,UAAU,mHAAmH,SAAS,2HAA2H,SAAS,0HAA0H,SAAS,2HAA2H,SAAS,4HAA4H,SAAS,2HAA2H,SAAS,yHAAyH,SAAS,sHAAsH,SAAS,2HAA2H,SAAS,yHAAyH,SAAS,2HAA2H,SAAS,2HAA2H,SAAS,0HAA0H,SAAS,sHAAsH,SAAS,uEAAuE,eAAe,mEAAmE,mBAAmB,6KAA6K,6CAA6C,wCAAwC,6BAA6B,yCAAyC,mDAAmD,SAAS,gJAAgJ,8BAA8B,+FAA+F,kEAAkE,eAAe,4FAA4F,aAAa,wCAAwC,kEAAkE,eAAe,kFAAkF,aAAa,8BAA8B,kEAAkE,eAAe,yFAAyF,aAAa,4DAA4D,eAAe,yFAAyF,UAAU,2DAA2D,4CAA4C,0LAA0L,oQAAoQ,UAAU,4DAA4D,qCAAqC,gEAAgE,+DAA+D,qCAAqC,8DAA8D,kCAAkC,uBAAuB,aAAa,uCAAuC,uCAAuC,0CAA0C,aAAa,kBAAkB,6BAA6B,aAAa,6DAA6D,yCAAyC,uDAAuD,iBAAiB,sBAAsB,qDAAqD,iBAAiB,aAAa,sDAAsD,uEAAuE,gDAAgD,UAAU,+DAA+D,4DAA4D,UAAU,mEAAmE,UAAU,yEAAyE,mCAAmC,mCAAmC,oBAAoB,yGAAyG,aAAa,kBAAkB,uDAAuD,aAAa,UAAU,gEAAgE,mCAAmC,mDAAmD,UAAU,gCAAgC,+IAA+I,kCAAkC,uBAAuB,aAAa,qCAAqC,mCAAmC,6CAA6C,uJAAuJ,iCAAiC,aAAa,+CAA+C,+CAA+C,yCAAyC,mCAAmC,0CAA0C,mCAAmC,aAAa,0CAA0C,mCAAmC,aAAa,2BAA2B,yBAAyB,aAAa,2BAA2B,yBAAyB,aAAa,+BAA+B,+BAA+B,0BAA0B,0BAA0B,8DAA8D,UAAU,4DAA4D,eAAe,oEAAoE,mCAAmC,qBAAqB,8BAA8B,aAAa,0DAA0D,0DAA0D,2BAA2B,yBAAyB,aAAa,2BAA2B,yBAAyB,aAAa,4BAA4B,UAAU,gFAAgF,OAAO,qBAAqB,OAAO,sBAAsB,eAAe,+EAA+E,4BAA4B,iDAAiD,+BAA+B,4DAA4D,aAAa,sBAAsB,UAAU,4EAA4E,OAAO,qBAAqB,OAAO,sBAAsB,eAAe,gFAAgF,4BAA4B,2CAA2C,4BAA4B,yDAAyD,aAAa,sBAAsB,UAAU,kDAAkD,OAAO,0BAA0B,eAAe,iCAAiC,OAAO,mCAAmC,eAAe,mCAAmC,eAAe,+EAA+E,wBAAwB,yBAAyB,yCAAyC,+CAA+C,gDAAgD,qDAAqD,2BAA2B,wEAAwE,kCAAkC,aAAa,sCAAsC,2BAA2B,8CAA8C,aAAa,yBAAyB,+EAA+E,kCAAkC,aAAa,kCAAkC,gCAAgC,uBAAuB,UAAU,yCAAyC,eAAe,mEAAmE,mBAAmB,wGAAwG,0CAA0C,qCAAqC,yCAAyC,qCAAqC,0CAA0C,qIAAqI,uCAAuC,0CAA0C,uEAAuE,UAAU,kCAAkC,6GAA6G,OAAO,4DAA4D,QAAQ,sCAAsC,kCAAkC,yGAAyG,MAAM,0CAA0C,oBAAoB,2FAA2F,2BAA2B,2CAA2C,8BAA8B,mCAAmC,2BAA2B,uDAAuD,kCAAkC,0GAA0G,4DAA4D,OAAO,OAAO,oCAAoC,qCAAqC,yBAAyB,qDAAqD,qBAAqB,+BAA+B,sCAAsC,qBAAqB,iBAAiB,sBAAsB,gCAAgC,iBAAiB,gCAAgC,yMAAyM,2BAA2B,iBAAiB,+CAA+C,4DAA4D,qDAAqD,6CAA6C,iBAAiB,oCAAoC,6KAA6K,iBAAiB,EAAE,2CAA2C,mFAAmF,uDAAuD,iBAAiB,kCAAkC,aAAa,4DAA4D,QAAQ,oHAAoH,+CAA+C,2CAA2C,+BAA+B,SAAS,OAAO,qDAAqD,iBAAiB,qCAAqC,8BAA8B,aAAa,yCAAyC,OAAO,8BAA8B,OAAO,6CAA6C,OAAO,yCAAyC,OAAO,iCAAiC,SAAS,iHAAiH,uDAAuD,eAAe,UAAU,+IAA+I,4BAA4B,uDAAuD,6BAA6B,wDAAwD,uDAAuD,qCAAqC,UAAU,kIAAkI,6DAA6D,sCAAsC,sCAAsC,mCAAmC,8BAA8B,iBAAiB,4DAA4D,8CAA8C,sCAAsC,sCAAsC,8BAA8B,iBAAiB,qDAAqD,6CAA6C,qCAAqC,8BAA8B,iBAAiB,0FAA0F,oCAAoC,+BAA+B,iBAAiB,qEAAqE,+BAA+B,iBAAiB,oFAAoF,wFAAwF,6KAA6K,6CAA6C,iCAAiC,4BAA4B,iCAAiC,+CAA+C,qBAAqB,iBAAiB,uMAAuM,2CAA2C,iBAAiB,2LAA2L,sBAAsB,OAAO,0GAA0G,iBAAiB,aAAa,gEAAgE,OAAO,+BAA+B,OAAO,mCAAmC,OAAO,8BAA8B,OAAO,kCAAkC,OAAO,wHAAwH,uDAAuD,iIAAiI,4BAA4B,uDAAuD,6BAA6B,wDAAwD,uDAAuD,uGAAuG,oCAAoC,sCAAsC,0CAA0C,uDAAuD,iCAAiC,qBAAqB,iDAAiD,wFAAwF,qTAAqT,yBAAyB,8BAA8B,4DAA4D,4CAA4C,yBAAyB,qBAAqB,oDAAoD,2KAA2K,0DAA0D,yBAAyB,8BAA8B,8DAA8D,6CAA6C,6DAA6D,6CAA6C,yBAAyB,qBAAqB,iBAAiB,0CAA0C,4JAA4J,iBAAiB,8BAA8B,aAAa,UAAU,sCAAsC,aAAa,mEAAmE,wGAAwG,4CAA4C,0CAA0C,2CAA2C,iDAAiD,+CAA+C,+BAA+B,SAAS,sDAAsD,gCAAgC,SAAS,iCAAiC,OAAO,uBAAuB,OAAO,uBAAuB,OAAO,4BAA4B,OAAO,gEAAgE,4CAA4C,SAAS,iCAAiC,OAAO,uBAAuB,OAAO,uBAAuB,OAAO,4BAA4B,OAAO,gEAAgE,2CAA2C,SAAS,iCAAiC,MAAM,uBAAuB,MAAM,uBAAuB,OAAO,4BAA4B,MAAM,wBAAwB,OAAO,mFAAmF,gCAAgC,8BAA8B,+BAA+B,SAAS,OAAO,sEAAsE,iBAAiB,aAAa,kBAAkB,+CAA+C,+BAA+B,SAAS,OAAO,mCAAmC,UAAU,OAAO,uIAAuI,qBAAqB,iBAAiB,aAAa,SAAS,gMAAgM,sCAAsC,sCAAsC,sCAAsC,yGAAyG,uCAAuC,iFAAiF,iBAAiB,sBAAsB,iFAAiF,aAAa,OAAO,yIAAyI,qBAAqB,iBAAiB,aAAa,kFAAkF,2BAA2B,iBAAiB,OAAO,mCAAmC,yCAAyC,0CAA0C,qBAAqB,iBAAiB,sBAAsB,mCAAmC,UAAU,OAAO,gDAAgD,oDAAoD,yBAAyB,qBAAqB,iBAAiB,aAAa,SAAS,iCAAiC,MAAM,yBAAyB,MAAM,yBAAyB,OAAO,2BAA2B,QAAQ,6DAA6D,gCAAgC,4BAA4B,aAAa,kCAAkC,sCAAsC,6BAA6B,aAAa,+BAA+B,+BAA+B,SAAS,OAAO,8CAA8C,qCAAqC,qBAAqB,iBAAiB,aAAa,kBAAkB,0CAA0C,+BAA+B,SAAS,OAAO,mCAAmC,UAAU,OAAO,wDAAwD,yCAAyC,yBAAyB,qBAAqB,iBAAiB,aAAa,wBAAwB,SAAS,yEAAyE,MAAM,uBAAuB,MAAM,uBAAuB,MAAM,uBAAuB,MAAM,uBAAuB,OAAO,sBAAsB,OAAO,uBAAuB,OAAO,uBAAuB,MAAM,wBAAwB,OAAO,2HAA2H,gCAAgC,8BAA8B,+BAA+B,SAAS,OAAO,sIAAsI,iBAAiB,aAAa,kBAAkB,wCAAwC,+BAA+B,SAAS,OAAO,mCAAmC,UAAU,OAAO,4LAA4L,qBAAqB,iBAAiB,aAAa,SAAS,0EAA0E,OAAO,uBAAuB,OAAO,uBAAuB,OAAO,uBAAuB,OAAO,uBAAuB,OAAO,sBAAsB,OAAO,uBAAuB,OAAO,uBAAuB,OAAO,8EAA8E,qCAAqC,qCAAqC,4IAA4I,SAAS,sCAAsC,qCAAqC,uCAAuC,4CAA4C,iCAAiC,mCAAmC,SAAS,OAAO,4DAA4D,qBAAqB,+BAA+B,iBAAiB,gDAAgD,aAAa,2BAA2B,SAAS,sCAAsC,0CAA0C,0CAA0C,0CAA0C,oDAAoD,SAAS,2CAA2C,kEAAkE,kEAAkE,SAAS,0FAA0F,0CAA0C,0CAA0C,gDAAgD,8CAA8C,4BAA4B,uBAAuB,aAAa,4EAA4E,qDAAqD,qCAAqC,sCAAsC,yGAAyG,+BAA+B,oFAAoF,uCAAuC,aAAa,EAAE,0DAA0D,wEAAwE,mEAAmE,+CAA+C,uCAAuC,2BAA2B,cAAc,OAAO,kEAAkE,6GAA6G,wNAAwN,4CAA4C,iBAAiB,kCAAkC,4GAA4G,wDAAwD,qCAAqC,2CAA2C,4CAA4C,qBAAqB,0BAA0B,6CAA6C,qBAAqB,iBAAiB,qCAAqC,aAAa,kCAAkC,uBAAuB,aAAa,qDAAqD,sEAAsE,kBAAkB,OAAO,mCAAmC,4DAA4D,iBAAiB,sBAAsB,qGAAqG,gDAAgD,qBAAqB,iBAAiB,aAAa,2FAA2F,wIAAwI,qCAAqC,sBAAsB,kBAAkB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,iCAAiC,wCAAwC,aAAa,wDAAwD,sLAAsL,oHAAoH,8BAA8B,iBAAiB,sDAAsD,iKAAiK,uCAAuC,YAAY,WAAW,2DAA2D,kCAAkC,yBAAyB,qBAAqB,iHAAiH,iBAAiB,sBAAsB,2CAA2C,kBAAkB,WAAW,0DAA0D,kCAAkC,yBAAyB,qBAAqB,8DAA8D,iBAAiB,kCAAkC,2CAA2C,0EAA0E,kCAAkC,2BAA2B,iBAAiB,sBAAsB,8DAA8D,iBAAiB,gCAAgC,yCAAyC,mEAAmE,mFAAmF,mFAAmF,uCAAuC,oOAAoO,qBAAqB,0BAA0B,kCAAkC,2CAA2C,wMAAwM,sDAAsD,yBAAyB,iDAAiD,kHAAkH,yBAAyB,8BAA8B,2JAA2J,yBAAyB,kKAAkK,qBAAqB,iBAAiB,sBAAsB,uCAAuC,8NAA8N,qBAAqB,0BAA0B,kCAAkC,2CAA2C,0LAA0L,sDAAsD,yBAAyB,iDAAiD,gJAAgJ,yBAAyB,8BAA8B,+FAA+F,yBAAyB,kKAAkK,qBAAqB,iBAAiB,cAAc,mCAAmC,6OAA6O,EAAE,kDAAkD,qCAAqC,aAAa,0BAA0B,SAAS,0GAA0G,OAAO,0BAA0B,QAAQ,wBAAwB,SAAS,0BAA0B,SAAS,iFAAiF,8BAA8B,kCAAkC,yCAAyC,qDAAqD,mDAAmD,kCAAkC,8BAA8B,kCAAkC,qCAAqC,kCAAkC,UAAU,gCAAgC,6DAA6D,OAAO,yCAAyC,OAAO,kDAAkD,kCAAkC,iEAAiE,0CAA0C,6CAA6C,0DAA0D,iCAAiC,qBAAqB,8CAA8C,8CAA8C,iHAAiH,4CAA4C,qEAAqE,qCAAqC,yBAAyB,mPAAmP,mDAAmD,6HAA6H,EAAE,yBAAyB,qBAAqB,2CAA2C,sGAAsG,EAAE,iBAAiB,4BAA4B,aAAa,mEAAmE,SAAS,iCAAiC,kCAAkC,wDAAwD,iDAAiD,4BAA4B,aAAa,mCAAmC,+BAA+B,2BAA2B,OAAO,8CAA8C,iBAAiB,oCAAoC,aAAa,oCAAoC,+BAA+B,2BAA2B,OAAO,+CAA+C,iBAAiB,qCAAqC,aAAa,sCAAsC,sCAAsC,aAAa,2CAA2C,qEAAqE,4EAA4E,gDAAgD,0CAA0C,+BAA+B,SAAS,OAAO,2CAA2C,iBAAiB,aAAa,6DAA6D,gBAAgB,wCAAwC,sCAAsC,wBAAwB,kCAAkC,qDAAqD,kCAAkC,kCAAkC,iDAAiD,gCAAgC,qCAAqC,6CAA6C,qBAAqB,kBAAkB,+BAA+B,oDAAoD,iEAAiE,iCAAiC,qBAAqB,gLAAgL,+BAA+B,kDAAkD,oCAAoC,2GAA2G,yDAAyD,yBAAyB,0CAA0C,qBAAqB,iBAAiB,wFAAwF,sDAAsD,mEAAmE,oDAAoD,yCAAyC,8BAA8B,OAAO,kEAAkE,yBAAyB,sBAAsB,iBAAiB,mCAAmC,yCAAyC,iBAAiB,4BAA4B,aAAa,0DAA0D,QAAQ,2GAA2G,8CAA8C,+CAA+C,+BAA+B,qBAAqB,OAAO,2CAA2C,wCAAwC,+GAA+G,qBAAqB,4DAA4D,iBAAiB,oCAAoC,aAAa,kEAAkE,OAAO,kCAAkC,kCAAkC,mDAAmD,mCAAmC,4BAA4B,aAAa,gEAAgE,SAAS,2BAA2B,kCAAkC,+CAA+C,yBAAyB,4CAA4C,iBAAiB,4BAA4B,aAAa,0CAA0C,sCAAsC,kDAAkD,sCAAsC,aAAa,UAAU,oCAAoC,aAAa,mEAAmE,4YAA4Y,kCAAkC,4CAA4C,mEAAmE,8DAA8D,uFAAuF,6CAA6C,yFAAyF,0CAA0C,uDAAuD,6CAA6C,+CAA+C,+CAA+C,mCAAmC,iCAAiC,SAAS,4BAA4B,sFAAsF,6KAA6K,+DAA+D,6CAA6C,iBAAiB,qCAAqC,kDAAkD,2BAA2B,iBAAiB,+FAA+F,2DAA2D,2BAA2B,iBAAiB,iDAAiD,2CAA2C,0FAA0F,sIAAsI,+CAA+C,0DAA0D,oCAAoC,kDAAkD,0IAA0I,qBAAqB,qIAAqI,qCAAqC,iBAAiB,8BAA8B,aAAa,+CAA+C,+FAA+F,oEAAoE,qCAAqC,4CAA4C,aAAa,gDAAgD,6CAA6C,sCAAsC,uDAAuD,iBAAiB,aAAa,mCAAmC,oCAAoC,aAAa,oCAAoC,qCAAqC,aAAa,UAAU,gCAAgC,eAAe,8CAA8C,yNAAyN,qCAAqC,OAAO,yBAAyB,OAAO,gDAAgD,yBAAyB,aAAa,wCAAwC,OAAO,yBAAyB,OAAO,qDAAqD,6BAA6B,aAAa,sCAAsC,OAAO,yBAAyB,OAAO,sDAAsD,mCAAmC,aAAa,sCAAsC,OAAO,yBAAyB,OAAO,wDAAwD,mCAAmC,uCAAuC,iBAAiB,kDAAkD,aAAa,kEAAkE,OAAO,yBAAyB,OAAO,iDAAiD,iCAAiC,aAAa,sCAAsC,OAAO,yBAAyB,OAAO,kDAAkD,uCAAuC,aAAa,sCAAsC,OAAO,yBAAyB,OAAO,oDAAoD,mCAAmC,2CAA2C,iBAAiB,oDAAoD,aAAa,kEAAkE,OAAO,yBAAyB,OAAO,mDAAmD,qCAAqC,aAAa,sCAAsC,OAAO,yBAAyB,OAAO,oDAAoD,6CAA6C,aAAa,sCAAsC,OAAO,yBAAyB,OAAO,sDAAsD,mCAAmC,+CAA+C,iBAAiB,yDAAyD,aAAa,kEAAkE,OAAO,yBAAyB,OAAO,mDAAmD,yCAAyC,aAAa,sCAAsC,OAAO,yBAAyB,OAAO,oDAAoD,+CAA+C,aAAa,sCAAsC,OAAO,yBAAyB,OAAO,sDAAsD,mCAAmC,mDAAmD,iBAAiB,4DAA4D,aAAa,sEAAsE,OAAO,yBAAyB,OAAO,sDAAsD,qDAAqD,aAAa,sCAAsC,OAAO,yBAAyB,OAAO,uDAAuD,iDAAiD,aAAa,sCAAsC,OAAO,yBAAyB,OAAO,yDAAyD,yDAAyD,aAAa,mEAAmE,OAAO,yBAAyB,OAAO,uDAAuD,2DAA2D,aAAa,sCAAsC,OAAO,yBAAyB,OAAO,wDAAwD,8DAA8D,aAAa,sCAAsC,OAAO,yBAAyB,OAAO,0DAA0D,8BAA8B,6BAA6B,iBAAiB,8BAA8B,6BAA6B,iBAAiB,mCAAmC,uDAAuD,iBAAiB,+DAA+D,aAAa,2EAA2E,OAAO,yBAAyB,OAAO,oDAAoD,gDAAgD,aAAa,sCAAsC,OAAO,yBAAyB,OAAO,qDAAqD,gDAAgD,aAAa,sCAAsC,OAAO,yBAAyB,OAAO,uDAAuD,mCAAmC,6DAA6D,iBAAiB,+DAA+D,aAAa,yEAAyE,OAAO,yBAAyB,OAAO,mDAAmD,sBAAsB,4BAA4B,4BAA4B,8BAA8B,6BAA6B,iBAAiB,8BAA8B,6BAA6B,iBAAiB,kCAAkC,0BAA0B,WAAW,iBAAiB,sBAAsB,6DAA6D,iBAAiB,4HAA4H,aAAa,sCAAsC,OAAO,yBAAyB,OAAO,oDAAoD,sBAAsB,4BAA4B,4BAA4B,8BAA8B,6BAA6B,iBAAiB,8BAA8B,6BAA6B,iBAAiB,kCAAkC,0BAA0B,WAAW,iBAAiB,sBAAsB,6DAA6D,iBAAiB,qHAAqH,aAAa,sCAAsC,OAAO,yBAAyB,OAAO,sDAAsD,sBAAsB,4BAA4B,4BAA4B,8BAA8B,6BAA6B,iBAAiB,8BAA8B,6BAA6B,iBAAiB,kCAAkC,0BAA0B,WAAW,iBAAiB,sBAAsB,6DAA6D,iBAAiB,mCAAmC,kIAAkI,iBAAiB,gIAAgI,eAAe,qFAAqF,OAAO,yBAAyB,OAAO,gDAAgD,gCAAgC,iDAAiD,aAAa,sCAAsC,OAAO,yBAAyB,OAAO,iDAAiD,gCAAgC,uDAAuD,aAAa,sCAAsC,OAAO,yBAAyB,OAAO,mDAAmD,wCAAwC,mCAAmC,6DAA6D,iBAAiB,oEAAoE,aAAa,6DAA6D,OAAO,yBAAyB,OAAO,kDAAkD,mDAAmD,aAAa,sCAAsC,OAAO,yBAAyB,OAAO,mDAAmD,qCAAqC,0CAA0C,iBAAiB,0CAA0C,mEAAmE,iBAAiB,4CAA4C,sEAAsE,iBAAiB,sBAAsB,yEAAyE,iBAAiB,aAAa,sCAAsC,OAAO,yBAAyB,OAAO,qDAAqD,8BAA8B,wDAAwD,iBAAiB,+DAA+D,aAAa,UAAU,kCAAkC,iBAAiB,mEAAmE,+FAA+F,gCAAgC,0+JAA0+J,oCAAoC,6DAA6D,mGAAmG,SAAS,qCAAqC,6DAA6D,mGAAmG,SAAS,qCAAqC,4EAA4E,SAAS,qCAAqC,0FAA0F,iEAAiE,aAAa,mDAAmD,SAAS,uCAAuC,4FAA4F,4DAA4D,aAAa,kDAAkD,SAAS,2CAA2C,wBAAwB,uBAAuB,aAAa,6BAA6B,uBAAuB,aAAa,8BAA8B,8CAA8C,aAAa,4BAA4B,0BAA0B,aAAa,4BAA4B,sDAAsD,aAAa,sBAAsB,SAAS,kCAAkC,mCAAmC,SAAS,6CAA6C,uBAAuB,YAAY,YAAY,YAAY,uBAAuB,SAAS,mCAAmC,0BAA0B,eAAe,eAAe,eAAe,uBAAuB,SAAS,qCAAqC,kCAAkC,gDAAgD,mEAAmE,kDAAkD,aAAa,2FAA2F,SAAS,8BAA8B,OAAO,4BAA4B,eAAe,wBAAwB,eAAe,oGAAoG,4BAA4B,uBAAuB,aAAa,oCAAoC,oDAAoD,yBAAyB,iDAAiD,aAAa,gFAAgF,sJAAsJ,iGAAiG,uDAAuD,8CAA8C,+BAA+B,aAAa,iFAAiF,uCAAuC,yDAAyD,uFAAuF,qDAAqD,+BAA+B,qCAAqC,qQAAqQ,kDAAkD,mCAAmC,iBAAiB,4CAA4C,yDAAyD,0FAA0F,qDAAqD,+BAA+B,qCAAqC,8MAA8M,kDAAkD,mCAAmC,iBAAiB,yBAAyB,aAAa,6DAA6D,qDAAqD,8CAA8C,0EAA0E,8BAA8B,+DAA+D,kFAAkF,yDAAyD,mCAAmC,yBAAyB,4DAA4D,2IAA2I,yDAAyD,mCAAmC,yBAAyB,4PAA4P,sDAAsD,uCAAuC,kFAAkF,yDAAyD,mCAAmC,yBAAyB,6DAA6D,mDAAmD,sDAAsD,uCAAuC,iFAAiF,yDAAyD,mCAAmC,yBAAyB,mDAAmD,sDAAsD,uCAAuC,2DAA2D,iBAAiB,aAAa,2CAA2C,mBAAmB,SAAS,gCAAgC,eAAe,wBAAwB,eAAe,yBAAyB,eAAe,wDAAwD,sEAAsE,0MAA0M,2CAA2C,4DAA4D,gCAAgC,gCAAgC,yPAAyP,sCAAsC,kCAAkC,aAAa,0BAA0B,SAAS,gCAAgC,eAAe,yBAAyB,eAAe,kDAAkD,wBAAwB,uBAAuB,aAAa,oEAAoE,kCAAkC,kCAAkC,2CAA2C,8DAA8D,yDAAyD,2DAA2D,kBAAkB,kBAAkB,oEAAoE,sBAAsB,sBAAsB,aAAa,kBAAkB,8BAA8B,8CAA8C,iBAAiB,sBAAsB,kDAAkD,iBAAiB,wEAAwE,sEAAsE,sEAAsE,mCAAmC,wCAAwC,iBAAiB,sCAAsC,kDAAkD,iBAAiB,sCAAsC,kDAAkD,iBAAiB,8BAA8B,2BAA2B,iBAAiB,8BAA8B,2BAA2B,iBAAiB,aAAa,yCAAyC,oCAAoC,mCAAmC,aAAa,0BAA0B,SAAS,gCAAgC,OAAO,yBAAyB,OAAO,0BAA0B,OAAO,8FAA8F,wCAAwC,2BAA2B,+BAA+B,OAAO,OAAO,oCAAoC,oEAAoE,qBAAqB,0BAA0B,sFAAsF,qBAAqB,iBAAiB,mFAAmF,aAAa,SAAS,gCAAgC,OAAO,0BAA0B,OAAO,+FAA+F,wCAAwC,2BAA2B,qHAAqH,aAAa,SAAS,yIAAyI,OAAO,4DAA4D,uBAAuB,mDAAmD,eAAe,iDAAiD,eAAe,mHAAmH,2HAA2H,uBAAuB,aAAa,8BAA8B,gEAAgE,8CAA8C,8CAA8C,8CAA8C,gDAAgD,uCAAuC,yEAAyE,yEAAyE,yEAAyE,0EAA0E,yBAAyB,SAAS,8BAA8B,OAAO,4DAA4D,eAAe,sCAAsC,SAAS,8CAA8C,gBAAgB,0EAA0E,wDAAwD,4HAA4H,2HAA2H,uBAAuB,aAAa,gEAAgE,8CAA8C,8CAA8C,qDAAqD,uDAAuD,uCAAuC,2YAA2Y,kDAAkD,sKAAsK,wBAAwB,SAAS,gCAAgC,OAAO,yBAAyB,QAAQ,gDAAgD,QAAQ,8CAA8C,QAAQ,+CAA+C,OAAO,kIAAkI,iCAAiC,0BAA0B,yCAAyC,2DAA2D,2DAA2D,2DAA2D,6DAA6D,aAAa,SAAS,gCAAgC,OAAO,yBAAyB,QAAQ,gCAAgC,OAAO,kIAAkI,iCAAiC,2CAA2C,gDAAgD,gDAAgD,aAAa,SAAS,gCAAgC,eAAe,gDAAgD,OAAO,6CAA6C,OAAO,2GAA2G,gDAAgD,uBAAuB,aAAa,+EAA+E,wEAAwE,8CAA8C,aAAa,+CAA+C,SAAS,4BAA4B,uQAAuQ,iBAAiB,8CAA8C,8PAA8P,uCAAuC,8BAA8B,4CAA4C,uCAAuC,8BAA8B,4CAA4C,4BAA4B,UAAU,qDAAqD,yEAAyE,wBAAwB,8BAA8B,4DAA4D,uCAAuC,oCAAoC,yBAAyB,UAAU,uEAAuE,8BAA8B,yEAAyE,6BAA6B,8CAA8C,aAAa,kBAAkB,uCAAuC,uCAAuC,kCAAkC,kCAAkC,aAAa,wBAAwB,UAAU,yDAAyD,8BAA8B,oEAAoE,kCAAkC,kCAAkC,uBAAuB,iCAAiC,aAAa,kBAAkB,2DAA2D,aAAa,uBAAuB,iCAAiC,aAAa,kBAAkB,2DAA2D,aAAa,2CAA2C,wBAAwB,UAAU,iCAAiC,OAAO,sDAAsD,6BAA6B,UAAU,0FAA0F,yCAAyC,0BAA0B,UAAU,wDAAwD,mDAAmD,sCAAsC,4CAA4C,uCAAuC,8BAA8B,qCAAqC,uCAAuC,8BAA8B,qCAAqC,UAAU,kJAAkJ,4CAA4C,6BAA6B,4CAA4C,4CAA4C,UAAU,uCAAuC,iCAAiC,OAAO,yBAAyB,2BAA2B,uEAAuE,kCAAkC,gCAAgC,+BAA+B,mCAAmC,qCAAqC,8FAA8F,wDAAwD,wGAAwG,gDAAgD,mDAAmD,qDAAqD,4DAA4D,iBAAiB,8BAA8B,wCAAwC,iBAAiB,sBAAsB,6CAA6C,iBAAiB,gCAAgC,wCAAwC,iCAAiC,aAAa,6BAA6B,UAAU,iCAAiC,OAAO,yBAAyB,kDAAkD,uCAAuC,kCAAkC,gCAAgC,kGAAkG,uCAAuC,4CAA4C,iBAAiB,qCAAqC,aAAa,UAAU,wFAAwF,+BAA+B,2BAA2B,UAAU,+BAA+B,aAAa,mEAAmE,uDAAuD,kLAAkL,6CAA6C,2BAA2B,iBAAiB,iDAAiD,8CAA8C,sDAAsD,qBAAqB,iBAAiB,gDAAgD,8CAA8C,kDAAkD,qBAAqB,iBAAiB,cAAc,4DAA4D,0NAA0N,cAAc,mCAAmC,8CAA8C,0BAA0B,gFAAgF,4DAA4D,SAAS,iKAAiK,0QAA0Q,gCAAgC,iBAAiB,mEAAmE,oKAAoK,kDAAkD,2CAA2C,wCAAwC,kDAAkD,4CAA4C,kDAAkD,8DAA8D,iBAAiB,yCAAyC,aAAa,yBAAyB,SAAS,gCAAgC,wIAAwI,uBAAuB,4BAA4B,OAAO,8CAA8C,OAAO,+HAA+H,uCAAuC,sCAAsC,iFAAiF,4BAA4B,2BAA2B,iBAAiB,qDAAqD,wBAAwB,sBAAsB,sDAAsD,kDAAkD,kDAAkD,4CAA4C,wDAAwD,kDAAkD,4DAA4D,sDAAsD,kGAAkG,gGAAgG,2CAA2C,oCAAoC,2CAA2C,0DAA0D,uCAAuC,qBAAqB,iBAAiB,sBAAsB,2CAA2C,iBAAiB,2GAA2G,yGAAyG,4EAA4E,4CAA4C,iDAAiD,0CAA0C,gDAAgD,6HAA6H,sCAAsC,yHAAyH,sCAAsC,iGAAiG,yBAAyB,iGAAiG,qBAAqB,iBAAiB,sBAAsB,uJAAuJ,8BAA8B,8BAA8B,0HAA0H,4DAA4D,iBAAiB,mCAAmC,uCAAuC,uCAAuC,iBAAiB,wJAAwJ,qHAAqH,gDAAgD,kDAAkD,uDAAuD,6DAA6D,2FAA2F,8KAA8K,yEAAyE,4DAA4D,4DAA4D,oDAAoD,2CAA2C,2EAA2E,mDAAmD,6EAA6E,iBAAiB,iCAAiC,sBAAsB,OAAO,0JAA0J,iEAAiE,6CAA6C,iBAAiB,gCAAgC,aAAa,UAAU,oCAAoC,aAAa,mEAAmE,mBAAmB,gUAAgU,2CAA2C,2CAA2C,kDAAkD,2DAA2D,qBAAqB,mJAAmJ,iCAAiC,wJAAwJ,uBAAuB,qBAAqB,sBAAsB,sBAAsB,+BAA+B,+BAA+B,+BAA+B,+BAA+B,iCAAiC,+BAA+B,iEAAiE,8IAA8I,uDAAuD,mCAAmC,+FAA+F,eAAe,kDAAkD,aAAa,+BAA+B,UAAU,iEAAiE,OAAO,0CAA0C,wdAAwd,sDAAsD,sDAAsD,aAAa,wCAAwC,iCAAiC,aAAa,0CAA0C,yBAAyB,4BAA4B,8BAA8B,sDAAsD,kCAAkC,yCAAyC,8CAA8C,+DAA+D,kCAAkC,iBAAiB,uCAAuC,0CAA0C,2CAA2C,iBAAiB,8BAA8B,aAAa,0CAA0C,OAAO,0BAA0B,OAAO,0BAA0B,8BAA8B,oDAAoD,0CAA0C,oDAAoD,0RAA0R,6BAA6B,+BAA+B,6BAA6B,8BAA8B,aAAa,0CAA0C,OAAO,0BAA0B,OAAO,0BAA0B,8BAA8B,oDAAoD,gNAAgN,4CAA4C,gDAAgD,iHAAiH,iBAAiB,iCAAiC,iCAAiC,iCAAiC,iBAAiB,8BAA8B,aAAa,0CAA0C,OAAO,2BAA2B,OAAO,2BAA2B,OAAO,2BAA2B,OAAO,2BAA2B,OAAO,2BAA2B,OAAO,2BAA2B,8BAA8B,6EAA6E,4DAA4D,gCAAgC,8JAA8J,iBAAiB,8BAA8B,8BAA8B,4BAA4B,aAAa,0CAA0C,OAAO,2BAA2B,OAAO,2BAA2B,OAAO,2BAA2B,OAAO,2BAA2B,8BAA8B,wEAAwE,oDAAoD,gCAAgC,oJAAoJ,iBAAiB,8BAA8B,8BAA8B,4BAA4B,aAAa,0CAA0C,OAAO,2BAA2B,OAAO,2BAA2B,OAAO,0BAA0B,OAAO,mCAAmC,OAAO,iCAAiC,QAAQ,sCAAsC,8BAA8B,2FAA2F,mJAAmJ,2FAA2F,wDAAwD,sDAAsD,4BAA4B,aAAa,4EAA4E,gCAAgC,4DAA4D,iBAAiB,4BAA4B,aAAa,+DAA+D,wDAAwD,gDAAgD,4BAA4B,aAAa,0CAA0C,8BAA8B,mDAAmD,oCAAoC,sCAAsC,kCAAkC,kCAAkC,0BAA0B,oEAAoE,oCAAoC,iBAAiB,gCAAgC,8BAA8B,4BAA4B,aAAa,2HAA2H,yBAAyB,4BAA4B,8BAA8B,iDAAiD,kCAAkC,gCAAgC,aAAa,yCAAyC,yBAAyB,4BAA4B,8BAA8B,mDAAmD,oCAAoC,gCAAgC,aAAa,yIAAyI,8BAA8B,6DAA6D,gDAAgD,8CAA8C,wCAAwC,0CAA0C,mCAAmC,qBAAqB,OAAO,mDAAmD,qBAAqB,gDAAgD,iBAAiB,4BAA4B,aAAa,yIAAyI,8BAA8B,iEAAiE,0CAA0C,4BAA4B,aAAa,wDAAwD,QAAQ,6CAA6C,iCAAiC,aAAa,kGAAkG,wCAAwC,kFAAkF,sDAAsD,iBAAiB,iCAAiC,SAAS,OAAO,2CAA2C,iBAAiB,kCAAkC,aAAa,6DAA6D,oEAAoE,6DAA6D,+CAA+C,kCAAkC,iBAAiB,sCAAsC,mCAAmC,uCAAuC,+BAA+B,SAAS,OAAO,gDAAgD,iBAAiB,2EAA2E,sEAAsE,iBAAiB,+BAA+B,SAAS,OAAO,sDAAsD,mCAAmC,2BAA2B,OAAO,gEAAgE,qBAAqB,iBAAiB,mCAAmC,aAAa,gJAAgJ,sCAAsC,2BAA2B,iBAAiB,uCAAuC,iEAAiE,mIAAmI,qCAAqC,iBAAiB,+BAA+B,sBAAsB,OAAO,qDAAqD,iBAAiB,sCAAsC,aAAa,yCAAyC,mGAAmG,qCAAqC,mCAAmC,eAAe,OAAO,kDAAkD,qBAAqB,wCAAwC,iBAAiB,aAAa,4FAA4F,QAAQ,2EAA2E,sCAAsC,aAAa,iDAAiD,4CAA4C,8CAA8C,8CAA8C,oCAAoC,oCAAoC,kCAAkC,iCAAiC,iCAAiC,uDAAuD,2BAA2B,2BAA2B,yBAAyB,4CAA4C,wBAAwB,2BAA2B,2BAA2B,mCAAmC,+FAA+F,iBAAiB,kCAAkC,iCAAiC,iCAAiC,kJAAkJ,wCAAwC,yCAAyC,mCAAmC,mCAAmC,sDAAsD,0JAA0J,iCAAiC,qBAAqB,gNAAgN,iBAAiB,qEAAqE,4BAA4B,gEAAgE,aAAa,6GAA6G,4CAA4C,8CAA8C,8CAA8C,oCAAoC,oCAAoC,kCAAkC,sBAAsB,uBAAuB,uBAAuB,4CAA4C,kCAAkC,wCAAwC,4CAA4C,wBAAwB,sBAAsB,iCAAiC,mCAAmC,+FAA+F,iBAAiB,kCAAkC,kEAAkE,OAAO,YAAY,8GAA8G,8GAA8G,6DAA6D,iBAAiB,oEAAoE,aAAa,SAAS,4CAA4C,0CAA0C,8BAA8B,qBAAqB,iBAAiB,kDAAkD,kCAAkC,qDAAqD,mDAAmD,wMAAwM,qDAAqD,8CAA8C,iBAAiB,+HAA+H,4BAA4B,4BAA4B,gEAAgE,aAAa,8DAA8D,gGAAgG,4BAA4B,uCAAuC,uCAAuC,6CAA6C,6CAA6C,+DAA+D,aAAa,wKAAwK,qCAAqC,4CAA4C,4CAA4C,wCAAwC,2DAA2D,qBAAqB,iBAAiB,aAAa,0CAA0C,iCAAiC,yDAAyD,uEAAuE,wEAAwE,uCAAuC,2BAA2B,2BAA2B,2BAA2B,2BAA2B,iCAAiC,iBAAiB,GAAG,wCAAwC,mCAAmC,uNAAuN,yCAAyC,kCAAkC,gCAAgC,qBAAqB,oCAAoC,gMAAgM,2CAA2C,oCAAoC,oCAAoC,yCAAyC,yCAAyC,yCAAyC,yCAAyC,kCAAkC,uHAAuH,2CAA2C,2CAA2C,kCAAkC,+PAA+P,2CAA2C,2CAA2C,kCAAkC,6OAA6O,2CAA2C,2CAA2C,kCAAkC,kIAAkI,+CAA+C,+CAA+C,+CAA+C,uDAAuD,kEAAkE,0FAA0F,8DAA8D,2CAA2C,+JAA+J,mEAAmE,6BAA6B,uMAAuM,+DAA+D,6DAA6D,kCAAkC,mFAAmF,gDAAgD,kDAAkD,mDAAmD,kIAAkI,kCAAkC,uEAAuE,oCAAoC,kCAAkC,qBAAqB,2EAA2E,6CAA6C,iBAAiB,0DAA0D,0DAA0D,iBAAiB,gIAAgI,aAAa,qKAAqK,uBAAuB,4DAA4D,kCAAkC,2BAA2B,2BAA2B,yBAAyB,kCAAkC,kCAAkC,oCAAoC,+BAA+B,SAAS,GAAG,qCAAqC,mCAAmC,oNAAoN,sCAAsC,kCAAkC,gCAAgC,qBAAqB,kCAAkC,gFAAgF,6CAA6C,+CAA+C,kCAAkC,0EAA0E,uCAAuC,6JAA6J,iDAAiD,uCAAuC,uCAAuC,6BAA6B,kCAAkC,6LAA6L,0CAA0C,0CAA0C,kCAAkC,oHAAoH,0CAA0C,0CAA0C,kCAAkC,+EAA+E,4CAA4C,4CAA4C,4CAA4C,+CAA+C,gDAAgD,6CAA6C,4CAA4C,wDAAwD,iEAAiE,iEAAiE,qEAAqE,0DAA0D,4CAA4C,sDAAsD,gDAAgD,0DAA0D,0EAA0E,kEAAkE,iDAAiD,wDAAwD,6BAA6B,kCAAkC,4EAA4E,6BAA6B,2CAA2C,0JAA0J,8DAA8D,6BAA6B,6DAA6D,6DAA6D,kCAAkC,8EAA8E,+CAA+C,qEAAqE,kCAAkC,+EAA+E,oCAAoC,oCAAoC,qBAAqB,iBAAiB,aAAa,UAAU,8BAA8B,qCAAqC,aAAa,mEAAmE,mBAAmB,iKAAiK,mCAAmC,2CAA2C,+BAA+B,iCAAiC,6BAA6B,mCAAmC,uCAAuC,8BAA8B,8CAA8C,6BAA6B,6BAA6B,mCAAmC,sCAAsC,mDAAmD,SAAS,uCAAuC,mDAAmD,SAAS,gGAAgG,OAAO,uBAAuB,OAAO,uBAAuB,OAAO,uBAAuB,OAAO,uBAAuB,OAAO,sBAAsB,OAAO,wDAAwD,6BAA6B,6GAA6G,SAAS,oGAAoG,OAAO,uBAAuB,OAAO,uBAAuB,OAAO,uBAAuB,OAAO,uBAAuB,OAAO,sBAAsB,OAAO,kEAAkE,6BAA6B,sIAAsI,SAAS,2GAA2G,OAAO,uBAAuB,OAAO,uBAAuB,OAAO,uBAAuB,OAAO,uBAAuB,OAAO,wBAAwB,eAAe,0BAA0B,OAAO,2EAA2E,4FAA4F,2CAA2C,mCAAmC,6BAA6B,wCAAwC,sCAAsC,sCAAsC,wBAAwB,uDAAuD,sCAAsC,iCAAiC,iBAAiB,sBAAsB,oCAAoC,0EAA0E,wCAAwC,qBAAqB,iBAAiB,aAAa,kBAAkB,6CAA6C,2CAA2C,kCAAkC,wCAAwC,0DAA0D,wDAAwD,wCAAwC,qBAAqB,6CAA6C,wCAAwC,qBAAqB,iBAAiB,oCAAoC,kDAAkD,+DAA+D,+DAA+D,iCAAiC,sDAAsD,qBAAqB,0BAA0B,oDAAoD,qBAAqB,iCAAiC,sDAAsD,qBAAqB,0BAA0B,oDAAoD,qBAAqB,wDAAwD,6CAA6C,wCAAwC,qBAAqB,iBAAiB,sBAAsB,gFAAgF,iDAAiD,4CAA4C,8CAA8C,gEAAgE,2FAA2F,2FAA2F,6CAA6C,wCAAwC,qBAAqB,6CAA6C,wCAAwC,qBAAqB,6CAA6C,wCAAwC,qBAAqB,iBAAiB,aAAa,qBAAqB,SAAS,yGAAyG,OAAO,uBAAuB,OAAO,uBAAuB,OAAO,uBAAuB,OAAO,uBAAuB,eAAe,4BAA4B,OAAO,wEAAwE,8CAA8C,sDAAsD,oCAAoC,wBAAwB,kCAAkC,yCAAyC,oCAAoC,4CAA4C,0CAA0C,qBAAqB,iBAAiB,aAAa,kBAAkB,6CAA6C,yCAAyC,8CAA8C,iBAAiB,oCAAoC,kDAAkD,uDAAuD,uDAAuD,6CAA6C,0CAA0C,qBAAqB,6CAA6C,0CAA0C,qBAAqB,iBAAiB,aAAa,qBAAqB,SAAS,mGAAmG,OAAO,uBAAuB,OAAO,uBAAuB,OAAO,uBAAuB,OAAO,uBAAuB,OAAO,sBAAsB,eAAe,wEAAwE,yCAAyC,yCAAyC,yCAAyC,+CAA+C,6CAA6C,mDAAmD,2CAA2C,yBAAyB,0BAA0B,2BAA2B,8CAA8C,0BAA0B,yBAAyB,wBAAwB,SAAS,wGAAwG,OAAO,sBAAsB,OAAO,sBAAsB,OAAO,sBAAsB,OAAO,sBAAsB,OAAO,sBAAsB,OAAO,sBAAsB,OAAO,sBAAsB,OAAO,sBAAsB,OAAO,qBAAqB,OAAO,qBAAqB,eAAe,8BAA8B,OAAO,yHAAyH,+EAA+E,iCAAiC,6BAA6B,qBAAqB,qBAAqB,mBAAmB,mBAAmB,yBAAyB,uBAAuB,sFAAsF,QAAQ,cAAc,qDAAqD,qDAAqD,4CAA4C,6BAA6B,2BAA2B,2BAA2B,iBAAiB,aAAa,yBAAyB,gEAAgE,QAAQ,OAAO,iDAAiD,0BAA0B,iBAAiB,oCAAoC,oCAAoC,sFAAsF,uDAAuD,8CAA8C,4CAA4C,6BAA6B,2BAA2B,iBAAiB,sBAAsB,8FAA8F,2DAA2D,gDAAgD,gDAAgD,iCAAiC,+BAA+B,qBAAqB,0BAA0B,wCAAwC,qBAAqB,iBAAiB,aAAa,sCAAsC,oDAAoD,oDAAoD,aAAa,wCAAwC,+BAA+B,SAAS,qDAAqD,OAAO,uBAAuB,OAAO,uBAAuB,OAAO,uBAAuB,OAAO,sBAAsB,OAAO,wDAAwD,6BAA6B,gEAAgE,SAAS,uDAAuD,OAAO,uBAAuB,OAAO,uBAAuB,OAAO,uBAAuB,OAAO,sBAAsB,OAAO,kEAAkE,6DAA6D,SAAS,uDAAuD,OAAO,uBAAuB,OAAO,uBAAuB,OAAO,uBAAuB,OAAO,sBAAsB,eAAe,0BAA0B,OAAO,2EAA2E,qCAAqC,kCAAkC,6BAA6B,wBAAwB,kCAAkC,yCAAyC,oCAAoC,6CAA6C,wCAAwC,qBAAqB,iBAAiB,aAAa,kBAAkB,6CAA6C,yCAAyC,0CAA0C,6CAA6C,wCAAwC,qBAAqB,iBAAiB,oCAAoC,kDAAkD,uDAAuD,uDAAuD,6CAA6C,wCAAwC,qBAAqB,6CAA6C,wCAAwC,qBAAqB,iBAAiB,aAAa,qBAAqB,SAAS,sGAAsG,OAAO,uBAAuB,OAAO,uBAAuB,OAAO,uBAAuB,OAAO,2DAA2D,2CAA2C,gCAAgC,uEAAuE,aAAa,kBAAkB,2CAA2C,aAAa,SAAS,mGAAmG,OAAO,uBAAuB,OAAO,uBAAuB,OAAO,uBAAuB,OAAO,sBAAsB,eAAe,wEAAwE,yCAAyC,yCAAyC,6CAA6C,6CAA6C,yBAAyB,0BAA0B,+CAA+C,yBAAyB,wBAAwB,SAAS,wGAAwG,OAAO,sBAAsB,OAAO,sBAAsB,OAAO,sBAAsB,OAAO,sBAAsB,OAAO,sBAAsB,OAAO,sBAAsB,OAAO,qBAAqB,OAAO,qBAAqB,eAAe,4BAA4B,OAAO,qHAAqH,+EAA+E,iCAAiC,6BAA6B,yBAAyB,uBAAuB,sFAAsF,QAAQ,cAAc,qDAAqD,qDAAqD,gDAAgD,6BAA6B,2BAA2B,2BAA2B,iBAAiB,aAAa,yBAAyB,gEAAgE,QAAQ,OAAO,iDAAiD,0BAA0B,iBAAiB,wCAAwC,wCAAwC,sFAAsF,uDAAuD,kDAAkD,4CAA4C,6BAA6B,2BAA2B,iBAAiB,sBAAsB,8FAA8F,2DAA2D,oDAAoD,8CAA8C,iCAAiC,+BAA+B,qBAAqB,0BAA0B,wCAAwC,qBAAqB,iBAAiB,aAAa,sCAAsC,oDAAoD,oDAAoD,aAAa,wCAAwC,+BAA+B,SAAS,4BAA4B,+jBAA+jB,aAAa,mEAAmE,iHAAiH,4CAA4C,wBAAwB,+BAA+B,+BAA+B,+BAA+B,+BAA+B,oCAAoC,gCAAgC,sCAAsC,gCAAgC,0GAA0G,cAAc,+BAA+B,OAAO,uBAAuB,OAAO,qEAAqE,sCAAsC,uBAAuB,aAAa,8BAA8B,4BAA4B,6BAA6B,2BAA2B,8BAA8B,kBAAkB,yBAAyB,mBAAmB,OAAO,8BAA8B,2CAA2C,6CAA6C,yCAAyC,+CAA+C,aAAa,4BAA4B,yBAAyB,2BAA2B,4BAA4B,UAAU,6EAA6E,OAAO,sBAAsB,OAAO,sBAAsB,OAAO,sBAAsB,OAAO,sBAAsB,eAAe,uBAAuB,eAAe,4EAA4E,qCAAqC,qCAAqC,qCAAqC,qCAAqC,UAAU,wBAAwB,sBAAsB,sIAAsI,OAAO,sBAAsB,OAAO,sBAAsB,OAAO,sBAAsB,OAAO,sBAAsB,OAAO,sBAAsB,OAAO,sBAAsB,OAAO,sBAAsB,OAAO,sBAAsB,eAAe,uBAAuB,eAAe,gHAAgH,kDAAkD,wCAAwC,kBAAkB,uDAAuD,8BAA8B,8BAA8B,+BAA+B,+BAA+B,yBAAyB,OAAO,OAAO,yDAAyD,4CAA4C,4CAA4C,aAAa,mDAAmD,uBAAuB,OAAO,OAAO,yDAAyD,4CAA4C,4CAA4C,aAAa,2CAA2C,yCAAyC,yCAAyC,yCAAyC,2CAA2C,yCAAyC,yCAAyC,yCAAyC,UAAU,oIAAoI,OAAO,sBAAsB,OAAO,sBAAsB,OAAO,sBAAsB,OAAO,sBAAsB,OAAO,sBAAsB,OAAO,sBAAsB,eAAe,uBAAuB,eAAe,wFAAwF,4DAA4D,gDAAgD,yMAAyM,8HAA8H,kDAAkD,gDAAgD,0CAA0C,wCAAwC,wCAAwC,wCAAwC,UAAU,qIAAqI,OAAO,qBAAqB,OAAO,qBAAqB,OAAO,sBAAsB,OAAO,sBAAsB,OAAO,8BAA8B,OAAO,4BAA4B,OAAO,iCAAiC,eAAe,uBAAuB,eAAe,kIAAkI,mCAAmC,mCAAmC,yDAAyD,uDAAuD,8DAA8D,gCAAgC,gCAAgC,gCAAgC,uBAAuB,aAAa,sDAAsD,oDAAoD,kDAAkD,gDAAgD,uCAAuC,qCAAqC,uFAAuF,iCAAiC,8CAA8C,aAAa,wCAAwC,+BAA+B,0CAA0C,aAAa,4DAA4D,gCAAgC,aAAa,8DAA8D,kCAAkC,aAAa,gCAAgC,mCAAmC,sCAAsC,iCAAiC,aAAa,gCAAgC,mEAAmE,+BAA+B,kBAAkB,wBAAwB,yCAAyC,2DAA2D,2DAA2D,mDAAmD,iDAAiD,iBAAiB,aAAa,UAAU,gCAAgC,eAAe,mEAAmE,mBAAmB,kDAAkD,2CAA2C,4CAA4C,gDAAgD,0CAA0C,sEAAsE,4CAA4C,oDAAoD,iDAAiD,gCAAgC,6BAA6B,wCAAwC,6CAA6C,SAAS,kDAAkD,+BAA+B,kCAAkC,iCAAiC,oCAAoC,6BAA6B,SAAS,uEAAuE,yKAAyK,yBAAyB,aAAa,qEAAqE,+BAA+B,yBAAyB,aAAa,kBAAkB,0BAA0B,kCAAkC,6BAA6B,+BAA+B,YAAY,OAAO,qCAAqC,8KAA8K,gEAAgE,iCAAiC,iDAAiD,qBAAqB,uCAAuC,+EAA+E,sEAAsE,0CAA0C,yBAAyB,wEAAwE,2CAA2C,4EAA4E,yBAAyB,qBAAqB,wCAAwC,gFAAgF,yDAAyD,yBAAyB,kDAAkD,0DAA0D,yBAAyB,8BAA8B,yDAAyD,yBAAyB,qBAAqB,0BAA0B,gFAAgF,yDAAyD,yBAAyB,8BAA8B,yDAAyD,yBAAyB,qBAAqB,iBAAiB,yBAAyB,aAAa,SAAS,mEAAmE,qJAAqJ,yBAAyB,aAAa,qEAAqE,+BAA+B,yBAAyB,aAAa,kBAAkB,4DAA4D,uCAAuC,8BAA8B,8DAA8D,mCAAmC,YAAY,OAAO,+HAA+H,2EAA2E,qCAAqC,uDAAuD,yBAAyB,2CAA2C,wDAAwD,yBAAyB,8BAA8B,wDAAwD,yBAAyB,qBAAqB,6BAA6B,iBAAiB,sBAAsB,uHAAuH,uEAAuE,iCAAiC,mDAAmD,qBAAqB,kDAAkD,iBAAiB,aAAa,SAAS,yIAAyI,oBAAoB,kCAAkC,yBAAyB,aAAa,+CAA+C,4BAA4B,2BAA2B,yDAAyD,8BAA8B,yBAAyB,aAAa,oCAAoC,6DAA6D,+BAA+B,iDAAiD,+DAA+D,+BAA+B,iBAAiB,OAAO,6BAA6B,iBAAiB,aAAa,kCAAkC,qCAAqC,uDAAuD,gDAAgD,aAAa,kBAAkB,yDAAyD,qDAAqD,aAAa,wCAAwC,gCAAgC,aAAa,wBAAwB,2BAA2B,OAAO,OAAO,kCAAkC,kCAAkC,kDAAkD,qDAAqD,oCAAoC,4CAA4C,qBAAqB,kMAAkM,2EAA2E,uCAAuC,yBAAyB,iCAAiC,qBAAqB,iBAAiB,aAAa,qBAAqB,SAAS,iEAAiE,sBAAsB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,6BAA6B,iBAAiB,GAAG,oCAAoC,mFAAmF,iFAAiF,+DAA+D,qBAAqB,8EAA8E,uCAAuC,wBAAwB,iBAAiB,+BAA+B,mMAAmM,qCAAqC,8BAA8B,4BAA4B,iBAAiB,gCAAgC,gLAAgL,uCAAuC,gCAAgC,gCAAgC,8BAA8B,sEAAsE,+FAA+F,4CAA4C,6BAA6B,yBAAyB,8BAA8B,qJAAqJ,yBAAyB,uCAAuC,uCAAuC,8BAA8B,sEAAsE,2OAA2O,4CAA4C,6BAA6B,yBAAyB,8BAA8B,6PAA6P,yBAAyB,uCAAuC,uCAAuC,8BAA8B,sEAAsE,yNAAyN,4CAA4C,6BAA6B,yBAAyB,8BAA8B,2OAA2O,yBAAyB,uCAAuC,uCAAuC,8BAA8B,sHAAsH,2CAA2C,2CAA2C,2CAA2C,8CAA8C,+CAA+C,kFAAkF,0DAA0D,2DAA2D,2DAA2D,4EAA4E,mEAAmE,yBAAyB,8BAA8B,8EAA8E,oCAAoC,yBAAyB,gHAAgH,uCAAuC,mNAAmN,4CAA4C,6BAA6B,yBAAyB,8BAA8B,gMAAgM,yBAAyB,gEAAgE,gEAAgE,8BAA8B,2EAA2E,4CAA4C,8CAA8C,+CAA+C,4CAA4C,6CAA6C,uCAAuC,0VAA0V,4CAA4C,6BAA6B,yBAAyB,8BAA8B,mHAAmH,mEAAmE,yBAAyB,8BAA8B,sEAAsE,6IAA6I,4CAA4C,6BAA6B,yBAAyB,8BAA8B,iHAAiH,uJAAuJ,+CAA+C,gCAAgC,yBAAyB,gCAAgC,gCAAgC,8BAA8B,iBAAiB,aAAa,sDAAsD,4DAA4D,aAAa,2BAA2B,SAAS,4BAA4B,gDAAgD,6DAA6D,aAAa,oEAAoE,oEAAoE,aAAa,UAAU,aAAa,8CAA8C,gCAAgC,4DAA4D,OAAO,4BAA4B,OAAO,4BAA4B,OAAO,4BAA4B,OAAO,4BAA4B,OAAO,mCAAmC,OAAO,2BAA2B,OAAO,2BAA2B,QAAQ,sFAAsF,sCAAsC,iCAAiC,iBAAiB,mCAAmC,2BAA2B,4BAA4B,+QAA+Q,iCAAiC,iBAAiB,kCAAkC,+CAA+C,0DAA0D,iBAAiB,sBAAsB,sDAAsD,iBAAiB,0CAA0C,mDAAmD,6CAA6C,aAAa,UAAU,aAAa,mEAAmE,oDAAoD,4BAA4B,mEAAmE,OAAO,4BAA4B,OAAO,4BAA4B,OAAO,4BAA4B,OAAO,4BAA4B,OAAO,4BAA4B,OAAO,4BAA4B,OAAO,4BAA4B,OAAO,4BAA4B,OAAO,mCAAmC,OAAO,2BAA2B,OAAO,2BAA2B,QAAQ,qGAAqG,sCAAsC,iCAAiC,iBAAiB,mCAAmC,uYAAuY,iCAAiC,iBAAiB,mJAAmJ,mCAAmC,aAAa,UAAU,aAAa,mEAAmE,oDAAoD,4BAA4B,mEAAmE,OAAO,4BAA4B,OAAO,4BAA4B,OAAO,4BAA4B,OAAO,4BAA4B,OAAO,4BAA4B,OAAO,4BAA4B,OAAO,mCAAmC,OAAO,2BAA2B,OAAO,2BAA2B,QAAQ,8FAA8F,sCAAsC,iCAAiC,iBAAiB,mCAAmC,2UAA2U,iCAAiC,iBAAiB,+IAA+I,mCAAmC,aAAa,UAAU,aAAa,mEAAmE,8EAA8E,8BAA8B,4BAA4B,8DAA8D,OAAO,4BAA4B,OAAO,4BAA4B,OAAO,2BAA2B,OAAO,oCAAoC,OAAO,kCAAkC,QAAQ,uCAAuC,OAAO,kCAAkC,OAAO,2BAA2B,OAAO,2BAA2B,QAAQ,iKAAiK,wCAAwC,iCAAiC,iBAAiB,mCAAmC,0BAA0B,wBAAwB,iDAAiD,qDAAqD,iCAAiC,iBAAiB,mEAAmE,kEAAkE,iBAAiB,oCAAoC,yCAAyC,2DAA2D,oDAAoD,iBAAiB,OAAO,6DAA6D,yDAAyD,iBAAiB,4CAA4C,oCAAoC,iBAAiB,+CAA+C,gCAAgC,iCAAiC,iBAAiB,+IAA+I,aAAa,UAAU,aAAa,8CAA8C,sCAAsC,0BAA0B,8CAA8C,6BAA6B,gCAAgC,iCAAiC,iBAAiB,6BAA6B,aAAa,UAAU,aAAa,8CAA8C,2EAA2E,2DAA2D,yBAAyB,aAAa,iEAAiE,yBAAyB,aAAa,uCAAuC,yCAAyC,6IAA6I,2CAA2C,aAAa,0CAA0C,sCAAsC,UAAU,aAAa,8CAA8C,wDAAwD,qHAAqH,WAAW,8EAA8E,iCAAiC,gEAAgE,UAAU,+DAA+D,0EAA0E,UAAU,mCAAmC,aAAa,mEAAmE,sDAAsD,2CAA2C,mDAAmD,oCAAoC,iCAAiC,mCAAmC,yCAAyC,iCAAiC,oBAAoB,uBAAuB,kBAAkB,kBAAkB,kBAAkB,kBAAkB,4BAA4B,0BAA0B,0BAA0B,0BAA0B,0BAA0B,0BAA0B,gCAAgC,iBAAiB,GAAG,gCAAgC,sBAAsB,2BAA2B,gCAAgC,8DAA8D,8BAA8B,8DAA8D,8BAA8B,8DAA8D,8BAA8B,8DAA8D,8BAA8B,gEAAgE,qCAAqC,qEAAqE,qEAAqE,qEAAqE,mEAAmE,uCAAuC,mEAAmE,uCAAuC,uIAAuI,wCAAwC,mFAAmF,+EAA+E,mEAAmE,8BAA8B,8BAA8B,qGAAqG,yCAAyC,kDAAkD,yCAAyC,yCAAyC,2EAA2E,0CAA0C,kDAAkD,yCAAyC,yCAAyC,iBAAiB,6BAA6B,YAAY,OAAO,sCAAsC,qCAAqC,qCAAqC,gDAAgD,sEAAsE,qCAAqC,iBAAiB,aAAa,SAAS,yCAAyC,aAAa,mEAAmE,sKAAsK,oEAAoE,+BAA+B,+BAA+B,+BAA+B,6BAA6B,uBAAuB,6FAA6F,YAAY,GAAG,qBAAqB,uDAAuD,8CAA8C,kDAAkD,yOAAyO,gCAAgC,uCAAuC,qCAAqC,+CAA+C,0CAA0C,iBAAiB,aAAa,kCAAkC,oCAAoC,kCAAkC,UAAU,6BAA6B,oGAAoG,OAAO,wKAAwK,QAAQ,+GAA+G,+BAA+B,kDAAkD,8CAA8C,aAAa,yEAAyE,OAAO,4BAA4B,uBAAuB,oDAAoD,2CAA2C,aAAa,oEAAoE,OAAO,6BAA6B,uBAAuB,yDAAyD,8CAA8C,+BAA+B,qBAAqB,OAAO,oDAAoD,2CAA2C,qBAAqB,kBAAkB,aAAa,0CAA0C,OAAO,oDAAoD,6CAA6C,aAAa,gEAAgE,uBAAuB,wDAAwD,uEAAuE,iDAAiD,yCAAyC,iBAAiB,8BAA8B,aAAa,6EAA6E,uBAAuB,6BAA6B,uBAAuB,iFAAiF,wIAAwI,oDAAoD,4DAA4D,qCAAqC,uDAAuD,2CAA2C,qBAAqB,iBAAiB,8BAA8B,aAAa,yCAAyC,mCAAmC,+CAA+C,iBAAiB,sCAAsC,+CAA+C,mCAAmC,6DAA6D,kDAAkD,mDAAmD,4DAA4D,qBAAqB,iBAAiB,qCAAqC,aAAa,6DAA6D,uBAAuB,2DAA2D,mCAAmC,6CAA6C,8CAA8C,4DAA4D,8BAA8B,gCAAgC,iBAAiB,wCAAwC,sCAAsC,gCAAgC,oDAAoD,mDAAmD,8DAA8D,qBAAqB,iBAAiB,qCAAqC,8BAA8B,aAAa,2FAA2F,8CAA8C,6CAA6C,0BAA0B,sBAAsB,2BAA2B,qBAAqB,OAAO,wCAAwC,kCAAkC,sDAAsD,qDAAqD,kEAAkE,yBAAyB,qBAAqB,wCAAwC,iBAAiB,oCAAoC,8BAA8B,aAAa,gEAAgE,SAAS,4BAA4B,wEAAwE,8CAA8C,+BAA+B,qBAAqB,OAAO,4CAA4C,+CAA+C,iBAAiB,4BAA4B,aAAa,qEAAqE,SAAS,4BAA4B,uEAAuE,+BAA+B,2BAA2B,OAAO,kDAAkD,4CAA4C,mDAAmD,oDAAoD,qBAAqB,iBAAiB,4BAA4B,aAAa,yDAAyD,+BAA+B,2BAA2B,OAAO,kDAAkD,gDAAgD,iDAAiD,4DAA4D,qBAAqB,iBAAiB,aAAa,2DAA2D,+BAA+B,2BAA2B,OAAO,kDAAkD,kDAAkD,iDAAiD,8DAA8D,qBAAqB,iBAAiB,aAAa,mCAAmC,oCAAoC,iDAAiD,4BAA4B,aAAa,0CAA0C,iCAAiC,wEAAwE,+DAA+D,2DAA2D,iEAAiE,gCAAgC,iCAAiC,qBAAqB,OAAO,4CAA4C,0DAA0D,iCAAiC,qBAAqB,8DAA8D,oEAAoE,whBAAwhB,gDAAgD,0DAA0D,uDAAuD,4CAA4C,qBAAqB,0BAA0B,yDAAyD,8CAA8C,qBAAqB,iBAAiB,uCAAuC,aAAa,UAAU,0CAA0C,iCAAiC,aAAa,mEAAmE,gIAAgI,kDAAkD,4CAA4C,4CAA4C,2CAA2C,kJAAkJ,OAAO,+CAA+C,yCAAyC,SAAS,8BAA8B,2GAA2G,uCAAuC,sCAAsC,0BAA0B,sFAAsF,4FAA4F,wCAAwC,iBAAiB,0GAA0G,gCAAgC,iBAAiB,6FAA6F,uHAAuH,wCAAwC,yFAAyF,oDAAoD,gDAAgD,2CAA2C,iCAAiC,OAAO,gEAAgE,6BAA6B,0BAA0B,wCAAwC,8GAA8G,wCAAwC,gEAAgE,4CAA4C,+BAA+B,qBAAqB,0BAA0B,mDAAmD,4CAA4C,wIAAwI,4DAA4D,mCAAmC,yBAAyB,qBAAqB,iBAAiB,8BAA8B,kGAAkG,iDAAiD,sCAAsC,4BAA4B,wBAAwB,gFAAgF,yCAAyC,qFAAqF,+BAA+B,qBAAqB,4CAA4C,8CAA8C,4DAA4D,0DAA0D,kGAAkG,qBAAqB,+DAA+D,gDAAgD,qBAAqB,+DAA+D,4CAA4C,8CAA8C,qBAAqB,+EAA+E,0DAA0D,+CAA+C,+CAA+C,iNAAiN,qBAAqB,oDAAoD,0CAA0C,0CAA0C,gDAAgD,kDAAkD,qMAAqM,qBAAqB,0BAA0B,kEAAkE,qBAAqB,iDAAiD,oFAAoF,uEAAuE,qBAAqB,mBAAmB,aAAa,6CAA6C,uCAAuC,mCAAmC,+JAA+J,iBAAiB,kCAAkC,aAAa,UAAU,+CAA+C,kCAAkC,aAAa,mEAAmE,8LAA8L,4CAA4C,iDAAiD,mJAAmJ,OAAO,oDAAoD,yCAAyC,UAAU,4BAA4B,wGAAwG,uCAAuC,qCAAqC,qCAAqC,0EAA0E,mFAAmF,oFAAoF,6BAA6B,6CAA6C,uCAAuC,oDAAoD,4DAA4D,kDAAkD,uJAAuJ,8FAA8F,0DAA0D,qHAAqH,sCAAsC,iHAAiH,sCAAsC,6FAA6F,yBAAyB,qBAAqB,0BAA0B,0DAA0D,qBAAqB,mGAAmG,wDAAwD,gKAAgK,+CAA+C,qBAAqB,+HAA+H,yHAAyH,wDAAwD,qBAAqB,oFAAoF,wDAAwD,mCAAmC,sBAAsB,OAAO,yKAAyK,4EAA4E,wCAAwC,qBAAqB,iDAAiD,iBAAiB,aAAa,6CAA6C,uCAAuC,kCAAkC,oEAAoE,8OAA8O,gDAAgD,4FAA4F,kCAAkC,wFAAwF,kCAAkC,qBAAqB,2CAA2C,2CAA2C,4CAA4C,gDAAgD,wCAAwC,wCAAwC,wCAAwC,yCAAyC,qBAAqB,sCAAsC,iBAAiB,oCAAoC,aAAa,UAAU,6CAA6C,gCAAgC,aAAa,mEAAmE,mBAAmB,yHAAyH,mDAAmD,6EAA6E,8DAA8D,sKAAsK,6DAA6D,iBAAiB,yBAAyB,8DAA8D,4DAA4D,wBAAwB,oBAAoB,6GAA6G,2EAA2E,aAAa,SAAS,EAAE,eAAe,mEAAmE,mHAAmH,2CAA2C,yKAAyK,wCAAwC,mDAAmD,qNAAqN,ieAAie,uCAAuC,oCAAoC,+BAA+B,wCAAwC,sDAAsD,mDAAmD,qDAAqD,2CAA2C,iCAAiC,sCAAsC,uCAAuC,sBAAsB,OAAO,2EAA2E,+EAA+E,+CAA+C,uBAAuB,OAAO,+EAA+E,+EAA+E,iCAAiC,gDAAgD,sCAAsC,6BAA6B,yBAAyB,qBAAqB,kEAAkE,qCAAqC,uCAAuC,uBAAuB,OAAO,uEAAuE,yBAAyB,qBAAqB,iBAAiB,uFAAuF,mCAAmC,iCAAiC,oDAAoD,6CAA6C,kDAAkD,8CAA8C,gDAAgD,mDAAmD,iDAAiD,6DAA6D,2DAA2D,qEAAqE,8IAA8I,iCAAiC,uEAAuE,iBAAiB,kCAAkC,aAAa,SAAS,EAAE,eAAe,mEAAmE,+HAA+H,iDAAiD,mGAAmG,iDAAiD,iCAAiC,iCAAiC,sCAAsC,2CAA2C,sDAAsD,4CAA4C,sDAAsD,aAAa,SAAS,EAAE,eAAe,mEAAmE,mHAAmH,2DAA2D,8DAA8D,kHAAkH,iDAAiD,uDAAuD,aAAa,SAAS,EAAE,aAAa,mEAAmE,2DAA2D,mDAAmD,4BAA4B,yDAAyD,0CAA0C,0CAA0C,mDAAmD,wDAAwD,gKAAgK,iEAAiE,gDAAgD,uCAAuC,iCAAiC,OAAO,2DAA2D,+DAA+D,0DAA0D,sJAAsJ,yBAAyB,qBAAqB,0BAA0B,kDAAkD,qEAAqE,yBAAyB,iEAAiE,0DAA0D,OAAO,OAAO,mEAAmE,yBAAyB,qBAAqB,mDAAmD,iBAAiB,aAAa,UAAU,aAAa,mEAAmE,qSAAqS,kGAAkG,qCAAqC,qCAAqC,4IAA4I,SAAS,wFAAwF,MAAM,iCAAiC,QAAQ,2BAA2B,MAAM,+DAA+D,oCAAoC,yBAAyB,+BAA+B,2BAA2B,SAAS,OAAO,oEAAoE,aAAa,sCAAsC,2CAA2C,2BAA2B,UAAU,OAAO,oEAAoE,0CAA0C,oCAAoC,yBAAyB,2CAA2C,uBAAuB,uBAAuB,8BAA8B,2DAA2D,mEAAmE,mEAAmE,iBAAiB,sBAAsB,uDAAuD,iDAAiD,iDAAiD,iBAAiB,iCAAiC,gCAAgC,4LAA4L,aAAa,uBAAuB,UAAU,eAAe,mEAAmE,uRAAuR,6BAA6B,6BAA6B,iCAAiC,uCAAuC,6BAA6B,0GAA0G,MAAM,iCAAiC,OAAO,oCAAoC,QAAQ,0BAA0B,MAAM,gLAAgL,MAAM,8FAA8F,yBAAyB,yBAAyB,wBAAwB,wBAAwB,0BAA0B,0BAA0B,2BAA2B,6BAA6B,2CAA2C,6CAA6C,oDAAoD,SAAS,OAAO,+CAA+C,+CAA+C,iBAAiB,4EAA4E,+CAA+C,aAAa,kDAAkD,SAAS,OAAO,sCAAsC,+BAA+B,4DAA4D,sDAAsD,iBAAiB,sBAAsB,mDAAmD,wDAAwD,iCAAiC,qBAAqB,0BAA0B,kDAAkD,kDAAkD,qBAAqB,iBAAiB,oDAAoD,gGAAgG,wDAAwD,sDAAsD,kCAAkC,gCAAgC,8BAA8B,8BAA8B,iBAAiB,sCAAsC,mCAAmC,+CAA+C,+CAA+C,iCAAiC,yCAAyC,yCAAyC,yCAAyC,yCAAyC,iBAAiB,8BAA8B,8BAA8B,aAAa,2BAA2B,sCAAsC,aAAa,yBAAyB,UAAU,eAAe,mEAAmE,kHAAkH,2DAA2D,+DAA+D,kHAAkH,uBAAuB,wEAAwE,iDAAiD,wDAAwD,aAAa,SAAS,EAAE,aAAa,mEAAmE,4HAA4H,2DAA2D,iDAAiD,oXAAoX,iDAAiD,gCAAgC,gCAAgC,wCAAwC,0CAA0C,+BAA+B,kDAAkD,iBAAiB,sBAAsB,0DAA0D,iBAAiB,gCAAgC,uBAAuB,aAAa,SAAS,EAAE,eAAe,8CAA8C,kCAAkC,8CAA8C,gCAAgC,gCAAgC,wCAAwC,0CAA0C,gCAAgC,uBAAuB,uBAAuB,uBAAuB,uBAAuB,iHAAiH,kCAAkC,mCAAmC,iBAAiB,iCAAiC,mCAAmC,qCAAqC,iBAAiB,8CAA8C,0CAA0C,iBAAiB,8CAA8C,yCAAyC,iDAAiD,qBAAqB,8CAA8C,uCAAuC,uCAAuC,qBAAqB,8CAA8C,kCAAkC,uCAAuC,kCAAkC,qBAAqB,0BAA0B,kCAAkC,kCAAkC,kCAAkC,kCAAkC,qBAAqB,iBAAiB,sBAAsB,0CAA0C,iBAAiB,4BAA4B,sCAAsC,oCAAoC,wCAAwC,wCAAwC,iBAAiB,sCAAsC,oCAAoC,wCAAwC,wCAAwC,iBAAiB,uCAAuC,oCAAoC,yCAAyC,yCAAyC,iBAAiB,uCAAuC,oCAAoC,yCAAyC,yCAAyC,iBAAiB,sCAAsC,8CAA8C,sHAAsH,uDAAuD,wIAAwI,+CAA+C,wHAAwH,sCAAsC,kEAAkE,aAAa,UAAU,aAAa,mEAAmE,6HAA6H,iDAAiD,2LAA2L,uBAAuB,sEAAsE,iDAAiD,kCAAkC,kCAAkC,kCAAkC,kCAAkC,4CAA4C,sCAAsC,2BAA2B,iBAAiB,qCAAqC,oCAAoC,2DAA2D,2DAA2D,iBAAiB,mCAAmC,aAAa,6EAA6E,OAAO,gCAAgC,eAAe,kDAAkD,uCAAuC,qJAAqJ,aAAa,SAAS,EAAE,eAAe,mEAAmE,mBAAmB,sHAAsH,2CAA2C,8DAA8D,sDAAsD,gDAAgD,wCAAwC,oEAAoE,4DAA4D,uBAAuB,sDAAsD,kCAAkC,kCAAkC,iDAAiD,mQAAmQ,aAAa,kBAAkB,2PAA2P,aAAa,SAAS,yDAAyD,yDAAyD,0RAA0R,uBAAuB,sEAAsE,iDAAiD,kCAAkC,kCAAkC,kCAAkC,kCAAkC,sCAAsC,sCAAsC,sCAAsC,sCAAsC,4CAA4C,oCAAoC,2BAA2B,iBAAiB,qCAAqC,qDAAqD,sCAAsC,2HAA2H,sCAAsC,oCAAoC,2HAA2H,sCAAsC,oCAAoC,qBAAqB,kIAAkI,iBAAiB,sBAAsB,sCAAsC,6HAA6H,sCAAsC,sCAAsC,oCAAoC,6HAA6H,sCAAsC,sCAAsC,oCAAoC,qBAAqB,gKAAgK,iBAAiB,aAAa,6EAA6E,OAAO,0BAA0B,eAAe,kDAAkD,0DAA0D,aAAa,+EAA+E,OAAO,0BAA0B,eAAe,oDAAoD,0DAA0D,4CAA4C,aAAa,SAAS,EAAE,eAAe,mEAAmE,iIAAiI,gDAAgD,6LAA6L,uBAAuB,0EAA0E,iDAAiD,mCAAmC,iCAAiC,6CAA6C,kDAAkD,8CAA8C,gDAAgD,mDAAmD,iDAAiD,2DAA2D,mEAAmE,aAAa,SAAS,EAAE,aAAa,mEAAmE,2FAA2F,wCAAwC,qDAAqD,0CAA0C,8CAA8C,iDAAiD,6CAA6C,+BAA+B,kBAAkB,OAAO,8HAA8H,iBAAiB,6CAA6C,yDAAyD,aAAa,yCAAyC,wCAAwC,mDAAmD,kDAAkD,mEAAmE,kBAAkB,OAAO,yCAAyC,mDAAmD,qBAAqB,+DAA+D,iBAAiB,aAAa,iDAAiD,8CAA8C,+BAA+B,kBAAkB,OAAO,kEAAkE,iBAAiB,aAAa,wCAAwC,6CAA6C,+BAA+B,kBAAkB,OAAO,iDAAiD,iBAAiB,aAAa,6CAA6C,wCAAwC,iEAAiE,aAAa,SAAS,EAAE,aAAa,mEAAmE,mBAAmB,gDAAgD,iDAAiD,mFAAmF,OAAO,yBAAyB,OAAO,yBAAyB,OAAO,0BAA0B,OAAO,0BAA0B,eAAe,8BAA8B,QAAQ,8GAA8G,qHAAqH,gCAAgC,oGAAoG,yCAAyC,4CAA4C,4CAA4C,+DAA+D,mFAAmF,8CAA8C,UAAU,sCAAsC,mDAAmD,oDAAoD,0CAA0C,aAAa,8CAA8C,sCAAsC,eAAe,oEAAoE,iDAAiD,UAAU,gCAAgC,0FAA0F,sCAAsC,wFAAwF,EAAE,aAAa,UAAU,oCAAoC,aAAa,mEAAmE,mBAAmB,gDAAgD,iDAAiD,8EAA8E,OAAO,2BAA2B,OAAO,2BAA2B,OAAO,2BAA2B,eAAe,gCAAgC,QAAQ,yGAAyG,qHAAqH,gCAAgC,sGAAsG,2CAA2C,2CAA2C,+DAA+D,mFAAmF,8CAA8C,UAAU,sCAAsC,mDAAmD,oDAAoD,0CAA0C,aAAa,mEAAmE,mbAAmb,0BAA0B,yDAAyD,wEAAwE,wDAAwD,wDAAwD,6BAA6B,aAAa,+CAA+C,sDAAsD,wIAAwI,aAAa,UAAU,aAAa,mEAAmE,kIAAkI,4CAA4C,6CAA6C,oDAAoD,gDAAgD,6CAA6C,uGAAuG,OAAO,0BAA0B,2BAA2B,+BAA+B,2BAA2B,8DAA8D,+FAA+F,OAAO,8KAA8K,OAAO,uGAAuG,OAAO,sGAAsG,OAAO,oFAAoF,OAAO,+GAA+G,4BAA4B,sMAAsM,oDAAoD,8GAA8G,OAAO,0NAA0N,cAAc,gBAAgB,iBAAiB,mJAAmJ,yEAAyE,oEAAoE,aAAa,0EAA0E,2DAA2D,aAAa,iEAAiE,iDAAiD,8GAA8G,sDAAsD,oEAAoE,8DAA8D,mCAAmC,qFAAqF,iBAAiB,aAAa,yDAAyD,wDAAwD,mDAAmD,iCAAiC,6EAA6E,iBAAiB,aAAa,+GAA+G,8CAA8C,iEAAiE,qCAAqC,iDAAiD,mCAAmC,gEAAgE,iDAAiD,iDAAiD,qBAAqB,6CAA6C,oDAAoD,QAAQ,OAAO,sFAAsF,qBAAqB,0EAA0E,iBAAiB,8DAA8D,aAAa,4DAA4D,qDAAqD,6KAA6K,EAAE,aAAa,WAAW,EAAE,kMAAkM,wIAAwI,uEAAuE,6MAA6M,gBAAgB,aAAa,0KAA0K,yBAAyB,UAAU,6DAA6D,+IAA+I,mDAAmD,0BAA0B,8FAA8F,0EAA0E,aAAa,EAAE,oFAAoF,2DAA2D,aAAa,EAAE,SAAS,gEAAgE,0CAA0C,aAAa,mEAAmE,oDAAoD,4CAA4C,oDAAoD,uBAAuB,iCAAiC,8BAA8B,kDAAkD,OAAO,yBAAyB,OAAO,2DAA2D,oMAAoM,UAAU,2GAA2G,yCAAyC,qFAAqF,8DAA8D,kEAAkE,cAAc,0EAA0E,uCAAuC,4BAA4B,+EAA+E,oGAAoG,4EAA4E,qBAAqB,iBAAiB,4BAA4B,cAAc,4BAA4B,UAAU,4cAA4c,8DAA8D,eAAe,uJAAuJ,eAAe,4EAA4E,SAAS,qEAAqE,OAAO,6IAA6I,6CAA6C,2BAA2B,iBAAiB,gEAAgE,yCAAyC,+CAA+C,yCAAyC,6DAA6D,+CAA+C,iBAAiB,EAAE,wCAAwC,wDAAwD,8DAA8D,+EAA+E,4CAA4C,mGAAmG,gEAAgE,qBAAqB,4KAA4K,iBAAiB,0DAA0D,oEAAoE,iBAAiB,EAAE,0DAA0D,0DAA0D,oEAAoE,sDAAsD,qBAAqB,iBAAiB,kHAAkH,cAAc,wZAAwZ,4DAA4D,kDAAkD,iBAAiB,cAAc,iDAAiD,OAAO,yDAAyD,uIAAuI,OAAO,gBAAgB,sEAAsE,+BAA+B,qCAAqC,6DAA6D,4EAA4E,sFAAsF,+FAA+F,+DAA+D,oDAAoD,+CAA+C,qBAAqB,2EAA2E,sFAAsF,qEAAqE,yBAAyB,uFAAuF,oFAAoF,0DAA0D,yBAAyB,qBAAqB,EAAE,iBAAiB,EAAE,0BAA0B,wCAAwC,aAAa,+DAA+D,mCAAmC,mCAAmC,gCAAgC,iBAAiB,mCAAmC,aAAa,6EAA6E,uCAAuC,0DAA0D,sFAAsF,iBAAiB,EAAE,qCAAqC,aAAa,UAAU,yCAAyC,aAAa,mEAAmE,mBAAmB,oGAAoG,kDAAkD,gDAAgD,gDAAgD,mDAAmD,+BAA+B,0BAA0B,2KAA2K,4KAA4K,uEAAuE,sBAAsB,sBAAsB,mCAAmC,oCAAoC,aAAa,oCAAoC,qCAAqC,aAAa,uCAAuC,mDAAmD,8CAA8C,mDAAmD,uDAAuD,6EAA6E,0BAA0B,0BAA0B,8CAA8C,+FAA+F,sCAAsC,6IAA6I,8BAA8B,sCAAsC,sDAAsD,yDAAyD,qBAAqB,0BAA0B,uFAAuF,qBAAqB,iBAAiB,sBAAsB,gGAAgG,sCAAsC,+IAA+I,sDAAsD,8BAA8B,sCAAsC,wDAAwD,qBAAqB,0BAA0B,sFAAsF,qBAAqB,iBAAiB,sCAAsC,2BAA2B,iBAAiB,kCAAkC,gCAAgC,wHAAwH,aAAa,EAAE,SAAS,iEAAiE,OAAO,0BAA0B,+BAA+B,yBAAyB,OAAO,uBAAuB,OAAO,oCAAoC,OAAO,4DAA4D,yDAAyD,+BAA+B,yBAAyB,OAAO,uBAAuB,OAAO,oCAAoC,OAAO,uFAAuF,yDAAyD,+BAA+B,yBAAyB,OAAO,uBAAuB,OAAO,oCAAoC,OAAO,yFAAyF,mRAAmR,OAAO,gCAAgC,cAAc,oCAAoC,cAAc,oCAAoC,cAAc,qCAAqC,cAAc,qCAAqC,OAAO,iCAAiC,cAAc,2BAA2B,OAAO,EAAE,cAAc,6FAA6F,qDAAqD,uDAAuD,mEAAmE,kEAAkE,mEAAmE,oEAAoE,yEAAyE,uFAAuF,uEAAuE,wFAAwF,iEAAiE,sBAAsB,oJAAoJ,UAAU,yEAAyE,OAAO,gCAAgC,cAAc,uCAAuC,cAAc,sCAAsC,cAAc,wCAAwC,cAAc,yCAAyC,cAAc,wCAAwC,cAAc,yCAAyC,cAAc,kEAAkE,OAAO,iCAAiC,cAAc,uCAAuC,iCAAiC,8GAA8G,+DAA+D,uDAAuD,uDAAuD,yEAAyE,sEAAsE,yEAAyE,4EAA4E,yEAAyE,4EAA4E,yDAAyD,yDAAyD,6CAA6C,8GAA8G,yEAAyE,aAAa,gCAAgC,yEAAyE,aAAa,kQAAkQ,gEAAgE,iDAAiD,iBAAiB,sBAAsB,mDAAmD,iBAAiB,aAAa,mCAAmC,iGAAiG,4CAA4C,iBAAiB,oCAAoC,4CAA4C,iBAAiB,aAAa,4GAA4G,yEAAyE,aAAa,6BAA6B,yEAAyE,aAAa,iGAAiG,oGAAoG,0BAA0B,kGAAkG,0BAA0B,aAAa,8DAA8D,mIAAmI,0BAA0B,kGAAkG,0BAA0B,aAAa,oHAAoH,2BAA2B,+BAA+B,wIAAwI,aAAa,gCAAgC,4IAA4I,aAAa,4FAA4F,iCAAiC,wBAAwB,UAAU,yHAAyH,UAAU,GAAG,cAAc,8gBAA8gB,uBAAuB,4DAA4D,OAAO,gCAAgC,cAAc,uCAAuC,cAAc,sCAAsC,cAAc,wCAAwC,cAAc,yCAAyC,OAAO,iCAAiC,cAAc,0BAA0B,OAAO,yBAAyB,eAAe,oEAAoE,eAAe,s0BAAs0B,iDAAiD,iDAAiD,gEAAgE,6BAA6B,uBAAuB,aAAa,uBAAuB,yCAAyC,sLAAsL,aAAa,kBAAkB,4CAA4C,8CAA8C,2DAA2D,8JAA8J,mDAAmD,iBAAiB,aAAa,uGAAuG,uCAAuC,qHAAqH,8OAA8O,qDAAqD,qDAAqD,sGAAsG,UAAU,gCAAgC,OAAO,uEAAuE,OAAO,qBAAqB,kFAAkF,mJAAmJ,UAAU,0EAA0E,oBAAoB,cAAc,SAAS,6FAA6F,SAAS,qFAAqF,kCAAkC,kGAAkG,yDAAyD,gBAAgB,mDAAmD,0EAA0E,kEAAkE,gBAAgB,YAAY,EAAE,6BAA6B,OAAO,gCAAgC,OAAO,6BAA6B,cAAc,yBAAyB,wBAAwB,uJAAuJ,8CAA8C,EAAE,8CAA8C,mFAAmF,kDAAkD,gDAAgD,uDAAuD,qDAAqD,4CAA4C,mCAAmC,sCAAsC,gCAAgC,yCAAyC,0CAA0C,+CAA+C,sDAAsD,iBAAiB,EAAE,6CAA6C,wOAAwO,iEAAiE,iEAAiE,iBAAiB,EAAE,0CAA0C,4HAA4H,gDAAgD,qBAAqB,6DAA6D,gDAAgD,qBAAqB,kCAAkC,iBAAiB,uCAAuC,uBAAuB,sCAAsC,WAAW,iBAAiB,WAAW,0MAA0M,kCAAkC,iBAAiB,qCAAqC,uBAAuB,iMAAiM,qCAAqC,iBAAiB,sBAAsB,4GAA4G,kBAAkB,OAAO,4CAA4C,uFAAuF,iEAAiE,kCAAkC,yBAAyB,qBAAqB,qCAAqC,iBAAiB,aAAa,2CAA2C,gDAAgD,aAAa,4CAA4C,iEAAiE,aAAa,oDAAoD,6CAA6C,gDAAgD,iBAAiB,EAAE,aAAa,UAAU,oHAAoH,OAAO,2BAA2B,OAAO,4FAA4F,6CAA6C,UAAU,UAAU,oHAAoH,OAAO,2BAA2B,OAAO,qGAAqG,uEAAuE,6EAA6E,aAAa,EAAE,0BAA0B,UAAU,kCAAkC,eAAe,8CAA8C,kCAAkC,6CAA6C,wBAAwB,6RAA6R,aAAa,UAAU,aAAa,8CAA8C,gCAAgC,sFAAsF,gDAAgD,SAAS,0BAA0B,4uBAA4uB,6CAA6C,qWAAqW,ulCAAulC,aAAa,mEAAmE,wDAAwD,gCAAgC,gCAAgC,4BAA4B,4CAA4C,yCAAyC,4CAA4C,EAAE,aAAa,4DAA4D,sCAAsC,2DAA2D,8FAA8F,EAAE,wIAAwI,8CAA8C,iBAAiB,iEAAiE,2CAA2C,2BAA2B,iBAAiB,qDAAqD,2BAA2B,+CAA+C,iBAAiB,6EAA6E,+BAA+B,aAAa,UAAU,aAAa,mEAAmE,mBAAmB,gDAAgD,2SAA2S,gJAAgJ,yDAAyD,6EAA6E,aAAa,QAAQ,SAAS,wCAAwC,aAAa,mEAAmE,mBAAmB,gDAAgD,4CAA4C,8CAA8C,2CAA2C,SAAS,+CAA+C,kGAAkG,2CAA2C,gFAAgF,4DAA4D,6EAA6E,iBAAiB,EAAE,8DAA8D,aAAa,gDAAgD,0EAA0E,2GAA2G,iBAAiB,EAAE,aAAa,kDAAkD,uDAAuD,aAAa,UAAU,uFAAuF,qEAAqE,UAAU,yDAAyD,kDAAkD,UAAU,mDAAmD,aAAa,mEAAmE,4DAA4D,4BAA4B,yDAAyD,+CAA+C,qDAAqD,+BAA+B,iCAAiC,6BAA6B,iCAAiC,6CAA6C,6LAA6L,2BAA2B,IAAI,6BAA6B,IAAI,gCAAgC,IAAI,qDAAqD,YAAY,yBAAyB,YAAY,gEAAgE,mOAAmO,gCAAgC,+BAA+B,IAAI,iCAAiC,IAAI,6DAA6D,YAAY,6BAA6B,YAAY,2EAA2E,+BAA+B,IAAI,sDAAsD,QAAQ,IAAI,WAAW,aAAa,yBAAyB,QAAQ,IAAI,WAAW,aAAa,mGAAmG,mCAAmC,cAAc,qCAAqC,SAAS,MAAM,cAAc,aAAa,wBAAwB,yBAAyB,mCAAmC,6BAA6B,qCAAqC,SAAS,OAAO,cAAc,YAAY,wBAAwB,yBAAyB,oCAAoC,SAAS,QAAQ,cAAc,YAAY,wBAAwB,qCAAqC,iFAAiF,4BAA4B,oDAAoD,8DAA8D,4BAA4B,2CAA2C,8DAA8D,eAAe,sDAAsD,8DAA8D,eAAe,gDAAgD,8DAA8D,OAAO,8CAA8C,mIAAmI,eAAe,0DAA0D,8DAA8D,OAAO,8CAA8C,8DAA8D,OAAO,+CAA+C,SAAS,gcAAgc,WAAW,gBAAgB,MAAM,SAAS,oCAAoC,WAAW,eAAe,MAAM,SAAS,qCAAqC,uGAAuG,OAAO,6CAA6C,4BAA4B,+BAA+B,iBAAiB,gDAAgD,OAAO,iGAAiG,mDAAmD,qKAAqK,0JAA0J,iEAAiE,qEAAqE,sCAAsC,6IAA6I,wWAAwW,0FAA0F,qBAAqB,2DAA2D,8EAA8E,qBAAqB,uDAAuD,oFAAoF,qBAAqB,iBAAiB,sBAAsB,yDAAyD,iBAAiB,aAAa,yCAAyC,QAAQ,mCAAmC,OAAO,+DAA+D,sDAAsD,kJAAkJ,qEAAqE,sEAAsE,+CAA+C,4iBAA4iB,aAAa,yCAAyC,4BAA4B,gCAAgC,OAAO,kEAAkE,2BAA2B,4DAA4D,+CAA+C,+NAA+N,wCAAwC,8KAA8K,qBAAqB,iBAAiB,gCAAgC,aAAa,yCAAyC,4BAA4B,gCAAgC,eAAe,+DAA+D,mDAAmD,qDAAqD,gDAAgD,sDAAsD,iCAAiC,gCAAgC,+FAA+F,kCAAkC,iBAAiB,qJAAqJ,SAAS,OAAO,iFAAiF,wCAAwC,qBAAqB,iBAAiB,qIAAqI,mCAAmC,iBAAiB,6FAA6F,4DAA4D,uJAAuJ,qBAAqB,EAAE,iBAAiB,kGAAkG,gCAAgC,aAAa,UAAU,8EAA8E,qCAAqC,+BAA+B,6BAA6B,2BAA2B,sFAAsF,yCAAyC,kDAAkD,aAAa,gFAAgF,8CAA8C,oEAAoE,aAAa,kEAAkE,8CAA8C,4CAA4C,oDAAoD,4DAA4D,gDAAgD,wDAAwD,yBAAyB,iDAAiD,kHAAkH,yBAAyB,qBAAqB,iBAAiB,EAAE,aAAa,gEAAgE,uCAAuC,aAAa,iJAAiJ,kDAAkD,aAAa,iJAAiJ,wCAAwC,iBAAiB,sCAAsC,yEAAyE,kDAAkD,qBAAqB,EAAE,iBAAiB,cAAc,sBAAsB,qLAAqL,SAAS,0OAA0O,2BAA2B,8JAA8J,sCAAsC,yDAAyD,oDAAoD,+DAA+D,2BAA2B,iBAAiB,4CAA4C,wDAAwD,qEAAqE,yCAAyC,iBAAiB,aAAa,EAAE,kCAAkC,SAAS,oDAAoD,qCAAqC,sCAAsC,aAAa,0CAA0C,sCAAsC,aAAa,kBAAkB,iDAAiD,aAAa,SAAS,sDAAsD,sIAAsI,SAAS,wEAAwE,6GAA6G,4OAA4O,uBAAuB,4FAA4F,uBAAuB,kEAAkE,gZAAgZ,wCAAwC,8DAA8D,wCAAwC,2BAA2B,iBAAiB,sDAAsD,2DAA2D,4EAA4E,iBAAiB,sBAAsB,sEAAsE,sEAAsE,sFAAsF,4EAA4E,sLAAsL,qBAAqB,EAAE,iBAAiB,aAAa,EAAE,SAAS,yCAAyC,aAAa,mEAAmE,mBAAmB,gDAAgD,gDAAgD,gDAAgD,+CAA+C,qDAAqD,wDAAwD,yCAAyC,6CAA6C,kCAAkC,gCAAgC,+CAA+C,6CAA6C,mDAAmD,oRAAoR,OAAO,sJAAsJ,SAAS,iXAAiX,cAAc,gBAAgB,iBAAiB,2IAA2I,+CAA+C,OAAO,sGAAsG,6DAA6D,kEAAkE,2BAA2B,iFAAiF,iBAAiB,6CAA6C,4EAA4E,qGAAqG,0XAA0X,aAAa,mGAAmG,OAAO,+BAA+B,4BAA4B,qFAAqF,iDAAiD,8GAA8G,oIAAoI,8DAA8D,mMAAmM,sDAAsD,mCAAmC,qFAAqF,iBAAiB,aAAa,iEAAiE,mFAAmF,6DAA6D,mDAAmD,iCAAiC,sFAAsF,iBAAiB,2EAA2E,8DAA8D,4CAA4C,0EAA0E,iBAAiB,aAAa,mDAAmD,mLAAmL,mCAAmC,iBAAiB,OAAO,uDAAuD,8FAA8F,yBAAyB,qBAAqB,iBAAiB,aAAa,oLAAoL,yCAAyC,OAAO,mCAAmC,yBAAyB,yDAAyD,6CAA6C,8EAA8E,aAAa,yCAAyC,yBAAyB,0DAA0D,wCAAwC,aAAa,kFAAkF,yBAAyB,oDAAoD,wDAAwD,aAAa,ocAAoc,OAAO,iCAAiC,eAAe,2FAA2F,6EAA6E,aAAa,gHAAgH,cAAc,gCAAgC,OAAO,kEAAkE,4EAA4E,aAAa,0IAA0I,uEAAuE,KAAK,iEAAiE,qDAAqD,kFAAkF,aAAa,mHAAmH,OAAO,iCAAiC,QAAQ,8CAA8C,OAAO,qGAAqG,kDAAkD,yFAAyF,iEAAiE,gHAAgH,qBAAqB,KAAK,sCAAsC,mFAAmF,8GAA8G,6EAA6E,yBAAyB,8HAA8H,yDAAyD,oEAAoE,uJAAuJ,mCAAmC,yBAAyB,mDAAmD,sbAAsb,kEAAkE,qBAAqB,kGAAkG,iBAAiB,+CAA+C,0DAA0D,uIAAuI,mDAAmD,qEAAqE,iEAAiE,sDAAsD,QAAQ,iBAAiB,+CAA+C,mEAAmE,6CAA6C,oEAAoE,uEAAuE,iBAAiB,iJAAiJ,sTAAsT,aAAa,0CAA0C,QAAQ,4DAA4D,+BAA+B,iCAAiC,iBAAiB,sEAAsE,uCAAuC,yFAAyF,iDAAiD,qBAAqB,iBAAiB,wCAAwC,aAAa,yCAAyC,mFAAmF,aAAa,4DAA4D,2CAA2C,oHAAoH,6BAA6B,qEAAqE,iBAAiB,6BAA6B,aAAa,uIAAuI,sBAAsB,2BAA2B,eAAe,6BAA6B,uCAAuC,iCAAiC,OAAO,EAAE,0BAA0B,gJAAgJ,OAAO,kCAAkC,eAAe,8GAA8G,EAAE,+DAA+D,qDAAqD,uCAAuC,aAAa,mEAAmE,oDAAoD,oDAAoD,gDAAgD,uCAAuC,qCAAqC,+BAA+B,4EAA4E,uCAAuC,OAAO,oGAAoG,UAAU,iCAAiC,mFAAmF,0EAA0E,sCAAsC,YAAY,mDAAmD,gLAAgL,8BAA8B,cAAc,kFAAkF,4JAA4J,yBAAyB,EAAE,qCAAqC,aAAa,mEAAmE,oDAAoD,oDAAoD,gDAAgD,+CAA+C,4CAA4C,4BAA4B,uCAAuC,+BAA+B,4EAA4E,uCAAuC,OAAO,gGAAgG,SAAS,6BAA6B,kGAAkG,4BAA4B,gCAAgC,4BAA4B,+DAA+D,yEAAyE,4BAA4B,oCAAoC,4BAA4B,gCAAgC,4BAA4B,4BAA4B,OAAO,2FAA2F,gGAAgG,4BAA4B,oCAAoC,4BAA4B,gCAAgC,4BAA4B,4BAA4B,OAAO,6FAA6F,4EAA4E,aAAa,+FAA+F,4BAA4B,oCAAoC,4BAA4B,gCAAgC,4BAA4B,4BAA4B,OAAO,4FAA4F,0EAA0E,aAAa,oEAAoE,4BAA4B,gCAAgC,4BAA4B,gEAAgE,uCAAuC,aAAa,qEAAqE,4BAA4B,gCAAgC,4BAA4B,sDAAsD,kHAAkH,eAAe,8BAA8B,QAAQ,0DAA0D,YAAY,2CAA2C,oKAAoK,gEAAgE,cAAc,uEAAuE,uBAAuB,uBAAuB,OAAO,yDAAyD,qBAAqB,kCAAkC,0CAA0C,mCAAmC,qBAAqB,OAAO,yDAAyD,qBAAqB,iBAAiB,aAAa,SAAS,+BAA+B,yBAAyB,yBAAyB,OAAO,4BAA4B,OAAO,8GAA8G,oEAAoE,sCAAsC,uFAAuF,sEAAsE,iBAAiB,EAAE,aAAa,kBAAkB,sDAAsD,0CAA0C,iBAAiB,EAAE,aAAa,SAAS,yFAAyF,qJAAqJ,yBAAyB,EAAE,iCAAiC,aAAa,8CAA8C,6BAA6B,0DAA0D,uCAAuC,gDAAgD,kDAAkD,WAAW,sBAAsB,OAAO,uCAAuC,QAAQ,+MAA+M,WAAW,gFAAgF,2BAA2B,6BAA6B,6BAA6B,6BAA6B,qBAAqB,sBAAsB,qBAAqB,iCAAiC,iCAAiC,+BAA+B,kDAAkD,6BAA6B,4CAA4C,aAAa,oCAAoC,kDAAkD,6BAA6B,iCAAiC,0DAA0D,gEAAgE,wCAAwC,mFAAmF,sCAAsC,qCAAqC,wDAAwD,iBAAiB,sBAAsB,oCAAoC,+BAA+B,qBAAqB,0BAA0B,wDAAwD,qBAAqB,iBAAiB,sCAAsC,cAAc,wHAAwH,4BAA4B,wCAAwC,iCAAiC,iBAAiB,cAAc,gIAAgI,iDAAiD,cAAc,wBAAwB,UAAU,6JAA6J,iNAAiN,aAAa,yDAAyD,uDAAuD,aAAa,0DAA0D,uDAAuD,aAAa,+CAA+C,OAAO,uBAAuB,OAAO,0BAA0B,OAAO,0BAA0B,OAAO,qEAAqE,SAAS,wGAAwG,iCAAiC,wBAAwB,uBAAuB,aAAa,qDAAqD,qDAAqD,oCAAoC,2EAA2E,oDAAoD,oDAAoD,iBAAiB,mIAAmI,6CAA6C,iDAAiD,gCAAgC,aAAa,wBAAwB,UAAU,2HAA2H,OAAO,uBAAuB,OAAO,8DAA8D,iCAAiC,0CAA0C,gDAAgD,aAAa,UAAU,+BAA+B,eAAe,mEAAmE,kSAAkS,yCAAyC,4CAA4C,gDAAgD,8CAA8C,gDAAgD,mDAAmD,4CAA4C,8BAA8B,qDAAqD,6BAA6B,gDAAgD,+BAA+B,OAAO,6CAA6C,0EAA0E,YAAY,uBAAuB,OAAO,wBAAwB,OAAO,8DAA8D,OAAO,2CAA2C,cAAc,2EAA2E,cAAc,6EAA6E,uBAAuB,uDAAuD,oDAAoD,kCAAkC,sBAAsB,UAAU,mEAAmE,uBAAuB,uDAAuD,qBAAqB,6BAA6B,aAAa,kBAAkB,4CAA4C,wDAAwD,iDAAiD,qBAAqB,iBAAiB,+BAA+B,aAAa,6BAA6B,UAAU,qEAAqE,OAAO,2CAA2C,uBAAuB,wDAAwD,iCAAiC,UAAU,2DAA2D,sCAAsC,UAAU,oCAAoC,iCAAiC,SAAS,uJAAuJ,OAAO,sBAAsB,eAAe,uBAAuB,OAAO,wBAAwB,OAAO,8DAA8D,OAAO,2CAA2C,OAAO,2EAA2E,OAAO,mHAAmH,gCAAgC,uCAAuC,eAAe,0CAA0C,uCAAuC,OAAO,wCAAwC,8BAA8B,wCAAwC,+CAA+C,kDAAkD,wCAAwC,gGAAgG,iBAAiB,qCAAqC,aAAa,oEAAoE,wCAAwC,aAAa,6EAA6E,qCAAqC,mCAAmC,+FAA+F,oFAAoF,uCAAuC,mCAAmC,2DAA2D,wBAAwB,0EAA0E,aAAa,EAAE,mCAAmC,uCAAuC,QAAQ,qEAAqE,8IAA8I,uDAAuD,sDAAsD,oDAAoD,kDAAkD,cAAc,oDAAoD,kDAAkD,uCAAuC,cAAc,UAAU,+BAA+B,iGAAiG,OAAO,+CAA+C,+BAA+B,aAAa,6DAA6D,uBAAuB,kDAAkD,yCAAyC,0CAA0C,aAAa,6DAA6D,uBAAuB,qDAAqD,yCAAyC,0CAA0C,aAAa,qFAAqF,OAAO,8BAA8B,OAAO,8BAA8B,OAAO,yDAAyD,OAAO,uEAAuE,OAAO,oJAAoJ,yDAAyD,0CAA0C,aAAa,2HAA2H,wMAAwM,uCAAuC,yJAAyJ,aAAa,yIAAyI,0CAA0C,aAAa,mGAAmG,yCAAyC,8CAA8C,iBAAiB,8CAA8C,mDAAmD,iBAAiB,aAAa,mFAAmF,uBAAuB,0BAA0B,OAAO,iEAAiE,4CAA4C,qDAAqD,wCAAwC,iBAAiB,aAAa,qFAAqF,uBAAuB,0DAA0D,+CAA+C,iDAAiD,wCAAwC,iBAAiB,aAAa,gGAAgG,uBAAuB,uDAAuD,8CAA8C,8CAA8C,wCAAwC,iBAAiB,aAAa,kHAAkH,+CAA+C,aAAa,2HAA2H,gDAAgD,yEAAyE,aAAa,yIAAyI,OAAO,8BAA8B,cAAc,+EAA+E,cAAc,4GAA4G,kCAAkC,6DAA6D,sCAAsC,aAAa,iIAAiI,uCAAuC,aAAa,qGAAqG,+CAA+C,aAAa,uGAAuG,gDAAgD,aAAa,uFAAuF,OAAO,4BAA4B,OAAO,iDAAiD,OAAO,qFAAqF,0DAA0D,2EAA2E,kBAAkB,gBAAgB,oLAAoL,4BAA4B,yBAAyB,OAAO,6BAA6B,OAAO,iEAAiE,wDAAwD,aAAa,0EAA0E,OAAO,wGAAwG,yDAAyD,aAAa,4EAA4E,OAAO,yBAAyB,OAAO,0BAA0B,OAAO,EAAE,kBAAkB,uDAAuD,oDAAoD,aAAa,gFAAgF,OAAO,4CAA4C,SAAS,qDAAqD,OAAO,oGAAoG,kEAAkE,aAAa,oEAAoE,OAAO,4CAA4C,SAAS,mGAAmG,0DAA0D,aAAa,4FAA4F,OAAO,4CAA4C,OAAO,oFAAoF,uDAAuD,aAAa,mHAAmH,uCAAuC,qCAAqC,aAAa,+FAA+F,sCAAsC,+BAA+B,uCAAuC,uCAAuC,uCAAuC,kIAAkI,uCAAuC,aAAa,UAAU,mCAAmC,eAAe,mEAAmE,mBAAmB,0PAA0P,gDAAgD,iDAAiD,gCAAgC,gEAAgE,oBAAoB,koBAAkoB,SAAS,mCAAmC,sDAAsD,gKAAgK,8IAA8I,uBAAuB,6CAA6C,uBAAuB,6CAA6C,gCAAgC,gDAAgD,YAAY,2IAA2I,gCAAgC,qCAAqC,qCAAqC,6CAA6C,gDAAgD,4HAA4H,gEAAgE,iCAAiC,kBAAkB,6CAA6C,OAAO,8CAA8C,8DAA8D,KAAK,iDAAiD,8DAA8D,OAAO,uCAAuC,8DAA8D,OAAO,uCAAuC,qCAAqC,uDAAuD,6DAA6D,aAAa,QAAQ,UAAU,+BAA+B,8EAA8E,kCAAkC,kCAAkC,kDAAkD,mEAAmE,mDAAmD,2DAA2D,yCAAyC,qGAAqG,mKAAmK,2EAA2E,iBAAiB,oHAAoH,2HAA2H,wEAAwE,iBAAiB,aAAa,2CAA2C,yEAAyE,idAAid,6BAA6B,oBAAoB,4DAA4D,iBAAiB,2IAA2I,0DAA0D,aAAa,EAAE,aAAa,4FAA4F,mCAAmC,aAAa,sEAAsE,OAAO,iCAAiC,OAAO,gFAAgF,8CAA8C,yDAAyD,aAAa,yFAAyF,uCAAuC,gGAAgG,aAAa,yEAAyE,OAAO,wGAAwG,uCAAuC,gEAAgE,aAAa,mGAAmG,OAAO,aAAa,kBAAkB,8BAA8B,OAAO,sCAAsC,OAAO,kGAAkG,8CAA8C,oDAAoD,gFAAgF,6CAA6C,4BAA4B,mIAAmI,yDAAyD,qCAAqC,qDAAqD,8BAA8B,qBAAqB,iBAAiB,kDAAkD,gGAAgG,0LAA0L,wEAAwE,yEAAyE,yBAAyB,4CAA4C,kEAAkE,yBAAyB,qBAAqB,EAAE,iBAAiB,aAAa,gEAAgE,OAAO,yBAAyB,OAAO,yBAAyB,mCAAmC,gCAAgC,sBAAsB,qFAAqF,yDAAyD,6BAA6B,+CAA+C,SAAS,OAAO,yCAAyC,gQAAgQ,oEAAoE,0DAA0D,iDAAiD,kCAAkC,yBAAyB,qBAAqB,iBAAiB,6BAA6B,aAAa,UAAU,2IAA2I,wDAAwD,2LAA2L,mDAAmD,6CAA6C,iDAAiD,4GAA4G,iBAAiB,8CAA8C,+CAA+C,iBAAiB,4CAA4C,sDAAsD,+BAA+B,qBAAqB,iBAAiB,+DAA+D,cAAc,SAAS,EAAE,+CAA+C,uFAAuF,qCAAqC,6BAA6B,4BAA4B,mQAAmQ,qCAAqC,qBAAqB,oCAAoC,wCAAwC,qBAAqB,mCAAmC,iBAAiB,gDAAgD,aAAa,2BAA2B,SAAS,wCAAwC,uCAAuC,mCAAmC,eAAe,8CAA8C,qIAAqI,0DAA0D,mDAAmD,oDAAoD,sDAAsD,uCAAuC,2CAA2C,6BAA6B,2BAA2B,SAAS,iCAAiC,6EAA6E,8CAA8C,iEAAiE,0DAA0D,mDAAmD,wCAAwC,wCAAwC,6FAA6F,iBAAiB,aAAa,oCAAoC,0DAA0D,qCAAqC,wCAAwC,sCAAsC,2CAA2C,yCAAyC,gCAAgC,gCAAgC,sDAAsD,sFAAsF,mFAAmF,0DAA0D,kDAAkD,0DAA0D,8EAA8E,mGAAmG,yBAAyB,0EAA0E,+FAA+F,yBAAyB,qBAAqB,iBAAiB,aAAa,uCAAuC,0DAA0D,uCAAuC,oDAAoD,iBAAiB,uFAAuF,yCAAyC,wFAAwF,iBAAiB,8CAA8C,wCAAwC,aAAa,YAAY,qCAAqC,oBAAoB,6CAA6C,SAAS,qCAAqC,aAAa,mEAAmE,mBAAmB,uQAAuQ,yCAAyC,8CAA8C,4KAA4K,2CAA2C,wCAAwC,kCAAkC,2CAA2C,+YAA+Y,wBAAwB,uCAAuC,iBAAiB,iCAAiC,aAAa,uCAAuC,SAAS,2IAA2I,6BAA6B,qCAAqC,uCAAuC,UAAU,+BAA+B,4EAA4E,SAAS,8EAA8E,+BAA+B,wBAAwB,OAAO,yDAAyD,iBAAiB,aAAa,mEAAmE,QAAQ,kDAAkD,QAAQ,6FAA6F,qEAAqE,wBAAwB,2CAA2C,6EAA6E,uDAAuD,6BAA6B,0DAA0D,iBAAiB,yCAAyC,aAAa,oMAAoM,QAAQ,8GAA8G,yCAAyC,wCAAwC,oDAAoD,mDAAmD,SAAS,OAAO,iFAAiF,iBAAiB,0DAA0D,8DAA8D,SAAS,OAAO,sDAAsD,oBAAoB,wDAAwD,8EAA8E,aAAa,kFAAkF,oDAAoD,2BAA2B,iBAAiB,oCAAoC,mCAAmC,kCAAkC,mBAAmB,mCAAmC,oDAAoD,sCAAsC,uEAAuE,sDAAsD,qBAAqB,0BAA0B,uCAAuC,qBAAqB,4DAA4D,4CAA4C,6FAA6F,2HAA2H,0DAA0D,0DAA0D,2DAA2D,mEAAmE,qBAAqB,iBAAiB,mCAAmC,gDAAgD,qCAAqC,qBAAqB,OAAO,gDAAgD,4JAA4J,iDAAiD,yBAAyB,yFAAyF,qBAAqB,qFAAqF,mBAAmB,sBAAsB,+CAA+C,qEAAqE,iBAAiB,aAAa,iFAAiF,uBAAuB,sDAAsD,4CAA4C,2BAA2B,iBAAiB,4CAA4C,kDAAkD,iBAAiB,wCAAwC,qCAAqC,aAAa,gFAAgF,sBAAsB,wEAAwE,iCAAiC,iEAAiE,wBAAwB,OAAO,kDAAkD,oDAAoD,8DAA8D,yBAAyB,qBAAqB,uCAAuC,2CAA2C,6CAA6C,6BAA6B,iBAAiB,4CAA4C,kDAAkD,OAAO,OAAO,4CAA4C,qBAAqB,2BAA2B,iBAAiB,4DAA4D,+BAA+B,4CAA4C,+CAA+C,8CAA8C,wDAAwD,qBAAqB,iBAAiB,aAAa,4CAA4C,oCAAoC,gCAAgC,8BAA8B,aAAa,8CAA8C,yBAAyB,wCAAwC,iBAAiB,8BAA8B,aAAa,+FAA+F,qEAAqE,aAAa,8DAA8D,mCAAmC,eAAe,8CAA8C,sFAAsF,wCAAwC,+CAA+C,oCAAoC,sBAAsB,8CAA8C,2BAA2B,wBAAwB,aAAa,2BAA2B,SAAS,6DAA6D,+BAA+B,iCAAiC,yBAAyB,aAAa,2DAA2D,mFAAmF,4BAA4B,iBAAiB,+CAA+C,aAAa,kBAAkB,oFAAoF,4BAA4B,iBAAiB,aAAa,gCAAgC,SAAS,8CAA8C,iBAAiB,+BAA+B,kCAAkC,wCAAwC,gCAAgC,aAAa,SAAS,uEAAuE,+BAA+B,wBAAwB,aAAa,oBAAoB,YAAY,WAAW,yCAAyC,gCAAgC,kCAAkC,wBAAwB,wCAAwC,6CAA6C,2DAA2D,oCAAoC,qBAAqB,0BAA0B,uCAAuC,qBAAqB,iBAAiB,uCAAuC,8BAA8B,qFAAqF,uFAAuF,mFAAmF,8BAA8B,mEAAmE,kEAAkE,gCAAgC,yBAAyB,iBAAiB,sCAAsC,aAAa,SAAS,2EAA2E,+BAA+B,8BAA8B,2BAA2B,4DAA4D,0CAA0C,kGAAkG,wCAAwC,+CAA+C,wCAAwC,2CAA2C,qBAAqB,iBAAiB,2CAA2C,uCAAuC,iBAAiB,qCAAqC,+BAA+B,aAAa,kBAAkB,qCAAqC,iGAAiG,wCAAwC,+CAA+C,wCAAwC,2CAA2C,qBAAqB,iBAAiB,yCAAyC,uCAAuC,iBAAiB,uCAAuC,2CAA2C,oCAAoC,aAAa,2BAA2B,yCAAyC,iEAAiE,6DAA6D,uCAAuC,iBAAiB,sBAAsB,+BAA+B,iBAAiB,aAAa,0BAA0B,SAAS,4EAA4E,+BAA+B,8BAA8B,2BAA2B,4DAA4D,qCAAqC,kGAAkG,wCAAwC,+CAA+C,wCAAwC,2CAA2C,qBAAqB,iBAAiB,2CAA2C,uCAAuC,iBAAiB,uCAAuC,2CAA2C,oCAAoC,aAAa,kBAAkB,0CAA0C,mGAAmG,wCAAwC,+CAA+C,wCAAwC,2CAA2C,qBAAqB,iBAAiB,2CAA2C,uCAAuC,iBAAiB,qCAAqC,+BAA+B,aAAa,2BAA2B,2CAA2C,iEAAiE,6DAA6D,+BAA+B,iBAAiB,sBAAsB,uCAAuC,iBAAiB,aAAa,4BAA4B,SAAS,4CAA4C,kDAAkD,2BAA2B,8DAA8D,gCAAgC,yBAAyB,0BAA0B,8BAA8B,oCAAoC,4DAA4D,gDAAgD,aAAa,2BAA2B,8FAA8F,4BAA4B,2BAA2B,uDAAuD,gDAAgD,kDAAkD,+BAA+B,aAAa,oCAAoC,uCAAuC,0CAA0C,2JAA2J,kEAAkE,gCAAgC,yBAAyB,qBAAqB,+DAA+D,8BAA8B,qBAAqB,+BAA+B,iBAAiB,aAAa,yCAAyC,uCAAuC,0CAA0C,yEAAyE,4BAA4B,qBAAqB,iCAAiC,iBAAiB,aAAa,mCAAmC,yCAAyC,2CAA2C,6CAA6C,+CAA+C,mDAAmD,4CAA4C,sDAAsD,wDAAwD,iBAAiB,8BAA8B,yFAAyF,4BAA4B,6BAA6B,sCAAsC,2BAA2B,iBAAiB,kHAAkH,sCAAsC,2BAA2B,iBAAiB,2CAA2C,+DAA+D,iBAAiB,sBAAsB,gEAAgE,iBAAiB,aAAa,mEAAmE,0BAA0B,6BAA6B,aAAa,OAAO,+CAA+C,iBAAiB,kCAAkC,qCAAqC,kCAAkC,mDAAmD,wCAAwC,+BAA+B,aAAa,OAAO,2DAA2D,qBAAqB,2BAA2B,iBAAiB,sCAAsC,+BAA+B,aAAa,OAAO,6DAA6D,qBAAqB,yDAAyD,2BAA2B,iBAAiB,6CAA6C,yCAAyC,6BAA6B,+BAA+B,+BAA+B,iCAAiC,0BAA0B,wEAAwE,6DAA6D,qCAAqC,uCAAuC,oDAAoD,4CAA4C,sCAAsC,6BAA6B,yBAAyB,8BAA8B,2DAA2D,qCAAqC,uCAAuC,kDAAkD,4CAA4C,sCAAsC,6BAA6B,yBAAyB,qBAAqB,wCAAwC,iCAAiC,8BAA8B,qBAAqB,0BAA0B,gGAAgG,6CAA6C,uCAAuC,YAAY,OAAO,mEAAmE,6BAA6B,6CAA6C,8CAA8C,8CAA8C,+CAA+C,4CAA4C,sCAAsC,6BAA6B,yBAAyB,2DAA2D,gDAAgD,wCAAwC,kCAAkC,yBAAyB,iGAAiG,6CAA6C,uCAAuC,YAAY,OAAO,qEAAqE,6BAA6B,6CAA6C,8CAA8C,8CAA8C,kDAAkD,4CAA4C,sCAAsC,6BAA6B,yBAAyB,uDAAuD,gDAAgD,wCAAwC,kCAAkC,yBAAyB,uCAAuC,qBAAqB,4EAA4E,iCAAiC,8BAA8B,qBAAqB,2CAA2C,uCAAuC,qBAAqB,sCAAsC,iBAAiB,yCAAyC,mDAAmD,sCAAsC,+BAA+B,aAAa,OAAO,6DAA6D,qBAAqB,yDAAyD,iBAAiB,yCAAyC,sCAAsC,oFAAoF,iBAAiB,sBAAsB,+BAA+B,aAAa,OAAO,2DAA2D,qBAAqB,iBAAiB,aAAa,qEAAqE,0BAA0B,6BAA6B,aAAa,OAAO,+CAA+C,iBAAiB,qDAAqD,0CAA0C,gDAAgD,qCAAqC,mCAAmC,mDAAmD,wCAAwC,wDAAwD,iCAAiC,aAAa,OAAO,yDAAyD,qBAAqB,6BAA6B,iBAAiB,sCAAsC,oCAAoC,uCAAuC,0CAA0C,+CAA+C,2CAA2C,QAAQ,OAAO,wEAAwE,qBAAqB,iDAAiD,2BAA2B,iBAAiB,6CAA6C,gCAAgC,mCAAmC,mCAAmC,qCAAqC,0BAA0B,wEAAwE,6DAA6D,qCAAqC,uCAAuC,kDAAkD,4CAA4C,sCAAsC,6BAA6B,yBAAyB,8BAA8B,2DAA2D,qCAAqC,uCAAuC,kDAAkD,4CAA4C,sCAAsC,6BAA6B,yBAAyB,qBAAqB,wCAAwC,iCAAiC,8BAA8B,qBAAqB,0BAA0B,mHAAmH,6CAA6C,2CAA2C,8CAA8C,8CAA8C,kDAAkD,uDAAuD,kDAAkD,QAAQ,OAAO,gFAAgF,6BAA6B,kDAAkD,4CAA4C,sCAAsC,6BAA6B,yBAAyB,yDAAyD,gDAAgD,wCAAwC,kCAAkC,yBAAyB,+GAA+G,6CAA6C,2CAA2C,8CAA8C,8CAA8C,kDAAkD,uDAAuD,yCAAyC,YAAY,OAAO,8EAA8E,6BAA6B,iDAAiD,4CAA4C,sCAAsC,6BAA6B,yBAAyB,2DAA2D,gDAAgD,wCAAwC,kCAAkC,yBAAyB,uCAAuC,qBAAqB,4EAA4E,iCAAiC,8BAA8B,qBAAqB,2CAA2C,uCAAuC,qBAAqB,sCAAsC,iBAAiB,yCAAyC,sCAAsC,kCAAkC,iBAAiB,sCAAsC,oCAAoC,uCAAuC,0CAA0C,+CAA+C,2CAA2C,QAAQ,OAAO,wEAAwE,qBAAqB,iDAAiD,iBAAiB,yCAAyC,sCAAsC,qFAAqF,iBAAiB,sBAAsB,wDAAwD,+BAA+B,aAAa,OAAO,yDAAyD,qBAAqB,iBAAiB,aAAa,yCAAyC,iDAAiD,mCAAmC,SAAS,iDAAiD,sBAAsB,uBAAuB,aAAa,sBAAsB,kCAAkC,aAAa,sCAAsC,kCAAkC,uBAAuB,aAAa,gCAAgC,kDAAkD,qEAAqE,4EAA4E,uBAAuB,aAAa,mDAAmD,mDAAmD,kBAAkB,qEAAqE,yCAAyC,0CAA0C,yCAAyC,uCAAuC,qBAAqB,0FAA0F,sCAAsC,iBAAiB,4CAA4C,+BAA+B,yCAAyC,gCAAgC,aAAa,yBAAyB,kCAAkC,SAAS,gCAAgC,aAAa,mEAAmE,mBAAmB,yVAAyV,4DAA4D,8DAA8D,iDAAiD,gCAAgC,OAAO,oCAAoC,SAAS,6HAA6H,OAAO,6BAA6B,SAAS,qCAAqC,cAAc,kFAAkF,0BAA0B,oEAAoE,+EAA+E,+EAA+E,iCAAiC,+EAA+E,qCAAqC,uDAAuD,sCAAsC,+CAA+C,8DAA8D,gEAAgE,oCAAoC,yBAAyB,+BAA+B,+BAA+B,mCAAmC,oCAAoC,UAAU,iCAAiC,iGAAiG,8BAA8B,0DAA0D,uCAAuC,aAAa,iEAAiE,kCAAkC,sEAAsE,0CAA0C,gDAAgD,+BAA+B,kBAAkB,OAAO,2CAA2C,iBAAiB,aAAa,4DAA4D,8BAA8B,4DAA4D,0DAA0D,+BAA+B,+CAA+C,iBAAiB,aAAa,8DAA8D,kCAAkC,yEAAyE,gDAAgD,+BAA+B,kBAAkB,OAAO,8CAA8C,iBAAiB,0CAA0C,aAAa,oCAAoC,qEAAqE,8CAA8C,wCAAwC,uCAAuC,0CAA0C,uCAAuC,+BAA+B,SAAS,OAAO,wCAAwC,mDAAmD,gJAAgJ,+CAA+C,iDAAiD,qBAAqB,iBAAiB,4EAA4E,SAAS,GAAG,gDAAgD,kDAAkD,oCAAoC,8BAA8B,qBAAqB,0BAA0B,4BAA4B,qBAAqB,iBAAiB,8CAA8C,+BAA+B,SAAS,OAAO,6DAA6D,iBAAiB,oCAAoC,sCAAsC,+CAA+C,0CAA0C,wCAAwC,iBAAiB,aAAa,wCAAwC,gCAAgC,uCAAuC,mCAAmC,wCAAwC,sDAAsD,0DAA0D,qBAAqB,iBAAiB,8CAA8C,aAAa,sFAAsF,oDAAoD,qCAAqC,oCAAoC,aAAa,mFAAmF,sCAAsC,aAAa,qFAAqF,oCAAoC,4DAA4D,wCAAwC,iBAAiB,aAAa,uFAAuF,mCAAmC,kFAAkF,yCAAyC,iBAAiB,aAAa,wFAAwF,iCAAiC,aAAa,yFAAyF,OAAO,+BAA+B,OAAO,gCAAgC,QAAQ,sDAAsD,SAAS,iGAAiG,SAAS,kGAAkG,4CAA4C,uFAAuF,wCAAwC,iMAAiM,6CAA6C,kCAAkC,aAAa,UAAU,4CAA4C,qCAAqC,eAAe,mEAAmE,mBAAmB,uKAAuK,yCAAyC,yFAAyF,8CAA8C,2JAA2J,iBAAiB,SAAS,0GAA0G,4BAA4B,0yBAA0yB,2CAA2C,aAAa,mqBAAmqB,mCAAmC,mCAAmC,aAAa,wHAAwH,oCAAoC,oCAAoC,aAAa,yEAAyE,2CAA2C,aAAa,yBAAyB,SAAS,+CAA+C,2HAA2H,2CAA2C,0CAA0C,SAAS,iLAAiL,oCAAoC,kCAAkC,yBAAyB,aAAa,qCAAqC,uEAAuE,6BAA6B,mDAAmD,uFAAuF,aAAa,kBAAkB,qIAAqI,gEAAgE,aAAa,uBAAuB,SAAS,wDAAwD,8BAA8B,mDAAmD,aAAa,kBAAkB,qDAAqD,aAAa,SAAS,2DAA2D,8BAA8B,sDAAsD,aAAa,kBAAkB,qDAAqD,aAAa,SAAS,uPAAuP,MAAM,iFAAiF,mCAAmC,oCAAoC,sCAAsC,aAAa,4BAA4B,sCAAsC,sCAAsC,cAAc,4BAA4B,+QAA+Q,eAAe,8CAA8C,ugBAAugB,yCAAyC,kBAAkB,eAAe,mEAAmE,wDAAwD,4CAA4C,+CAA+C,yCAAyC,iDAAiD,4DAA4D,gEAAgE,sDAAsD,sCAAsC,qKAAqK,8FAA8F,mCAAmC,iFAAiF,mFAAmF,sDAAsD,qDAAqD,SAAS,EAAE,uCAAuC,4FAA4F,SAAS,wDAAwD,+CAA+C,sDAAsD,6LAA6L,oDAAoD,yHAAyH,4CAA4C,0CAA0C,mDAAmD,2BAA2B,2BAA2B,aAAa,SAAS,uDAAuD,8DAA8D,uKAAuK,gBAAgB,uCAAuC,gDAAgD,gDAAgD,kDAAkD,iFAAiF,gBAAgB,YAAY,4aAA4a,sCAAsC,+CAA+C,2DAA2D,2CAA2C,aAAa,OAAO,SAAS,+BAA+B,4FAA4F,MAAM,8DAA8D,wDAAwD,mDAAmD,aAAa,8FAA8F,MAAM,6DAA6D,wDAAwD,uEAAuE,0CAA0C,8DAA8D,uGAAuG,mCAAmC,yBAAyB,uDAAuD,qBAAqB,iBAAiB,kDAAkD,aAAa,wFAAwF,MAAM,+DAA+D,2LAA2L,oKAAoK,qDAAqD,uDAAuD,4MAA4M,0DAA0D,sCAAsC,aAAa,wFAAwF,MAAM,8DAA8D,0DAA0D,oKAAoK,wDAAwD,2PAA2P,sCAAsC,aAAa,wFAAwF,MAAM,6DAA6D,0DAA0D,oKAAoK,qDAAqD,wDAAwD,m1BAAm1B,wDAAwD,iBAAiB,sCAAsC,aAAa,8CAA8C,wDAAwD,sDAAsD,mEAAmE,oBAAoB,aAAa,8CAA8C,+UAA+U,4DAA4D,iBAAiB,aAAa,4CAA4C,sDAAsD,aAAa,6CAA6C,yYAAyY,2DAA2D,iBAAiB,aAAa,UAAU,8CAA8C,gDAAgD,oEAAoE,SAAS,0DAA0D,6EAA6E,YAAY,6IAA6I,kDAAkD,wDAAwD,0CAA0C,cAAc,SAAS,EAAE,yFAAyF,uBAAuB,qEAAqE,4DAA4D,oFAAoF,aAAa,EAAE,gEAAgE,oFAAoF,aAAa,EAAE,8DAA8D,yFAAyF,aAAa,EAAE,uDAAuD,oCAAoC,6CAA6C,+BAA+B,qBAAqB,yDAAyD,kBAAkB,aAAa,SAAS,2CAA2C,gCAAgC,6BAA6B,8DAA8D,QAAQ,kDAAkD,8DAA8D,OAAO,4CAA4C,8DAA8D,+BAA+B,+DAA+D,kCAAkC,mCAAmC,+CAA+C,ujBAAujB,kyBAAkyB,wEAAwE,wGAAwG,oBAAoB,aAAa,kBAAkB,+CAA+C,2DAA2D,yLAAyL,iBAAiB,8fAA8f,aAAa,8DAA8D,2DAA2D,wFAAwF,iBAAiB,YAAY,aAAa,SAAS,+DAA+D,oDAAoD,2EAA2E,6BAA6B,yBAAyB,OAAO,2CAA2C,wFAAwF,aAAa,UAAU,mEAAmE,6DAA6D,UAAU,kDAAkD,2CAA2C,aAAa,mEAAmE,mBAAmB,oHAAoH,wCAAwC,8DAA8D,eAAe,4CAA4C,UAAU,kCAAkC,+FAA+F,mDAAmD,8CAA8C,aAAa,mCAAmC,uCAAuC,4BAA4B,aAAa,yDAAyD,4CAA4C,iCAAiC,2BAA2B,iBAAiB,mCAAmC,oJAAoJ,uDAAuD,SAAS,OAAO,2CAA2C,qEAAqE,EAAE,8DAA8D,kDAAkD,iBAAiB,8CAA8C,aAAa,6CAA6C,oDAAoD,gEAAgE,qFAAqF,0CAA0C,+CAA+C,yBAAyB,qBAAqB,iBAAiB,aAAa,UAAU,oCAAoC,uDAAuD,uDAAuD,kDAAkD,SAAS,sCAAsC,iJAAiJ,SAAS,6BAA6B,8CAA8C,4CAA4C,kCAAkC,2BAA2B,iBAAiB,2DAA2D,SAAS,yDAAyD,qBAAqB,oKAAoK,qEAAqE,8DAA8D,oDAAoD,yDAAyD,kDAAkD,kDAAkD,8BAA8B,gJAAgJ,iBAAiB,aAAa,gDAAgD,sCAAsC,eAAe,mEAAmE,mBAAmB,yRAAyR,0CAA0C,0CAA0C,kDAAkD,8CAA8C,8CAA8C,8DAA8D,uSAAuS,oCAAoC,qCAAqC,SAAS,wCAAwC,yBAAyB,6BAA6B,aAAa,sCAAsC,4BAA4B,aAAa,2HAA2H,6BAA6B,aAAa,0BAA0B,SAAS,2CAA2C,kCAAkC,SAAS,4CAA4C,2CAA2C,8BAA8B,aAAa,SAAS,qDAAqD,oDAAoD,yDAAyD,+CAA+C,+BAA+B,qDAAqD,aAAa,mCAAmC,qCAAqC,gDAAgD,SAAS,gEAAgE,6CAA6C,8DAA8D,aAAa,gGAAgG,4BAA4B,aAAa,2BAA2B,sBAAsB,OAAO,wDAAwD,gCAAgC,iBAAiB,aAAa,SAAS,2CAA2C,2BAA2B,sBAAsB,OAAO,4CAA4C,6CAA6C,gCAAgC,wDAAwD,2BAA2B,gFAAgF,aAAa,SAAS,8CAA8C,wDAAwD,qDAAqD,sTAAsT,OAAO,EAAE,6BAA6B,SAAS,+FAA+F,YAAY,6BAA6B,uBAAuB,2BAA2B,OAAO,sEAAsE,0KAA0K,gDAAgD,YAAY,EAAE,uCAAuC,OAAO,uFAAuF,qCAAqC,QAAQ,oFAAoF,wDAAwD,YAAY,4CAA4C,yCAAyC,8BAA8B,yEAAyE,wJAAwJ,sCAAsC,aAAa,uCAAuC,uBAAuB,kDAAkD,uCAAuC,eAAe,yFAAyF,uCAAuC,sCAAsC,iFAAiF,uCAAuC,wBAAwB,sBAAsB,QAAQ,kDAAkD,kCAAkC,+CAA+C,gDAAgD,0HAA0H,0CAA0C,aAAa,kBAAkB,yCAAyC,4CAA4C,iBAAiB,0CAA0C,8CAA8C,iBAAiB,8FAA8F,yCAAyC,oCAAoC,sCAAsC,8NAA8N,wCAAwC,uGAAuG,sCAAsC,mCAAmC,uCAAuC,aAAa,0FAA0F,uCAAuC,qBAAqB,mEAAmE,uCAAuC,UAAU,+BAA+B,yHAAyH,QAAQ,wDAAwD,0CAA0C,aAAa,wCAAwC,eAAe,yDAAyD,qCAAqC,aAAa,0DAA0D,QAAQ,4FAA4F,+DAA+D,oDAAoD,kDAAkD,uEAAuE,uBAAuB,OAAO,0CAA0C,gDAAgD,8DAA8D,wCAAwC,qBAAqB,iBAAiB,sCAAsC,uDAAuD,4CAA4C,iBAAiB,8BAA8B,aAAa,oDAAoD,oCAAoC,2BAA2B,iBAAiB,mDAAmD,wFAAwF,EAAE,qCAAqC,yCAAyC,8CAA8C,mDAAmD,aAAa,2CAA2C,6CAA6C,wDAAwD,gEAAgE,+BAA+B,iDAAiD,iBAAiB,qCAAqC,aAAa,0CAA0C,wDAAwD,+BAA+B,0BAA0B,OAAO,uDAAuD,+BAA+B,+CAA+C,qBAAqB,iBAAiB,yCAAyC,aAAa,0CAA0C,wDAAwD,+CAA+C,kDAAkD,iDAAiD,6BAA6B,2BAA2B,iBAAiB,yEAAyE,0GAA0G,uEAAuE,iBAAiB,iCAAiC,sCAAsC,+BAA+B,SAAS,GAAG,8CAA8C,+CAA+C,sIAAsI,mDAAmD,qDAAqD,8BAA8B,iCAAiC,qBAAqB,wBAAwB,oIAAoI,4DAA4D,kEAAkE,gEAAgE,mGAAmG,qBAAqB,iBAAiB,yCAAyC,aAAa,8CAA8C,gCAAgC,kDAAkD,2BAA2B,iBAAiB,oLAAoL,mCAAmC,4CAA4C,mCAAmC,+HAA+H,2EAA2E,yDAAyD,6CAA6C,wDAAwD,yBAAyB,8BAA8B,wDAAwD,yBAAyB,qBAAqB,iBAAiB,aAAa,+CAA+C,4CAA4C,mCAAmC,qEAAqE,mDAAmD,iBAAiB,EAAE,aAAa,sDAAsD,yCAAyC,qCAAqC,iBAAiB,gDAAgD,2CAA2C,yDAAyD,oDAAoD,0DAA0D,aAAa,wDAAwD,iCAAiC,kCAAkC,wBAAwB,2CAA2C,0BAA0B,8CAA8C,4CAA4C,0CAA0C,0CAA0C,kCAAkC,2CAA2C,uDAAuD,2CAA2C,+BAA+B,wCAAwC,uCAAuC,wHAAwH,uDAAuD,8EAA8E,kCAAkC,iBAAiB,kDAAkD,OAAO,OAAO,qCAAqC,sEAAsE,+CAA+C,gJAAgJ,uEAAuE,uDAAuD,qBAAqB,+FAA+F,kCAAkC,0CAA0C,yBAAyB,2EAA2E,kHAAkH,oEAAoE,0DAA0D,4MAA4M,yBAAyB,iDAAiD,mCAAmC,mGAAmG,iEAAiE,iDAAiD,yBAAyB,qBAAqB,gEAAgE,iCAAiC,qBAAqB,yCAAyC,2GAA2G,6MAA6M,iEAAiE,qEAAqE,uMAAuM,kFAAkF,6PAA6P,kEAAkE,yCAAyC,6BAA6B,iFAAiF,qEAAqE,uGAAuG,6BAA6B,6EAA6E,yBAAyB,kDAAkD,oHAAoH,yBAAyB,qBAAqB,0BAA0B,2EAA2E,qBAAqB,yCAAyC,iBAAiB,gDAAgD,mEAAmE,iBAAiB,mFAAmF,6FAA6F,qCAAqC,oBAAoB,mDAAmD,qEAAqE,kEAAkE,wDAAwD,qBAAqB,iBAAiB,QAAQ,aAAa,2EAA2E,2CAA2C,qCAAqC,gsBAAgsB,qDAAqD,+OAA+O,8HAA8H,8DAA8D,+EAA+E,6HAA6H,yBAAyB,qFAAqF,uCAAuC,mDAAmD,+DAA+D,8DAA8D,yBAAyB,qBAAqB,0DAA0D,0DAA0D,sCAAsC,0DAA0D,iBAAiB,aAAa,oFAAoF,OAAO,+BAA+B,qBAAqB,wDAAwD,yCAAyC,2CAA2C,iBAAiB,mDAAmD,6BAA6B,+GAA+G,6CAA6C,sDAAsD,2EAA2E,qBAAqB,sDAAsD,8LAA8L,iBAAiB,+BAA+B,aAAa,sDAAsD,+CAA+C,kDAAkD,4CAA4C,qCAAqC,2BAA2B,4CAA4C,0CAA0C,uEAAuE,2BAA2B,iBAAiB,uFAAuF,uEAAuE,2BAA2B,iBAAiB,0DAA0D,+BAA+B,aAAa,OAAO,kKAAkK,kCAAkC,yBAAyB,qBAAqB,yDAAyD,iBAAiB,oDAAoD,4CAA4C,qPAAqP,oCAAoC,oDAAoD,kDAAkD,4KAA4K,yBAAyB,8BAA8B,2DAA2D,yBAAyB,qBAAqB,0BAA0B,iDAAiD,gFAAgF,yBAAyB,8BAA8B,2DAA2D,yBAAyB,qBAAqB,iBAAiB,aAAa,mFAAmF,kDAAkD,sBAAsB,sBAAsB,2BAA2B,uBAAuB,OAAO,sCAAsC,yDAAyD,iBAAiB,aAAa,kGAAkG,kDAAkD,0BAA0B,sBAAsB,sBAAsB,2BAA2B,uBAAuB,OAAO,sCAAsC,4CAA4C,4CAA4C,mDAAmD,qBAAqB,iBAAiB,aAAa,mHAAmH,kDAAkD,0BAA0B,sBAAsB,sBAAsB,2BAA2B,uBAAuB,OAAO,sCAAsC,4CAA4C,6CAA6C,mDAAmD,qBAAqB,iBAAiB,aAAa,iEAAiE,6BAA6B,+DAA+D,oCAAoC,aAAa,oDAAoD,4CAA4C,gEAAgE,6CAA6C,sDAAsD,6DAA6D,yDAAyD,sCAAsC,0CAA0C,iBAAiB,EAAE,sEAAsE,sEAAsE,sCAAsC,0CAA0C,iBAAiB,EAAE,gDAAgD,4CAA4C,uCAAuC,mCAAmC,gDAAgD,OAAO,OAAO,qCAAqC,oEAAoE,+CAA+C,oDAAoD,gCAAgC,wCAAwC,oEAAoE,qBAAqB,0FAA0F,kIAAkI,4DAA4D,yCAAyC,yBAAyB,kEAAkE,uDAAuD,wGAAwG,6EAA6E,2DAA2D,gMAAgM,sEAAsE,6BAA6B,sEAAsE,yBAAyB,wGAAwG,0DAA0D,+KAA+K,4GAA4G,mKAAmK,yBAAyB,qBAAqB,0BAA0B,wCAAwC,wDAAwD,yEAAyE,oDAAoD,2DAA2D,yBAAyB,qBAAqB,iBAAiB,gDAAgD,4CAA4C,iEAAiE,iBAAiB,4FAA4F,iEAAiE,6CAA6C,qBAAqB,iBAAiB,EAAE,2GAA2G,oEAAoE,8EAA8E,0CAA0C,qBAAqB,wCAAwC,6CAA6C,qBAAqB,iBAAiB,EAAE,aAAa,6FAA6F,wDAAwD,4BAA4B,aAAa,8CAA8C,8BAA8B,aAAa,qFAAqF,OAAO,8BAA8B,OAAO,mCAAmC,OAAO,uDAAuD,OAAO,0DAA0D,OAAO,iKAAiK,6BAA6B,wDAAwD,+CAA+C,qDAAqD,qBAAqB,0BAA0B,sEAAsE,qBAAqB,uDAAuD,kCAAkC,qEAAqE,qBAAqB,iBAAiB,aAAa,6DAA6D,OAAO,0EAA0E,0CAA0C,kDAAkD,2CAA2C,6BAA6B,2BAA2B,iBAAiB,4DAA4D,sCAAsC,yEAAyE,aAAa,uGAAuG,4CAA4C,6EAA6E,yEAAyE,sDAAsD,yDAAyD,2CAA2C,0CAA0C,6CAA6C,yGAAyG,uDAAuD,yDAAyD,oDAAoD,8DAA8D,mEAAmE,yBAAyB,qBAAqB,yEAAyE,oDAAoD,qBAAqB,EAAE,yCAAyC,iBAAiB,sCAAsC,sCAAsC,8BAA8B,aAAa,gEAAgE,OAAO,iEAAiE,iDAAiD,4BAA4B,kCAAkC,iBAAiB,aAAa,oFAAoF,yCAAyC,gIAAgI,aAAa,+FAA+F,OAAO,4BAA4B,OAAO,sFAAsF,kCAAkC,yCAAyC,+CAA+C,iBAAiB,yFAAyF,yCAAyC,+DAA+D,mCAAmC,sEAAsE,iCAAiC,2BAA2B,kCAAkC,iEAAiE,sDAAsD,0CAA0C,4CAA4C,qBAAqB,0CAA0C,mCAAmC,uBAAuB,OAAO,8CAA8C,oDAAoD,8EAA8E,sDAAsD,kCAAkC,yBAAyB,qBAAqB,gFAAgF,8CAA8C,yEAAyE,iDAAiD,qBAAqB,iBAAiB,+BAA+B,wBAAwB,OAAO,4CAA4C,iDAAiD,iEAAiE,2CAA2C,qBAAqB,iEAAiE,iBAAiB,0DAA0D,wCAAwC,aAAa,yFAAyF,mCAAmC,aAAa,4FAA4F,oCAAoC,aAAa,2CAA2C,sCAAsC,oDAAoD,iEAAiE,+DAA+D,mEAAmE,gEAAgE,gDAAgD,iBAAiB,uCAAuC,sEAAsE,sOAAsO,aAAa,kDAAkD,sCAAsC,gEAAgE,kDAAkD,kDAAkD,uCAAuC,sDAAsD,wDAAwD,wDAAwD,wEAAwE,4FAA4F,0FAA0F,yFAAyF,2FAA2F,kEAAkE,oEAAoE,6CAA6C,6CAA6C,sCAAsC,mDAAmD,8BAA8B,uCAAuC,+IAA+I,0EAA0E,kCAAkC,oCAAoC,uCAAuC,2BAA2B,oCAAoC,iBAAiB,2DAA2D,+CAA+C,4BAA4B,oHAAoH,iBAAiB,EAAE,uDAAuD,+EAA+E,iBAAiB,uDAAuD,+EAA+E,iBAAiB,oDAAoD,sEAAsE,iBAAiB,kCAAkC,aAAa,UAAU,mCAAmC,eAAe,mEAAmE,gJAAgJ,6CAA6C,4CAA4C,8CAA8C,kCAAkC,yBAAyB,SAAS,2EAA2E,OAAO,gCAAgC,OAAO,0DAA0D,QAAQ,4CAA4C,OAAO,sEAAsE,sDAAsD,2CAA2C,6CAA6C,6CAA6C,iFAAiF,iCAAiC,gCAAgC,6CAA6C,+CAA+C,uCAAuC,yCAAyC,iGAAiG,0BAA0B,SAAS,mJAAmJ,OAAO,sBAAsB,uBAAuB,2BAA2B,OAAO,iEAAiE,oBAAoB,iDAAiD,yCAAyC,4DAA4D,aAAa,4GAA4G,yBAAyB,4BAA4B,aAAa,yBAAyB,2BAA2B,uCAAuC,2BAA2B,+DAA+D,sEAAsE,iDAAiD,2DAA2D,0EAA0E,wCAAwC,uCAAuC,6CAA6C,aAAa,kCAAkC,gCAAgC,qCAAqC,iCAAiC,qFAAqF,OAAO,wEAAwE,4DAA4D,QAAQ,gFAAgF,uFAAuF,OAAO,gFAAgF,+DAA+D,OAAO,0CAA0C,UAAU,6BAA6B,8HAA8H,qDAAqD,0CAA0C,aAAa,8CAA8C,mCAAmC,2FAA2F,6DAA6D,iCAAiC,iDAAiD,iBAAiB,aAAa,0CAA0C,OAAO,8BAA8B,OAAO,oEAAoE,mCAAmC,qCAAqC,yCAAyC,2CAA2C,gDAAgD,gDAAgD,0CAA0C,0CAA0C,gCAAgC,gDAAgD,kDAAkD,qCAAqC,qDAAqD,qBAAqB,iBAAiB,aAAa,8DAA8D,QAAQ,+FAA+F,mCAAmC,mCAAmC,sCAAsC,wCAAwC,mDAAmD,kEAAkE,yDAAyD,qCAAqC,uCAAuC,wCAAwC,gDAAgD,qBAAqB,qEAAqE,2KAA2K,iBAAiB,qDAAqD,iCAAiC,oDAAoD,+EAA+E,yKAAyK,8KAA8K,EAAE,oFAAoF,qBAAqB,8EAA8E,+GAA+G,qBAAqB,+BAA+B,8EAA8E,sDAAsD,kCAAkC,iBAAiB,uCAAuC,+CAA+C,+BAA+B,qDAAqD,gEAAgE,kCAAkC,iBAAiB,aAAa,UAAU,iCAAiC,aAAa,mEAAmE,qDAAqD,6CAA6C,+CAA+C,iHAAiH,iDAAiD,gKAAgK,sIAAsI,qIAAqI,sFAAsF,kDAAkD,gKAAgK,yBAAyB,EAAE,qBAAqB,kGAAkG,+DAA+D,yEAAyE,4CAA4C,oEAAoE,yBAAyB,qBAAqB,EAAE,iBAAiB,aAAa,+CAA+C,UAAU,aAAa,mEAAmE,8EAA8E,kDAAkD,mCAAmC,mCAAmC,0BAA0B,2BAA2B,iBAAiB,OAAO,0CAA0C,kCAAkC,0BAA0B,iBAAiB,aAAa,uBAAuB,SAAS,mDAAmD,mCAAmC,0BAA0B,oBAAoB,2BAA2B,qBAAqB,OAAO,8BAA8B,uCAAuC,kCAAkC,iBAAiB,+BAA+B,aAAa,oDAAoD,mCAAmC,aAAa,SAAS,mDAAmD,qDAAqD,gEAAgE,sDAAsD,iBAAiB,aAAa,EAAE,SAAS,uHAAuH,2JAA2J,qQAAqQ,iCAAiC,8CAA8C,sDAAsD,kDAAkD,2BAA2B,iBAAiB,kDAAkD,yCAAyC,uEAAuE,sDAAsD,kEAAkE,qBAAqB,iBAAiB,6CAA6C,uEAAuE,0HAA0H,iBAAiB,iCAAiC,gCAAgC,OAAO,oEAAoE,0DAA0D,8BAA8B,qBAAqB,iBAAiB,aAAa,EAAE,sFAAsF,oDAAoD,aAAa,sEAAsE,oDAAoD,8BAA8B,mDAAmD,4CAA4C,qBAAqB,qDAAqD,uDAAuD,qBAAqB,EAAE,iBAAiB,aAAa,EAAE,UAAU,aAAa,mEAAmE,oDAAoD,wJAAwJ,yCAAyC,oDAAoD,+BAA+B,mEAAmE,iEAAiE,qEAAqE,8EAA8E,8DAA8D,qDAAqD,kFAAkF,yBAAyB,8BAA8B,+FAA+F,yBAAyB,6DAA6D,qBAAqB,kFAAkF,8DAA8D,uDAAuD,sFAAsF,yBAAyB,8BAA8B,mGAAmG,yBAAyB,+DAA+D,qBAAqB,iBAAiB,EAAE,aAAa,SAAS,iDAAiD,6BAA6B,uBAAuB,aAAa,uCAAuC,iDAAiD,gDAAgD,sCAAsC,uBAAuB,+BAA+B,iBAAiB,OAAO,6CAA6C,iBAAiB,sFAAsF,kDAAkD,gDAAgD,mCAAmC,mBAAmB,OAAO,mDAAmD,qBAAqB,iBAAiB,mFAAmF,gDAAgD,+CAA+C,mCAAmC,mBAAmB,OAAO,wDAAwD,0DAA0D,0DAA0D,yBAAyB,8BAA8B,uDAAuD,yBAAyB,qBAAqB,iBAAiB,aAAa,UAAU,aAAa,mEAAmE,sDAAsD,4CAA4C,yBAAyB,8BAA8B,4BAA4B,uBAAuB,OAAO,0BAA0B,OAAO,+BAA+B,OAAO,gCAAgC,OAAO,qCAAqC,uBAAuB,0DAA0D,8BAA8B,mCAAmC,+LAA+L,EAAE,yCAAyC,wBAAwB,yDAAyD,0EAA0E,EAAE,uCAAuC,wBAAwB,8HAA8H,yBAAyB,6HAA6H,0EAA0E,EAAE,8CAA8C,wBAAwB,iNAAiN,0EAA0E,EAAE,iEAAiE,yDAAyD,yCAAyC,+DAA+D,2DAA2D,oEAAoE,8CAA8C,2BAA2B,iCAAiC,4BAA4B,oEAAoE,4CAA4C,6CAA6C,8BAA8B,sEAAsE,EAAE,oCAAoC,oCAAoC,+IAA+I,EAAE,iCAAiC,wJAAwJ,EAAE,cAAc,2BAA2B,yBAAyB,UAAU,aAAa,mEAAmE,oDAAoD,8GAA8G,wEAAwE,mHAAmH,6GAA6G,2BAA2B,iNAAiN,8CAA8C,iDAAiD,8CAA8C,+CAA+C,uCAAuC,+HAA+H,6CAA6C,uGAAuG,iDAAiD,8CAA8C,iBAAiB,aAAa,EAAE,sDAAsD,SAAS,mDAAmD,0CAA0C,SAAS,qDAAqD,6DAA6D,sCAAsC,UAAU,gEAAgE,oCAAoC,UAAU,2GAA2G,sBAAsB,yDAAyD,yCAAyC,mHAAmH,2BAA2B,0EAA0E,oDAAoD,sCAAsC,oCAAoC,2BAA2B,uBAAuB,OAAO,kCAAkC,uCAAuC,wDAAwD,kDAAkD,qCAAqC,wXAAwX,iBAAiB,sBAAsB,kDAAkD,uDAAuD,wEAAwE,kDAAkD,+DAA+D,wDAAwD,qBAAqB,iBAAiB,wEAAwE,mDAAmD,8DAA8D,aAAa,+DAA+D,eAAe,4DAA4D,wGAAwG,OAAO,iEAAiE,uCAAuC,2BAA2B,sDAAsD,uCAAuC,2BAA2B,yCAAyC,qKAAqK,eAAe,qEAAqE,kEAAkE,+BAA+B,qEAAqE,uCAAuC,eAAe,+CAA+C,qCAAqC,eAAe,6CAA6C,uHAAuH,mCAAmC,0EAA0E,wCAAwC,yBAAyB,iDAAiD,kGAAkG,OAAO,oEAAoE,+EAA+E,OAAO,oEAAoE,gGAAgG,eAAe,yEAAyE,yFAAyF,eAAe,yEAAyE,uEAAuE,+BAA+B,wEAAwE,uCAAuC,qBAAqB,gEAAgE,uCAAuC,OAAO,+DAA+D,UAAU,yCAAyC,kCAAkC,+EAA+E,QAAQ,kDAAkD,6DAA6D,cAAc,0NAA0N,OAAO,+EAA+E,8BAA8B,kDAAkD,aAAa,uBAAuB,UAAU,8FAA8F,cAAc,sQAAsQ,8EAA8E,UAAU,+DAA+D,4BAA4B,wBAAwB,eAAe,8BAA8B,SAAS,uJAAuJ,8BAA8B,qDAAqD,8BAA8B,qDAAqD,aAAa,uBAAuB,6GAA6G,8DAA8D,iBAAiB,aAAa,mCAAmC,mEAAmE,4CAA4C,+CAA+C,wDAAwD,sCAAsC,8BAA8B,qCAAqC,2BAA2B,wCAAwC,wDAAwD,uBAAuB,OAAO,8DAA8D,qEAAqE,uDAAuD,4DAA4D,aAAa,8BAA8B,kCAAkC,2CAA2C,aAAa,yIAAyI,iEAAiE,4CAA4C,YAAY,2DAA2D,8CAA8C,iBAAiB,wTAAwT,cAAc,6BAA6B,UAAU,OAAO,+GAA+G,uYAAuY,uBAAuB,OAAO,4CAA4C,kDAAkD,4HAA4H,iBAAiB,kCAAkC,aAAa,gFAAgF,UAAU,OAAO,+CAA+C,+CAA+C,gDAAgD,oDAAoD,qBAAqB,kDAAkD,yEAAyE,qBAAqB,iBAAiB,6CAA6C,8FAA8F,oCAAoC,+IAA+I,8BAA8B,oDAAoD,+DAA+D,qBAAqB,4CAA4C,iBAAiB,uCAAuC,aAAa,wCAAwC,kCAAkC,UAAU,iCAAiC,OAAO,kDAAkD,uCAAuC,UAAU,wFAAwF,OAAO,kDAAkD,OAAO,uBAAuB,QAAQ,0BAA0B,OAAO,+DAA+D,wCAAwC,8CAA8C,yFAAyF,2BAA2B,aAAa,kDAAkD,+EAA+E,8DAA8D,+DAA+D,mDAAmD,uCAAuC,+HAA+H,+QAA+Q,kDAAkD,yBAAyB,wDAAwD,qBAAqB,iBAAiB,aAAa,yBAAyB,UAAU,0EAA0E,eAAe,kEAAkE,OAAO,uBAAuB,QAAQ,0BAA0B,OAAO,4EAA4E,4BAA4B,gDAAgD,4BAA4B,iCAAiC,6CAA6C,aAAa,sDAAsD,SAAS,OAAO,iEAAiE,aAAa,4BAA4B,UAAU,yEAAyE,OAAO,uBAAuB,OAAO,wBAAwB,OAAO,wDAAwD,6CAA6C,sDAAsD,oDAAoD,SAAS,OAAO,gOAAgO,iCAAiC,iBAAiB,aAAa,wBAAwB,UAAU,8EAA8E,OAAO,uBAAuB,QAAQ,yBAAyB,SAAS,mFAAmF,yCAAyC,6CAA6C,qDAAqD,4DAA4D,+DAA+D,oBAAoB,sBAAsB,4BAA4B,iCAAiC,aAAa,uDAAuD,0BAA0B,mCAAmC,oCAAoC,8DAA8D,mDAAmD,SAAS,OAAO,oDAAoD,gGAAgG,kEAAkE,wBAAwB,2DAA2D,qDAAqD,qDAAqD,qBAAqB,iBAAiB,kEAAkE,aAAa,kBAAkB,6CAA6C,aAAa,UAAU,2EAA2E,OAAO,uBAAuB,QAAQ,mEAAmE,6CAA6C,wBAAwB,0BAA0B,mDAAmD,SAAS,OAAO,wDAAwD,wCAAwC,qCAAqC,qBAAqB,iBAAiB,aAAa,uBAAuB,UAAU,8EAA8E,OAAO,uBAAuB,OAAO,0BAA0B,OAAO,uGAAuG,wCAAwC,uCAAuC,uCAAuC,4BAA4B,qDAAqD,SAAS,OAAO,8CAA8C,sDAAsD,iCAAiC,qBAAqB,iBAAiB,aAAa,sBAAsB,UAAU,6EAA6E,OAAO,uBAAuB,OAAO,yBAAyB,OAAO,4DAA4D,uCAAuC,0CAA0C,mDAAmD,SAAS,OAAO,0CAA0C,kDAAkD,6BAA6B,iBAAiB,aAAa,wBAAwB,UAAU,uFAAuF,OAAO,uBAAuB,OAAO,yBAAyB,OAAO,oEAAoE,2EAA2E,2FAA2F,oEAAoE,gCAAgC,aAAa,2BAA2B,2CAA2C,mCAAmC,iDAAiD,8CAA8C,mCAAmC,iBAAiB,mDAAmD,oCAAoC,iBAAiB,sBAAsB,+BAA+B,iBAAiB,aAAa,sBAAsB,UAAU,8EAA8E,OAAO,uBAAuB,OAAO,yBAAyB,QAAQ,yDAAyD,OAAO,2CAA2C,eAAe,yIAAyI,wCAAwC,uCAAuC,oCAAoC,6BAA6B,sCAAsC,aAAa,wCAAwC,uCAAuC,aAAa,6CAA6C,6BAA6B,+CAA+C,SAAS,OAAO,2DAA2D,0CAA0C,6DAA6D,mRAAmR,uCAAuC,uCAAuC,kDAAkD,qBAAqB,2CAA2C,iBAAiB,aAAa,kCAAkC,UAAU,6DAA6D,OAAO,wBAAwB,OAAO,2DAA2D,2CAA2C,gDAAgD,UAAU,4DAA4D,OAAO,wBAAwB,OAAO,8DAA8D,gEAAgE,UAAU,gCAAgC,OAAO,uBAAuB,QAAQ,0CAA0C,OAAO,uDAAuD,2DAA2D,UAAU,gCAAgC,OAAO,uBAAuB,QAAQ,0CAA0C,OAAO,qDAAqD,mFAAmF,UAAU,sDAAsD,8CAA8C,0CAA0C,aAAa,8BAA8B,SAAS,yDAAyD,sBAAsB,mBAAmB,SAAS,sBAAsB,QAAQ,iCAAiC,EAAE,2FAA2F,EAAE,yDAAyD,EAAE,uCAAuC,0EAA0E,6CAA6C,gCAAgC,2BAA2B,0BAA0B,0BAA0B,aAAa,oFAAoF,6BAA6B,sCAAsC,uCAAuC,wCAAwC,6BAA6B,oBAAoB,OAAO,wEAAwE,uEAAuE,8BAA8B,oGAAoG,8BAA8B,iIAAiI,8BAA8B,mEAAmE,aAAa,OAAO,mEAAmE,yBAAyB,qEAAqE,iDAAiD,iBAAiB,aAAa,UAAU,sDAAsD,sBAAsB,mBAAmB,SAAS,sBAAsB,QAAQ,iCAAiC,EAAE,oGAAoG,mDAAmD,gCAAgC,2BAA2B,gCAAgC,gCAAgC,aAAa,4HAA4H,kCAAkC,2BAA2B,4CAA4C,uCAAuC,wCAAwC,6BAA6B,oBAAoB,OAAO,yBAAyB,qEAAqE,+CAA+C,iBAAiB,yCAAyC,8HAA8H,iBAAiB,sBAAsB,mCAAmC,aAAa,OAAO,qEAAqE,qBAAqB,iCAAiC,oDAAoD,iBAAiB,2BAA2B,gDAAgD,iBAAiB,aAAa,wCAAwC,gEAAgE,0BAA0B,UAAU,wEAAwE,sBAAsB,gCAAgC,SAAS,sBAAsB,QAAQ,iCAAiC,EAAE,mCAAmC,MAAM,mFAAmF,mDAAmD,gCAAgC,2BAA2B,gCAAgC,gCAAgC,aAAa,8BAA8B,+CAA+C,6DAA6D,aAAa,kBAAkB,0BAA0B,UAAU,0EAA0E,oDAAoD,+JAA+J,sHAAsH,+CAA+C,oDAAoD,sDAAsD,0BAA0B,OAAO,2CAA2C,oDAAoD,kEAAkE,qIAAqI,iBAAiB,sBAAsB,oHAAoH,iBAAiB,aAAa,wBAAwB,SAAS,2FAA2F,sBAAsB,8BAA8B,SAAS,sBAAsB,QAAQ,iCAAiC,EAAE,mCAAmC,MAAM,8EAA8E,0HAA0H,oEAAoE,gKAAgK,0CAA0C,mCAAmC,+CAA+C,0DAA0D,+DAA+D,uCAAuC,sFAAsF,kDAAkD,+CAA+C,qBAAqB,mCAAmC,qBAAqB,OAAO,gDAAgD,oDAAoD,kDAAkD,uCAAuC,2DAA2D,yBAAyB,qBAAqB,iBAAiB,aAAa,kBAAkB,0BAA0B,UAAU,sFAAsF,OAAO,6BAA6B,OAAO,wBAAwB,SAAS,+BAA+B,SAAS,yIAAyI,mEAAmE,wCAAwC,8CAA8C,iDAAiD,4CAA4C,mCAAmC,kCAAkC,iDAAiD,sDAAsD,mCAAmC,sEAAsE,+BAA+B,OAAO,oEAAoE,aAAa,2BAA2B,SAAS,kBAAkB,uEAAuE,wCAAwC,mDAAmD,iBAAiB,+BAA+B,eAAe,OAAO,qDAAqD,mDAAmD,0CAA0C,iBAAiB,qDAAqD,6EAA6E,8FAA8F,kCAAkC,aAAa,0BAA0B,UAAU,gFAAgF,OAAO,8FAA8F,2CAA2C,oCAAoC,oGAAoG,UAAU,+DAA+D,yBAAyB,8BAA8B,+BAA+B,0DAA0D,sCAAsC,6DAA6D,oBAAoB,sKAAsK,oJAAoJ,iFAAiF,iBAAiB,iCAAiC,4EAA4E,iBAAiB,cAAc,UAAU,6DAA6D,OAAO,6DAA6D,sCAAsC,yCAAyC,UAAU,8DAA8D,cAAc,uBAAuB,EAAE,2EAA2E,uBAAuB,2CAA2C,EAAE,8DAA8D,gCAAgC,uCAAuC,mDAAmD,wDAAwD,qBAAqB,iBAAiB,uBAAuB,aAAa,8CAA8C,oCAAoC,UAAU,+DAA+D,OAAO,uBAAuB,EAAE,oEAAoE,gCAAgC,uCAAuC,mDAAmD,wDAAwD,qBAAqB,iBAAiB,uBAAuB,aAAa,oCAAoC,UAAU,gEAAgE,OAAO,yBAAyB,EAAE,yDAAyD,qCAAqC,UAAU,yEAAyE,OAAO,iEAAiE,0CAA0C,UAAU,yEAAyE,OAAO,uBAAuB,OAAO,0BAA0B,SAAS,0FAA0F,sGAAsG,kCAAkC,UAAU,yHAAyH,yCAAyC,UAAU,kFAAkF,OAAO,uBAAuB,OAAO,uBAAuB,QAAQ,qGAAqG,oDAAoD,oDAAoD,+CAA+C,wFAAwF,aAAa,uBAAuB,UAAU,4FAA4F,OAAO,uBAAuB,cAAc,uBAAuB,EAAE,kFAAkF,8BAA8B,2CAA2C,EAAE,yEAAyE,0DAA0D,gDAAgD,kCAAkC,uCAAuC,mDAAmD,qDAAqD,qBAAqB,iBAAiB,uBAAuB,aAAa,oCAAoC,UAAU,qHAAqH,8BAA8B,mCAAmC,UAAU,4DAA4D,iDAAiD,6CAA6C,2CAA2C,UAAU,oGAAoG,OAAO,uBAAuB,uBAAuB,yEAAyE,2CAA2C,uBAAuB,0JAA0J,4CAA4C,oEAAoE,0CAA0C,+DAA+D,iBAAiB,aAAa,yCAAyC,UAAU,gCAAgC,OAAO,wBAAwB,uBAAuB,gEAAgE,yCAAyC,UAAU,gCAAgC,SAAS,sBAAsB,EAAE,iFAAiF,8DAA8D,yBAAyB,oDAAoD,iBAAiB,aAAa,EAAE,UAAU,8MAA8M,6FAA6F,mEAAmE,gEAAgE,6CAA6C,oHAAoH,iCAAiC,+CAA+C,gBAAgB,aAAa,0BAA0B,UAAU,+EAA+E,OAAO,8BAA8B,SAAS,gGAAgG,kDAAkD,uDAAuD,uBAAuB,aAAa,gEAAgE,mDAAmD,4CAA4C,gEAAgE,yFAAyF,cAAc,UAAU,qOAAqO,+HAA+H,gCAAgC,kCAAkC,4BAA4B,aAAa,EAAE,gBAAgB,8CAA8C,mBAAmB,6CAA6C,wBAAwB,SAAS,2EAA2E,+BAA+B,+BAA+B,oEAAoE,kEAAkE,SAAS,kCAAkC,wJAAwJ,iCAAiC,4BAA4B,aAAa,yHAAyH,oCAAoC,4BAA4B,aAAa,yHAAyH,oCAAoC,4BAA4B,aAAa,qCAAqC,uCAAuC,uCAAuC,sDAAsD,sDAAsD,2CAA2C,yCAAyC,uCAAuC,uCAAuC,sBAAsB,qFAAqF,mFAAmF,6QAA6Q,mBAAmB,OAAO,+CAA+C,mDAAmD,6HAA6H,8OAA8O,kCAAkC,uEAAuE,gDAAgD,yBAAyB,8BAA8B,wDAAwD,yBAAyB,6DAA6D,qBAAqB,0BAA0B,wDAAwD,qBAAqB,iBAAiB,iCAAiC,0BAA0B,OAAO,+CAA+C,8DAA8D,uDAAuD,0CAA0C,qCAAqC,yBAAyB,mIAAmI,wDAAwD,yBAAyB,8BAA8B,6DAA6D,SAAS,OAAO,+DAA+D,6BAA6B,yBAAyB,qBAAqB,iBAAiB,aAAa,UAAU,8DAA8D,2BAA2B,gBAAgB,OAAO,8HAA8H,yCAAyC,wCAAwC,qCAAqC,iCAAiC,iBAAiB,sBAAsB,4CAA4C,2DAA2D,qBAAqB,sCAAsC,iBAAiB,aAAa,SAAS,sCAAsC,aAAa,oEAAoE,wDAAwD,6CAA6C,4CAA4C,kDAAkD,sDAAsD,6CAA6C,4BAA4B,wCAAwC,gCAAgC,gCAAgC,SAAS,wCAAwC,kJAAkJ,8GAA8G,OAAO,0CAA0C,gEAAgE,6BAA6B,8CAA8C,uCAAuC,eAAe,kFAAkF,uCAAuC,QAAQ,gDAAgD,gGAAgG,QAAQ,+CAA+C,8DAA8D,OAAO,+CAA+C,UAAU,4BAA4B,yHAAyH,OAAO,8BAA8B,QAAQ,sDAAsD,0CAA0C,yDAAyD,yDAAyD,oDAAoD,aAAa,yFAAyF,OAAO,6BAA6B,QAAQ,yDAAyD,4DAA4D,aAAa,0EAA0E,eAAe,mDAAmD,4CAA4C,aAAa,yFAAyF,eAAe,qCAAqC,OAAO,qEAAqE,+JAA+J,aAAa,wEAAwE,OAAO,6BAA6B,OAAO,iEAAiE,0CAA0C,kCAAkC,gCAAgC,aAAa,yHAAyH,OAAO,6BAA6B,QAAQ,8BAA8B,OAAO,gEAAgE,0CAA0C,uCAAuC,6CAA6C,gEAAgE,4CAA4C,8DAA8D,iBAAiB,0EAA0E,aAAa,yHAAyH,OAAO,8BAA8B,QAAQ,8BAA8B,OAAO,iEAAiE,0CAA0C,uCAAuC,gEAAgE,4CAA4C,8DAA8D,iBAAiB,4EAA4E,6CAA6C,aAAa,2FAA2F,eAAe,8BAA8B,QAAQ,8BAA8B,OAAO,sEAAsE,oFAAoF,0CAA0C,eAAe,sEAAsE,qDAAqD,gDAAgD,oCAAoC,mCAAmC,kBAAkB,OAAO,iDAAiD,qBAAqB,uCAAuC,qDAAqD,qBAAqB,kCAAkC,iBAAiB,sBAAsB,qFAAqF,iBAAiB,aAAa,oHAAoH,eAAe,yDAAyD,iFAAiF,aAAa,qNAAqN,MAAM,yGAAyG,8CAA8C,+BAA+B,6CAA6C,sCAAsC,oCAAoC,uCAAuC,iCAAiC,SAAS,OAAO,0JAA0J,iBAAiB,6BAA6B,aAAa,0EAA0E,OAAO,sDAAsD,8CAA8C,wDAAwD,kFAAkF,kGAAkG,qEAAqE,8CAA8C,aAAa,wFAAwF,OAAO,0DAA0D,wDAAwD,qCAAqC,+CAA+C,qEAAqE,8DAA8D,6EAA6E,2EAA2E,qBAAqB,gDAAgD,yWAAyW,qBAAqB,wDAAwD,iBAAiB,qCAAqC,aAAa,YAAY,gCAAgC,aAAa,oEAAoE,4DAA4D,qDAAqD,iCAAiC,iCAAiC,6CAA6C,kDAAkD,4CAA4C,iDAAiD,4BAA4B,qNAAqN,uCAAuC,uCAAuC,qCAAqC,qCAAqC,qCAAqC,mDAAmD,8BAA8B,4BAA4B,qBAAqB,0CAA0C,+DAA+D,aAAa,kBAAkB,uDAAuD,mDAAmD,uEAAuE,iBAAiB,0DAA0D,+BAA+B,sSAAsS,qBAAqB,yCAAyC,iBAAiB,4EAA4E,4EAA4E,iHAAiH,aAAa,i6BAAi6B,0JAA0J,aAAa,8BAA8B,wKAAwK,aAAa,sCAAsC,wCAAwC,aAAa,oCAAoC,wCAAwC,aAAa,6DAA6D,2DAA2D,qEAAqE,6FAA6F,2GAA2G,4BAA4B,iBAAiB,4GAA4G,4BAA4B,iBAAiB,aAAa,gCAAgC,UAAU,gEAAgE,iEAAiE,gDAAgD,gDAAgD,uDAAuD,yCAAyC,kDAAkD,aAAa,oDAAoD,8BAA8B,4MAA4M,EAAE,uWAAuW,mCAAmC,iEAAiE,aAAa,UAAU,gCAAgC,2BAA2B,yBAAyB,OAAO,gEAAgE,uBAAuB,8EAA8E,qDAAqD,2BAA2B,mCAAmC,0NAA0N,oFAAoF,6KAA6K,iBAAiB,aAAa,UAAU,kHAAkH,oDAAoD,oCAAoC,oCAAoC,mEAAmE,UAAU,gCAAgC,eAAe,uDAAuD,eAAe,0BAA0B,OAAO,wBAAwB,QAAQ,qCAAqC,OAAO,4GAA4G,8GAA8G,sCAAsC,6CAA6C,2BAA2B,qCAAqC,uHAAuH,aAAa,6BAA6B,uBAAuB,aAAa,8CAA8C,6HAA6H,gEAAgE,4GAA4G,0CAA0C,sDAAsD,iBAAiB,uDAAuD,8DAA8D,+CAA+C,8FAA8F,iBAAiB,sBAAsB,mDAAmD,6EAA6E,iBAAiB,aAAa,sDAAsD,4BAA4B,aAAa,sDAAsD,UAAU,gCAAgC,OAAO,wBAAwB,SAAS,mCAAmC,eAAe,oFAAoF,mCAAmC,gDAAgD,yCAAyC,qDAAqD,kDAAkD,2CAA2C,6CAA6C,MAAM,2BAA2B,sBAAsB,iBAAiB,kBAAkB,iGAAiG,aAAa,4DAA4D,+DAA+D,0JAA0J,iBAAiB,QAAQ,aAAa,kBAAkB,8BAA8B,aAAa,UAAU,+DAA+D,iQAAiQ,UAAU,sCAAsC,aAAa,oEAAoE,kOAAkO,6CAA6C,2CAA2C,2CAA2C,2EAA2E,kCAAkC,8DAA8D,aAAa,sCAAsC,mLAAmL,aAAa,yCAAyC,wCAAwC,0GAA0G,aAAa,qGAAqG,cAAc,8BAA8B,OAAO,sDAAsD,wEAAwE,aAAa,sCAAsC,oEAAoE,aAAa,0CAA0C,MAAM,kDAAkD,+BAA+B,0CAA0C,qCAAqC,6CAA6C,qCAAqC,2BAA2B,iBAAiB,+BAA+B,aAAa,0EAA0E,OAAO,0BAA0B,OAAO,mDAAmD,qCAAqC,aAAa,0CAA0C,OAAO,+CAA+C,6DAA6D,aAAa,gHAAgH,iEAAiE,aAAa,kFAAkF,EAAE,iCAAiC,0BAA0B,sDAAsD,sCAAsC,UAAU,wCAAwC,aAAa,oEAAoE,sIAAsI,gCAAgC,OAAO,sDAAsD,0CAA0C,4DAA4D,eAAe,yFAAyF,wFAAwF,eAAe,uEAAuE,4DAA4D,SAAS,2CAA2C,iFAAiF,EAAE,wBAAwB,OAAO,sDAAsD,oTAAoT,UAAU,mDAAmD,uCAAuC,UAAU,+CAA+C,sCAAsC,wDAAwD,UAAU,2GAA2G,OAAO,wBAAwB,OAAO,0DAA0D,sCAAsC,0CAA0C,2BAA2B,aAAa,+DAA+D,UAAU,iEAAiE,OAAO,wBAAwB,OAAO,sDAAsD,sCAAsC,6DAA6D,UAAU,+DAA+D,eAAe,oEAAoE,sCAAsC,2DAA2D,2DAA2D,gIAAgI,UAAU,+DAA+D,yBAAyB,wBAAwB,OAAO,8EAA8E,4DAA4D,UAAU,sDAAsD,eAAe,uDAAuD,wCAAwC,UAAU,qDAAqD,OAAO,yBAAyB,OAAO,qEAAqE,0CAA0C,gCAAgC,sCAAsC,aAAa,8BAA8B,oCAAoC,aAAa,UAAU,iCAAiC,eAAe,4DAA4D,4BAA4B,wCAAwC,2BAA2B,kBAAkB,OAAO,qDAAqD,aAAa,0BAA0B,UAAU,mMAAmM,iCAAiC,SAAS,4MAA4M,oCAAoC,UAAU,+CAA+C,gDAAgD,6CAA6C,EAAE,iCAAiC,aAAa,oEAAoE,gIAAgI,gDAAgD,6CAA6C,8CAA8C,6CAA6C,8IAA8I,8IAA8I,8CAA8C,+FAA+F,sDAAsD,iBAAiB,kCAAkC,oDAAoD,iBAAiB,aAAa,8CAA8C,0CAA0C,+DAA+D,+DAA+D,kJAAkJ,aAAa,gGAAgG,sCAAsC,aAAa,0GAA0G,0CAA0C,qOAAqO,kFAAkF,aAAa,0CAA0C,eAAe,kDAAkD,iKAAiK,aAAa,0CAA0C,eAAe,wDAAwD,gCAAgC,4CAA4C,+BAA+B,kBAAkB,OAAO,yDAAyD,iBAAiB,8BAA8B,aAAa,yCAAyC,OAAO,4BAA4B,OAAO,6BAA6B,cAAc,sEAAsE,QAAQ,8EAA8E,OAAO,2DAA2D,mCAAmC,8BAA8B,iBAAiB,uDAAuD,0CAA0C,uEAAuE,iBAAiB,gDAAgD,gHAAgH,iBAAiB,6OAA6O,oDAAoD,aAAa,4HAA4H,OAAO,iEAAiE,OAAO,yFAAyF,+CAA+C,0CAA0C,iDAAiD,sCAAsC,2BAA2B,iBAAiB,oJAAoJ,iCAAiC,qCAAqC,iBAAiB,+FAA+F,qEAAqE,iDAAiD,yDAAyD,aAAa,oEAAoE,OAAO,2BAA2B,OAAO,sEAAsE,QAAQ,0CAA0C,QAAQ,0CAA0C,QAAQ,+EAA+E,0CAA0C,8GAA8G,0CAA0C,2FAA2F,6YAA6Y,wDAAwD,wDAAwD,yBAAyB,8BAA8B,wDAAwD,yBAAyB,qBAAqB,0BAA0B,sCAAsC,qBAAqB,iBAAiB,iDAAiD,kHAAkH,kCAAkC,kCAAkC,iBAAiB,mEAAmE,+CAA+C,8CAA8C,oCAAoC,yFAAyF,iBAAiB,kCAAkC,wFAAwF,iBAAiB,aAAa,SAAS,EAAE,iCAAiC,0BAA0B,uDAAuD,uCAAuC,UAAU,yCAAyC,eAAe,oEAAoE,wFAAwF,6CAA6C,0BAA0B,gCAAgC,eAAe,yJAAyJ,OAAO,2DAA2D,OAAO,kCAAkC,OAAO,EAAE,4CAA4C,gGAAgG,4BAA4B,6CAA6C,yFAAyF,gEAAgE,yDAAyD,aAAa,sIAAsI,gSAAgS,uDAAuD,4BAA4B,UAAU,gCAAgC,OAAO,6BAA6B,OAAO,yFAAyF,sGAAsG,UAAU,uDAAuD,gGAAgG,SAAS,uJAAuJ,4EAA4E,4EAA4E,6CAA6C,6CAA6C,wDAAwD,sDAAsD,aAAa,UAAU,yGAAyG,2BAA2B,6CAA6C,4BAA4B,6BAA6B,aAAa,6GAA6G,kDAAkD,sCAAsC,aAAa,yCAAyC,iDAAiD,iCAAiC,8GAA8G,uDAAuD,4JAA4J,iBAAiB,+CAA+C,8BAA8B,iBAAiB,aAAa,yOAAyO,sCAAsC,aAAa,2BAA2B,UAAU,kCAAkC,aAAa,oEAAoE,+uBAA+uB,gDAAgD,gDAAgD,mDAAmD,uDAAuD,2DAA2D,mCAAmC,mCAAmC,8BAA8B,yCAAyC,uCAAuC,oCAAoC,oEAAoE,6BAA6B,wCAAwC,oCAAoC,iCAAiC,iBAAiB,sBAAsB,8BAA8B,iBAAiB,aAAa,sBAAsB,UAAU,8IAA8I,uHAAuH,4CAA4C,2CAA2C,4FAA4F,aAAa,iGAAiG,0CAA0C,8GAA8G,6EAA6E,yCAAyC,iBAAiB,oJAAoJ,uCAAuC,qFAAqF,oDAAoD,iBAAiB,kDAAkD,+CAA+C,8CAA8C,oCAAoC,6FAA6F,iBAAiB,kCAAkC,4FAA4F,iBAAiB,aAAa,0GAA0G,mIAAmI,oDAAoD,4CAA4C,iDAAiD,0DAA0D,wDAAwD,iFAAiF,6EAA6E,wCAAwC,wHAAwH,mDAAmD,0JAA0J,mFAAmF,2CAA2C,iBAAiB,iRAAiR,4DAA4D,wCAAwC,8FAA8F,8CAA8C,aAAa,sCAAsC,wFAAwF,aAAa,SAAS,EAAE,uEAAuE,8DAA8D,kFAAkF,cAAc,SAAS,EAAE,80CAA80C,gCAAgC,2BAA2B,oBAAoB,0BAA0B,wDAAwD,kCAAkC,oCAAoC,EAAE,UAAU,qCAAqC,aAAa,oEAAoE,gHAAgH,6CAA6C,gDAAgD,kGAAkG,2CAA2C,yDAAyD,6DAA6D,gDAAgD,qCAAqC,iCAAiC,+BAA+B,iCAAiC,uCAAuC,0FAA0F,6CAA6C,0DAA0D,aAAa,0CAA0C,eAAe,kDAAkD,wDAAwD,0CAA0C,+DAA+D,4FAA4F,2EAA2E,kNAAkN,gLAAgL,oCAAoC,iBAAiB,QAAQ,aAAa,yCAAyC,OAAO,4BAA4B,OAAO,0GAA0G,OAAO,4BAA4B,OAAO,kDAAkD,uDAAuD,+CAA+C,aAAa,yCAAyC,OAAO,6BAA6B,OAAO,iEAAiE,qCAAqC,uDAAuD,mDAAmD,oEAAoE,aAAa,0CAA0C,OAAO,uDAAuD,qCAAqC,6DAA6D,qDAAqD,qDAAqD,sFAAsF,+DAA+D,uGAAuG,uGAAuG,gCAAgC,aAAa,0CAA0C,eAAe,kEAAkE,wDAAwD,uCAAuC,+DAA+D,+DAA+D,0DAA0D,aAAa,gHAAgH,+EAA+E,mCAAmC,iBAAiB,GAAG,aAAa,+GAA+G,OAAO,8GAA8G,oDAAoD,0CAA0C,iDAAiD,qDAAqD,2BAA2B,iBAAiB,2DAA2D,0DAA0D,sGAAsG,mCAAmC,iBAAiB,6IAA6I,mCAAmC,iBAAiB,sNAAsN,4CAA4C,8CAA8C,aAAa,4HAA4H,8DAA8D,0DAA0D,oDAAoD,oDAAoD,aAAa,WAAW,EAAE,uEAAuE,6DAA6D,wDAAwD,8DAA8D,cAAc,SAAS,EAAE,yCAAyC,kCAAkC,UAAU,uDAAuD,wEAAwE,SAAS,oCAAoC,aAAa,oEAAoE,mEAAmE,kDAAkD,kDAAkD,4DAA4D,4CAA4C,0CAA0C,4BAA4B,8GAA8G,2BAA2B,oCAAoC,yBAAyB,oEAAoE,mDAAmD,mFAAmF,aAAa,uCAAuC,8CAA8C,uSAAuS,OAAO,kCAAkC,OAAO,yBAAyB,OAAO,yBAAyB,OAAO,yBAAyB,OAAO,yBAAyB,OAAO,0IAA0I,eAAe,kCAAkC,4BAA4B,8EAA8E,uCAAuC,iDAAiD,kDAAkD,gEAAgE,iBAAiB,uEAAuE,8DAA8D,+DAA+D,6BAA6B,aAAa,ugBAAugB,wDAAwD,aAAa,UAAU,aAAa,oEAAoE,mBAAmB,+CAA+C,0DAA0D,4CAA4C,+CAA+C,uDAAuD,0DAA0D,wDAAwD,2CAA2C,sBAAsB,wDAAwD,oBAAoB,aAAa,2BAA2B,SAAS,kDAAkD,oDAAoD,sGAAsG,SAAS,sJAAsJ,iEAAiE,yBAAyB,4CAA4C,qDAAqD,iBAAiB,aAAa,qEAAqE,iDAAiD,wEAAwE,kCAAkC,yHAAyH,gHAAgH,6DAA6D,8BAA8B,gVAAgV,kFAAkF,aAAa,yEAAyE,2DAA2D,4DAA4D,kCAAkC,4JAA4J,gDAAgD,YAAY,8DAA8D,kDAAkD,qBAAqB,0PAA0P,iBAAiB,oEAAoE,0DAA0D,8FAA8F,gDAAgD,YAAY,8DAA8D,kDAAkD,qBAAqB,uFAAuF,4EAA4E,oHAAoH,sMAAsM,2EAA2E,yDAAyD,4HAA4H,6BAA6B,yBAAyB,qBAAqB,+BAA+B,kBAAkB,yCAAyC,0DAA0D,0BAA0B,SAAS,0CAA0C,kEAAkE,SAAS,+CAA+C,4JAA4J,SAAS,0FAA0F,kFAAkF,mFAAmF,oDAAoD,mLAAmL,KAAK,iBAAiB,EAAE,+CAA+C,+CAA+C,6BAA6B,sCAAsC,+PAA+P,qBAAqB,sCAAsC,+PAA+P,qBAAqB,iBAAiB,yDAAyD,uDAAuD,yDAAyD,0KAA0K,sBAAsB,yNAAyN,kBAAkB,iEAAiE,+DAA+D,oFAAoF,8CAA8C,sCAAsC,sDAAsD,iBAAiB,sCAAsC,sDAAsD,iBAAiB,wBAAwB,2MAA2M,aAAa,kFAAkF,iEAAiE,iLAAiL,KAAK,6BAA6B,2CAA2C,2EAA2E,qBAAqB,iBAAiB,mEAAmE,+DAA+D,qCAAqC,yKAAyK,EAAE,oFAAoF,8CAA8C,iCAAiC,gEAAgE,iBAAiB,0BAA0B,8KAA8K,aAAa,6EAA6E,0DAA0D,kKAAkK,KAAK,6EAA6E,6EAA6E,6BAA6B,0CAA0C,sEAAsE,qBAAqB,2CAA2C,uEAAuE,qBAAqB,iBAAiB,mEAAmE,+DAA+D,yDAAyD,yLAAyL,sBAAsB,sLAAsL,kBAAkB,uEAAuE,yEAAyE,oFAAoF,8CAA8C,2CAA2C,gEAAgE,iBAAiB,0CAA0C,8DAA8D,iBAAiB,wBAAwB,oNAAoN,aAAa,2EAA2E,yFAAyF,6EAA6E,YAAY,0BAA0B,YAAY,8DAA8D,aAAa,UAAU,iDAAiD,8BAA8B,kFAAkF,kCAAkC,8BAA8B,gFAAgF,aAAa,sCAAsC,6GAA6G,iCAAiC,8CAA8C,+QAA+Q,sCAAsC,uCAAuC,aAAa,OAAO,yFAAyF,yBAAyB,qBAAqB,0BAA0B,uDAAuD,qBAAqB,iBAAiB,aAAa,8BAA8B,SAAS,+CAA+C,eAAe,oEAAoE,qHAAqH,+CAA+C,+BAA+B,uCAAuC,uCAAuC,0DAA0D,4BAA4B,mCAAmC,2RAA2R,eAAe,8MAA8M,YAAY,yDAAyD,MAAM,2DAA2D,OAAO,yBAAyB,sBAAsB,sGAAsG,WAAW,0BAA0B,OAAO,uCAAuC,2CAA2C,mBAAmB,OAAO,sFAAsF,OAAO,8TAA8T,OAAO,mFAAmF,eAAe,GAAG,iPAAiP,wGAAwG,oGAAoG,qEAAqE,8BAA8B,4BAA4B,8CAA8C,sDAAsD,gEAAgE,wDAAwD,yDAAyD,kCAAkC,4BAA4B,0CAA0C,mCAAmC,oDAAoD,4LAA4L,qDAAqD,+DAA+D,mGAAmG,iBAAiB,EAAE,aAAa,wGAAwG,cAAc,OAAO,yDAAyD,iBAAiB,oBAAoB,EAAE,kDAAkD,8CAA8C,eAAe,4JAA4J,yRAAyR,uDAAuD,iBAAiB,+EAA+E,aAAa,uJAAuJ,uFAAuF,uEAAuE,uKAAuK,0EAA0E,+DAA+D,gFAAgF,qBAAqB,iBAAiB,EAAE,aAAa,EAAE,kGAAkG,8DAA8D,6BAA6B,+BAA+B,sCAAsC,wCAAwC,2CAA2C,0CAA0C,oCAAoC,iBAAiB,sBAAsB,+CAA+C,0DAA0D,6HAA6H,+DAA+D,+JAA+J,iBAAiB,2EAA2E,oGAAoG,mCAAmC,0DAA0D,OAAO,qGAAqG,0CAA0C,yBAAyB,oFAAoF,qBAAqB,iBAAiB,0GAA0G,0DAA0D,wFAAwF,uEAAuE,oGAAoG,qBAAqB,+FAA+F,iBAAiB,EAAE,aAAa,EAAE,6GAA6G,2GAA2G,yBAAyB,kBAAkB,mFAAmF,mDAAmD,yPAAyP,qKAAqK,kIAAkI,aAAa,4BAA4B,sEAAsE,2CAA2C,mEAAmE,iBAAiB,sBAAsB,mDAAmD,6DAA6D,wDAAwD,iBAAiB,aAAa,qDAAqD,wDAAwD,8BAA8B,uDAAuD,4BAA4B,qBAAqB,8BAA8B,iBAAiB,oCAAoC,4BAA4B,aAAa,SAAS,iNAAiN,8CAA8C,SAAS,OAAO,mDAAmD,+CAA+C,iCAAiC,iBAAiB,8CAA8C,6IAA6I,iCAAiC,iBAAiB,4DAA4D,gCAAgC,iBAAiB,aAAa,yBAAyB,UAAU,qCAAqC,2EAA2E,SAAS,8CAA8C,eAAe,oEAAoE,mBAAmB,uEAAuE,kDAAkD,8GAA8G,iDAAiD,2GAA2G,gDAAgD,kCAAkC,kCAAkC,4CAA4C,8CAA8C,6CAA6C,qDAAqD,qDAAqD,iCAAiC,aAAa,SAAS,EAAE,0GAA0G,gDAAgD,2GAA2G,gDAAgD,kCAAkC,kCAAkC,4CAA4C,8CAA8C,6CAA6C,4CAA4C,6CAA6C,4CAA4C,iCAAiC,aAAa,SAAS,EAAE,oGAAoG,4CAA4C,4IAA4I,kDAAkD,gCAAgC,gCAAgC,4CAA4C,qGAAqG,8BAA8B,4GAA4G,wCAAwC,8CAA8C,8GAA8G,6CAA6C,2CAA2C,qJAAqJ,sCAAsC,qCAAqC,iLAAiL,4LAA4L,iCAAiC,aAAa,SAAS,EAAE,wGAAwG,kDAAkD,yGAAyG,iDAAiD,0CAA0C,wCAAwC,gCAAgC,gCAAgC,uCAAuC,iCAAiC,+CAA+C,kDAAkD,+CAA+C,iCAAiC,gCAAgC,aAAa,SAAS,EAAE,iEAAiE,6CAA6C,sCAAsC,ySAAyS,mCAAmC,kDAAkD,qDAAqD,qCAAqC,iCAAiC,qCAAqC,aAAa,mDAAmD,4BAA4B,4BAA4B,gCAAgC,iCAAiC,aAAa,wDAAwD,4BAA4B,4BAA4B,gCAAgC,iCAAiC,6CAA6C,aAAa,qDAAqD,0CAA0C,4BAA4B,4BAA4B,mCAAmC,oCAAoC,aAAa,qDAAqD,0FAA0F,qCAAqC,6CAA6C,aAAa,sDAAsD,qCAAqC,qCAAqC,gCAAgC,iCAAiC,aAAa,kDAAkD,oCAAoC,oCAAoC,gCAAgC,iCAAiC,aAAa,oDAAoD,oCAAoC,oCAAoC,gCAAgC,iCAAiC,aAAa,uDAAuD,qCAAqC,qCAAqC,gCAAgC,iCAAiC,aAAa,UAAU,sCAAsC,uCAAuC,mDAAmD,mEAAmE,aAAa,SAAS,4CAA4C,mDAAmD,wIAAwI,yCAAyC,uCAAuC,uCAAuC,4GAA4G,wDAAwD,+CAA+C,uDAAuD,iBAAiB,aAAa,2DAA2D,kDAAkD,iEAAiE,kDAAkD,uCAAuC,mFAAmF,qEAAqE,qBAAqB,8JAA8J,4EAA4E,iBAAiB,aAAa,SAAS,EAAE,mJAAmJ,wCAAwC,6CAA6C,6CAA6C,uEAAuE,+CAA+C,iBAAiB,+CAA+C,+CAA+C,8CAA8C,iBAAiB,sBAAsB,6HAA6H,uEAAuE,iBAAiB,kCAAkC,aAAa,UAAU,4BAA4B,+IAA+I,OAAO,kCAAkC,OAAO,yBAAyB,OAAO,yBAAyB,OAAO,yBAAyB,OAAO,yBAAyB,OAAO,yFAAyF,6HAA6H,8BAA8B,8FAA8F,iBAAiB,+BAA+B,6DAA6D,oDAAoD,gCAAgC,4NAA4N,qBAAqB,EAAE,iBAAiB,+DAA+D,yEAAyE,gCAAgC,iBAAiB,sBAAsB,6CAA6C,gCAAgC,wNAAwN,qBAAqB,EAAE,iBAAiB,sDAAsD,2DAA2D,6CAA6C,oCAAoC,aAAa,UAAU,sCAAsC,aAAa,oEAAoE,oDAAoD,kDAAkD,iCAAiC,4DAA4D,iCAAiC,aAAa,kBAAkB,gCAAgC,aAAa,SAAS,4BAA4B,qEAAqE,eAAe,4DAA4D,wJAAwJ,aAAa,sGAAsG,mHAAmH,aAAa,yCAAyC,QAAQ,+BAA+B,cAAc,mHAAmH,yCAAyC,qHAAqH,4FAA4F,qDAAqD,iBAAiB,2BAA2B,aAAa,yCAAyC,QAAQ,+BAA+B,cAAc,mHAAmH,yCAAyC,iHAAiH,4FAA4F,qDAAqD,iBAAiB,2BAA2B,aAAa,0CAA0C,QAAQ,0DAA0D,yCAAyC,yHAAyH,aAAa,+GAA+G,+BAA+B,yHAAyH,OAAO,sFAAsF,OAAO,mIAAmI,oDAAoD,gDAAgD,aAAa,gGAAgG,4HAA4H,aAAa,UAAU,aAAa,oEAAoE,oDAAoD,6CAA6C,wCAAwC,mCAAmC,iCAAiC,uHAAuH,mGAAmG,yKAAyK,gGAAgG,aAAa,oEAAoE,mBAAmB,+DAA+D,kDAAkD,+CAA+C,0IAA0I,2BAA2B,2DAA2D,6EAA6E,yGAAyG,qBAAqB,iBAAiB,uEAAuE,aAAa,+BAA+B,kfAAkf,6BAA6B,4DAA4D,iBAAiB,gCAAgC,iCAAiC,oCAAoC,oBAAoB,6BAA6B,6BAA6B,2FAA2F,iBAAiB,iCAAiC,m2BAAm2B,SAAS,EAAE,aAAa,oEAAoE,mBAAmB,mFAAmF,kDAAkD,8CAA8C,yDAAyD,8CAA8C,+CAA+C,kDAAkD,gDAAgD,mDAAmD,oDAAoD,uBAAuB,aAAa,2BAA2B,oBAAoB,OAAO,oCAAoC,oCAAoC,yDAAyD,2BAA2B,iBAAiB,aAAa,wBAAwB,SAAS,sCAAsC,8EAA8E,SAAS,+CAA+C,gDAAgD,8BAA8B,uIAAuI,yDAAyD,iDAAiD,iDAAiD,aAAa,0BAA0B,SAAS,8BAA8B,qCAAqC,SAAS,8BAA8B,4EAA4E,4BAA4B,yBAAyB,wBAAwB,uBAAuB,0FAA0F,kDAAkD,4DAA4D,iGAAiG,2CAA2C,qFAAqF,oEAAoE,sCAAsC,+CAA+C,oLAAoL,kDAAkD,0BAA0B,iBAAiB,qCAAqC,0EAA0E,iJAAiJ,2DAA2D,aAAa,QAAQ,SAAS,8EAA8E,uEAAuE,uEAAuE,sEAAsE,uDAAuD,qDAAqD,6DAA6D,8DAA8D,2EAA2E,sLAAsL,+BAA+B,gCAAgC,yCAAyC,aAAa,kBAAkB,gCAAgC,wCAAwC,aAAa,+CAA+C,wBAAwB,sIAAsI,aAAa,EAAE,iCAAiC,sEAAsE,6CAA6C,4BAA4B,gGAAgG,iBAAiB,eAAe,aAAa,8BAA8B,SAAS,2EAA2E,iDAAiD,mDAAmD,wDAAwD,oDAAoD,yCAAyC,iDAAiD,wBAAwB,kUAAkU,aAAa,EAAE,iCAAiC,mEAAmE,6CAA6C,4BAA4B,+EAA+E,iBAAiB,eAAe,aAAa,8BAA8B,SAAS,yEAAyE,kMAAkM,SAAS,qEAAqE,kDAAkD,sFAAsF,kCAAkC,2BAA2B,uBAAuB,OAAO,2CAA2C,mCAAmC,oCAAoC,kCAAkC,qCAAqC,6FAA6F,kEAAkE,2FAA2F,8BAA8B,0JAA0J,yCAAyC,wEAAwE,kEAAkE,uEAAuE,gDAAgD,iDAAiD,8BAA8B,sFAAsF,sEAAsE,2FAA2F,iBAAiB,aAAa,8EAA8E,8BAA8B,SAAS,sDAAsD,8DAA8D,6EAA6E,uGAAuG,aAAa,6BAA6B,mDAAmD,QAAQ,OAAO,2FAA2F,mDAAmD,0BAA0B,iBAAiB,aAAa,iEAAiE,2BAA2B,4FAA4F,iBAAiB,uBAAuB,aAAa,khBAAkhB,qDAAqD,iDAAiD,wJAAwJ,wBAAwB,mIAAmI,aAAa,EAAE,4CAA4C,6DAA6D,mFAAmF,qCAAqC,sCAAsC,aAAa,kCAAkC,qFAAqF,sEAAsE,gDAAgD,qCAAqC,qCAAqC,aAAa,uDAAuD,kEAAkE,aAAa,EAAE,6BAA6B,0IAA0I,EAAE,gCAAgC,+KAA+K,EAAE,+DAA+D,uMAAuM,gBAAgB,EAAE,sFAAsF,yCAAyC,+CAA+C,8BAA8B,SAAS,6CAA6C,4DAA4D,oDAAoD,oDAAoD,iDAAiD,gDAAgD,4CAA4C,aAAa,6DAA6D,4DAA4D,uCAAuC,iDAAiD,8EAA8E,8EAA8E,uEAAuE,kEAAkE,kDAAkD,oDAAoD,8CAA8C,4CAA4C,kDAAkD,kEAAkE,8DAA8D,yEAAyE,iEAAiE,2KAA2K,sFAAsF,yEAAyE,oCAAoC,yCAAyC,4DAA4D,qBAAqB,iBAAiB,EAAE,qHAAqH,wCAAwC,iBAAiB,uCAAuC,wHAAwH,4MAA4M,8EAA8E,iCAAiC,yIAAyI,8FAA8F,qBAAqB,mFAAmF,sCAAsC,mLAAmL,qBAAqB,wFAAwF,iBAAiB,sBAAsB,kDAAkD,mOAAmO,qBAAqB,uDAAuD,oGAAoG,uDAAuD,qBAAqB,iIAAiI,uNAAuN,2KAA2K,+CAA+C,qBAAqB,EAAE,qVAAqV,2CAA2C,0JAA0J,yBAAyB,8BAA8B,wGAAwG,yJAAyJ,sGAAsG,6BAA6B,iDAAiD,2EAA2E,EAAE,yDAAyD,4IAA4I,EAAE,yBAAyB,qBAAqB,iBAAiB,iGAAiG,8KAA8K,+IAA+I,mBAAmB,yDAAyD,8DAA8D,mCAAmC,2LAA2L,EAAE,gCAAgC,mDAAmD,4CAA4C,sIAAsI,6JAA6J,uBAAuB,sCAAsC,kEAAkE,mFAAmF,qBAAqB,wCAAwC,oQAAoQ,EAAE,iBAAiB,oCAAoC,kIAAkI,wDAAwD,sCAAsC,kCAAkC,aAAa,sCAAsC,yEAAyE,iDAAiD,wEAAwE,6FAA6F,kEAAkE,kCAAkC,uIAAuI,kCAAkC,2EAA2E,yBAAyB,6DAA6D,6CAA6C,oKAAoK,qEAAqE,6CAA6C,iEAAiE,0GAA0G,iDAAiD,qBAAqB,uCAAuC,iBAAiB,sBAAsB,0LAA0L,iBAAiB,aAAa,wEAAwE,iDAAiD,wEAAwE,0DAA0D,kEAAkE,iCAAiC,4CAA4C,mEAAmE,sDAAsD,yBAAyB,8BAA8B,8CAA8C,yBAAyB,qBAAqB,iBAAiB,sBAAsB,uQAAuQ,iBAAiB,aAAa,yCAAyC,+BAA+B,6BAA6B,uBAAuB,0FAA0F,8CAA8C,kFAAkF,qDAAqD,iBAAiB,sDAAsD,4BAA4B,2DAA2D,6EAA6E,EAAE,gDAAgD,4CAA4C,kCAAkC,aAAa,yCAAyC,+BAA+B,6BAA6B,uBAAuB,uCAAuC,uBAAuB,0GAA0G,4CAA4C,gFAAgF,oDAAoD,iBAAiB,oDAAoD,4BAA4B,oHAAoH,kDAAkD,EAAE,+CAA+C,0CAA0C,+BAA+B,aAAa,mHAAmH,yEAAyE,6IAA6I,kFAAkF,iBAAiB,aAAa,gLAAgL,8CAA8C,4CAA4C,iDAAiD,6MAA6M,6CAA6C,6DAA6D,qCAAqC,uDAAuD,2BAA2B,wIAAwI,iGAAiG,yEAAyE,2FAA2F,iBAAiB,iSAAiS,gDAAgD,iDAAiD,4BAA4B,yDAAyD,iBAAiB,eAAe,gCAAgC,sCAAsC,sHAAsH,EAAE,kDAAkD,gCAAgC,4HAA4H,qBAAqB,eAAe,iBAAiB,2CAA2C,6CAA6C,iCAAiC,uBAAuB,OAAO,gDAAgD,sCAAsC,2EAA2E,iCAAiC,kDAAkD,kIAAkI,EAAE,yBAAyB,qBAAqB,iBAAiB,wEAAwE,8DAA8D,uCAAuC,4BAA4B,OAAO,2DAA2D,mGAAmG,yBAAyB,qBAAqB,EAAE,iBAAiB,aAAa,2CAA2C,uCAAuC,yCAAyC,4CAA4C,8CAA8C,+IAA+I,oCAAoC,yCAAyC,4DAA4D,qBAAqB,iBAAiB,EAAE,wMAAwM,aAAa,SAAS,EAAE,aAAa,oEAAoE,gHAAgH,8CAA8C,+GAA+G,6BAA6B,iEAAiE,6CAA6C,sDAAsD,SAAS,qDAAqD,yDAAyD,gDAAgD,uFAAuF,uCAAuC,gBAAgB,wKAAwK,SAAS,wEAAwE,yBAAyB,wBAAwB,gBAAgB,sFAAsF,mCAAmC,6CAA6C,qCAAqC,gDAAgD,iCAAiC,mkBAAmkB,wEAAwE,2DAA2D,kEAAkE,iFAAiF,yDAAyD,gEAAgE,4CAA4C,qBAAqB,iBAAiB,oDAAoD,oEAAoE,2DAA2D,mEAAmE,+CAA+C,+BAA+B,qBAAqB,oCAAoC,gEAAgE,yDAAyD,qBAAqB,0BAA0B,uEAAuE,uDAAuD,oEAAoE,eAAe,qBAAqB,yEAAyE,8DAA8D,iBAAiB,4CAA4C,8DAA8D,kDAAkD,yCAAyC,qBAAqB,EAAE,iBAAiB,4BAA4B,gCAAgC,UAAU,sDAAsD,kCAAkC,uBAAuB,+FAA+F,wDAAwD,+CAA+C,iBAAiB,EAAE,aAAa,UAAU,+DAA+D,mCAAmC,kCAAkC,uBAAuB,sCAAsC,0DAA0D,gDAAgD,6CAA6C,yBAAyB,EAAE,qBAAqB,EAAE,iBAAiB,sBAAsB,sCAAsC,iBAAiB,aAAa,UAAU,sCAAsC,aAAa,oEAAoE,0GAA0G,kDAAkD,8CAA8C,gDAAgD,mDAAmD,6CAA6C,mEAAmE,+HAA+H,SAAS,yCAAyC,0DAA0D,SAAS,uDAAuD,mCAAmC,mBAAmB,yBAAyB,wBAAwB,OAAO,yBAAyB,6BAA6B,4DAA4D,qCAAqC,sDAAsD,SAAS,6CAA6C,wCAAwC,sCAAsC,SAAS,oFAAoF,uEAAuE,+CAA+C,yDAAyD,iIAAiI,kVAAkV,+BAA+B,gGAAgG,EAAE,8EAA8E,6CAA6C,wDAAwD,oBAAoB,0CAA0C,mCAAmC,UAAU,yDAAyD,QAAQ,yFAAyF,uDAAuD,UAAU,2GAA2G,mCAAmC,UAAU,sKAAsK,yCAAyC,UAAU,gGAAgG,gDAAgD,UAAU,8FAA8F,8CAA8C,UAAU,gCAAgC,OAAO,0BAA0B,OAAO,8DAA8D,6CAA6C,uCAAuC,6BAA6B,UAAU,2DAA2D,6CAA6C,6CAA6C,+DAA+D,UAAU,oEAAoE,yBAAyB,yBAAyB,OAAO,mFAAmF,gCAAgC,6EAA6E,6CAA6C,sDAAsD,oDAAoD,sEAAsE,aAAa,kBAAkB,iDAAiD,0CAA0C,iDAAiD,gEAAgE,oBAAoB,aAAa,mEAAmE,4CAA4C,UAAU,iGAAiG,gEAAgE,wDAAwD,4DAA4D,qFAAqF,6CAA6C,6CAA6C,yDAAyD,0EAA0E,qCAAqC,wDAAwD,EAAE,aAAa,gDAAgD,mEAAmE,2EAA2E,uEAAuE,uEAAuE,mEAAmE,6EAA6E,2EAA2E,qEAAqE,uDAAuD,uDAAuD,gOAAgO,4FAA4F,sEAAsE,oEAAoE,yEAAyE,8EAA8E,wEAAwE,6DAA6D,aAAa,kBAAkB,iDAAiD,kBAAkB,aAAa,6CAA6C,oFAAoF,iCAAiC,uNAAuN,aAAa,oEAAoE,2FAA2F,6CAA6C,+DAA+D,kCAAkC,0CAA0C,aAAa,iEAAiE,iIAAiI,6IAA6I,wIAAwI,qDAAqD,gDAAgD,+CAA+C,uEAAuE,6CAA6C,oDAAoD,oCAAoC,2NAA2N,qBAAqB,kBAAkB,2CAA2C,oCAAoC,yDAAyD,qBAAqB,kBAAkB,8LAA8L,aAAa,UAAU,+CAA+C,6CAA6C,sGAAsG,kFAAkF,6CAA6C,0CAA0C,yCAAyC,UAAU,iDAAiD,kCAAkC,aAAa,oEAAoE,4GAA4G,4CAA4C,+CAA+C,0BAA0B,sDAAsD,yBAAyB,uEAAuE,qCAAqC,wCAAwC,aAAa,kBAAkB,8FAA8F,6BAA6B,uPAAuP,mCAAmC,8BAA8B,UAAU,qIAAqI,oEAAoE,4DAA4D,yLAAyL,aAAa,kBAAkB,kCAAkC,aAAa,UAAU,kCAAkC,aAAa,+CAA+C,yEAAyE,6KAA6K,qCAAqC,SAAS,2DAA2D,kDAAkD,4DAA4D,iGAAiG,2CAA2C,mFAAmF,oCAAoC,2CAA2C,8CAA8C,oKAAoK,8CAA8C,sBAAsB,aAAa,iCAAiC,sEAAsE,yIAAyI,uDAAuD,SAAS,4DAA4D,0NAA0N,2BAA2B,8BAA8B,sBAAsB,OAAO,oDAAoD,wCAAwC,gBAAgB,8BAA8B,sBAAsB,OAAO,4CAA4C,sFAAsF,0DAA0D,oBAAoB,yBAAyB,4CAA4C,oBAAoB,gBAAgB,YAAY,+CAA+C,gCAAgC,wEAAwE,qCAAqC,mBAAmB,EAAE,iBAAiB,oDAAoD,qCAAqC,oCAAoC,EAAE,iBAAiB,yCAAyC,qCAAqC,mBAAmB,EAAE,iBAAiB,4BAA4B,gCAAgC,SAAS,oKAAoK,kDAAkD,iEAAiE,+DAA+D,sDAAsD,0FAA0F,kCAAkC,gCAAgC,mFAAmF,uCAAuC,8BAA8B,mCAAmC,gCAAgC,8CAA8C,2BAA2B,iBAAiB,OAAO,uCAAuC,sCAAsC,wNAAwN,yGAAyG,0EAA0E,oJAAoJ,uDAAuD,yBAAyB,mDAAmD,gDAAgD,mFAAmF,kFAAkF,8EAA8E,8BAA8B,4EAA4E,qPAAqP,8EAA8E,mJAAmJ,wEAAwE,oEAAoE,8BAA8B,4EAA4E,gEAAgE,yKAAyK,wEAAwE,qMAAqM,8EAA8E,iOAAiO,wDAAwD,yBAAyB,8BAA8B,+CAA+C,yBAAyB,iBAAiB,sEAAsE,0CAA0C,6DAA6D,iBAAiB,aAAa,qJAAqJ,qDAAqD,aAAa,EAAE,wCAAwC,sCAAsC,+CAA+C,6CAA6C,oCAAoC,2BAA2B,0BAA0B,OAAO,2CAA2C,sDAAsD,sDAAsD,sEAAsE,oEAAoE,gDAAgD,aAAa,sBAAsB,wPAAwP,UAAU,aAAa,oEAAoE,mFAAmF,2CAA2C,iCAAiC,+BAA+B,6CAA6C,+BAA+B,kDAAkD,qBAAqB,qBAAqB,mCAAmC,8CAA8C,SAAS,oKAAoK,4BAA4B,4BAA4B,2BAA2B,YAAY,OAAO,oCAAoC,+CAA+C,0BAA0B,iBAAiB,qCAAqC,uCAAuC,mCAAmC,iCAAiC,qBAAqB,0BAA0B,iBAAiB,sCAAsC,mEAAmE,mCAAmC,iBAAiB,sBAAsB,qCAAqC,gDAAgD,oDAAoD,2CAA2C,kIAAkI,+CAA+C,wDAAwD,6BAA6B,yBAAyB,iDAAiD,oDAAoD,oDAAoD,gGAAgG,2CAA2C,yBAAyB,8BAA8B,6IAA6I,0CAA0C,6BAA6B,wDAAwD,6CAA6C,2CAA2C,mFAAmF,yEAAyE,2EAA2E,2EAA2E,6BAA6B,kCAAkC,iEAAiE,iEAAiE,6BAA6B,0IAA0I,mFAAmF,yBAAyB,iGAAiG,qDAAqD,qDAAqD,qDAAqD,kMAAkM,oHAAoH,qBAAqB,0BAA0B,+CAA+C,qBAAqB,iBAAiB,gCAAgC,2BAA2B,aAAa,uBAAuB,SAAS,6DAA6D,6CAA6C,+CAA+C,mCAAmC,+BAA+B,mBAAmB,OAAO,uCAAuC,2CAA2C,kBAAkB,EAAE,2CAA2C,kBAAkB,EAAE,2CAA2C,kBAAkB,EAAE,2CAA2C,kBAAkB,EAAE,iBAAiB,aAAa,oBAAoB,yHAAyH,SAAS,4BAA4B,qCAAqC,gEAAgE,iNAAiN,2BAA2B,oFAAoF,qDAAqD,8CAA8C,gCAAgC,4CAA4C,kFAAkF,+CAA+C,2HAA2H,SAAS,SAAS,gEAAgE,sCAAsC,6BAA6B,yBAAyB,8BAA8B,SAAS,OAAO,0DAA0D,sCAAsC,6BAA6B,yBAAyB,qBAAqB,qCAAqC,oQAAoQ,qBAAqB,iBAAiB,aAAa,sCAAsC,+DAA+D,wWAAwW,qDAAqD,8CAA8C,gEAAgE,gCAAgC,4CAA4C,8DAA8D,8EAA8E,gGAAgG,+CAA+C,2HAA2H,SAAS,SAAS,gEAAgE,sCAAsC,6BAA6B,yBAAyB,8BAA8B,SAAS,OAAO,0DAA0D,sCAAsC,6BAA6B,yBAAyB,qBAAqB,qCAAqC,yPAAyP,4RAA4R,mCAAmC,0CAA0C,qBAAqB,iBAAiB,aAAa,WAAW,aAAa,+CAA+C,uGAAuG,wKAAwK,iDAAiD,kFAAkF,+DAA+D,kCAAkC,+JAA+J,EAAE,qIAAqI,2DAA2D,kDAAkD,wEAAwE,4GAA4G,gGAAgG,yBAAyB,EAAE,qBAAqB,8CAA8C,+DAA+D,kFAAkF,sFAAsF,kGAAkG,8EAA8E,yBAAyB,qDAAqD,+IAA+I,yBAAyB,qBAAqB,EAAE,iBAAiB,aAAa,EAAE,UAAU,aAAa,+CAA+C,iEAAiE,yEAAyE,iDAAiD,4DAA4D,kCAAkC,2BAA2B,iBAAiB,gCAAgC,oDAAoD,+BAA+B,sBAAsB,OAAO,wFAAwF,iBAAiB,0CAA0C,0DAA0D,iCAAiC,eAAe,gJAAgJ,qBAAqB,EAAE,iBAAiB,6CAA6C,0DAA0D,iCAAiC,eAAe,uNAAuN,qBAAqB,QAAQ,iBAAiB,aAAa,EAAE,UAAU,eAAe,+CAA+C,8BAA8B,uCAAuC,4BAA4B,8BAA8B,+BAA+B,kBAAkB,OAAO,2CAA2C,wCAAwC,gCAAgC,qBAAqB,iBAAiB,kGAAkG,aAAa,oCAAoC,4BAA4B,+BAA+B,kBAAkB,OAAO,0EAA0E,iBAAiB,2BAA2B,aAAa,oCAAoC,oCAAoC,+BAA+B,kBAAkB,OAAO,uDAAuD,iBAAiB,2BAA2B,aAAa,oCAAoC,mCAAmC,+BAA+B,kBAAkB,OAAO,uDAAuD,iBAAiB,2BAA2B,aAAa,gFAAgF,gCAAgC,aAAa,UAAU,sDAAsD,gDAAgD,UAAU,8DAA8D,yEAAyE,iDAAiD,2DAA2D,4DAA4D,2HAA2H,0DAA0D,oEAAoE,sDAAsD,8GAA8G,+DAA+D,mCAAmC,oCAAoC,2DAA2D,yDAAyD,yBAAyB,kEAAkE,+CAA+C,yBAAyB,sCAAsC,+JAA+J,sDAAsD,yBAAyB,qBAAqB,iBAAiB,aAAa,QAAQ,UAAU,aAAa,oEAAoE,mBAAmB,kDAAkD,4CAA4C,6CAA6C,mCAAmC,mCAAmC,2DAA2D,gFAAgF,uCAAuC,4CAA4C,qDAAqD,oHAAoH,2FAA2F,oHAAoH,GAAG,iBAAiB,aAAa,WAAW,EAAE,0DAA0D,wGAAwG,iCAAiC,aAAa,SAAS,EAAE,aAAa,oEAAoE,+IAA+I,+CAA+C,kDAAkD,8CAA8C,mDAAmD,8CAA8C,iCAAiC,2DAA2D,yDAAyD,0EAA0E,wKAAwK,8DAA8D,SAAS,4CAA4C,uCAAuC,wDAAwD,2EAA2E,qBAAqB,yBAAyB,2CAA2C,kCAAkC,mHAAmH,aAAa,2BAA2B,gBAAgB,aAAa,8CAA8C,2EAA2E,0HAA0H,iBAAiB,aAAa,wBAAwB,SAAS,kDAAkD,qCAAqC,4DAA4D,uEAAuE,uCAAuC,iDAAiD,wEAAwE,uCAAuC,uDAAuD,qEAAqE,uCAAuC,8CAA8C,sEAAsE,2DAA2D,qCAAqC,SAAS,yCAAyC,kCAAkC,8CAA8C,2CAA2C,8BAA8B,UAAU,sDAAsD,0CAA0C,qDAAqD,yDAAyD,iDAAiD,uCAAuC,mDAAmD,6CAA6C,uKAAuK,wCAAwC,yBAAyB,qBAAqB,iBAAiB,6BAA6B,aAAa,gDAAgD,0DAA0D,aAAa,EAAE,8CAA8C,0DAA0D,aAAa,EAAE,8EAA8E,0OAA0O,yCAAyC,iBAAiB,aAAa,EAAE,8CAA8C,8CAA8C,yCAAyC,iBAAiB,aAAa,EAAE,mLAAmL,UAAU,0DAA0D,yCAAyC,6BAA6B,4BAA4B,yFAAyF,mGAAmG,sGAAsG,EAAE,oCAAoC,4CAA4C,2BAA2B,wGAAwG,gDAAgD,8DAA8D,qEAAqE,6CAA6C,+EAA+E,4EAA4E,0EAA0E,0DAA0D,6EAA6E,6BAA6B,iEAAiE,4EAA4E,6BAA6B,yBAAyB,qBAAqB,iBAAiB,EAAE,+BAA+B,aAAa,qCAAqC,gDAAgD,2DAA2D,2FAA2F,mDAAmD,iEAAiE,sFAAsF,iBAAiB,EAAE,aAAa,UAAU,gCAAgC,OAAO,4BAA4B,QAAQ,mFAAmF,uDAAuD,uCAAuC,wCAAwC,0FAA0F,gEAAgE,sDAAsD,yBAAyB,qBAAqB,iBAAiB,+CAA+C,aAAa,UAAU,iCAAiC,kCAAkC,oDAAoD,0CAA0C,UAAU,wFAAwF,8CAA8C,oDAAoD,mCAAmC,iCAAiC,EAAE,6BAA6B,cAAc,gCAAgC,OAAO,4FAA4F,2DAA2D,8DAA8D,4CAA4C,aAAa,gDAAgD,mDAAmD,mDAAmD,aAAa,2IAA2I,sBAAsB,OAAO,0JAA0J,wCAAwC,iBAAiB,aAAa,UAAU,iDAAiD,4CAA4C,UAAU,mDAAmD,+BAA+B,iFAAiF,kEAAkE,yNAAyN,UAAU,mDAAmD,+BAA+B,mFAAmF,kEAAkE,wNAAwN,UAAU,4GAA4G,iDAAiD,iIAAiI,iIAAiI,6CAA6C,8CAA8C,0BAA0B,qBAAqB,gCAAgC,yDAAyD,gFAAgF,aAAa,gDAAgD,oGAAoG,aAAa,kCAAkC,oEAAoE,aAAa,kCAAkC,oEAAoE,aAAa,gEAAgE,sDAAsD,oCAAoC,oDAAoD,iBAAiB,aAAa,sBAAsB,kCAAkC,UAAU,mDAAmD,+BAA+B,8DAA8D,4CAA4C,wBAAwB,iDAAiD,aAAa,UAAU,oKAAoK,oCAAoC,+HAA+H,6BAA6B,qBAAqB,sBAAsB,cAAc,6BAA6B,uDAAuD,sGAAsG,yEAAyE,iDAAiD,gGAAgG,oCAAoC,uBAAuB,aAAa,sCAAsC,8FAA8F,8DAA8D,kEAAkE,yDAAyD,4CAA4C,gDAAgD,uDAAuD,qDAAqD,+CAA+C,6CAA6C,iBAAiB,QAAQ,aAAa,QAAQ,oDAAoD,kDAAkD,8EAA8E,+BAA+B,qBAAqB,mEAAmE,2CAA2C,yHAAyH,sGAAsG,iEAAiE,yFAAyF,6BAA6B,yBAAyB,qBAAqB,0BAA0B,yHAAyH,kGAAkG,iEAAiE,0FAA0F,6BAA6B,yBAAyB,qBAAqB,0DAA0D,8PAA8P,gEAAgE,6EAA6E,4DAA4D,qEAAqE,6FAA6F,8FAA8F,mFAAmF,+FAA+F,gDAAgD,oDAAoD,0CAA0C,kBAAkB,aAAa,UAAU,mFAAmF,4BAA4B,qGAAqG,mFAAmF,0DAA0D,aAAa,EAAE,uDAAuD,iDAAiD,0EAA0E,mDAAmD,mDAAmD,qLAAqL,+BAA+B,qBAAqB,0JAA0J,qDAAqD,uDAAuD,uDAAuD,iDAAiD,8DAA8D,8DAA8D,qBAAqB,iBAAiB,aAAa,QAAQ,6DAA6D,8EAA8E,8DAA8D,iBAAiB,EAAE,aAAa,UAAU,gCAAgC,OAAO,iEAAiE,OAAO,EAAE,4BAA4B,8DAA8D,8BAA8B,+BAA+B,+DAA+D,qIAAqI,iEAAiE,kFAAkF,sFAAsF,aAAa,EAAE,sBAAsB,0CAA0C,UAAU,gGAAgG,8CAA8C,8DAA8D,oHAAoH,6CAA6C,iBAAiB,oCAAoC,6DAA6D,kBAAkB,oFAAoF,6CAA6C,iBAAiB,oCAAoC,6DAA6D,kBAAkB,SAAS,6CAA6C,8FAA8F,8DAA8D,gFAAgF,6BAA6B,qCAAqC,iRAAiR,qBAAqB,iBAAiB,iCAAiC,aAAa,EAAE,SAAS,sFAAsF,yEAAyE,SAAS,iDAAiD,2BAA2B,qEAAqE,6DAA6D,0CAA0C,wKAAwK,oDAAoD,mCAAmC,aAAa,EAAE,qHAAqH,kDAAkD,2BAA2B,iBAAiB,wEAAwE,+CAA+C,+CAA+C,gEAAgE,6BAA6B,qCAAqC,8TAA8T,qBAAqB,0FAA0F,kFAAkF,qBAAqB,iBAAiB,wDAAwD,6JAA6J,aAAa,EAAE,2BAA2B,UAAU,gKAAgK,gEAAgE,gCAAgC,aAAa,oEAAoE,mBAAmB,gDAAgD,iDAAiD,sCAAsC,yCAAyC,SAAS,mCAAmC,gHAAgH,eAAe,mLAAmL,sCAAsC,qDAAqD,sJAAsJ,aAAa,wEAAwE,eAAe,8BAA8B,QAAQ,2DAA2D,8CAA8C,8CAA8C,qIAAqI,aAAa,uEAAuE,eAAe,6BAA6B,QAAQ,yDAAyD,2HAA2H,aAAa,iGAAiG,yBAAyB,4BAA4B,QAAQ,8BAA8B,MAAM,qKAAqK,kEAAkE,oDAAoD,iBAAiB,eAAe,aAAa,yCAAyC,eAAe,4BAA4B,QAAQ,sCAAsC,eAAe,gEAAgE,8CAA8C,8CAA8C,+LAA+L,aAAa,yCAAyC,eAAe,6BAA6B,QAAQ,sCAAsC,eAAe,iEAAiE,8CAA8C,8CAA8C,+LAA+L,aAAa,sEAAsE,sCAAsC,+DAA+D,kEAAkE,aAAa,YAAY,kDAAkD,uCAAuC,aAAa,oEAAoE,mBAAmB,6IAA6I,uCAAuC,mCAAmC,SAAS,wIAAwI,4BAA4B,iCAAiC,uCAAuC,OAAO,kDAAkD,UAAU,iCAAiC,qIAAqI,cAAc,4BAA4B,oCAAoC,oDAAoD,uCAAuC,aAAa,sEAAsE,4CAA4C,iDAAiD,sEAAsE,aAAa,mIAAmI,oDAAoD,6GAA6G,6DAA6D,qBAAqB,kBAAkB,aAAa,gEAAgE,oCAAoC,qDAAqD,mCAAmC,yCAAyC,0CAA0C,aAAa,yFAAyF,uCAAuC,4BAA4B,uCAAuC,wDAAwD,kEAAkE,aAAa,0FAA0F,uCAAuC,4BAA4B,uCAAuC,wDAAwD,kEAAkE,aAAa,4DAA4D,4CAA4C,gEAAgE,iCAAiC,oBAAoB,OAAO,yCAAyC,+CAA+C,6DAA6D,iBAAiB,gCAAgC,aAAa,UAAU,qCAAqC,aAAa,oEAAoE,oDAAoD,4CAA4C,wHAAwH,oCAAoC,mBAAmB,OAAO,uBAAuB,EAAE,yBAAyB,eAAe,+BAA+B,OAAO,4BAA4B,OAAO,iGAAiG,qDAAqD,iKAAiK,OAAO,2DAA2D,+MAA+M,UAAU,8BAA8B,4OAA4O,QAAQ,0GAA0G,yCAAyC,gFAAgF,6CAA6C,mEAAmE,aAAa,iOAAiO,QAAQ,8BAA8B,eAAe,4DAA4D,2CAA2C,oDAAoD,oDAAoD,wDAAwD,2BAA2B,aAAa,0CAA0C,yCAAyC,aAAa,mKAAmK,OAAO,6BAA6B,QAAQ,2DAA2D,+CAA+C,gEAAgE,+LAA+L,iBAAiB,aAAa,2GAA2G,mGAAmG,aAAa,kIAAkI,sFAAsF,SAAS,gLAAgL,sFAAsF,SAAS,0DAA0D,sCAAsC,kCAAkC,aAAa,oEAAoE,mBAAmB,+FAA+F,uDAAuD,kDAAkD,iJAAiJ,oCAAoC,gFAAgF,mSAAmS,WAAW,4CAA4C,YAAY,gJAAgJ,SAAS,EAAE,aAAa,oEAAoE,mBAAmB,yDAAyD,4CAA4C,wDAAwD,iDAAiD,6EAA6E,sCAAsC,6HAA6H,8DAA8D,kCAAkC,aAAa,+FAA+F,qEAAqE,kCAAkC,aAAa,+FAA+F,qEAAqE,kCAAkC,aAAa,kEAAkE,+BAA+B,0DAA0D,qDAAqD,iJAAiJ,KAAK,aAAa,WAAW,EAAE,iDAAiD,6HAA6H,SAAS,sEAAsE,6BAA6B,sJAAsJ,qEAAqE,mEAAmE,qCAAqC,aAAa,oEAAoE,2DAA2D,4CAA4C,qDAAqD,6CAA6C,oGAAoG,wEAAwE,OAAO,gEAAgE,+BAA+B,sCAAsC,SAAS,qCAAqC,OAAO,yIAAyI,2DAA2D,6CAA6C,kIAAkI,yDAAyD,8HAA8H,8DAA8D,gFAAgF,sEAAsE,4EAA4E,2CAA2C,6FAA6F,yBAAyB,qBAAqB,6GAA6G,sMAAsM,EAAE,aAAa,EAAE,+JAA+J,UAAU,aAAa,oEAAoE,oDAAoD,+BAA+B,qbAAqb,4GAA4G,4DAA4D,mOAAmO,wCAAwC,8BAA8B,6CAA6C,4JAA4J,iHAAiH,aAAa,6CAA6C,sPAAsP,6CAA6C,aAAa,gEAAgE,4XAA4X,iDAAiD,aAAa,2CAA2C,4IAA4I,mHAAmH,aAAa,4CAA4C,8IAA8I,6FAA6F,aAAa,UAAU,2CAA2C,qFAAqF,8CAA8C,yBAAyB,wCAAwC,6CAA6C,0JAA0J,gEAAgE,6CAA6C,SAAS,iBAAiB,wCAAwC,ymBAAymB,iBAAiB,0DAA0D,sFAAsF,aAAa,yCAAyC,wDAAwD,aAAa,4BAA4B,6IAA6I,aAAa,oEAAoE,mBAAmB,4DAA4D,mCAAmC,aAAa,oEAAoE,oDAAoD,8CAA8C,mDAAmD,gDAAgD,2DAA2D,wDAAwD,kDAAkD,uGAAuG,8EAA8E,2DAA2D,gEAAgE,+CAA+C,6EAA6E,gBAAgB,qCAAqC,YAAY,mDAAmD,oNAAoN,yCAAyC,qDAAqD,sDAAsD,kDAAkD,+CAA+C,2BAA2B,iBAAiB,+DAA+D,gFAAgF,uEAAuE,8EAA8E,8DAA8D,iEAAiE,wDAAwD,qFAAqF,qBAAqB,iBAAiB,QAAQ,oFAAoF,gGAAgG,aAAa,yCAAyC,yCAAyC,iCAAiC,yCAAyC,iCAAiC,gBAAgB,4HAA4H,0CAA0C,6CAA6C,2BAA2B,iBAAiB,uEAAuE,0EAA0E,6DAA6D,gFAAgF,sFAAsF,sEAAsE,uDAAuD,oCAAoC,qIAAqI,kDAAkD,8BAA8B,4BAA4B,+JAA+J,+BAA+B,wBAAwB,OAAO,gEAAgE,iCAAiC,qBAAqB,yEAAyE,yCAAyC,0CAA0C,2CAA2C,0CAA0C,6DAA6D,qBAAqB,0BAA0B,2CAA2C,0CAA0C,4DAA4D,0CAA0C,qBAAqB,yEAAyE,uFAAuF,mFAAmF,gLAAgL,iDAAiD,mFAAmF,sEAAsE,IAAI,iBAAiB,aAAa,yCAAyC,yCAAyC,iCAAiC,yCAAyC,iCAAiC,gBAAgB,4HAA4H,0CAA0C,6CAA6C,2BAA2B,iBAAiB,uEAAuE,0EAA0E,6DAA6D,sEAAsE,qIAAqI,kDAAkD,iEAAiE,+DAA+D,gCAAgC,gFAAgF,gEAAgE,oFAAoF,iCAAiC,wBAAwB,OAAO,gEAAgE,iCAAiC,qBAAqB,yEAAyE,4BAA4B,0BAA0B,8BAA8B,+BAA+B,8CAA8C,kCAAkC,uCAAuC,8CAA8C,iDAAiD,qBAAqB,0BAA0B,uCAAuC,kCAAkC,+CAA+C,+CAA+C,qBAAqB,qEAAqE,0DAA0D,mFAAmF,8KAA8K,iDAAiD,iFAAiF,sEAAsE,GAAG,wCAAwC,uCAAuC,iBAAiB,aAAa,SAAS,EAAE,oCAAoC,kCAAkC,EAAE,kCAAkC,kCAAkC,EAAE,eAAe,oEAAoE,oDAAoD,gDAAgD,8CAA8C,4CAA4C,gDAAgD,6CAA6C,+DAA+D,2CAA2C,6CAA6C,mDAAmD,uCAAuC,2BAA2B,qDAAqD,6BAA6B,+DAA+D,+EAA+E,6BAA6B,SAAS,0/BAA0/B,+BAA+B,yBAAyB,OAAO,6BAA6B,OAAO,iDAAiD,eAAe,uCAAuC,OAAO,0CAA0C,OAAO,qFAAqF,OAAO,iDAAiD,OAAO,kDAAkD,OAAO,4DAA4D,OAAO,mEAAmE,OAAO,8DAA8D,OAAO,gDAAgD,OAAO,4EAA4E,OAAO,8JAA8J,OAAO,kFAAkF,OAAO,2FAA2F,mFAAmF,+FAA+F,+FAA+F,oMAAoM,cAAc,qGAAqG,oGAAoG,kGAAkG,EAAE,2CAA2C,2CAA2C,0CAA0C,kDAAkD,0CAA0C,UAAU,mCAAmC,kFAAkF,wCAAwC,aAAa,qCAAqC,0CAA0C,aAAa,sCAAsC,kCAAkC,aAAa,YAAY,0BAA0B,0FAA0F,mCAAmC,+CAA+C,wDAAwD,2BAA2B,iBAAiB,+DAA+D,+CAA+C,yCAAyC,yCAAyC,6BAA6B,uDAAuD,uDAAuD,iBAAiB,gFAAgF,wGAAwG,gKAAgK,mEAAmE,iBAAiB,6PAA6P,IAAI,aAAa,2FAA2F,+CAA+C,0CAA0C,gFAAgF,2BAA2B,iBAAiB,iEAAiE,mCAAmC,uEAAuE,sDAAsD,+EAA+E,uFAAuF,kDAAkD,+BAA+B,6BAA6B,6CAA6C,iCAAiC,wBAAwB,OAAO,+HAA+H,kCAAkC,qBAAqB,qDAAqD,yCAAyC,+BAA+B,uCAAuC,yDAAyD,mCAAmC,2DAA2D,2DAA2D,qBAAqB,oKAAoK,gIAAgI,oLAAoL,uIAAuI,8GAA8G,iHAAiH,IAAI,iBAAiB,aAAa,yCAAyC,yCAAyC,iCAAiC,yCAAyC,oFAAoF,mCAAmC,+CAA+C,0CAA0C,wFAAwF,sDAAsD,2BAA2B,iBAAiB,mEAAmE,sEAAsE,2DAA2D,kDAAkD,4DAA4D,wLAAwL,qGAAqG,yDAAyD,mCAAmC,iDAAiD,iEAAiE,gEAAgE,yEAAyE,gCAAgC,qBAAqB,8DAA8D,mGAAmG,+KAA+K,qBAAqB,0IAA0I,gEAAgE,iKAAiK,gEAAgE,qDAAqD,gIAAgI,60CAA60C,wLAAwL,EAAE,yFAAyF,4EAA4E,kEAAkE,0DAA0D,qBAAqB,8EAA8E,6CAA6C,2CAA2C,2CAA2C,kDAAkD,mBAAmB,QAAQ,yDAAyD,aAAa,2FAA2F,mCAAmC,+CAA+C,yEAAyE,8BAA8B,2BAA2B,iBAAiB,mEAAmE,sDAAsD,yEAAyE,wDAAwD,+DAA+D,+DAA+D,ubAAub,kCAAkC,iEAAiE,2CAA2C,2DAA2D,+BAA+B,6CAA6C,kDAAkD,+OAA+O,iBAAiB,sBAAsB,0IAA0I,0EAA0E,yDAAyD,uKAAuK,6FAA6F,qBAAqB,iBAAiB,0DAA0D,8EAA8E,oDAAoD,oJAAoJ,4MAA4M,iDAAiD,gDAAgD,kEAAkE,oDAAoD,uCAAuC,gIAAgI,+EAA+E,iDAAiD,kMAAkM,iXAAiX,qQAAqQ,8FAA8F,4CAA4C,6BAA6B,sFAAsF,4DAA4D,EAAE,sDAAsD,wEAAwE,6DAA6D,iDAAiD,iBAAiB,sEAAsE,yCAAyC,yCAAyC,8CAA8C,aAAa,YAAY,oEAAoE,OAAO,uBAAuB,OAAO,0CAA0C,OAAO,0CAA0C,OAAO,8BAA8B,OAAO,EAAE,yGAAyG,yHAAyH,sEAAsE,0BAA0B,kCAAkC,qDAAqD,0GAA0G,qCAAqC,aAAa,6DAA6D,kHAAkH,qCAAqC,aAAa,kBAAkB,6CAA6C,8DAA8D,iEAAiE,iBAAiB,sBAAsB,iEAAiE,iBAAiB,aAAa,sBAAsB,8IAA8I,UAAU,yEAAyE,oEAAoE,0BAA0B,kCAAkC,gDAAgD,wHAAwH,8DAA8D,8DAA8D,qCAAqC,aAAa,mEAAmE,8DAA8D,qCAAqC,aAAa,kBAAkB,6CAA6C,uEAAuE,0DAA0D,iBAAiB,sBAAsB,0DAA0D,iBAAiB,aAAa,sBAAsB,8IAA8I,SAAS,wCAAwC,sDAAsD,sOAAsO,SAAS,2DAA2D,0RAA0R,uEAAuE,wCAAwC,uCAAuC,wDAAwD,wDAAwD,2CAA2C,yCAAyC,aAAa,iGAAiG,sFAAsF,aAAa,2CAA2C,wCAAwC,aAAa,gGAAgG,qFAAqF,aAAa,SAAS,qEAAqE,+HAA+H,kEAAkE,4CAA4C,uBAAuB,aAAa,sOAAsO,2EAA2E,mGAAmG,6FAA6F,mDAAmD,SAAS,oIAAoI,wBAAwB,mCAAmC,oWAAoW,UAAU,+HAA+H,iDAAiD,yDAAyD,yCAAyC,aAAa,4BAA4B,UAAU,uCAAuC,eAAe,oEAAoE,sEAAsE,6HAA6H,iLAAiL,OAAO,2KAA2K,0ZAA0Z,iEAAiE,kFAAkF,aAAa,6FAA6F,yCAAyC,iCAAiC,4BAA4B,+BAA+B,4BAA4B,2BAA2B,OAAO,0GAA0G,iFAAiF,aAAa,sGAAsG,oDAAoD,uDAAuD,+DAA+D,aAAa,uGAAuG,8CAA8C,gEAAgE,aAAa,WAAW,EAAE,+FAA+F,gFAAgF,yBAAyB,uBAAuB,aAAa,yFAAyF,4OAA4O,SAAS,+DAA+D,oDAAoD,6DAA6D,yCAAyC,SAAS,oCAAoC,sEAAsE,uBAAuB,6CAA6C,uEAAuE,iBAAiB,aAAa,2CAA2C,UAAU,0DAA0D,kDAAkD,UAAU,oCAAoC,aAAa,oEAAoE,oDAAoD,4CAA4C,+BAA+B,iCAAiC,0BAA0B,wMAAwM,0BAA0B,yFAAyF,iTAAiT,+CAA+C,0OAA0O,gCAAgC,cAAc,oDAAoD,qKAAqK,4BAA4B,UAAU,0DAA0D,qEAAqE,6EAA6E,4HAA4H,gCAAgC,qGAAqG,2HAA2H,2BAA2B,iBAAiB,4DAA4D,mFAAmF,2DAA2D,qNAAqN,6FAA6F,oFAAoF,6cAA6c,oQAAoQ,qFAAqF,wGAAwG,+CAA+C,wKAAwK,qBAAqB,gCAAgC,gGAAgG,qBAAqB,iBAAiB,+LAA+L,sGAAsG,yEAAyE,2NAA2N,+BAA+B,qBAAqB,mDAAmD,gFAAgF,qBAAqB,kTAAkT,8DAA8D,kDAAkD,2FAA2F,6JAA6J,4bAA4b,uDAAuD,2DAA2D,4EAA4E,6CAA6C,6FAA6F,aAAa,EAAE,2DAA2D,0EAA0E,uDAAuD,qBAAqB,iBAAiB,aAAa,EAAE,SAAS,mJAAmJ,mFAAmF,oCAAoC,wPAAwP,6FAA6F,iBAAiB,cAAc,ySAAyS,kPAAkP,6CAA6C,aAAa,gFAAgF,EAAE,gKAAgK,4CAA4C,+FAA+F,6LAA6L,0GAA0G,8HAA8H,oEAAoE,iBAAiB,aAAa,+JAA+J,SAAS,uDAAuD,mGAAmG,iJAAiJ,oFAAoF,8EAA8E,6UAA6U,2BAA2B,iBAAiB,8FAA8F,6CAA6C,8DAA8D,gEAAgE,2FAA2F,kFAAkF,qBAAqB,iBAAiB,EAAE,eAAe,QAAQ,SAAS,gDAAgD,6BAA6B,4BAA4B,sGAAsG,GAAG,wGAAwG,iBAAiB,YAAY,kEAAkE,uCAAuC,+BAA+B,2BAA2B,wBAAwB,OAAO,sDAAsD,mRAAmR,6BAA6B,iBAAiB,aAAa,SAAS,kEAAkE,oMAAoM,SAAS,kDAAkD,yDAAyD,4BAA4B,uBAAuB,aAAa,+DAA+D,4CAA4C,iDAAiD,wDAAwD,sDAAsD,6FAA6F,2CAA2C,aAAa,gEAAgE,kKAAkK,4DAA4D,aAAa,qDAAqD,sDAAsD,iUAAiU,gIAAgI,aAAa,oCAAoC,kCAAkC,aAAa,mCAAmC,8BAA8B,gFAAgF,aAAa,UAAU,qDAAqD,uFAAuF,mBAAmB,qFAAqF,UAAU,6DAA6D,yDAAyD,yDAAyD,UAAU,sDAAsD,yDAAyD,SAAS,gCAAgC,2BAA2B,0BAA0B,OAAO,+EAA+E,gDAAgD,UAAU,kCAAkC,eAAe,oEAAoE,oDAAoD,0BAA0B,gCAAgC,OAAO,MAAM,YAAY,oBAAoB,OAAO,EAAE,iIAAiI,yEAAyE,4BAA4B,kDAAkD,sCAAsC,4BAA4B,kDAAkD,wEAAwE,mCAAmC,iFAAiF,wFAAwF,4DAA4D,4BAA4B,oBAAoB,oEAAoE,qBAAqB,oEAAoE,cAAc,gGAAgG,8FAA8F,0CAA0C,gDAAgD,qEAAqE,aAAa,0NAA0N,oGAAoG,mFAAmF,wCAAwC,4GAA4G,6GAA6G,qDAAqD,6DAA6D,aAAa,sFAAsF,+DAA+D,aAAa,uGAAuG,qFAAqF,0GAA0G,uEAAuE,4BAA4B,UAAU,kCAAkC,eAAe,oEAAoE,oDAAoD,mCAAmC,mCAAmC,iCAAiC,uDAAuD,6CAA6C,qEAAqE,wFAAwF,oEAAoE,iDAAiD,4DAA4D,aAAa,EAAE,SAAS,EAAE,gGAAgG,aAAa,oEAAoE,kEAAkE,2HAA2H,EAAE,aAAa,oEAAoE,mBAAmB,sDAAsD,2DAA2D,+CAA+C,oGAAoG,uEAAuE,aAAa,oDAAoD,qDAAqD,+BAA+B,wGAAwG,8CAA8C,0DAA0D,sDAAsD,oFAAoF,yDAAyD,8BAA8B,iBAAiB,kCAAkC,aAAa,+BAA+B,ywBAAywB,gCAAgC,8DAA8D,oBAAoB,6BAA6B,6BAA6B,2DAA2D,iCAAiC,iBAAiB,aAAa,SAAS,EAAE,aAAa,oEAAoE,mBAAmB,gDAAgD,8CAA8C,8CAA8C,iFAAiF,6IAA6I,gEAAgE,sFAAsF,+EAA+E,sIAAsI,4DAA4D,iBAAiB,gCAAgC,kFAAkF,iBAAiB,oCAAoC,aAAa,iGAAiG,uCAAuC,iDAAiD,yCAAyC,2DAA2D,mDAAmD,yCAAyC,qDAAqD,mEAAmE,iBAAiB,kDAAkD,oEAAoE,iBAAiB,6FAA6F,mFAAmF,wDAAwD,mCAAmC,yBAAyB,uEAAuE,uFAAuF,0LAA0L,6DAA6D,sCAAsC,wNAAwN,qBAAqB,4DAA4D,oEAAoE,yDAAyD,6CAA6C,mCAAmC,yBAAyB,sEAAsE,sFAAsF,mCAAmC,qDAAqD,cAAc,4BAA4B,yBAAyB,8BAA8B,uMAAuM,yBAAyB,8DAA8D,yEAAyE,uNAAuN,qBAAqB,mDAAmD,qEAAqE,2DAA2D,4EAA4E,yBAAyB,8BAA8B,8EAA8E,yBAAyB,qBAAqB,gCAAgC,oCAAoC,aAAa,gDAAgD,uCAAuC,sCAAsC,+CAA+C,+BAA+B,8DAA8D,uDAAuD,wEAAwE,6BAA6B,kCAAkC,sEAAsE,6BAA6B,yBAAyB,EAAE,qBAAqB,iBAAiB,sBAAsB,sCAAsC,iBAAiB,aAAa,SAAS,EAAE,gCAAgC,6JAA6J,6CAA6C,uBAAuB,UAAU,EAAE,mEAAmE,+CAA+C,4EAA4E,2CAA2C,mDAAmD,6EAA6E,2EAA2E,iEAAiE,6BAA6B,iBAAiB,8BAA8B,aAAa,oJAAoJ,iDAAiD,uBAAuB,UAAU,EAAE,mEAAmE,mDAAmD,sEAAsE,2CAA2C,oFAAoF,6EAA6E,6EAA6E,iEAAiE,6BAA6B,iBAAiB,gCAAgC,aAAa,UAAU,8DAA8D,0EAA0E,qCAAqC,wBAAwB,6CAA6C,aAAa,0CAA0C,kDAAkD,aAAa,EAAE,SAAS,gEAAgE,0EAA0E,qCAAqC,wBAAwB,mDAAmD,aAAa,0CAA0C,kDAAkD,aAAa,EAAE,SAAS,2BAA2B,gEAAgE,2DAA2D,qEAAqE,oGAAoG,uDAAuD,wBAAwB,+QAA+Q,aAAa,6DAA6D,2DAA2D,wBAAwB,uPAAuP,aAAa,UAAU,gIAAgI,+DAA+D,mEAAmE,wEAAwE,wFAAwF,6BAA6B,6EAA6E,aAAa,2DAA2D,qFAAqF,gEAAgE,+DAA+D,0DAA0D,qKAAqK,6BAA6B,6KAA6K,aAAa,oDAAoD,SAAS,wGAAwG,uEAAuE,8FAA8F,SAAS,mCAAmC,aAAa,oEAAoE,oDAAoD,8CAA8C,0BAA0B,oJAAoJ,gEAAgE,uEAAuE,2CAA2C,qUAAqU,aAAa,kBAAkB,sCAAsC,aAAa,gDAAgD,2UAA2U,aAAa,kBAAkB,qCAAqC,aAAa,UAAU,mFAAmF,iDAAiD,mCAAmC,mDAAmD,0DAA0D,aAAa,SAAS,kCAAkC,aAAa,oEAAoE,8fAA8f,0BAA0B,kDAAkD,iEAAiE,6CAA6C,4DAA4D,4DAA4D,iBAAiB,6BAA6B,aAAa,UAAU,aAAa,oEAAoE,mBAAmB,gDAAgD,gDAAgD,mDAAmD,2CAA2C,kDAAkD,sFAAsF,SAAS,qCAAqC,yCAAyC,SAAS,gCAAgC,OAAO,uBAAuB,0BAA0B,kEAAkE,OAAO,gDAAgD,OAAO,kCAAkC,OAAO,qCAAqC,OAAO,gCAAgC,OAAO,yCAAyC,OAAO,EAAE,4BAA4B,yGAAyG,4BAA4B,oCAAoC,kCAAkC,iDAAiD,uBAAuB,aAAa,oDAAoD,6BAA6B,oBAAoB,OAAO,6CAA6C,4IAA4I,QAAQ,aAAa,sEAAsE,8BAA8B,2BAA2B,eAAe,OAAO,sEAAsE,iEAAiE,kCAAkC,aAAa,4BAA4B,SAAS,yDAAyD,+EAA+E,iDAAiD,6DAA6D,uDAAuD,sDAAsD,wLAAwL,0HAA0H,8HAA8H,uDAAuD,uEAAuE,0BAA0B,iVAAiV,aAAa,EAAE,iEAAiE,SAAS,gEAAgE,wGAAwG,sEAAsE,iDAAiD,qDAAqD,4DAA4D,gOAAgO,kBAAkB,kDAAkD,oDAAoD,mDAAmD,yCAAyC,mDAAmD,iBAAiB,sDAAsD,8EAA8E,4YAA4Y,yDAAyD,+EAA+E,qDAAqD,4DAA4D,iBAAiB,2DAA2D,wEAAwE,+CAA+C,iEAAiE,+DAA+D,yFAAyF,aAAa,EAAE,8BAA8B,8EAA8E,4CAA4C,oDAAoD,wDAAwD,qFAAqF,uEAAuE,kEAAkE,kEAAkE,2IAA2I,mDAAmD,uIAAuI,mDAAmD,2DAA2D,qEAAqE,2CAA2C,wEAAwE,yBAAyB,kDAAkD,gDAAgD,yCAAyC,qBAAqB,iBAAiB,EAAE,mLAAmL,mDAAmD,mCAAmC,+BAA+B,4DAA4D,wCAAwC,iDAAiD,qBAAqB,wCAAwC,mEAAmE,iBAAiB,EAAE,iCAAiC,iEAAiE,iBAAiB,6CAA6C,gEAAgE,sFAAsF,wGAAwG,mEAAmE,iBAAiB,EAAE,aAAa,EAAE,4BAA4B,SAAS,gCAAgC,OAAO,8BAA8B,4BAA4B,2BAA2B,4BAA4B,yEAAyE,6LAA6L,mNAAmN,qBAAqB,+BAA+B,uCAAuC,2CAA2C,2EAA2E,sJAAsJ,2BAA2B,iBAAiB,mDAAmD,6DAA6D,uDAAuD,8DAA8D,wFAAwF,2DAA2D,yDAAyD,iEAAiE,0EAA0E,kLAAkL,kEAAkE,0EAA0E,sFAAsF,+CAA+C,+FAA+F,EAAE,kEAAkE,uCAAuC,+BAA+B,qBAAqB,2DAA2D,yDAAyD,0JAA0J,+DAA+D,0JAA0J,qBAAqB,sDAAsD,4CAA4C,wEAAwE,oFAAoF,0BAA0B,0BAA0B,8BAA8B,+BAA+B,qDAAqD,sCAAsC,oDAAoD,2DAA2D,6CAA6C,6EAA6E,6DAA6D,wEAAwE,yBAAyB,qEAAqE,qBAAqB,0BAA0B,oDAAoD,sCAAsC,4CAA4C,4DAA4D,8EAA8E,8DAA8D,4IAA4I,yBAAyB,sEAAsE,qBAAqB,+CAA+C,0JAA0J,EAAE,iBAAiB,QAAQ,eAAe,QAAQ,SAAS,0DAA0D,yCAAyC,aAAa,oEAAoE,oDAAoD,6CAA6C,mCAAmC,iCAAiC,4CAA4C,uHAAuH,GAAG,oGAAoG,GAAG,0GAA0G,GAAG,gFAAgF,oGAAoG,mFAAmF,aAAa,oEAAoE,mBAAmB,+CAA+C,4CAA4C,+CAA+C,gDAAgD,0DAA0D,6DAA6D,oEAAoE,gGAAgG,8DAA8D,mNAAmN,6CAA6C,kBAAkB,sDAAsD,iDAAiD,aAAa,0EAA0E,oEAAoE,yDAAyD,aAAa,2DAA2D,4EAA4E,sDAAsD,2CAA2C,4BAA4B,aAAa,4EAA4E,0CAA0C,mFAAmF,sEAAsE,qDAAqD,0CAA0C,iBAAiB,EAAE,8MAA8M,+CAA+C,8BAA8B,aAAa,qDAAqD,kHAAkH,mEAAmE,qEAAqE,sLAAsL,uHAAuH,aAAa,+BAA+B,63BAA63B,6BAA6B,0dAA0d,iCAAiC,iBAAiB,6FAA6F,6BAA6B,kQAAkQ,gJAAgJ,qBAAqB,iBAAiB,6BAA6B,6BAA6B,2DAA2D,iCAAiC,iBAAiB,2LAA2L,SAAS,EAAE,uDAAuD,qCAAqC,aAAa,oEAAoE,4TAA4T,4BAA4B,wDAAwD,sGAAsG,uDAAuD,qCAAqC,iBAAiB,0BAA0B,aAAa,uCAAuC,OAAO,yGAAyG,sDAAsD,iDAAiD,4DAA4D,gDAAgD,sDAAsD,gDAAgD,qBAAqB,EAAE,iBAAiB,mDAAmD,aAAa,yCAAyC,OAAO,2DAA2D,6DAA6D,+DAA+D,oFAAoF,oDAAoD,aAAa,yCAAyC,OAAO,iEAAiE,6DAA6D,qCAAqC,wEAAwE,2CAA2C,iBAAiB,aAAa,yCAAyC,OAAO,6DAA6D,6DAA6D,iDAAiD,aAAa,UAAU,aAAa,oEAAoE,sDAAsD,4CAA4C,gCAAgC,4BAA4B,+BAA+B,QAAQ,mHAAmH,6CAA6C,2CAA2C,+CAA+C,mEAAmE,kCAAkC,kJAAkJ,EAAE,wCAAwC,iRAAiR,aAAa,EAAE,SAAS,gCAAgC,8BAA8B,sBAAsB,OAAO,0BAA0B,QAAQ,8BAA8B,OAAO,kCAAkC,QAAQ,oIAAoI,qEAAqE,0CAA0C,wCAAwC,2DAA2D,sDAAsD,uKAAuK,+DAA+D,wFAAwF,SAAS,mHAAmH,6BAA6B,iDAAiD,uCAAuC,+CAA+C,kCAAkC,EAAE,kDAAkD,0CAA0C,6BAA6B,+BAA+B,2BAA2B,+CAA+C,uFAAuF,uDAAuD,+CAA+C,aAAa,iCAAiC,wDAAwD,gDAAgD,aAAa,wKAAwK,SAAS,iDAAiD,+EAA+E,kEAAkE,wFAAwF,oBAAoB,6YAA6Y,SAAS,wEAAwE,2CAA2C,+CAA+C,mDAAmD,iDAAiD,8CAA8C,UAAU,qCAAqC,gCAAgC,6CAA6C,8EAA8E,gDAAgD,+CAA+C,+CAA+C,gCAAgC,gEAAgE,qBAAqB,oBAAoB,iBAAiB,kDAAkD,8DAA8D,iDAAiD,gCAAgC,8EAA8E,qBAAqB,oBAAoB,iBAAiB,eAAe,kBAAkB,6CAA6C,uDAAuD,oBAAoB,aAAa,qGAAqG,+DAA+D,mFAAmF,wGAAwG,oGAAoG,mFAAmF,+DAA+D,8DAA8D,kRAAkR,qCAAqC,+LAA+L,kCAAkC,4BAA4B,6DAA6D,iBAAiB,qBAAqB,aAAa,iCAAiC,2CAA2C,kCAAkC,4BAA4B,wDAAwD,iBAAiB,qBAAqB,aAAa,kFAAkF,sFAAsF,8MAA8M,aAAa,2CAA2C,0CAA0C,UAAU,6DAA6D,8CAA8C,4CAA4C,+CAA+C,mDAAmD,iDAAiD,2CAA2C,+DAA+D,8CAA8C,wBAAwB,mNAAmN,aAAa,oBAAoB,8CAA8C,wBAAwB,0FAA0F,aAAa,oBAAoB,4BAA4B,wBAAwB,qLAAqL,0IAA0I,EAAE,kEAAkE,uEAAuE,wEAAwE,+EAA+E,8FAA8F,gGAAgG,kFAAkF,iEAAiE,sFAAsF,qEAAqE,8EAA8E,4GAA4G,EAAE,oFAAoF,0GAA0G,4FAA4F,wDAAwD,4CAA4C,6BAA6B,aAAa,gCAAgC,2CAA2C,EAAE,UAAU,mDAAmD,yEAAyE,2DAA2D,sDAAsD,gDAAgD,aAAa,sEAAsE,6DAA6D,2BAA2B,iBAAiB,mDAAmD,yCAAyC,uCAAuC,8DAA8D,6CAA6C,qEAAqE,qJAAqJ,qEAAqE,6EAA6E,+DAA+D,+HAA+H,iEAAiE,0DAA0D,6BAA6B,EAAE,yBAAyB,8EAA8E,+DAA+D,8CAA8C,qBAAqB,wDAAwD,wEAAwE,4DAA4D,gDAAgD,4EAA4E,4CAA4C,gEAAgE,qBAAqB,6CAA6C,qEAAqE,+CAA+C,qBAAqB,gCAAgC,gNAAgN,sDAAsD,0EAA0E,oFAAoF,+LAA+L,iBAAiB,oCAAoC,aAAa,sCAAsC,0HAA0H,mDAAmD,4BAA4B,sRAAsR,iBAAiB,EAAE,+CAA+C,4BAA4B,sGAAsG,iBAAiB,mBAAmB,kCAAkC,aAAa,mHAAmH,iDAAiD,uDAAuD,iCAAiC,sDAAsD,sDAAsD,8DAA8D,6EAA6E,iBAAiB,aAAa,WAAW,EAAE,+BAA+B,aAAa,oEAAoE,mDAAmD,4CAA4C,6DAA6D,4DAA4D,iDAAiD,4EAA4E,OAAO,yCAAyC,OAAO,wGAAwG,sCAAsC,mEAAmE,wDAAwD,iDAAiD,iEAAiE,6EAA6E,6BAA6B,6DAA6D,wGAAwG,6DAA6D,uFAAuF,6BAA6B,EAAE,yBAAyB,sBAAsB,4BAA4B,2GAA2G,iBAAiB,EAAE,aAAa,EAAE,UAAU,aAAa,+CAA+C,gOAAgO,uFAAuF,4EAA4E,uDAAuD,gCAAgC,6DAA6D,qDAAqD,8CAA8C,2DAA2D,6CAA6C,qBAAqB,EAAE,oDAAoD,yDAAyD,qPAAqP,iDAAiD,yHAAyH,yLAAyL,gKAAgK,2GAA2G,gFAAgF,6BAA6B,yBAAyB,8BAA8B,gJAAgJ,yBAAyB,qBAAqB,EAAE,iBAAiB,aAAa,EAAE,UAAU,aAAa,oEAAoE,wDAAwD,mDAAmD,mDAAmD,4CAA4C,gCAAgC,mCAAmC,yEAAyE,yEAAyE,uDAAuD,uDAAuD,gDAAgD,yCAAyC,iBAAiB,8CAA8C,8CAA8C,iBAAiB,6CAA6C,6CAA6C,mDAAmD,wDAAwD,yDAAyD,2DAA2D,0DAA0D,mDAAmD,2EAA2E,sEAAsE,yCAAyC,qDAAqD,sDAAsD,iBAAiB,EAAE,iDAAiD,sGAAsG,+DAA+D,6DAA6D,2EAA2E,uFAAuF,8BAA8B,+GAA+G,mDAAmD,gDAAgD,6CAA6C,4DAA4D,8BAA8B,uCAAuC,iDAAiD,+ZAA+Z,EAAE,+BAA+B,qBAAqB,+GAA+G,+HAA+H,qBAAqB,0BAA0B,qDAAqD,qBAAqB,6CAA6C,yCAAyC,8CAA8C,qBAAqB,0BAA0B,4DAA4D,qBAAqB,gEAAgE,6CAA6C,4aAA4a,EAAE,8CAA8C,iBAAiB,QAAQ,0KAA0K,kLAAkL,yDAAyD,kEAAkE,gDAAgD,qEAAqE,qDAAqD,mFAAmF,uFAAuF,6BAA6B,yBAAyB,EAAE,qBAAqB,0BAA0B,4EAA4E,kDAAkD,kEAAkE,gDAAgD,qEAAqE,yIAAyI,iEAAiE,6EAA6E,4DAA4D,6BAA6B,yBAAyB,EAAE,qBAAqB,iBAAiB,6DAA6D,aAAa,EAAE,UAAU,aAAa,oEAAoE,mBAAmB,gIAAgI,kFAAkF,uCAAuC,iCAAiC,aAAa,EAAE,0EAA0E,mCAAmC,SAAS,OAAO,uCAAuC,mKAAmK,8CAA8C,+BAA+B,qBAAqB,iBAAiB,8CAA8C,aAAa,4DAA4D,iCAAiC,QAAQ,OAAO,uCAAuC,6HAA6H,8BAA8B,qBAAqB,iBAAiB,aAAa,kEAAkE,0UAA0U,0EAA0E,OAAO,OAAO,4GAA4G,iCAAiC,qBAAqB,0DAA0D,6CAA6C,+CAA+C,oSAAoS,6DAA6D,iFAAiF,qBAAqB,8DAA8D,iFAAiF,qBAAqB,oDAAoD,wCAAwC,iBAAiB,aAAa,4BAA4B,sBAAsB,kCAAkC,4BAA4B,8BAA8B,2BAA2B,SAAS,OAAO,0CAA0C,gCAAgC,mDAAmD,iBAAiB,mDAAmD,aAAa,yCAAyC,qDAAqD,aAAa,2BAA2B,SAAS,OAAO,sCAAsC,2CAA2C,iBAAiB,sBAAsB,yCAAyC,iBAAiB,aAAa,mDAAmD,oDAAoD,SAAS,oFAAoF,8BAA8B,+BAA+B,2BAA2B,4BAA4B,OAAO,gDAAgD,sDAAsD,iBAAiB,sBAAsB,uDAAuD,iBAAiB,aAAa,+EAA+E,6EAA6E,6BAA6B,4BAA4B,OAAO,+DAA+D,iCAAiC,mEAAmE,oDAAoD,oEAAoE,qBAAqB,0BAA0B,oEAAoE,qBAAqB,+EAA+E,+DAA+D,iBAAiB,aAAa,SAAS,6EAA6E,6CAA6C,qCAAqC,mBAAmB,mBAAmB,uCAAuC,wCAAwC,qDAAqD,yDAAyD,oEAAoE,gKAAgK,8EAA8E,gEAAgE,kEAAkE,2EAA2E,4CAA4C,4CAA4C,4BAA4B,0BAA0B,+BAA+B,8BAA8B,iCAAiC,+BAA+B,8FAA8F,iDAAiD,sCAAsC,sCAAsC,yCAAyC,iBAAiB,sBAAsB,oGAAoG,oGAAoG,0CAA0C,wCAAwC,2CAA2C,gHAAgH,yEAAyE,0EAA0E,oCAAoC,yDAAyD,mCAAmC,oEAAoE,qBAAqB,yFAAyF,iBAAiB,sEAAsE,iIAAiI,wHAAwH,6HAA6H,+CAA+C,gCAAgC,0bAA0b,qFAAqF,uDAAuD,iBAAiB,aAAa,EAAE,0EAA0E,gFAAgF,aAAa,UAAU,aAAa,+CAA+C,+DAA+D,uDAAuD,+CAA+C,EAAE,wDAAwD,uBAAuB,aAAa,oEAAoE,4CAA4C,gDAAgD,iDAAiD,gHAAgH,yBAAyB,OAAO,gEAAgE,yCAAyC,yBAAyB,qBAAqB,gCAAgC,iBAAiB,QAAQ,aAAa,QAAQ,UAAU,aAAa,oEAAoE,oDAAoD,6CAA6C,mCAAmC,iCAAiC,wHAAwH,sGAAsG,gGAAgG,aAAa,oEAAoE,mBAAmB,+DAA+D,kDAAkD,+CAA+C,8KAA8K,uEAAuE,aAAa,oEAAoE,0xBAA0xB,gCAAgC,uYAAuY,oBAAoB,6BAA6B,6BAA6B,6FAA6F,iBAAiB,aAAa,WAAW,EAAE,aAAa,oEAAoE,0DAA0D,uDAAuD,kDAAkD,+DAA+D,0DAA0D,8DAA8D,aAAa,6DAA6D,iDAAiD,4DAA4D,8DAA8D,uCAAuC,wKAAwK,gDAAgD,4CAA4C,4CAA4C,uKAAuK,aAAa,qDAAqD,2DAA2D,aAAa,gDAAgD,uEAAuE,aAAa,sCAAsC,SAAS,EAAE,aAAa,oEAAoE,gFAAgF,kDAAkD,qDAAqD,sBAAsB,qEAAqE,kFAAkF,0CAA0C,wCAAwC,qDAAqD,yDAAyD,+BAA+B,mBAAmB,OAAO,uCAAuC,yDAAyD,iCAAiC,qBAAqB,0CAA0C,sCAAsC,iOAAiO,qBAAqB,0BAA0B,iEAAiE,iEAAiE,yDAAyD,0DAA0D,8EAA8E,qBAAqB,iBAAiB,aAAa,+CAA+C,uCAAuC,0CAA0C,wCAAwC,6KAA6K,QAAQ,OAAO,uCAAuC,wCAAwC,iDAAiD,iDAAiD,uFAAuF,0EAA0E,qBAAqB,iBAAiB,4BAA4B,aAAa,SAAS,EAAE,sCAAsC,6CAA6C,oDAAoD,oFAAoF,EAAE,SAAS,2DAA2D,0EAA0E,yBAAyB,uEAAuE,mCAAmC,4CAA4C,+CAA+C,iCAAiC,mIAAmI,yEAAyE,uDAAuD,gDAAgD,yBAAyB,oCAAoC,qBAAqB,8BAA8B,EAAE,4LAA4L,4GAA4G,8HAA8H,wDAAwD,8BAA8B,+CAA+C,aAAa,wKAAwK,mDAAmD,0CAA0C,6EAA6E,qCAAqC,uGAAuG,iBAAiB,aAAa,EAAE,8DAA8D,UAAU,kEAAkE,6CAA6C,qCAAqC,sEAAsE,EAAE,UAAU,iDAAiD,mCAAmC,UAAU,2CAA2C,aAAa,oEAAoE,oDAAoD,6CAA6C,sEAAsE,mCAAmC,iCAAiC,kFAAkF,oHAAoH,yDAAyD,yGAAyG,iEAAiE,aAAa,oEAAoE,yCAAyC,iCAAiC,mCAAmC,aAAa,oEAAoE,uEAAuE,qDAAqD,qDAAqD,gDAAgD,kDAAkD,oDAAoD,uCAAuC,oEAAoE,eAAe,gDAAgD,gHAAgH,6CAA6C,gFAAgF,gEAAgE,6FAA6F,oDAAoD,0CAA0C,qCAAqC,aAAa,QAAQ,2CAA2C,uCAAuC,OAAO,2DAA2D,qCAAqC,OAAO,2DAA2D,qCAAqC,OAAO,0DAA0D,qCAAqC,OAAO,mEAAmE,SAAS,0DAA0D,uCAAuC,UAAU,0EAA0E,oEAAoE,yFAAyF,UAAU,2EAA2E,oEAAoE,4CAA4C,sDAAsD,sDAAsD,0BAA0B,UAAU,uDAAuD,qCAAqC,qCAAqC,sDAAsD,yBAAyB,yBAAyB,+CAA+C,kIAAkI,4BAA4B,oCAAoC,2BAA2B,gCAAgC,OAAO,2DAA2D,kEAAkE,2CAA2C,gDAAgD,uCAAuC,yCAAyC,iBAAiB,aAAa,wFAAwF,UAAU,+DAA+D,kDAAkD,2CAA2C,6CAA6C,+DAA+D,oEAAoE,qEAAqE,6EAA6E,mFAAmF,8EAA8E,mDAAmD,+FAA+F,8GAA8G,4CAA4C,aAAa,QAAQ,UAAU,4DAA4D,oDAAoD,yCAAyC,iEAAiE,mEAAmE,aAAa,EAAE,2EAA2E,wLAAwL,2BAA2B,iBAAiB,iDAAiD,qEAAqE,qFAAqF,iBAAiB,EAAE,aAAa,QAAQ,8DAA8D,mDAAmD,qFAAqF,6EAA6E,8BAA8B,0BAA0B,iBAAiB,sBAAsB,0CAA0C,iBAAiB,iCAAiC,aAAa,kIAAkI,oGAAoG,qFAAqF,sDAAsD,gDAAgD,kDAAkD,kDAAkD,mDAAmD,6DAA6D,8HAA8H,uHAAuH,iBAAiB,4CAA4C,4BAA4B,4FAA4F,gEAAgE,wDAAwD,kJAAkJ,gEAAgE,qBAAqB,uEAAuE,iBAAiB,4CAA4C,4BAA4B,4FAA4F,gEAAgE,wDAAwD,oDAAoD,8DAA8D,qBAAqB,uEAAuE,iBAAiB,sBAAsB,uEAAuE,yDAAyD,8DAA8D,qBAAqB,mIAAmI,sEAAsE,qOAAqO,gDAAgD,iBAAiB,aAAa,EAAE,UAAU,+EAA+E,MAAM,yCAAyC,kDAAkD,+BAA+B,kEAAkE,gEAAgE,sCAAsC,oDAAoD,aAAa,EAAE,sEAAsE,sEAAsE,gJAAgJ,iBAAiB,aAAa,EAAE,6BAA6B,UAAU,2DAA2D,+BAA+B,aAAa,oEAAoE,oDAAoD,4CAA4C,4DAA4D,sDAAsD,mKAAmK,OAAO,+CAA+C,6BAA6B,oEAAoE,OAAO,0CAA0C,qCAAqC,2BAA2B,sCAAsC,SAAS,+CAA+C,yCAAyC,aAAa,oEAAoE,6DAA6D,qDAAqD,4CAA4C,4CAA4C,8DAA8D,4CAA4C,oCAAoC,uCAAuC,OAAO,SAAS,wEAAwE,sEAAsE,0DAA0D,0DAA0D,8CAA8C,oDAAoD,oDAAoD,sDAAsD,+DAA+D,qDAAqD,+DAA+D,kDAAkD,4DAA4D,yGAAyG,8HAA8H,6CAA6C,qBAAqB,qGAAqG,6CAA6C,qBAAqB,0HAA0H,wmBAAwmB,SAAS,oCAAoC,+CAA+C,qBAAqB,4DAA4D,wDAAwD,oEAAoE,MAAM,mCAAmC,qBAAqB,mEAAmE,+IAA+I,qBAAqB,oLAAoL,uFAAuF,+DAA+D,mCAAmC,iBAAiB,QAAQ,yDAAyD,2CAA2C,kBAAkB,aAAa,+BAA+B,sLAAsL,wGAAwG,iBAAiB,0QAA0Q,oCAAoC,kEAAkE,qBAAqB,8XAA8X,eAAe,0CAA0C,SAAS,EAAE,sCAAsC,aAAa,oEAAoE,2DAA2D,4CAA4C,8CAA8C,uGAAuG,uEAAuE,uFAAuF,uCAAuC,kCAAkC,8CAA8C,wDAAwD,aAAa,kDAAkD,wDAAwD,6DAA6D,uFAAuF,4EAA4E,+PAA+P,EAAE,uCAAuC,iBAAiB,EAAE,oEAAoE,gFAAgF,2DAA2D,iBAAiB,QAAQ,aAAa,8DAA8D,wDAAwD,6DAA6D,4CAA4C,2BAA2B,iBAAiB,oDAAoD,sEAAsE,sEAAsE,0EAA0E,0EAA0E,iEAAiE,+DAA+D,kEAAkE,kEAAkE,0GAA0G,wGAAwG,sCAAsC,oCAAoC,gFAAgF,sEAAsE,0EAA0E,sCAAsC,iBAAiB,2CAA2C,wEAAwE,sCAAsC,sCAAsC,mCAAmC,wBAAwB,OAAO,4CAA4C,2FAA2F,4EAA4E,wCAAwC,4KAA4K,6BAA6B,GAAG,yBAAyB,0EAA0E,2FAA2F,0EAA0E,wCAAwC,uOAAuO,6BAA6B,GAAG,yBAAyB,qBAAqB,iBAAiB,gDAAgD,wCAAwC,mGAAmG,yEAAyE,qMAAqM,6EAA6E,sEAAsE,yBAAyB,EAAE,qBAAqB,EAAE,0CAA0C,mCAAmC,sBAAsB,OAAO,wCAAwC,uCAAuC,0BAA0B,OAAO,+DAA+D,yBAAyB,wEAAwE,2DAA2D,yBAAyB,8BAA8B,uCAAuC,8EAA8E,6BAA6B,yBAAyB,8CAA8C,2FAA2F,8EAA8E,wCAAwC,mFAAmF,6BAA6B,GAAG,yBAAyB,0DAA0D,+FAA+F,6EAA6E,wCAAwC,sGAAsG,6BAA6B,GAAG,yBAAyB,8DAA8D,qBAAqB,iBAAiB,gEAAgE,8DAA8D,qHAAqH,0FAA0F,oDAAoD,+JAA+J,8EAA8E,uBAAuB,iBAAiB,QAAQ,sEAAsE,0FAA0F,oDAAoD,+JAA+J,8EAA8E,uBAAuB,iBAAiB,QAAQ,eAAe,SAAS,EAAE,aAAa,oEAAoE,mBAAmB,sDAAsD,2CAA2C,0DAA0D,4CAA4C,2DAA2D,gDAAgD,0IAA0I,gEAAgE,mNAAmN,6CAA6C,kBAAkB,aAAa,2DAA2D,6CAA6C,mFAAmF,+CAA+C,kBAAkB,sDAAsD,oCAAoC,4BAA4B,aAAa,oDAAoD,wDAAwD,qDAAqD,gEAAgE,6DAA6D,iJAAiJ,0EAA0E,qBAAqB,iBAAiB,aAAa,+BAA+B,yLAAyL,6BAA6B,2FAA2F,iBAAiB,yBAAyB,6BAA6B,4DAA4D,iBAAiB,gCAAgC,oBAAoB,iCAAiC,qHAAqH,SAAS,EAAE,uCAAuC,aAAa,oEAAoE,sDAAsD,4CAA4C,kDAAkD,oDAAoD,8CAA8C,wDAAwD,aAAa,8BAA8B,SAAS,iEAAiE,sFAAsF,yDAAyD,uCAAuC,mDAAmD,yCAAyC,oDAAoD,mFAAmF,iEAAiE,gDAAgD,+BAA+B,qBAAqB,8IAA8I,qCAAqC,gCAAgC,wEAAwE,+IAA+I,EAAE,sCAAsC,iBAAiB,gGAAgG,sFAAsF,mCAAmC,0BAA0B,OAAO,iEAAiE,yCAAyC,oDAAoD,+CAA+C,0EAA0E,+HAA+H,mGAAmG,oDAAoD,6BAA6B,kCAAkC,0EAA0E,6BAA6B,wDAAwD,yBAAyB,qBAAqB,iBAAiB,qDAAqD,6DAA6D,oDAAoD,qBAAqB,EAAE,iBAAiB,2EAA2E,6DAA6D,sCAAsC,mCAAmC,yBAAyB,4DAA4D,8DAA8D,sCAAsC,oCAAoC,2EAA2E,0BAA0B,wEAAwE,yEAAyE,6EAA6E,8EAA8E,8DAA8D,8DAA8D,gDAAgD,+CAA+C,mDAAmD,yJAAyJ,gEAAgE,qBAAqB,wDAAwD,yEAAyE,4DAA4D,2DAA2D,+DAA+D,sCAAsC,oCAAoC,+FAA+F,0BAA0B,mDAAmD,mCAAmC,yBAAyB,wKAAwK,6EAA6E,0EAA0E,mEAAmE,qBAAqB,6CAA6C,oEAAoE,qBAAqB,gCAAgC,oEAAoE,2DAA2D,wDAAwD,uDAAuD,2DAA2D,iEAAiE,2CAA2C,+LAA+L,uHAAuH,+CAA+C,kGAAkG,kFAAkF,uFAAuF,yGAAyG,wHAAwH,+EAA+E,mDAAmD,sKAAsK,qHAAqH,+CAA+C,4EAA4E,qGAAqG,iGAAiG,wEAAwE,+EAA+E,iEAAiE,uDAAuD,6EAA6E,gGAAgG,6EAA6E,6CAA6C,6VAA6V,EAAE,yFAAyF,2UAA2U,qBAAqB,EAAE,6CAA6C,mEAAmE,qBAAqB,2CAA2C,8DAA8D,qBAAqB,+FAA+F,6MAA6M,uDAAuD,iBAAiB,EAAE,oCAAoC,aAAa,oCAAoC,uCAAuC,kCAAkC,aAAa,sCAAsC,SAAS,EAAE,aAAa,+CAA+C,qDAAqD,sEAAsE,iDAAiD,gCAAgC,4DAA4D,gCAAgC,2BAA2B,iBAAiB,sDAAsD,oDAAoD,kEAAkE,iBAAiB,+BAA+B,wCAAwC,OAAO,iDAAiD,oDAAoD,iBAAiB,4CAA4C,mHAAmH,yDAAyD,iBAAiB,EAAE,aAAa,EAAE,UAAU,aAAa,oEAAoE,6FAA6F,8CAA8C,2CAA2C,8BAA8B,mDAAmD,gDAAgD,iBAAiB,uCAAuC,mEAAmE,6CAA6C,+DAA+D,2DAA2D,yBAAyB,0DAA0D,4DAA4D,0DAA0D,yBAAyB,oDAAoD,qBAAqB,0BAA0B,qDAAqD,qBAAqB,iBAAiB,EAAE,6CAA6C,aAAa,6DAA6D,yEAAyE,gEAAgE,iBAAiB,aAAa,EAAE,UAAU,aAAa,oEAAoE,qDAAqD,wCAAwC,mCAAmC,mCAAmC,mCAAmC,mCAAmC,2DAA2D,2DAA2D,4FAA4F,iEAAiE,4CAA4C,uHAAuH,GAAG,oGAAoG,GAAG,0GAA0G,GAAG,aAAa,oEAAoE,mDAAmD,kDAAkD,4CAA4C,0DAA0D,kDAAkD,+CAA+C,6CAA6C,6DAA6D,oDAAoD,8CAA8C,6MAA6M,QAAQ,8IAA8I,QAAQ,kFAAkF,uEAAuE,qCAAqC,gEAAgE,sDAAsD,aAAa,kDAAkD,kFAAkF,wDAAwD,6CAA6C,8BAA8B,aAAa,kDAAkD,qCAAqC,+EAA+E,iBAAiB,sEAAsE,2DAA2D,aAAa,yLAAyL,oDAAoD,0HAA0H,aAAa,wCAAwC,mEAAmE,aAAa,wDAAwD,yEAAyE,UAAU,kFAAkF,gCAAgC,aAAa,kDAAkD,8NAA8N,aAAa,4EAA4E,OAAO,6BAA6B,2BAA2B,kEAAkE,0CAA0C,uEAAuE,aAAa,2FAA2F,OAAO,0EAA0E,0GAA0G,4EAA4E,mDAAmD,qDAAqD,qCAAqC,+BAA+B,wBAAwB,OAAO,mFAAmF,uFAAuF,8HAA8H,qBAAqB,iBAAiB,0HAA0H,aAAa,gHAAgH,wCAAwC,iEAAiE,oDAAoD,qDAAqD,sEAAsE,iBAAiB,aAAa,yCAAyC,wCAAwC,aAAa,6CAA6C,4CAA4C,aAAa,+BAA+B,ogBAAogB,OAAO,wFAAwF,OAAO,q6CAAq6C,6BAA6B,wEAAwE,kEAAkE,qBAAqB,gCAAgC,uEAAuE,0EAA0E,qBAAqB,iBAAiB,iEAAiE,6BAA6B,wLAAwL,6DAA6D,6EAA6E,iBAAiB,aAAa,WAAW,EAAE,uDAAuD,qCAAqC,aAAa,oEAAoE,mDAAmD,+CAA+C,4CAA4C,gDAAgD,iCAAiC,yEAAyE,oEAAoE,4BAA4B,4BAA4B,2DAA2D,kEAAkE,yCAAyC,gDAAgD,oDAAoD,+GAA+G,+BAA+B,gEAAgE,qBAAqB,iBAAiB,sBAAsB,2HAA2H,iBAAiB,aAAa,gDAAgD,kCAAkC,wDAAwD,kDAAkD,6CAA6C,6CAA6C,oEAAoE,gEAAgE,2CAA2C,mCAAmC,gLAAgL,sFAAsF,+EAA+E,4CAA4C,iBAAiB,sBAAsB,+BAA+B,8HAA8H,qBAAqB,iBAAiB,aAAa,2BAA2B,mCAAmC,kCAAkC,iCAAiC,wFAAwF,oDAAoD,iBAAiB,sBAAsB,2CAA2C,mDAAmD,iBAAiB,6DAA6D,4DAA4D,aAAa,kBAAkB,4GAA4G,8EAA8E,oEAAoE,4FAA4F,EAAE,aAAa,wFAAwF,qDAAqD,+CAA+C,SAAS,gCAAgC,yBAAyB,uBAAuB,2BAA2B,6EAA6E,0EAA0E,gDAAgD,aAAa,EAAE,SAAS,qBAAqB,qDAAqD,sIAAsI,cAAc,SAAS,4BAA4B,6KAA6K,iCAAiC,8HAA8H,mDAAmD,sDAAsD,+BAA+B,uCAAuC,oDAAoD,yBAAyB,qBAAqB,wOAAwO,+DAA+D,sCAAsC,kDAAkD,sDAAsD,yCAAyC,wFAAwF,gDAAgD,iBAAiB,EAAE,6DAA6D,uEAAuE,6CAA6C,wEAAwE,yEAAyE,qBAAqB,iBAAiB,EAAE,qFAAqF,0EAA0E,yDAAyD,+DAA+D,8FAA8F,yEAAyE,qBAAqB,iBAAiB,EAAE,oFAAoF,yDAAyD,+BAA+B,uCAAuC,uEAAuE,yBAAyB,qBAAqB,0FAA0F,8DAA8D,qBAAqB,EAAE,6OAA6O,kHAAkH,iEAAiE,qBAAqB,GAAG,sCAAsC,wFAAwF,oDAAoD,yEAAyE,+DAA+D,6DAA6D,qBAAqB,EAAE,iBAAiB,EAAE,iCAAiC,aAAa,yCAAyC,OAAO,+BAA+B,cAAc,+BAA+B,OAAO,6GAA6G,2DAA2D,+EAA+E,uFAAuF,wBAAwB,qBAAqB,EAAE,mFAAmF,2DAA2D,wDAAwD,8CAA8C,iBAAiB,kDAAkD,iKAAiK,MAAM,iBAAiB,0CAA0C,qGAAqG,aAAa,yCAAyC,OAAO,gCAAgC,OAAO,uDAAuD,8CAA8C,aAAa,iFAAiF,eAAe,wCAAwC,OAAO,gCAAgC,MAAM,kFAAkF,wGAAwG,uDAAuD,iDAAiD,+BAA+B,+BAA+B,mDAAmD,qBAAqB,2CAA2C,iBAAiB,2DAA2D,gDAAgD,+BAA+B,uBAAuB,OAAO,uEAAuE,iBAAiB,iCAAiC,qBAAqB,OAAO,2DAA2D,iDAAiD,yCAAyC,+DAA+D,EAAE,qBAAqB,iBAAiB,kCAAkC,aAAa,UAAU,qFAAqF,uDAAuD,6CAA6C,0DAA0D,0DAA0D,8DAA8D,sCAAsC,aAAa,oEAAoE,4DAA4D,8CAA8C,oDAAoD,8CAA8C,wNAAwN,4DAA4D,OAAO,iCAAiC,OAAO,gCAAgC,OAAO,2BAA2B,OAAO,4GAA4G,wBAAwB,0HAA0H,oCAAoC,8DAA8D,OAAO,0CAA0C,0DAA0D,+DAA+D,SAAS,2BAA2B,iGAAiG,eAAe,mKAAmK,eAAe,mFAAmF,2CAA2C,+BAA+B,oBAAoB,OAAO,oDAAoD,oCAAoC,qBAAqB,iBAAiB,6BAA6B,aAAa,uCAAuC,OAAO,+BAA+B,OAAO,oHAAoH,wBAAwB,qIAAqI,yFAAyF,wEAAwE,iBAAiB,2BAA2B,kEAAkE,iBAAiB,kDAAkD,wCAAwC,2CAA2C,wDAAwD,+BAA+B,oBAAoB,OAAO,qDAAqD,0JAA0J,iDAAiD,6DAA6D,sGAAsG,oLAAoL,sCAAsC,6KAA6K,qBAAqB,iBAAiB,gDAAgD,oCAAoC,+DAA+D,kCAAkC,iBAAiB,QAAQ,aAAa,oFAAoF,kDAAkD,sCAAsC,uFAAuF,0DAA0D,+IAA+I,qDAAqD,kDAAkD,qCAAqC,kDAAkD,0CAA0C,aAAa,yCAAyC,OAAO,6BAA6B,gCAAgC,uDAAuD,kDAAkD,aAAa,mDAAmD,2CAA2C,+BAA+B,oBAAoB,OAAO,oDAAoD,0CAA0C,qBAAqB,iBAAiB,aAAa,yFAAyF,OAAO,4BAA4B,eAAe,4EAA4E,uDAAuD,aAAa,4EAA4E,OAAO,6BAA6B,eAAe,yDAAyD,oDAAoD,aAAa,qEAAqE,iCAAiC,sCAAsC,iBAAiB,yBAAyB,6CAA6C,+BAA+B,oBAAoB,OAAO,kEAAkE,sDAAsD,2CAA2C,iBAAiB,uHAAuH,aAAa,+FAA+F,yBAAyB,4BAA4B,QAAQ,8BAA8B,MAAM,6JAA6J,8BAA8B,0EAA0E,kCAAkC,kCAAkC,kDAAkD,iBAAiB,QAAQ,aAAa,yCAAyC,sBAAsB,6BAA6B,eAAe,yDAAyD,+CAA+C,kGAAkG,iBAAiB,2BAA2B,uEAAuE,iBAAiB,aAAa,wQAAwQ,kCAAkC,kEAAkE,2CAA2C,iDAAiD,sQAAsQ,0DAA0D,4EAA4E,SAAS,+BAA+B,aAAa,oEAAoE,6IAA6I,gDAAgD,iCAAiC,qCAAqC,4BAA4B,aAAa,6CAA6C,sCAAsC,mCAAmC,aAAa,2CAA2C,6BAA6B,qBAAqB,OAAO,0CAA0C,gDAAgD,uDAAuD,2DAA2D,iCAAiC,wBAAwB,OAAO,oDAAoD,wDAAwD,4MAA4M,qBAAqB,gEAAgE,wCAAwC,wBAAwB,QAAQ,yDAAyD,iOAAiO,yBAAyB,qBAAqB,iBAAiB,aAAa,qEAAqE,wBAAwB,SAAS,0EAA0E,4BAA4B,yCAAyC,yCAAyC,6BAA6B,uBAAuB,UAAU,sDAAsD,0DAA0D,4EAA4E,0CAA0C,4DAA4D,2BAA2B,4BAA4B,0BAA0B,6FAA6F,aAAa,4BAA4B,SAAS,uFAAuF,OAAO,4BAA4B,+BAA+B,wDAAwD,8BAA8B,uFAAuF,qNAAqN,aAAa,0BAA0B,uDAAuD,8CAA8C,oDAAoD,sCAAsC,6CAA6C,qCAAqC,+TAA+T,EAAE,iBAAiB,kDAAkD,8DAA8D,sCAAsC,6CAA6C,uLAAuL,EAAE,yBAAyB,qBAAqB,EAAE,iBAAiB,gKAAgK,+CAA+C,8BAA8B,aAAa,EAAE,UAAU,aAAa,oEAAoE,iHAAiH,oDAAoD,6CAA6C,2CAA2C,gCAAgC,OAAO,wBAAwB,MAAM,8BAA8B,eAAe,6DAA6D,uCAAuC,OAAO,oEAAoE,uCAAuC,cAAc,gFAAgF,wBAAwB,kDAAkD,gIAAgI,aAAa,kBAAkB,oCAAoC,aAAa,qCAAqC,eAAe,4CAA4C,SAAS,8BAA8B,0GAA0G,iCAAiC,yDAAyD,sCAAsC,2BAA2B,gCAAgC,iBAAiB,oDAAoD,mDAAmD,qDAAqD,8BAA8B,8BAA8B,iDAAiD,+BAA+B,uBAAuB,OAAO,sGAAsG,iCAAiC,qBAAqB,sGAAsG,0DAA0D,6CAA6C,6CAA6C,iBAAiB,wDAAwD,0DAA0D,iBAAiB,+IAA+I,aAAa,yCAAyC,gBAAgB,8BAA8B,QAAQ,sDAAsD,kDAAkD,iDAAiD,wDAAwD,iCAAiC,iBAAiB,iEAAiE,SAAS,OAAO,uGAAuG,iCAAiC,qBAAqB,0DAA0D,4DAA4D,+EAA+E,4GAA4G,wCAAwC,OAAO,uEAAuE,iDAAiD,6BAA6B,yBAAyB,oCAAoC,qBAAqB,iBAAiB,6BAA6B,aAAa,4DAA4D,kDAAkD,sDAAsD,6BAA6B,4CAA4C,iBAAiB,mCAAmC,6CAA6C,iBAAiB,mEAAmE,gEAAgE,iDAAiD,+BAA+B,uBAAuB,OAAO,uGAAuG,iCAAiC,qBAAqB,0DAA0D,4DAA4D,mCAAmC,qBAAqB,OAAO,iFAAiF,qBAAqB,mCAAmC,wCAAwC,OAAO,uCAAuC,yBAAyB,OAAO,6FAA6F,yBAAyB,qBAAqB,iBAAiB,kCAAkC,kCAAkC,yKAAyK,aAAa,UAAU,kCAAkC,aAAa,oEAAoE,0DAA0D,6BAA6B,wCAAwC,6CAA6C,SAAS,0CAA0C,sBAAsB,8BAA8B,uBAAuB,6BAA6B,aAAa,6BAA6B,mBAAmB,OAAO,mCAAmC,iEAAiE,uBAAuB,aAAa,6DAA6D,6EAA6E,iEAAiE,aAAa,6BAA6B,SAAS,8BAA8B,sCAAsC,aAAa,oEAAoE,sJAAsJ,6CAA6C,sDAAsD,4CAA4C,oDAAoD,uDAAuD,oEAAoE,qCAAqC,SAAS,oDAAoD,+BAA+B,qCAAqC,OAAO,4CAA4C,uCAAuC,OAAO,0CAA0C,uCAAuC,yDAAyD,yDAAyD,2BAA2B,uBAAuB,SAAS,4BAA4B,mGAAmG,eAAe,kJAAkJ,OAAO,yBAAyB,OAAO,yBAAyB,OAAO,6BAA6B,OAAO,sHAAsH,mEAAmE,kCAAkC,aAAa,0CAA0C,iCAAiC,0FAA0F,kCAAkC,aAAa,yCAAyC,OAAO,yBAAyB,OAAO,yBAAyB,OAAO,6BAA6B,OAAO,+EAA+E,sDAAsD,uEAAuE,aAAa,mGAAmG,OAAO,yBAAyB,OAAO,yBAAyB,OAAO,6BAA6B,OAAO,+EAA+E,kDAAkD,wDAAwD,+IAA+I,qDAAqD,0CAA0C,aAAa,0EAA0E,eAAe,4EAA4E,mCAAmC,2BAA2B,iBAAiB,2CAA2C,8CAA8C,aAAa,yCAAyC,OAAO,0DAA0D,iCAAiC,iDAAiD,gCAAgC,gDAAgD,6DAA6D,qBAAqB,gDAAgD,6DAA6D,qBAAqB,iBAAiB,kCAAkC,8CAA8C,aAAa,0HAA0H,iGAAiG,uDAAuD,wDAAwD,kCAAkC,aAAa,uCAAuC,+DAA+D,aAAa,qCAAqC,uCAAuC,aAAa,0CAA0C,cAAc,0DAA0D,2CAA2C,aAAa,kDAAkD,6IAA6I,wDAAwD,4DAA4D,8CAA8C,0CAA0C,kFAAkF,8FAA8F,gDAAgD,6JAA6J,mDAAmD,0CAA0C,aAAa,4JAA4J,wDAAwD,wDAAwD,uDAAuD,gDAAgD,gDAAgD,8IAA8I,uCAAuC,gEAAgE,qEAAqE,iBAAiB,sBAAsB,6CAA6C,iBAAiB,0CAA0C,aAAa,0CAA0C,iCAAiC,qDAAqD,sCAAsC,aAAa,2FAA2F,iCAAiC,8DAA8D,0DAA0D,oDAAoD,4BAA4B,aAAa,8GAA8G,eAAe,6BAA6B,eAAe,yDAAyD,+CAA+C,oIAAoI,aAAa,iGAAiG,eAAe,8BAA8B,eAAe,0DAA0D,qDAAqD,6IAA6I,aAAa,gEAAgE,+BAA+B,iJAAiJ,+BAA+B,mJAAmJ,+BAA+B,2DAA2D,+EAA+E,aAAa,yCAAyC,OAAO,2DAA2D,0HAA0H,4EAA4E,8BAA8B,gBAAgB,UAAU,4CAA4C,kEAAkE,iDAAiD,6EAA6E,0FAA0F,SAAS,gCAAgC,aAAa,oEAAoE,uEAAuE,4CAA4C,mCAAmC,k3BAAk3B,uBAAuB,mBAAmB,OAAO,2BAA2B,sBAAsB,OAAO,wCAAwC,gDAAgD,iDAAiD,+CAA+C,aAAa,SAAS,yCAAyC,sCAAsC,mIAAmI,gCAAgC,oHAAoH,qBAAqB,8BAA8B,aAAa,UAAU,aAAa,oEAAoE,oDAAoD,iCAAiC,+LAA+L,2CAA2C,wDAAwD,4DAA4D,+BAA+B,2CAA2C,gDAAgD,0DAA0D,iBAAiB,aAAa,EAAE,UAAU,aAAa,oEAAoE,oDAAoD,6BAA6B,kIAAkI,2CAA2C,wDAAwD,wDAAwD,+BAA+B,2CAA2C,wCAAwC,wCAAwC,iBAAiB,aAAa,EAAE,UAAU,aAAa,oEAAoE,sEAAsE,4CAA4C,mCAAmC,qVAAqV,yCAAyC,sCAAsC,yDAAyD,SAAS,OAAO,uDAAuD,wDAAwD,oHAAoH,EAAE,qBAAqB,iBAAiB,aAAa,UAAU,eAAe,oEAAoE,iEAAiE,8CAA8C,iDAAiD,kDAAkD,4FAA4F,2MAA2M,2BAA2B,iBAAiB,yCAAyC,kCAAkC,mDAAmD,2BAA2B,iBAAiB,gSAAgS,gDAAgD,8EAA8E,iDAAiD,8EAA8E,kDAAkD,qBAAqB,0BAA0B,4GAA4G,6CAA6C,qBAAqB,iBAAiB,sBAAsB,gDAAgD,wDAAwD,iBAAiB,uJAAuJ,aAAa,oCAAoC,wDAAwD,qCAAqC,uCAAuC,aAAa,qCAAqC,wDAAwD,qCAAqC,aAAa,kEAAkE,yDAAyD,uCAAuC,oEAAoE,uCAAuC,+BAA+B,qBAAqB,mEAAmE,qDAAqD,2EAA2E,qBAAqB,+CAA+C,+CAA+C,uDAAuD,gCAAgC,2bAA2b,iCAAiC,wJAAwJ,yFAAyF,EAAE,wFAAwF,qEAAqE,6DAA6D,6CAA6C,mEAAmE,yEAAyE,4EAA4E,mFAAmF,gFAAgF,wFAAwF,mFAAmF,yCAAyC,2EAA2E,EAAE,wDAAwD,6CAA6C,oQAAoQ,EAAE,0BAA0B,sDAAsD,6CAA6C,qPAAqP,EAAE,0BAA0B,mOAAmO,qCAAqC,qBAAqB,wCAAwC,iBAAiB,EAAE,aAAa,SAAS,EAAE,aAAa,oEAAoE,yHAAyH,kDAAkD,oDAAoD,8CAA8C,4CAA4C,oDAAoD,iDAAiD,mDAAmD,4KAA4K,2CAA2C,aAAa,+BAA+B,SAAS,yFAAyF,+BAA+B,mCAAmC,sDAAsD,qDAAqD,kDAAkD,iBAAiB,EAAE,kDAAkD,kDAAkD,+BAA+B,qBAAqB,mDAAmD,wCAAwC,2CAA2C,uCAAuC,qBAAqB,8BAA8B,+BAA+B,qBAAqB,oCAAoC,6KAA6K,oCAAoC,kIAAkI,yBAAyB,uBAAuB,6EAA6E,iDAAiD,8DAA8D,iBAAiB,EAAE,aAAa,SAAS,4DAA4D,0EAA0E,wEAAwE,yGAAyG,iBAAiB,EAAE,aAAa,EAAE,SAAS,yFAAyF,4BAA4B,uBAAuB,QAAQ,mEAAmE,8CAA8C,uCAAuC,+CAA+C,qGAAqG,uCAAuC,OAAO,EAAE,wBAAwB,0EAA0E,oCAAoC,uCAAuC,+BAA+B,sEAAsE,uCAAuC,QAAQ,kFAAkF,qPAAqP,QAAQ,+CAA+C,SAAS,+BAA+B,kHAAkH,+DAA+D,mNAAmN,gDAAgD,mCAAmC,wBAAwB,iFAAiF,mDAAmD,qBAAqB,iBAAiB,EAAE,2DAA2D,yCAAyC,wCAAwC,oCAAoC,6FAA6F,iHAAiH,6CAA6C,iBAAiB,sBAAsB,4EAA4E,iBAAiB,oCAAoC,oEAAoE,yEAAyE,0DAA0D,iEAAiE,qDAAqD,8DAA8D,yhBAAyhB,mEAAmE,gCAAgC,8DAA8D,qBAAqB,EAAE,kDAAkD,mGAAmG,qFAAqF,6FAA6F,6EAA6E,uFAAuF,6EAA6E,qFAAqF,kCAAkC,2FAA2F,gEAAgE,kXAAkX,0CAA0C,yDAAyD,yBAAyB,qBAAqB,4EAA4E,oFAAoF,0EAA0E,0DAA0D,mCAAmC,yBAAyB,2EAA2E,oCAAoC,sFAAsF,yBAAyB,GAAG,yCAAyC,0DAA0D,OAAO,+EAA+E,wCAAwC,kGAAkG,6BAA6B,GAAG,yBAAyB,qBAAqB,EAAE,uDAAuD,4DAA4D,gDAAgD,uFAAuF,qEAAqE,gFAAgF,yEAAyE,mdAAmd,iEAAiE,4FAA4F,mGAAmG,qDAAqD,oCAAoC,wWAAwW,0CAA0C,4QAA4Q,iOAAiO,EAAE,gDAAgD,qBAAqB,wKAAwK,oEAAoE,qBAAqB,0BAA0B,oFAAoF,yHAAyH,+OAA+O,0BAA0B,qBAAqB,+FAA+F,8CAA8C,gJAAgJ,wDAAwD,sBAAsB,6CAA6C,iBAAiB,EAAE,sEAAsE,oFAAoF,0DAA0D,aAAa,oCAAoC,uCAAuC,2CAA2C,0CAA0C,aAAa,0EAA0E,yDAAyD,kDAAkD,0DAA0D,6EAA6E,oDAAoD,6IAA6I,sDAAsD,6CAA6C,kCAAkC,6GAA6G,+DAA+D,kCAAkC,iBAAiB,qEAAqE,gDAAgD,yEAAyE,0EAA0E,kFAAkF,GAAG,iBAAiB,QAAQ,qFAAqF,gDAAgD,wFAAwF,0EAA0E,uIAAuI,GAAG,8CAA8C,+CAA+C,gDAAgD,sDAAsD,qDAAqD,+EAA+E,6BAA6B,yBAAyB,EAAE,qBAAqB,iBAAiB,QAAQ,mEAAmE,uJAAuJ,iBAAiB,EAAE,aAAa,UAAU,mCAAmC,aAAa,oEAAoE,yHAAyH,4CAA4C,gDAAgD,wDAAwD,uHAAuH,8BAA8B,6BAA6B,+BAA+B,mDAAmD,uCAAuC,SAAS,+CAA+C,uCAAuC,eAAe,yCAAyC,uCAAuC,OAAO,0CAA0C,kGAAkG,yDAAyD,yDAAyD,qDAAqD,2DAA2D,iDAAiD,kCAAkC,wCAAwC,SAAS,0LAA0L,qDAAqD,cAAc,8QAA8Q,eAAe,4NAA4N,OAAO,6BAA6B,OAAO,mDAAmD,OAAO,kDAAkD,OAAO,mHAAmH,0EAA0E,qEAAqE,GAAG,uJAAuJ,EAAE,4CAA4C,uCAAuC,iBAAiB,kGAAkG,yDAAyD,yDAAyD,qDAAqD,iBAAiB,kGAAkG,2DAA2D,iDAAiD,iBAAiB,cAAc,0CAA0C,sDAAsD,sDAAsD,kDAAkD,wDAAwD,8CAA8C,cAAc,0CAA0C,6CAA6C,sCAAsC,cAAc,6CAA6C,sCAAsC,cAAc,SAAS,iDAAiD,mCAAmC,iDAAiD,uBAAuB,aAAa,gCAAgC,8BAA8B,6LAA6L,4BAA4B,4BAA4B,sCAAsC,aAAa,SAAS,iCAAiC,kFAAkF,uBAAuB,aAAa,+CAA+C,uBAAuB,aAAa,oEAAoE,uBAAuB,aAAa,gCAAgC,8BAA8B,iCAAiC,+BAA+B,gCAAgC,8BAA8B,0BAA0B,wBAAwB,2EAA2E,4DAA4D,SAAS,+BAA+B,mCAAmC,SAAS,kCAAkC,uIAAuI,uBAAuB,aAAa,mMAAmM,gEAAgE,SAAS,6BAA6B,kEAAkE,uBAAuB,aAAa,6DAA6D,8DAA8D,SAAS,qDAAqD,8EAA8E,kPAAkP,gEAAgE,aAAa,SAAS,6DAA6D,oDAAoD,qGAAqG,SAAS,0CAA0C,aAAa,oEAAoE,sDAAsD,kCAAkC,yDAAyD,yCAAyC,6CAA6C,aAAa,6DAA6D,yCAAyC,8CAA8C,yCAAyC,8CAA8C,iBAAiB,aAAa,oDAAoD,mDAAmD,aAAa,UAAU,iCAAiC,6CAA6C,EAAE,SAAS,kCAAkC,qKAAqK,sEAAsE,uEAAuE,2BAA2B,UAAU,4CAA4C,aAAa,+CAA+C,gCAAgC,uEAAuE,OAAO,kCAAkC,uBAAuB,qGAAqG,+CAA+C,sCAAsC,yBAAyB,yBAAyB,2BAA2B,UAAU,uEAAuE,OAAO,kCAAkC,uBAAuB,yCAAyC,OAAO,uCAAuC,OAAO,iCAAiC,eAAe,iGAAiG,+CAA+C,qDAAqD,sCAAsC,qCAAqC,2EAA2E,iCAAiC,4BAA4B,iDAAiD,wDAAwD,+HAA+H,aAAa,0DAA0D,0CAA0C,0GAA0G,yDAAyD,kCAAkC,kCAAkC,6BAA6B,UAAU,kCAAkC,aAAa,+CAA+C,gCAAgC,qCAAqC,4CAA4C,iNAAiN,+DAA+D,uJAAuJ,uMAAuM,UAAU,kCAAkC,aAAa,oEAAoE,oDAAoD,kDAAkD,+CAA+C,sDAAsD,OAAO,6CAA6C,OAAO,2BAA2B,OAAO,2BAA2B,OAAO,6BAA6B,OAAO,gCAAgC,OAAO,qDAAqD,oGAAoG,+BAA+B,kEAAkE,qDAAqD,0CAA0C,4CAA4C,8DAA8D,6CAA6C,+BAA+B,qBAAqB,2JAA2J,8GAA8G,wGAAwG,uPAAuP,wFAAwF,8DAA8D,0DAA0D,yBAAyB,EAAE,qBAAqB,iBAAiB,cAAc,SAAS,EAAE,aAAa,+CAA+C,oCAAoC,gCAAgC,0BAA0B,wBAAwB,OAAO,2BAA2B,OAAO,yHAAyH,8CAA8C,0CAA0C,oCAAoC,mDAAmD,6DAA6D,uCAAuC,uCAAuC,uDAAuD,uCAAuC,aAAa,+BAA+B,gCAAgC,qDAAqD,4DAA4D,uKAAuK,iBAAiB,gGAAgG,sCAAsC,6CAA6C,wEAAwE,wEAAwE,sCAAsC,oCAAoC,yCAAyC,0FAA0F,uCAAuC,kDAAkD,aAAa,sBAAsB,2FAA2F,UAAU,sCAAsC,aAAa,oEAAoE,oDAAoD,+CAA+C,wCAAwC,oEAAoE,qDAAqD,+EAA+E,2BAA2B,iBAAiB,4CAA4C,8EAA8E,4DAA4D,yDAAyD,iGAAiG,kEAAkE,yDAAyD,6DAA6D,gUAAgU,uCAAuC,6BAA6B,uEAAuE,yEAAyE,kEAAkE,uDAAuD,wHAAwH,EAAE,yBAAyB,EAAE,qBAAqB,iBAAiB,EAAE,sIAAsI,0CAA0C,iDAAiD,+DAA+D,+DAA+D,oDAAoD,iBAAiB,EAAE,mDAAmD,aAAa,EAAE,UAAU,aAAa,+CAA+C,mDAAmD,oEAAoE,yDAAyD,8EAA8E,kEAAkE,oIAAoI,mDAAmD,8FAA8F,EAAE,aAAa,EAAE,UAAU,aAAa,oEAAoE,oDAAoD,oDAAoD,iCAAiC,yBAAyB,OAAO,iHAAiH,iCAAiC,iCAAiC,kDAAkD,uDAAuD,qIAAqI,oEAAoE,wCAAwC,wDAAwD,qBAAqB,iBAAiB,EAAE,aAAa,EAAE,+DAA+D,2DAA2D,4BAA4B,mCAAmC,oCAAoC,qDAAqD,+BAA+B,SAAS,OAAO,gEAAgE,gEAAgE,kDAAkD,iBAAiB,2BAA2B,8CAA8C,iCAAiC,iBAAiB,mDAAmD,iCAAiC,iBAAiB,uDAAuD,uCAAuC,iBAAiB,sBAAsB,iCAAiC,iBAAiB,gDAAgD,aAAa,EAAE,SAAS,+CAA+C,kCAAkC,oEAAoE,iEAAiE,gGAAgG,gFAAgF,aAAa,EAAE,oEAAoE,6GAA6G,qDAAqD,qBAAqB,gFAAgF,iCAAiC,uBAAuB,OAAO,yEAAyE,iBAAiB,oEAAoE,uBAAuB,OAAO,2DAA2D,6FAA6F,iEAAiE,6DAA6D,iBAAiB,aAAa,EAAE,UAAU,aAAa,oEAAoE,oDAAoD,8CAA8C,2DAA2D,6DAA6D,+CAA+C,8CAA8C,iBAAiB,aAAa,EAAE,2DAA2D,mEAAmE,qIAAqI,aAAa,EAAE,UAAU,aAAa,oEAAoE,qDAAqD,mCAAmC,iCAAiC,iCAAiC,2DAA2D,2DAA2D,aAAa,oEAAoE,0DAA0D,4CAA4C,4CAA4C,4CAA4C,gDAAgD,8CAA8C,+CAA+C,6CAA6C,iDAAiD,0JAA0J,8BAA8B,yEAAyE,mmEAAmmE,uSAAuS,iCAAiC,yZAAyZ,0EAA0E,yBAAyB,oCAAoC,yCAAyC,yBAAyB,qBAAqB,iBAAiB,yBAAyB,6BAA6B,8NAA8N,wLAAwL,qBAAqB,iBAAiB,8BAA8B,6EAA6E,mMAAmM,uMAAuM,qBAAqB,gCAAgC,oHAAoH,4JAA4J,qBAAqB,iBAAiB,6BAA6B,6BAA6B,yqBAAyqB,gCAAgC,uBAAuB,iBAAiB,goEAAgoE,gJAAgJ,0BAA0B,+LAA+L,aAAa,iHAAiH,qEAAqE,0CAA0C,0CAA0C,mDAAmD,uEAAuE,iSAAiS,aAAa,2CAA2C,qCAAqC,aAAa,iEAAiE,OAAO,iCAAiC,QAAQ,sFAAsF,0CAA0C,wDAAwD,uHAAuH,mDAAmD,kEAAkE,aAAa,4HAA4H,OAAO,kCAAkC,OAAO,gEAAgE,wFAAwF,+EAA+E,0EAA0E,gCAAgC,aAAa,+DAA+D,OAAO,aAAa,iUAAiU,iEAAiE,yEAAyE,OAAO,2EAA2E,2DAA2D,aAAa,0CAA0C,OAAO,2BAA2B,OAAO,8DAA8D,kfAAkf,OAAO,qEAAqE,oCAAoC,2EAA2E,oFAAoF,OAAO,qEAAqE,iBAAiB,iDAAiD,oCAAoC,wEAAwE,iBAAiB,+BAA+B,aAAa,yCAAyC,sCAAsC,aAAa,yCAAyC,8BAA8B,0EAA0E,2HAA2H,sDAAsD,wHAAwH,0CAA0C,iBAAiB,aAAa,SAAS,EAAE,gCAAgC,OAAO,kEAAkE,qLAAqL,+DAA+D,2CAA2C,+CAA+C,2EAA2E,oCAAoC,aAAa,EAAE,6CAA6C,4CAA4C,yCAAyC,aAAa,0DAA0D,gCAAgC,aAAa,4EAA4E,8BAA8B,aAAa,4IAA4I,SAAS,mHAAmH,uDAAuD,qCAAqC,uBAAuB,aAAa,oCAAoC,+BAA+B,wDAAwD,mDAAmD,oDAAoD,wIAAwI,0CAA0C,iBAAiB,aAAa,EAAE,oCAAoC,yDAAyD,EAAE,uDAAuD,aAAa,4BAA4B,SAAS,eAAe,oEAAoE,gIAAgI,4CAA4C,2CAA2C,gDAAgD,0DAA0D,yFAAyF,OAAO,wBAAwB,yBAAyB,sEAAsE,qCAAqC,OAAO,kDAAkD,iFAAiF,OAAO,kEAAkE,gGAAgG,OAAO,mEAAmE,uCAAuC,kCAAkC,0EAA0E,6RAA6R,OAAO,uEAAuE,uCAAuC,0CAA0C,sEAAsE,uCAAuC,0CAA0C,wEAAwE,uCAAuC,yBAAyB,4EAA4E,UAAU,gCAAgC,gHAAgH,QAAQ,+DAA+D,0CAA0C,aAAa,2IAA2I,MAAM,EAAE,qEAAqE,MAAM,EAAE,sEAAsE,MAAM,EAAE,oEAAoE,yCAAyC,oCAAoC,MAAM,oBAAoB,kDAAkD,gBAAgB,uDAAuD,QAAQ,+DAA+D,QAAQ,iEAAiE,SAAS,+HAA+H,OAAO,gFAAgF,oDAAoD,iCAAiC,iCAAiC,mCAAmC,iBAAiB,0CAA0C,+CAA+C,+BAA+B,gBAAgB,iBAAiB,0DAA0D,gEAAgE,uCAAuC,oFAAoF,iCAAiC,0CAA0C,OAAO,+DAA+D,iBAAiB,kEAAkE,aAAa,+GAA+G,OAAO,yEAAyE,+BAA+B,mCAAmC,+BAA+B,0BAA0B,OAAO,iDAAiD,0DAA0D,gDAAgD,8CAA8C,qBAAqB,iBAAiB,yCAAyC,aAAa,0CAA0C,OAAO,2BAA2B,kCAAkC,uDAAuD,0CAA0C,gCAAgC,iBAAiB,gFAAgF,SAAS,OAAO,0DAA0D,8BAA8B,mCAAmC,qBAAqB,iBAAiB,aAAa,yCAAyC,kCAAkC,6BAA6B,QAAQ,sDAAsD,oCAAoC,gCAAgC,iBAAiB,gFAAgF,SAAS,OAAO,yDAAyD,8BAA8B,mCAAmC,qBAAqB,iBAAiB,aAAa,yCAAyC,QAAQ,mDAAmD,0CAA0C,uGAAuG,mCAAmC,gEAAgE,8BAA8B,yCAAyC,2CAA2C,iBAAiB,oCAAoC,iCAAiC,aAAa,yCAAyC,cAAc,+EAA+E,OAAO,kEAAkE,8CAA8C,yFAAyF,aAAa,yCAAyC,OAAO,8BAA8B,SAAS,8EAA8E,0HAA0H,aAAa,0CAA0C,OAAO,0DAA0D,wEAAwE,aAAa,yCAAyC,OAAO,+BAA+B,2BAA2B,sDAAsD,yCAAyC,2BAA2B,iBAAiB,6CAA6C,2EAA2E,sDAAsD,qGAAqG,aAAa,0CAA0C,2BAA2B,uDAAuD,qEAAqE,aAAa,uFAAuF,+BAA+B,mDAAmD,EAAE,6DAA6D,uHAAuH,aAAa,oHAAoH,2FAA2F,aAAa,gEAAgE,OAAO,qDAAqD,sEAAsE,aAAa,gEAAgE,OAAO,+CAA+C,gEAAgE,aAAa,UAAU,iGAAiG,2BAA2B,6BAA6B,eAAe,wEAAwE,qCAAqC,kCAAkC,6DAA6D,uCAAuC,yBAAyB,6DAA6D,uJAAuJ,yCAAyC,4CAA4C,sFAAsF,2BAA2B,sDAAsD,sFAAsF,kCAAkC,qGAAqG,4EAA4E,aAAa,EAAE,SAAS,4BAA4B,qMAAqM,MAAM,EAAE,qEAAqE,MAAM,EAAE,sEAAsE,MAAM,EAAE,oEAAoE,yCAAyC,oCAAoC,MAAM,oBAAoB,kDAAkD,gBAAgB,uDAAuD,QAAQ,+DAA+D,QAAQ,iEAAiE,SAAS,0BAA0B,OAAO,iFAAiF,yDAAyD,aAAa,yCAAyC,OAAO,kCAAkC,kCAAkC,qEAAqE,gEAAgE,6CAA6C,aAAa,yCAAyC,OAAO,6BAA6B,kCAAkC,2DAA2D,qDAAqD,aAAa,8LAA8L,qCAAqC,wCAAwC,qDAAqD,SAAS,OAAO,4CAA4C,iBAAiB,qDAAqD,SAAS,OAAO,6DAA6D,iBAAiB,aAAa,wGAAwG,6CAA6C,aAAa,UAAU,qDAAqD,+FAA+F,yHAAyH,mDAAmD,+CAA+C,MAAM,uCAAuC,2BAA2B,6BAA6B,eAAe,2IAA2I,2DAA2D,8BAA8B,2BAA2B,uCAAuC,6DAA6D,2CAA2C,oFAAoF,0CAA0C,+DAA+D,mHAAmH,yCAAyC,mDAAmD,+BAA+B,mCAAmC,qBAAqB,OAAO,0DAA0D,qBAAqB,iBAAiB,aAAa,gDAAgD,oDAAoD,cAAc,cAAc,iBAAiB,EAAE,uDAAuD,oCAAoC,wBAAwB,2GAA2G,EAAE,4BAA4B,0BAA0B,UAAU,+MAA+M,2CAA2C,yDAAyD,yCAAyC,4CAA4C,uBAAuB,aAAa,mCAAmC,oCAAoC,SAAS,gCAAgC,aAAa,oEAAoE,4GAA4G,+BAA+B,wCAAwC,6CAA6C,2eAA2e,OAAO,uBAAuB,yBAAyB,gCAAgC,OAAO,wEAAwE,OAAO,yDAAyD,mBAAmB,OAAO,cAAc,eAAe,mCAAmC,+BAA+B,uEAAuE,OAAO,kBAAkB,eAAe,4EAA4E,2CAA2C,wCAAwC,kCAAkC,2BAA2B,yBAAyB,gBAAgB,iCAAiC,cAAc,aAAa,4CAA4C,4CAA4C,sFAAsF,2EAA2E,sFAAsF,iBAAiB,EAAE,eAAe,EAAE,kLAAkL,8NAA8N,oFAAoF,aAAa,EAAE,oHAAoH,SAAS,gDAAgD,mCAAmC,+FAA+F,eAAe,2CAA2C,yCAAyC,aAAa,kBAAkB,2IAA2I,aAAa,uBAAuB,SAAS,8CAA8C,kDAAkD,uBAAuB,SAAS,oDAAoD,yWAAyW,oFAAoF,aAAa,EAAE,uBAAuB,SAAS,iGAAiG,OAAO,kEAAkE,yBAAyB,qDAAqD,2CAA2C,+HAA+H,SAAS,qCAAqC,4CAA4C,SAAS,kDAAkD,iCAAiC,mDAAmD,0DAA0D,aAAa,EAAE,SAAS,8DAA8D,6CAA6C,uCAAuC,qCAAqC,+BAA+B,kDAAkD,2DAA2D,aAAa,kFAAkF,SAAS,oCAAoC,aAAa,oEAAoE,oDAAoD,wBAAwB,mEAAmE,sNAAsN,+DAA+D,wDAAwD,kEAAkE,gCAAgC,kBAAkB,qBAAqB,8DAA8D,gGAAgG,gCAAgC,kBAAkB,qBAAqB,iBAAiB,aAAa,2GAA2G,8BAA8B,8BAA8B,2CAA2C,4CAA4C,iBAAiB,sCAAsC,aAAa,yDAAyD,8DAA8D,2DAA2D,aAAa,4IAA4I,sCAAsC,gCAAgC,uDAAuD,uCAAuC,mLAAmL,EAAE,2CAA2C,iBAAiB,yCAAyC,sCAAsC,aAAa,UAAU,kCAAkC,aAAa,oEAAoE,qDAAqD,8CAA8C,iDAAiD,8CAA8C,kDAAkD,sDAAsD,kDAAkD,6CAA6C,qDAAqD,+BAA+B,kCAAkC,gCAAgC,+BAA+B,iCAAiC,oDAAoD,wDAAwD,8DAA8D,kEAAkE,wBAAwB,oDAAoD,0BAA0B,mEAAmE,2HAA2H,0EAA0E,+BAA+B,wDAAwD,0EAA0E,wDAAwD,mEAAmE,0EAA0E,yBAAyB,iDAAiD,0EAA0E,wCAAwC,oDAAoD,0EAA0E,+CAA+C,oDAAoD,gJAAgJ,0EAA0E,QAAQ,kDAAkD,aAAa,4HAA4H,uDAAuD,2FAA2F,EAAE,8DAA8D,2BAA2B,iBAAiB,iDAAiD,+BAA+B,uCAAuC,mFAAmF,0DAA0D,wDAAwD,4CAA4C,gDAAgD,0LAA0L,qKAAqK,2BAA2B,4EAA4E,yFAAyF,oYAAoY,6CAA6C,uEAAuE,aAAa,gHAAgH,0DAA0D,sCAAsC,oKAAoK,qDAAqD,mDAAmD,iBAAiB,8EAA8E,wCAAwC,aAAa,+HAA+H,0DAA0D,4CAA4C,sGAAsG,kDAAkD,+CAA+C,0CAA0C,yNAAyN,qnBAAqnB,uGAAuG,2CAA2C,4CAA4C,0BAA0B,4KAA4K,wGAAwG,gNAAgN,2DAA2D,wEAAwE,4EAA4E,yBAAyB,EAAE,qBAAqB,iLAAiL,mSAAmS,qBAAqB,6CAA6C,qGAAqG,qBAAqB,gEAAgE,4FAA4F,0FAA0F,0FAA0F,0TAA0T,qBAAqB,iBAAiB,kDAAkD,wDAAwD,4EAA4E,gEAAgE,mDAAmD,2EAA2E,yBAAyB,EAAE,qBAAqB,EAAE,yCAAyC,iBAAiB,4CAA4C,wDAAwD,iDAAiD,8DAA8D,yBAAyB,EAAE,qBAAqB,EAAE,0DAA0D,4CAA4C,6KAA6K,qBAAqB,EAAE,iBAAiB,aAAa,gJAAgJ,oDAAoD,2BAA2B,iBAAiB,4EAA4E,gEAAgE,+DAA+D,4HAA4H,yDAAyD,2CAA2C,mCAAmC,yBAAyB,iDAAiD,kFAAkF,2EAA2E,wVAAwV,4CAA4C,wQAAwQ,6CAA6C,uFAAuF,iCAAiC,6EAA6E,QAAQ,aAAa,yBAAyB,8BAA8B,4CAA4C,4CAA4C,2DAA2D,oUAAoU,oEAAoE,6BAA6B,qGAAqG,sCAAsC,YAAY,mCAAmC,4CAA4C,4CAA4C,6CAA6C,WAAW,kCAAkC,yBAAyB,oFAAoF,qBAAqB,EAAE,iBAAiB,EAAE,6GAA6G,yDAAyD,yFAAyF,wCAAwC,sCAAsC,mCAAmC,yBAAyB,4DAA4D,2CAA2C,sEAAsE,8DAA8D,6BAA6B,yBAAyB,8BAA8B,2CAA2C,+DAA+D,YAAY,sDAAsD,6BAA6B,gDAAgD,0DAA0D,gDAAgD,YAAY,6BAA6B,sNAAsN,gDAAgD,YAAY,6BAA6B,yBAAyB,0EAA0E,qBAAqB,EAAE,iBAAiB,QAAQ,4CAA4C,2EAA2E,8CAA8C,qDAAqD,qBAAqB,qCAAqC,aAAa,sGAAsG,kDAAkD,uEAAuE,oFAAoF,oEAAoE,kEAAkE,oEAAoE,iBAAiB,qFAAqF,iEAAiE,8CAA8C,iBAAiB,EAAE,aAAa,mGAAmG,kDAAkD,iCAAiC,yCAAyC,sCAAsC,iBAAiB,aAAa,+FAA+F,uCAAuC,2JAA2J,0HAA0H,kCAAkC,+BAA+B,qBAAqB,wDAAwD,wCAAwC,+BAA+B,qBAAqB,+CAA+C,4KAA4K,8KAA8K,qBAAqB,EAAE,iBAAiB,aAAa,+GAA+G,uCAAuC,oDAAoD,0HAA0H,kCAAkC,+BAA+B,qBAAqB,wDAAwD,wCAAwC,+BAA+B,qBAAqB,+JAA+J,iEAAiE,wHAAwH,2CAA2C,8FAA8F,+DAA+D,uDAAuD,6DAA6D,6CAA6C,+CAA+C,8KAA8K,4IAA4I,qBAAqB,EAAE,iBAAiB,aAAa,4GAA4G,maAAma,uEAAuE,iBAAiB,QAAQ,2DAA2D,yCAAyC,+CAA+C,yEAAyE,qBAAqB,iBAAiB,QAAQ,uCAAuC,4EAA4E,uCAAuC,+BAA+B,qBAAqB,6EAA6E,wCAAwC,+BAA+B,qBAAqB,iDAAiD,sDAAsD,qDAAqD,qBAAqB,0BAA0B,yDAAyD,yDAAyD,yBAAyB,wDAAwD,4FAA4F,mEAAmE,sFAAsF,kEAAkE,yBAAyB,qBAAqB,iBAAiB,aAAa,gIAAgI,kCAAkC,sGAAsG,gCAAgC,qOAAqO,wCAAwC,sCAAsC,uCAAuC,qBAAqB,iBAAiB,4KAA4K,2CAA2C,sDAAsD,6HAA6H,WAAW,iDAAiD,WAAW,EAAE,qBAAqB,iBAAiB,aAAa,0FAA0F,wCAAwC,yEAAyE,gDAAgD,sCAAsC,8DAA8D,aAAa,qCAAqC,wCAAwC,aAAa,wGAAwG,yCAAyC,mMAAmM,EAAE,aAAa,wGAAwG,yCAAyC,mMAAmM,EAAE,aAAa,+DAA+D,OAAO,yCAAyC,OAAO,0CAA0C,OAAO,qCAAqC,wBAAwB,OAAO,+CAA+C,OAAO,6DAA6D,OAAO,6FAA6F,+BAA+B,8DAA8D,qCAAqC,wCAAwC,mBAAmB,4EAA4E,8FAA8F,qEAAqE,+CAA+C,oVAAoV,0CAA0C,kDAAkD,yBAAyB,8BAA8B,yCAAyC,oDAAoD,qBAAqB,iBAAiB,QAAQ,oCAAoC,aAAa,WAAW,EAAE,2EAA2E,oBAAoB,4CAA4C,SAAS,0SAA0S,kEAAkE,uOAAuO,aAAa,4NAA4N,wDAAwD,uBAAuB,aAAa,+CAA+C,+CAA+C,qDAAqD,qDAAqD,wDAAwD,+DAA+D,2DAA2D,qDAAqD,uEAAuE,iFAAiF,sPAAsP,2BAA2B,uBAAuB,aAAa,qCAAqC,qIAAqI,4CAA4C,8CAA8C,+CAA+C,6BAA6B,aAAa,6FAA6F,kFAAkF,yEAAyE,6EAA6E,yDAAyD,aAAa,2BAA2B,sMAAsM,iFAAiF,yDAAyD,+BAA+B,iDAAiD,EAAE,gFAAgF,oFAAoF,+CAA+C,uCAAuC,yBAAyB,yCAAyC,2BAA2B,0CAA0C,0EAA0E,2KAA2K,kEAAkE,0BAA0B,qBAAqB,4DAA4D,mEAAmE,qBAAqB,+CAA+C,6DAA6D,iBAAiB,EAAE,gCAAgC,aAAa,sDAAsD,sFAAsF,8DAA8D,8EAA8E,8EAA8E,yCAAyC,kCAAkC,wKAAwK,EAAE,sEAAsE,kDAAkD,uCAAuC,mBAAmB,8EAA8E,wGAAwG,oDAAoD,kEAAkE,iBAAiB,EAAE,qCAAqC,aAAa,iDAAiD,qCAAqC,6QAA6Q,qDAAqD,kDAAkD,qBAAqB,iBAAiB,sBAAsB,uNAAuN,iBAAiB,aAAa,4GAA4G,oDAAoD,uRAAuR,+DAA+D,0EAA0E,mEAAmE,iBAAiB,wNAAwN,4NAA4N,aAAa,+GAA+G,+DAA+D,2EAA2E,kEAAkE,iRAAiR,8EAA8E,0FAA0F,uEAAuE,iFAAiF,oCAAoC,iBAAiB,kDAAkD,+KAA+K,WAAW,sDAAsD,iBAAiB,sBAAsB,sCAAsC,iBAAiB,aAAa,iEAAiE,0FAA0F,2DAA2D,gCAAgC,6GAA6G,4EAA4E,iBAAiB,yIAAyI,wCAAwC,wBAAwB,EAAE,8CAA8C,0DAA0D,2EAA2E,iBAAiB,iHAAiH,aAAa,gFAAgF,uDAAuD,6IAA6I,iBAAiB,aAAa,wOAAwO,uDAAuD,qDAAqD,oFAAoF,uCAAuC,uCAAuC,wQAAwQ,oEAAoE,2DAA2D,4DAA4D,qBAAqB,0HAA0H,SAAS,kIAAkI,mDAAmD,iBAAiB,sIAAsI,aAAa,SAAS,geAAge,+CAA+C,iCAAiC,SAAS,eAAe,oEAAoE,uDAAuD,6CAA6C,4CAA4C,8CAA8C,+BAA+B,yBAAyB,6BAA6B,+CAA+C,4DAA4D,+BAA+B,4DAA4D,6CAA6C,SAAS,kCAAkC,+GAA+G,+DAA+D,2CAA2C,wCAAwC,0DAA0D,2BAA2B,iBAAiB,4EAA4E,iFAAiF,4EAA4E,qCAAqC,0BAA0B,wNAAwN,2BAA2B,kHAAkH,uJAAuJ,yEAAyE,0GAA0G,sFAAsF,aAAa,oLAAoL,2CAA2C,MAAM,0BAA0B,2DAA2D,oEAAoE,+KAA+K,mEAAmE,iDAAiD,yCAAyC,EAAE,iBAAiB,aAAa,iMAAiM,iEAAiE,gEAAgE,kEAAkE,8FAA8F,wDAAwD,wDAAwD,qDAAqD,QAAQ,OAAO,6CAA6C,6CAA6C,+CAA+C,yCAAyC,6HAA6H,iEAAiE,mDAAmD,kCAAkC,qBAAqB,oDAAoD,gCAAgC,yOAAyO,yIAAyI,oQAAoQ,8IAA8I,EAAE,uCAAuC,+DAA+D,oDAAoD,iBAAiB,aAAa,0FAA0F,uCAAuC,aAAa,UAAU,4EAA4E,yOAAyO,6FAA6F,0DAA0D,0BAA0B,SAAS,mGAAmG,4BAA4B,kVAAkV,kIAAkI,uGAAuG,SAAS,sCAAsC,aAAa,oEAAoE,qDAAqD,gCAAgC,OAAO,yCAAyC,OAAO,qCAAqC,OAAO,6BAA6B,SAAS,oJAAoJ,mBAAmB,4BAA4B,QAAQ,WAAW,UAAU,aAAa,yCAAyC,UAAU,oCAAoC,0CAA0C,+BAA+B,iCAAiC,6BAA6B,sBAAsB,oSAAoS,uBAAuB,8BAA8B,OAAO,kCAAkC,OAAO,sCAAsC,OAAO,qCAAqC,OAAO,8CAA8C,QAAQ,mIAAmI,qDAAqD,6CAA6C,uCAAuC,oFAAoF,iDAAiD,uCAAuC,kCAAkC,qBAAqB,+CAA+C,qCAAqC,qBAAqB,2CAA2C,4DAA4D,iEAAiE,sBAAsB,kCAAkC,iBAAiB,4MAA4M,SAAS,uEAAuE,4CAA4C,gCAAgC,iBAAiB,kIAAkI,+CAA+C,2DAA2D,SAAS,OAAO,8CAA8C,iGAAiG,qBAAqB,kCAAkC,uCAAuC,gCAAgC,qCAAqC,+CAA+C,6CAA6C,2DAA2D,yBAAyB,qBAAqB,iBAAiB,cAAc,SAAS,4BAA4B,wBAAwB,aAAa,oEAAoE,4FAA4F,8CAA8C,oCAAoC,4HAA4H,yBAAyB,wBAAwB,OAAO,oCAAoC,2CAA2C,QAAQ,SAAS,8CAA8C,gDAAgD,0CAA0C,6DAA6D,uDAAuD,uDAAuD,2DAA2D,+EAA+E,uCAAuC,iEAAiE,6CAA6C,8JAA8J,yBAAyB,6DAA6D,qBAAqB,iBAAiB,aAAa,UAAU,eAAe,oEAAoE,6DAA6D,8CAA8C,4CAA4C,qCAAqC,qDAAqD,6DAA6D,+BAA+B,wDAAwD,qEAAqE,wDAAwD,qCAAqC,mFAAmF,yCAAyC,2BAA2B,iBAAiB,4FAA4F,iFAAiF,iBAAiB,EAAE,yIAAyI,4LAA4L,aAAa,EAAE,UAAU,6JAA6J,4CAA4C,8CAA8C,uGAAuG,uBAAuB,aAAa,wEAAwE,6DAA6D,+IAA+I,2GAA2G,wFAAwF,8BAA8B,gDAAgD,yIAAyI,yFAAyF,aAAa,uDAAuD,mDAAmD,wDAAwD,8DAA8D,oGAAoG,aAAa,kBAAkB,6JAA6J,qHAAqH,uPAAuP,gKAAgK,6MAA6M,qBAAqB,iBAAiB,EAAE,aAAa,SAAS,iIAAiI,0CAA0C,oBAAoB,6FAA6F,yJAAyJ,qGAAqG,oEAAoE,4EAA4E,6DAA6D,aAAa,EAAE,6BAA6B,SAAS,4CAA4C,+DAA+D,0BAA0B,6EAA6E,uFAAuF,sCAAsC,kFAAkF,iBAAiB,iCAAiC,mEAAmE,iBAAiB,+BAA+B,aAAa,SAAS,+EAA+E,sJAAsJ,SAAS,wDAAwD,sCAAsC,oDAAoD,6BAA6B,aAAa,SAAS,mIAAmI,wDAAwD,uBAAuB,aAAa,mXAAmX,iCAAiC,uBAAuB,aAAa,yDAAyD,uDAAuD,2DAA2D,0FAA0F,0FAA0F,mEAAmE,uBAAuB,qIAAqI,6HAA6H,+CAA+C,gCAAgC,oFAAoF,kBAAkB,6CAA6C,aAAa,mDAAmD,wDAAwD,6BAA6B,SAAS,8jBAA8jB,8KAA8K,uDAAuD,yBAAyB,QAAQ,SAAS,sFAAsF,+CAA+C,WAAW,4BAA4B,+CAA+C,2FAA2F,qRAAqR,8EAA8E,aAAa,kCAAkC,SAAS,eAAe,oEAAoE,4FAA4F,8CAA8C,yDAAyD,+BAA+B,uCAAuC,iDAAiD,gCAAgC,OAAO,0BAA0B,OAAO,qDAAqD,OAAO,2FAA2F,gBAAgB,8JAA8J,gBAAgB,6EAA6E,iBAAiB,yDAAyD,iCAAiC,KAAK,yDAAyD,uBAAuB,+QAA+Q,uBAAuB,kUAAkU,QAAQ,8FAA8F,iBAAiB,2QAA2Q,4BAA4B,oaAAoa,qDAAqD,yCAAyC,+DAA+D,OAAO,+EAA+E,+DAA+D,OAAO,kDAAkD,+DAA+D,OAAO,8DAA8D,8DAA8D,SAAS,4EAA4E,6DAA6D,6DAA6D,SAAS,wEAAwE,6DAA6D,SAAS,8EAA8E,8DAA8D,SAAS,6EAA6E,kDAAkD,iDAAiD,mDAAmD,aAAa,oDAAoD,qUAAqU,aAAa,kBAAkB,4HAA4H,iDAAiD,aAAa,UAAU,qCAAqC,2FAA2F,4DAA4D,sDAAsD,aAAa,2CAA2C,8DAA8D,aAAa,UAAU,+DAA+D,sBAAsB,oJAAoJ,SAAS,gEAAgE,iDAAiD,sKAAsK,sFAAsF,uEAAuE,6BAA6B,mEAAmE,8MAA8M,sFAAsF,kGAAkG,6FAA6F,6BAA6B,mDAAmD,iBAAiB,4BAA4B,mDAAmD,sMAAsM,qBAAqB,0GAA0G,0EAA0E,6CAA6C,wNAAwN,yBAAyB,sCAAsC,qBAAqB,uDAAuD,aAAa,gFAAgF,uDAAuD,aAAa,wFAAwF,6DAA6D,aAAa,uFAAuF,mEAAmE,aAAa,mFAAmF,yDAAyD,aAAa,0BAA0B,8GAA8G,wBAAwB,+DAA+D,iEAAiE,qDAAqD,oDAAoD,qBAAqB,mDAAmD,qDAAqD,iEAAiE,8DAA8D,6BAA6B,yBAAyB,qBAAqB,iBAAiB,0BAA0B,kJAAkJ,0EAA0E,6CAA6C,yEAAyE,yBAAyB,sCAAsC,qBAAqB,uDAAuD,aAAa,4BAA4B,iHAAiH,UAAU,yDAAyD,iDAAiD,gDAAgD,8DAA8D,0CAA0C,qLAAqL,uDAAuD,iBAAiB,aAAa,EAAE,SAAS,+DAA+D,kFAAkF,2CAA2C,4DAA4D,qDAAqD,0CAA0C,aAAa,EAAE,oFAAoF,mCAAmC,gDAAgD,qDAAqD,sDAAsD,6FAA6F,qBAAqB,EAAE,iBAAiB,sBAAsB,qHAAqH,iBAAiB,oEAAoE,aAAa,8KAA8K,QAAQ,OAAO,wCAAwC,sDAAsD,qCAAqC,iBAAiB,aAAa,SAAS,iEAAiE,2CAA2C,+BAA+B,4CAA4C,2CAA2C,sCAAsC,iBAAiB,EAAE,aAAa,sCAAsC,uCAAuC,aAAa,mCAAmC,qBAAqB,sJAAsJ,oHAAoH,aAAa,uDAAuD,SAAS,8DAA8D,oBAAoB,+DAA+D,yDAAyD,sHAAsH,iBAAiB,wDAAwD,SAAS,6CAA6C,4CAA4C,qIAAqI,SAAS,gDAAgD,qDAAqD,iEAAiE,cAAc,SAAS,8CAA8C,4CAA4C,0MAA0M,SAAS,iCAAiC,yCAAyC,SAAS,4CAA4C,oBAAoB,+CAA+C,yFAAyF,iBAAiB,kGAAkG,sEAAsE,yCAAyC,+FAA+F,qBAAqB,kCAAkC,iBAAiB,gDAAgD,SAAS,8CAA8C,yCAAyC,iDAAiD,8CAA8C,gFAAgF,kDAAkD,4CAA4C,mDAAmD,iBAAiB,aAAa,SAAS,6DAA6D,0CAA0C,8CAA8C,iFAAiF,+CAA+C,iBAAiB,EAAE,aAAa,6BAA6B,SAAS,+FAA+F,wCAAwC,8EAA8E,aAAa,4CAA4C,sDAAsD,sFAAsF,yCAAyC,0FAA0F,iBAAiB,aAAa,2CAA2C,kIAAkI,wFAAwF,aAAa,2CAA2C,wGAAwG,eAAe,gEAAgE,iCAAiC,iEAAiE,sCAAsC,aAAa,EAAE,+BAA+B,UAAU,6GAA6G,2CAA2C,UAAU,qGAAqG,6DAA6D,UAAU,kNAAkN,0CAA0C,uDAAuD,aAAa,kBAAkB,+CAA+C,aAAa,UAAU,0EAA0E,0BAA0B,mIAAmI,2CAA2C,kEAAkE,4DAA4D,6EAA6E,aAAa,EAAE,6BAA6B,UAAU,kDAAkD,OAAO,wBAAwB,MAAM,8JAA8J,yBAAyB,0BAA0B,oEAAoE,qDAAqD,sDAAsD,qCAAqC,iBAAiB,aAAa,EAAE,4CAA4C,UAAU,4JAA4J,eAAe,+BAA+B,iCAAiC,yHAAyH,eAAe,mGAAmG,wCAAwC,+BAA+B,yDAAyD,qCAAqC,iBAAiB,EAAE,oCAAoC,aAAa,mDAAmD,kDAAkD,aAAa,kBAAkB,0BAA0B,aAAa,wDAAwD,+PAA+P,aAAa,EAAE,iCAAiC,UAAU,kMAAkM,OAAO,+BAA+B,OAAO,gCAAgC,QAAQ,kFAAkF,mKAAmK,UAAU,gCAAgC,OAAO,yBAAyB,eAAe,aAAa,iCAAiC,qFAAqF,QAAQ,mDAAmD,OAAO,6GAA6G,0BAA0B,+BAA+B,kGAAkG,SAAS,OAAO,oDAAoD,yCAAyC,qhBAAqhB,iCAAiC,qBAAqB,4EAA4E,iBAAiB,aAAa,qDAAqD,SAAS,OAAO,yCAAyC,8CAA8C,wCAAwC,iCAAiC,oDAAoD,uEAAuE,qCAAqC,yBAAyB,qBAAqB,wDAAwD,uEAAuE,qCAAqC,yBAAyB,qBAAqB,uLAAuL,iCAAiC,qBAAqB,6EAA6E,6EAA6E,iBAAiB,aAAa,2CAA2C,mLAAmL,aAAa,mDAAmD,mDAAmD,mCAAmC,iCAAiC,sCAAsC,iBAAiB,aAAa,YAAY,4CAA4C,0CAA0C,SAAS,yCAAyC,eAAe,oEAAoE,oDAAoD,gDAAgD,6CAA6C,8CAA8C,kDAAkD,8CAA8C,iCAAiC,+BAA+B,mDAAmD,4CAA4C,+BAA+B,yEAAyE,iEAAiE,qEAAqE,yEAAyE,0FAA0F,0DAA0D,uCAAuC,6BAA6B,wDAAwD,qEAAqE,+CAA+C,+CAA+C,sDAAsD,kIAAkI,kHAAkH,kBAAkB,qDAAqD,oLAAoL,+JAA+J,kGAAkG,iFAAiF,+IAA+I,yDAAyD,mEAAmE,sDAAsD,iYAAiY,mDAAmD,oEAAoE,sCAAsC,qBAAqB,mCAAmC,gLAAgL,+IAA+I,8QAA8Q,gLAAgL,uDAAuD,4DAA4D,uGAAuG,gEAAgE,2FAA2F,kFAAkF,qEAAqE,sEAAsE,qBAAqB,EAAE,iBAAiB,iEAAiE,2JAA2J,wDAAwD,qXAAqX,aAAa,EAAE,SAAS,kSAAkS,kCAAkC,wBAAwB,OAAO,2BAA2B,OAAO,gDAAgD,OAAO,uCAAuC,QAAQ,gCAAgC,OAAO,gFAAgF,sBAAsB,uBAAuB,qCAAqC,uBAAuB,aAAa,gDAAgD,qCAAqC,uCAAuC,uFAAuF,+DAA+D,iEAAiE,kEAAkE,sEAAsE,0DAA0D,+DAA+D,4CAA4C,8BAA8B,iJAAiJ,QAAQ,2DAA2D,2EAA2E,6CAA6C,kIAAkI,yCAAyC,uBAAuB,aAAa,0BAA0B,qEAAqE,wDAAwD,gCAAgC,sDAAsD,yBAAyB,wDAAwD,SAAS,GAAG,4CAA4C,kCAAkC,mDAAmD,4EAA4E,uFAAuF,wBAAwB,iCAAiC,iBAAiB,+EAA+E,2DAA2D,6EAA6E,sEAAsE,8CAA8C,oCAAoC,iBAAiB,aAAa,+BAA+B,wEAAwE,aAAa,kCAAkC,6EAA6E,mFAAmF,wCAAwC,iBAAiB,aAAa,wDAAwD,SAAS,OAAO,4EAA4E,aAAa,SAAS,gMAAgM,mDAAmD,uCAAuC,wEAAwE,0FAA0F,gGAAgG,gDAAgD,aAAa,uHAAuH,0CAA0C,aAAa,EAAE,0CAA0C,qEAAqE,mCAAmC,gDAAgD,aAAa,kGAAkG,mCAAmC,gDAAgD,aAAa,8FAA8F,SAAS,OAAO,6EAA6E,yCAAyC,IAAI,8FAA8F,WAAW,EAAE,aAAa,kCAAkC,uDAAuD,iBAAiB,QAAQ,wCAAwC,aAAa,+CAA+C,4BAA4B,4BAA4B,QAAQ,kCAAkC,SAAS,uLAAuL,gGAAgG,2BAA2B,aAAa,2DAA2D,6CAA6C,kCAAkC,+FAA+F,QAAQ,OAAO,gIAAgI,6DAA6D,oCAAoC,iCAAiC,iBAAiB,aAAa,sKAAsK,yBAAyB,SAAS,qFAAqF,0BAA0B,mDAAmD,qIAAqI,4NAA4N,iBAAiB,EAAE,aAAa,gCAAgC,SAAS,sGAAsG,qDAAqD,kDAAkD,SAAS,OAAO,8CAA8C,aAAa,yWAAyW,2BAA2B,4FAA4F,wCAAwC,aAAa,wDAAwD,uJAAuJ,0DAA0D,aAAa,iDAAiD,uDAAuD,iDAAiD,0DAA0D,qEAAqE,qEAAqE,iBAAiB,EAAE,aAAa,sBAAsB,kCAAkC,SAAS,qKAAqK,4BAA4B,mCAAmC,qDAAqD,SAAS,OAAO,+CAA+C,2BAA2B,uDAAuD,uDAAuD,iBAAiB,aAAa,mDAAmD,4DAA4D,kMAAkM,SAAS,oKAAoK,0fAA0f,0CAA0C,gCAAgC,yCAAyC,6CAA6C,+FAA+F,kEAAkE,qDAAqD,+BAA+B,gDAAgD,YAAY,OAAO,kCAAkC,oCAAoC,0GAA0G,sGAAsG,iLAAiL,gFAAgF,2FAA2F,mGAAmG,kFAAkF,gCAAgC,iDAAiD,aAAa,oDAAoD,kDAAkD,SAAS,wKAAwK,2KAA2K,OAAO,gEAAgE,uDAAuD,mCAAmC,aAAa,yBAAyB,4DAA4D,qEAAqE,oDAAoD,kDAAkD,+CAA+C,wDAAwD,SAAS,OAAO,kDAAkD,iBAAiB,wDAAwD,0CAA0C,uCAAuC,iBAAiB,4CAA4C,uHAAuH,qEAAqE,uGAAuG,iIAAiI,6FAA6F,oCAAoC,aAAa,mDAAmD,uDAAuD,uEAAuE,SAAS,mIAAmI,2BAA2B,wBAAwB,8BAA8B,aAAa,qCAAqC,YAAY,8BAA8B,uCAAuC,aAAa,oOAAoO,gDAAgD,4BAA4B,uCAAuC,aAAa,8HAA8H,kCAAkC,0BAA0B,kDAAkD,gDAAgD,gDAAgD,uCAAuC,aAAa,sBAAsB,kIAAkI,SAAS,mPAAmP,8CAA8C,2DAA2D,sFAAsF,kKAAkK,uBAAuB,aAAa,8BAA8B,mZAAmZ,QAAQ,gQAAgQ,8DAA8D,mFAAmF,aAAa,EAAE,SAAS,+CAA+C,6FAA6F,SAAS,kCAAkC,aAAa,oEAAoE,qDAAqD,4CAA4C,mCAAmC,iCAAiC,mCAAmC,8DAA8D,sHAAsH,yDAAyD,yDAAyD,2DAA2D,yDAAyD,yDAAyD,gGAAgG,qDAAqD,EAAE,aAAa,oEAAoE,mBAAmB,+CAA+C,4CAA4C,+CAA+C,4CAA4C,gDAAgD,iEAAiE,sEAAsE,0EAA0E,gEAAgE,0GAA0G,gDAAgD,kBAAkB,uEAAuE,+CAA+C,aAAa,+CAA+C,uEAAuE,uEAAuE,+CAA+C,aAAa,wDAAwD,gFAAgF,qFAAqF,aAAa,2DAA2D,+DAA+D,8DAA8D,gCAAgC,uCAAuC,8FAA8F,iBAAiB,2DAA2D,mIAAmI,sEAAsE,uEAAuE,0EAA0E,4CAA4C,0EAA0E,8DAA8D,yBAAyB,qCAAqC,qBAAqB,EAAE,sEAAsE,sKAAsK,6BAA6B,yGAAyG,4EAA4E,gEAAgE,qCAAqC,qBAAqB,EAAE,oDAAoD,oDAAoD,wJAAwJ,qBAAqB,iBAAiB,aAAa,0CAA0C,0BAA0B,kDAAkD,4CAA4C,aAAa,0CAA0C,yBAAyB,qDAAqD,gDAAgD,aAAa,0CAA0C,yBAAyB,2DAA2D,4CAA4C,aAAa,oIAAoI,0CAA0C,kDAAkD,yEAAyE,wEAAwE,4EAA4E,4EAA4E,oCAAoC,gEAAgE,gEAAgE,mEAAmE,yCAAyC,4EAA4E,qBAAqB,gCAAgC,iBAAiB,sBAAsB,oHAAoH,iBAAiB,aAAa,mDAAmD,+FAA+F,wHAAwH,qDAAqD,YAAY,iBAAiB,EAAE,+DAA+D,oDAAoD,wDAAwD,mFAAmF,kEAAkE,iBAAiB,EAAE,aAAa,yCAAyC,wCAAwC,aAAa,6CAA6C,4CAA4C,aAAa,gDAAgD,sOAAsO,aAAa,+BAA+B,ogBAAogB,uDAAuD,kFAAkF,+VAA+V,gXAAgX,6BAA6B,+DAA+D,iCAAiC,iBAAiB,ygBAAygB,6BAA6B,yEAAyE,EAAE,sBAAsB,gCAAgC,uDAAuD,iBAAiB,+BAA+B,8BAA8B,iCAAiC,iBAAiB,+BAA+B,6BAA6B,qKAAqK,iCAAiC,iBAAiB,aAAa,SAAS,EAAE,uCAAuC,aAAa,oEAAoE,mDAAmD,6CAA6C,gDAAgD,0DAA0D,uDAAuD,4CAA4C,2DAA2D,qFAAqF,4CAA4C,2BAA2B,kBAAkB,OAAO,+JAA+J,aAAa,oCAAoC,gCAAgC,8BAA8B,2BAA2B,kBAAkB,OAAO,oCAAoC,yCAAyC,yCAAyC,mIAAmI,0CAA0C,yFAAyF,gCAAgC,iBAAiB,aAAa,+DAA+D,yBAAyB,qEAAqE,oFAAoF,aAAa,kBAAkB,0FAA0F,yPAAyP,+DAA+D,yCAAyC,aAAa,4DAA4D,wDAAwD,2DAA2D,wBAAwB,6HAA6H,+BAA+B,6BAA6B,+BAA+B,aAAa,EAAE,mHAAmH,2BAA2B,UAAU,aAAa,oEAAoE,mBAAmB,sLAAsL,0HAA0H,+BAA+B,SAAS,gGAAgG,QAAQ,4DAA4D,0DAA0D,QAAQ,qFAAqF,uCAAuC,uCAAuC,mEAAmE,uCAAuC,uCAAuC,mEAAmE,uCAAuC,gDAAgD,sEAAsE,qCAAqC,gDAAgD,sEAAsE,uCAAuC,yBAAyB,6DAA6D,uCAAuC,yBAAyB,iEAAiE,UAAU,2CAA2C,6BAA6B,OAAO,6CAA6C,gEAAgE,QAAQ,wDAAwD,kCAAkC,UAAU,yDAAyD,OAAO,sBAAsB,OAAO,8EAA8E,wCAAwC,4CAA4C,kDAAkD,2BAA2B,2EAA2E,iBAAiB,uBAAuB,aAAa,iDAAiD,kCAAkC,oCAAoC,mDAAmD,wBAAwB,UAAU,kEAAkE,OAAO,8BAA8B,+BAA+B,qEAAqE,0DAA0D,sCAAsC,UAAU,wDAAwD,OAAO,uBAAuB,+BAA+B,2DAA2D,uDAAuD,UAAU,yDAAyD,6CAA6C,sBAAsB,6CAA6C,sBAAsB,OAAO,mCAAmC,+BAA+B,sEAAsE,0CAA0C,0CAA0C,iEAAiE,oCAAoC,aAAa,yCAAyC,oCAAoC,aAAa,0CAA0C,mDAAmD,aAAa,wCAAwC,mDAAmD,aAAa,6BAA6B,uBAAuB,aAAa,4CAA4C,sDAAsD,uBAAuB,aAAa,qDAAqD,kCAAkC,mCAAmC,uCAAuC,sCAAsC,aAAa,gCAAgC,4BAA4B,oCAAoC,aAAa,oCAAoC,iCAAiC,0BAA0B,UAAU,kEAAkE,OAAO,8BAA8B,+BAA+B,qEAAqE,8DAA8D,sCAAsC,UAAU,sEAAsE,sCAAsC,uBAAuB,sCAAsC,uBAAuB,+BAA+B,2DAA2D,qCAAqC,2BAA2B,aAAa,qCAAqC,2BAA2B,aAAa,4CAA4C,mCAAmC,+CAA+C,aAAa,OAAO,6FAA6F,aAAa,UAAU,6DAA6D,SAAS,uBAAuB,EAAE,2EAA2E,mCAAmC,mCAAmC,2BAA2B,SAAS,OAAO,8CAA8C,kDAAkD,iBAAiB,aAAa,UAAU,6DAA6D,SAAS,uBAAuB,EAAE,2EAA2E,mCAAmC,mCAAmC,2BAA2B,SAAS,OAAO,sKAAsK,kDAAkD,iBAAiB,aAAa,UAAU,iEAAiE,SAAS,sBAAsB,+BAA+B,6BAA6B,OAAO,wDAAwD,EAAE,iIAAiI,+CAA+C,uEAAuE,aAAa,6BAA6B,uBAAuB,aAAa,0HAA0H,6BAA6B,uBAAuB,OAAO,gDAAgD,aAAa,sDAAsD,uBAAuB,aAAa,sCAAsC,kCAAkC,gDAAgD,kDAAkD,iCAAiC,kBAAkB,OAAO,qCAAqC,uGAAuG,+CAA+C,uEAAuE,iFAAiF,yBAAyB,8CAA8C,mDAAmD,qBAAqB,iBAAiB,aAAa,UAAU,oIAAoI,eAAe,mEAAmE,iCAAiC,yCAAyC,mCAAmC,mCAAmC,iDAAiD,SAAS,OAAO,wCAAwC,aAAa,+CAA+C,SAAS,OAAO,yDAAyD,aAAa,kDAAkD,4DAA4D,8EAA8E,aAAa,EAAE,2EAA2E,SAAS,OAAO,wCAAwC,aAAa,mDAAmD,SAAS,OAAO,6DAA6D,aAAa,UAAU,iCAAiC,0BAA0B,mDAAmD,kDAAkD,mCAAmC,mCAAmC,2BAA2B,kBAAkB,OAAO,+DAA+D,aAAa,2BAA2B,kBAAkB,OAAO,iCAAiC,mEAAmE,aAAa,yBAAyB,UAAU,gHAAgH,oCAAoC,OAAO,yDAAyD,sCAAsC,uCAAuC,4CAA4C,oCAAoC,uCAAuC,6CAA6C,oCAAoC,uCAAuC,0CAA0C,qCAAqC,0BAA0B,0CAA0C,uCAAuC,OAAO,+EAA+E,SAAS,4BAA4B,yEAAyE,OAAO,gDAAgD,yCAAyC,aAAa,0CAA0C,OAAO,kDAAkD,2CAA2C,aAAa,yCAAyC,OAAO,kDAAkD,4CAA4C,aAAa,yCAAyC,OAAO,+BAA+B,2BAA2B,sDAAsD,yCAAyC,2BAA2B,iBAAiB,2CAA2C,wEAAwE,kDAAkD,aAAa,UAAU,6FAA6F,+BAA+B,sBAAsB,+BAA+B,sBAAsB,OAAO,oEAAoE,qEAAqE,+BAA+B,2CAA2C,sEAAsE,+BAA+B,2CAA2C,kEAAkE,SAAS,gCAAgC,OAAO,2BAA2B,2BAA2B,+DAA+D,qCAAqC,uBAAuB,aAAa,uCAAuC,wEAAwE,8CAA8C,UAAU,yEAAyE,oBAAoB,8CAA8C,QAAQ,iGAAiG,OAAO,mEAAmE,wDAAwD,6FAA6F,iBAAiB,iDAAiD,cAAc,+BAA+B,EAAE,6EAA6E,qIAAqI,iBAAiB,iDAAiD,OAAO,gCAAgC,QAAQ,4EAA4E,qGAAqG,iBAAiB,iDAAiD,OAAO,mCAAmC,QAAQ,sFAAsF,wIAAwI,iBAAiB,kDAAkD,OAAO,2DAA2D,kFAAkF,iBAAiB,kDAAkD,uBAAuB,8DAA8D,qFAAqF,iBAAiB,kDAAkD,OAAO,6DAA6D,gFAAgF,iBAAiB,cAAc,UAAU,6EAA6E,+EAA+E,4BAA4B,0BAA0B,iCAAiC,aAAa,oEAAoE,4DAA4D,gDAAgD,sDAAsD,kDAAkD,oDAAoD,gDAAgD,kDAAkD,4CAA4C,mEAAmE,iEAAiE,sDAAsD,iFAAiF,SAAS,kDAAkD,yEAAyE,kDAAkD,8CAA8C,uCAAuC,qEAAqE,wCAAwC,eAAe,8CAA8C,0CAA0C,gDAAgD,0CAA0C,2CAA2C,aAAa,6DAA6D,4DAA4D,4CAA4C,yEAAyE,oDAAoD,8CAA8C,yCAAyC,iDAAiD,wCAAwC,uHAAuH,4CAA4C,iDAAiD,qBAAqB,0BAA0B,8EAA8E,qBAAqB,iBAAiB,6IAA6I,mDAAmD,4CAA4C,2DAA2D,8CAA8C,iDAAiD,oEAAoE,oDAAoD,0DAA0D,+EAA+E,kCAAkC,kFAAkF,iBAAiB,2DAA2D,2DAA2D,yFAAyF,4EAA4E,oCAAoC,mDAAmD,8CAA8C,qDAAqD,qJAAqJ,0DAA0D,qIAAqI,6BAA6B,yBAAyB,mCAAmC,8CAA8C,4DAA4D,6BAA6B,yBAAyB,QAAQ,qBAAqB,8DAA8D,mEAAmE,kEAAkE,gEAAgE,kFAAkF,gDAAgD,wMAAwM,EAAE,yBAAyB,EAAE,mFAAmF,gDAAgD,kJAAkJ,EAAE,yBAAyB,EAAE,qBAAqB,mBAAmB,QAAQ,gIAAgI,8CAA8C,8CAA8C,2DAA2D,wDAAwD,8CAA8C,0DAA0D,uEAAuE,sCAAsC,oDAAoD,yBAAyB,iDAAiD,qCAAqC,gDAAgD,yBAAyB,qEAAqE,6CAA6C,6HAA6H,EAAE,qGAAqG,qBAAqB,0BAA0B,6CAA6C,oEAAoE,EAAE,qBAAqB,iBAAiB,EAAE,4CAA4C,aAAa,qCAAqC,+DAA+D,0CAA0C,aAAa,kFAAkF,iDAAiD,kDAAkD,0DAA0D,4BAA4B,2BAA2B,iBAAiB,yCAAyC,2CAA2C,2DAA2D,oEAAoE,iDAAiD,0CAA0C,oCAAoC,qBAAqB,oDAAoD,gDAAgD,qDAAqD,qEAAqE,yBAAyB,qBAAqB,EAAE,iBAAiB,0DAA0D,oEAAoE,iDAAiD,oDAAoD,kDAAkD,qDAAqD,+DAA+D,yBAAyB,qBAAqB,EAAE,iBAAiB,gEAAgE,oDAAoD,2DAA2D,qBAAqB,EAAE,oDAAoD,2DAA2D,qBAAqB,EAAE,iEAAiE,sDAAsD,6DAA6D,iDAAiD,mCAAmC,yBAAyB,0DAA0D,gEAAgE,gEAAgE,qBAAqB,EAAE,iBAAiB,aAAa,oFAAoF,wDAAwD,gDAAgD,wEAAwE,mEAAmE,gDAAgD,qDAAqD,+DAA+D,yBAAyB,qBAAqB,EAAE,iBAAiB,EAAE,gDAAgD,wEAAwE,mEAAmE,gDAAgD,qDAAqD,+DAA+D,yBAAyB,qBAAqB,EAAE,iBAAiB,EAAE,aAAa,oFAAoF,gCAAgC,kCAAkC,yDAAyD,uDAAuD,oPAAoP,qBAAqB,EAAE,iBAAiB,IAAI,aAAa,wEAAwE,kDAAkD,0DAA0D,uCAAuC,mEAAmE,uDAAuD,yDAAyD,+HAA+H,iBAAiB,EAAE,qEAAqE,yCAAyC,2BAA2B,iBAAiB,2DAA2D,yEAAyE,6EAA6E,6IAA6I,2EAA2E,4CAA4C,iMAAiM,EAAE,qBAAqB,kEAAkE,0FAA0F,4CAA4C,2PAA2P,EAAE,uDAAuD,kGAAkG,sDAAsD,qBAAqB,QAAQ,aAAa,qDAAqD,8CAA8C,iDAAiD,wEAAwE,sDAAsD,6DAA6D,+CAA+C,iBAAiB,EAAE,aAAa,4DAA4D,4DAA4D,+CAA+C,6BAA6B,iBAAiB,4DAA4D,kDAAkD,mEAAmE,iGAAiG,oEAAoE,+CAA+C,aAAa,qDAAqD,0FAA0F,kDAAkD,8CAA8C,aAAa,gDAAgD,8DAA8D,0DAA0D,aAAa,SAAS,EAAE,aAAa,oEAAoE,8GAA8G,iDAAiD,qCAAqC,gDAAgD,SAAS,qCAAqC,8DAA8D,SAAS,wIAAwI,2CAA2C,6CAA6C,SAAS,iDAAiD,gCAAgC,yBAAyB,4EAA4E,+CAA+C,mCAAmC,sCAAsC,iDAAiD,iCAAiC,2TAA2T,6EAA6E,sEAAsE,+BAA+B,qBAAqB,6EAA6E,gEAAgE,2CAA2C,iBAAiB,oDAAoD,yEAAyE,yEAAyE,gDAAgD,+BAA+B,qBAAqB,uCAAuC,gFAAgF,qBAAqB,0BAA0B,4EAA4E,qBAAqB,mEAAmE,2CAA2C,iBAAiB,yCAAyC,oEAAoE,iBAAiB,4BAA4B,wCAAwC,UAAU,oDAAoD,0CAA0C,2DAA2D,+CAA+C,aAAa,QAAQ,UAAU,8CAA8C,mCAAmC,UAAU,oCAAoC,aAAa,oEAAoE,8GAA8G,6CAA6C,2DAA2D,gDAAgD,8CAA8C,4CAA4C,gDAAgD,6DAA6D,oDAAoD,iDAAiD,SAAS,2FAA2F,6DAA6D,+DAA+D,wEAAwE,yDAAyD,uBAAuB,aAAa,gDAAgD,sDAAsD,aAAa,yLAAyL,qCAAqC,gCAAgC,SAAS,uCAAuC,qCAAqC,yCAAyC,EAAE,8CAA8C,wBAAwB,SAAS,uDAAuD,+BAA+B,+BAA+B,gCAAgC,mCAAmC,mCAAmC,mCAAmC,mCAAmC,oCAAoC,wBAAwB,0CAA0C,0CAA0C,aAAa,kBAAkB,uCAAuC,uCAAuC,aAAa,SAAS,4DAA4D,iCAAiC,iEAAiE,6DAA6D,uDAAuD,sFAAsF,uBAAuB,aAAa,+BAA+B,yCAAyC,gCAAgC,uCAAuC,oDAAoD,iBAAiB,+CAA+C,aAAa,uDAAuD,4HAA4H,uBAAuB,aAAa,+CAA+C,0CAA0C,8CAA8C,qDAAqD,mCAAmC,+BAA+B,qDAAqD,gDAAgD,kIAAkI,mFAAmF,aAAa,2BAA2B,iDAAiD,gDAAgD,iIAAiI,iFAAiF,aAAa,kCAAkC,8CAA8C,mCAAmC,8BAA8B,sCAAsC,8CAA8C,uEAAuE,4FAA4F,yFAAyF,iGAAiG,iBAAiB,kFAAkF,kDAAkD,8DAA8D,sDAAsD,uDAAuD,mCAAmC,qCAAqC,qCAAqC,qBAAqB,sFAAsF,yCAAyC,iDAAiD,uEAAuE,gDAAgD,sDAAsD,qBAAqB,qDAAqD,iBAAiB,8CAA8C,kGAAkG,yFAAyF,iGAAiG,iBAAiB,4BAA4B,4BAA4B,2PAA2P,4GAA4G,EAAE,aAAa,SAAS,yDAAyD,6BAA6B,mBAAmB,iCAAiC,8DAA8D,qCAAqC,2DAA2D,SAAS,yCAAyC,sHAAsH,yEAAyE,iDAAiD,yDAAyD,gDAAgD,mCAAmC,qCAAqC,wBAAwB,+CAA+C,aAAa,oBAAoB,6BAA6B,4CAA4C,0CAA0C,EAAE,4BAA4B,wEAAwE,yEAAyE,2PAA2P,sGAAsG,aAAa,QAAQ,gEAAgE,UAAU,wEAAwE,iDAAiD,kDAAkD,yDAAyD,0BAA0B,yBAAyB,cAAc,oDAAoD,gEAAgE,wEAAwE,6EAA6E,4DAA4D,gFAAgF,kEAAkE,6EAA6E,qCAAqC,iBAAiB,uCAAuC,aAAa,QAAQ,gEAAgE,UAAU,8EAA8E,iDAAiD,kDAAkD,mEAAmE,2EAA2E,mEAAmE,6EAA6E,wGAAwG,2DAA2D,oFAAoF,yFAAyF,kEAAkE,uEAAuE,aAAa,qEAAqE,wKAAwK,6DAA6D,4KAA4K,yCAAyC,6CAA6C,oGAAoG,8DAA8D,6BAA6B,iDAAiD,qCAAqC,mEAAmE,EAAE,iBAAiB,aAAa,QAAQ,4DAA4D,oEAAoE,oDAAoD,kCAAkC,4BAA4B,gDAAgD,0DAA0D,sNAAsN,0DAA0D,aAAa,qDAAqD,4BAA4B,sEAAsE,gCAAgC,+UAA+U,EAAE,kEAAkE,uEAAuE,8DAA8D,aAAa,kBAAkB,2CAA2C,aAAa,iCAAiC,gFAAgF,sCAAsC,4VAA4V,aAAa,kBAAkB,oCAAoC,8CAA8C,aAAa,2DAA2D,0CAA0C,UAAU,6DAA6D,4DAA4D,UAAU,uDAAuD,oDAAoD,kDAAkD,6BAA6B,UAAU,+CAA+C,gCAAgC,aAAa,oEAAoE,kHAAkH,2CAA2C,yDAAyD,6DAA6D,kCAAkC,4DAA4D,SAAS,gDAAgD,oDAAoD,sEAAsE,uBAAuB,qLAAqL,iDAAiD,6FAA6F,aAAa,sCAAsC,mKAAmK,aAAa,wCAAwC,uCAAuC,oKAAoK,4CAA4C,aAAa,SAAS,EAAE,aAAa,oEAAoE,wDAAwD,2CAA2C,sBAAsB,oBAAoB,oBAAoB,gDAAgD,2CAA2C,+BAA+B,oEAAoE,oCAAoC,oCAAoC,oCAAoC,+BAA+B,kBAAkB,+CAA+C,+BAA+B,gCAAgC,WAAW,aAAa,6DAA6D,6DAA6D,4EAA4E,+BAA+B,6BAA6B,2BAA2B,iBAAiB,aAAa,gJAAgJ,QAAQ,OAAO,2CAA2C,wCAAwC,kEAAkE,kEAAkE,4DAA4D,4DAA4D,+DAA+D,+DAA+D,qEAAqE,2CAA2C,0BAA0B,iBAAiB,4EAA4E,uEAAuE,gCAAgC,+BAA+B,wCAAwC,yCAAyC,qBAAqB,0BAA0B,yCAAyC,qBAAqB,iBAAiB,sBAAsB,wCAAwC,yCAAyC,qBAAqB,0BAA0B,yCAAyC,qBAAqB,iBAAiB,aAAa,uBAAuB,SAAS,iFAAiF,0BAA0B,kEAAkE,mCAAmC,gCAAgC,uBAAuB,uBAAuB,4CAA4C,8DAA8D,kDAAkD,qEAAqE,iBAAiB,kCAAkC,aAAa,iDAAiD,kDAAkD,8DAA8D,0DAA0D,+CAA+C,sKAAsK,wCAAwC,8EAA8E,qBAAqB,iBAAiB,2DAA2D,8EAA8E,yDAAyD,yDAAyD,yDAAyD,6DAA6D,mEAAmE,mGAAmG,4IAA4I,4CAA4C,4CAA4C,qFAAqF,4CAA4C,4CAA4C,qBAAqB,yDAAyD,mEAAmE,mGAAmG,2IAA2I,4CAA4C,4CAA4C,qFAAqF,4CAA4C,4CAA4C,qBAAqB,+FAA+F,qDAAqD,qDAAqD,iBAAiB,6CAA6C,0DAA0D,0DAA0D,oDAAoD,yCAAyC,6DAA6D,qEAAqE,oFAAoF,qBAAqB,yDAAyD,mEAAmE,qFAAqF,qBAAqB,sDAAsD,sDAAsD,iBAAiB,aAAa,EAAE,UAAU,aAAa,oEAAoE,qDAAqD,kDAAkD,4BAA4B,iGAAiG,sDAAsD,OAAO,uCAAuC,OAAO,2BAA2B,OAAO,2BAA2B,OAAO,6BAA6B,OAAO,gCAAgC,OAAO,6FAA6F,mCAAmC,mCAAmC,0BAA0B,4DAA4D,8EAA8E,gGAAgG,0FAA0F,aAAa,EAAE,SAAS,EAAE,wDAAwD,OAAO,oCAAoC,OAAO,iCAAiC,OAAO,mCAAmC,OAAO,uDAAuD,6IAA6I,gBAAgB,EAAE,sDAAsD,OAAO,oCAAoC,OAAO,iCAAiC,OAAO,wDAAwD,mJAAmJ,gBAAgB,EAAE,eAAe,+CAA+C,qDAAqD,uDAAuD,+CAA+C,EAAE,wDAAwD,uBAAuB,aAAa,sEAAsE,qEAAqE,mDAAmD,sCAAsC,sFAAsF,kDAAkD,uDAAuD,gEAAgE,2CAA2C,2DAA2D,+DAA+D,yBAAyB,wHAAwH,yBAAyB,OAAO,wEAAwE,6CAA6C,6BAA6B,yBAAyB,qBAAqB,gCAAgC,iBAAiB,EAAE,aAAa,QAAQ,UAAU,aAAa,+CAA+C,qDAAqD,oCAAoC,sEAAsE,qEAAqE,iDAAiD,8CAA8C,sDAAsD,2DAA2D,qIAAqI,uEAAuE,sJAAsJ,sEAAsE,iBAAiB,EAAE,iGAAiG,8CAA8C,2DAA2D,oEAAoE,+CAA+C,+DAA+D,gFAAgF,6BAA6B,0EAA0E,yNAAyN,6BAA6B,yBAAyB,qBAAqB,EAAE,iBAAiB,aAAa,EAAE,UAAU,aAAa,+CAA+C,uCAAuC,wCAAwC,2BAA2B,aAAa,qBAAqB,SAAS,6CAA6C,sEAAsE,mDAAmD,yDAAyD,0EAA0E,8EAA8E,uEAAuE,yEAAyE,gFAAgF,4EAA4E,kFAAkF,gFAAgF,yEAAyE,6EAA6E,gDAAgD,+DAA+D,yDAAyD,qFAAqF,yFAAyF,mHAAmH,8DAA8D,oCAAoC,wGAAwG,kCAAkC,wGAAwG,kCAAkC,qBAAqB,mFAAmF,+EAA+E,qFAAqF,mFAAmF,qDAAqD,uDAAuD,iBAAiB,EAAE,aAAa,EAAE,UAAU,aAAa,oEAAoE,kEAAkE,wDAAwD,oDAAoD,sEAAsE,uDAAuD,4DAA4D,2DAA2D,qDAAqD,yDAAyD,yDAAyD,qCAAqC,6CAA6C,uCAAuC,uCAAuC,uBAAuB,OAAO,kDAAkD,gDAAgD,6BAA6B,gDAAgD,yBAAyB,wDAAwD,yCAAyC,iFAAiF,yBAAyB,8BAA8B,qCAAqC,eAAe,+GAA+G,yBAAyB,qBAAqB,EAAE,mDAAmD,iBAAiB,wDAAwD,oDAAoD,iBAAiB,aAAa,EAAE,UAAU,eAAe,oEAAoE,gEAAgE,mDAAmD,wDAAwD,uDAAuD,uBAAuB,aAAa,+CAA+C,8CAA8C,4CAA4C,mEAAmE,aAAa,EAAE,sCAAsC,UAAU,aAAa,oEAAoE,iDAAiD,2CAA2C,4CAA4C,uFAAuF,4DAA4D,4DAA4D,sCAAsC,iCAAiC,2MAA2M,iBAAiB,uCAAuC,aAAa,EAAE,UAAU,aAAa,oEAAoE,kEAAkE,6CAA6C,sEAAsE,+DAA+D,sDAAsD,iBAAiB,aAAa,EAAE,UAAU,aAAa,oEAAoE,iDAAiD,iDAAiD,wDAAwD,uDAAuD,uBAAuB,aAAa,oDAAoD,mDAAmD,uCAAuC,4BAA4B,+CAA+C,oEAAoE,+CAA+C,8CAA8C,4DAA4D,8CAA8C,mDAAmD,6DAA6D,8IAA8I,6DAA6D,aAAa,EAAE,kCAAkC,0DAA0D,EAAE,8CAA8C,uFAAuF,4DAA4D,4DAA4D,wBAAwB,8CAA8C,8CAA8C,iCAAiC,mCAAmC,8KAA8K,iBAAiB,8CAA8C,aAAa,EAAE,UAAU,aAAa,oEAAoE,2DAA2D,gDAAgD,0DAA0D,4DAA4D,2CAA2C,4CAA4C,+CAA+C,sEAAsE,4DAA4D,2DAA2D,2BAA2B,iBAAiB,4DAA4D,4EAA4E,uDAAuD,8CAA8C,kDAAkD,mEAAmE,kEAAkE,sDAAsD,sDAAsD,yDAAyD,2FAA2F,yBAAyB,EAAE,qBAAqB,oEAAoE,wDAAwD,qBAAqB,yDAAyD,0DAA0D,qBAAqB,2EAA2E,yEAAyE,4EAA4E,gEAAgE,kEAAkE,qDAAqD,2DAA2D,qBAAqB,sDAAsD,8DAA8D,qBAAqB,sHAAsH,oFAAoF,gEAAgE,wFAAwF,yFAAyF,yCAAyC,oEAAoE,yBAAyB,gCAAgC,yQAAyQ,qBAAqB,EAAE,kFAAkF,6DAA6D,wFAAwF,uCAAuC,oEAAoE,yBAAyB,gCAAgC,gRAAgR,qBAAqB,EAAE,kEAAkE,0DAA0D,mEAAmE,kHAAkH,EAAE,qDAAqD,wDAAwD,yDAAyD,OAAO,OAAO,iDAAiD,2JAA2J,6BAA6B,yBAAyB,kEAAkE,6DAA6D,OAAO,OAAO,sDAAsD,kFAAkF,iCAAiC,gFAAgF,6BAA6B,6DAA6D,OAAO,OAAO,iDAAiD,mEAAmE,gDAAgD,gDAAgD,8DAA8D,sEAAsE,4DAA4D,4DAA4D,yDAAyD,yDAAyD,mDAAmD,8QAA8Q,iCAAiC,uDAAuD,6BAA6B,4FAA4F,yBAAyB,EAAE,sBAAsB,4DAA4D,kEAAkE,wFAAwF,iBAAiB,sBAAsB,mHAAmH,iBAAiB,aAAa,EAAE,UAAU,aAAa,oEAAoE,mDAAmD,2CAA2C,0CAA0C,+CAA+C,YAAY,0DAA0D,iCAAiC,mCAAmC,qCAAqC,mEAAmE,2CAA2C,oEAAoE,gCAAgC,kBAAkB,OAAO,oCAAoC,iCAAiC,iCAAiC,6CAA6C,6CAA6C,oCAAoC,oCAAoC,gBAAgB,uDAAuD,kBAAkB,OAAO,iCAAiC,2BAA2B,wMAAwM,sCAAsC,yDAAyD,kDAAkD,8DAA8D,6CAA6C,6DAA6D,yCAAyC,gCAAgC,4BAA4B,wBAAwB,kCAAkC,gNAAgN,wBAAwB,iBAAiB,uCAAuC,+BAA+B,aAAa,+IAA+I,8BAA8B,iCAAiC,sBAAsB,qCAAqC,mCAAmC,iBAAiB,6CAA6C,4CAA4C,iBAAiB,+CAA+C,6CAA6C,iBAAiB,wCAAwC,iCAAiC,4CAA4C,mCAAmC,kBAAkB,OAAO,yCAAyC,sCAAsC,sCAAsC,oDAAoD,oDAAoD,qDAAqD,iDAAiD,sFAAsF,2FAA2F,qBAAqB,iEAAiE,UAAU,OAAO,yCAAyC,uCAAuC,uDAAuD,qDAAqD,2DAA2D,2DAA2D,gFAAgF,yBAAyB,qBAAqB,mGAAmG,UAAU,OAAO,0CAA0C,2CAA2C,UAAU,OAAO,8CAA8C,sDAAsD,kDAAkD,0CAA0C,yIAAyI,sCAAsC,6BAA6B,oEAAoE,iFAAiF,kFAAkF,yBAAyB,qBAAqB,+BAA+B,mCAAmC,UAAU,OAAO,yCAAyC,uCAAuC,mDAAmD,oEAAoE,iDAAiD,yBAAyB,qBAAqB,kDAAkD,8DAA8D,iBAAiB,cAAc,UAAU,aAAa,oEAAoE,oHAAoH,6CAA6C,2CAA2C,0DAA0D,0DAA0D,mCAAmC,iDAAiD,0FAA0F,EAAE,SAAS,oDAAoD,8BAA8B,sEAAsE,uEAAuE,+DAA+D,uDAAuD,kEAAkE,+DAA+D,0EAA0E,qBAAqB,EAAE,mCAAmC,iCAAiC,2DAA2D,gGAAgG,oCAAoC,oCAAoC,qBAAqB,gDAAgD,oCAAoC,oCAAoC,qBAAqB,uEAAuE,4IAA4I,yGAAyG,uDAAuD,0FAA0F,qBAAqB,oDAAoD,mDAAmD,qDAAqD,qDAAqD,mFAAmF,2EAA2E,kIAAkI,wIAAwI,+GAA+G,kEAAkE,kDAAkD,iBAAiB,aAAa,EAAE,4BAA4B,UAAU,aAAa,oEAAoE,uCAAuC,iCAAiC,aAAa,oEAAoE,mDAAmD,kDAAkD,4CAA4C,gDAAgD,6FAA6F,qDAAqD,gDAAgD,+CAA+C,wCAAwC,iBAAiB,sFAAsF,4BAA4B,aAAa,+BAA+B,4dAA4d,uGAAuG,qKAAqK,iBAAiB,mDAAmD,8NAA8N,iIAAiI,iBAAiB,qDAAqD,uRAAuR,iIAAiI,iBAAiB,6BAA6B,sIAAsI,8FAA8F,iBAAiB,2BAA2B,8GAA8G,6BAA6B,6BAA6B,0DAA0D,iBAAiB,yBAAyB,8LAA8L,+FAA+F,iBAAiB,0BAA0B,kaAAka,+FAA+F,iBAAiB,aAAa,SAAS,EAAE,uCAAuC,aAAa,oEAAoE,2DAA2D,gDAAgD,gDAAgD,mDAAmD,oDAAoD,mDAAmD,uCAAuC,yCAAyC,+CAA+C,6DAA6D,8DAA8D,sEAAsE,sBAAsB,gFAAgF,SAAS,uDAAuD,iCAAiC,yDAAyD,qDAAqD,MAAM,+BAA+B,iBAAiB,gEAAgE,kDAAkD,iBAAiB,aAAa,2BAA2B,SAAS,gCAAgC,0DAA0D,wFAAwF,yCAAyC,8EAA8E,8DAA8D,sHAAsH,aAAa,sCAAsC,sFAAsF,uCAAuC,uEAAuE,yEAAyE,+DAA+D,gFAAgF,4EAA4E,qEAAqE,gDAAgD,gEAAgE,iCAAiC,sBAAsB,OAAO,wGAAwG,yEAAyE,qDAAqD,gCAAgC,sWAAsW,0DAA0D,EAAE,uCAAuC,kEAAkE,EAAE,6RAA6R,wCAAwC,8CAA8C,iBAAiB,qDAAqD,yEAAyE,+CAA+C,qBAAqB,mCAAmC,sBAAsB,OAAO,6JAA6J,mDAAmD,yBAAyB,qBAAqB,iFAAiF,kBAAkB,mCAAmC,yCAAyC,0CAA0C,mCAAmC,iBAAiB,0KAA0K,4KAA4K,sHAAsH,qHAAqH,aAAa,kKAAkK,uCAAuC,oCAAoC,oCAAoC,kCAAkC,uDAAuD,qDAAqD,yEAAyE,iEAAiE,mEAAmE,mEAAmE,kEAAkE,uHAAuH,2GAA2G,yCAAyC,iEAAiE,oDAAoD,2FAA2F,mFAAmF,sEAAsE,iCAAiC,kBAAkB,OAAO,gDAAgD,gDAAgD,sFAAsF,0DAA0D,oCAAoC,0QAA0Q,oHAAoH,EAAE,+DAA+D,gDAAgD,8FAA8F,EAAE,yBAAyB,+CAA+C,qBAAqB,+EAA+E,4NAA4N,kEAAkE,uDAAuD,oCAAoC,+jBAA+jB,kEAAkE,EAAE,yDAAyD,2CAA2C,4FAA4F,EAAE,yBAAyB,0CAA0C,qBAAqB,uGAAuG,uCAAuC,qBAAqB,OAAO,wDAAwD,wDAAwD,6DAA6D,wCAAwC,oRAAoR,+HAA+H,EAAE,oEAAoE,mDAAmD,6HAA6H,EAAE,6BAA6B,kDAAkD,6CAA6C,yBAAyB,yCAAyC,qBAAqB,0BAA0B,sCAAsC,qBAAqB,iBAAiB,aAAa,oKAAoK,yCAAyC,yCAAyC,yDAAyD,iHAAiH,yCAAyC,qBAAqB,EAAE,2BAA2B,iBAAiB,uFAAuF,yDAAyD,mDAAmD,6EAA6E,uDAAuD,oCAAoC,8EAA8E,yBAAyB,EAAE,sDAAsD,oCAAoC,gJAAgJ,yBAAyB,eAAe,6CAA6C,4DAA4D,qBAAqB,wDAAwD,uEAAuE,wDAAwD,oCAAoC,mJAAmJ,yBAAyB,eAAe,6CAA6C,+DAA+D,qBAAqB,6CAA6C,oEAAoE,8CAA8C,qBAAqB,gCAAgC,kEAAkE,2DAA2D,qEAAqE,wCAAwC,qTAAqT,EAAE,8FAA8F,0DAA0D,wLAAwL,qBAAqB,0JAA0J,iBAAiB,EAAE,oCAAoC,aAAa,kHAAkH,+DAA+D,6CAA6C,0EAA0E,sEAAsE,kFAAkF,kFAAkF,mDAAmD,gCAAgC,0bAA0b,qBAAqB,EAAE,uDAAuD,6DAA6D,6DAA6D,0EAA0E,yKAAyK,qBAAqB,2CAA2C,iBAAiB,aAAa,mHAAmH,iEAAiE,qDAAqD,qDAAqD,8CAA8C,2EAA2E,uEAAuE,kFAAkF,kFAAkF,kFAAkF,oFAAoF,sEAAsE,iDAAiD,gCAAgC,uMAAuM,iCAAiC,yaAAya,qBAAqB,EAAE,yDAAyD,6KAA6K,qBAAqB,uEAAuE,yCAAyC,iBAAiB,aAAa,SAAS,EAAE,qCAAqC,aAAa,oEAAoE,iEAAiE,gEAAgE,uIAAuI,iDAAiD,uCAAuC,uCAAuC,kCAAkC,wCAAwC,wCAAwC,oFAAoF,oFAAoF,oDAAoD,iCAAiC,sJAAsJ,0JAA0J,sJAAsJ,iCAAiC,uBAAuB,aAAa,SAAS,EAAE,aAAa,oEAAoE,oDAAoD,6CAA6C,mCAAmC,iCAAiC,mFAAmF,yDAAyD,sFAAsF,aAAa,oEAAoE,mBAAmB,+CAA+C,+CAA+C,0DAA0D,uEAAuE,2EAA2E,iEAAiE,mNAAmN,6CAA6C,kBAAkB,2FAA2F,aAAa,2DAA2D,4EAA4E,sDAAsD,2CAA2C,4BAA4B,aAAa,qDAAqD,kHAAkH,mEAAmE,qEAAqE,sLAAsL,uHAAuH,aAAa,4EAA4E,0CAA0C,sFAAsF,+CAA+C,8IAA8I,+CAA+C,8BAA8B,aAAa,+BAA+B,6QAA6Q,WAAW,4CAA4C,YAAY,wTAAwT,6BAA6B,kPAAkP,gCAAgC,uDAAuD,iBAAiB,6BAA6B,6BAA6B,0GAA0G,gJAAgJ,qBAAqB,iCAAiC,iBAAiB,6BAA6B,6BAA6B,4IAA4I,gCAAgC,0DAA0D,iBAAiB,aAAa,SAAS,EAAE,wCAAwC,eAAe,oEAAoE,sDAAsD,4CAA4C,mHAAmH,6BAA6B,oDAAoD,uCAAuC,kDAAkD,mDAAmD,0CAA0C,8BAA8B,gCAAgC,2BAA2B,+CAA+C,uFAAuF,yDAAyD,+CAA+C,aAAa,iCAAiC,0DAA0D,gDAAgD,aAAa,wKAAwK,SAAS,uDAAuD,gEAAgE,kEAAkE,sDAAsD,uGAAuG,oBAAoB,oWAAoW,SAAS,qEAAqE,yEAAyE,4CAA4C,+CAA+C,mDAAmD,iDAAiD,wEAAwE,oDAAoD,2DAA2D,EAAE,gCAAgC,kCAAkC,0DAA0D,EAAE,kCAAkC,cAAc,EAAE,4CAA4C,4BAA4B,6DAA6D,iBAAiB,oBAAoB,aAAa,kBAAkB,8CAA8C,4BAA4B,6DAA6D,6BAA6B,kEAAkE,iBAAiB,oBAAoB,aAAa,qGAAqG,+DAA+D,oFAAoF,wGAAwG,+GAA+G,oFAAoF,2CAA2C,0CAA0C,UAAU,gEAAgE,8CAA8C,4CAA4C,+CAA+C,mDAAmD,iDAAiD,2CAA2C,+DAA+D,8CAA8C,wBAAwB,6FAA6F,aAAa,oBAAoB,8CAA8C,wBAAwB,0FAA0F,aAAa,oBAAoB,4BAA4B,wBAAwB,qLAAqL,0IAA0I,EAAE,kEAAkE,uEAAuE,wEAAwE,+EAA+E,iFAAiF,kFAAkF,iEAAiE,sFAAsF,qEAAqE,8EAA8E,gDAAgD,EAAE,oFAAoF,2FAA2F,4FAA4F,UAAU,sDAAsD,yDAAyD,yFAAyF,iDAAiD,yCAAyC,yCAAyC,6EAA6E,qEAAqE,kEAAkE,iDAAiD,qBAAqB,wDAAwD,wEAAwE,4DAA4D,8CAA8C,gEAAgE,qBAAqB,6CAA6C,qEAAqE,+CAA+C,qBAAqB,gCAAgC,oCAAoC,aAAa,oCAAoC,uCAAuC,kCAAkC,aAAa,sCAAsC,SAAS,EAAE,kCAAkC,aAAa,oEAAoE,qDAAqD,4CAA4C,iDAAiD,kDAAkD,2FAA2F,sGAAsG,cAAc,SAAS,iDAAiD,kEAAkE,2BAA2B,aAAa,EAAE,6BAA6B,mDAAmD,+CAA+C,SAAS,OAAO,+BAA+B,aAAa,sIAAsI,mCAAmC,aAAa,4BAA4B,8CAA8C,+FAA+F,iBAAiB,EAAE,aAAa,2BAA2B,SAAS,uCAAuC,sCAAsC,uDAAuD,oEAAoE,+DAA+D,8EAA8E,uDAAuD,2CAA2C,+IAA+I,gCAAgC,0BAA0B,0BAA0B,+BAA+B,sCAAsC,4FAA4F,4FAA4F,yCAAyC,8GAA8G,iBAAiB,sBAAsB,2BAA2B,2BAA2B,2BAA2B,oEAAoE,mDAAmD,mGAAmG,+DAA+D,+CAA+C,uCAAuC,4CAA4C,qBAAqB,0BAA0B,oGAAoG,+DAA+D,+CAA+C,uCAAuC,2CAA2C,qBAAqB,gCAAgC,wDAAwD,+BAA+B,iBAAiB,kCAAkC,qPAAqP,aAAa,EAAE,SAAS,6DAA6D,uEAAuE,iDAAiD,mDAAmD,6DAA6D,2DAA2D,+MAA+M,6DAA6D,iDAAiD,iDAAiD,kCAAkC,qDAAqD,iBAAiB,kCAAkC,wCAAwC,iBAAiB,mEAAmE,iDAAiD,6FAA6F,qCAAqC,4DAA4D,mIAAmI,wFAAwF,2BAA2B,0CAA0C,gFAAgF,kCAAkC,qHAAqH,kCAAkC,8GAA8G,kCAAkC,qBAAqB,mIAAmI,kBAAkB,6CAA6C,sFAAsF,+BAA+B,yCAAyC,gDAAgD,iBAAiB,iCAAiC,oBAAoB,OAAO,yCAAyC,iDAAiD,sDAAsD,qEAAqE,4CAA4C,+CAA+C,wFAAwF,EAAE,iBAAiB,oCAAoC,aAAa,EAAE,UAAU,eAAe,oEAAoE,qDAAqD,mCAAmC,mCAAmC,iCAAiC,2DAA2D,eAAe,oEAAoE,yCAAyC,iCAAiC,iCAAiC,+CAA+C,4CAA4C,+CAA+C,kCAAkC,sEAAsE,2FAA2F,4CAA4C,gCAAgC,wCAAwC,wCAAwC,yEAAyE,0GAA0G,qBAAqB,QAAQ,iBAAiB,yNAAyN,aAAa,iDAAiD,2EAA2E,wDAAwD,iBAAiB,EAAE,sCAAsC,aAAa,yCAAyC,OAAO,oIAAoI,0CAA0C,aAAa,gDAAgD,mFAAmF,2BAA2B,wBAAwB,aAAa,WAAW,EAAE,0BAA0B,uCAAuC,kDAAkD,kEAAkE,iBAAiB,aAAa,sCAAsC,0DAA0D,sEAAsE,uDAAuD,4IAA4I,mDAAmD,+BAA+B,qBAAqB,8JAA8J,0EAA0E,sFAAsF,EAAE,iBAAiB,8CAA8C,aAAa,wCAAwC,kIAAkI,2BAA2B,iBAAiB,wCAAwC,0IAA0I,iDAAiD,uHAAuH,4NAA4N,iQAAiQ,kBAAkB,aAAa,UAAU,kDAAkD,oCAAoC,iGAAiG,SAAS,qFAAqF,eAAe,oEAAoE,8GAA8G,yCAAyC,kCAAkC,+EAA+E,yEAAyE,oDAAoD,oDAAoD,4DAA4D,+CAA+C,8CAA8C,aAAa,EAAE,qHAAqH,yEAAyE,iEAAiE,2LAA2L,KAAK,kFAAkF,iBAAiB,aAAa,EAAE,kCAAkC,SAAS,wDAAwD,eAAe,EAAE,eAAe,oEAAoE,2JAA2J,kDAAkD,4CAA4C,oDAAoD,8CAA8C,6CAA6C,gDAAgD,kDAAkD,iCAAiC,+BAA+B,+BAA+B,mCAAmC,iCAAiC,qCAAqC,2BAA2B,0DAA0D,oEAAoE,oDAAoD,yFAAyF,qEAAqE,yBAAyB,sBAAsB,wBAAwB,wEAAwE,+EAA+E,eAAe,8FAA8F,uCAAuC,iCAAiC,sCAAsC,uCAAuC,4CAA4C,uDAAuD,sDAAsD,SAAS,gCAAgC,2OAA2O,4DAA4D,wEAAwE,wDAAwD,6DAA6D,oFAAoF,2SAA2S,gEAAgE,6EAA6E,4DAA4D,4EAA4E,2CAA2C,8EAA8E,mBAAmB,QAAQ,aAAa,+FAA+F,4BAA4B,gCAAgC,4BAA4B,gEAAgE,iEAAiE,aAAa,qGAAqG,wDAAwD,mDAAmD,uDAAuD,6DAA6D,qDAAqD,mDAAmD,6NAA6N,aAAa,0KAA0K,2DAA2D,0EAA0E,+BAA+B,qBAAqB,uDAAuD,4DAA4D,0DAA0D,kEAAkE,2EAA2E,qBAAqB,QAAQ,iBAAiB,QAAQ,aAAa,8FAA8F,4CAA4C,qCAAqC,4BAA4B,sEAAsE,kIAAkI,kHAAkH,kBAAkB,qCAAqC,aAAa,0CAA0C,iCAAiC,iDAAiD,kCAAkC,aAAa,kGAAkG,gDAAgD,sCAAsC,oCAAoC,6CAA6C,yDAAyD,oEAAoE,2DAA2D,qDAAqD,uDAAuD,qGAAqG,0GAA0G,0RAA0R,gVAAgV,4BAA4B,wCAAwC,8FAA8F,6GAA6G,0FAA0F,wEAAwE,iBAAiB,sBAAsB,iGAAiG,yEAAyE,iBAAiB,mGAAmG,yHAAyH,0SAA0S,gJAAgJ,0BAA0B,urBAAurB,aAAa,8FAA8F,sCAAsC,yCAAyC,iDAAiD,wDAAwD,+CAA+C,6CAA6C,gEAAgE,mDAAmD,yEAAyE,iBAAiB,EAAE,wDAAwD,2KAA2K,2CAA2C,qCAAqC,6HAA6H,oCAAoC,yGAAyG,sBAAsB,yCAAyC,oGAAoG,6KAA6K,2DAA2D,oDAAoD,kEAAkE,qEAAqE,8LAA8L,0gBAA0gB,iBAAiB,QAAQ,aAAa,wEAAwE,OAAO,4BAA4B,2CAA2C,kEAAkE,8CAA8C,aAAa,qHAAqH,EAAE,6BAA6B,OAAO,4BAA4B,MAAM,+DAA+D,oJAAoJ,aAAa,oHAAoH,yBAAyB,4BAA4B,QAAQ,YAAY,OAAO,0FAA0F,OAAO,iCAAiC,OAAO,wFAAwF,iDAAiD,4CAA4C,yDAAyD,qDAAqD,SAAS,OAAO,+DAA+D,oCAAoC,0CAA0C,+CAA+C,qBAAqB,0BAA0B,+CAA+C,iEAAiE,UAAU,OAAO,wDAAwD,gGAAgG,yDAAyD,yDAAyD,sCAAsC,6BAA6B,yBAAyB,qBAAqB,6DAA6D,iBAAiB,aAAa,mFAAmF,QAAQ,wDAAwD,iDAAiD,4CAA4C,yCAAyC,2DAA2D,UAAU,OAAO,yFAAyF,4CAA4C,qBAAqB,iBAAiB,sCAAsC,aAAa,gJAAgJ,eAAe,8BAA8B,OAAO,4BAA4B,eAAe,oEAAoE,uDAAuD,gFAAgF,aAAa,2GAA2G,2DAA2D,aAAa,yCAAyC,eAAe,8BAA8B,OAAO,EAAE,6DAA6D,yEAAyE,wDAAwD,6DAA6D,2EAA2E,wEAAwE,0FAA0F,0GAA0G,4BAA4B,sDAAsD,iBAAiB,wLAAwL,iLAAiL,uCAAuC,qEAAqE,gFAAgF,qHAAqH,0CAA0C,gGAAgG,0CAA0C,sEAAsE,qBAAqB,2GAA2G,0CAA0C,4EAA4E,qBAAqB,0BAA0B,gNAAgN,qBAAqB,4EAA4E,iNAAiN,iBAAiB,kIAAkI,4EAA4E,+DAA+D,uEAAuE,4FAA4F,wEAAwE,iBAAiB,0BAA0B,+GAA+G,aAAa,UAAU,0CAA0C,+DAA+D,SAAS,mEAAmE,4EAA4E,oBAAoB,yIAAyI,SAAS,gEAAgE,uDAAuD,6DAA6D,iDAAiD,iEAAiE,6DAA6D,2BAA2B,2DAA2D,sCAAsC,qCAAqC,mDAAmD,yDAAyD,yDAAyD,aAAa,uDAAuD,6IAA6I,yDAAyD,qCAAqC,aAAa,kBAAkB,0FAA0F,yDAAyD,aAAa,sBAAsB,uNAAuN,SAAS,oCAAoC,aAAa,oEAAoE,oDAAoD,4CAA4C,oGAAoG,0BAA0B,mBAAmB,OAAO,uBAAuB,EAAE,yBAAyB,eAAe,+BAA+B,OAAO,wGAAwG,uDAAuD,mKAAmK,OAAO,2DAA2D,uCAAuC,OAAO,8EAA8E,UAAU,oCAAoC,yGAAyG,wCAAwC,kDAAkD,8CAA8C,wCAAwC,aAAa,+CAA+C,2VAA2V,OAAO,sCAAsC,eAAe,iJAAiJ,eAAe,qIAAqI,cAAc,gKAAgK,OAAO,sSAAsS,OAAO,iFAAiF,eAAe,+HAA+H,6FAA6F,4DAA4D,iCAAiC,qDAAqD,oGAAoG,6DAA6D,aAAa,kCAAkC,2EAA2E,aAAa,wCAAwC,4EAA4E,gCAAgC,aAAa,0EAA0E,+CAA+C,iFAAiF,4CAA4C,4GAA4G,oFAAoF,iGAAiG,8IAA8I,mKAAmK,aAAa,iGAAiG,iEAAiE,oGAAoG,aAAa,gCAAgC,UAAU,yDAAyD,6EAA6E,uKAAuK,iFAAiF,SAAS,4CAA4C,mEAAmE,SAAS,aAAa,oEAAoE,oDAAoD,gDAAgD,mCAAmC,4BAA4B,mHAAmH,uCAAuC,mJAAmJ,eAAe,qJAAqJ,eAAe,yIAAyI,gLAAgL,WAAW,4CAA4C,YAAY,otBAAotB,wFAAwF,gEAAgE,qCAAqC,EAAE,aAAa,wGAAwG,6CAA6C,yEAAyE,yCAAyC,aAAa,4GAA4G,oEAAoE,6BAA6B,4BAA4B,wEAAwE,+DAA+D,4HAA4H,aAAa,8CAA8C,sLAAsL,uDAAuD,0DAA0D,yBAAyB,qBAAqB,2CAA2C,aAAa,kGAAkG,sDAAsD,oEAAoE,0GAA0G,iNAAiN,iBAAiB,EAAE,gEAAgE,kEAAkE,qEAAqE,iBAAiB,EAAE,aAAa,WAAW,EAAE,eAAe,oEAAoE,6DAA6D,4CAA4C,sDAAsD,wDAAwD,gDAAgD,iDAAiD,8EAA8E,mCAAmC,6EAA6E,sBAAsB,gHAAgH,OAAO,4DAA4D,oXAAoX,aAAa,2WAA2W,sBAAsB,wMAAwM,qFAAqF,oEAAoE,4DAA4D,QAAQ,OAAO,2DAA2D,qBAAqB,iBAAiB,aAAa,yCAAyC,cAAc,kJAAkJ,OAAO,yMAAyM,2DAA2D,gDAAgD,oCAAoC,iBAAiB,sCAAsC,sCAAsC,iBAAiB,+DAA+D,SAAS,OAAO,2FAA2F,wCAAwC,qBAAqB,iBAAiB,kCAAkC,aAAa,WAAW,EAAE,+BAA+B,mEAAmE,eAAe,0HAA0H,8LAA8L,wGAAwG,sEAAsE,kDAAkD,uEAAuE,SAAS,8EAA8E,qCAAqC,aAAa,oEAAoE,yCAAyC,iCAAiC,iCAAiC,eAAe,oEAAoE,qDAAqD,sDAAsD,OAAO,qCAAqC,uBAAuB,+CAA+C,qHAAqH,wEAAwE,mDAAmD,yCAAyC,+CAA+C,uFAAuF,iBAAiB,cAAc,SAAS,EAAE,6HAA6H,mDAAmD,qCAAqC,2CAA2C,yDAAyD,iBAAiB,cAAc,WAAW,EAAE,aAAa,oEAAoE,oDAAoD,mDAAmD,uDAAuD,mDAAmD,8CAA8C,8EAA8E,qEAAqE,sIAAsI,6DAA6D,+CAA+C,gDAAgD,gKAAgK,aAAa,0HAA0H,sEAAsE,2BAA2B,iBAAiB,6CAA6C,+BAA+B,yCAAyC,qDAAqD,sDAAsD,gDAAgD,+CAA+C,2BAA2B,iBAAiB,2EAA2E,8DAA8D,uEAAuE,sDAAsD,+CAA+C,6DAA6D,sEAAsE,kCAAkC,iDAAiD,2EAA2E,yEAAyE,8DAA8D,0JAA0J,mGAAmG,uFAAuF,aAAa,gIAAgI,6HAA6H,aAAa,sJAAsJ,4IAA4I,sDAAsD,oEAAoE,4LAA4L,kKAAkK,EAAE,gCAAgC,wCAAwC,mEAAmE,8KAA8K,kCAAkC,gVAAgV,oCAAoC,+JAA+J,gEAAgE,aAAa,wDAAwD,wHAAwH,0CAA0C,gFAAgF,uLAAuL,iBAAiB,EAAE,+TAA+T,mEAAmE,qKAAqK,EAAE,iBAAiB,aAAa,2FAA2F,gDAAgD,aAAa,SAAS,EAAE,oEAAoE,6IAA6I,yCAAyC,mCAAmC,SAAS,gDAAgD,sCAAsC,8EAA8E,wBAAwB,mQAAmQ,aAAa,EAAE,SAAS,yDAAyD,gHAAgH,SAAS,oCAAoC,aAAa,oEAAoE,4JAA4J,4CAA4C,8CAA8C,wDAAwD,iDAAiD,mCAAmC,+BAA+B,6BAA6B,+BAA+B,+BAA+B,+BAA+B,8BAA8B,mCAAmC,sCAAsC,6CAA6C,+BAA+B,iGAAiG,0BAA0B,qLAAqL,iCAAiC,yBAAyB,2HAA2H,2GAA2G,0BAA0B,wHAAwH,8BAA8B,2RAA2R,gHAAgH,6BAA6B,+BAA+B,oDAAoD,yBAAyB,kCAAkC,aAAa,kCAAkC,uCAAuC,+BAA+B,gEAAgE,uCAAuC,+BAA+B,oFAAoF,oTAAoT,OAAO,2CAA2C,iIAAiI,OAAO,6CAA6C,8DAA8D,OAAO,wCAAwC,8DAA8D,eAAe,4CAA4C,8DAA8D,QAAQ,0CAA0C,8DAA8D,MAAM,6CAA6C,8DAA8D,gCAAgC,+CAA+C,sGAAsG,uCAAuC,+CAA+C,8DAA8D,QAAQ,iDAAiD,8DAA8D,QAAQ,sCAAsC,8BAA8B,aAAa,8DAA8D,OAAO,sEAAsE,8DAA8D,OAAO,+CAA+C,+DAA+D,uEAAuE,aAAa,QAAQ,SAAS,uCAAuC,kJAAkJ,OAAO,mCAAmC,eAAe,2VAA2V,OAAO,+EAA+E,QAAQ,wDAAwD,QAAQ,yDAAyD,OAAO,gDAAgD,OAAO,sDAAsD,OAAO,0DAA0D,OAAO,uDAAuD,OAAO,qDAAqD,OAAO,gFAAgF,2BAA2B,iDAAiD,iBAAiB,0DAA0D,0EAA0E,8BAA8B,aAAa,yCAAyC,eAAe,8EAA8E,4WAA4W,4DAA4D,oDAAoD,mDAAmD,iEAAiE,4EAA4E,qBAAqB,EAAE,iBAAiB,sBAAsB,wCAAwC,iBAAiB,4BAA4B,aAAa,yCAAyC,OAAO,8BAA8B,QAAQ,8EAA8E,gCAAgC,6BAA6B,yCAAyC,wCAAwC,8DAA8D,6CAA6C,wCAAwC,kCAAkC,oKAAoK,EAAE,gEAAgE,8BAA8B,aAAa,kDAAkD,gDAAgD,aAAa,sEAAsE,eAAe,wEAAwE,wEAAwE,4BAA4B,yDAAyD,ibAAib,2BAA2B,iDAAiD,iBAAiB,wFAAwF,4FAA4F,iBAAiB,EAAE,uDAAuD,6CAA6C,kDAAkD,sCAAsC,wDAAwD,gOAAgO,8BAA8B,uDAAuD,gJAAgJ,iBAAiB,oDAAoD,8DAA8D,iBAAiB,4DAA4D,mEAAmE,4OAA4O,kEAAkE,qBAAqB,0BAA0B,2WAA2W,oEAAoE,qBAAqB,iBAAiB,6CAA6C,gEAAgE,qEAAqE,qBAAqB,iBAAiB,aAAa,qCAAqC,2BAA2B,yCAAyC,+BAA+B,qBAAqB,iBAAiB,0CAA0C,yFAAyF,4CAA4C,6BAA6B,0CAA0C,uCAAuC,8BAA8B,aAAa,qCAAqC,+BAA+B,2BAA2B,aAAa,UAAU,kDAAkD,2DAA2D,oCAAoC,yGAAyG,+EAA+E,aAAa,wEAAwE,0CAA0C,aAAa,EAAE,4DAA4D,uGAAuG,SAAS,+CAA+C,oCAAoC,gFAAgF,wEAAwE,2CAA2C,aAAa,EAAE,qEAAqE,SAAS,yDAAyD,mGAAmG,8CAA8C,wCAAwC,wCAAwC,yBAAyB,SAAS,2DAA2D,gEAAgE,4CAA4C,qEAAqE,oEAAoE,aAAa,iCAAiC,SAAS,wDAAwD,kDAAkD,oIAAoI,SAAS,gDAAgD,kCAAkC,uCAAuC,0CAA0C,yBAAyB,0BAA0B,6CAA6C,EAAE,SAAS,gEAAgE,oEAAoE,gDAAgD,SAAS,4CAA4C,iEAAiE,SAAS,kIAAkI,4CAA4C,0BAA0B,4BAA4B,6BAA6B,sBAAsB,kDAAkD,wCAAwC,oFAAoF,aAAa,EAAE,yBAAyB,SAAS,wFAAwF,4CAA4C,0BAA0B,4BAA4B,6BAA6B,sDAAsD,2KAA2K,SAAS,4CAA4C,4CAA4C,+CAA+C,2CAA2C,+CAA+C,aAAa,cAAc,8BAA8B,sCAAsC,SAAS,6CAA6C,kEAAkE,sDAAsD,4DAA4D,wBAAwB,wJAAwJ,aAAa,EAAE,kDAAkD,kGAAkG,EAAE,SAAS,gDAAgD,0CAA0C,kCAAkC,6BAA6B,aAAa,+CAA+C,8BAA8B,mCAAmC,mCAAmC,uDAAuD,+CAA+C,SAAS,wCAAwC,wCAAwC,mCAAmC,2CAA2C,SAAS,qFAAqF,4CAA4C,0CAA0C,+RAA+R,YAAY,cAAc,GAAG,8EAA8E,gDAAgD,mEAAmE,WAAW,4PAA4P,YAAY,sBAAsB,GAAG,iBAAiB,cAAc,2BAA2B,SAAS,+EAA+E,kEAAkE,uEAAuE,qCAAqC,qCAAqC,uCAAuC,uCAAuC,sCAAsC,sCAAsC,sDAAsD,sDAAsD,+BAA+B,gCAAgC,2CAA2C,6CAA6C,8EAA8E,8CAA8C,qFAAqF,sFAAsF,oFAAoF,qFAAqF,2FAA2F,0FAA0F,0FAA0F,2FAA2F,aAAa,SAAS,oDAAoD,kDAAkD,0DAA0D,4CAA4C,oDAAoD,yBAAyB,8GAA8G,EAAE,iHAAiH,qDAAqD,yEAAyE,qCAAqC,8MAA8M,EAAE,iBAAiB,cAAc,SAAS,yEAAyE,6CAA6C,kIAAkI,SAAS,2CAA2C,oCAAoC,oBAAoB,0BAA0B,SAAS,kDAAkD,uDAAuD,uDAAuD,2HAA2H,SAAS,6CAA6C,0DAA0D,SAAS,mEAAmE,4CAA4C,0DAA0D,8LAA8L,sFAAsF,0CAA0C,aAAa,kBAAkB,2BAA2B,8CAA8C,kCAAkC,8CAA8C,8IAA8I,6CAA6C,aAAa,SAAS,8FAA8F,kDAAkD,2DAA2D,8DAA8D,wDAAwD,kDAAkD,gEAAgE,aAAa,EAAE,iKAAiK,0DAA0D,iCAAiC,aAAa,EAAE,SAAS,+DAA+D,kDAAkD,8DAA8D,4CAA4C,0CAA0C,0CAA0C,aAAa,EAAE,0DAA0D,iCAAiC,aAAa,EAAE,SAAS,qDAAqD,6CAA6C,iEAAiE,kEAAkE,0EAA0E,SAAS,yDAAyD,2DAA2D,gJAAgJ,SAAS,yCAAyC,2DAA2D,2DAA2D,2DAA2D,2DAA2D,sBAAsB,oIAAoI,SAAS,iEAAiE,oEAAoE,uBAAuB,aAAa,sCAAsC,4CAA4C,6EAA6E,iFAAiF,+BAA+B,mBAAmB,OAAO,8DAA8D,qUAAqU,wFAAwF,qBAAqB,iBAAiB,aAAa,0DAA0D,SAAS,sCAAsC,+BAA+B,yDAAyD,SAAS,kDAAkD,2DAA2D,SAAS,+EAA+E,0DAA0D,kDAAkD,0DAA0D,4BAA4B,+DAA+D,iEAAiE,gDAAgD,sFAAsF,oEAAoE,6FAA6F,gFAAgF,qGAAqG,2DAA2D,iBAAiB,sCAAsC,yGAAyG,uEAAuE,qLAAqL,kCAAkC,+DAA+D,8EAA8E,qBAAqB,kEAAkE,qCAAqC,cAAc,iBAAiB,aAAa,kKAAkK,2eAA2e,mCAAmC,mCAAmC,iBAAiB,aAAa,iCAAiC,SAAS,yDAAyD,uCAAuC,2BAA2B,+LAA+L,iBAAiB,8CAA8C,aAAa,6BAA6B,SAAS,+BAA+B,uCAAuC,qCAAqC,kLAAkL,iBAAiB,4DAA4D,wCAAwC,oGAAoG,iDAAiD,iGAAiG,kCAAkC,8CAA8C,iEAAiE,qBAAqB,iBAAiB,aAAa,wCAAwC,8FAA8F,yDAAyD,uCAAuC,wCAAwC,6FAA6F,gEAAgE,iBAAiB,aAAa,6KAA6K,qCAAqC,iCAAiC,oCAAoC,gGAAgG,sFAAsF,yCAAyC,iCAAiC,2CAA2C,gJAAgJ,aAAa,SAAS,wDAAwD,OAAO,yCAAyC,qGAAqG,iEAAiE,iKAAiK,6CAA6C,6BAA6B,+CAA+C,6CAA6C,6BAA6B,2LAA2L,iBAAiB,0DAA0D,wDAAwD,2FAA2F,iBAAiB,0FAA0F,+EAA+E,iBAAiB,kGAAkG,yBAAyB,iEAAiE,oDAAoD,gPAAgP,oJAAoJ,GAAG,mCAAmC,iBAAiB,0DAA0D,sCAAsC,iBAAiB,4DAA4D,mDAAmD,8GAA8G,kNAAkN,YAAY,sBAAsB,GAAG,iBAAiB,0FAA0F,+CAA+C,+FAA+F,EAAE,iBAAiB,kGAAkG,UAAU,6CAA6C,oBAAoB,iEAAiE,iKAAiK,kEAAkE,+DAA+D,iDAAiD,6BAA6B,mDAAmD,0DAA0D,6BAA6B,gLAAgL,iBAAiB,0DAA0D,wDAAwD,0EAA0E,0EAA0E,wCAAwC,iBAAiB,0FAA0F,oCAAoC,qIAAqI,4EAA4E,0JAA0J,qBAAqB,0BAA0B,gDAAgD,wFAAwF,qBAAqB,8DAA8D,mDAAmD,gFAAgF,iBAAiB,mGAAmG,SAAS,2CAA2C,aAAa,oEAAoE,4DAA4D,kDAAkD,kDAAkD,0BAA0B,0DAA0D,uCAAuC,sDAAsD,uEAAuE,cAAc,UAAU,iFAAiF,uCAAuC,uCAAuC,gFAAgF,gEAAgE,iDAAiD,wDAAwD,cAAc,UAAU,+EAA+E,uCAAuC,8DAA8D,2JAA2J,cAAc,UAAU,qFAAqF,6CAA6C,SAAS,kCAAkC,eAAe,oEAAoE,oDAAoD,+CAA+C,8CAA8C,2CAA2C,gDAAgD,UAAU,gJAAgJ,kCAAkC,uBAAuB,aAAa,4CAA4C,+DAA+D,iEAAiE,6CAA6C,iBAAiB,aAAa,EAAE,sCAAsC,qCAAqC,EAAE,aAAa,SAAS,gLAAgL,uEAAuE,uDAAuD,mDAAmD,2BAA2B,iBAAiB,oEAAoE,gGAAgG,6EAA6E,wFAAwF,iBAAiB,aAAa,EAAE,SAAS,eAAe,oEAAoE,mDAAmD,4CAA4C,kDAAkD,0DAA0D,+CAA+C,uMAAuM,oIAAoI,0EAA0E,4CAA4C,yDAAyD,sEAAsE,oFAAoF,0EAA0E,iLAAiL,8EAA8E,wEAAwE,gCAAgC,4BAA4B,qBAAqB,kDAAkD,gHAAgH,2BAA2B,kCAAkC,qBAAqB,0BAA0B,mCAAmC,qBAAqB,iBAAiB,EAAE,0DAA0D,uCAAuC,kHAAkH,kDAAkD,iBAAiB,8BAA8B,aAAa,+JAA+J,OAAO,uEAAuE,eAAe,2FAA2F,qDAAqD,0CAA0C,iCAAiC,uFAAuF,yDAAyD,kEAAkE,qBAAqB,iBAAiB,EAAE,iCAAiC,aAAa,+BAA+B,gNAAgN,6BAA6B,wDAAwD,gCAAgC,wDAAwD,iBAAiB,wGAAwG,6BAA6B,iIAAiI,iBAAiB,iIAAiI,SAAS,EAAE,oEAAoE,iDAAiD,wDAAwD,gDAAgD,0DAA0D,oCAAoC,+BAA+B,qBAAqB,iKAAiK,mEAAmE,iBAAiB,EAAE,aAAa,wEAAwE,oDAAoD,+CAA+C,SAAS,yDAAyD,+IAA+I,gJAAgJ,uDAAuD,gEAAgE,iEAAiE,aAAa,EAAE,yCAAyC,gEAAgE,iDAAiD,aAAa,gCAAgC,2BAA2B,gBAAgB,OAAO,yCAAyC,aAAa,8BAA8B,SAAS,aAAa,oEAAoE,sDAAsD,4CAA4C,2BAA2B,6DAA6D,gEAAgE,+CAA+C,+BAA+B,oGAAoG,kDAAkD,+CAA+C,yBAAyB,8CAA8C,aAAa,4HAA4H,4DAA4D,kNAAkN,aAAa,sCAAsC,uHAAuH,gDAAgD,iDAAiD,yCAAyC,4DAA4D,qDAAqD,gDAAgD,2DAA2D,gJAAgJ,sKAAsK,8EAA8E,mEAAmE,mHAAmH,gJAAgJ,2DAA2D,6BAA6B,EAAE,yBAAyB,sBAAsB,oDAAoD,iBAAiB,oCAAoC,8CAA8C,6FAA6F,iBAAiB,+DAA+D,sEAAsE,4FAA4F,8DAA8D,uGAAuG,+CAA+C,QAAQ,gBAAgB,gCAAgC,iBAAiB,iDAAiD,sEAAsE,2CAA2C,iBAAiB,eAAe,sHAAsH,mDAAmD,oDAAoD,4CAA4C,+DAA+D,wDAAwD,mDAAmD,wDAAwD,8DAA8D,kaAAka,6CAA6C,uDAAuD,mFAAmF,wBAAwB,EAAE,oBAAoB,+DAA+D,mHAAmH,qCAAqC,gBAAgB,0FAA0F,+DAA+D,kCAAkC,aAAa,SAAS,EAAE,mEAAmE,+CAA+C,0CAA0C,2CAA2C,wBAAwB,0JAA0J,aAAa,EAAE,0FAA0F,oCAAoC,uCAAuC,wBAAwB,8FAA8F,aAAa,mBAAmB,0BAA0B,SAAS,4EAA4E,4BAA4B,2BAA2B,uBAAuB,OAAO,4CAA4C,yDAAyD,2EAA2E,sEAAsE,iBAAiB,aAAa,0BAA0B,SAAS,4EAA4E,iFAAiF,6CAA6C,wBAAwB,eAAe,iEAAiE,EAAE,gCAAgC,mDAAmD,SAAS,iDAAiD,+EAA+E,4DAA4D,+DAA+D,yCAAyC,iEAAiE,kGAAkG,iFAAiF,iBAAiB,0DAA0D,uXAAuX,GAAG,6CAA6C,aAAa,EAAE,SAAS,gEAAgE,0BAA0B,+JAA+J,+BAA+B,gBAAgB,gDAAgD,8BAA8B,YAAY,OAAO,kCAAkC,YAAY,OAAO,6FAA6F,uCAAuC,wBAAwB,oBAAoB,gBAAgB,8BAA8B,YAAY,gFAAgF,qHAAqH,iCAAiC,wCAAwC,aAAa,+CAA+C,2EAA2E,+CAA+C,2EAA2E,gFAAgF,8EAA8E,wDAAwD,8LAA8L,yEAAyE,qEAAqE,wFAAwF,8DAA8D,iDAAiD,oCAAoC,uJAAuJ,oFAAoF,iEAAiE,0DAA0D,mDAAmD,iFAAiF,uEAAuE,qBAAqB,sEAAsE,iBAAiB,EAAE,iDAAiD,aAAa,EAAE,UAAU,aAAa,oEAAoE,qDAAqD,mCAAmC,iCAAiC,yDAAyD,yDAAyD,aAAa,oEAAoE,sLAAsL,+DAA+D,2DAA2D,iDAAiD,+LAA+L,OAAO,uEAAuE,yBAAyB,mFAAmF,yDAAyD,wDAAwD,qCAAqC,kFAAkF,sCAAsC,iBAAiB,aAAa,wGAAwG,0BAA0B,yEAAyE,4CAA4C,aAAa,8GAA8G,yBAAyB,4EAA4E,gDAAgD,aAAa,oIAAoI,wHAAwH,yEAAyE,iDAAiD,8EAA8E,uCAAuC,qDAAqD,qBAAqB,4CAA4C,iBAAiB,kGAAkG,aAAa,+BAA+B,skBAAskB,6BAA6B,iHAAiH,2GAA2G,qBAAqB,gCAAgC,uDAAuD,iBAAiB,+BAA+B,6BAA6B,uGAAuG,iBAAiB,+BAA+B,6BAA6B,yIAAyI,gCAAgC,yDAAyD,iBAAiB,mGAAmG,WAAW,EAAE,wCAAwC,eAAe,oEAAoE,+JAA+J,4CAA4C,iDAAiD,oBAAoB,oKAAoK,iDAAiD,kDAAkD,4DAA4D,uNAAuN,4DAA4D,uNAAuN,gCAAgC,aAAa,SAAS,EAAE,mEAAmE,2FAA2F,yCAAyC,oGAAoG,mDAAmD,uCAAuC,wDAAwD,qDAAqD,2DAA2D,4CAA4C,oCAAoC,gEAAgE,0GAA0G,kDAAkD,uDAAuD,gEAAgE,4CAA4C,6EAA6E,oEAAoE,0DAA0D,0DAA0D,sDAAsD,sEAAsE,wDAAwD,4EAA4E,wCAAwC,4EAA4E,qEAAqE,kCAAkC,qEAAqE,kCAAkC,sCAAsC,4RAA4R,EAAE,oEAAoE,+HAA+H,mHAAmH,kCAAkC,mHAAmH,kCAAkC,qBAAqB,uGAAuG,uCAAuC,uEAAuE,iBAAiB,EAAE,mGAAmG,kDAAkD,oDAAoD,wEAAwE,0EAA0E,+EAA+E,oFAAoF,mDAAmD,gCAAgC,uNAAuN,iCAAiC,inBAAinB,qBAAqB,EAAE,6EAA6E,kFAAkF,qGAAqG,qJAAqJ,ubAAub,uBAAuB,sCAAsC,sEAAsE,6CAA6C,iBAAiB,EAAE,oEAAoE,6GAA6G,+CAA+C,qBAAqB,GAAG,iBAAiB,qDAAqD,aAAa,sCAAsC,SAAS,EAAE,mGAAmG,2CAA2C,wBAAwB,gKAAgK,aAAa,EAAE,uCAAuC,wBAAwB,wGAAwG,aAAa,mBAAmB,4BAA4B,SAAS,eAAe,oEAAoE,+JAA+J,4CAA4C,4CAA4C,6DAA6D,yEAAyE,+DAA+D,yDAAyD,iEAAiE,sDAAsD,+CAA+C,+CAA+C,qDAAqD,0CAA0C,wCAAwC,2CAA2C,4EAA4E,wDAAwD,iBAAiB,EAAE,2HAA2H,4FAA4F,aAAa,EAAE,UAAU,8FAA8F,4BAA4B,kEAAkE,4BAA4B,0EAA0E,iCAAiC,iGAAiG,2FAA2F,sGAAsG,cAAc,SAAS,8FAA8F,yDAAyD,yEAAyE,qCAAqC,SAAS,0HAA0H,+BAA+B,iFAAiF,gDAAgD,8DAA8D,6DAA6D,qDAAqD,gCAAgC,aAAa,QAAQ,aAAa,EAAE,SAAS,yFAAyF,+BAA+B,+CAA+C,OAAO,kDAAkD,OAAO,8HAA8H,oCAAoC,gCAAgC,sBAAsB,uBAAuB,0CAA0C,8BAA8B,yDAAyD,SAAS,OAAO,8CAA8C,oCAAoC,KAAK,QAAQ,oCAAoC,cAAc,QAAQ,gEAAgE,UAAU,OAAO,8DAA8D,qBAAqB,iBAAiB,uCAAuC,oBAAoB,aAAa,uCAAuC,+CAA+C,2CAA2C,SAAS,mKAAmK,+BAA+B,8CAA8C,OAAO,wIAAwI,gDAAgD,4CAA4C,oCAAoC,SAAS,QAAQ,iBAAiB,aAAa,EAAE,SAAS,uFAAuF,+BAA+B,8CAA8C,OAAO,4FAA4F,gDAAgD,oDAAoD,gCAAgC,SAAS,QAAQ,aAAa,EAAE,SAAS,+HAA+H,+BAA+B,8CAA8C,+BAA+B,8CAA8C,OAAO,yEAAyE,QAAQ,sGAAsG,OAAO,iJAAiJ,0EAA0E,2CAA2C,iBAAiB,uGAAuG,oCAAoC,iBAAiB,EAAE,iFAAiF,+DAA+D,iCAAiC,gBAAgB,gBAAgB,+JAA+J,wDAAwD,mEAAmE,wDAAwD,mEAAmE,aAAa,SAAS,kGAAkG,+BAA+B,8CAA8C,+CAA+C,sHAAsH,+BAA+B,8CAA8C,OAAO,yEAAyE,OAAO,iJAAiJ,6BAA6B,0DAA0D,qCAAqC,4BAA4B,oDAAoD,kDAAkD,iBAAiB,EAAE,4DAA4D,iCAAiC,aAAa,EAAE,4CAA4C,6BAA6B,aAAa,EAAE,iCAAiC,4DAA4D,uDAAuD,oCAAoC,KAAK,QAAQ,8DAA8D,oCAAoC,WAAW,QAAQ,iBAAiB,EAAE,aAAa,EAAE,kDAAkD,oDAAoD,gCAAgC,WAAW,QAAQ,aAAa,EAAE,SAAS,4GAA4G,+CAA+C,sHAAsH,OAAO,oEAAoE,OAAO,sIAAsI,0DAA0D,yBAAyB,uBAAuB,2BAA2B,qCAAqC,sBAAsB,6CAA6C,6BAA6B,OAAO,OAAO,oCAAoC,iDAAiD,iCAAiC,4DAA4D,wCAAwC,SAAS,QAAQ,qBAAqB,4EAA4E,iBAAiB,+HAA+H,6BAA6B,wDAAwD,oCAAoC,SAAS,QAAQ,4CAA4C,mCAAmC,QAAQ,OAAO,wCAAwC,qFAAqF,qCAAqC,4DAA4D,4CAA4C,SAAS,QAAQ,yBAAyB,gDAAgD,qBAAqB,iBAAiB,aAAa,EAAE,SAAS,yHAAyH,+CAA+C,qHAAqH,OAAO,0HAA0H,4EAA4E,oDAAoD,+CAA+C,sGAAsG,oFAAoF,wCAAwC,SAAS,QAAQ,qBAAqB,iBAAiB,EAAE,aAAa,EAAE,SAAS,yCAAyC,wDAAwD,SAAS,wHAAwH,+CAA+C,qHAAqH,OAAO,0HAA0H,0DAA0D,oDAAoD,8CAA8C,oGAAoG,oFAAoF,wCAAwC,SAAS,QAAQ,qBAAqB,iBAAiB,EAAE,aAAa,EAAE,SAAS,yCAAyC,wDAAwD,SAAS,+FAA+F,+BAA+B,iFAAiF,gDAAgD,yDAAyD,wDAAwD,aAAa,EAAE,gDAAgD,2BAA2B,2BAA2B,4DAA4D,oCAAoC,OAAO,QAAQ,8CAA8C,iBAAiB,EAAE,2DAA2D,oCAAoC,OAAO,QAAQ,8CAA8C,iBAAiB,EAAE,aAAa,EAAE,SAAS,+CAA+C,iEAAiE,SAAS,+CAA+C,iEAAiE,SAAS,kCAAkC,wBAAwB,mCAAmC,uBAAuB,+BAA+B,wDAAwD,oCAAoC,iCAAiC,iBAAiB,aAAa,uBAAuB,SAAS,iCAAiC,gEAAgE,SAAS,yCAAyC,qDAAqD,SAAS,oCAAoC,8DAA8D,SAAS,uCAAuC,mCAAmC,SAAS,eAAe,oEAAoE,oDAAoD,uJAAuJ,oCAAoC,sCAAsC,uFAAuF,MAAM,6BAA6B,OAAO,6DAA6D,mDAAmD,iCAAiC,iBAAiB,2BAA2B,qCAAqC,wDAAwD,mCAAmC,qCAAqC,mCAAmC,yDAAyD,uDAAuD,mCAAmC,8CAA8C,qBAAqB,0BAA0B,2DAA2D,qBAAqB,iBAAiB,kEAAkE,uDAAuD,iBAAiB,EAAE,mCAAmC,aAAa,yGAAyG,OAAO,2BAA2B,OAAO,wEAAwE,mDAAmD,qCAAqC,iBAAiB,+BAA+B,gEAAgE,gEAAgE,gCAAgC,uFAAuF,EAAE,iBAAiB,EAAE,wCAAwC,uDAAuD,6DAA6D,qBAAqB,EAAE,iBAAiB,sBAAsB,iCAAiC,iBAAiB,aAAa,sBAAsB,8JAA8J,SAAS,wDAAwD,yCAAyC,gCAAgC,iBAAiB,6GAA6G,SAAS,qEAAqE,sEAAsE,gCAAgC,iBAAiB,+FAA+F,MAAM,oEAAoE,wDAAwD,iBAAiB,cAAc,SAAS,8BAA8B,aAAa,oEAAoE,mKAAmK,4CAA4C,wDAAwD,uEAAuE,mDAAmD,wCAAwC,8CAA8C,qEAAqE,iBAAiB,EAAE,4DAA4D,yEAAyE,sDAAsD,qDAAqD,4NAA4N,EAAE,6FAA6F,6DAA6D,wGAAwG,8EAA8E,8CAA8C,6DAA6D,qBAAqB,iBAAiB,EAAE,eAAe,EAAE,UAAU,eAAe,oEAAoE,qDAAqD,mCAAmC,iCAAiC,2DAA2D,yDAAyD,eAAe,oEAAoE,mBAAmB,gDAAgD,kDAAkD,wDAAwD,kDAAkD,qhBAAqhB,eAAe,wJAAwJ,oeAAoe,6BAA6B,iGAAiG,gCAAgC,0OAA0O,iBAAiB,oGAAoG,SAAS,EAAE,+EAA+E,yCAAyC,eAAe,oEAAoE,mBAAmB,+CAA+C,0DAA0D,sDAAsD,4CAA4C,kCAAkC,8DAA8D,OAAO,8JAA8J,4OAA4O,yFAAyF,uFAAuF,uDAAuD,uDAAuD,+BAA+B,mGAAmG,iDAAiD,4DAA4D,sCAAsC,iBAAiB,qDAAqD,+CAA+C,4DAA4D,sCAAsC,iBAAiB,sBAAsB,kEAAkE,iBAAiB,6CAA6C,8EAA8E,kFAAkF,mEAAmE,uCAAuC,0EAA0E,gEAAgE,iBAAiB,EAAE,qCAAqC,sEAAsE,2DAA2D,uDAAuD,GAAG,wHAAwH,EAAE,qEAAqE,sHAAsH,EAAE,wDAAwD,4EAA4E,8BAA8B,aAAa,yJAAyJ,4CAA4C,iGAAiG,aAAa,YAAY,2BAA2B,iCAAiC,oGAAoG,2CAA2C,8JAA8J,qDAAqD,aAAa,6DAA6D,uEAAuE,aAAa,2CAA2C,8CAA8C,aAAa,UAAU,4BAA4B,yFAAyF,aAAa,oEAAoE,0GAA0G,8CAA8C,2CAA2C,yCAAyC,0DAA0D,iDAAiD,sCAAsC,6EAA6E,2CAA2C,yDAAyD,yDAAyD,qBAAqB,iBAAiB,aAAa,SAAS,EAAE,uDAAuD,uCAAuC,mBAAmB,yBAAyB,wBAAwB,OAAO,uBAAuB,SAAS,gCAAgC,QAAQ,4BAA4B,6BAA6B,yEAAyE,qCAAqC,uCAAuC,OAAO,kEAAkE,uCAAuC,OAAO,qEAAqE,uCAAuC,SAAS,4DAA4D,qDAAqD,iDAAiD,wEAAwE,4BAA4B,6CAA6C,SAAS,qDAAqD,yEAAyE,qDAAqD,2EAA2E,0BAA0B,2EAA2E,wBAAwB,8KAA8K,yBAAyB,oBAAoB,qCAAqC,GAAG,qCAAqC,+GAA+G,6EAA6E,aAAa,EAAE,sCAAsC,iFAAiF,oBAAoB,qCAAqC,GAAG,wCAAwC,UAAU,uDAAuD,wDAAwD,sCAAsC,qDAAqD,6BAA6B,aAAa,EAAE,SAAS,sDAAsD,gFAAgF,yDAAyD,yCAAyC,aAAa,EAAE,yBAAyB,SAAS,oEAAoE,yBAAyB,yBAAyB,OAAO,kFAAkF,iEAAiE,qDAAqD,6EAA6E,gEAAgE,mEAAmE,uFAAuF,QAAQ,6BAA6B,+CAA+C,0FAA0F,oDAAoD,+CAA+C,4DAA4D,UAAU,qDAAqD,4JAA4J,6CAA6C,6CAA6C,SAAS,6DAA6D,0EAA0E,yBAAyB,0EAA0E,mCAAmC,qCAAqC,iDAAiD,wEAAwE,gDAAgD,wFAAwF,gEAAgE,4CAA4C,qBAAqB,iBAAiB,oDAAoD,oEAAoE,oFAAoF,+CAA+C,+BAA+B,qBAAqB,sCAAsC,8EAA8E,qBAAqB,0BAA0B,0DAA0D,qBAAqB,yEAAyE,8DAA8D,iBAAiB,4CAA4C,8DAA8D,2CAA2C,iBAAiB,4BAA4B,gCAAgC,UAAU,0DAA0D,yBAAyB,kEAAkE,mCAAmC,kCAAkC,8BAA8B,0DAA0D,uCAAuC,aAAa,EAAE,UAAU,0CAA0C,aAAa,oEAAoE,mBAAmB,gDAAgD,gDAAgD,8CAA8C,wDAAwD,8CAA8C,0EAA0E,mCAAmC,aAAa,4CAA4C,EAAE,sEAAsE,iGAAiG,gEAAgE,sDAAsD,mDAAmD,iFAAiF,+DAA+D,oHAAoH,wEAAwE,2CAA2C,iDAAiD,8BAA8B,kEAAkE,wCAAwC,8CAA8C,2BAA2B,0FAA0F,yDAAyD,SAAS,uCAAuC,eAAe,+CAA+C,8EAA8E,oDAAoD,sDAAsD,6EAA6E,gGAAgG,iDAAiD,kCAAkC,qSAAqS,EAAE,qIAAqI,8CAA8C,+DAA+D,wGAAwG,6CAA6C,0BAA0B,qBAAqB,EAAE,iBAAiB,aAAa,EAAE,YAAY,aAAa,oEAAoE,oDAAoD,gDAAgD,mDAAmD,+BAA+B,+CAA+C,2DAA2D,sDAAsD,0DAA0D,6CAA6C,2BAA2B,iBAAiB,2CAA2C,kEAAkE,yMAAyM,iBAAiB,EAAE,aAAa,EAAE,UAAU,qGAAqG,4BAA4B,8BAA8B,0EAA0E,yDAAyD,6DAA6D,gCAAgC,0CAA0C,6CAA6C,mCAAmC,kCAAkC,iBAAiB,6DAA6D,aAAa,EAAE,4BAA4B,SAAS,6HAA6H,uBAAuB,0CAA0C,sDAAsD,kDAAkD,6DAA6D,6DAA6D,+BAA+B,4BAA4B,+CAA+C,oDAAoD,aAAa,kBAAkB,qCAAqC,2DAA2D,yFAAyF,iBAAiB,EAAE,6GAA6G,aAAa,yDAAyD,gEAAgE,qDAAqD,mEAAmE,iBAAiB,wLAAwL,aAAa,EAAE,uDAAuD,4DAA4D,uFAAuF,yDAAyD,8DAA8D,yCAAyC,0CAA0C,4IAA4I,aAAa,EAAE,SAAS,iJAAiJ,wDAAwD,6CAA6C,yCAAyC,wDAAwD,mEAAmE,2CAA2C,uCAAuC,2BAA2B,qBAAqB,+DAA+D,6DAA6D,gDAAgD,uDAAuD,wCAAwC,iBAAiB,+DAA+D,mCAAmC,iBAAiB,aAAa,EAAE,qDAAqD,uBAAuB,aAAa,2DAA2D,qCAAqC,yCAAyC,iDAAiD,iDAAiD,6CAA6C,6CAA6C,gJAAgJ,iCAAiC,iCAAiC,mCAAmC,oCAAoC,iDAAiD,iDAAiD,2CAA2C,uOAAuO,EAAE,0CAA0C,+BAA+B,gDAAgD,sCAAsC,8BAA8B,0DAA0D,2CAA2C,qBAAqB,0BAA0B,wDAAwD,qDAAqD,qBAAqB,iCAAiC,iBAAiB,qDAAqD,+CAA+C,+CAA+C,qDAAqD,qDAAqD,wIAAwI,iBAAiB,kDAAkD,sEAAsE,sDAAsD,sDAAsD,2CAA2C,iBAAiB,aAAa,EAAE,SAAS,eAAe,oEAAoE,qDAAqD,mCAAmC,iCAAiC,qFAAqF,2DAA2D,yDAAyD,eAAe,oEAAoE,mBAAmB,gDAAgD,kDAAkD,wDAAwD,sDAAsD,0QAA0Q,eAAe,wJAAwJ,kYAAkY,6BAA6B,yYAAyY,gCAAgC,2DAA2D,iBAAiB,4OAA4O,6FAA6F,OAAO,qEAAqE,8BAA8B,aAAa,qEAAqE,+DAA+D,4DAA4D,aAAa,WAAW,EAAE,mFAAmF,6CAA6C,eAAe,oEAAoE,mBAAmB,gDAAgD,gDAAgD,8CAA8C,wDAAwD,kDAAkD,8EAA8E,mCAAmC,aAAa,4CAA4C,EAAE,0EAA0E,iGAAiG,gEAAgE,sDAAsD,mDAAmD,iFAAiF,yDAAyD,8EAA8E,wQAAwQ,wEAAwE,0CAA0C,iDAAiD,kEAAkE,uCAAuC,sCAAsC,8CAA8C,0FAA0F,yDAAyD,SAAS,6CAA6C,eAAe,oEAAoE,oDAAoD,8CAA8C,4DAA4D,uBAAuB,aAAa,8GAA8G,6EAA6E,oDAAoD,iBAAiB,aAAa,EAAE,UAAU,eAAe,+CAA+C,sFAAsF,+EAA+E,kEAAkE,mEAAmE,oDAAoD,iFAAiF,mDAAmD,kCAAkC,8DAA8D,EAAE,qIAAqI,8CAA8C,+DAA+D,gEAAgE,0GAA0G,wYAAwY,0BAA0B,qBAAqB,EAAE,iBAAiB,aAAa,EAAE,YAAY,aAAa,oEAAoE,oDAAoD,uDAAuD,+DAA+D,+CAA+C,8EAA8E,8DAA8D,iDAAiD,0EAA0E,4DAA4D,uEAAuE,+CAA+C,2CAA2C,+BAA+B,yBAAyB,mEAAmE,iEAAiE,oDAAoD,2DAA2D,4CAA4C,qBAAqB,mEAAmE,uCAAuC,qBAAqB,iBAAiB,EAAE,yDAAyD,2BAA2B,iBAAiB,+DAA+D,yCAAyC,6CAA6C,qDAAqD,4CAA4C,2CAA2C,4CAA4C,6CAA6C,8DAA8D,6DAA6D,uDAAuD,uDAAuD,0DAA0D,4DAA4D,oKAAoK,wCAAwC,+CAA+C,8CAA8C,+CAA+C,ybAAyb,EAAE,8CAA8C,mCAAmC,oDAAoD,0CAA0C,8JAA8J,qBAAqB,yDAAyD,mDAAmD,mDAAmD,+DAA+D,+DAA+D,oJAAoJ,qBAAqB,gDAAgD,gGAAgG,gGAAgG,+DAA+D,6DAA6D,kCAAkC,oQAAoQ,qBAAqB,mBAAmB,QAAQ,aAAa,EAAE,UAAU,4DAA4D,qDAAqD,uBAAuB,4PAA4P,wJAAwJ,8IAA8I,uDAAuD,+OAA+O,SAAS,eAAe,oEAAoE,oDAAoD,6CAA6C,mCAAmC,iCAAiC,8HAA8H,4GAA4G,aAAa,oEAAoE,mBAAmB,+DAA+D,kDAAkD,+CAA+C,mJAAmJ,2EAA2E,4BAA4B,aAAa,oEAAoE,qYAAqY,gNAAgN,0lBAA0lB,gCAAgC,6DAA6D,oBAAoB,aAAa,WAAW,EAAE,aAAa,oEAAoE,0DAA0D,oDAAoD,kDAAkD,qEAAqE,gEAAgE,aAAa,6DAA6D,iDAAiD,wDAAwD,kDAAkD,uDAAuD,aAAa,0CAA0C,gDAAgD,aAAa,gDAAgD,iEAAiE,aAAa,sCAAsC,SAAS,EAAE,aAAa,oEAAoE,gJAAgJ,kDAAkD,8CAA8C,gDAAgD,8CAA8C,kCAAkC,uCAAuC,oDAAoD,8CAA8C,wDAAwD,aAAa,8BAA8B,SAAS,6DAA6D,yDAAyD,iCAAiC,4GAA4G,oMAAoM,iBAAiB,EAAE,aAAa,EAAE,SAAS,qDAAqD,yBAAyB,wBAAwB,OAAO,yBAAyB,6BAA6B,qDAAqD,6BAA6B,iDAAiD,0CAA0C,6BAA6B,kCAAkC,sDAAsD,6CAA6C,cAAc,uCAAuC,SAAS,yDAAyD,+DAA+D,wCAAwC,UAAU,yEAAyE,kDAAkD,wCAAwC,8CAA8C,6BAA6B,0BAA0B,OAAO,2IAA2I,0WAA0W,iCAAiC,4BAA4B,gEAAgE,mHAAmH,EAAE,oGAAoG,8IAA8I,0GAA0G,+DAA+D,0FAA0F,uDAAuD,+DAA+D,8CAA8C,aAAa,uDAAuD,UAAU,+HAA+H,+CAA+C,8CAA8C,sJAAsJ,2BAA2B,qBAAqB,OAAO,kDAAkD,qEAAqE,+CAA+C,yDAAyD,2BAA2B,iBAAiB,aAAa,uDAAuD,UAAU,sGAAsG,qCAAqC,UAAU,oGAAoG,mCAAmC,UAAU,oEAAoE,yBAAyB,yBAAyB,OAAO,4EAA4E,6CAA6C,oDAAoD,gDAAgD,mDAAmD,+DAA+D,wFAAwF,yDAAyD,oDAAoD,0DAA0D,iCAAiC,gDAAgD,EAAE,aAAa,EAAE,sEAAsE,+BAA+B,+CAA+C,iFAAiF,iFAAiF,aAAa,oGAAoG,iCAAiC,uEAAuE,wEAAwE,0EAA0E,2EAA2E,wDAAwD,yDAAyD,mEAAmE,8CAA8C,oCAAoC,kFAAkF,wDAAwD,qJAAqJ,8CAA8C,aAAa,kBAAkB,oFAAoF,6CAA6C,6CAA6C,8CAA8C,+CAA+C,8DAA8D,6DAA6D,qBAAqB,kBAAkB,4CAA4C,6CAA6C,8DAA8D,mDAAmD,qBAAqB,kBAAkB,gNAAgN,aAAa,0CAA0C,UAAU,qDAAqD,gFAAgF,uBAAuB,UAAU,+CAA+C,wCAAwC,aAAa,oEAAoE,yCAAyC,iCAAiC,+CAA+C,6EAA6E,6EAA6E,aAAa,oEAAoE,mBAAmB,sDAAsD,2CAA2C,4CAA4C,gDAAgD,uDAAuD,yBAAyB,UAAU,GAAG,UAAU,oBAAoB,eAAe,iDAAiD,sCAAsC,oEAAoE,2BAA2B,4GAA4G,uBAAuB,GAAG,iBAAiB,sEAAsE,kHAAkH,kCAAkC,4DAA4D,0CAA0C,0DAA0D,qBAAqB,0CAA0C,wDAAwD,qBAAqB,6EAA6E,iBAAiB,EAAE,aAAa,SAAS,gDAAgD,sLAAsL,+HAA+H,kEAAkE,aAAa,+CAA+C,yCAAyC,yEAAyE,aAAa,2DAA2D,2BAA2B,iFAAiF,oCAAoC,+FAA+F,qBAAqB,iBAAiB,2DAA2D,+CAA+C,sGAAsG,oGAAoG,mCAAmC,qBAAqB,0BAA0B,sDAAsD,mDAAmD,4CAA4C,oFAAoF,yBAAyB,qBAAqB,iBAAiB,EAAE,kCAAkC,aAAa,oDAAoD,0CAA0C,6DAA6D,iDAAiD,2BAA2B,gCAAgC,iBAAiB,yDAAyD,qDAAqD,8BAA8B,wDAAwD,oDAAoD,iEAAiE,aAAa,+BAA+B,6bAA6b,qlBAAqlB,2RAA2R,6BAA6B,+MAA+M,iBAAiB,+BAA+B,6BAA6B,yDAAyD,iBAAiB,aAAa,SAAS,EAAE,aAAa,oEAAoE,wDAAwD,kDAAkD,4CAA4C,gDAAgD,sDAAsD,qDAAqD,kDAAkD,8DAA8D,6DAA6D,iDAAiD,8CAA8C,iEAAiE,6DAA6D,4GAA4G,6BAA6B,+CAA+C,uEAAuE,qBAAqB,iBAAiB,mHAAmH,mCAAmC,0CAA0C,qBAAqB,qVAAqV,+CAA+C,kDAAkD,4CAA4C,iBAAiB,yDAAyD,wEAAwE,uCAAuC,iJAAiJ,+FAA+F,sDAAsD,8DAA8D,EAAE,iBAAiB,+CAA+C,+BAA+B,oDAAoD,wEAAwE,gHAAgH,uDAAuD,6BAA6B,yBAAyB,EAAE,oHAAoH,qBAAqB,8CAA8C,sJAAsJ,EAAE,iBAAiB,iDAAiD,4CAA4C,4CAA4C,aAAa,mEAAmE,yDAAyD,+FAA+F,kEAAkE,aAAa,gDAAgD,mEAAmE,aAAa,sCAAsC,SAAS,EAAE,aAAa,oEAAoE,8IAA8I,4CAA4C,4CAA4C,kDAAkD,2CAA2C,kDAAkD,yDAAyD,6BAA6B,mBAAmB,iCAAiC,oEAAoE,qCAAqC,oEAAoE,sDAAsD,SAAS,qDAAqD,8EAA8E,wDAAwD,UAAU,0EAA0E,uDAAuD,2DAA2D,qDAAqD,uDAAuD,wCAAwC,oCAAoC,aAAa,yFAAyF,yCAAyC,oDAAoD,sEAAsE,4HAA4H,gCAAgC,sCAAsC,mCAAmC,aAAa,iFAAiF,uBAAuB,aAAa,6GAA6G,iEAAiE,yCAAyC,qCAAqC,uCAAuC,4CAA4C,sEAAsE,UAAU,0FAA0F,2CAA2C,0BAA0B,uBAAuB,aAAa,8BAA8B,uDAAuD,4DAA4D,+CAA+C,iEAAiE,sFAAsF,2DAA2D,aAAa,EAAE,8DAA8D,sEAAsE,yDAAyD,sCAAsC,2EAA2E,aAAa,mEAAmE,yCAAyC,wCAAwC,kCAAkC,2CAA2C,iBAAiB,qCAAqC,iDAAiD,iBAAiB,+BAA+B,0FAA0F,mDAAmD,2EAA2E,0DAA0D,qBAAqB,EAAE,4BAA4B,+CAA+C,4CAA4C,qBAAqB,EAAE,iBAAiB,iCAAiC,aAAa,oCAAoC,8BAA8B,UAAU,6DAA6D,8IAA8I,UAAU,6EAA6E,oCAAoC,oCAAoC,0JAA0J,UAAU,8EAA8E,mEAAmE,oDAAoD,UAAU,oEAAoE,iCAAiC,iCAAiC,mCAAmC,+BAA+B,sCAAsC,oDAAoD,wEAAwE,0DAA0D,0DAA0D,4FAA4F,oEAAoE,kEAAkE,oCAAoC,UAAU,qEAAqE,wDAAwD,8EAA8E,oEAAoE,UAAU,qDAAqD,sCAAsC,aAAa,oEAAoE,0GAA0G,4CAA4C,yDAAyD,6BAA6B,mBAAmB,qCAAqC,kEAAkE,qCAAqC,+DAA+D,SAAS,iDAAiD,iFAAiF,oDAAoD,qDAAqD,+CAA+C,wBAAwB,mDAAmD,aAAa,EAAE,6BAA6B,gEAAgE,UAAU,4EAA4E,iDAAiD,yCAAyC,0BAA0B,wBAAwB,wEAAwE,cAAc,gEAAgE,gEAAgE,UAAU,kFAAkF,uCAAuC,uDAAuD,qEAAqE,mEAAmE,2EAA2E,2DAA2D,kFAAkF,yFAAyF,aAAa,2DAA2D,iIAAiI,yCAAyC,6CAA6C,0CAA0C,UAAU,iEAAiE,2CAA2C,qEAAqE,UAAU,mDAAmD,oCAAoC,aAAa,oEAAoE,gJAAgJ,4CAA4C,kDAAkD,2CAA2C,yDAAyD,uCAAuC,mBAAmB,qCAAqC,wEAAwE,8DAA8D,gCAAgC,uCAAuC,SAAS,6DAA6D,sGAAsG,4DAA4D,UAAU,qGAAqG,kCAAkC,gCAAgC,wBAAwB,2BAA2B,mBAAmB,OAAO,uCAAuC,mCAAmC,yCAAyC,oCAAoC,aAAa,4BAA4B,uBAAuB,aAAa,6BAA6B,sBAAsB,OAAO,oCAAoC,aAAa,sCAAsC,+BAA+B,UAAU,qFAAqF,gCAAgC,UAAU,4FAA4F,+BAA+B,sCAAsC,wCAAwC,oCAAoC,6BAA6B,sDAAsD,aAAa,8CAA8C,sBAAsB,+CAA+C,0JAA0J,mCAAmC,YAAY,WAAW,8CAA8C,8BAA8B,qBAAqB,iBAAiB,oGAAoG,aAAa,kBAAkB,2CAA2C,aAAa,WAAW,6CAA6C,8BAA8B,qBAAqB,iBAAiB,qDAAqD,aAAa,oLAAoL,+DAA+D,6DAA6D,gEAAgE,sCAAsC,uCAAuC,oCAAoC,UAAU,sDAAsD,0CAA0C,aAAa,oEAAoE,gFAAgF,yDAAyD,kDAAkD,oDAAoD,oBAAoB,uEAAuE,kDAAkD,sCAAsC,gDAAgD,iCAAiC,iBAAiB,OAAO,sCAAsC,qCAAqC,0DAA0D,uCAAuC,gBAAgB,OAAO,8DAA8D,yBAAyB,qBAAqB,0BAA0B,0DAA0D,6CAA6C,8FAA8F,yBAAyB,8BAA8B,8DAA8D,yBAAyB,qBAAqB,iBAAiB,aAAa,+CAA+C,uCAAuC,sCAAsC,gDAAgD,kEAAkE,0EAA0E,iBAAiB,OAAO,sCAAsC,qCAAqC,uCAAuC,gBAAgB,OAAO,6LAA6L,yCAAyC,6BAA6B,yBAAyB,qBAAqB,0BAA0B,6CAA6C,gNAAgN,yCAAyC,6BAA6B,yBAAyB,8BAA8B,qLAAqL,yCAAyC,6BAA6B,yBAAyB,qBAAqB,iBAAiB,4BAA4B,aAAa,SAAS,EAAE,oCAAoC,6CAA6C,kDAAkD,SAAS,uDAAuD,0EAA0E,yBAAyB,qEAAqE,mCAAmC,wCAAwC,+CAA+C,+BAA+B,0HAA0H,EAAE,mHAAmH,wDAAwD,8BAA8B,uDAAuD,aAAa,oCAAoC,sKAAsK,iDAAiD,wCAAwC,2EAA2E,oCAAoC,qGAAqG,iBAAiB,aAAa,EAAE,4DAA4D,UAAU,gEAAgE,6CAA6C,mCAAmC,oEAAoE,EAAE,UAAU,+CAA+C,mCAAmC,UAAU,yCAAyC,aAAa,oEAAoE,qDAAqD,sEAAsE,4DAA4D,qDAAqD,8FAA8F,+DAA+D,2IAA2I,iCAAiC,4GAA4G,4IAA4I,yBAAyB,qBAAqB,iCAAiC,wDAAwD,uCAAuC,mBAAmB,OAAO,sEAAsE,yBAAyB,qBAAqB,0BAA0B,iEAAiE,iEAAiE,sFAAsF,yCAAyC,uQAAuQ,yBAAyB,qBAAqB,qDAAqD,iBAAiB,EAAE,aAAa,EAAE,UAAU,aAAa,+CAA+C,uCAAuC,wCAAwC,2BAA2B,aAAa,qBAAqB,SAAS,6CAA6C,sEAAsE,iDAAiD,sEAAsE,0EAA0E,2EAA2E,4EAA4E,wEAAwE,8EAA8E,4EAA4E,yEAAyE,4CAA4C,2DAA2D,qFAAqF,yFAAyF,8DAA8D,4FAA4F,wFAAwF,8FAA8F,4FAA4F,kEAAkE,iBAAiB,EAAE,aAAa,EAAE,UAAU,aAAa,oEAAoE,yCAAyC,iCAAiC,aAAa,oEAAoE,0DAA0D,2DAA2D,+CAA+C,6FAA6F,uEAAuE,aAAa,+BAA+B,6cAA6c,SAAS,EAAE,aAAa,oEAAoE,sDAAsD,oDAAoD,4CAA4C,2EAA2E,yDAAyD,gEAAgE,wBAAwB,mNAAmN,aAAa,EAAE,uCAAuC,8BAA8B,mCAAmC,uGAAuG,SAAS,OAAO,yDAAyD,mEAAmE,sCAAsC,8BAA8B,qBAAqB,iBAAiB,gCAAgC,6EAA6E,QAAQ,OAAO,6DAA6D,uEAAuE,0CAA0C,kCAAkC,yBAAyB,qBAAqB,iBAAiB,wDAAwD,cAAc,SAAS,8DAA8D,yDAAyD,8IAA8I,mCAAmC,0DAA0D,cAAc,SAAS,4CAA4C,iDAAiD,mJAAmJ,SAAS,mEAAmE,0FAA0F,0CAA0C,yEAAyE,wEAAwE,2DAA2D,8DAA8D,yBAAyB,qBAAqB,EAAE,iBAAiB,EAAE,6BAA6B,iDAAiD,2EAA2E,qBAAqB,iBAAiB,yCAAyC,4DAA4D,sFAAsF,mFAAmF,iBAAiB,mDAAmD,qIAAqI,iBAAiB,aAAa,sCAAsC,qFAAqF,wDAAwD,sDAAsD,sDAAsD,iCAAiC,wFAAwF,gGAAgG,yBAAyB,8DAA8D,6GAA6G,yBAAyB,qBAAqB,uDAAuD,sDAAsD,mBAAmB,yCAAyC,iDAAiD,0DAA0D,+DAA+D,gDAAgD,uDAAuD,yFAAyF,wFAAwF,sEAAsE,6EAA6E,iDAAiD,udAAud,4CAA4C,6BAA6B,2DAA2D,4GAA4G,mCAAmC,yBAAyB,oMAAoM,mDAAmD,oCAAoC,yOAAyO,qCAAqC,+KAA+K,yBAAyB,EAAE,qBAAqB,0BAA0B,4GAA4G,mCAAmC,yBAAyB,mDAAmD,wKAAwK,+KAA+K,yBAAyB,EAAE,qBAAqB,6DAA6D,mGAAmG,2FAA2F,0FAA0F,oEAAoE,8EAA8E,qBAAqB,kEAAkE,0CAA0C,0DAA0D,kDAAkD,qBAAqB,wDAAwD,2DAA2D,iGAAiG,qBAAqB,6DAA6D,mEAAmE,sGAAsG,qBAAqB,2CAA2C,kGAAkG,aAAa,sCAAsC,qDAAqD,iBAAiB,EAAE,aAAa,+EAA+E,0EAA0E,gFAAgF,wCAAwC,6EAA6E,oBAAoB,mDAAmD,qFAAqF,+DAA+D,iEAAiE,mEAAmE,mEAAmE,uDAAuD,qEAAqE,mDAAmD,kFAAkF,4CAA4C,uEAAuE,yEAAyE,mCAAmC,oCAAoC,kGAAkG,yDAAyD,+BAA+B,+BAA+B,mCAAmC,8BAA8B,iBAAiB,EAAE,8DAA8D,sUAAsU,yJAAyJ,wKAAwK,gDAAgD,6CAA6C,4BAA4B,wMAAwM,kDAAkD,EAAE,oCAAoC,aAAa,SAAS,EAAE,eAAe,oEAAoE,qNAAqN,4CAA4C,uGAAuG,+CAA+C,iCAAiC,iCAAiC,gCAAgC,kCAAkC,gCAAgC,wCAAwC,SAAS,+BAA+B,oGAAoG,MAAM,gEAAgE,OAAO,0CAA0C,OAAO,wHAAwH,6CAA6C,oFAAoF,0FAA0F,uDAAuD,2CAA2C,kDAAkD,sCAAsC,qCAAqC,uCAAuC,+BAA+B,SAAS,OAAO,oCAAoC,iCAAiC,iCAAiC,qCAAqC,qGAAqG,0GAA0G,uDAAuD,iBAAiB,oKAAoK,4CAA4C,+BAA+B,6CAA6C,iDAAiD,iDAAiD,0DAA0D,4CAA4C,yDAAyD,uFAAuF,mGAAmG,+FAA+F,mKAAmK,oEAAoE,wEAAwE,wEAAwE,sFAAsF,qBAAqB,0BAA0B,oCAAoC,qBAAqB,iBAAiB,kDAAkD,gCAAgC,aAAa,iJAAiJ,OAAO,sEAAsE,mGAAmG,wFAAwF,8BAA8B,sCAAsC,uCAAuC,yDAAyD,0CAA0C,qQAAqQ,+CAA+C,oKAAoK,0FAA0F,qEAAqE,gCAAgC,2BAA2B,mCAAmC,aAAa,0JAA0J,0DAA0D,0HAA0H,yCAAyC,4BAA4B,+BAA+B,SAAS,OAAO,2DAA2D,wDAAwD,wDAAwD,wDAAwD,wDAAwD,iBAAiB,yCAAyC,aAAa,UAAU,mCAAmC,eAAe,oEAAoE,oDAAoD,mCAAmC,mCAAmC,iCAAiC,uDAAuD,6CAA6C,8EAA8E,gIAAgI,gGAAgG,aAAa,oEAAoE,0EAA0E,6GAA6G,q4CAAq4C,kDAAkD,qEAAqE,wFAAwF,aAAa,SAAS,EAAE,8CAA8C,aAAa,oEAAoE,oDAAoD,8CAA8C,kDAAkD,gDAAgD,8CAA8C,qDAAqD,8EAA8E,0EAA0E,2DAA2D,cAAc,4DAA4D,UAAU,sDAAsD,gEAAgE,+FAA+F,uCAAuC,iDAAiD,yCAAyC,+DAA+D,uDAAuD,6DAA6D,4DAA4D,6BAA6B,6BAA6B,+CAA+C,ueAAue,mFAAmF,wDAAwD,mCAAmC,yBAAyB,wEAAwE,wFAAwF,qEAAqE,gEAAgE,uCAAuC,6DAA6D,qBAAqB,4DAA4D,qEAAqE,yDAAyD,8CAA8C,mCAAmC,yBAAyB,uEAAuE,uFAAuF,gFAAgF,mFAAmF,8CAA8C,kEAAkE,uCAAuC,yBAAyB,oCAAoC,4DAA4D,yBAAyB,8BAA8B,yEAAyE,yBAAyB,+DAA+D,+DAA+D,0EAA0E,6DAA6D,qBAAqB,mDAAmD,sEAAsE,4GAA4G,qBAAqB,gCAAgC,oCAAoC,oCAAoC,aAAa,mFAAmF,uCAAuC,sCAAsC,+CAA+C,+BAA+B,+DAA+D,yEAAyE,yBAAyB,EAAE,qBAAqB,iBAAiB,sBAAsB,sCAAsC,iBAAiB,aAAa,SAAS,EAAE,uJAAuJ,uDAAuD,6DAA6D,yDAAyD,4EAA4E,6DAA6D,oEAAoE,4EAA4E,oEAAoE,gCAAgC,itBAAitB,iFAAiF,gNAAgN,6FAA6F,qDAAqD,6DAA6D,+CAA+C,mLAAmL,aAAa,oRAAoR,gCAAgC,SAAS,yHAAyH,wCAAwC,yEAAyE,kFAAkF,2EAA2E,4DAA4D,+BAA+B,uDAAuD,qOAAqO,sGAAsG,iEAAiE,aAAa,kDAAkD,8FAA8F,aAAa,oCAAoC,wFAAwF,aAAa,kBAAkB,qDAAqD,aAAa,qDAAqD,iCAAiC,6DAA6D,aAAa,mFAAmF,SAAS,sDAAsD,iFAAiF,SAAS,mNAAmN,wCAAwC,8CAA8C,gEAAgE,2EAA2E,6CAA6C,gDAAgD,aAAa,kBAAkB,yCAAyC,wCAAwC,iBAAiB,sDAAsD,aAAa,6eAA6e,qLAAqL,6CAA6C,uOAAuO,wJAAwJ,SAAS,oFAAoF,4SAA4S,mCAAmC,uCAAuC,sGAAsG,EAAE,mDAAmD,kEAAkE,kEAAkE,aAAa,qDAAqD,SAAS,0NAA0N,8CAA8C,wCAAwC,uCAAuC,wFAAwF,qCAAqC,wOAAwO,iEAAiE,gGAAgG,sCAAsC,gFAAgF,qCAAqC,kFAAkF,iBAAiB,sFAAsF,kFAAkF,qPAAqP,sMAAsM,mKAAmK,8MAA8M,uFAAuF,+DAA+D,0DAA0D,6IAA6I,wKAAwK,iBAAiB,kEAAkE,iDAAiD,mDAAmD,aAAa,mDAAmD,wDAAwD,yEAAyE,uNAAuN,2CAA2C,mDAAmD,mDAAmD,aAAa,8DAA8D,uEAAuE,iEAAiE,uEAAuE,UAAU,uKAAuK,kEAAkE,oDAAoD,gIAAgI,mEAAmE,uCAAuC,yDAAyD,SAAS,2CAA2C,iEAAiE,8UAA8U,uBAAuB,0CAA0C,EAAE,oDAAoD,gDAAgD,EAAE,0BAA0B,SAAS,gFAAgF,+CAA+C,mDAAmD,2DAA2D,uDAAuD,wCAAwC,0DAA0D,4BAA4B,qGAAqG,6CAA6C,uDAAuD,0DAA0D,0CAA0C,oFAAoF,iBAAiB,sBAAsB,4CAA4C,cAAc,qCAAqC,4CAA4C,qBAAqB,EAAE,iBAAiB,yDAAyD,0BAA0B,aAAa,EAAE,oBAAoB,qBAAqB,WAAW,kDAAkD,uDAAuD,0DAA0D,iCAAiC,uDAAuD,2EAA2E,4GAA4G,sBAAsB,kHAAkH,8EAA8E,wMAAwM,yDAAyD,aAAa,0CAA0C,oDAAoD,gIAAgI,+CAA+C,8BAA8B,6FAA6F,gDAAgD,iBAAiB,6GAA6G,0BAA0B,oKAAoK,aAAa,sCAAsC,+CAA+C,6CAA6C,iBAAiB,EAAE,aAAa,qCAAqC,+CAA+C,2CAA2C,iBAAiB,EAAE,aAAa,SAAS,+EAA+E,+CAA+C,mDAAmD,8BAA8B,4EAA4E,qCAAqC,+EAA+E,kLAAkL,sBAAsB,kFAAkF,8EAA8E,2HAA2H,aAAa,kBAAkB,sGAAsG,0MAA0M,8EAA8E,aAAa,yDAAyD,sCAAsC,yCAAyC,aAAa,qCAAqC,uCAAuC,aAAa,SAAS,2GAA2G,4CAA4C,2BAA2B,mDAAmD,2BAA2B,qEAAqE,4HAA4H,mJAAmJ,iBAAiB,EAAE,mCAAmC,aAAa,kBAAkB,2CAA2C,iBAAiB,wBAAwB,aAAa,SAAS,uEAAuE,sGAAsG,uDAAuD,gDAAgD,wBAAwB,4CAA4C,+DAA+D,qDAAqD,iCAAiC,2EAA2E,iBAAiB,iDAAiD,iBAAiB,sBAAsB,+CAA+C,iDAAiD,iBAAiB,EAAE,gEAAgE,uDAAuD,sCAAsC,4EAA4E,yGAAyG,cAAc,iDAAiD,iBAAiB,aAAa,SAAS,kDAAkD,yDAAyD,wEAAwE,8DAA8D,6BAA6B,SAAS,kDAAkD,oGAAoG,sHAAsH,SAAS,yCAAyC,0KAA0K,SAAS,2DAA2D,+CAA+C,yDAAyD,2FAA2F,oCAAoC,oFAAoF,qBAAqB,iBAAiB,2CAA2C,oCAAoC,iEAAiE,qBAAqB,iBAAiB,EAAE,SAAS,+DAA+D,+FAA+F,iGAAiG,4BAA4B,2CAA2C,uEAAuE,4CAA4C,kEAAkE,aAAa,kBAAkB,iEAAiE,aAAa,+DAA+D,iEAAiE,sEAAsE,mDAAmD,yBAAyB,SAAS,oDAAoD,2DAA2D,iDAAiD,+CAA+C,2DAA2D,4CAA4C,yCAAyC,4CAA4C,wEAAwE,aAAa,kBAAkB,uEAAuE,aAAa,2DAA2D,6DAA6D,SAAS,oEAAoE,8FAA8F,qDAAqD,8BAA8B,2CAA2C,kCAAkC,aAAa,EAAE,4EAA4E,mIAAmI,mDAAmD,+DAA+D,cAAc,6DAA6D,6DAA6D,qBAAqB,kBAAkB,aAAa,EAAE,qDAAqD,SAAS,kDAAkD,0MAA0M,SAAS,+CAA+C,qJAAqJ,sEAAsE,aAAa,EAAE,SAAS,6FAA6F,sDAAsD,+JAA+J,0DAA0D,aAAa,kBAAkB,+LAA+L,aAAa,SAAS,uDAAuD,yCAAyC,iDAAiD,iDAAiD,qNAAqN,qFAAqF,6DAA6D,6CAA6C,qGAAqG,mEAAmE,4GAA4G,mDAAmD,wDAAwD,6DAA6D,wCAAwC,aAAa,EAAE,yCAAyC,4FAA4F,iDAAiD,6KAA6K,gEAAgE,SAAS,sCAAsC,iDAAiD,8JAA8J,SAAS,mCAAmC,aAAa,oEAAoE,qDAAqD,4CAA4C,mCAAmC,mCAAmC,mCAAmC,2DAA2D,2DAA2D,8GAA8G,aAAa,oEAAoE,yCAAyC,iCAAiC,iCAAiC,iCAAiC,mCAAmC,+CAA+C,uCAAuC,mCAAmC,EAAE,eAAe,oEAAoE,0GAA0G,oHAAoH,4BAA4B,2BAA2B,4BAA4B,wBAAwB,2CAA2C,kDAAkD,6BAA6B,4EAA4E,mEAAmE,8CAA8C,8CAA8C,oDAAoD,qCAAqC,eAAe,EAAE,yDAAyD,2EAA2E,mEAAmE,iMAAiM,KAAK,uGAAuG,iBAAiB,aAAa,EAAE,6BAA6B,SAAS,sDAAsD,uFAAuF,EAAE,aAAa,oEAAoE,uGAAuG,kDAAkD,6CAA6C,wFAAwF,sCAAsC,6BAA6B,4BAA4B,2BAA2B,4BAA4B,iEAAiE,uCAAuC,OAAO,6EAA6E,iGAAiG,eAAe,gFAAgF,8DAA8D,uCAAuC,8CAA8C,8DAA8D,iCAAiC,sCAAsC,kDAAkD,uCAAuC,sCAAsC,kDAAkD,SAAS,8BAA8B,oNAAoN,sCAAsC,kCAAkC,4BAA4B,gCAAgC,4BAA4B,iGAAiG,2CAA2C,qQAAqQ,4DAA4D,yEAAyE,wDAAwD,sDAAsD,wCAAwC,uCAAuC,6CAA6C,kCAAkC,aAAa,+FAA+F,4BAA4B,gCAAgC,4BAA4B,gEAAgE,2DAA2D,gEAAgE,yDAAyD,iDAAiD,2JAA2J,uFAAuF,qBAAqB,iBAAiB,QAAQ,aAAa,2GAA2G,sCAAsC,kCAAkC,4BAA4B,kEAAkE,uEAAuE,sVAAsV,sBAAsB,kHAAkH,kBAAkB,qCAAqC,aAAa,0CAA0C,iCAAiC,iDAAiD,kCAAkC,aAAa,8FAA8F,wCAAwC,sCAAsC,yDAAyD,+EAA+E,gDAAgD,+DAA+D,kFAAkF,eAAe,0CAA0C,uCAAuC,6BAA6B,OAAO,uFAAuF,oDAAoD,8DAA8D,uDAAuD,2FAA2F,iDAAiD,qBAAqB,wCAAwC,6DAA6D,sBAAsB,0FAA0F,iDAAiD,qBAAqB,wCAAwC,6DAA6D,sBAAsB,aAAa,gFAAgF,uCAAuC,iDAAiD,kCAAkC,aAAa,8GAA8G,OAAO,mEAAmE,kCAAkC,aAAa,0CAA0C,kCAAkC,iDAAiD,oCAAoC,aAAa,0CAA0C,OAAO,EAAE,4BAA4B,wDAAwD,wBAAwB,4BAA4B,aAAa,wFAAwF,eAAe,8BAA8B,QAAQ,2DAA2D,0CAA0C,0CAA0C,yCAAyC,8CAA8C,sJAAsJ,iBAAiB,sBAAsB,sJAAsJ,iBAAiB,aAAa,yCAAyC,eAAe,8BAA8B,eAAe,0DAA0D,0CAA0C,8IAA8I,aAAa,iHAAiH,sBAAsB,4BAA4B,eAAe,wDAAwD,0CAA0C,0CAA0C,4BAA4B,+DAA+D,6CAA6C,iCAAiC,iBAAiB,uEAAuE,iGAAiG,0BAA0B,aAAa,YAAY,kCAAkC,eAAe,oEAAoE,oDAAoD,4CAA4C,iGAAiG,0BAA0B,mBAAmB,OAAO,uBAAuB,EAAE,yBAAyB,eAAe,+BAA+B,OAAO,4BAA4B,OAAO,qGAAqG,uDAAuD,+JAA+J,OAAO,2DAA2D,sKAAsK,OAAO,gEAAgE,2HAA2H,OAAO,8CAA8C,uCAAuC,OAAO,sDAAsD,YAAY,kCAAkC,sGAAsG,sCAAsC,4HAA4H,QAAQ,sDAAsD,6CAA6C,mEAAmE,eAAe,2GAA2G,0EAA0E,aAAa,+NAA+N,SAAS,6MAA6M,SAAS,yDAAyD,4CAA4C,sCAAsC,aAAa,oEAAoE,2DAA2D,6CAA6C,8CAA8C,wDAAwD,kDAAkD,wDAAwD,uGAAuG,4CAA4C,gEAAgE,wJAAwJ,yCAAyC,oCAAoC,mEAAmE,uEAAuE,8EAA8E,oDAAoD,iEAAiE,iFAAiF,iBAAiB,6FAA6F,aAAa,+DAA+D,0CAA0C,6CAA6C,2BAA2B,iBAAiB,uEAAuE,0EAA0E,4DAA4D,6DAA6D,8EAA8E,uFAAuF,sEAAsE,uDAAuD,sCAAsC,kCAAkC,0DAA0D,8BAA8B,4BAA4B,iCAAiC,wBAAwB,OAAO,gEAAgE,iCAAiC,qBAAqB,uEAAuE,uCAAuC,0CAA0C,2CAA2C,0CAA0C,6DAA6D,qBAAqB,0BAA0B,2CAA2C,0CAA0C,4DAA4D,0CAA0C,qBAAqB,uEAAuE,0EAA0E,uHAAuH,oCAAoC,oMAAoM,qCAAqC,iFAAiF,kEAAkE,IAAI,iBAAiB,iCAAiC,uBAAuB,OAAO,qEAAqE,gCAAgC,2NAA2N,0DAA0D,GAAG,iBAAiB,aAAa,SAAS,EAAE,0CAA0C,eAAe,oEAAoE,oDAAoD,0BAA0B,gCAAgC,OAAO,MAAM,YAAY,oBAAoB,OAAO,EAAE,iIAAiI,8DAA8D,4BAA4B,oDAAoD,sCAAsC,4BAA4B,+CAA+C,qCAAqC,0CAA0C,wFAAwF,iCAAiC,6BAA6B,wCAAwC,4BAA4B,wCAAwC,cAAc,kTAAkT,uBAAuB,4BAA4B,sDAAsD,kCAAkC,wCAAwC,6IAA6I,qDAAqD,6DAA6D,aAAa,wFAAwF,+DAA+D,aAAa,6CAA6C,yFAAyF,2FAA2F,6DAA6D,4BAA4B,4BAA4B,UAAU,kCAAkC,eAAe,oEAAoE,6DAA6D,wDAAwD,6CAA6C,iDAAiD,wGAAwG,uCAAuC,6EAA6E,mCAAmC,qJAAqJ,4BAA4B,aAAa,WAAW,EAAE,+BAA+B,yNAAyN,uDAAuD,+EAA+E,aAAa,mNAAmN,uCAAuC,0BAA0B,iFAAiF,6CAA6C,aAAa,2BAA2B,wEAAwE,2BAA2B,uDAAuD,oFAAoF,aAAa,UAAU,kDAAkD,uEAAuE,SAAS,sEAAsE,4EAA4E,qCAAqC,aAAa,oEAAoE,qDAAqD,8DAA8D,mDAAmD,4CAA4C,mCAAmC,iCAAiC,8QAA8Q,0DAA0D,iGAAiG,uHAAuH,EAAE,qDAAqD,sPAAsP,qDAAqD,iBAAiB,aAAa,SAAS,EAAE,0PAA0P,2RAA2R,SAAS,EAAE,oEAAoE,8HAA8H,eAAe,eAAe,oEAAoE,oDAAoD,+CAA+C,mDAAmD,2DAA2D,iCAAiC,iCAAiC,yCAAyC,0JAA0J,OAAO,oCAAoC,OAAO,2BAA2B,OAAO,yEAAyE,eAAe,wIAAwI,eAAe,wIAAwI,OAAO,iFAAiF,OAAO,qEAAqE,OAAO,qEAAqE,qIAAqI,yBAAyB,SAAS,4CAA4C,OAAO,2CAA2C,+BAA+B,kHAAkH,4BAA4B,2BAA2B,4BAA4B,wBAAwB,OAAO,0GAA0G,kDAAkD,+CAA+C,iCAAiC,gGAAgG,wFAAwF,wCAAwC,mNAAmN,0OAA0O,iBAAiB,aAAa,qDAAqD,8EAA8E,0BAA0B,qRAAqR,uDAAuD,4EAA4E,kCAAkC,oCAAoC,kCAAkC,mBAAmB,4BAA4B,2IAA2I,6HAA6H,8KAA8K,iGAAiG,6CAA6C,mFAAmF,sKAAsK,uEAAuE,6DAA6D,0DAA0D,yBAAyB,mGAAmG,qBAAqB,iBAAiB,EAAE,aAAa,EAAE,2EAA2E,2DAA2D,sDAAsD,mKAAmK,6EAA6E,8DAA8D,yKAAyK,uDAAuD,oOAAoO,gEAAgE,yBAAyB,qBAAqB,EAAE,iBAAiB,aAAa,EAAE,uDAAuD,mFAAmF,aAAa,EAAE,wEAAwE,oFAAoF,oEAAoE,kCAAkC,SAAS,wFAAwF,qCAAqC,wEAAwE,uBAAuB,aAAa,4CAA4C,yDAAyD,uBAAuB,aAAa,sJAAsJ,wDAAwD,sDAAsD,yNAAyN,6DAA6D,aAAa,kLAAkL,2EAA2E,2CAA2C,iBAAiB,aAAa,mFAAmF,qOAAqO,SAAS,2DAA2D,qCAAqC,+BAA+B,oCAAoC,kCAAkC,2CAA2C,6BAA6B,kEAAkE,4DAA4D,uCAAuC,gCAAgC,kDAAkD,iFAAiF,qDAAqD,6DAA6D,iBAAiB,sBAAsB,mWAAmW,8CAA8C,+BAA+B,qBAAqB,0FAA0F,iBAAiB,oFAAoF,2BAA2B,iBAAiB,wDAAwD,0CAA0C,+EAA+E,uEAAuE,uCAAuC,uCAAuC,yDAAyD,gDAAgD,qBAAqB,4DAA4D,2CAA2C,0NAA0N,EAAE,qBAAqB,EAAE,iBAAiB,aAAa,EAAE,sBAAsB,iGAAiG,SAAS,6EAA6E,0CAA0C,0CAA0C,SAAS,8EAA8E,wDAAwD,qCAAqC,uCAAuC,6DAA6D,mNAAmN,uBAAuB,aAAa,0DAA0D,iEAAiE,+DAA+D,gCAAgC,kEAAkE,uRAAuR,uDAAuD,aAAa,4CAA4C,6jBAA6jB,8JAA8J,qEAAqE,EAAE,SAAS,8EAA8E,4DAA4D,gIAAgI,8DAA8D,gDAAgD,gCAAgC,oEAAoE,iDAAiD,mJAAmJ,iBAAiB,kIAAkI,iMAAiM,iBAAiB,wIAAwI,yKAAyK,EAAE,aAAa,EAAE,SAAS,4FAA4F,oJAAoJ,gCAAgC,gBAAgB,EAAE,uBAAuB,aAAa,yVAAyV,oCAAoC,8BAA8B,4bAA4b,EAAE,SAAS,4EAA4E,qNAAqN,0DAA0D,4DAA4D,0DAA0D,sMAAsM,8DAA8D,iGAAiG,kFAAkF,mDAAmD,iBAAiB,EAAE,aAAa,EAAE,uDAAuD,gCAAgC,mEAAmE,kEAAkE,aAAa,EAAE,kEAAkE,oEAAoE,aAAa,EAAE,uDAAuD,qFAAqF,EAAE,sDAAsD,uFAAuF,EAAE,SAAS,+DAA+D,2BAA2B,kCAAkC,OAAO,qDAAqD,uKAAuK,yCAAyC,iBAAiB,aAAa,SAAS,8CAA8C,gDAAgD,0BAA0B,uDAAuD,gFAAgF,oEAAoE,8DAA8D,wBAAwB,SAAS,wCAAwC,wGAAwG,SAAS,uCAAuC,aAAa,oEAAoE,oDAAoD,+CAA+C,gCAAgC,OAAO,kBAAkB,wCAAwC,mBAAmB,4BAA4B,4BAA4B,OAAO,EAAE,uBAAuB,wFAAwF,2BAA2B,iDAAiD,4BAA4B,4HAA4H,wBAAwB,WAAW,aAAa,+CAA+C,mEAAmE,iEAAiE,wBAAwB,WAAW,aAAa,wDAAwD,wDAAwD,mDAAmD,wEAAwE,aAAa,wDAAwD,wJAAwJ,yEAAyE,yBAAyB,+DAA+D,aAAa,0BAA0B,oGAAoG,kDAAkD,mIAAmI,aAAa,sBAAsB,sBAAsB,UAAU,iBAAiB,oEAAoE,qDAAqD,+DAA+D,qGAAqG,oqBAAoqB,8CAA8C,yNAAyN,0EAA0E,gBAAgB,iCAAiC,gBAAgB,yQAAyQ,iHAAiH,iCAAiC,mEAAmE,2BAA2B,4NAA4N,0DAA0D,8dAA8d,4BAA4B,kyBAAkyB,aAAa,WAAW,EAAE,4CAA4C,eAAe,oEAAoE,8DAA8D,2EAA2E,yGAAyG,yEAAyE,+KAA+K,2SAA2S,sPAAsP,4CAA4C,mPAAmP,EAAE,yBAAyB,qBAAqB,kBAAkB,aAAa,sGAAsG,mEAAmE,4EAA4E,aAAa,uGAAuG,8DAA8D,6EAA6E,aAAa,WAAW,EAAE,eAAe,oEAAoE,iDAAiD,4CAA4C,sDAAsD,iCAAiC,kCAAkC,gCAAgC,OAAO,uBAAuB,4BAA4B,uBAAuB,SAAS,gCAAgC,OAAO,oCAAoC,eAAe,iFAAiF,2BAA2B,uBAAuB,aAAa,mCAAmC,oDAAoD,EAAE,2CAA2C,6EAA6E,EAAE,qCAAqC,UAAU,iDAAiD,sCAAsC,uBAAuB,aAAa,yCAAyC,kEAAkE,wEAAwE,+CAA+C,6CAA6C,kDAAkD,+CAA+C,sDAAsD,+DAA+D,oEAAoE,qBAAqB,EAAE,gEAAgE,iBAAiB,EAAE,aAAa,SAAS,0DAA0D,kDAAkD,kDAAkD,kCAAkC,0BAA0B,gEAAgE,aAAa,+BAA+B,gEAAgE,aAAa,kCAAkC,sDAAsD,oDAAoD,aAAa,SAAS,uDAAuD,0DAA0D,SAAS,oEAAoE,2DAA2D,SAAS,4CAA4C,4BAA4B,qEAAqE,gOAAgO,wIAAwI,yDAAyD,kCAAkC,8CAA8C,iBAAiB,sBAAsB,4DAA4D,gDAAgD,iBAAiB,cAAc,sBAAsB,+FAA+F,SAAS,gCAAgC,OAAO,uBAAuB,4BAA4B,wEAAwE,2BAA2B,uBAAuB,aAAa,iCAAiC,+CAA+C,OAAO,yBAAyB,4CAA4C,aAAa,UAAU,0CAA0C,aAAa,oEAAoE,mBAAmB,kDAAkD,uDAAuD,kDAAkD,2DAA2D,gDAAgD,6DAA6D,gJAAgJ,0CAA0C,qCAAqC,mEAAmE,gGAAgG,mFAAmF,sEAAsE,4EAA4E,iKAAiK,kDAAkD,6DAA6D,qDAAqD,iBAAiB,qFAAqF,gKAAgK,aAAa,wIAAwI,mGAAmG,uDAAuD,EAAE,+EAA+E,wBAAwB,sNAAsN,aAAa,sJAAsJ,0CAA0C,qCAAqC,4DAA4D,gGAAgG,wDAAwD,wDAAwD,0DAA0D,yFAAyF,yFAAyF,+EAA+E,uEAAuE,+DAA+D,kIAAkI,wBAAwB,GAAG,gBAAgB,EAAE,0BAA0B,sNAAsN,aAAa,WAAW,EAAE,6CAA6C,yBAAyB,qDAAqD,0CAA0C,SAAS,qCAAqC,uEAAuE,wNAAwN,8CAA8C,0FAA0F,EAAE,wBAAwB,yFAAyF,aAAa,0EAA0E,oDAAoD,2DAA2D,wBAAwB,wRAAwR,aAAa,UAAU,0CAA0C,4CAA4C,SAAS,0FAA0F,gDAAgD,aAAa,oEAAoE,mBAAmB,gDAAgD,gDAAgD,8CAA8C,sDAAsD,8DAA8D,gDAAgD,+CAA+C,mCAAmC,+BAA+B,+EAA+E,2CAA2C,iDAAiD,SAAS,uCAAuC,65BAA65B,0DAA0D,4DAA4D,0MAA0M,0DAA0D,gCAAgC,mWAAmW,2BAA2B,iBAAiB,wCAAwC,0CAA0C,0CAA0C,0CAA0C,qDAAqD,yGAAyG,4CAA4C,2BAA2B,iBAAiB,sCAAsC,wCAAwC,iFAAiF,qFAAqF,0GAA0G,0DAA0D,oCAAoC,iBAAiB,kDAAkD,oIAAoI,+BAA+B,8DAA8D,uFAAuF,qFAAqF,2CAA2C,iBAAiB,sBAAsB,mGAAmG,2FAA2F,yFAAyF,iBAAiB,sEAAsE,4CAA4C,aAAa,8FAA8F,gCAAgC,aAAa,+FAA+F,gCAAgC,aAAa,kIAAkI,kEAAkE,0CAA0C,8DAA8D,2DAA2D,kHAAkH,iCAAiC,iBAAiB,kEAAkE,qEAAqE,qFAAqF,oCAAoC,qBAAqB,4TAA4T,4GAA4G,0DAA0D,+JAA+J,qBAAqB,mCAAmC,iBAAiB,4CAA4C,aAAa,sCAAsC,2BAA2B,4IAA4I,qEAAqE,gJAAgJ,qDAAqD,oCAAoC,gKAAgK,yCAAyC,iBAAiB,aAAa,8IAA8I,qCAAqC,2IAA2I,yCAAyC,mEAAmE,iBAAiB,aAAa,gIAAgI,qDAAqD,gCAAgC,+DAA+D,4CAA4C,8BAA8B,EAAE,iBAAiB,aAAa,gJAAgJ,iDAAiD,8BAA8B,2DAA2D,0CAA0C,2SAA2S,EAAE,qEAAqE,iBAAiB,aAAa,qGAAqG,oEAAoE,2BAA2B,iBAAiB,gEAAgE,2CAA2C,0CAA0C,sEAAsE,8DAA8D,+EAA+E,gDAAgD,wCAAwC,2BAA2B,iBAAiB,6BAA6B,oCAAoC,kCAAkC,qEAAqE,mDAAmD,2IAA2I,yBAAyB,0OAA0O,EAAE,mCAAmC,iBAAiB,wEAAwE,8OAA8O,+EAA+E,6FAA6F,kDAAkD,0DAA0D,iBAAiB,6EAA6E,oNAAoN,yDAAyD,aAAa,kHAAkH,yUAAyU,aAAa,0GAA0G,0CAA0C,8BAA8B,2BAA2B,iBAAiB,wCAAwC,iRAAiR,0CAA0C,yCAAyC,wDAAwD,4CAA4C,gDAAgD,aAAa,yIAAyI,0CAA0C,8BAA8B,2BAA2B,iBAAiB,sDAAsD,gDAAgD,0CAA0C,+OAA+O,oIAAoI,kBAAkB,EAAE,aAAa,gHAAgH,uCAAuC,0CAA0C,8BAA8B,2BAA2B,iBAAiB,kEAAkE,sPAAsP,gNAAgN,oDAAoD,EAAE,aAAa,0IAA0I,OAAO,6BAA6B,2BAA2B,iCAAiC,2BAA2B,yCAAyC,OAAO,EAAE,8BAA8B,+LAA+L,OAAO,YAAY,mBAAmB,uBAAuB,eAAe,sCAAsC,2BAA2B,iCAAiC,2BAA2B,yCAAyC,OAAO,EAAE,mDAAmD,iJAAiJ,uCAAuC,wCAAwC,uCAAuC,wCAAwC,0CAA0C,kCAAkC,gDAAgD,8CAA8C,gDAAgD,uCAAuC,wCAAwC,6CAA6C,iBAAiB,aAAa,4FAA4F,sEAAsE,kEAAkE,eAAe,0BAA0B,eAAe,0BAA0B,OAAO,wFAAwF,2CAA2C,wBAAwB,sLAAsL,aAAa,UAAU,kEAAkE,4EAA4E,yFAAyF,yCAAyC,4JAA4J,aAAa,SAAS,oDAAoD,0EAA0E,kCAAkC,4DAA4D,+DAA+D,iBAAiB,EAAE,gCAAgC,aAAa,kBAAkB,8CAA8C,aAAa,SAAS,mEAAmE,4EAA4E,SAAS,+CAA+C,oBAAoB,4GAA4G,SAAS,sDAAsD,kDAAkD,yBAAyB,+DAA+D,qCAAqC,wBAAwB,wDAAwD,4GAA4G,YAAY,mZAAmZ,SAAS,0EAA0E,8CAA8C,wDAAwD,qDAAqD,0CAA0C,4CAA4C,2DAA2D,uCAAuC,iBAAiB,aAAa,EAAE,SAAS,uDAAuD,2CAA2C,aAAa,oEAAoE,mBAAmB,gDAAgD,8CAA8C,iDAAiD,gDAAgD,6CAA6C,kDAAkD,mDAAmD,0BAA0B,gCAAgC,2BAA2B,uFAAuF,+DAA+D,kFAAkF,sBAAsB,6CAA6C,kDAAkD,kCAAkC,aAAa,oDAAoD,kDAAkD,oCAAoC,aAAa,yBAAyB,UAAU,gCAAgC,SAAS,WAAW,+BAA+B,oIAAoI,sDAAsD,gLAAgL,8JAA8J,cAAc,gEAAgE,kEAAkE,wFAAwF,kDAAkD,0IAA0I,+CAA+C,mEAAmE,qEAAqE,wEAAwE,wDAAwD,6DAA6D,uDAAuD,kEAAkE,sEAAsE,uGAAuG,8DAA8D,iDAAiD,oEAAoE,aAAa,gCAAgC,wBAAwB,4EAA4E,oEAAoE,0mBAA0mB,yFAAyF,UAAU,4GAA4G,2CAA2C,6CAA6C,2EAA2E,8EAA8E,mDAAmD,mDAAmD,SAAS,gCAAgC,OAAO,yBAAyB,0BAA0B,wBAAwB,4BAA4B,2BAA2B,OAAO,uBAAuB,eAAe,qCAAqC,cAAc,oDAAoD,gBAAgB,iIAAiI,oNAAoN,yBAAyB,cAAc,0CAA0C,8BAA8B,8BAA8B,uHAAuH,mEAAmE,+EAA+E,4DAA4D,+EAA+E,qEAAqE,iBAAiB,EAAE,mDAAmD,+CAA+C,MAAM,SAAS,iBAAiB,wDAAwD,6CAA6C,iBAAiB,aAAa,0BAA0B,UAAU,gCAAgC,0BAA0B,wBAAwB,OAAO,yBAAyB,OAAO,aAAa,oFAAoF,uFAAuF,4CAA4C,qEAAqE,wEAAwE,kPAAkP,UAAU,mJAAmJ,wIAAwI,0EAA0E,mFAAmF,+MAA+M,EAAE,UAAU,gCAAgC,eAAe,sBAAsB,eAAe,sBAAsB,OAAO,2FAA2F,uCAAuC,oBAAoB,6JAA6J,UAAU,gCAAgC,eAAe,sBAAsB,eAAe,sBAAsB,OAAO,2FAA2F,uCAAuC,oBAAoB,kKAAkK,UAAU,mFAAmF,oBAAoB,iNAAiN,UAAU,kCAAkC,aAAa,oEAAoE,mBAAmB,kDAAkD,uDAAuD,kDAAkD,wDAAwD,gDAAgD,8BAA8B,qCAAqC,0DAA0D,gJAAgJ,0CAA0C,qDAAqD,wFAAwF,gEAAgE,qEAAqE,oEAAoE,4EAA4E,iKAAiK,kDAAkD,+DAA+D,qDAAqD,iBAAiB,sEAAsE,gKAAgK,aAAa,wIAAwI,qEAAqE,mBAAmB,EAAE,+EAA+E,wBAAwB,sNAAsN,aAAa,sJAAsJ,0CAA0C,qDAAqD,sDAAsD,qEAAqE,sDAAsD,0DAA0D,yFAAyF,yFAAyF,0EAA0E,6EAA6E,uEAAuE,+DAA+D,0BAA0B,6KAA6K,oEAAoE,kBAAkB,aAAa,SAAS,EAAE,qCAAqC,uEAAuE,yNAAyN,8CAA8C,0FAA0F,EAAE,wBAAwB,yFAAyF,aAAa,0EAA0E,oDAAoD,2DAA2D,wBAAwB,yRAAyR,aAAa,UAAU,2CAA2C,+CAA+C,SAAS,wDAAwD,0CAA0C,iFAAiF,SAAS,oFAAoF,6CAA6C,aAAa,oEAAoE,mBAAmB,gLAAgL,kDAAkD,2CAA2C,4CAA4C,gDAAgD,+CAA+C,4CAA4C,kCAAkC,qDAAqD,kJAAkJ,iCAAiC,sIAAsI,qEAAqE,mSAAmS,6CAA6C,kBAAkB,aAAa,2JAA2J,MAAM,yDAAyD,MAAM,qDAAqD,gDAAgD,8HAA8H,2CAA2C,qBAAqB,oCAAoC,gHAAgH,4BAA4B,oGAAoG,iBAAiB,EAAE,gDAAgD,sCAAsC,+BAA+B,+BAA+B,cAAc,OAAO,yDAAyD,6CAA6C,2CAA2C,kCAAkC,qBAAqB,iBAAiB,iCAAiC,cAAc,OAAO,sCAAsC,iCAAiC,qBAAqB,+CAA+C,mCAAmC,kBAAkB,OAAO,sEAAsE,gEAAgE,0CAA0C,uCAAuC,YAAY,OAAO,kEAAkE,sDAAsD,6CAA6C,sCAAsC,6BAA6B,yBAAyB,8CAA8C,qDAAqD,+DAA+D,uDAAuD,0DAA0D,4CAA4C,2BAA2B,qBAAqB,iBAAiB,4BAA4B,aAAa,kEAAkE,OAAO,mEAAmE,2BAA2B,wEAAwE,yBAAyB,uEAAuE,sCAAsC,iEAAiE,mKAAmK,KAAK,6DAA6D,qDAAqD,wTAAwT,sBAAsB,gGAAgG,sBAAsB,iGAAiG,kBAAkB,+JAA+J,qDAAqD,iBAAiB,EAAE,4DAA4D,kCAAkC,oEAAoE,8BAA8B,iCAAiC,iBAAiB,OAAO,4DAA4D,iEAAiE,qEAAqE,gCAAgC,qBAAqB,iBAAiB,oEAAoE,wDAAwD,gDAAgD,8BAA8B,aAAa,+FAA+F,OAAO,qEAAqE,gBAAgB,oGAAoG,gCAAgC,aAAa,mKAAmK,uBAAuB,wDAAwD,0CAA0C,4CAA4C,kCAAkC,iCAAiC,cAAc,OAAO,oCAAoC,iBAAiB,uHAAuH,uDAAuD,qBAAqB,wCAAwC,yEAAyE,4BAA4B,mGAAmG,iBAAiB,EAAE,iCAAiC,wBAAwB,OAAO,0DAA0D,iBAAiB,qDAAqD,+EAA+E,iBAAiB,qCAAqC,aAAa,+GAA+G,sBAAsB,wDAAwD,OAAO,wCAAwC,uCAAuC,qFAAqF,OAAO,EAAE,0BAA0B,gFAAgF,2CAA2C,2CAA2C,iBAAiB,4CAA4C,wDAAwD,iCAAiC,kDAAkD,iCAAiC,iCAAiC,cAAc,OAAO,mDAAmD,wCAAwC,iEAAiE,mCAAmC,cAAc,OAAO,mFAAmF,8DAA8D,8CAA8C,oDAAoD,2CAA2C,mEAAmE,yBAAyB,qBAAqB,6CAA6C,iBAAiB,0BAA0B,kDAAkD,aAAa,iEAAiE,OAAO,yFAAyF,0CAA0C,2DAA2D,6DAA6D,4DAA4D,oCAAoC,iBAAiB,gEAAgE,aAAa,+BAA+B,2VAA2V,6BAA6B,6LAA6L,2GAA2G,qBAAqB,gCAAgC,uDAAuD,iBAAiB,aAAa,SAAS,EAAE,4CAA4C,eAAe,oEAAoE,qDAAqD,2JAA2J,8CAA8C,4CAA4C,iDAAiD,mEAAmE,kEAAkE,kCAAkC,aAAa,6DAA6D,iDAAiD,uDAAuD,sCAAsC,2BAA2B,iBAAiB,yCAAyC,iEAAiE,gEAAgE,2CAA2C,yDAAyD,uEAAuE,4CAA4C,qCAAqC,iBAAiB,oKAAoK,2CAA2C,8QAA8Q,yDAAyD,uDAAuD,8CAA8C,2DAA2D,+BAA+B,qBAAqB,qCAAqC,qCAAqC,8BAA8B,2DAA2D,mCAAmC,oBAAoB,OAAO,oEAAoE,yCAAyC,2CAA2C,yCAAyC,gDAAgD,kDAAkD,6EAA6E,qBAAqB,kCAAkC,6BAA6B,oEAAoE,sEAAsE,wEAAwE,0DAA0D,2CAA2C,oFAAoF,oDAAoD,oCAAoC,8RAA8R,2DAA2D,EAAE,iDAAiD,oCAAoC,yJAAyJ,yBAAyB,EAAE,gDAAgD,6CAA6C,8CAA8C,uHAAuH,qDAAqD,yBAAyB,GAAG,qBAAqB,0BAA0B,iEAAiE,wDAAwD,qDAAqD,8CAA8C,4DAA4D,wDAAwD,oCAAoC,qIAAqI,yBAAyB,eAAe,qDAAqD,oCAAoC,yJAAyJ,yBAAyB,eAAe,qBAAqB,yFAAyF,gFAAgF,0EAA0E,qCAAqC,2aAA2a,EAAE,sDAAsD,wDAAwD,2CAA2C,yFAAyF,iBAAiB,mDAAmD,+CAA+C,aAAa,sCAAsC,SAAS,EAAE,mGAAmG,2CAA2C,wBAAwB,gKAAgK,aAAa,EAAE,uCAAuC,wBAAwB,wGAAwG,aAAa,mBAAmB,4BAA4B,SAAS,sCAAsC,oDAAoD,+CAA+C,gFAAgF,gVAAgV,2BAA2B,mCAAmC,2DAA2D,KAAK,qCAAqC,6DAA6D,KAAK,kBAAkB,aAAa,mDAAmD,8CAA8C,aAAa,OAAO,oDAAoD,aAAa,SAAS,YAAY,gDAAgD,SAAS,aAAa,qDAAqD,kDAAkD,aAAa,OAAO,yDAAyD,aAAa,SAAS,YAAY,qDAAqD,SAAS,KAAK,kCAAkC,8CAA8C,yFAAyF,SAAS,yJAAyJ,0CAA0C,sCAAsC,SAAS,aAAa,8HAA8H,SAAS,UAAU,iBAAiB,6LAA6L,aAAa,UAAU,4OAA4O,aAAa,SAAS,SAAS,sCAAsC,kDAAkD,2FAA2F,SAAS,oKAAoK,8CAA8C,wCAAwC,SAAS,aAAa,gIAAgI,SAAS,WAAW,iBAAiB,gMAAgM,aAAa,WAAW,2UAA2U,aAAa,SAAS,WAAW,mBAAmB,yBAAyB,qBAAqB,wBAAwB,kCAAkC,yCAAyC,mBAAmB,SAAS,yBAAyB,kCAAkC,+CAA+C,SAAS,OAAO,4BAA4B,SAAS,2BAA2B,yBAAyB,SAAS,KAAK,6BAA6B,uBAAuB,mBAAmB,SAAS,kDAAkD,wBAAwB,iCAAiC,oBAAoB,iCAAiC,uBAAuB,wCAAwC,mCAAmC,mDAAmD,iBAAiB,aAAa,4BAA4B,+BAA+B,SAAS,4BAA4B,yBAAyB,iCAAiC,KAAK,yCAAyC,mDAAmD,mCAAmC,2BAA2B,sBAAsB,OAAO,2CAA2C,aAAa,SAAS,wCAAwC,8CAA8C,mCAAmC,SAAS,MAAM,oEAAoE,uBAAuB,2BAA2B,KAAK,sCAAsC,yCAAyC,MAAM,8BAA8B,2BAA2B,qBAAqB,sBAAsB,yBAAyB,iEAAiE,wBAAwB,wBAAwB,+BAA+B,wBAAwB,uBAAuB,kCAAkC,sCAAsC,wBAAwB,yCAAyC,4DAA4D,MAAM,iCAAiC,cAAc,oCAAoC,0DAA0D,MAAM,gCAAgC,UAAU,GAAG,aAAa,oEAAoE,+LAA+L,iDAAiD,sDAAsD,6EAA6E,mDAAmD,4DAA4D,sCAAsC,mGAAmG,yCAAyC,mEAAmE,8CAA8C,uDAAuD,qDAAqD,0FAA0F,0FAA0F,+EAA+E,gEAAgE,iBAAiB,sBAAsB,yFAAyF,yFAAyF,6EAA6E,+DAA+D,iBAAiB,2DAA2D,aAAa,EAAE,UAAU,4FAA4F,yBAAyB,4CAA4C,4BAA4B,sEAAsE,OAAO,2HAA2H,gCAAgC,uBAAuB,aAAa,wDAAwD,6HAA6H,wHAAwH,uEAAuE,yEAAyE,mDAAmD,8BAA8B,iBAAiB,EAAE,aAAa,EAAE,sDAAsD,mCAAmC,uCAAuC,6FAA6F,kDAAkD,uBAAuB,2BAA2B,OAAO,OAAO,0CAA0C,+DAA+D,8KAA8K,EAAE,+BAA+B,OAAO,OAAO,4DAA4D,mEAAmE,kMAAkM,EAAE,iBAAiB,aAAa,SAAS,wKAAwK,cAAc,mDAAmD,MAAM,mDAAmD,uCAAuC,0CAA0C,0BAA0B,wBAAwB,wBAAwB,qBAAqB,0BAA0B,6BAA6B,cAAc,OAAO,yCAAyC,cAAc,OAAO,0CAA0C,iBAAiB,iCAAiC,+BAA+B,iBAAiB,gCAAgC,aAAa,6BAA6B,cAAc,OAAO,4CAA4C,aAAa,oBAAoB,6BAA6B,cAAc,OAAO,0CAA0C,gCAAgC,8BAA8B,iBAAiB,aAAa,yBAAyB,2BAA2B,0BAA0B,SAAS,eAAe,+CAA+C,+JAA+J,2EAA2E,iDAAiD,uDAAuD,yDAAyD,8CAA8C,mDAAmD,kGAAkG,iEAAiE,iBAAiB,EAAE,aAAa,EAAE,UAAU,eAAe,oEAAoE,qDAAqD,4CAA4C,kDAAkD,mDAAmD,2DAA2D,+CAA+C,+DAA+D,iEAAiE,+CAA+C,mDAAmD,uSAAuS,SAAS,kCAAkC,OAAO,EAAE,WAAW,IAAI,QAAQ,mDAAmD,qFAAqF,0DAA0D,yCAAyC,iPAAiP,yFAAyF,iJAAiJ,0aAA0a,gCAAgC,aAAa,2DAA2D,uEAAuE,aAAa,SAAS,EAAE,oFAAoF,2FAA2F,yBAAyB,0JAA0J,yCAAyC,kDAAkD,uCAAuC,kFAAkF,gFAAgF,iLAAiL,qBAAqB,wDAAwD,kEAAkE,uQAAuQ,qBAAqB,gDAAgD,kEAAkE,+CAA+C,qBAAqB,gCAAgC,oCAAoC,aAAa,kGAAkG,EAAE,yCAAyC,4CAA4C,mBAAmB,2CAA2C,2CAA2C,2HAA2H,sMAAsM,+CAA+C,wDAAwD,aAAa,+CAA+C,4CAA4C,iBAAiB,EAAE,4DAA4D,aAAa,8CAA8C,2CAA2C,iBAAiB,EAAE,sDAAsD,aAAa,kBAAkB,kGAAkG,6BAA6B,iGAAiG,iBAAiB,iCAAiC,aAAa,mDAAmD,wBAAwB,SAAS,qFAAqF,iCAAiC,qDAAqD,mFAAmF,oFAAoF,2EAA2E,8EAA8E,4EAA4E,0DAA0D,yDAAyD,4EAA4E,+FAA+F,iBAAiB,EAAE,aAAa,yDAAyD,yDAAyD,yDAAyD,+FAA+F,iBAAiB,EAAE,aAAa,wCAAwC,2CAA2C,iEAAiE,yCAAyC,8DAA8D,iEAAiE,+CAA+C,QAAQ,wBAAwB,8BAA8B,iBAAiB,aAAa,2BAA2B,qCAAqC,aAAa,kBAAkB,qFAAqF,aAAa,oGAAoG,8CAA8C,EAAE,wGAAwG,SAAS,iGAAiG,yDAAyD,wDAAwD,uDAAuD,aAAa,SAAS,qEAAqE,4DAA4D,yDAAyD,yBAAyB,wEAAwE,gMAAgM,aAAa,8JAA8J,6CAA6C,2bAA2b,qBAAqB,gCAAgC,2BAA2B,0TAA0T,4HAA4H,iCAAiC,8BAA8B,qCAAqC,uCAAuC,kCAAkC,gCAAgC,iDAAiD,sDAAsD,iCAAiC,qFAAqF,kJAAkJ,iEAAiE,cAAc,yGAAyG,mFAAmF,gCAAgC,uEAAuE,gFAAgF,oFAAoF,4EAA4E,mFAAmF,wCAAwC,iBAAiB,aAAa,8DAA8D,cAAc,2BAA2B,OAAO,8DAA8D,cAAc,uEAAuE,mFAAmF,8EAA8E,aAAa,mQAAmQ,wCAAwC,GAAG,6CAA6C,OAAO,+BAA+B,OAAO,yGAAyG,mFAAmF,6CAA6C,gGAAgG,gFAAgF,6EAA6E,iEAAiE,8MAA8M,2DAA2D,iCAAiC,aAAa,8DAA8D,OAAO,+BAA+B,OAAO,iHAAiH,mFAAmF,6CAA6C,kGAAkG,gNAAgN,2DAA2D,iCAAiC,aAAa,8DAA8D,OAAO,kCAAkC,OAAO,+GAA+G,mFAAmF,uEAAuE,aAAa,8DAA8D,OAAO,oDAAoD,OAAO,sCAAsC,OAAO,yCAAyC,OAAO,oCAAoC,OAAO,6CAA6C,OAAO,EAAE,4BAA4B,sFAAsF,2CAA2C,0DAA0D,oEAAoE,eAAe,aAAa,iBAAiB,aAAa,+DAA+D,eAAe,4DAA4D,yDAAyD,aAAa,8DAA8D,OAAO,2BAA2B,OAAO,uCAAuC,OAAO,wCAAwC,OAAO,sCAAsC,OAAO,yCAAyC,OAAO,2DAA2D,yDAAyD,aAAa,SAAS,wCAAwC,+BAA+B,2EAA2E,6DAA6D,4CAA4C,oDAAoD,mFAAmF,mEAAmE,iBAAiB,aAAa,EAAE,6BAA6B,SAAS,0FAA0F,yFAAyF,uDAAuD,SAAS,4FAA4F,6CAA6C,yWAAyW,iCAAiC,0BAA0B,aAAa,uHAAuH,uBAAuB,aAAa,+BAA+B,6CAA6C,6EAA6E,wGAAwG,uGAAuG,aAAa,EAAE,4BAA4B,wBAAwB,SAAS,iBAAiB,oEAAoE,oDAAoD,wDAAwD,2FAA2F,kEAAkE,6CAA6C,2CAA2C,oDAAoD,4LAA4L,aAAa,QAAQ,SAAS,4CAA4C,+CAA+C,oBAAoB,2BAA2B,yRAAyR,uBAAuB,wJAAwJ,cAAc,SAAS,yCAAyC,aAAa,oEAAoE,oDAAoD,wDAAwD,0CAA0C,yDAAyD,2CAA2C,oDAAoD,4BAA4B,4BAA4B,4CAA4C,4CAA4C,uEAAuE,6FAA6F,aAAa,QAAQ,SAAS,4CAA4C,kDAAkD,oBAAoB,2BAA2B,0LAA0L,uBAAuB,wJAAwJ,cAAc,SAAS,yCAAyC,aAAa,oEAAoE,oDAAoD,wDAAwD,uFAAuF,yEAAyE,oFAAoF,gLAAgL,SAAS,4CAA4C,0CAA0C,sBAAsB,2BAA2B,iMAAiM,uBAAuB,wJAAwJ,cAAc,SAAS,yCAAyC,aAAa,oEAAoE,oDAAoD,wDAAwD,4HAA4H,wDAAwD,2CAA2C,oDAAoD,4CAA4C,4LAA4L,wCAAwC,oDAAoD,iBAAiB,gCAAgC,eAAe,QAAQ,SAAS,4CAA4C,sDAAsD,oDAAoD,gDAAgD,sDAAsD,sBAAsB,2BAA2B,6LAA6L,uBAAuB,wDAAwD,sEAAsE,mEAAmE,2EAA2E,kEAAkE,qCAAqC,qBAAqB,mFAAmF,cAAc,SAAS,yCAAyC,aAAa,oEAAoE,oDAAoD,4CAA4C,0CAA0C,oDAAoD,sBAAsB,2BAA2B,+TAA+T,gNAAgN,iBAAiB,uBAAuB,uFAAuF,cAAc,SAAS,yCAAyC,aAAa,oEAAoE,qDAAqD,4CAA4C,+CAA+C,kDAAkD,iDAAiD,mIAAmI,+CAA+C,wCAAwC,WAAW,yBAAyB,OAAO,iCAAiC,UAAU,0BAA0B,iCAAiC,WAAW,YAAY,yBAAyB,OAAO,EAAE,gDAAgD,sEAAsE,uCAAuC,wBAAwB,EAAE,iBAAiB,sBAAsB,uNAAuN,iBAAiB,aAAa,gEAAgE,mCAAmC,0BAA0B,EAAE,aAAa,SAAS,EAAE,+GAA+G,4DAA4D,2vDAA2vD,+PAA+P,eAAe,wJAAwJ,wGAAwG,4CAA4C,0EAA0E,kDAAkD,aAAa,kHAAkH,6CAA6C,yEAAyE,wFAAwF,yCAAyC,sDAAsD,0FAA0F,uDAAuD,iHAAiH,2EAA2E,wDAAwD,iCAAiC,0MAA0M,qBAAqB,yCAAyC,+BAA+B,qBAAqB,0DAA0D,uEAAuE,6EAA6E,0EAA0E,mBAAmB,QAAQ,4EAA4E,QAAQ,OAAO,+CAA+C,+CAA+C,qBAAqB,0BAA0B,8MAA8M,qBAAqB,iBAAiB,aAAa,yDAAyD,mFAAmF,eAAe,GAAG,gBAAgB,iBAAiB,mDAAmD,wBAAwB,kBAAkB,+BAA+B,kBAAkB,gCAAgC,4EAA4E,eAAe,8CAA8C,eAAe,gDAAgD,OAAO,6GAA6G,2DAA2D,kCAAkC,+BAA+B,qBAAqB,yCAAyC,2DAA2D,qBAAqB,0CAA0C,qDAAqD,8DAA8D,gEAAgE,qBAAqB,iIAAiI,iBAAiB,QAAQ,aAAa,yIAAyI,kDAAkD,iHAAiH,2BAA2B,aAAa,SAAS,EAAE,wFAAwF,iIAAiI,0EAA0E,iCAAiC,wEAAwE,0EAA0E,oCAAoC,0DAA0D,aAAa,oHAAoH,okBAAokB,IAAI,+HAA+H,kCAAkC,iBAAiB,sDAAsD,0DAA0D,kDAAkD,aAAa,qHAAqH,OAAO,kDAAkD,4BAA4B,4FAA4F,4EAA4E,2CAA2C,2BAA2B,iBAAiB,0CAA0C,2CAA2C,wJAAwJ,mDAAmD,yCAAyC,gDAAgD,qDAAqD,4FAA4F,uQAAuQ,0DAA0D,uBAAuB,kBAAkB,gEAAgE,qBAAqB,qJAAqJ,8HAA8H,wMAAwM,qBAAqB,4DAA4D,6KAA6K,qBAAqB,qDAAqD,iDAAiD,6EAA6E,qBAAqB,oDAAoD,iDAAiD,qBAAqB,6CAA6C,6BAA6B,6DAA6D,+DAA+D,qBAAqB,iBAAiB,EAAE,aAAa,qHAAqH,OAAO,kDAAkD,4BAA4B,sFAAsF,6DAA6D,2CAA2C,wCAAwC,+IAA+I,QAAQ,OAAO,gDAAgD,oDAAoD,gCAAgC,iCAAiC,qBAAqB,+CAA+C,yFAAyF,8HAA8H,2BAA2B,6MAA6M,oIAAoI,iDAAiD,sBAAsB,iBAAiB,aAAa,yIAAyI,wCAAwC,0CAA0C,wCAAwC,iBAAiB,EAAE,qDAAqD,aAAa,2FAA2F,8BAA8B,aAAa,SAAS,EAAE,kEAAkE,4CAA4C,yBAAyB,uEAAuE,aAAa,gGAAgG,yBAAyB,oEAAoE,aAAa,yCAAyC,mCAAmC,8BAA8B,kCAAkC,SAAS,6CAA6C,0DAA0D,gCAAgC,4EAA4E,wCAAwC,iBAAiB,EAAE,uDAAuD,8CAA8C,aAAa,SAAS,iHAAiH,uCAAuC,YAAY,4JAA4J,0CAA0C,iBAAiB,cAAc,4BAA4B,SAAS,yCAAyC,sBAAsB,gDAAgD,4EAA4E,aAAa,EAAE,yBAAyB,SAAS,qEAAqE,iDAAiD,sGAAsG,0FAA0F,8FAA8F,iEAAiE,wCAAwC,gEAAgE,iBAAiB,yCAAyC,kEAAkE,iBAAiB,aAAa,kEAAkE,SAAS,2EAA2E,+GAA+G,eAAe,iDAAiD,2DAA2D,sCAAsC,oCAAoC,iCAAiC,uDAAuD,qNAAqN,qBAAqB,sOAAsO,gIAAgI,iBAAiB,EAAE,0HAA0H,iBAAiB,sBAAsB,oDAAoD,iBAAiB,aAAa,6CAA6C,gDAAgD,aAAa,4CAA4C,yGAAyG,aAAa,SAAS,iEAAiE,6BAA6B,uBAAuB,aAAa,+QAA+Q,sHAAsH,qFAAqF,wFAAwF,aAAa,SAAS,eAAe,oEAAoE,yCAAyC,mCAAmC,mCAAmC,eAAe,oEAAoE,wFAAwF,iCAAiC,iCAAiC,+CAA+C,oFAAoF,aAAa,oEAAoE,mBAAmB,gDAAgD,4CAA4C,yEAAyE,+FAA+F,yEAAyE,8DAA8D,2DAA2D,0DAA0D,aAAa,+CAA+C,mEAAmE,aAAa,2CAA2C,+CAA+C,8CAA8C,8IAA8I,4CAA4C,gGAAgG,uBAAuB,OAAO,6DAA6D,oDAAoD,qGAAqG,+CAA+C,kCAAkC,yBAAyB,qBAAqB,gJAAgJ,iBAAiB,aAAa,gDAAgD,yFAAyF,qIAAqI,oCAAoC,oEAAoE,qBAAqB,mEAAmE,iBAAiB,QAAQ,wCAAwC,0FAA0F,uCAAuC,iBAAiB,EAAE,2DAA2D,yDAAyD,oEAAoE,4FAA4F,qBAAqB,iBAAiB,EAAE,6CAA6C,eAAe,oGAAoG,aAAa,0CAA0C,mCAAmC,iDAAiD,kCAAkC,aAAa,yCAAyC,OAAO,yDAAyD,oDAAoD,4DAA4D,gDAAgD,0CAA0C,2DAA2D,+DAA+D,qBAAqB,EAAE,iBAAiB,sCAAsC,aAAa,yCAAyC,OAAO,2DAA2D,4DAA4D,uDAAuD,iBAAiB,aAAa,yCAAyC,OAAO,iEAAiE,oDAAoD,uFAAuF,0CAA0C,iBAAiB,mEAAmE,aAAa,yCAAyC,OAAO,6DAA6D,oDAAoD,iJAAiJ,aAAa,+BAA+B,smCAAsmC,+EAA+E,yUAAyU,gDAAgD,aAAa,SAAS,EAAE,uCAAuC,aAAa,oEAAoE,2FAA2F,4CAA4C,4EAA4E,iCAAiC,iEAAiE,2BAA2B,+GAA+G,2DAA2D,2ZAA2Z,iBAAiB,sBAAsB,0DAA0D,sEAAsE,iBAAiB,uDAAuD,0DAA0D,iDAAiD,2FAA2F,+BAA+B,qBAAqB,sEAAsE,2DAA2D,iJAAiJ,qBAAqB,0BAA0B,2DAA2D,qBAAqB,iBAAiB,EAAE,aAAa,EAAE,8DAA8D,sFAAsF,SAAS,iEAAiE,OAAO,sBAAsB,OAAO,gDAAgD,OAAO,6BAA6B,OAAO,oNAAoN,6DAA6D,OAAO,sBAAsB,OAAO,0CAA0C,OAAO,iMAAiM,+DAA+D,OAAO,sBAAsB,OAAO,4CAA4C,OAAO,uMAAuM,aAAa,oEAAoE,oDAAoD,qDAAqD,8CAA8C,2DAA2D,mCAAmC,oDAAoD,gCAAgC,kFAAkF,EAAE,SAAS,wEAAwE,uHAAuH,4CAA4C,0EAA0E,0IAA0I,EAAE,aAAa,SAAS,uEAAuE,uHAAuH,4CAA4C,0EAA0E,yIAAyI,EAAE,aAAa,SAAS,uEAAuE,8DAA8D,2CAA2C,aAAa,6DAA6D,uCAAuC,kCAAkC,iDAAiD,2BAA2B,iBAAiB,mEAAmE,yDAAyD,6CAA6C,mLAAmL,iBAAiB,+DAA+D,2EAA2E,qDAAqD,4HAA4H,qDAAqD,kEAAkE,GAAG,+BAA+B,qBAAqB,yEAAyE,sDAAsD,0EAA0E,qBAAqB,4EAA4E,yDAAyD,4DAA4D,sHAAsH,yHAAyH,yBAAyB,qJAAqJ,kEAAkE,0RAA0R,8RAA8R,0DAA0D,qBAAqB,0BAA0B,2HAA2H,qIAAqI,uCAAuC,6BAA6B,iEAAiE,4EAA4E,iEAAiE,8CAA8C,2CAA2C,iCAAiC,+EAA+E,qEAAqE,oUAAoU,qYAAqY,kEAAkE,6BAA6B,yBAAyB,QAAQ,qBAAqB,iCAAiC,yDAAyD,iIAAiI,yBAAyB,qBAAqB,iBAAiB,QAAQ,sEAAsE,wJAAwJ,aAAa,2LAA2L,6DAA6D,+DAA+D,qEAAqE,gEAAgE,oDAAoD,uEAAuE,uDAAuD,mEAAmE,wEAAwE,8GAA8G,iLAAiL,gRAAgR,gDAAgD,gDAAgD,8CAA8C,qBAAqB,6RAA6R,iBAAiB,+FAA+F,0CAA0C,+DAA+D,mCAAmC,iEAAiE,kDAAkD,KAAK,6BAA6B,iBAAiB,2DAA2D,8CAA8C,iBAAiB,+CAA+C,4BAA4B,0XAA0X,iBAAiB,EAAE,oCAAoC,6HAA6H,kKAAkK,oLAAoL,wCAAwC,yBAAyB,2CAA2C,mOAAmO,qBAAqB,8CAA8C,EAAE,uCAAuC,wDAAwD,wCAAwC,iBAAiB,EAAE,+CAA+C,gDAAgD,mDAAmD,mCAAmC,aAAa,SAAS,EAAE,aAAa,oEAAoE,yEAAyE,gDAAgD,8CAA8C,qDAAqD,sGAAsG,sGAAsG,mDAAmD,SAAS,4BAA4B,oMAAoM,2BAA2B,6BAA6B,+BAA+B,sCAAsC,4BAA4B,0EAA0E,sFAAsF,sGAAsG,iCAAiC,wOAAwO,4DAA4D,aAAa,gEAAgE,8HAA8H,2DAA2D,8EAA8E,mEAAmE,6CAA6C,4BAA4B,4RAA4R,8GAA8G,EAAE,mDAAmD,kCAAkC,aAAa,UAAU,aAAa,+CAA+C,kDAAkD,uDAAuD,+CAA+C,EAAE,sDAAsD,wDAAwD,sNAAsN,yBAAyB,OAAO,uEAAuE,yCAAyC,yBAAyB,qBAAqB,gCAAgC,iBAAiB,EAAE,aAAa,UAAU,aAAa,oEAAoE,8FAA8F,mCAAmC,mCAAmC,iFAAiF,OAAO,2BAA2B,OAAO,kCAAkC,OAAO,gCAAgC,OAAO,0BAA0B,OAAO,0EAA0E,+HAA+H,8CAA8C,UAAU,qFAAqF,+HAA+H,8CAA8C,UAAU,aAAa,oEAAoE,6DAA6D,wGAAwG,ygBAAygB,MAAM,IAAI,SAAS,mUAAmU,OAAO,cAAc,SAAS,qwBAAqwB,ikBAAikB,8LAA8L,qBAAqB,6LAA6L,6BAA6B,mFAAmF,aAAa,SAAS,EAAE,aAAa,oEAAoE,8DAA8D,4CAA4C,gDAAgD,gDAAgD,8CAA8C,2DAA2D,iDAAiD,yCAAyC,4CAA4C,sDAAsD,kDAAkD,6DAA6D,iCAAiC,+BAA+B,mDAAmD,8CAA8C,oBAAoB,kCAAkC,SAAS,EAAE,sDAAsD,2EAA2E,+BAA+B,2BAA2B,iBAAiB,2EAA2E,sDAAsD,aAAa,8DAA8D,+BAA+B,2BAA2B,iBAAiB,iEAAiE,0EAA0E,8CAA8C,qEAAqE,0EAA0E,4BAA4B,2DAA2D,0EAA0E,4BAA4B,mDAAmD,2HAA2H,uBAAuB,mEAAmE,0EAA0E,QAAQ,mGAAmG,4DAA4D,wCAAwC,2EAA2E,6CAA6C,mCAAmC,aAAa,iDAAiD,sDAAsD,8DAA8D,8KAA8K,+HAA+H,sEAAsE,iEAAiE,6BAA6B,+DAA+D,2DAA2D,6BAA6B,yBAAyB,qBAAqB,yBAAyB,aAAa,uCAAuC,sDAAsD,4CAA4C,oCAAoC,gRAAgR,KAAK,0JAA0J,oCAAoC,6DAA6D,yEAAyE,2PAA2P,8GAA8G,EAAE,qBAAqB,EAAE,iBAAiB,aAAa,oFAAoF,oGAAoG,EAAE,gDAAgD,+IAA+I,EAAE,oIAAoI,4DAA4D,2BAA2B,iBAAiB,wEAAwE,mEAAmE,iHAAiH,kFAAkF,uCAAuC,yDAAyD,gCAAgC,iDAAiD,yHAAyH,6IAA6I,kBAAkB,iBAAiB,0CAA0C,mCAAmC,0KAA0K,iJAAiJ,kBAAkB,iBAAiB,uDAAuD,2FAA2F,+BAA+B,qBAAqB,4EAA4E,gDAAgD,gDAAgD,mDAAmD,uCAAuC,6NAA6N,yBAAyB,kBAAkB,qBAAqB,iBAAiB,kEAAkE,yJAAyJ,gJAAgJ,EAAE,qCAAqC,6PAA6P,qBAAqB,kBAAkB,iBAAiB,aAAa,gFAAgF,0DAA0D,iDAAiD,kFAAkF,iBAAiB,mDAAmD,kDAAkD,iEAAiE,iBAAiB,aAAa,2SAA2S,sDAAsD,kDAAkD,4FAA4F,6FAA6F,2BAA2B,iBAAiB,0EAA0E,mCAAmC,2BAA2B,iBAAiB,mDAAmD,8LAA8L,2DAA2D,+DAA+D,2BAA2B,iBAAiB,sCAAsC,mMAAmM,EAAE,8BAA8B,aAAa,uDAAuD,kCAAkC,sDAAsD,sCAAsC,2BAA2B,iBAAiB,+IAA+I,wCAAwC,wDAAwD,8DAA8D,6DAA6D,iBAAiB,2IAA2I,oDAAoD,uEAAuE,iBAAiB,sGAAsG,oDAAoD,0EAA0E,iBAAiB,sBAAsB,oDAAoD,+CAA+C,iBAAiB,aAAa,yDAAyD,sVAAsV,2CAA2C,+CAA+C,oHAAoH,aAAa,+DAA+D,4CAA4C,4DAA4D,mDAAmD,2CAA2C,0CAA0C,yJAAyJ,gEAAgE,+CAA+C,iDAAiD,qVAAqV,8EAA8E,yFAAyF,qEAAqE,oGAAoG,mDAAmD,mDAAmD,gEAAgE,mCAAmC,yBAAyB,yQAAyQ,kFAAkF,uFAAuF,oEAAoE,uFAAuF,8DAA8D,kEAAkE,gEAAgE,4DAA4D,yGAAyG,mEAAmE,+CAA+C,kEAAkE,8FAA8F,6BAA6B,yBAAyB,EAAE,+SAA+S,iOAAiO,qBAAqB,EAAE,iBAAiB,QAAQ,iIAAiI,2EAA2E,gDAAgD,kEAAkE,8EAA8E,2SAA2S,qBAAqB,0BAA0B,0OAA0O,qBAAqB,iBAAiB,EAAE,wIAAwI,yEAAyE,4CAA4C,wPAAwP,wEAAwE,yGAAyG,6CAA6C,2CAA2C,+CAA+C,6MAA6M,iEAAiE,mEAAmE,0EAA0E,2BAA2B,iBAAiB,4EAA4E,sFAAsF,6EAA6E,8DAA8D,4MAA4M,iBAAiB,EAAE,iJAAiJ,8OAA8O,EAAE,aAAa,4EAA4E,4CAA4C,qDAAqD,6CAA6C,kCAAkC,mJAAmJ,iBAAiB,+FAA+F,iEAAiE,gDAAgD,sTAAsT,+IAA+I,gGAAgG,iBAAiB,EAAE,gHAAgH,uFAAuF,EAAE,aAAa,mJAAmJ,iEAAiE,sFAAsF,2BAA2B,iBAAiB,4DAA4D,gEAAgE,4EAA4E,uCAAuC,mEAAmE,yEAAyE,iBAAiB,2DAA2D,mEAAmE,wDAAwD,4DAA4D,2KAA2K,yBAAyB,qBAAqB,QAAQ,+CAA+C,oEAAoE,iBAAiB,kDAAkD,kDAAkD,yIAAyI,aAAa,0CAA0C,+BAA+B,qCAAqC,OAAO,kCAAkC,OAAO,kCAAkC,QAAQ,8EAA8E,uBAAuB,+BAA+B,uBAAuB,0CAA0C,4BAA4B,4BAA4B,eAAe,8GAA8G,qDAAqD,uDAAuD,4EAA4E,sDAAsD,sDAAsD,+DAA+D,8DAA8D,wDAAwD,2DAA2D,+KAA+K,uIAAuI,EAAE,iBAAiB,qDAAqD,iEAAiE,kEAAkE,iBAAiB,yDAAyD,wDAAwD,yDAAyD,qGAAqG,qCAAqC,sBAAsB,qCAAqC,qCAAqC,iCAAiC,iKAAiK,iBAAiB,4KAA4K,+HAA+H,+BAA+B,+BAA+B,iBAAiB,sBAAsB,+KAA+K,+BAA+B,+BAA+B,iBAAiB,qHAAqH,uHAAuH,oDAAoD,0IAA0I,+BAA+B,+BAA+B,iBAAiB,uCAAuC,aAAa,0JAA0J,4DAA4D,2HAA2H,sGAAsG,2EAA2E,+EAA+E,2EAA2E,yFAAyF,gGAAgG,uEAAuE,2EAA2E,0EAA0E,2TAA2T,4FAA4F,2DAA2D,oNAAoN,yBAAyB,EAAE,qBAAqB,EAAE,iBAAiB,EAAE,4DAA4D,6CAA6C,aAAa,iDAAiD,0TAA0T,gCAAgC,uFAAuF,EAAE,aAAa,iDAAiD,+BAA+B,2BAA2B,iBAAiB,4CAA4C,8DAA8D,aAAa,SAAS,EAAE,kCAAkC,0CAA0C,wFAAwF,6DAA6D,iDAAiD,yCAAyC,oDAAoD,iCAAiC,sDAAsD,qEAAqE,qBAAqB,6FAA6F,uHAAuH,yDAAyD,sCAAsC,uBAAuB,qBAAqB,0FAA0F,iBAAiB,aAAa,+BAA+B,SAAS,qDAAqD,kFAAkF,SAAS,sFAAsF,uCAAuC,yCAAyC,iCAAiC,mDAAmD,sCAAsC,iBAAiB,sBAAsB,8BAA8B,iBAAiB,aAAa,+BAA+B,qDAAqD,uCAAuC,iBAAiB,sBAAsB,8BAA8B,iBAAiB,aAAa,0BAA0B,SAAS,4EAA4E,uCAAuC,yCAAyC,yDAAyD,0DAA0D,+BAA+B,+BAA+B,4BAA4B,SAAS,qEAAqE,0CAA0C,2CAA2C,wBAAwB,sBAAsB,sBAAsB,uCAAuC,yCAAyC,+BAA+B,4FAA4F,gEAAgE,0BAA0B,yFAAyF,iDAAiD,0BAA0B,4FAA4F,kDAAkD,0BAA0B,4EAA4E,gEAAgE,0BAA0B,8EAA8E,gEAAgE,aAAa,0BAA0B,SAAS,yCAAyC,4DAA4D,SAAS,eAAe,oEAAoE,uHAAuH,8CAA8C,gDAAgD,gDAAgD,+BAA+B,iDAAiD,yCAAyC,yDAAyD,4CAA4C,cAAc,mBAAmB,mBAAmB,gBAAgB,EAAE,gCAAgC,OAAO,6BAA6B,OAAO,2EAA2E,mEAAmE,+JAA+J,gEAAgE,qEAAqE,aAAa,SAAS,GAAG,SAAS,gCAAgC,OAAO,8BAA8B,OAAO,2EAA2E,6BAA6B,4DAA4D,sDAAsD,sDAAsD,+DAA+D,4GAA4G,6DAA6D,mDAAmD,gEAAgE,aAAa,EAAE,oCAAoC,GAAG,SAAS,gCAAgC,OAAO,iCAAiC,OAAO,4EAA4E,+BAA+B,8EAA8E,sEAAsE,oEAAoE,sDAAsD,yLAAyL,oCAAoC,0CAA0C,wEAAwE,iBAAiB,sBAAsB,iKAAiK,6DAA6D,iBAAiB,aAAa,6FAA6F,kDAAkD,wDAAwD,sDAAsD,wHAAwH,aAAa,EAAE,kFAAkF,0DAA0D,oGAAoG,aAAa,oCAAoC,OAAO,EAAE,SAAS,iKAAiK,mDAAmD,4CAA4C,2BAA2B,2CAA2C,0CAA0C,wCAAwC,0CAA0C,iCAAiC,qFAAqF,8BAA8B,2CAA2C,gHAAgH,oDAAoD,sCAAsC,iBAAiB,uCAAuC,cAAc,2CAA2C,sCAAsC,uCAAuC,kKAAkK,iEAAiE,qDAAqD,iBAAiB,cAAc,2CAA2C,sCAAsC,qCAAqC,wDAAwD,qBAAqB,iBAAiB,wCAAwC,cAAc,SAAS,sCAAsC,wGAAwG,QAAQ,2JAA2J,sHAAsH,wHAAwH,+CAA+C,sFAAsF,mDAAmD,iBAAiB,4FAA4F,aAAa,8CAA8C,gDAAgD,iCAAiC,qNAAqN,uBAAuB,sBAAsB,gEAAgE,sEAAsE,oCAAoC,aAAa,+CAA+C,mEAAmE,aAAa,mDAAmD,4CAA4C,aAAa,qCAAqC,iCAAiC,yDAAyD,aAAa,wCAAwC,mOAAmO,iCAAiC,wFAAwF,sDAAsD,qDAAqD,iBAAiB,4CAA4C,sCAAsC,qCAAqC,8BAA8B,4BAA4B,aAAa,kCAAkC,+CAA+C,mCAAmC,aAAa,2CAA2C,0EAA0E,+BAA+B,+CAA+C,4HAA4H,2FAA2F,qBAAqB,0BAA0B,oCAAoC,qBAAqB,iBAAiB,aAAa,oCAAoC,kCAAkC,aAAa,UAAU,0CAA0C,aAAa,oEAAoE,mBAAmB,gDAAgD,mCAAmC,iCAAiC,iCAAiC,iCAAiC,mCAAmC,gLAAgL,2EAA2E,kCAAkC,EAAE,aAAa,oEAAoE,yEAAyE,gDAAgD,4CAA4C,oDAAoD,yDAAyD,gEAAgE,2EAA2E,sCAAsC,8BAA8B,4BAA4B,8DAA8D,kDAAkD,kDAAkD,uCAAuC,yCAAyC,uDAAuD,uDAAuD,sDAAsD,oDAAoD,mDAAmD,oDAAoD,gEAAgE,SAAS,gGAAgG,6BAA6B,iDAAiD,mDAAmD,qFAAqF,4DAA4D,yDAAyD,6DAA6D,qDAAqD,yEAAyE,uEAAuE,iBAAiB,aAAa,EAAE,gEAAgE,gEAAgE,uHAAuH,mDAAmD,yDAAyD,8EAA8E,0DAA0D,aAAa,SAAS,qEAAqE,2EAA2E,mBAAmB,qCAAqC,uEAAuE,8CAA8C,kEAAkE,mFAAmF,gHAAgH,6DAA6D,qFAAqF,qFAAqF,aAAa,uEAAuE,mCAAmC,SAAS,gCAAgC,oGAAoG,mCAAmC,2EAA2E,+CAA+C,qGAAqG,oDAAoD,6DAA6D,yDAAyD,mFAAmF,+EAA+E,2DAA2D,uDAAuD,oDAAoD,0CAA0C,0DAA0D,6CAA6C,iBAAiB,EAAE,+GAA+G,0EAA0E,kEAAkE,kMAAkM,KAAK,qCAAqC,8CAA8C,2XAA2X,6BAA6B,yBAAyB,mFAAmF,qBAAqB,iBAAiB,EAAE,mCAAmC,aAAa,UAAU,kEAAkE,aAAa,oEAAoE,mBAAmB,4GAA4G,iDAAiD,gCAAgC,iCAAiC,0CAA0C,OAAO,qDAAqD,uCAAuC,OAAO,kDAAkD,uEAAuE,OAAO,uCAAuC,uEAAuE,OAAO,uCAAuC,uCAAuC,sCAAsC,sFAAsF,uCAAuC,qCAAqC,oFAAoF,oEAAoE,UAAU,6BAA6B,4IAA4I,eAAe,0HAA0H,gCAAgC,8GAA8G,eAAe,8BAA8B,QAAQ,2DAA2D,qDAAqD,kHAAkH,aAAa,uEAAuE,eAAe,6BAA6B,QAAQ,yDAAyD,wHAAwH,aAAa,yCAAyC,OAAO,4BAA4B,2EAA2E,oDAAoD,gDAAgD,aAAa,0CAA0C,kCAAkC,iDAAiD,2DAA2D,aAAa,iFAAiF,OAAO,kCAAkC,2EAA2E,iEAAiE,8BAA8B,gDAAgD,kDAAkD,2EAA2E,6EAA6E,8BAA8B,aAAa,0CAA0C,qCAAqC,sDAAsD,uCAAuC,aAAa,0CAA0C,sCAAsC,uDAAuD,wCAAwC,aAAa,yCAAyC,gCAAgC,wBAAwB,gCAAgC,0DAA0D,gDAAgD,yEAAyE,aAAa,0GAA0G,gCAAgC,qDAAqD,wJAAwJ,aAAa,yCAAyC,OAAO,8EAA8E,OAAO,EAAE,4BAA4B,2DAA2D,2HAA2H,wBAAwB,uHAAuH,aAAa,sGAAsG,yBAAyB,6BAA6B,MAAM,kKAAkK,gFAAgF,6DAA6D,iBAAiB,cAAc,aAAa,sMAAsM,eAAe,4BAA4B,QAAQ,sCAAsC,eAAe,gEAAgE,8LAA8L,aAAa,sFAAsF,eAAe,6BAA6B,QAAQ,sCAAsC,eAAe,iEAAiE,qDAAqD,6KAA6K,aAAa,uGAAuG,eAAe,8BAA8B,eAAe,2DAA2D,4CAA4C,4CAA4C,oDAAoD,mDAAmD,8DAA8D,8DAA8D,+MAA+M,4DAA4D,6BAA6B,6BAA6B,mEAAmE,6FAA6F,gEAAgE,wCAAwC,iBAAiB,0CAA0C,aAAa,uGAAuG,eAAe,8BAA8B,eAAe,2DAA2D,sCAAsC,sDAAsD,4DAA4D,6FAA6F,gCAAgC,aAAa,YAAY,iCAAiC,aAAa,oEAAoE,mBAAmB,gDAAgD,4CAA4C,oDAAoD,6DAA6D,mKAAmK,OAAO,kDAAkD,SAAS,kCAAkC,gJAAgJ,2FAA2F,aAAa,wHAAwH,4CAA4C,sCAAsC,aAAa,oEAAoE,mBAAmB,gDAAgD,4CAA4C,kDAAkD,oDAAoD,2DAA2D,mKAAmK,OAAO,kDAAkD,SAAS,iCAAiC,+IAA+I,2FAA2F,aAAa,sHAAsH,2CAA2C,qCAAqC,aAAa,oEAAoE,mBAAmB,qCAAqC,uDAAuD,0HAA0H,iCAAiC,0FAA0F,OAAO,iCAAiC,qCAAqC,+DAA+D,mCAAmC,2CAA2C,wEAAwE,gEAAgE,mDAAmD,qBAAqB,iBAAiB,QAAQ,sCAAsC,aAAa,+BAA+B,wIAAwI,SAAS,EAAE,aAAa,oEAAoE,mBAAmB,gDAAgD,qDAAqD,wDAAwD,sDAAsD,uEAAuE,2EAA2E,yIAAyI,qDAAqD,oJAAoJ,KAAK,aAAa,WAAW,EAAE,2EAA2E,gDAAgD,oBAAoB,mMAAmM,kDAAkD,aAAa,sBAAsB,6GAA6G,UAAU,iDAAiD,6HAA6H,SAAS,uGAAuG,uGAAuG,eAAe,oEAAoE,mBAAmB,qCAAqC,mCAAmC,aAAa,oEAAoE,mBAAmB,gDAAgD,8CAA8C,4CAA4C,4FAA4F,0DAA0D,wDAAwD,qDAAqD,sBAAsB,6HAA6H,SAAS,2CAA2C,6IAA6I,uCAAuC,kDAAkD,2BAA2B,iBAAiB,sDAAsD,4CAA4C,qEAAqE,6DAA6D,sDAAsD,mHAAmH,iBAAiB,4DAA4D,8JAA8J,2FAA2F,qBAAqB,iBAAiB,QAAQ,aAAa,4IAA4I,mFAAmF,mDAAmD,4BAA4B,yIAAyI,qIAAqI,EAAE,yCAAyC,yCAAyC,aAAa,4IAA4I,oEAAoE,6FAA6F,4EAA4E,6CAA6C,kIAAkI,EAAE,iBAAiB,EAAE,6EAA6E,uJAAuJ,mHAAmH,8CAA8C,mBAAmB,aAAa,6IAA6I,+CAA+C,gEAAgE,wEAAwE,0EAA0E,mEAAmE,6DAA6D,0DAA0D,sIAAsI,wBAAwB,OAAO,4CAA4C,mFAAmF,sCAAsC,sCAAsC,4IAA4I,6IAA6I,8DAA8D,uFAAuF,sJAAsJ,qBAAqB,qDAAqD,gCAAgC,obAAob,0DAA0D,GAAG,iBAAiB,aAAa,6IAA6I,0EAA0E,0EAA0E,6DAA6D,kCAAkC,uFAAuF,sCAAsC,iCAAiC,wBAAwB,OAAO,uEAAuE,0EAA0E,kEAAkE,6HAA6H,GAAG,iBAAiB,kIAAkI,uBAAuB,OAAO,qEAAqE,gDAAgD,8FAA8F,6IAA6I,GAAG,iBAAiB,aAAa,6IAA6I,4EAA4E,0EAA0E,6DAA6D,kCAAkC,uFAAuF,sCAAsC,6CAA6C,yDAAyD,oEAAoE,oEAAoE,kEAAkE,iCAAiC,wBAAwB,OAAO,uEAAuE,0EAA0E,oEAAoE,gCAAgC,iVAAiV,0DAA0D,GAAG,yDAAyD,iBAAiB,kIAAkI,uBAAuB,OAAO,qEAAqE,gDAAgD,4FAA4F,0FAA0F,GAAG,iBAAiB,aAAa,SAAS,EAAE,aAAa,oEAAoE,yCAAyC,mCAAmC,aAAa,oEAAoE,mBAAmB,gDAAgD,8CAA8C,mDAAmD,uGAAuG,8EAA8E,2CAA2C,+IAA+I,uCAAuC,mDAAmD,2BAA2B,iBAAiB,sDAAsD,6CAA6C,qDAAqD,8DAA8D,yDAAyD,0DAA0D,6EAA6E,2EAA2E,4EAA4E,uDAAuD,iEAAiE,4FAA4F,uGAAuG,qBAAqB,iBAAiB,QAAQ,aAAa,yJAAyJ,2EAA2E,0EAA0E,6DAA6D,kCAAkC,uFAAuF,sCAAsC,iCAAiC,wBAAwB,OAAO,uEAAuE,0EAA0E,oEAAoE,gCAAgC,wJAAwJ,0DAA0D,GAAG,iBAAiB,kIAAkI,uBAAuB,OAAO,qEAAqE,gDAAgD,qIAAqI,0FAA0F,GAAG,iBAAiB,aAAa,yJAAyJ,6EAA6E,0EAA0E,6DAA6D,kCAAkC,uFAAuF,sCAAsC,kDAAkD,+BAA+B,wBAAwB,OAAO,uEAAuE,0EAA0E,oEAAoE,gCAAgC,+RAA+R,0DAA0D,GAAG,gDAAgD,iBAAiB,kIAAkI,uBAAuB,OAAO,qEAAqE,gDAAgD,4FAA4F,0FAA0F,GAAG,iBAAiB,aAAa,SAAS,EAAE,yGAAyG,oBAAoB,4WAA4W,SAAS,aAAa,oEAAoE,mBAAmB,oDAAoD,uDAAuD,8CAA8C,kDAAkD,6CAA6C,mDAAmD,gDAAgD,yDAAyD,gJAAgJ,0CAA0C,6CAA6C,2DAA2D,iBAAiB,yCAAyC,yDAAyD,wDAAwD,iCAAiC,uFAAuF,qEAAqE,oEAAoE,4EAA4E,wKAAwK,kDAAkD,6DAA6D,qDAAqD,iBAAiB,yEAAyE,wGAAwG,oGAAoG,aAAa,8EAA8E,EAAE,6FAA6F,sCAAsC,gDAAgD,gEAAgE,kDAAkD,iEAAiE,yBAAyB,sBAAsB,8BAA8B,0CAA0C,gDAAgD,+DAA+D,6EAA6E,oFAAoF,yFAAyF,gJAAgJ,8CAA8C,8DAA8D,aAAa,kBAAkB,sDAAsD,wEAAwE,kCAAkC,kCAAkC,mIAAmI,2IAA2I,aAAa,sBAAsB,0HAA0H,SAAS,uCAAuC,8EAA8E,kEAAkE,oSAAoS,uBAAuB,uEAAuE,oJAAoJ,sBAAsB,aAAa,iFAAiF,oDAAoD,2CAA2C,oEAAoE,0cAA0c,uBAAuB,uVAAuV,aAAa,UAAU,kFAAkF,4CAA4C,aAAa,oEAAoE,mBAAmB,gDAAgD,+DAA+D,kDAAkD,sGAAsG,SAAS,qCAAqC,4BAA4B,SAAS,gCAAgC,OAAO,8BAA8B,4BAA4B,2BAA2B,4BAA4B,0EAA0E,yCAAyC,yCAAyC,uCAAuC,2CAA2C,qLAAqL,6MAA6M,qBAAqB,+BAA+B,2EAA2E,wIAAwI,2BAA2B,iBAAiB,mDAAmD,yDAAyD,qDAAqD,mDAAmD,8DAA8D,2GAA2G,2DAA2D,yDAAyD,6DAA6D,2EAA2E,wDAAwD,yDAAyD,0EAA0E,sEAAsE,gEAAgE,0DAA0D,0DAA0D,wDAAwD,0EAA0E,sFAAsF,+EAA+E,uCAAuC,+BAA+B,qBAAqB,2DAA2D,yDAAyD,0JAA0J,+DAA+D,0JAA0J,qBAAqB,sDAAsD,gEAAgE,sFAAsF,2BAA2B,0BAA0B,mCAAmC,iCAAiC,uDAAuD,qFAAqF,qCAAqC,gFAAgF,4EAA4E,2DAA2D,qEAAqE,yBAAyB,wEAAwE,qBAAqB,0BAA0B,iGAAiG,6CAA6C,6HAA6H,8DAA8D,yBAAyB,+CAA+C,8DAA8D,yBAAyB,mEAAmE,8EAA8E,wHAAwH,yBAAyB,wEAAwE,0DAA0D,8MAA8M,+CAA+C,oEAAoE,mDAAmD,yBAAyB,yEAAyE,mDAAmD,yBAAyB,+EAA+E,qBAAqB,+CAA+C,wOAAwO,EAAE,mBAAmB,QAAQ,eAAe,QAAQ,WAAW,sIAAsI,oGAAoG,kEAAkE,iDAAiD,yDAAyD,qDAAqD,wDAAwD,wLAAwL,2EAA2E,gOAAgO,kBAAkB,kDAAkD,iEAAiE,8DAA8D,yCAAyC,mDAAmD,iBAAiB,sDAAsD,8EAA8E,6IAA6I,iJAAiJ,uDAAuD,uEAAuE,2DAA2D,+EAA+E,qDAAqD,4DAA4D,iBAAiB,0EAA0E,iEAAiE,yFAAyF,aAAa,EAAE,gCAAgC,8EAA8E,4CAA4C,oDAAoD,wDAAwD,qFAAqF,uEAAuE,kEAAkE,kEAAkE,2IAA2I,mDAAmD,uIAAuI,mDAAmD,2DAA2D,qEAAqE,2CAA2C,wEAAwE,yBAAyB,kDAAkD,gDAAgD,yCAAyC,qBAAqB,iBAAiB,EAAE,mLAAmL,mDAAmD,mCAAmC,+BAA+B,4DAA4D,wCAAwC,iDAAiD,qBAAqB,wCAAwC,mEAAmE,iBAAiB,EAAE,iCAAiC,iEAAiE,iBAAiB,6CAA6C,gEAAgE,sFAAsF,wGAAwG,mEAAmE,iBAAiB,EAAE,aAAa,EAAE,4BAA4B,SAAS,0CAA0C,eAAe,oEAAoE,yCAAyC,mCAAmC,mCAAmC,mCAAmC,+CAA+C,4CAA4C,mDAAmD,6CAA6C,4EAA4E,kCAAkC,6DAA6D,iCAAiC,0CAA0C,uDAAuD,4DAA4D,oEAAoE,8FAA8F,yBAAyB,EAAE,qBAAqB,kBAAkB,0BAA0B,+FAA+F,aAAa,EAAE,SAAS,wCAAwC,kFAAkF,EAAE,8BAA8B,uEAAuE,EAAE,gCAAgC,2EAA2E,EAAE,aAAa,oEAAoE,mBAAmB,iDAAiD,qDAAqD,4CAA4C,4CAA4C,yDAAyD,oDAAoD,gDAAgD,iEAAiE,6BAA6B,yHAAyH,qEAAqE,yNAAyN,aAAa,2CAA2C,yCAAyC,gCAAgC,2FAA2F,mHAAmH,yCAAyC,uFAAuF,qBAAqB,0CAA0C,iBAAiB,0BAA0B,yDAAyD,aAAa,+BAA+B,moCAAmoC,6BAA6B,wEAAwE,kEAAkE,qBAAqB,gCAAgC,uEAAuE,0EAA0E,qBAAqB,iBAAiB,+BAA+B,6BAA6B,oLAAoL,gCAAgC,mGAAmG,iBAAiB,2CAA2C,4EAA4E,OAAO,6BAA6B,2BAA2B,4DAA4D,6FAA6F,aAAa,oEAAoE,OAAO,wCAAwC,OAAO,iEAAiE,OAAO,uEAAuE,4DAA4D,kFAAkF,8BAA8B,gDAAgD,sDAAsD,2CAA2C,6CAA6C,iBAAiB,yDAAyD,oDAAoD,+CAA+C,EAAE,mCAAmC,iBAAiB,aAAa,yCAAyC,wCAAwC,aAAa,6CAA6C,4CAA4C,aAAa,SAAS,EAAE,kDAAkD,oCAAoC,aAAa,oEAAoE,mBAAmB,mDAAmD,uEAAuE,uEAAuE,qDAAqD,wCAAwC,gDAAgD,aAAa,mEAAmE,2MAA2M,2BAA2B,iBAAiB,8CAA8C,2CAA2C,wEAAwE,iBAAiB,sBAAsB,oDAAoD,iBAAiB,6DAA6D,aAAa,qCAAqC,wDAAwD,aAAa,WAAW,EAAE,aAAa,oEAAoE,kJAAkJ,mCAAmC,iCAAiC,iCAAiC,iCAAiC,mCAAmC,eAAe,oEAAoE,+FAA+F,0EAA0E,qDAAqD,yDAAyD,mDAAmD,2EAA2E,aAAa,4CAA4C,uBAAuB,aAAa,mDAAmD,gEAAgE,wGAAwG,6CAA6C,0FAA0F,iBAAiB,aAAa,EAAE,qDAAqD,4CAA4C,qCAAqC,aAAa,2BAA2B,2BAA2B,aAAa,2CAA2C,aAAa,4EAA4E,GAAG,iFAAiF,EAAE,2EAA2E,6EAA6E,0CAA0C,gDAAgD,wEAAwE,aAAa,UAAU,yCAAyC,yBAAyB,6CAA6C,6BAA6B,aAAa,EAAE,2BAA2B,mDAAmD,8BAA8B,aAAa,EAAE,SAAS,eAAe,oEAAoE,kGAAkG,sDAAsD,4CAA4C,kDAAkD,gDAAgD,+CAA+C,0DAA0D,qDAAqD,gDAAgD,qDAAqD,2DAA2D,sMAAsM,mCAAmC,kBAAkB,yBAAyB,mKAAmK,iBAAiB,kBAAkB,8HAA8H,+EAA+E,aAAa,EAAE,SAAS,EAAE,0KAA0K,qCAAqC,6BAA6B,8BAA8B,qCAAqC,kBAAkB,qCAAqC,2CAA2C,iPAAiP,8KAA8K,sDAAsD,sDAAsD,yCAAyC,kDAAkD,2CAA2C,uCAAuC,oCAAoC,sGAAsG,8DAA8D,iBAAiB,uIAAuI,6GAA6G,yDAAyD,gFAAgF,iBAAiB,EAAE,wJAAwJ,8DAA8D,qBAAqB,kBAAkB,8FAA8F,qDAAqD,iBAAiB,EAAE,oDAAoD,+EAA+E,iBAAiB,iLAAiL,kDAAkD,iBAAiB,qmCAAqmC,4EAA4E,uNAAuN,iBAAiB,EAAE,oEAAoE,gEAAgE,gEAAgE,mLAAmL,kGAAkG,yBAAyB,sBAAsB,iBAAiB,iFAAiF,oFAAoF,kGAAkG,+BAA+B,qBAAqB,0DAA0D,0NAA0N,iEAAiE,qBAAqB,EAAE,8EAA8E,yDAAyD,wDAAwD,qGAAqG,wEAAwE,6BAA6B,yBAAyB,EAAE,qBAAqB,iBAAiB,mGAAmG,+CAA+C,kNAAkN,6MAA6M,sFAAsF,uEAAuE,uDAAuD,+GAA+G,mOAAmO,yBAAyB,gDAAgD,kQAAkQ,0BAA0B,gVAAgV,iBAAiB,EAAE,eAAe,EAAE,uFAAuF,SAAS,EAAE,6FAA6F,+rBAA+rB,uBAAuB,aAAa,mCAAmC,oCAAoC,uBAAuB,aAAa,yCAAyC,iDAAiD,aAAa,iGAAiG,qCAAqC,SAAS,mDAAmD,oCAAoC,qCAAqC,yCAAyC,oCAAoC,iGAAiG,EAAE,0CAA0C,aAAa,SAAS,uFAAuF,uDAAuD,SAAS,OAAO,4CAA4C,sIAAsI,gCAAgC,iBAAiB,aAAa,SAAS,yDAAyD,0DAA0D,iDAAiD,8BAA8B,oFAAoF,mFAAmF,uEAAuE,kGAAkG,sBAAsB,iBAAiB,EAAE,4BAA4B,aAAa,wDAAwD,mCAAmC,iEAAiE,yDAAyD,iBAAiB,EAAE,iCAAiC,aAAa,iCAAiC,SAAS,mEAAmE,8DAA8D,gSAAgS,SAAS,uCAAuC,gDAAgD,4EAA4E,mIAAmI,8DAA8D,kBAAkB,aAAa,EAAE,wBAAwB,SAAS,sCAAsC,uGAAuG,6DAA6D,aAAa,yCAAyC,2BAA2B,uCAAuC,qDAAqD,SAAS,OAAO,sFAAsF,sCAAsC,mEAAmE,mEAAmE,mEAAmE,mEAAmE,iBAAiB,qEAAqE,aAAa,UAAU,sDAAsD,mMAAmM,SAAS,eAAe,oEAAoE,kIAAkI,qDAAqD,+BAA+B,iCAAiC,sBAAsB,sCAAsC,mDAAmD,oCAAoC,qBAAqB,iBAAiB,aAAa,SAAS,gCAAgC,wCAAwC,OAAO,8BAA8B,eAAe,iCAAiC,SAAS,iDAAiD,OAAO,iLAAiL,wCAAwC,oDAAoD,4EAA4E,6EAA6E,qEAAqE,mCAAmC,yBAAyB,6CAA6C,qHAAqH,+FAA+F,gFAAgF,+NAA+N,wEAAwE,8DAA8D,mGAAmG,yBAAyB,qBAAqB,EAAE,iBAAiB,EAAE,wCAAwC,6CAA6C,iDAAiD,+MAA+M,4CAA4C,+BAA+B,iBAAiB,aAAa,yCAAyC,OAAO,kCAAkC,OAAO,iCAAiC,eAAe,6FAA6F,6SAA6S,kDAAkD,mFAAmF,mCAAmC,qBAAqB,iBAAiB,EAAE,yDAAyD,mFAAmF,uEAAuE,qBAAqB,0BAA0B,+CAA+C,qBAAqB,iBAAiB,EAAE,aAAa,yCAAyC,eAAe,iCAAiC,OAAO,wGAAwG,yBAAyB,4BAA4B,SAAS,yEAAyE,OAAO,uDAAuD,OAAO,8JAA8J,wCAAwC,yDAAyD,8FAA8F,wDAAwD,iBAAiB,EAAE,gCAAgC,2CAA2C,8DAA8D,iBAAiB,kDAAkD,8DAA8D,iBAAiB,0CAA0C,8CAA8C,iBAAiB,sBAAsB,2DAA2D,iBAAiB,0DAA0D,yEAAyE,uEAAuE,oHAAoH,+BAA+B,qBAAqB,+EAA+E,8DAA8D,iEAAiE,+DAA+D,SAAS,OAAO,kDAAkD,6JAA6J,qBAAqB,iBAAiB,aAAa,UAAU,0CAA0C,eAAe,oEAAoE,sEAAsE,kDAAkD,gQAAgQ,OAAO,qEAAqE,OAAO,YAAY,qCAAqC,iBAAiB,OAAO,OAAO,iCAAiC,4CAA4C,QAAQ,oDAAoD,iGAAiG,+DAA+D,mFAAmF,iBAAiB,+DAA+D,mEAAmE,iBAAiB,aAAa,uBAAuB,+DAA+D,sKAAsK,iBAAiB,+DAA+D,4CAA4C,+CAA+C,qCAAqC,qBAAqB,2CAA2C,yCAAyC,iDAAiD,mDAAmD,sCAAsC,krBAAkrB,oCAAoC,qBAAqB,iBAAiB,aAAa,UAAU,8CAA8C,gCAAgC,yCAAyC,sBAAsB,+DAA+D,2CAA2C,gDAAgD,iDAAiD,iBAAiB,+DAA+D,2CAA2C,sLAAsL,6EAA6E,qPAAqP,iBAAiB,cAAc,SAAS,0CAA0C,kDAAkD,SAAS,mEAAmE,2DAA2D,mBAAmB,OAAO,kCAAkC,gFAAgF,gCAAgC,iBAAiB,uBAAuB,aAAa,SAAS,qPAAqP,gFAAgF,kCAAkC,yCAAyC,aAAa,0FAA0F,6CAA6C,6BAA6B,aAAa,sFAAsF,qCAAqC,6BAA6B,aAAa,wBAAwB,SAAS,kCAAkC,mDAAmD,SAAS,gDAAgD,qCAAqC,SAAS,oCAAoC,eAAe,oEAAoE,oDAAoD,8CAA8C,+CAA+C,mDAAmD,iCAAiC,qCAAqC,iCAAiC,8DAA8D,yOAAyO,4DAA4D,gGAAgG,+XAA+X,qUAAqU,eAAe,oKAAoK,0HAA0H,gEAAgE,kHAAkH,yeAAye,2CAA2C,OAAO,qFAAqF,sBAAsB,SAAS,mBAAmB,mBAAmB,4BAA4B,2BAA2B,OAAO,yBAAyB,eAAe,qHAAqH,4DAA4D,eAAe,0EAA0E,0BAA0B,yDAAyD,iEAAiE,8EAA8E,6DAA6D,iBAAiB,aAAa,EAAE,SAAS,mDAAmD,6DAA6D,0FAA0F,+EAA+E,0GAA0G,iDAAiD,wfAAwf,0CAA0C,wKAAwK,iBAAiB,aAAa,EAAE,UAAU,mEAAmE,yCAAyC,oEAAoE,0DAA0D,2HAA2H,+FAA+F,uEAAuE,yBAAyB,sBAAsB,iBAAiB,aAAa,QAAQ,UAAU,4DAA4D,yCAAyC,oEAAoE,6BAA6B,wNAAwN,mMAAmM,iBAAiB,gDAAgD,gIAAgI,sDAAsD,qlBAAqlB,yDAAyD,0UAA0U,iBAAiB,aAAa,QAAQ,UAAU,qEAAqE,2EAA2E,qDAAqD,wBAAwB,4dAA4d,aAAa,EAAE,UAAU,uEAAuE,mPAAmP,wJAAwJ,UAAU,gKAAgK,OAAO,wBAAwB,MAAM,mCAAmC,eAAe,oEAAoE,sDAAsD,uDAAuD,6BAA6B,2BAA2B,OAAO,mDAAmD,+CAA+C,kCAAkC,6DAA6D,0CAA0C,qBAAqB,iBAAiB,sBAAsB,mCAAmC,+BAA+B,OAAO,2EAA2E,8CAA8C,yBAAyB,qBAAqB,iBAAiB,aAAa,0BAA0B,UAAU,yCAAyC,sDAAsD,0BAA0B,SAAS,iDAAiD,2EAA2E,4CAA4C,cAAc,SAAS,oCAAoC,0DAA0D,wDAAwD,wDAAwD,sDAAsD,+FAA+F,kCAAkC,kCAAkC,oEAAoE,2BAA2B,iBAAiB,0DAA0D,8DAA8D,8DAA8D,kDAAkD,iBAAiB,EAAE,wDAAwD,8DAA8D,8DAA8D,kDAAkD,iBAAiB,EAAE,uDAAuD,8DAA8D,kDAAkD,kDAAkD,iBAAiB,EAAE,0DAA0D,0DAA0D,wCAAwC,8EAA8E,oMAAoM,uDAAuD,yBAAyB,qBAAqB,EAAE,yCAAyC,8gBAA8gB,EAAE,iBAAiB,EAAE,aAAa,0DAA0D,+DAA+D,6DAA6D,yCAAyC,2TAA2T,EAAE,iBAAiB,EAAE,aAAa,UAAU,uGAAuG,sDAAsD,sDAAsD,oDAAoD,uFAAuF,qFAAqF,yEAAyE,aAAa,mEAAmE,kDAAkD,oEAAoE,aAAa,UAAU,kCAAkC,iCAAiC,yGAAyG,aAAa,iCAAiC,6CAA6C,8DAA8D,kHAAkH,4BAA4B,aAAa,UAAU,8BAA8B,sJAAsJ,gHAAgH,gHAAgH,yKAAyK,wBAAwB,kCAAkC,aAAa,oEAAoE,8EAA8E,4EAA4E,+DAA+D,oEAAoE,oEAAoE,oEAAoE,oEAAoE,6BAA6B,iBAAiB,EAAE,wBAAwB,oCAAoC,aAAa,UAAU,gFAAgF,uBAAuB,6KAA6K,aAAa,qEAAqE,uEAAuE,yLAAyL,aAAa,GAAG,8BAA8B,6CAA6C,qDAAqD,sBAAsB,oCAAoC,SAAS,+BAA+B,sJAAsJ,mPAAmP,aAAa,0DAA0D,gEAAgE,sGAAsG,iBAAiB,EAAE,aAAa,UAAU,4EAA4E,2JAA2J,SAAS,yKAAyK,iDAAiD,qDAAqD,oFAAoF,gDAAgD,gDAAgD,0BAA0B,SAAS,sCAAsC,4IAA4I,SAAS,8CAA8C,aAAa,oEAAoE,yFAAyF,4CAA4C,sDAAsD,4CAA4C,oDAAoD,yDAAyD,qMAAqM,wzBAAwzB,+LAA+L,saAAsa,gEAAgE,eAAe,6PAA6P,OAAO,6MAA6M,OAAO,0CAA0C,gEAAgE,eAAe,wGAAwG,6CAA6C,sJAAsJ,gEAAgE,uJAAuJ,mCAAmC,aAAa,sHAAsH,eAAe,gEAAgE,2BAA2B,yDAAyD,wDAAwD,uEAAuE,qBAAqB,EAAE,iBAAiB,2HAA2H,cAAc,2IAA2I,2BAA2B,iBAAiB,kEAAkE,kEAAkE,iBAAiB,QAAQ,aAAa,2GAA2G,OAAO,+EAA+E,iFAAiF,4DAA4D,aAAa,WAAW,EAAE,6DAA6D,iDAAiD,4UAA4U,+DAA+D,SAAS,sCAAsC,eAAe,oEAAoE,oDAAoD,uDAAuD,6CAA6C,wDAAwD,yEAAyE,2EAA2E,4BAA4B,0DAA0D,2EAA2E,4BAA4B,kDAAkD,2EAA2E,0CAA0C,8CAA8C,0EAA0E,gDAAgD,4LAA4L,aAAa,oGAAoG,wCAAwC,+DAA+D,aAAa,kYAAkY,gDAAgD,aAAa,qGAAqG,4CAA4C,qFAAqF,8WAA8W,yKAAyK,EAAE,aAAa,WAAW,EAAE,wEAAwE,+TAA+T,SAAS,eAAe,oEAAoE,0FAA0F,kCAAkC,4JAA4J,wDAAwD,oDAAoD,0CAA0C,uCAAuC,kCAAkC,yBAAyB,uDAAuD,iBAAiB,EAAE,aAAa,UAAU,kCAAkC,uDAAuD,mKAAmK,sNAAsN,8EAA8E,qDAAqD,wDAAwD,4DAA4D,2BAA2B,UAAU,aAAa,oEAAoE,mBAAmB,0DAA0D,4CAA4C,+CAA+C,+BAA+B,mCAAmC,2BAA2B,8DAA8D,OAAO,2CAA2C,8DAA8D,OAAO,2CAA2C,SAAS,iCAAiC,mHAAmH,wtDAAwtD,qBAAqB,8LAA8L,UAAU,sCAAsC,sHAAsH,0BAA0B,0BAA0B,0BAA0B,qCAAqC,kBAAkB,yBAAyB,iDAAiD,yEAAyE,qDAAqD,aAAa,EAAE,wCAAwC,wCAAwC,2EAA2E,0WAA0W,aAAa,EAAE,UAAU,wCAAwC,mCAAmC,yDAAyD,2BAA2B,kEAAkE,2CAA2C,uDAAuD,iBAAiB,aAAa,EAAE,yBAAyB,UAAU,yDAAyD,+BAA+B,4CAA4C,4CAA4C,qCAAqC,sFAAsF,6FAA6F,EAAE,sCAAsC,oLAAoL,EAAE,aAAa,kBAAkB,oCAAoC,gHAAgH,yVAAyV,iBAAiB,EAAE,aAAa,UAAU,kDAAkD,iCAAiC,aAAa,+CAA+C,mBAAmB,8BAA8B,4BAA4B,6CAA6C,sCAAsC,aAAa,qCAAqC,sCAAsC,aAAa,UAAU,aAAa,oEAAoE,mBAAmB,+FAA+F,iCAAiC,iCAAiC,iBAAiB,oEAAoE,mBAAmB,iDAAiD,gDAAgD,4CAA4C,2DAA2D,8FAA8F,OAAO,+CAA+C,OAAO,yCAAyC,OAAO,qFAAqF,wCAAwC,SAAS,gCAAgC,0MAA0M,yBAAyB,2BAA2B,EAAE,aAAa,0CAA0C,uCAAuC,aAAa,sCAAsC,mCAAmC,aAAa,qCAAqC,kCAAkC,aAAa,0CAA0C,gCAAgC,aAAa,2CAA2C,gCAAgC,aAAa,uCAAuC,oCAAoC,aAAa,yMAAyM,OAAO,2DAA2D,4CAA4C,aAAa,oFAAoF,cAAc,kCAAkC,OAAO,mEAAmE,oDAAoD,6CAA6C,8CAA8C,yCAAyC,yCAAyC,yCAAyC,0CAA0C,2EAA2E,0BAA0B,yPAAyP,aAAa,gDAAgD,2BAA2B,8BAA8B,kDAAkD,iBAAiB,yDAAyD,8DAA8D,aAAa,gDAAgD,0FAA0F,yDAAyD,yGAAyG,kFAAkF,uDAAuD,kDAAkD,mEAAmE,oEAAoE,0FAA0F,sDAAsD,2DAA2D,sFAAsF,qBAAqB,iBAAiB,EAAE,kCAAkC,uGAAuG,6FAA6F,sDAAsD,4DAA4D,sFAAsF,qBAAqB,iBAAiB,EAAE,6DAA6D,6EAA6E,iBAAiB,yCAAyC,uCAAuC,aAAa,uJAAuJ,aAAa,kCAAkC,QAAQ,kDAAkD,MAAM,sEAAsE,yDAAyD,gDAAgD,uDAAuD,4CAA4C,gDAAgD,2JAA2J,sCAAsC,iBAAiB,yCAAyC,iFAAiF,oDAAoD,sMAAsM,mBAAmB,wLAAwL,eAAe,kIAAkI,OAAO,oCAAoC,OAAO,qEAAqE,qDAAqD,2CAA2C,aAAa,qHAAqH,MAAM,8CAA8C,QAAQ,mDAAmD,OAAO,2EAA2E,0DAA0D,0BAA0B,mCAAmC,uRAAuR,wnBAAwnB,aAAa,0GAA0G,OAAO,oCAAoC,OAAO,qEAAqE,gFAAgF,gFAAgF,kDAAkD,oDAAoD,6EAA6E,iBAAiB,2EAA2E,aAAa,mWAAmW,MAAM,uEAAuE,qDAAqD,iCAAiC,8DAA8D,+BAA+B,iBAAiB,4BAA4B,EAAE,cAAc,2DAA2D,iBAAiB,4BAA4B,EAAE,WAAW,IAAI,cAAc,uDAAuD,8CAA8C,+DAA+D,+DAA+D,mEAAmE,iBAAiB,4BAA4B,EAAE,WAAW,IAAI,WAAW,IAAI,cAAc,qCAAqC,iBAAiB,sDAAsD,sDAAsD,oCAAoC,iBAAiB,+BAA+B,aAAa,wGAAwG,MAAM,iEAAiE,OAAO,sEAAsE,yDAAyD,qDAAqD,qGAAqG,uEAAuE,0BAA0B,6RAA6R,aAAa,wIAAwI,OAAO,yCAAyC,OAAO,2CAA2C,MAAM,uCAAuC,OAAO,kFAAkF,0DAA0D,8MAA8M,iCAAiC,iBAAiB,yEAAyE,qEAAqE,gDAAgD,eAAe,UAAU,+DAA+D,6EAA6E,qDAAqD,kCAAkC,0EAA0E,yEAAyE,4CAA4C,0DAA0D,aAAa,EAAE,4DAA4D,4EAA4E,4JAA4J,iBAAiB,aAAa,EAAE,gCAAgC,UAAU,kEAAkE,qDAAqD,iDAAiD,4LAA4L,4EAA4E,SAAS,iEAAiE,oCAAoC,eAAe,oEAAoE,mBAAmB,yDAAyD,4CAA4C,6CAA6C,qDAAqD,sEAAsE,uCAAuC,gFAAgF,sRAAsR,+DAA+D,iIAAiI,iBAAiB,yFAAyF,6BAA6B,6IAA6I,iBAAiB,gEAAgE,uSAAuS,0DAA0D,iBAAiB,mEAAmE,uVAAuV,0DAA0D,iBAAiB,iEAAiE,mNAAmN,6LAA6L,iBAAiB,aAAa,8HAA8H,yEAAyE,oEAAoE,6EAA6E,aAAa,+GAA+G,yEAAyE,qEAAqE,aAAa,SAAS,EAAE,+DAA+D,4EAA4E,8CAA8C,kEAAkE,aAAa,6CAA6C,0CAA0C,aAAa,oEAAoE,+RAA+R,6CAA6C,iBAAiB,6EAA6E,aAAa,EAAE,oDAAoD,gEAAgE,EAAE,SAAS,yCAAyC,iBAAiB,oEAAoE,mBAAmB,gDAAgD,8CAA8C,gDAAgD,gDAAgD,4BAA4B,mYAAmY,2BAA2B,iHAAiH,uEAAuE,4kBAA4kB,yCAAyC,oCAAoC,gEAAgE,uFAAuF,kDAAkD,uEAAuE,uJAAuJ,gFAAgF,sEAAsE,gFAAgF,aAAa,yGAAyG,8DAA8D,mGAAmG,iDAAiD,kDAAkD,oDAAoD,4CAA4C,0EAA0E,qEAAqE,oFAAoF,gCAAgC,qLAAqL,iHAAiH,EAAE,sCAAsC,iBAAiB,eAAe,oHAAoH,kCAAkC,gEAAgE,oGAAoG,+DAA+D,2DAA2D,sCAAsC,oCAAoC,2CAA2C,0CAA0C,mDAAmD,iCAAiC,qCAAqC,OAAO,qDAAqD,oCAAoC,qGAAqG,qBAAqB,+CAA+C,uDAAuD,0DAA0D,iBAAiB,sFAAsF,4CAA4C,6EAA6E,qFAAqF,6FAA6F,qDAAqD,mEAAmE,iFAAiF,iBAAiB,uKAAuK,yKAAyK,eAAe,4GAA4G,gFAAgF,0DAA0D,4HAA4H,wDAAwD,4BAA4B,aAAa,yGAAyG,sDAAsD,uDAAuD,2DAA2D,2DAA2D,EAAE,qCAAqC,aAAa,mIAAmI,gEAAgE,kDAAkD,kCAAkC,iCAAiC,OAAO,OAAO,oEAAoE,wEAAwE,sDAAsD,4FAA4F,iBAAiB,gCAAgC,eAAe,8DAA8D,mEAAmE,yEAAyE,iBAAiB,wDAAwD,6CAA6C,iBAAiB,wCAAwC,eAAe,qFAAqF,wCAAwC,kDAAkD,2CAA2C,uCAAuC,iBAAiB,4CAA4C,uCAAuC,+CAA+C,iBAAiB,0CAA0C,uCAAuC,iBAAiB,2CAA2C,uCAAuC,+CAA+C,iBAAiB,iCAAiC,kEAAkE,yCAAyC,iBAAiB,0BAA0B,mGAAmG,8LAA8L,kBAAkB,aAAa,8GAA8G,oEAAoE,+CAA+C,2BAA2B,iBAAiB,0FAA0F,qDAAqD,oDAAoD,6BAA6B,mEAAmE,iBAAiB,8FAA8F,2DAA2D,2DAA2D,4DAA4D,qCAAqC,uNAAuN,+CAA+C,8DAA8D,wDAAwD,iBAAiB,6DAA6D,gCAAgC,yIAAyI,wEAAwE,oFAAoF,+DAA+D,uMAAuM,qBAAqB,uFAAuF,sCAAsC,aAAa,gGAAgG,mCAAmC,mCAAmC,iCAAiC,iCAAiC,gDAAgD,mCAAmC,qCAAqC,yCAAyC,qBAAqB,iDAAiD,0CAA0C,qBAAqB,iBAAiB,sBAAsB,mCAAmC,qCAAqC,0CAA0C,qBAAqB,iDAAiD,wCAAwC,qBAAqB,iBAAiB,0BAA0B,sJAAsJ,aAAa,mHAAmH,sEAAsE,gDAAgD,2BAA2B,iBAAiB,4FAA4F,wDAAwD,sDAAsD,qDAAqD,oDAAoD,oEAAoE,iDAAiD,sEAAsE,iBAAiB,oDAAoD,2DAA2D,4DAA4D,oDAAoD,iCAAiC,gCAAgC,OAAO,2DAA2D,4DAA4D,qCAAqC,qEAAqE,4FAA4F,qBAAqB,kEAAkE,wDAAwD,kCAAkC,yOAAyO,4EAA4E,wDAAwD,6EAA6E,yMAAyM,0FAA0F,EAAE,2CAA2C,iBAAiB,aAAa,+FAA+F,qCAAqC,sCAAsC,iCAAiC,iCAAiC,mDAAmD,gDAAgD,0EAA0E,uDAAuD,iBAAiB,sBAAsB,0EAA0E,wDAAwD,iBAAiB,0BAA0B,sJAAsJ,aAAa,+GAA+G,kEAAkE,8CAA8C,2BAA2B,iBAAiB,gEAAgE,sFAAsF,mDAAmD,sDAAsD,oDAAoD,kEAAkE,iDAAiD,qEAAqE,iBAAiB,uIAAuI,qFAAqF,oGAAoG,wCAAwC,gJAAgJ,qCAAqC,iBAAiB,iCAAiC,OAAO,OAAO,gEAAgE,+EAA+E,gCAAgC,6DAA6D,qDAAqD,6EAA6E,0MAA0M,2FAA2F,EAAE,wCAAwC,iBAAiB,aAAa,SAAS,EAAE,eAAe,oEAAoE,mBAAmB,iDAAiD,8CAA8C,6CAA6C,wDAAwD,uDAAuD,8BAA8B,+BAA+B,6eAA6e,OAAO,sGAAsG,OAAO,ovBAAovB,4HAA4H,gCAAgC,kDAAkD,aAAa,SAAS,EAAE,sDAAsD,uFAAuF,uCAAuC,gDAAgD,2BAA2B,iBAAiB,yCAAyC,wEAAwE,4EAA4E,8DAA8D,kEAAkE,iDAAiD,4BAA4B,gMAAgM,4CAA4C,EAAE,0DAA0D,0DAA0D,kDAAkD,4BAA4B,0SAA0S,4CAA4C,EAAE,oDAAoD,wDAAwD,wCAAwC,4CAA4C,6BAA6B,oDAAoD,0EAA0E,qBAAqB,EAAE,iBAAiB,8BAA8B,uDAAuD,gFAAgF,qBAAqB,EAAE,iBAAiB,oCAAoC,gDAAgD,2IAA2I,mEAAmE,qDAAqD,uDAAuD,yFAAyF,kHAAkH,6CAA6C,uFAAuF,qKAAqK,iDAAiD,6CAA6C,qBAAqB,kGAAkG,yDAAyD,qBAAqB,sDAAsD,6DAA6D,qBAAqB,iBAAiB,oCAAoC,qFAAqF,oDAAoD,gDAAgD,qBAAqB,oDAAoD,0DAA0D,qBAAqB,yDAAyD,8DAA8D,qBAAqB,2DAA2D,iBAAiB,uEAAuE,kCAAkC,8GAA8G,4CAA4C,+CAA+C,mKAAmK,gDAAgD,0EAA0E,+DAA+D,6CAA6C,4BAA4B,gRAAgR,mFAAmF,EAAE,mDAAmD,kCAAkC,aAAa,SAAS,EAAE,aAAa,oEAAoE,oFAAoF,mCAAmC,iCAAiC,mCAAmC,iCAAiC,mCAAmC,iCAAiC,mCAAmC,iCAAiC,eAAe,oEAAoE,gGAAgG,mFAAmF,SAAS,EAAE,eAAe,oEAAoE,4FAA4F,yCAAyC,6CAA6C,+CAA+C,8CAA8C,iDAAiD,+BAA+B,6CAA6C,4DAA4D,2PAA2P,21FAA21F,oHAAoH,8GAA8G,OAAO,iEAAiE,uGAAuG,8IAA8I,wGAAwG,6GAA6G,uKAAuK,sDAAsD,6DAA6D,yCAAyC,aAAa,wGAAwG,uDAAuD,wFAAwF,yCAAyC,aAAa,oGAAoG,6CAA6C,wHAAwH,gDAAgD,iBAAiB,sDAAsD,kDAAkD,gGAAgG,0JAA0J,eAAe,gEAAgE,0BAA0B,mEAAmE,oDAAoD,qBAAqB,sFAAsF,QAAQ,mEAAmE,sCAAsC,0CAA0C,aAAa,mGAAmG,oDAAoD,8FAA8F,mFAAmF,sZAAsZ,uJAAuJ,iBAAiB,QAAQ,aAAa,+FAA+F,6CAA6C,uDAAuD,mDAAmD,2DAA2D,kJAAkJ,iBAAiB,QAAQ,iDAAiD,6CAA6C,iBAAiB,iDAAiD,0CAA0C,iBAAiB,aAAa,iGAAiG,6NAA6N,gDAAgD,iDAAiD,iTAAiT,iDAAiD,qBAAqB,iBAAiB,QAAQ,iDAAiD,4DAA4D,oCAAoC,iBAAiB,8CAA8C,yCAAyC,yDAAyD,qBAAqB,uCAAuC,iBAAiB,aAAa,oGAAoG,yCAAyC,sDAAsD,6CAA6C,2DAA2D,sCAAsC,0IAA0I,qEAAqE,gEAAgE,8CAA8C,qBAAqB,0BAA0B,qFAAqF,kGAAkG,8FAA8F,sDAAsD,6BAA6B,yBAAyB,EAAE,qBAAqB,iBAAiB,sCAAsC,qIAAqI,6CAA6C,mCAAmC,yBAAyB,6CAA6C,6EAA6E,uEAAuE,oEAAoE,SAAS,OAAO,+EAA+E,wDAAwD,iCAAiC,6BAA6B,yBAAyB,qEAAqE,iDAAiD,kDAAkD,yBAAyB,qBAAqB,QAAQ,iBAAiB,sCAAsC,wfAAwf,mFAAmF,6DAA6D,iFAAiF,sFAAsF,8EAA8E,uFAAuF,gMAAgM,KAAK,6CAA6C,qDAAqD,sZAAsZ,qCAAqC,iCAAiC,qEAAqE,mFAAmF,gEAAgE,iCAAiC,6BAA6B,EAAE,yBAAyB,qBAAqB,QAAQ,iBAAiB,aAAa,iGAAiG,wBAAwB,iGAAiG,kDAAkD,iBAAiB,QAAQ,+EAA+E,aAAa,iIAAiI,gKAAgK,iDAAiD,8EAA8E,yFAAyF,6EAA6E,mCAAmC,qBAAqB,iBAAiB,QAAQ,0BAA0B,aAAa,+GAA+G,oIAAoI,+CAA+C,iBAAiB,yCAAyC,2DAA2D,yKAAyK,iBAAiB,aAAa,yGAAyG,mCAAmC,iDAAiD,iDAAiD,mEAAmE,6CAA6C,6FAA6F,yBAAyB,qBAAqB,iBAAiB,QAAQ,wCAAwC,aAAa,+DAA+D,SAAS,gJAAgJ,2CAA2C,iDAAiD,4HAA4H,uFAAuF,yBAAyB,mDAAmD,iBAAiB,QAAQ,aAAa,yCAAyC,OAAO,+BAA+B,OAAO,kCAAkC,4CAA4C,6GAA6G,oEAAoE,aAAa,yCAAyC,OAAO,+BAA+B,OAAO,kCAAkC,2BAA2B,6GAA6G,sEAAsE,6DAA6D,aAAa,+HAA+H,OAAO,2BAA2B,OAAO,mCAAmC,OAAO,iCAAiC,OAAO,wCAAwC,OAAO,sCAAsC,QAAQ,2GAA2G,kFAAkF,+PAA+P,iBAAiB,QAAQ,qEAAqE,aAAa,gEAAgE,eAAe,oFAAoF,mEAAmE,gCAAgC,4DAA4D,iBAAiB,aAAa,oIAAoI,qCAAqC,OAAO,qCAAqC,OAAO,oCAAoC,eAAe,4IAA4I,+DAA+D,uEAAuE,oCAAoC,8DAA8D,qBAAqB,iBAAiB,sBAAsB,0FAA0F,iBAAiB,aAAa,+DAA+D,2BAA2B,yHAAyH,4CAA4C,8EAA8E,gCAAgC,mDAAmD,iBAAiB,wGAAwG,8CAA8C,6FAA6F,gDAAgD,qBAAqB,iBAAiB,2ZAA2Z,8FAA8F,gDAAgD,qBAAqB,iBAAiB,aAAa,0CAA0C,eAAe,0DAA0D,mDAAmD,aAAa,SAAS,EAAE,wCAAwC,yBAAyB,yHAAyH,8EAA8E,iBAAiB,cAAc,uBAAuB,SAAS,6DAA6D,0FAA0F,iEAAiE,kDAAkD,qDAAqD,iBAAiB,uDAAuD,mDAAmD,iBAAiB,iEAAiE,EAAE,SAAS,yCAAyC,eAAe,oEAAoE,sDAAsD,4CAA4C,0BAA0B,uEAAuE,wFAAwF,gCAAgC,OAAO,8BAA8B,QAAQ,mEAAmE,0DAA0D,UAAU,gHAAgH,eAAe,0BAA0B,gBAAgB,0BAA0B,SAAS,oEAAoE,kCAAkC,0EAA0E,0CAA0C,0EAA0E,mDAAmD,2DAA2D,mCAAmC,0CAA0C,qCAAqC,kBAAkB,OAAO,mEAAmE,qBAAqB,sDAAsD,iBAAiB,EAAE,cAAc,UAAU,mGAAmG,SAAS,uEAAuE,oVAAoV,mBAAmB,OAAO,uHAAuH,4SAA4S,SAAS,8CAA8C,SAAS,qDAAqD,SAAS,uFAAuF,SAAS,kCAAkC,oBAAoB,2GAA2G,4CAA4C,8BAA8B,6DAA6D,uFAAuF,uDAAuD,uDAAuD,iBAAiB,EAAE,oCAAoC,kCAAkC,iBAAiB,6CAA6C,iCAAiC,oBAAoB,uCAAuC,mDAAmD,iBAAiB,mCAAmC,oDAAoD,kFAAkF,6CAA6C,0CAA0C,qBAAqB,iBAAiB,gCAAgC,cAAc,qDAAqD,+DAA+D,aAAa,+CAA+C,oCAAoC,qDAAqD,uFAAuF,kFAAkF,qBAAqB,EAAE,iBAAiB,EAAE,+BAA+B,aAAa,6CAA6C,wCAAwC,qDAAqD,uFAAuF,qEAAqE,qBAAqB,EAAE,iBAAiB,EAAE,aAAa,UAAU,kCAAkC,aAAa,oEAAoE,0FAA0F,gDAAgD,8CAA8C,+BAA+B,iCAAiC,4aAA4a,8DAA8D,OAAO,mDAAmD,+FAA+F,8DAA8D,eAAe,6CAA6C,8DAA8D,eAAe,+CAA+C,8DAA8D,eAAe,4CAA4C,iCAAiC,6CAA6C,6CAA6C,OAAO,4CAA4C,+DAA+D,6BAA6B,kDAAkD,8DAA8D,iDAAiD,+DAA+D,UAAU,iCAAiC,iLAAiL,iDAAiD,sCAAsC,QAAQ,+DAA+D,6DAA6D,aAAa,0CAA0C,eAAe,mGAAmG,iDAAiD,aAAa,0CAA0C,eAAe,8DAA8D,mDAAmD,aAAa,+DAA+D,OAAO,kCAAkC,MAAM,4EAA4E,sCAAsC,2CAA2C,6DAA6D,uFAAuF,oDAAoD,iEAAiE,6NAA6N,KAAK,0FAA0F,2DAA2D,yBAAyB,qBAAqB,iBAAiB,QAAQ,sCAAsC,aAAa,0CAA0C,0FAA0F,aAAa,+CAA+C,4CAA4C,2CAA2C,oDAAoD,qEAAqE,iCAAiC,sCAAsC,kCAAkC,oDAAoD,+DAA+D,iBAAiB,sBAAsB,qDAAqD,4EAA4E,iBAAiB,wCAAwC,wFAAwF,8JAA8J,6DAA6D,qBAAqB,iBAAiB,EAAE,2CAA2C,aAAa,2CAA2C,sDAAsD,aAAa,iJAAiJ,OAAO,2BAA2B,OAAO,mCAAmC,OAAO,iCAAiC,OAAO,wCAAwC,OAAO,+EAA+E,kDAAkD,oDAAoD,iDAAiD,2EAA2E,6CAA6C,gHAAgH,qCAAqC,oEAAoE,wFAAwF,iBAAiB,EAAE,kFAAkF,sDAAsD,0DAA0D,2gCAA2gC,mDAAmD,8DAA8D,yBAAyB,6PAA6P,qBAAqB,0BAA0B,+aAA+a,qBAAqB,8DAA8D,gEAAgE,kDAAkD,sDAAsD,iBAAiB,EAAE,0BAA0B,yHAAyH,aAAa,6PAA6P,iDAAiD,0EAA0E,4DAA4D,2BAA2B,iBAAiB,0NAA0N,kFAAkF,6DAA6D,+DAA+D,sCAAsC,iFAAiF,aAAa,yCAAyC,iDAAiD,4EAA4E,4DAA4D,2BAA2B,iBAAiB,iEAAiE,yCAAyC,aAAa,yCAAyC,iDAAiD,+EAA+E,4DAA4D,2BAA2B,iBAAiB,8CAA8C,gEAAgE,iEAAiE,oDAAoD,8CAA8C,2BAA2B,iBAAiB,kpBAAkpB,6KAA6K,yCAAyC,iBAAiB,mGAAmG,2DAA2D,0EAA0E,wDAAwD,kFAAkF,wCAAwC,yCAAyC,yCAAyC,2CAA2C,qBAAqB,OAAO,mFAAmF,iEAAiE,yEAAyE,0EAA0E,oFAAoF,gDAAgD,iCAAiC,kEAAkE,gEAAgE,kEAAkE,6BAA6B,gJAAgJ,yBAAyB,EAAE,qBAAqB,0BAA0B,qEAAqE,yDAAyD,8HAA8H,gFAAgF,qCAAqC,mCAAmC,6BAA6B,kCAAkC,uEAAuE,6BAA6B,yBAAyB,EAAE,qBAAqB,iBAAiB,EAAE,8CAA8C,8EAA8E,iBAAiB,aAAa,UAAU,0EAA0E,mDAAmD,yDAAyD,uDAAuD,iCAAiC,iFAAiF,yEAAyE,6FAA6F,6FAA6F,qBAAqB,EAAE,iBAAiB,aAAa,EAAE,kDAAkD,wCAAwC,aAAa,yuBAAyuB,gCAAgC,SAAS,2DAA2D,qDAAqD,6CAA6C,mMAAmM,qFAAqF,qDAAqD,oCAAoC,aAAa,sCAAsC,0DAA0D,aAAa,+CAA+C,mDAAmD,oCAAoC,aAAa,sCAAsC,wEAAwE,aAAa,kDAAkD,yDAAyD,yDAAyD,aAAa,sZAAsZ,SAAS,uDAAuD,qDAAqD,2DAA2D,qDAAqD,mCAAmC,uBAAuB,aAAa,8IAA8I,gIAAgI,0LAA0L,SAAS,6CAA6C,wDAAwD,yDAAyD,sDAAsD,iFAAiF,uKAAuK,wCAAwC,iEAAiE,uFAAuF,4CAA4C,iLAAiL,qBAAqB,iBAAiB,aAAa,EAAE,SAAS,qCAAqC,eAAe,oEAAoE,4DAA4D,iDAAiD,sGAAsG,mDAAmD,uCAAuC,+BAA+B,aAAa,wIAAwI,OAAO,EAAE,8EAA8E,yDAAyD,uCAAuC,yDAAyD,sMAAsM,kDAAkD,uMAAuM,6CAA6C,8FAA8F,uDAAuD,2CAA2C,uCAAuC,+EAA+E,mFAAmF,oCAAoC,sEAAsE,mTAAmT,qBAAqB,iBAAiB,QAAQ,2EAA2E,6BAA6B,mCAAmC,kBAAkB,OAAO,4DAA4D,4CAA4C,kCAAkC,yBAAyB,qBAAqB,gCAAgC,2CAA2C,8GAA8G,EAAE,qBAAqB,oDAAoD,iBAAiB,uCAAuC,aAAa,WAAW,EAAE,eAAe,oEAAoE,qGAAqG,sDAAsD,2JAA2J,y8BAAy8B,gCAAgC,qIAAqI,iCAAiC,6GAA6G,iBAAiB,w4BAAw4B,qDAAqD,0UAA0U,kDAAkD,aAAa,WAAW,EAAE,2CAA2C,eAAe,oEAAoE,oDAAoD,8CAA8C,+CAA+C,oDAAoD,gCAAgC,gDAAgD,6CAA6C,6CAA6C,kDAAkD,gDAAgD,mCAAmC,+BAA+B,kCAAkC,+BAA+B,gEAAgE,2CAA2C,qCAAqC,sCAAsC,kCAAkC,0BAA0B,qFAAqF,oDAAoD,mFAAmF,0EAA0E,OAAO,2DAA2D,0EAA0E,OAAO,gDAAgD,0HAA0H,8KAA8K,4GAA4G,eAAe,8CAA8C,0EAA0E,OAAO,qDAAqD,0EAA0E,OAAO,sDAAsD,kGAAkG,kGAAkG,wGAAwG,iCAAiC,aAAa,8HAA8H,qEAAqE,mNAAmN,6DAA6D,iEAAiE,2CAA2C,2BAA2B,iBAAiB,8WAA8W,sCAAsC,iBAAiB,qCAAqC,aAAa,0FAA0F,qEAAqE,4DAA4D,aAAa,2FAA2F,sEAAsE,4DAA4D,aAAa,wCAAwC,2CAA2C,wCAAwC,wCAAwC,sCAAsC,mFAAmF,2CAA2C,uCAAuC,2CAA2C,0CAA0C,wCAAwC,aAAa,iGAAiG,uDAAuD,mCAAmC,gLAAgL,8BAA8B,gDAAgD,gJAAgJ,4dAA4d,uBAAuB,uOAAuO,qOAAqO,qIAAqI,sDAAsD,gEAAgE,qBAAqB,iBAAiB,EAAE,+KAA+K,oCAAoC,kCAAkC,mEAAmE,kEAAkE,aAAa,iGAAiG,2CAA2C,8CAA8C,0CAA0C,qJAAqJ,gFAAgF,6DAA6D,kEAAkE,mBAAmB,oJAAoJ,2CAA2C,+EAA+E,6CAA6C,8EAA8E,kEAAkE,6FAA6F,oEAAoE,kBAAkB,uGAAuG,uFAAuF,aAAa,iGAAiG,0CAA0C,aAAa,+CAA+C,uDAAuD,sCAAsC,2DAA2D,yCAAyC,6DAA6D,wFAAwF,6BAA6B,uFAAuF,6CAA6C,GAAG,oGAAoG,4BAA4B,wFAAwF,6BAA6B,gEAAgE,mHAAmH,GAAG,aAAa,+CAA+C,gFAAgF,8BAA8B,2BAA2B,iBAAiB,wCAAwC,8CAA8C,oDAAoD,+JAA+J,yCAAyC,2BAA2B,iBAAiB,qEAAqE,iHAAiH,8JAA8J,qDAAqD,sDAAsD,0DAA0D,oCAAoC,oEAAoE,kCAAkC,mHAAmH,gCAAgC,+DAA+D,yDAAyD,0CAA0C,+BAA+B,qBAAqB,6QAA6Q,sKAAsK,qJAAqJ,mFAAmF,mFAAmF,qBAAqB,uDAAuD,wDAAwD,wDAAwD,qBAAqB,+DAA+D,6DAA6D,wCAAwC,0CAA0C,iBAAiB,EAAE,yDAAyD,sFAAsF,qEAAqE,4BAA4B,mBAAmB,qEAAqE,+CAA+C,6LAA6L,GAAG,sEAAsE,4BAA4B,mBAAmB,2KAA2K,GAAG,aAAa,oDAAoD,uDAAuD,yEAAyE,iDAAiD,2BAA2B,iBAAiB,6EAA6E,2CAA2C,+EAA+E,oKAAoK,wEAAwE,qCAAqC,mCAAmC,yBAAyB,yNAAyN,mCAAmC,yBAAyB,6FAA6F,kEAAkE,6CAA6C,oEAAoE,wEAAwE,uFAAuF,yBAAyB,oCAAoC,yRAAyR,uBAAuB,QAAQ,mBAAmB,QAAQ,gCAAgC,aAAa,2CAA2C,qDAAqD,uDAAuD,iEAAiE,2DAA2D,sCAAsC,uDAAuD,8DAA8D,qLAAqL,mIAAmI,qBAAqB,0SAA0S,mIAAmI,iBAAiB,GAAG,sGAAsG,6DAA6D,6JAA6J,6BAA6B,wQAAwQ,iBAAiB,IAAI,gEAAgE,qDAAqD,mCAAmC,gCAAgC,wEAAwE,qSAAqS,2IAA2I,yBAAyB,yOAAyO,qCAAqC,kCAAkC,+gBAA+gB,yDAAyD,iHAAiH,wFAAwF,0FAA0F,uEAAuE,uGAAuG,sDAAsD,qBAAqB,gEAAgE,wEAAwE,2GAA2G,6GAA6G,gTAAgT,oDAAoD,GAAG,mBAAmB,QAAQ,aAAa,iGAAiG,+EAA+E,uDAAuD,+LAA+L,aAAa,gEAAgE,gBAAgB,mDAAmD,OAAO,iFAAiF,uDAAuD,kDAAkD,uDAAuD,6FAA6F,6CAA6C,0eAA0e,mNAAmN,aAAa,yGAAyG,qDAAqD,kDAAkD,6DAA6D,sCAAsC,uDAAuD,gGAAgG,0DAA0D,iCAAiC,oLAAoL,EAAE,iBAAiB,QAAQ,wEAAwE,uLAAuL,EAAE,oDAAoD,aAAa,6GAA6G,uDAAuD,qDAAqD,4DAA4D,0CAA0C,0CAA0C,6JAA6J,gFAAgF,sCAAsC,iEAAiE,gDAAgD,kOAAkO,2FAA2F,0EAA0E,2MAA2M,qBAAqB,iBAAiB,wEAAwE,yCAAyC,uCAAuC,kDAAkD,sSAAsS,+JAA+J,mEAAmE,yTAAyT,wDAAwD,kUAAkU,EAAE,iBAAiB,aAAa,0GAA0G,uDAAuD,yEAAyE,2EAA2E,0EAA0E,8DAA8D,iBAAiB,4YAA4Y,mNAAmN,MAAM,2CAA2C,aAAa,gEAAgE,QAAQ,oGAAoG,sGAAsG,qEAAqE,+DAA+D,+DAA+D,aAAa,4DAA4D,sCAAsC,6IAA6I,kFAAkF,+DAA+D,oEAAoE,8CAA8C,iCAAiC,2DAA2D,iBAAiB,aAAa,wCAAwC,uCAAuC,0CAA0C,2CAA2C,aAAa,iDAAiD,sCAAsC,yGAAyG,wJAAwJ,2BAA2B,iBAAiB,oDAAoD,iEAAiE,sEAAsE,mCAAmC,2CAA2C,aAAa,mJAAmJ,wCAAwC,2CAA2C,oNAAoN,EAAE,aAAa,iGAAiG,8GAA8G,0EAA0E,wDAAwD,+EAA+E,sEAAsE,qBAAqB,iBAAiB,EAAE,4BAA4B,oDAAoD,sDAAsD,4BAA4B,4LAA4L,iBAAiB,8BAA8B,aAAa,WAAW,EAAE,yCAAyC,yFAAyF,kDAAkD,gCAAgC,SAAS,0CAA0C,eAAe,oEAAoE,0GAA0G,2HAA2H,gYAAgY,SAAS,EAAE,aAAa,oEAAoE,4DAA4D,4CAA4C,kDAAkD,6CAA6C,+BAA+B,oDAAoD,yIAAyI,0MAA0M,eAAe,+CAA+C,aAAa,8HAA8H,qEAAqE,+VAA+V,kEAAkE,iBAAiB,sIAAsI,wFAAwF,sEAAsE,qBAAqB,EAAE,uEAAuE,yDAAyD,kEAAkE,sGAAsG,uMAAuM,4FAA4F,iCAAiC,sgBAAsgB,8SAA8S,6BAA6B,0BAA0B,qBAAqB,QAAQ,mBAAmB,QAAQ,aAAa,2FAA2F,kEAAkE,sEAAsE,mCAAmC,aAAa,4JAA4J,gDAAgD,mHAAmH,iCAAiC,2BAA2B,iBAAiB,uKAAuK,0KAA0K,mEAAmE,+CAA+C,aAAa,oJAAoJ,gDAAgD,mHAAmH,iCAAiC,2BAA2B,iBAAiB,mKAAmK,qVAAqV,iDAAiD,4EAA4E,4EAA4E,sIAAsI,0FAA0F,+CAA+C,aAAa,WAAW,EAAE,kCAAkC,qFAAqF,0CAA0C,6BAA6B,sEAAsE,8CAA8C,yCAAyC,0DAA0D,iDAAiD,4CAA4C,uDAAuD,iBAAiB,sBAAsB,8EAA8E,kDAAkD,4CAA4C,uDAAuD,iBAAiB,6BAA6B,aAAa,uFAAuF,0CAA0C,6BAA6B,6DAA6D,qEAAqE,mEAAmE,8EAA8E,wDAAwD,4DAA4D,0DAA0D,qFAAqF,mFAAmF,wEAAwE,qDAAqD,uDAAuD,iBAAiB,sBAAsB,yEAAyE,mFAAmF,iFAAiF,sEAAsE,oDAAoD,uDAAuD,iBAAiB,6BAA6B,aAAa,4FAA4F,0CAA0C,sEAAsE,6BAA6B,gDAAgD,qDAAqD,0DAA0D,iDAAiD,4CAA4C,uDAAuD,iBAAiB,sBAAsB,wEAAwE,kDAAkD,4CAA4C,uDAAuD,iBAAiB,6BAA6B,aAAa,UAAU,0CAA0C,aAAa,oEAAoE,qZAAqZ,sDAAsD,+CAA+C,iCAAiC,6CAA6C,uBAAuB,8DAA8D,4BAA4B,2BAA2B,OAAO,oCAAoC,OAAO,4CAA4C,SAAS,kDAAkD,eAAe,gDAAgD,OAAO,+CAA+C,OAAO,iDAAiD,SAAS,gDAAgD,SAAS,iDAAiD,QAAQ,+CAA+C,QAAQ,2FAA2F,2CAA2C,4DAA4D,sDAAsD,uNAAuN,6DAA6D,8JAA8J,4DAA4D,uCAAuC,qBAAqB,iBAAiB,EAAE,oCAAoC,iDAAiD,kEAAkE,kDAAkD,qFAAqF,uDAAuD,sEAAsE,8EAA8E,iBAAiB,2HAA2H,mEAAmE,qFAAqF,6FAA6F,oJAAoJ,0OAA0O,aAAa,+DAA+D,4BAA4B,2BAA2B,OAAO,8EAA8E,2CAA2C,wDAAwD,gDAAgD,6DAA6D,oDAAoD,yDAAyD,uCAAuC,qBAAqB,iBAAiB,EAAE,oCAAoC,aAAa,sHAAsH,8EAA8E,+DAA+D,SAAS,OAAO,yEAAyE,yCAAyC,yBAAyB,qBAAqB,iBAAiB,4BAA4B,aAAa,2GAA2G,gEAAgE,aAAa,UAAU,8CAA8C,qCAAqC,kBAAkB,eAAe,4CAA4C,6IAA6I,6CAA6C,EAAE,SAAS,qDAAqD,6DAA6D,0DAA0D,4DAA4D,gCAAgC,SAAS,sCAAsC,2DAA2D,oCAAoC,gDAAgD,0CAA0C,iBAAiB,aAAa,EAAE,SAAS,kEAAkE,qDAAqD,2FAA2F,aAAa,EAAE,SAAS,0DAA0D,qDAAqD,mFAAmF,aAAa,EAAE,SAAS,sDAAsD,2BAA2B,iEAAiE,2CAA2C,uDAAuD,sIAAsI,EAAE,aAAa,EAAE,2CAA2C,SAAS,8GAA8G,gCAAgC,0EAA0E,EAAE,SAAS,yKAAyK,4BAA4B,yBAAyB,gCAAgC,4HAA4H,gEAAgE,oGAAoG,6FAA6F,uKAAuK,aAAa,EAAE,sBAAsB,+EAA+E,SAAS,iCAAiC,eAAe,oEAAoE,iGAAiG,6DAA6D,0EAA0E,4RAA4R,0PAA0P,kCAAkC,0BAA0B,kCAAkC,wlBAAwlB,aAAa,EAAE,0EAA0E,yMAAyM,oEAAoE,gEAAgE,6CAA6C,8LAA8L,QAAQ,aAAa,EAAE,SAAS,EAAE,wEAAwE,sFAAsF,SAAS,yEAAyE,2FAA2F,SAAS,iBAAiB,oEAAoE,6FAA6F,8CAA8C,6CAA6C,4EAA4E,4NAA4N,yDAAyD,iBAAiB,cAAc,sCAAsC,qDAAqD,qCAAqC,0CAA0C,0IAA0I,iBAAiB,cAAc,2EAA2E,2CAA2C,gMAAgM,EAAE,aAAa,EAAE,WAAW,EAAE,eAAe,oEAAoE,qFAAqF,iCAAiC,eAAe,oEAAoE,qJAAqJ,mCAAmC,iCAAiC,iCAAiC,iCAAiC,iCAAiC,eAAe,oEAAoE,mGAAmG,+BAA+B,8CAA8C,uDAAuD,+CAA+C,yDAAyD,aAAa,8CAA8C,2BAA2B,2BAA2B,iBAAiB,kHAAkH,+CAA+C,yCAAyC,iBAAiB,0CAA0C,uDAAuD,mDAAmD,qDAAqD,4EAA4E,wDAAwD,6BAA6B,0EAA0E,sDAAsD,6BAA6B,yBAAyB,qBAAqB,EAAE,iBAAiB,aAAa,EAAE,UAAU,mCAAmC,yEAAyE,SAAS,eAAe,oEAAoE,iGAAiG,6fAA6f,SAAS,EAAE,eAAe,oEAAoE,uGAAuG,sDAAsD,qDAAqD,4CAA4C,wFAAwF,0EAA0E,gEAAgE,aAAa,EAAE,yCAAyC,SAAS,EAAE,oEAAoE,oEAAoE,iDAAiD,mUAAmU,aAAa,EAAE,SAAS,6EAA6E,uDAAuD,iDAAiD,wCAAwC,gFAAgF,qEAAqE,8LAA8L,4BAA4B,qFAAqF,wDAAwD,qBAAqB,iBAAiB,EAAE,mFAAmF,8EAA8E,aAAa,EAAE,SAAS,8LAA8L,oEAAoE,yEAAyE,gCAAgC,+FAA+F,uDAAuD,SAAS,OAAO,0CAA0C,4HAA4H,4EAA4E,aAAa,wCAAwC,uCAAuC,yCAAyC,aAAa,8CAA8C,0CAA0C,aAAa,SAAS,iBAAiB,oEAAoE,sGAAsG,4CAA4C,gDAAgD,+DAA+D,uDAAuD,gIAAgI,q9BAAq9B,kHAAkH,6EAA6E,2CAA2C,mCAAmC,6DAA6D,2DAA2D,gEAAgE,iBAAiB,EAAE,qCAAqC,aAAa,0HAA0H,6EAA6E,+CAA+C,sEAAsE,sGAAsG,oGAAoG,aAAa,8FAA8F,kDAAkD,8CAA8C,6CAA6C,mMAAmM,mDAAmD,iBAAiB,iDAAiD,8CAA8C,wCAAwC,qBAAqB,iEAAiE,iEAAiE,iBAAiB,aAAa,iIAAiI,qFAAqF,gEAAgE,8EAA8E,wEAAwE,0CAA0C,0CAA0C,iBAAiB,QAAQ,aAAa,uGAAuG,qDAAqD,mCAAmC,aAAa,6FAA6F,kDAAkD,2HAA2H,+GAA+G,qFAAqF,qFAAqF,qFAAqF,sCAAsC,aAAa,sGAAsG,8CAA8C,kDAAkD,8WAA8W,aAAa,0CAA0C,eAAe,mFAAmF,eAAe,GAAG,wCAAwC,0EAA0E,gCAAgC,gEAAgE,yCAAyC,qDAAqD,0FAA0F,8FAA8F,qBAAqB,cAAc,mCAAmC,iDAAiD,EAAE,iBAAiB,QAAQ,gCAAgC,aAAa,gHAAgH,qFAAqF,2FAA2F,+BAA+B,uDAAuD,gCAAgC,0HAA0H,EAAE,iBAAiB,iGAAiG,6BAA6B,wCAAwC,wCAAwC,wBAAwB,2DAA2D,UAAU,uIAAuI,2DAA2D,qBAAqB,iBAAiB,mCAAmC,aAAa,qBAAqB,wMAAwM,oDAAoD,iBAAiB,mCAAmC,aAAa,UAAU,iFAAiF,iFAAiF,iGAAiG,sCAAsC,yBAAyB,2DAA2D,qBAAqB,iBAAiB,8CAA8C,0BAA0B,wPAAwP,aAAa,WAAW,EAAE,+EAA+E,kDAAkD,0CAA0C,aAAa,4QAA4Q,+DAA+D,wCAAwC,gCAAgC,2BAA2B,qCAAqC,OAAO,uCAAuC,8BAA8B,aAAa,2CAA2C,gCAAgC,SAAS,2CAA2C,eAAe,oEAAoE,yGAAyG,4CAA4C,yCAAyC,qDAAqD,qDAAqD,sDAAsD,gDAAgD,+CAA+C,kDAAkD,gDAAgD,qCAAqC,+BAA+B,iCAAiC,6CAA6C,+BAA+B,gEAAgE,6DAA6D,sIAAsI,eAAe,+HAA+H,eAAe,4PAA4P,eAAe,2HAA2H,cAAc,wCAAwC,8BAA8B,sFAAsF,shCAAshC,OAAO,2IAA2I,OAAO,w8BAAw8B,qEAAqE,aAAa,qHAAqH,0EAA0E,eAAe,oDAAoD,4GAA4G,gHAAgH,wGAAwG,6GAA6G,eAAe,iDAAiD,6DAA6D,aAAa,mHAAmH,6CAA6C,6KAA6K,gDAAgD,iBAAiB,sJAAsJ,mEAAmE,uCAAuC,8CAA8C,aAAa,sHAAsH,+CAA+C,mFAAmF,8KAA8K,oKAAoK,aAAa,wGAAwG,6CAA6C,oEAAoE,qIAAqI,2FAA2F,uDAAuD,iBAAiB,EAAE,aAAa,mHAAmH,6EAA6E,uFAAuF,iBAAiB,QAAQ,aAAa,2GAA2G,+BAA+B,wDAAwD,yDAAyD,iBAAiB,EAAE,0BAA0B,aAAa,sFAAsF,2FAA2F,yFAAyF,iGAAiG,yFAAyF,gEAAgE,sBAAsB,oEAAoE,QAAQ,+EAA+E,eAAe,8EAA8E,OAAO,+GAA+G,yCAAyC,iDAAiD,+CAA+C,iDAAiD,6BAA6B,8BAA8B,wDAAwD,8CAA8C,0CAA0C,oCAAoC,iBAAiB,gOAAgO,mDAAmD,uEAAuE,MAAM,0EAA0E,OAAO,wCAAwC,iBAAiB,wDAAwD,qIAAqI,iBAAiB,iCAAiC,oDAAoD,mEAAmE,qBAAqB,yDAAyD,mEAAmE,qBAAqB,0BAA0B,mEAAmE,qBAAqB,iBAAiB,sBAAsB,sFAAsF,iBAAiB,yCAAyC,+MAA+M,iBAAiB,aAAa,gGAAgG,6CAA6C,yRAAyR,4CAA4C,aAAa,+DAA+D,yBAAyB,6BAA6B,OAAO,8JAA8J,mDAAmD,+FAA+F,aAAa,mHAAmH,gDAAgD,aAAa,yGAAyG,6CAA6C,4BAA4B,gEAAgE,2EAA2E,EAAE,qFAAqF,EAAE,6CAA6C,kEAAkE,wEAAwE,oDAAoD,sDAAsD,6EAA6E,gFAAgF,0DAA0D,iDAAiD,kZAAkZ,YAAY,mKAAmK,wCAAwC,2CAA2C,qBAAqB,seAAse,YAAY,qDAAqD,sBAAsB,kDAAkD,kBAAkB,oFAAoF,qDAAqD,4DAA4D,2FAA2F,uCAAuC,iDAAiD,+DAA+D,6BAA6B,kCAAkC,4GAA4G,6BAA6B,yBAAyB,qBAAqB,QAAQ,iBAAiB,4EAA4E,oDAAoD,sDAAsD,mDAAmD,2DAA2D,0EAA0E,yEAAyE,uCAAuC,6BAA6B,+FAA+F,iDAAiD,6DAA6D,+cAA+c,+DAA+D,iCAAiC,6BAA6B,yBAAyB,EAAE,qBAAqB,iBAAiB,2DAA2D,gEAAgE,+DAA+D,SAAS,oEAAoE,mEAAmE,aAAa,kEAAkE,6DAA6D,uDAAuD,wDAAwD,mLAAmL,2DAA2D,iHAAiH,yBAAyB,oIAAoI,oMAAoM,yBAAyB,yDAAyD,6NAA6N,yBAAyB,0IAA0I,qGAAqG,yBAAyB,EAAE,6GAA6G,mDAAmD,gDAAgD,qJAAqJ,6DAA6D,6BAA6B,EAAE,yFAAyF,0FAA0F,6BAA6B,EAAE,yBAAyB,uBAAuB,QAAQ,iBAAiB,aAAa,kGAAkG,+JAA+J,aAAa,4FAA4F,gDAAgD,aAAa,mMAAmM,2BAA2B,mCAAmC,OAAO,kCAAkC,OAAO,wWAAwW,SAAS,yHAAyH,OAAO,kDAAkD,mBAAmB,0IAA0I,EAAE,0CAA0C,eAAe,oEAAoE,4FAA4F,+BAA+B,+GAA+G,6FAA6F,wBAAwB,8IAA8I,aAAa,YAAY,+BAA+B,sBAAsB,uGAAuG,0BAA0B,8EAA8E,iCAAiC,8EAA8E,gCAAgC,gFAAgF,4BAA4B,8EAA8E,yBAAyB,8EAA8E,wBAAwB,0GAA0G,4BAA4B,8EAA8E,UAAU,yCAAyC,iBAAiB,oEAAoE,6DAA6D,8CAA8C,4CAA4C,gDAAgD,kDAAkD,qDAAqD,8CAA8C,+CAA+C,gDAAgD,+CAA+C,+BAA+B,+BAA+B,+BAA+B,6DAA6D,+BAA+B,gcAAgc,kIAAkI,qEAAqE,qGAAqG,2GAA2G,yGAAyG,gGAAgG,mGAAmG,mHAAmH,kGAAkG,kGAAkG,aAAa,0JAA0J,kGAAkG,sCAAsC,iBAAiB,aAAa,6FAA6F,uCAAuC,2DAA2D,2CAA2C,8DAA8D,mEAAmE,wCAAwC,6CAA6C,iEAAiE,kEAAkE,kEAAkE,oGAAoG,mLAAmL,wEAAwE,kDAAkD,kDAAkD,gDAAgD,aAAa,iIAAiI,qCAAqC,2BAA2B,iBAAiB,mJAAmJ,qDAAqD,2DAA2D,4DAA4D,uDAAuD,uDAAuD,+PAA+P,sJAAsJ,0CAA0C,wEAAwE,mDAAmD,4BAA4B,gaAAga,iBAAiB,GAAG,aAAa,wGAAwG,yDAAyD,0CAA0C,uDAAuD,0CAA0C,gDAAgD,wFAAwF,iFAAiF,0FAA0F,gSAAgS,gFAAgF,wEAAwE,2DAA2D,6CAA6C,6CAA6C,kDAAkD,6FAA6F,2FAA2F,iBAAiB,8EAA8E,4CAA4C,aAAa,iJAAiJ,sFAAsF,uFAAuF,oNAAoN,sDAAsD,0CAA0C,4YAA4Y,oDAAoD,sHAAsH,mIAAmI,qBAAqB,sEAAsE,wLAAwL,iBAAiB,EAAE,4CAA4C,iYAAiY,4CAA4C,+DAA+D,yEAAyE,+DAA+D,aAAa,uIAAuI,gEAAgE,oDAAoD,gCAAgC,8BAA8B,EAAE,wCAAwC,0EAA0E,uDAAuD,iGAAiG,wLAAwL,iBAAiB,EAAE,+CAA+C,oKAAoK,4CAA4C,6CAA6C,uDAAuD,iEAAiE,aAAa,wHAAwH,uCAAuC,2BAA2B,iBAAiB,0CAA0C,+BAA+B,yJAAyJ,iEAAiE,kKAAkK,iBAAiB,uIAAuI,mEAAmE,oOAAoO,EAAE,iBAAiB,8BAA8B,sEAAsE,iBAAiB,qEAAqE,oFAAoF,iBAAiB,aAAa,iGAAiG,yDAAyD,uFAAuF,4DAA4D,iEAAiE,iNAAiN,aAAa,gEAAgE,gBAAgB,mDAAmD,OAAO,0BAA0B,OAAO,8EAA8E,mCAAmC,yDAAyD,kDAAkD,iEAAiE,oOAAoO,8DAA8D,qPAAqP,aAAa,uGAAuG,yDAAyD,4DAA4D,0CAA0C,6EAA6E,4FAA4F,8JAA8J,6JAA6J,+DAA+D,gIAAgI,kEAAkE,gEAAgE,sIAAsI,qEAAqE,uEAAuE,aAAa,mJAAmJ,4BAA4B,4GAA4G,6EAA6E,0NAA0N,+EAA+E,0BAA0B,uSAAuS,aAAa,uHAAuH,qOAAqO,wDAAwD,8EAA8E,mCAAmC,kIAAkI,EAAE,iCAAiC,kBAAkB,OAAO,+DAA+D,sDAAsD,8BAA8B,qBAAqB,qCAAqC,uJAAuJ,EAAE,iBAAiB,mCAAmC,kIAAkI,EAAE,oCAAoC,aAAa,0HAA0H,4DAA4D,iRAAiR,aAAa,2GAA2G,0CAA0C,iEAAiE,2HAA2H,wEAAwE,iFAAiF,yEAAyE,gFAAgF,iDAAiD,uBAAuB,+CAA+C,kBAAkB,aAAa,yHAAyH,uCAAuC,2BAA2B,iBAAiB,4CAA4C,yDAAyD,uDAAuD,uDAAuD,uDAAuD,gEAAgE,0FAA0F,sEAAsE,0QAA0Q,wDAAwD,6hBAA6hB,EAAE,iBAAiB,QAAQ,aAAa,gEAAgE,OAAO,mCAAmC,OAAO,iCAAiC,OAAO,qCAAqC,OAAO,kIAAkI,yDAAyD,4DAA4D,uDAAuD,kDAAkD,+EAA+E,4CAA4C,iDAAiD,iCAAiC,2BAA2B,iBAAiB,8CAA8C,mDAAmD,4JAA4J,8BAA8B,6BAA6B,iFAAiF,kDAAkD,yOAAyO,6DAA6D,wDAAwD,0EAA0E,0CAA0C,yCAAyC,2VAA2V,EAAE,aAAa,2GAA2G,gCAAgC,0FAA0F,8CAA8C,gDAAgD,wEAAwE,kLAAkL,gOAAgO,iMAAiM,yBAAyB,qBAAqB,oDAAoD,oMAAoM,0EAA0E,qBAAqB,EAAE,aAAa,6GAA6G,0CAA0C,6DAA6D,iFAAiF,iEAAiE,iBAAiB,sBAAsB,qDAAqD,iBAAiB,aAAa,4HAA4H,yDAAyD,uDAAuD,yDAAyD,2BAA2B,iBAAiB,oDAAoD,4DAA4D,gMAAgM,uGAAuG,gGAAgG,qFAAqF,yMAAyM,qPAAqP,4EAA4E,4KAA4K,sDAAsD,iGAAiG,qBAAqB,0DAA0D,iGAAiG,qBAAqB,0BAA0B,+FAA+F,qBAAqB,iBAAiB,kgBAAkgB,kCAAkC,yEAAyE,6GAA6G,iBAAiB,oFAAoF,8FAA8F,+FAA+F,aAAa,iHAAiH,kCAAkC,yDAAyD,oDAAoD,2BAA2B,iBAAiB,gFAAgF,kEAAkE,2BAA2B,iBAAiB,4DAA4D,mFAAmF,8DAA8D,sCAAsC,sDAAsD,iBAAiB,aAAa,iGAAiG,0CAA0C,6EAA6E,uFAAuF,aAAa,0GAA0G,sCAAsC,2DAA2D,uFAAuF,qCAAqC,aAAa,4GAA4G,sCAAsC,4CAA4C,wEAAwE,wDAAwD,aAAa,kIAAkI,0FAA0F,mKAAmK,aAAa,+GAA+G,kEAAkE,gFAAgF,EAAE,aAAa,2FAA2F,iDAAiD,+CAA+C,aAAa,0FAA0F,iDAAiD,+CAA+C,aAAa,WAAW,EAAE,sEAAsE,wCAAwC,wBAAwB,eAAe,+IAA+I,2HAA2H,iBAAiB,kDAAkD,EAAE,SAAS,8DAA8D,oKAAoK,SAAS,sFAAsF,uXAAuX,SAAS,iFAAiF,wDAAwD,4EAA4E,oCAAoC,mGAAmG,aAAa,qCAAqC,SAAS,yDAAyD,8FAA8F,SAAS,0CAA0C,eAAe,oEAAoE,oDAAoD,8CAA8C,gDAAgD,6CAA6C,6CAA6C,qDAAqD,wDAAwD,+FAA+F,OAAO,gDAAgD,qCAAqC,8CAA8C,yEAAyE,4BAA4B,0DAA0D,2EAA2E,4BAA4B,kDAAkD,2EAA2E,kDAAkD,uDAAuD,aAAa,gIAAgI,qDAAqD,6DAA6D,2CAA2C,2BAA2B,iBAAiB,uDAAuD,aAAa,0GAA0G,yDAAyD,+FAA+F,mDAAmD,8CAA8C,oIAAoI,4PAA4P,6BAA6B,+NAA+N,iBAAiB,GAAG,aAAa,kEAAkE,OAAO,gEAAgE,QAAQ,yFAAyF,OAAO,8BAA8B,QAAQ,+FAA+F,QAAQ,oGAAoG,EAAE,2GAA2G,kCAAkC,mDAAmD,yDAAyD,mCAAmC,qFAAqF,wEAAwE,iBAAiB,gDAAgD,0EAA0E,mDAAmD,iBAAiB,wCAAwC,0CAA0C,iBAAiB,+CAA+C,2CAA2C,iBAAiB,+JAA+J,6EAA6E,4DAA4D,uDAAuD,2EAA2E,4CAA4C,mEAAmE,qBAAqB,uEAAuE,oJAAoJ,qBAAqB,iBAAiB,EAAE,kDAAkD,aAAa,uGAAuG,gDAAgD,mCAAmC,uIAAuI,+CAA+C,kBAAkB,aAAa,8HAA8H,EAAE,eAAe,oEAAoE,oDAAoD,6CAA6C,wBAAwB,wCAAwC,kDAAkD,wCAAwC,4BAA4B,2BAA2B,eAAe,sDAAsD,OAAO,0HAA0H,wDAAwD,kDAAkD,kEAAkE,qCAAqC,iBAAiB,uEAAuE,gDAAgD,4EAA4E,mJAAmJ,iDAAiD,8CAA8C,uCAAuC,+BAA+B,OAAO,OAAO,4EAA4E,0FAA0F,iBAAiB,kFAAkF,0FAA0F,qMAAqM,aAAa,4NAA4N,+DAA+D,kDAAkD,gEAAgE,+CAA+C,qBAAqB,iBAAiB,EAAE,6BAA6B,aAAa,YAAY,oCAAoC,eAAe,oEAAoE,+FAA+F,4BAA4B,kKAAkK,0EAA0E,qCAAqC,sCAAsC,oBAAoB,oDAAoD,aAAa,EAAE,WAAW,EAAE,eAAe,oEAAoE,qJAAqJ,mCAAmC,iCAAiC,iCAAiC,iCAAiC,iCAAiC,eAAe,oEAAoE,8DAA8D,4CAA4C,qDAAqD,qDAAqD,qEAAqE,sDAAsD,y3BAAy3B,qKAAqK,qBAAqB,iEAAiE,8BAA8B,+6BAA+6B,+LAA+L,8qCAA8qC,kHAAkH,4EAA4E,kGAAkG,uCAAuC,2DAA2D,eAAe,wDAAwD,2CAA2C,mCAAmC,uGAAuG,OAAO,iFAAiF,sDAAsD,yDAAyD,0DAA0D,oEAAoE,gDAAgD,iEAAiE,4EAA4E,qBAAqB,0BAA0B,oEAAoE,kEAAkE,gGAAgG,4DAA4D,sDAAsD,kLAAkL,6BAA6B,yCAAyC,yBAAyB,EAAE,qBAAqB,iBAAiB,EAAE,aAAa,iIAAiI,qEAAqE,kCAAkC,wBAAwB,GAAG,uBAAuB,qBAAqB,gTAAgT,6CAA6C,kEAAkE,mDAAmD,+DAA+D,oEAAoE,+DAA+D,gEAAgE,yBAAyB,qBAAqB,EAAE,iBAAiB,EAAE,6EAA6E,mCAAmC,kEAAkE,qIAAqI,qBAAqB,QAAQ,+EAA+E,6DAA6D,4JAA4J,qBAAqB,EAAE,iBAAiB,QAAQ,wDAAwD,+QAA+Q,iBAAiB,uFAAuF,aAAa,6DAA6D,6CAA6C,gDAAgD,4IAA4I,+CAA+C,yHAAyH,4DAA4D,wDAAwD,6CAA6C,qBAAqB,iBAAiB,QAAQ,6DAA6D,gGAAgG,sEAAsE,gEAAgE,4CAA4C,6IAA6I,yBAAyB,qBAAqB,QAAQ,iBAAiB,8FAA8F,wGAAwG,4GAA4G,aAAa,8FAA8F,uCAAuC,aAAa,iEAAiE,OAAO,wDAAwD,yCAAyC,kNAAkN,aAAa,6HAA6H,8DAA8D,aAAa,4HAA4H,iFAAiF,2OAA2O,aAAa,gEAAgE,OAAO,gFAAgF,eAAe,GAAG,wCAAwC,+EAA+E,gCAAgC,gEAAgE,yCAAyC,qDAAqD,0FAA0F,wLAAwL,2EAA2E,qBAAqB,cAAc,mCAAmC,iDAAiD,EAAE,iBAAiB,QAAQ,gCAAgC,aAAa,gEAAgE,OAAO,yEAAyE,OAAO,6FAA6F,mCAAmC,wCAAwC,iDAAiD,iBAAiB,sBAAsB,8CAA8C,qDAAqD,qBAAqB,0BAA0B,iEAAiE,iNAAiN,qBAAqB,iBAAiB,sCAAsC,aAAa,yDAAyD,yHAAyH,2BAA2B,iBAAiB,iCAAiC,qCAAqC,0CAA0C,0DAA0D,2EAA2E,mBAAmB,EAAE,sCAAsC,kFAAkF,qBAAqB,2EAA2E,oDAAoD,+CAA+C,qBAAqB,wDAAwD,+CAA+C,qBAAqB,0BAA0B,gEAAgE,iCAAiC,8BAA8B,iCAAiC,0BAA0B,qBAAqB,iBAAiB,sFAAsF,wCAAwC,oCAAoC,gCAAgC,EAAE,iBAAiB,sBAAsB,wDAAwD,6DAA6D,4BAA4B,EAAE,uEAAuE,yDAAyD,2BAA2B,EAAE,iBAAiB,uCAAuC,yDAAyD,kDAAkD,mCAAmC,gIAAgI,kDAAkD,2CAA2C,qBAAqB,iBAAiB,QAAQ,0BAA0B,wCAAwC,aAAa,WAAW,EAAE,2DAA2D,OAAO,kBAAkB,iDAAiD,uCAAuC,wCAAwC,6CAA6C,gDAAgD,qDAAqD,kDAAkD,yDAAyD,qEAAqE,qDAAqD,gFAAgF,gIAAgI,gCAAgC,iBAAiB,iDAAiD,0DAA0D,gCAAgC,2CAA2C,oCAAoC,8JAA8J,EAAE,iBAAiB,+FAA+F,gCAAgC,wDAAwD,6FAA6F,sCAAsC,+IAA+I,EAAE,iBAAiB,2CAA2C,oCAAoC,6JAA6J,EAAE,iBAAiB,6CAA6C,2DAA2D,sEAAsE,iBAAiB,QAAQ,aAAa,wCAAwC,6CAA6C,oEAAoE,yJAAyJ,uHAAuH,EAAE,iBAAiB,QAAQ,sGAAsG,aAAa,oCAAoC,6CAA6C,gDAAgD,kFAAkF,4DAA4D,yCAAyC,sBAAsB,qBAAqB,kCAAkC,wBAAwB,wDAAwD,wDAAwD,qBAAqB,kEAAkE,qEAAqE,uDAAuD,4CAA4C,qBAAqB,0BAA0B,kLAAkL,wDAAwD,oDAAoD,iEAAiE,6CAA6C,wCAAwC,QAAQ,QAAQ,yFAAyF,2CAA2C,+BAA+B,OAAO,uEAAuE,yDAAyD,wDAAwD,6BAA6B,sFAAsF,yBAAyB,mFAAmF,oFAAoF,qCAAqC,4DAA4D,yPAAyP,6BAA6B,yBAAyB,oFAAoF,2CAA2C,yBAAyB,KAAK,GAAG,eAAe,wIAAwI,yBAAyB,qBAAqB,iFAAiF,2CAA2C,mBAAmB,QAAQ,gGAAgG,yEAAyE,2DAA2D,4CAA4C,mFAAmF,sOAAsO,iBAAiB,QAAQ,aAAa,UAAU,4DAA4D,6CAA6C,wEAAwE,qCAAqC,aAAa,SAAS,0CAA0C,aAAa,oEAAoE,6DAA6D,4CAA4C,8CAA8C,sDAAsD,6CAA6C,8CAA8C,6DAA6D,8JAA8J,2CAA2C,wCAAwC,2DAA2D,4DAA4D,mEAAmE,wDAAwD,6DAA6D,qDAAqD,uDAAuD,mDAAmD,iDAAiD,kGAAkG,+IAA+I,wEAAwE,+IAA+I,yIAAyI,mDAAmD,gDAAgD,6CAA6C,2CAA2C,0DAA0D,oFAAoF,mFAAmF,mFAAmF,sJAAsJ,sCAAsC,4FAA4F,0DAA0D,oCAAoC,+fAA+f,yBAAyB,GAAG,qBAAqB,+CAA+C,iBAAiB,aAAa,wHAAwH,0LAA0L,gDAAgD,6DAA6D,kFAAkF,sNAAsN,EAAE,iBAAiB,aAAa,gGAAgG,yDAAyD,wDAAwD,0DAA0D,8IAA8I,iBAAiB,sBAAsB,yGAAyG,qDAAqD,uCAAuC,qBAAqB,iCAAiC,iBAAiB,aAAa,6IAA6I,4BAA4B,2BAA2B,iBAAiB,sDAAsD,wEAAwE,kDAAkD,4BAA4B,obAAob,iBAAiB,GAAG,uCAAuC,aAAa,iEAAiE,OAAO,EAAE,oBAAoB,mGAAmG,yDAAyD,yGAAyG,4BAA4B,4CAA4C,iBAAiB,EAAE,0DAA0D,2GAA2G,4DAA4D,2IAA2I,4CAA4C,iBAAiB,8FAA8F,0DAA0D,iBAAiB,0BAA0B,kDAAkD,aAAa,qIAAqI,oSAAoS,aAAa,oGAAoG,yDAAyD,mDAAmD,6DAA6D,qEAAqE,yDAAyD,4CAA4C,6DAA6D,uDAAuD,qBAAqB,EAAE,iBAAiB,sBAAsB,yDAAyD,iBAAiB,2CAA2C,8LAA8L,EAAE,aAAa,SAAS,EAAE,kDAAkD,eAAe,oEAAoE,mFAAmF,iCAAiC,sEAAsE,uGAAuG,SAAS,EAAE,aAAa,oEAAoE,kEAAkE,8DAA8D,8MAA8M,oDAAoD,yBAAyB,6BAA6B,kGAAkG,gCAAgC,uDAAuD,iBAAiB,6BAA6B,6BAA6B,2DAA2D,iBAAiB,aAAa,SAAS,EAAE,aAAa,oEAAoE,uDAAuD,4CAA4C,yCAAyC,kDAAkD,6CAA6C,+CAA+C,mCAAmC,qHAAqH,SAAS,uEAAuE,uNAAuN,6BAA6B,iDAAiD,8HAA8H,qBAAqB,iBAAiB,2DAA2D,gFAAgF,aAAa,0CAA0C,QAAQ,4DAA4D,+BAA+B,iCAAiC,iBAAiB,qDAAqD,qGAAqG,aAAa,+EAA+E,mDAAmD,4DAA4D,qCAAqC,+DAA+D,yEAAyE,uEAAuE,4DAA4D,8DAA8D,mCAAmC,yBAAyB,2CAA2C,yCAAyC,oIAAoI,6BAA6B,yEAAyE,iIAAiI,uDAAuD,uDAAuD,iCAAiC,sCAAsC,oDAAoD,iCAAiC,6BAA6B,EAAE,kJAAkJ,0DAA0D,yUAAyU,EAAE,qEAAqE,yBAAyB,8BAA8B,8EAA8E,yBAAyB,iEAAiE,qBAAqB,QAAQ,iBAAiB,aAAa,oDAAoD,0CAA0C,wDAAwD,2IAA2I,mDAAmD,iDAAiD,4CAA4C,qCAAqC,iBAAiB,2BAA2B,6CAA6C,wCAAwC,sCAAsC,qBAAqB,iBAAiB,oCAAoC,uDAAuD,iBAAiB,4BAA4B,aAAa,qCAAqC,kCAAkC,aAAa,yCAAyC,kCAAkC,aAAa,SAAS,EAAE,+DAA+D,uCAAuC,aAAa,oEAAoE,0DAA0D,4CAA4C,gDAAgD,6CAA6C,sDAAsD,iEAAiE,wDAAwD,wCAAwC,yDAAyD,0BAA0B,sFAAsF,uFAAuF,iDAAiD,uCAAuC,iBAAiB,sIAAsI,iMAAiM,iBAAiB,oCAAoC,oEAAoE,oEAAoE,yDAAyD,mBAAmB,0EAA0E,mCAAmC,iBAAiB,kCAAkC,mCAAmC,iBAAiB,mDAAmD,aAAa,EAAE,SAAS,2CAA2C,qGAAqG,2DAA2D,6DAA6D,kCAAkC,gFAAgF,sFAAsF,qBAAqB,iBAAiB,QAAQ,aAAa,4EAA4E,4DAA4D,8CAA8C,uDAAuD,0DAA0D,iIAAiI,0EAA0E,kEAAkE,0EAA0E,8CAA8C,6DAA6D,wEAAwE,2DAA2D,2NAA2N,qBAAqB,+CAA+C,qQAAqQ,EAAE,iBAAiB,EAAE,sFAAsF,iDAAiD,+HAA+H,kDAAkD,kDAAkD,qBAAqB,EAAE,iBAAiB,EAAE,2CAA2C,+FAA+F,aAAa,SAAS,EAAE,iDAAiD,uBAAuB,8BAA8B,4BAA4B,+BAA+B,2BAA2B,gFAAgF,+BAA+B,2BAA2B,kGAAkG,oKAAoK,gIAAgI,gCAAgC,iBAAiB,EAAE,aAAa,kBAAkB,kCAAkC,oFAAoF,EAAE,aAAa,6DAA6D,qJAAqJ,2BAA2B,sIAAsI,aAAa,sHAAsH,sCAAsC,iBAAiB,cAAc,0BAA0B,SAAS,eAAe,oEAAoE,oDAAoD,gDAAgD,qCAAqC,kCAAkC,6EAA6E,SAAS,mCAAmC,4EAA4E,SAAS,gEAAgE,+BAA+B,gBAAgB,+MAA+M,sCAAsC,aAAa,cAAc,+BAA+B,SAAS,qJAAqJ,8BAA8B,kEAAkE,mFAAmF,gFAAgF,kFAAkF,2EAA2E,iCAAiC,4FAA4F,aAAa,8BAA8B,SAAS,mCAAmC,qEAAqE,4DAA4D,yBAAyB,4BAA4B,OAAO,mCAAmC,OAAO,sJAAsJ,yBAAyB,4BAA4B,OAAO,mCAAmC,OAAO,wJAAwJ,yBAAyB,4BAA4B,OAAO,mCAAmC,OAAO,2GAA2G,wPAAwP,4BAA4B,gCAAgC,uBAAuB,+BAA+B,OAAO,yBAAyB,OAAO,qEAAqE,6CAA6C,wDAAwD,sXAAsX,+CAA+C,8EAA8E,iLAAiL,sKAAsK,+EAA+E,iFAAiF,4NAA4N,gIAAgI,iBAAiB,sBAAsB,sQAAsQ,8FAA8F,OAAO,OAAO,6DAA6D,oFAAoF,6EAA6E,yBAAyB,qBAAqB,uCAAuC,iBAAiB,aAAa,wBAAwB,UAAU,0EAA0E,yBAAyB,qEAAqE,mIAAmI,kGAAkG,oEAAoE,qFAAqF,aAAa,kBAAkB,yDAAyD,oEAAoE,qFAAqF,uFAAuF,aAAa,yBAAyB,UAAU,iIAAiI,uBAAuB,+BAA+B,OAAO,yBAAyB,QAAQ,+DAA+D,yMAAyM,UAAU,8EAA8E,iEAAiE,0DAA0D,aAAa,8BAA8B,UAAU,kEAAkE,qCAAqC,4BAA4B,8BAA8B,6DAA6D,sCAAsC,mCAAmC,gCAAgC,qBAAqB,iBAAiB,QAAQ,mCAAmC,aAAa,kBAAkB,sFAAsF,aAAa,UAAU,4BAA4B,4MAA4M,aAAa,oEAAoE,oDAAoD,uEAAuE,8DAA8D,qHAAqH,iCAAiC,gFAAgF,aAAa,6DAA6D,yDAAyD,qDAAqD,wCAAwC,iBAAiB,EAAE,2DAA2D,2DAA2D,kEAAkE,6FAA6F,iBAAiB,QAAQ,uDAAuD,kEAAkE,iBAAiB,QAAQ,aAAa,2CAA2C,SAAS,EAAE,aAAa,oEAAoE,yCAAyC,iCAAiC,sEAAsE,oGAAoG,SAAS,EAAE,aAAa,oEAAoE,kEAAkE,6DAA6D,8NAA8N,oDAAoD,yBAAyB,6BAA6B,+FAA+F,gCAAgC,uDAAuD,iBAAiB,6BAA6B,6BAA6B,2DAA2D,gCAAgC,qDAAqD,iBAAiB,uDAAuD,SAAS,EAAE,aAAa,oEAAoE,oDAAoD,2CAA2C,gDAAgD,sDAAsD,kDAAkD,mFAAmF,6CAA6C,oGAAoG,wMAAwM,0DAA0D,kGAAkG,8BAA8B,iCAAiC,0BAA0B,iEAAiE,kEAAkE,+DAA+D,sEAAsE,iBAAiB,sBAAsB,+FAA+F,yDAAyD,mDAAmD,kFAAkF,iBAAiB,8DAA8D,+CAA+C,kDAAkD,8BAA8B,qCAAqC,oCAAoC,gCAAgC,oDAAoD,iDAAiD,2DAA2D,kEAAkE,sDAAsD,iBAAiB,4EAA4E,yCAAyC,0OAA0O,EAAE,aAAa,wLAAwL,wBAAwB,qHAAqH,4GAA4G,2CAA2C,0BAA0B,UAAU,qCAAqC,iDAAiD,SAAS,qHAAqH,6CAA6C,wDAAwD,0NAA0N,SAAS,mDAAmD,kDAAkD,8CAA8C,4CAA4C,8CAA8C,+BAA+B,8BAA8B,WAAW,sBAAsB,oBAAoB,yOAAyO,gCAAgC,iBAAiB,aAAa,2HAA2H,SAAS,yGAAyG,wDAAwD,mDAAmD,wBAAwB,kFAAkF,mFAAmF,6CAA6C,mCAAmC,aAAa,kBAAkB,iIAAiI,6LAA6L,iBAAiB,sBAAsB,mDAAmD,mDAAmD,mDAAmD,yDAAyD,iBAAiB,4IAA4I,8BAA8B,2HAA2H,sBAAsB,sDAAsD,sDAAsD,sDAAsD,mDAAmD,8DAA8D,0FAA0F,qBAAqB,mEAAmE,0FAA0F,qBAAqB,iBAAiB,0EAA0E,mCAAmC,iBAAiB,kCAAkC,mCAAmC,iBAAiB,aAAa,6CAA6C,SAAS,2CAA2C,mGAAmG,2DAA2D,4DAA4D,kCAAkC,uDAAuD,sDAAsD,kDAAkD,sIAAsI,+FAA+F,8FAA8F,yBAAyB,EAAE,oGAAoG,2MAA2M,yBAAyB,EAAE,iFAAiF,uBAAuB,iBAAiB,QAAQ,aAAa,4EAA4E,4DAA4D,8CAA8C,uDAAuD,wDAAwD,yHAAyH,+CAA+C,0EAA0E,6CAA6C,uCAAuC,2CAA2C,4CAA4C,sCAAsC,gGAAgG,yDAAyD,2DAA2D,kDAAkD,0DAA0D,iBAAiB,qDAAqD,0DAA0D,iBAAiB,2HAA2H,mEAAmE,kEAAkE,iBAAiB,EAAE,mGAAmG,6FAA6F,iDAAiD,qGAAqG,EAAE,6KAA6K,mDAAmD,4UAA4U,EAAE,iBAAiB,EAAE,gDAAgD,yIAAyI,kDAAkD,kDAAkD,qBAAqB,EAAE,iBAAiB,EAAE,yEAAyE,2DAA2D,mIAAmI,+CAA+C,sTAAsT,EAAE,iBAAiB,yCAAyC,6FAA6F,aAAa,SAAS,EAAE,iDAAiD,uBAAuB,4BAA4B,4BAA4B,+BAA+B,2BAA2B,gFAAgF,iCAAiC,2BAA2B,kGAAkG,oKAAoK,gIAAgI,gCAAgC,iBAAiB,EAAE,aAAa,kBAAkB,kCAAkC,oFAAoF,EAAE,aAAa,+DAA+D,2DAA2D,6EAA6E,yJAAyJ,2BAA2B,6HAA6H,aAAa,2FAA2F,kCAAkC,cAAc,mFAAmF,gBAAgB,EAAE,oDAAoD,iFAAiF,gBAAgB,EAAE,oDAAoD,mFAAmF,gBAAgB,EAAE,eAAe,0CAA0C,oBAAoB,sGAAsG,SAAS,aAAa,oEAAoE,yCAAyC,iCAAiC,sEAAsE,oGAAoG,SAAS,EAAE,aAAa,oEAAoE,kEAAkE,6DAA6D,mGAAmG,oDAAoD,2HAA2H,6BAA6B,+FAA+F,gCAAgC,+FAA+F,iBAAiB,6BAA6B,6BAA6B,kOAAkO,iBAAiB,aAAa,SAAS,EAAE,aAAa,oEAAoE,6EAA6E,2CAA2C,gDAAgD,8CAA8C,gDAAgD,sDAAsD,mFAAmF,sEAAsE,sEAAsE,2CAA2C,sFAAsF,mCAAmC,yDAAyD,yDAAyD,0DAA0D,wDAAwD,kFAAkF,WAAW,8EAA8E,6BAA6B,6BAA6B,6BAA6B,6BAA6B,0BAA0B,UAAU,qCAAqC,iDAAiD,SAAS,qHAAqH,6CAA6C,gGAAgG,SAAS,mDAAmD,0CAA0C,wCAAwC,kDAAkD,8CAA8C,+BAA+B,8BAA8B,WAAW,sBAAsB,oBAAoB,yOAAyO,gCAAgC,iBAAiB,aAAa,sDAAsD,mHAAmH,uDAAuD,iHAAiH,EAAE,SAAS,4JAA4J,wDAAwD,mDAAmD,wBAAwB,sFAAsF,uFAAuF,6CAA6C,mCAAmC,aAAa,kBAAkB,iIAAiI,kLAAkL,iBAAiB,sBAAsB,mDAAmD,mDAAmD,+DAA+D,iBAAiB,sDAAsD,sDAAsD,sDAAsD,mDAAmD,mDAAmD,yCAAyC,oGAAoG,qBAAqB,8CAA8C,oGAAoG,qBAAqB,iBAAiB,0EAA0E,mCAAmC,iBAAiB,kCAAkC,mCAAmC,iBAAiB,aAAa,2BAA2B,SAAS,yFAAyF,2CAA2C,mGAAmG,2DAA2D,4DAA4D,kCAAkC,yDAAyD,sDAAsD,qFAAqF,qGAAqG,6BAA6B,EAAE,qGAAqG,oEAAoE,0DAA0D,yBAAyB,EAAE,qBAAqB,iBAAiB,QAAQ,aAAa,4EAA4E,4DAA4D,kDAAkD,uDAAuD,yDAAyD,oHAAoH,2BAA2B,EAAE,qDAAqD,2CAA2C,4EAA4E,kGAAkG,mGAAmG,yHAAyH,6FAA6F,qBAAqB,GAAG,gFAAgF,iFAAiF,EAAE,iBAAiB,EAAE,+FAA+F,2DAA2D,oCAAoC,gGAAgG,yBAAyB,EAAE,gEAAgE,wDAAwD,qBAAqB,wDAAwD,mFAAmF,sDAAsD,oCAAoC,mGAAmG,yBAAyB,mBAAmB,wDAAwD,mEAAmE,qBAAqB,6CAA6C,gFAAgF,2DAA2D,qBAAqB,gCAAgC,sEAAsE,+DAA+D,wEAAwE,+EAA+E,qEAAqE,4LAA4L,kJAAkJ,+CAA+C,iGAAiG,qEAAqE,gEAAgE,0DAA0D,8EAA8E,oMAAoM,qBAAqB,0BAA0B,gDAAgD,qBAAqB,+DAA+D,wFAAwF,2MAA2M,qBAAqB,0BAA0B,qDAAqD,qBAAqB,uDAAuD,EAAE,kDAAkD,iBAAiB,EAAE,iDAAiD,iGAAiG,aAAa,SAAS,EAAE,iDAAiD,uBAAuB,4BAA4B,4BAA4B,+BAA+B,2BAA2B,gFAAgF,iCAAiC,yBAAyB,gDAAgD,2BAA2B,kGAAkG,oKAAoK,gIAAgI,gCAAgC,iBAAiB,EAAE,0EAA0E,4BAA4B,kHAAkH,iBAAiB,YAAY,aAAa,kBAAkB,kCAAkC,oFAAoF,EAAE,6DAA6D,aAAa,yJAAyJ,2BAA2B,6HAA6H,aAAa,6FAA6F,0EAA0E,aAAa,oBAAoB,kCAAkC,cAAc,6DAA6D,0CAA0C,4BAA4B,SAAS,aAAa,oEAAoE,gGAAgG,iEAAiE,mCAAmC,iCAAiC,iCAAiC,iCAAiC,eAAe,oEAAoE,kGAAkG,8CAA8C,wDAAwD,iDAAiD,+DAA+D,aAAa,uDAAuD,2BAA2B,2BAA2B,iBAAiB,qCAAqC,aAAa,EAAE,UAAU,uCAAuC,gCAAgC,8BAA8B,mCAAmC,qEAAqE,8CAA8C,gCAAgC,aAAa,gCAAgC,gDAAgD,6EAA6E,EAAE,qDAAqD,gEAAgE,iBAAiB,qFAAqF,8CAA8C,iDAAiD,iBAAiB,2CAA2C,aAAa,+DAA+D,6EAA6E,2EAA2E,8GAA8G,qBAAqB,2CAA2C,iBAAiB,aAAa,EAAE,SAAS,sCAAsC,gEAAgE,EAAE,oFAAoF,EAAE,wFAAwF,EAAE,gEAAgE,EAAE,oCAAoC,wBAAwB,yDAAyD,yEAAyE,8CAA8C,iBAAiB,aAAa,EAAE,uEAAuE,yDAAyD,+CAA+C,aAAa,SAAS,mCAAmC,4CAA4C,SAAS,eAAe,oEAAoE,0FAA0F,2DAA2D,SAAS,EAAE,eAAe,oEAAoE,6FAA6F,4CAA4C,gDAAgD,6EAA6E,4CAA4C,uEAAuE,oEAAoE,wEAAwE,2FAA2F,0DAA0D,qBAAqB,iBAAiB,4GAA4G,0CAA0C,oFAAoF,WAAW,aAAa,UAAU,gDAAgD,2EAA2E,4CAA4C,qEAAqE,iEAAiE,kEAAkE,iBAAiB,aAAa,UAAU,eAAe,oEAAoE,2GAA2G,4CAA4C,+CAA+C,0DAA0D,2HAA2H,sUAAsU,0JAA0J,sGAAsG,iHAAiH,yBAAyB,+YAA+Y,6LAA6L,kHAAkH,qBAAqB,gCAAgC,uEAAuE,kHAAkH,qBAAqB,iBAAiB,6BAA6B,6BAA6B,oGAAoG,gCAAgC,6DAA6D,iBAAiB,qCAAqC,2VAA2V,kCAAkC,04DAA04D,mJAAmJ,gCAAgC,mJAAmJ,iBAAiB,sCAAsC,WAAW,EAAE,uEAAuE,+CAA+C,aAAa,oEAAoE,oGAAoG,2CAA2C,4CAA4C,+CAA+C,qDAAqD,oJAAoJ,yvBAAyvB,8BAA8B,iCAAiC,iBAAiB,yBAAyB,6BAA6B,oCAAoC,kEAAkE,qBAAqB,iCAAiC,iBAAiB,wCAAwC,oHAAoH,0EAA0E,yBAAyB,8CAA8C,0EAA0E,eAAe,+CAA+C,6DAA6D,iCAAiC,aAAa,qGAAqG,yEAAyE,iCAAiC,aAAa,yCAAyC,OAAO,oFAAoF,2CAA2C,4DAA4D,iBAAiB,+CAA+C,yCAAyC,0EAA0E,iBAAiB,sBAAsB,wEAAwE,2DAA2D,iBAAiB,0DAA0D,aAAa,0CAA0C,OAAO,sEAAsE,gDAAgD,aAAa,0CAA0C,QAAQ,oDAAoD,wEAAwE,aAAa,yCAAyC,QAAQ,yFAAyF,+CAA+C,aAAa,0CAA0C,QAAQ,8EAA8E,8CAA8C,aAAa,4FAA4F,6CAA6C,oDAAoD,mDAAmD,6CAA6C,gDAAgD,oCAAoC,iEAAiE,qEAAqE,oCAAoC,sDAAsD,yDAAyD,kDAAkD,yBAAyB,8BAA8B,4CAA4C,yBAAyB,+CAA+C,2FAA2F,uCAAuC,yBAAyB,iDAAiD,qBAAqB,EAAE,qCAAqC,iBAAiB,kCAAkC,kCAAkC,wBAAwB,qDAAqD,6BAA6B,SAAS,gDAAgD,aAAa,qCAAqC,kCAAkC,aAAa,gEAAgE,eAAe,kEAAkE,0DAA0D,+CAA+C,iBAAiB,aAAa,WAAW,EAAE,yCAAyC,aAAa,oEAAoE,iGAAiG,8CAA8C,6CAA6C,oDAAoD,oDAAoD,kDAAkD,kDAAkD,kDAAkD,6CAA6C,gDAAgD,gDAAgD,+CAA+C,iCAAiC,+BAA+B,2BAA2B,gDAAgD,mFAAmF,iCAAiC,0EAA0E,+CAA+C,8CAA8C,0EAA0E,iCAAiC,kDAAkD,+CAA+C,OAAO,+CAA+C,+CAA+C,uBAAuB,wDAAwD,+CAA+C,+BAA+B,mDAAmD,+CAA+C,+BAA+B,oDAAoD,aAAa,8HAA8H,2CAA2C,+BAA+B,uCAAuC,yCAAyC,wDAAwD,wEAAwE,mEAAmE,qEAAqE,sFAAsF,+CAA+C,+GAA+G,0EAA0E,0EAA0E,sBAAsB,kJAAkJ,+FAA+F,yBAAyB,mDAAmD,yFAAyF,8DAA8D,iBAAiB,qCAAqC,aAAa,0FAA0F,mCAAmC,uCAAuC,aAAa,2FAA2F,mCAAmC,aAAa,uDAAuD,6EAA6E,yDAAyD,+DAA+D,yGAAyG,wPAAwP,iBAAiB,8CAA8C,oCAAoC,qCAAqC,sBAAsB,oCAAoC,sBAAsB,qBAAqB,uBAAuB,iBAAiB,uCAAuC,qJAAqJ,0CAA0C,qJAAqJ,mCAAmC,wFAAwF,uHAAuH,4EAA4E,2DAA2D,iFAAiF,+EAA+E,2DAA2D,4HAA4H,yDAAyD,iDAAiD,oCAAoC,oCAAoC,+BAA+B,yEAAyE,iEAAiE,uFAAuF,uFAAuF,uFAAuF,8BAA8B,wCAAwC,uJAAuJ,iFAAiF,wFAAwF,wGAAwG,iBAAiB,sBAAsB,sHAAsH,oFAAoF,wGAAwG,iBAAiB,6CAA6C,qDAAqD,yCAAyC,iBAAiB,0BAA0B,i0BAAi0B,aAAa,gEAAgE,8bAA8b,kDAAkD,qDAAqD,uDAAuD,6HAA6H,mDAAmD,qEAAqE,6EAA6E,iDAAiD,2EAA2E,gDAAgD,+CAA+C,iBAAiB,qDAAqD,sEAAsE,wEAAwE,wDAAwD,yDAAyD,wEAAwE,2DAA2D,2CAA2C,iFAAiF,iFAAiF,wFAAwF,iBAAiB,sBAAsB,gEAAgE,iFAAiF,sEAAsE,iBAAiB,2DAA2D,4DAA4D,+EAA+E,uCAAuC,sCAAsC,mDAAmD,mDAAmD,iKAAiK,iBAAiB,2CAA2C,iNAAiN,iBAAiB,yEAAyE,qFAAqF,iBAAiB,aAAa,kEAAkE,mDAAmD,6DAA6D,qFAAqF,6DAA6D,8DAA8D,kDAAkD,kCAAkC,+FAA+F,2CAA2C,8BAA8B,aAAa,wDAAwD,gDAAgD,sEAAsE,qCAAqC,qBAAqB,EAAE,kBAAkB,sDAAsD,8EAA8E,kBAAkB,aAAa,8CAA8C,sEAAsE,yCAAyC,gCAAgC,aAAa,mFAAmF,kDAAkD,6DAA6D,2BAA2B,iBAAiB,8CAA8C,4BAA4B,sHAAsH,mEAAmE,iBAAiB,4KAA4K,GAAG,aAAa,wIAAwI,mDAAmD,kDAAkD,2DAA2D,8DAA8D,iEAAiE,gFAAgF,mFAAmF,qCAAqC,mJAAmJ,qFAAqF,8EAA8E,qDAAqD,iDAAiD,qDAAqD,qBAAqB,0BAA0B,2DAA2D,qBAAqB,mBAAmB,QAAQ,aAAa,yIAAyI,wEAAwE,gDAAgD,2BAA2B,iBAAiB,qDAAqD,kDAAkD,kIAAkI,4DAA4D,0DAA0D,wEAAwE,+BAA+B,qBAAqB,mEAAmE,0FAA0F,6FAA6F,2DAA2D,mDAAmD,gCAAgC,wVAAwV,0QAA0Q,EAAE,wCAAwC,sFAAsF,mBAAmB,QAAQ,aAAa,uIAAuI,yDAAyD,mDAAmD,+FAA+F,gGAAgG,2EAA2E,6DAA6D,iEAAiE,gNAAgN,8MAA8M,4PAA4P,6EAA6E,oCAAoC,+BAA+B,qBAAqB,+BAA+B,4SAA4S,2EAA2E,mCAAmC,2DAA2D,iBAAiB,aAAa,yFAAyF,mDAAmD,mEAAmE,+FAA+F,8BAA8B,kCAAkC,kDAAkD,iDAAiD,wEAAwE,+EAA+E,wFAAwF,qBAAqB,mDAAmD,kFAAkF,qBAAqB,kBAAkB,oLAAoL,kDAAkD,aAAa,uDAAuD,mCAAmC,yCAAyC,2IAA2I,EAAE,aAAa,yDAAyD,mCAAmC,oEAAoE,aAAa,oDAAoD,0EAA0E,aAAa,qEAAqE,6DAA6D,wCAAwC,0EAA0E,uEAAuE,qEAAqE,6DAA6D,6CAA6C,uEAAuE,+CAA+C,iLAAiL,0DAA0D,iBAAiB,aAAa,yCAAyC,mCAAmC,kDAAkD,yKAAyK,iBAAiB,0CAA0C,sFAAsF,4LAA4L,iBAAiB,aAAa,gDAAgD,gEAAgE,mEAAmE,aAAa,uDAAuD,gDAAgD,oCAAoC,oCAAoC,sCAAsC,oEAAoE,wDAAwD,wDAAwD,mCAAmC,iCAAiC,oDAAoD,qBAAqB,iBAAiB,EAAE,yCAAyC,aAAa,yCAAyC,kCAAkC,8CAA8C,uCAAuC,iBAAiB,aAAa,sDAAsD,gEAAgE,0CAA0C,iDAAiD,iBAAiB,6CAA6C,iDAAiD,iBAAiB,2CAA2C,0IAA0I,EAAE,aAAa,WAAW,EAAE,4CAA4C,oGAAoG,sGAAsG,mDAAmD,SAAS,iEAAiE,sJAAsJ,6GAA6G,0BAA0B,SAAS,wMAAwM,oDAAoD,4BAA4B,yDAAyD,kFAAkF,uDAAuD,kCAAkC,sDAAsD,aAAa,kBAAkB,uCAAuC,kCAAkC,6FAA6F,aAAa,iHAAiH,uCAAuC,sEAAsE,oEAAoE,aAAa,2DAA2D,qIAAqI,+BAA+B,+BAA+B,mCAAmC,+DAA+D,+BAA+B,gEAAgE,kFAAkF,kFAAkF,aAAa,+DAA+D,oEAAoE,+BAA+B,6cAA6c,4BAA4B,SAAS,wFAAwF,mCAAmC,uBAAuB,aAAa,2EAA2E,8FAA8F,wEAAwE,8BAA8B,uBAAuB,EAAE,aAAa,kBAAkB,4CAA4C,uDAAuD,uBAAuB,gJAAgJ,aAAa,SAAS,eAAe,oEAAoE,uGAAuG,uDAAuD,oDAAoD,iDAAiD,uCAAuC,EAAE,eAAe,oEAAoE,oDAAoD,4CAA4C,kDAAkD,wHAAwH,oCAAoC,mBAAmB,OAAO,uBAAuB,EAAE,yBAAyB,eAAe,+BAA+B,OAAO,4BAA4B,OAAO,6FAA6F,uDAAuD,mKAAmK,OAAO,2DAA2D,8DAA8D,OAAO,mDAAmD,iEAAiE,uCAAuC,6CAA6C,UAAU,oCAAoC,uGAAuG,OAAO,0DAA0D,+CAA+C,wEAAwE,+DAA+D,yEAAyE,yCAAyC,iBAAiB,8DAA8D,uCAAuC,saAAsa,iBAAiB,uCAAuC,aAAa,yLAAyL,OAAO,4BAA4B,QAAQ,2DAA2D,+CAA+C,gEAAgE,+LAA+L,iBAAiB,aAAa,YAAY,8CAA8C,wCAAwC,aAAa,oEAAoE,yCAAyC,iCAAiC,mCAAmC,iCAAiC,iCAAiC,iCAAiC,iCAAiC,aAAa,oEAAoE,8DAA8D,4CAA4C,0EAA0E,yDAAyD,yEAAyE,wDAAwD,iFAAiF,uFAAuF,kEAAkE,+EAA+E,iBAAiB,EAAE,aAAa,+BAA+B,wfAAwf,6BAA6B,sGAAsG,gCAAgC,mEAAmE,iBAAiB,gCAAgC,0CAA0C,SAAS,EAAE,wCAAwC,aAAa,oEAAoE,qDAAqD,wDAAwD,4CAA4C,8CAA8C,4CAA4C,iDAAiD,2DAA2D,iDAAiD,uEAAuE,oGAAoG,uCAAuC,kCAAkC,kDAAkD,2BAA2B,iBAAiB,+DAA+D,oEAAoE,qEAAqE,EAAE,wCAAwC,+DAA+D,4CAA4C,iBAAiB,EAAE,sOAAsO,qFAAqF,wDAAwD,6DAA6D,yDAAyD,8DAA8D,iGAAiG,gCAAgC,oDAAoD,uEAAuE,uCAAuC,+MAA+M,yBAAyB,8BAA8B,0EAA0E,2CAA2C,uCAAuC,6BAA6B,8EAA8E,yBAAyB,wDAAwD,qBAAqB,0BAA0B,oDAAoD,4FAA4F,mCAAmC,yBAAyB,qDAAqD,kDAAkD,0CAA0C,qBAAqB,oDAAoD,yEAAyE,+BAA+B,qBAAqB,0EAA0E,uEAAuE,+BAA+B,qBAAqB,0EAA0E,gFAAgF,iDAAiD,uDAAuD,oEAAoE,6DAA6D,mHAAmH,sBAAsB,2CAA2C,4EAA4E,qBAAqB,iBAAiB,gFAAgF,4EAA4E,wGAAwG,kCAAkC,yGAAyG,oCAAoC,yGAAyG,wBAAwB,iGAAiG,iEAAiE,oDAAoD,yCAAyC,2CAA2C,mCAAmC,oCAAoC,kDAAkD,oDAAoD,qBAAqB,gEAAgE,kEAAkE,2FAA2F,4FAA4F,uCAAuC,4MAA4M,+MAA+M,aAAa,0KAA0K,sMAAsM,6GAA6G,sDAAsD,8DAA8D,4DAA4D,8DAA8D,0MAA0M,mDAAmD,kXAAkX,EAAE,iCAAiC,8DAA8D,mDAAmD,2FAA2F,EAAE,iCAAiC,EAAE,yBAAyB,6FAA6F,0CAA0C,4JAA4J,qDAAqD,qBAAqB,EAAE,iBAAiB,uEAAuE,yJAAyJ,6HAA6H,iDAAiD,qDAAqD,kGAAkG,+IAA+I,2EAA2E,sFAAsF,mDAAmD,sEAAsE,4DAA4D,gDAAgD,yBAAyB,2FAA2F,yEAAyE,0EAA0E,2DAA2D,yBAAyB,gEAAgE,qEAAqE,0DAA0D,yBAAyB,qBAAqB,iBAAiB,EAAE,aAAa,2EAA2E,gEAAgE,mGAAmG,iBAAiB,EAAE,aAAa,6EAA6E,gEAAgE,uGAAuG,iBAAiB,EAAE,aAAa,gDAAgD,gEAAgE,mEAAmE,iBAAiB,EAAE,uCAAuC,aAAa,iDAAiD,gEAAgE,qEAAqE,iBAAiB,EAAE,aAAa,SAAS,EAAE,mDAAmD,mDAAmD,SAAS,oCAAoC,oDAAoD,oEAAoE,iDAAiD,wCAAwC,+BAA+B,SAAS,uCAAuC,wYAAwY,gEAAgE,4CAA4C,mDAAmD,mCAAmC,sFAAsF,iDAAiD,wDAAwD,6CAA6C,iCAAiC,+CAA+C,gSAAgS,EAAE,0BAA0B,4HAA4H,mDAAmD,yHAAyH,EAAE,sCAAsC,aAAa,mCAAmC,6CAA6C,2EAA2E,2EAA2E,kFAAkF,wCAAwC,yCAAyC,aAAa,UAAU,4FAA4F,uCAAuC,aAAa,oEAAoE,mBAAmB,gDAAgD,qCAAqC,+BAA+B,SAAS,qCAAqC,wFAAwF,ovBAAovB,qBAAqB,uIAAuI,uBAAuB,4BAA4B,UAAU,0CAA0C,wCAAwC,mCAAmC,mDAAmD,2BAA2B,4DAA4D,2CAA2C,uDAAuD,iBAAiB,aAAa,EAAE,yBAAyB,UAAU,oCAAoC,yEAAyE,2CAA2C,yCAAyC,iYAAiY,gCAAgC,QAAQ,iBAAiB,aAAa,yEAAyE,4CAA4C,yCAAyC,gYAAgY,+BAA+B,QAAQ,iBAAiB,aAAa,2EAA2E,oEAAoE,yCAAyC,iHAAiH,iCAAiC,QAAQ,iBAAiB,aAAa,2EAA2E,oEAAoE,yCAAyC,2FAA2F,iCAAiC,QAAQ,iBAAiB,aAAa,UAAU,gGAAgG,yDAAyD,mCAAmC,+DAA+D,kFAAkF,uBAAuB,aAAa,6BAA6B,wCAAwC,iEAAiE,qDAAqD,8CAA8C,0IAA0I,mCAAmC,8HAA8H,wDAAwD,iBAAiB,iGAAiG,yGAAyG,6EAA6E,uCAAuC,uDAAuD,wDAAwD,iEAAiE,uMAAuM,KAAK,iEAAiE,0EAA0E,uCAAuC,gBAAgB,OAAO,kGAAkG,yBAAyB,mGAAmG,qBAAqB,iBAAiB,cAAc,wDAAwD,uDAAuD,wDAAwD,4DAA4D,qBAAqB,EAAE,iBAAiB,aAAa,EAAE,oDAAoD,qDAAqD,gGAAgG,qEAAqE,iBAAiB,sCAAsC,gCAAgC,2HAA2H,EAAE,UAAU,+CAA+C,gCAAgC,yHAAyH,+BAA+B,mDAAmD,SAAS,EAAE,oEAAoE,qCAAqC,aAAa,oEAAoE,2HAA2H,gDAAgD,wDAAwD,iCAAiC,2JAA2J,4BAA4B,4BAA4B,OAAO,mEAAmE,+CAA+C,iCAAiC,0BAA0B,0DAA0D,4DAA4D,mGAAmG,0DAA0D,uDAAuD,sEAAsE,8DAA8D,8DAA8D,0MAA0M,uCAAuC,4IAA4I,EAAE,yBAAyB,gFAAgF,qBAAqB,0BAA0B,sDAAsD,qBAAqB,iBAAiB,sBAAsB,kDAAkD,iBAAiB,aAAa,EAAE,sBAAsB,gJAAgJ,SAAS,uFAAuF,oCAAoC,2BAA2B,OAAO,qFAAqF,4BAA4B,uDAAuD,sDAAsD,gDAAgD,iDAAiD,yFAAyF,uCAAuC,iBAAiB,GAAG,mEAAmE,6DAA6D,4FAA4F,mCAAmC,qBAAqB,GAAG,iBAAiB,EAAE,kGAAkG,+BAA+B,uBAAuB,OAAO,mCAAmC,mCAAmC,oBAAoB,OAAO,kDAAkD,qBAAqB,yDAAyD,iBAAiB,+CAA+C,aAAa,EAAE,qEAAqE,SAAS,2EAA2E,oCAAoC,2BAA2B,OAAO,0EAA0E,yDAAyD,+CAA+C,0CAA0C,8BAA8B,wDAAwD,kDAAkD,0DAA0D,uDAAuD,mCAAmC,gBAAgB,OAAO,+CAA+C,qBAAqB,8FAA8F,iBAAiB,EAAE,yCAAyC,aAAa,4CAA4C,SAAS,gCAAgC,4BAA4B,oBAAoB,OAAO,2EAA2E,gDAAgD,sBAAsB,+NAA+N,+DAA+D,qBAAqB,6FAA6F,SAAS,gCAAgC,uEAAuE,SAAS,8FAA8F,kIAAkI,uDAAuD,4BAA4B,aAAa,SAAS,0EAA0E,8BAA8B,OAAO,wBAAwB,eAAe,mDAAmD,8CAA8C,uEAAuE,kCAAkC,gEAAgE,wBAAwB,+EAA+E,aAAa,EAAE,2BAA2B,qBAAqB,OAAO,oEAAoE,+CAA+C,+BAA+B,kBAAkB,OAAO,gEAAgE,iBAAiB,aAAa,oBAAoB,mFAAmF,SAAS,gCAAgC,OAAO,wBAAwB,eAAe,qEAAqE,2CAA2C,iDAAiD,4BAA4B,2BAA2B,kBAAkB,OAAO,iEAAiE,8BAA8B,0BAA0B,oCAAoC,sCAAsC,yDAAyD,oCAAoC,2CAA2C,+BAA+B,0FAA0F,0CAA0C,iBAAiB,sBAAsB,yCAAyC,iBAAiB,+BAA+B,kBAAkB,OAAO,0CAA0C,iBAAiB,yCAAyC,gFAAgF,iBAAiB,aAAa,sBAAsB,yEAAyE,SAAS,gCAAgC,OAAO,uBAAuB,eAAe,kCAAkC,OAAO,gFAAgF,qFAAqF,6BAA6B,wCAAwC,uDAAuD,yCAAyC,yDAAyD,uDAAuD,6DAA6D,sCAAsC,sEAAsE,mEAAmE,6EAA6E,kFAAkF,qBAAqB,iBAAiB,sBAAsB,0DAA0D,kDAAkD,iBAAiB,aAAa,EAAE,6BAA6B,SAAS,gCAAgC,kDAAkD,0CAA0C,2BAA2B,mDAAmD,+BAA+B,iCAAiC,SAAS,oCAAoC,shBAAshB,gEAAgE,yCAAyC,mCAAmC,4BAA4B,iDAAiD,aAAa,qDAAqD,oDAAoD,SAAS,QAAQ,WAAW,UAAU,EAAE,gFAAgF,sFAAsF,+CAA+C,6DAA6D,sDAAsD,EAAE,wDAAwD,2DAA2D,8DAA8D,oDAAoD,WAAW,cAAc,EAAE,iEAAiE,+DAA+D,sDAAsD,wDAAwD,iEAAiE,oDAAoD,mDAAmD,iBAAiB,mDAAmD,oDAAoD,iBAAiB,aAAa,kBAAkB,sFAAsF,0DAA0D,qDAAqD,YAAY,sBAAsB,eAAe,mBAAmB,EAAE,8DAA8D,8EAA8E,4EAA4E,8CAA8C,aAAa,8CAA8C,kEAAkE,+DAA+D,SAAS,OAAO,QAAQ,EAAE,6CAA6C,kBAAkB,YAAY,mCAAmC,gBAAgB,eAAe,mBAAmB,4DAA4D,8DAA8D,+BAA+B,8CAA8C,6BAA6B,uCAAuC,8BAA8B,gCAAgC,4CAA4C,iCAAiC,aAAa,oEAAoE,8EAA8E,8BAA8B,qBAAqB,gEAAgE,+EAA+E,qBAAqB,0BAA0B,iFAAiF,qBAAqB,iBAAiB,2BAA2B,4BAA4B,mEAAmE,iBAAiB,gCAAgC,wCAAwC,gHAAgH,EAAE,iBAAiB,0BAA0B,aAAa,EAAE,8CAA8C,8CAA8C,sDAAsD,oDAAoD,mFAAmF,qDAAqD,mKAAmK,mDAAmD,4FAA4F,oDAAoD,gDAAgD,uLAAuL,kIAAkI,qFAAqF,iBAAiB,aAAa,EAAE,uCAAuC,uCAAuC,8CAA8C,2EAA2E,0CAA0C,6BAA6B,UAAU,+DAA+D,6DAA6D,UAAU,gEAAgE,sCAAsC,UAAU,qGAAqG,+DAA+D,iEAAiE,6EAA6E,6EAA6E,8CAA8C,qBAAqB,2FAA2F,0DAA0D,YAAY,iBAAiB,sBAAsB,kCAAkC,iBAAiB,aAAa,EAAE,SAAS,kEAAkE,iDAAiD,uHAAuH,+BAA+B,sCAAsC,wEAAwE,6EAA6E,mCAAmC,8IAA8I,yGAAyG,cAAc,iBAAiB,sBAAsB,+DAA+D,2CAA2C,gJAAgJ,EAAE,iBAAiB,aAAa,EAAE,mDAAmD,qDAAqD,sBAAsB,SAAS,EAAE,oCAAoC,aAAa,oEAAoE,mBAAmB,gDAAgD,uDAAuD,0DAA0D,+CAA+C,kDAAkD,iCAAiC,gEAAgE,4JAA4J,kDAAkD,8DAA8D,gDAAgD,4KAA4K,8DAA8D,QAAQ,8CAA8C,SAAS,oCAAoC,mEAAmE,4KAA4K,qBAAqB,wEAAwE,UAAU,yCAAyC,yEAAyE,sCAAsC,mCAAmC,2BAA2B,6EAA6E,uDAAuD,UAAU,yDAAyD,sCAAsC,UAAU,kDAAkD,4CAA4C,UAAU,mDAAmD,4CAA4C,UAAU,mEAAmE,iCAAiC,qDAAqD,2CAA2C,4JAA4J,EAAE,aAAa,kCAAkC,oEAAoE,aAAa,UAAU,2FAA2F,8CAA8C,uBAAuB,aAAa,8BAA8B,uCAAuC,qDAAqD,gJAAgJ,kBAAkB,cAAc,wGAAwG,sDAAsD,2BAA2B,iBAAiB,iDAAiD,2CAA2C,2DAA2D,2DAA2D,iBAAiB,sBAAsB,+BAA+B,uBAAuB,oCAAoC,iBAAiB,aAAa,EAAE,8CAA8C,iDAAiD,4DAA4D,qDAAqD,2CAA2C,8EAA8E,0IAA0I,yFAAyF,2MAA2M,iBAAiB,kEAAkE,mJAAmJ,EAAE,aAAa,kEAAkE,0BAA0B,uCAAuC,wCAAwC,sBAAsB,sFAAsF,6CAA6C,iBAAiB,EAAE,6BAA6B,aAAa,UAAU,oGAAoG,2BAA2B,6GAA6G,oDAAoD,aAAa,EAAE,uDAAuD,yGAAyG,EAAE,UAAU,gDAAgD,6BAA6B,2JAA2J,6CAA6C,iEAAiE,8FAA8F,aAAa,EAAE,2BAA2B,SAAS,+DAA+D,8IAA8I,SAAS,mFAAmF,gDAAgD,mEAAmE,wHAAwH,aAAa,8CAA8C,qFAAqF,kIAAkI,kBAAkB,cAAc,2HAA2H,sQAAsQ,iBAAiB,oFAAoF,+EAA+E,0KAA0K,qBAAqB,6CAA6C,SAAS,oEAAoE,+HAA+H,0BAA0B,uBAAuB,aAAa,2EAA2E,gDAAgD,gEAAgE,aAAa,8CAA8C,6BAA6B,oGAAoG,+CAA+C,iBAAiB,yDAAyD,kEAAkE,qDAAqD,qDAAqD,iBAAiB,aAAa,0DAA0D,mCAAmC,2BAA2B,iBAAiB,oIAAoI,oEAAoE,uKAAuK,6HAA6H,iBAAiB,4EAA4E,wMAAwM,+BAA+B,qBAAqB,kCAAkC,4NAA4N,qIAAqI,8CAA8C,iBAAiB,EAAE,aAAa,uDAAuD,4CAA4C,4CAA4C,8CAA8C,iBAAiB,+BAA+B,aAAa,SAAS,EAAE,oCAAoC,aAAa,oEAAoE,6FAA6F,+BAA+B,yCAAyC,yBAAyB,8DAA8D,4BAA4B,+BAA+B,OAAO,cAAc,sCAAsC,kEAAkE,+CAA+C,uLAAuL,6CAA6C,0BAA0B,QAAQ,OAAO,gDAAgD,mDAAmD,kCAAkC,yBAAyB,qBAAqB,gCAAgC,6KAA6K,wDAAwD,6BAA6B,4CAA4C,+EAA+E,oDAAoD,gMAAgM,yBAAyB,qBAAqB,iBAAiB,EAAE,0CAA0C,aAAa,+DAA+D,4BAA4B,gCAAgC,OAAO,6DAA6D,+CAA+C,mDAAmD,gDAAgD,iFAAiF,6DAA6D,kDAAkD,QAAQ,OAAO,6DAA6D,wCAAwC,6DAA6D,kCAAkC,yBAAyB,qBAAqB,iBAAiB,EAAE,kCAAkC,aAAa,8FAA8F,qCAAqC,aAAa,+DAA+D,4BAA4B,gCAAgC,OAAO,4EAA4E,iDAAiD,aAAa,YAAY,0BAA0B,yBAAyB,mBAAmB,8IAA8I,eAAe,gDAAgD,sCAAsC,yBAAyB,2CAA2C,EAAE,aAAa,yBAAyB,SAAS,mCAAmC,eAAe,oEAAoE,oFAAoF,mCAAmC,iCAAiC,mCAAmC,iCAAiC,mCAAmC,iCAAiC,eAAe,oEAAoE,qGAAqG,iDAAiD,gDAAgD,EAAE,eAAe,oEAAoE,kEAAkE,gDAAgD,EAAE,eAAe,oEAAoE,mBAAmB,mDAAmD,mCAAmC,+BAA+B,SAAS,mCAAmC,4PAA4P,wCAAwC,yDAAyD,mCAAmC,kCAAkC,2EAA2E,EAAE,UAAU,kEAAkE,+DAA+D,8DAA8D,0CAA0C,gDAAgD,aAAa,UAAU,mCAAmC,aAAa,oEAAoE,uCAAuC,iFAAiF,aAAa,oEAAoE,6JAA6J,2CAA2C,kDAAkD,8CAA8C,gDAAgD,iDAAiD,+CAA+C,kDAAkD,6CAA6C,2CAA2C,2CAA2C,gDAAgD,iDAAiD,iDAAiD,iCAAiC,6BAA6B,2BAA2B,2BAA2B,2BAA2B,+BAA+B,mDAAmD,0BAA0B,uEAAuE,wBAAwB,uBAAuB,mCAAmC,0BAA0B,+CAA+C,kDAAkD,OAAO,MAAM,UAAU,WAAW,EAAE,wCAAwC,mCAAmC,UAAU,kDAAkD,iDAAiD,yBAAyB,GAAG,UAAU,4CAA4C,sDAAsD,UAAU,iDAAiD,iEAAiE,0CAA0C,aAAa,UAAU,iDAAiD,iEAAiE,0CAA0C,aAAa,UAAU,oDAAoD,iIAAiI,UAAU,yDAAyD,4CAA4C,kDAAkD,8DAA8D,iBAAiB,yCAAyC,aAAa,yBAAyB,UAAU,2MAA2M,kDAAkD,+BAA+B,iCAAiC,4BAA4B,aAAa,2BAA2B,0EAA0E,mDAAmD,aAAa,UAAU,mDAAmD,kDAAkD,4HAA4H,UAAU,2DAA2D,6DAA6D,+BAA+B,wFAAwF,qCAAqC,kCAAkC,uCAAuC,0EAA0E,oFAAoF,sDAAsD,+CAA+C,iDAAiD,iDAAiD,kDAAkD,uDAAuD,2EAA2E,6EAA6E,wCAAwC,8DAA8D,8DAA8D,yBAAyB,+CAA+C,+CAA+C,mEAAmE,6GAA6G,yCAAyC,yBAAyB,4MAA4M,sCAAsC,yBAAyB,qBAAqB,0BAA0B,wDAAwD,2EAA2E,uDAAuD,+CAA+C,8CAA8C,gDAAgD,4NAA4N,wCAAwC,8DAA8D,yBAAyB,gDAAgD,+CAA+C,+DAA+D,kDAAkD,mEAAmE,qBAAqB,+MAA+M,mDAAmD,uDAAuD,qBAAqB,EAAE,gDAAgD,iHAAiH,oCAAoC,mCAAmC,YAAY,OAAO,4CAA4C,yEAAyE,8FAA8F,0DAA0D,kEAAkE,yBAAyB,qBAAqB,wCAAwC,6DAA6D,6DAA6D,+EAA+E,+EAA+E,iDAAiD,2CAA2C,0CAA0C,yCAAyC,0CAA0C,2CAA2C,qDAAqD,sLAAsL,8FAA8F,qBAAqB,oDAAoD,2DAA2D,qBAAqB,iBAAiB,sBAAsB,oIAAoI,iBAAiB,aAAa,UAAU,uDAAuD,4CAA4C,iDAAiD,gBAAgB,8CAA8C,wDAAwD,gBAAgB,2CAA2C,6CAA6C,gBAAgB,yCAAyC,wDAAwD,aAAa,8EAA8E,oEAAoE,aAAa,UAAU,yEAAyE,wCAAwC,yDAAyD,qJAAqJ,8DAA8D,uIAAuI,sCAAsC,iBAAiB,0BAA0B,kDAAkD,iBAAiB,yFAAyF,kCAAkC,aAAa,kBAAkB,+DAA+D,kCAAkC,aAAa,UAAU,oCAAoC,mDAAmD,0BAA0B,0BAA0B,0BAA0B,0BAA0B,0BAA0B,2BAA2B,uBAAuB,uBAAuB,oBAAoB,kBAAkB,mBAAmB,mBAAmB,uBAAuB,iBAAiB,GAAG,gCAAgC,4BAA4B,2BAA2B,8BAA8B,kEAAkE,mCAAmC,uCAAuC,uCAAuC,0CAA0C,0CAA0C,8BAA8B,kEAAkE,mCAAmC,uCAAuC,uCAAuC,0CAA0C,0CAA0C,8BAA8B,6FAA6F,mCAAmC,2CAA2C,2CAA2C,2CAA2C,2CAA2C,+BAA+B,+BAA+B,wCAAwC,oHAAoH,oCAAoC,mDAAmD,mDAAmD,mDAAmD,mDAAmD,yBAAyB,8BAA8B,2CAA2C,2CAA2C,yBAAyB,0CAA0C,0CAA0C,0CAA0C,0CAA0C,0CAA0C,0CAA0C,kCAAkC,gCAAgC,8BAA8B,6DAA6D,kCAAkC,mCAAmC,mCAAmC,sCAAsC,gCAAgC,2FAA2F,qCAAqC,iEAAiE,iEAAiE,sEAAsE,yBAAyB,6CAA6C,2CAA2C,2CAA2C,2CAA2C,2DAA2D,sEAAsE,+EAA+E,4BAA4B,kDAAkD,6DAA6D,2DAA2D,2DAA2D,yDAAyD,iEAAiE,uDAAuD,mKAAmK,kMAAkM,kDAAkD,iCAAiC,6BAA6B,kCAAkC,6HAA6H,4FAA4F,sDAAsD,qCAAqC,0CAA0C,sDAAsD,qCAAqC,iCAAiC,6FAA6F,kDAAkD,iCAAiC,sCAAsC,kDAAkD,iCAAiC,6BAA6B,yBAAyB,wnBAAwnB,kCAAkC,gCAAgC,8BAA8B,0EAA0E,2CAA2C,2EAA2E,0CAA0C,mFAAmF,kDAAkD,kCAAkC,sDAAsD,sDAAsD,yBAAyB,wDAAwD,sDAAsD,sDAAsD,sDAAsD,0aAA0a,8BAA8B,qHAAqH,iBAAiB,mCAAmC,qCAAqC,mCAAmC,YAAY,OAAO,0CAA0C,uDAAuD,uOAAuO,qBAAqB,iBAAiB,aAAa,kCAAkC,UAAU,mGAAmG,mCAAmC,sCAAsC,yBAAyB,oDAAoD,uCAAuC,sCAAsC,aAAa,8DAA8D,8DAA8D,qCAAqC,0CAA0C,mEAAmE,2BAA2B,gDAAgD,sSAAsS,wDAAwD,gDAAgD,iBAAiB,mDAAmD,aAAa,oEAAoE,mCAAmC,iCAAiC,iDAAiD,gCAAgC,yCAAyC,aAAa,uEAAuE,2EAA2E,kEAAkE,0DAA0D,mEAAmE,aAAa,kBAAkB,6CAA6C,aAAa,UAAU,wDAAwD,yCAAyC,yCAAyC,UAAU,qDAAqD,yCAAyC,yCAAyC,UAAU,gLAAgL,sKAAsK,2CAA2C,UAAU,qGAAqG,mCAAmC,oCAAoC,gEAAgE,mBAAmB,mCAAmC,oCAAoC,6CAA6C,0CAA0C,2CAA2C,iBAAiB,sBAAsB,+DAA+D,kEAAkE,oEAAoE,qDAAqD,sDAAsD,mFAAmF,sCAAsC,0GAA0G,gEAAgE,8GAA8G,0CAA0C,2CAA2C,iBAAiB,4BAA4B,aAAa,kBAAkB,+CAA+C,0CAA0C,2CAA2C,iBAAiB,aAAa,yBAAyB,uBAAuB,aAAa,mCAAmC,iCAAiC,mCAAmC,kCAAkC,oCAAoC,mCAAmC,mCAAmC,mCAAmC,qCAAqC,sCAAsC,yBAAyB,qHAAqH,yDAAyD,uCAAuC,sCAAsC,aAAa,2CAA2C,oCAAoC,kBAAkB,2BAA2B,2BAA2B,iCAAiC,mCAAmC,yDAAyD,yDAAyD,6CAA6C,aAAa,8BAA8B,qWAAqW,qCAAqC,qCAAqC,0CAA0C,0CAA0C,0CAA0C,0CAA0C,0CAA0C,iEAAiE,+DAA+D,2CAA2C,6WAA6W,yFAAyF,wMAAwM,eAAe,kBAAkB,wBAAwB,0CAA0C,0CAA0C,iBAAiB,uCAAuC,kDAAkD,iDAAiD,aAAa,0CAA0C,sCAAsC,6BAA6B,2DAA2D,wCAAwC,aAAa,6CAA6C,0BAA0B,gGAAgG,+CAA+C,oCAAoC,mDAAmD,+CAA+C,4CAA4C,6CAA6C,uLAAuL,kFAAkF,uHAAuH,+CAA+C,+CAA+C,sBAAsB,yCAAyC,iBAAiB,sBAAsB,6EAA6E,8EAA8E,iBAAiB,iCAAiC,8DAA8D,qDAAqD,0CAA0C,iBAAiB,+CAA+C,wEAAwE,yEAAyE,sKAAsK,4CAA4C,8CAA8C,iBAAiB,mDAAmD,gDAAgD,iBAAiB,aAAa,kBAAkB,+DAA+D,gEAAgE,6CAA6C,oDAAoD,8CAA8C,wCAAwC,iBAAiB,aAAa,iCAAiC,sCAAsC,4BAA4B,2EAA2E,aAAa,2GAA2G,8CAA8C,2EAA2E,kEAAkE,0DAA0D,mEAAmE,aAAa,UAAU,0DAA0D,yCAAyC,iCAAiC,gCAAgC,iCAAiC,2CAA2C,UAAU,uDAAuD,yCAAyC,yCAAyC,UAAU,yLAAyL,kCAAkC,oCAAoC,sCAAsC,mDAAmD,oDAAoD,uDAAuD,6BAA6B,8FAA8F,4CAA4C,wCAAwC,iBAAiB,2CAA2C,+BAA+B,qBAAqB,4CAA4C,gEAAgE,iBAAiB,2BAA2B,iBAAiB,+BAA+B,2VAA2V,yDAAyD,sCAAsC,aAAa,6BAA6B,UAAU,4BAA4B,qGAAqG,kCAAkC,iCAAiC,yDAAyD,iEAAiE,aAAa,OAAO,kCAAkC,SAAS,YAAY,gBAAgB,EAAE,4DAA4D,aAAa,mBAAmB,oDAAoD,aAAa,aAAa,uEAAuE,yCAAyC,qJAAqJ,oBAAoB,8DAA8D,UAAU,2CAA2C,6EAA6E,qCAAqC,kCAAkC,yEAAyE,wBAAwB,uBAAuB,aAAa,oBAAoB,kBAAkB,wCAAwC,yDAAyD,8MAA8M,gDAAgD,wDAAwD,8FAA8F,gFAAgF,4FAA4F,mCAAmC,0CAA0C,+BAA+B,aAAa,gCAAgC,sDAAsD,kDAAkD,yGAAyG,2EAA2E,4EAA4E,8CAA8C,iDAAiD,iBAAiB,sBAAsB,uJAAuJ,8BAA8B,8BAA8B,4HAA4H,4DAA4D,iBAAiB,aAAa,kBAAkB,2BAA2B,2BAA2B,aAAa,gCAAgC,wCAAwC,mFAAmF,8BAA8B,+EAA+E,8BAA8B,6CAA6C,mEAAmE,aAAa,4CAA4C,sHAAsH,mGAAmG,0BAA0B,wDAAwD,0MAA0M,0BAA0B,aAAa,4BAA4B,sDAAsD,0EAA0E,0BAA0B,qEAAqE,0BAA0B,gHAAgH,6BAA6B,kHAAkH,6BAA6B,iEAAiE,aAAa,kDAAkD,8CAA8C,uBAAuB,2BAA2B,uBAAuB,6BAA6B,+CAA+C,4CAA4C,oDAAoD,4CAA4C,6JAA6J,6CAA6C,2CAA2C,qCAAqC,yCAAyC,2CAA2C,4CAA4C,0CAA0C,8CAA8C,8CAA8C,aAAa,kBAAkB,4FAA4F,4CAA4C,gDAAgD,aAAa,kCAAkC,iDAAiD,2FAA2F,kDAAkD,mCAAmC,wJAAwJ,0HAA0H,iFAAiF,8CAA8C,2CAA2C,aAAa,kBAAkB,kCAAkC,sDAAsD,qDAAqD,aAAa,4DAA4D,oCAAoC,6CAA6C,aAAa,wDAAwD,sDAAsD,kHAAkH,QAAQ,sDAAsD,iKAAiK,QAAQ,+EAA+E,wEAAwE,UAAU,mDAAmD,6CAA6C,mCAAmC,UAAU,mDAAmD,6CAA6C,UAAU,iEAAiE,kFAAkF,iBAAiB,OAAO,0CAA0C,8CAA8C,kDAAkD,kDAAkD,SAAS,wDAAwD,mCAAmC,qCAAqC,4CAA4C,6GAA6G,gCAAgC,aAAa,kBAAkB,6CAA6C,aAAa,UAAU,wDAAwD,yCAAyC,UAAU,qDAAqD,yCAAyC,UAAU,KAAK,aAAa,oEAAoE,0DAA0D,kDAAkD,yBAAyB,yBAAyB,+BAA+B,gCAAgC,eAAe,sEAAsE,6CAA6C,oFAAoF,cAAc,SAAS,mBAAmB,6CAA6C,oGAAoG,cAAc,SAAS,4DAA4D,4BAA4B,uBAAuB,aAAa,6BAA6B,gDAAgD,0CAA0C,uFAAuF,aAAa,kBAAkB,kKAAkK,aAAa,UAAU,0GAA0G,8FAA8F,KAAK,aAAa,oEAAoE,6HAA6H,+CAA+C,oCAAoC,qCAAqC,SAAS,gHAAgH,gCAAgC,+BAA+B,qCAAqC,8DAA8D,0DAA0D,gEAAgE,gBAAgB,kBAAkB,YAAY,aAAa,EAAE,yDAAyD,OAAO,MAAM,EAAE,4CAA4C,sCAAsC,4CAA4C,4BAA4B,0FAA0F,uDAAuD,oDAAoD,oDAAoD,2BAA2B,wDAAwD,iBAAiB,cAAc,oDAAoD,mGAAmG,oDAAoD,cAAc,sCAAsC,SAAS,kCAAkC,+EAA+E,eAAe,yDAAyD,yCAAyC,aAAa,oFAAoF,qEAAqE,wCAAwC,aAAa,4CAA4C,4CAA4C,+BAA+B,iBAAiB,OAAO,qCAAqC,oDAAoD,sDAAsD,iDAAiD,yBAAyB,yGAAyG,qBAAqB,0BAA0B,qDAAqD,8CAA8C,yBAAyB,uDAAuD,yCAAyC,+DAA+D,wEAAwE,6DAA6D,yBAAyB,qBAAqB,uCAAuC,iBAAiB,yCAAyC,uPAAuP,6CAA6C,iBAAiB,aAAa,iDAAiD,qEAAqE,yEAAyE,uEAAuE,wCAAwC,0CAA0C,qEAAqE,0DAA0D,4DAA4D,iBAAiB,aAAa,qCAAqC,yCAAyC,wGAAwG,aAAa,sCAAsC,mCAAmC,aAAa,uCAAuC,oCAAoC,aAAa,mCAAmC,wCAAwC,6DAA6D,iBAAiB,aAAa,uCAAuC,qCAAqC,4CAA4C,sLAAsL,aAAa,wCAAwC,qCAAqC,4CAA4C,wLAAwL,aAAa,UAAU,mFAAmF,gCAAgC,yFAAyF,cAAc,SAAS,iOAAiO,yBAAyB,gCAAgC,OAAO,8CAA8C,sEAAsE,SAAS,sCAAsC,aAAa,gBAAgB,EAAE,GAAG,C;;;;;;;ACAv668E,6CAA6C,uDAAuD,oGAAoG,OAAO,gFAAgF,oEAAoE,OAAO,OAAO,gDAAgD,gBAAgB,OAAO,GAAG,oCAAoC,gCAAgC,+CAA+C,6DAA6D,WAAW,OAAO,qBAAqB,uCAAuC,iBAAiB,OAAO,iCAAiC,2DAA2D,OAAO,oCAAoC,8CAA8C,qDAAqD,wYAAwY,iBAAiB,8DAA8D,EAAE,qDAAqD,6KAA6K,QAAQ,4BAA4B,qLAAqL,yBAAyB,uDAAuD,0EAA0E,iJAAiJ,EAAE,kDAAkD,4KAA4K,gHAAgH,kGAAkG,uJAAuJ,iCAAiC,2CAA2C,KAAK,oBAAoB,iFAAiF,iBAAiB,8DAA8D,EAAE,qDAAqD,mDAAmD,8CAA8C,aAAa,8HAA8H,QAAQ,QAAQ,4HAA4H,6BAA6B,gCAAgC,wDAAwD,gEAAgE,sIAAsI,iBAAiB,8DAA8D,EAAE,qDAAqD,kGAAkG,+HAA+H,8CAA8C,MAAM,cAAc,2QAA2Q,yIAAyI,kSAAkS,mFAAmF,yGAAyG,wLAAwL,oBAAoB,UAAU,uBAAuB,oEAAoE,0FAA0F,8NAA8N,OAAO,mBAAmB,YAAY,6DAA6D,yFAAyF,aAAa,4HAA4H,UAAU,GAAG,aAAa,uFAAuF,8BAA8B,gCAAgC,kBAAkB,qEAAqE,GAAG,sCAAsC,8BAA8B,gCAAgC,6BAA6B,yDAAyD,mDAAmD,cAAc,iEAAiE,iBAAiB,+DAA+D,EAAE,qDAAqD,uNAAuN,qEAAqE,oNAAoN,mPAAmP,sBAAsB,gCAAgC,6CAA6C,2CAA2C,eAAe,wDAAwD,OAAO,2CAA2C,gBAAgB,GAAG,kiBAAkiB,iBAAiB,+DAA+D,EAAE,qDAAqD,yHAAyH,SAAS,yUAAyU,6JAA6J,8EAA8E,iJAAiJ,UAAU,mEAAmE,iBAAiB,cAAc,KAAK,yCAAyC,oBAAoB,kCAAkC,2PAA2P,iBAAiB,4DAA4D,EAAE,qDAAqD,8DAA8D,MAAM,sSAAsS,QAAQ,mGAAmG,0GAA0G,iEAAiE,uCAAuC,0KAA0K,4CAA4C,uBAAuB,8QAA8Q,MAAM,sIAAsI,sNAAsN,iDAAiD,IAAI,kBAAkB,GAAG,oCAAoC,IAAI,yFAAyF,iBAAiB,+DAA+D,EAAE,qDAAqD,gGAAgG,iEAAiE,4BAA4B,2EAA2E,qBAAqB,2EAA2E,cAAc,sCAAsC,iMAAiM,yCAAyC,sFAAsF,iBAAiB,8DAA8D,EAAE,qDAAqD,yHAAyH,sBAAsB,mBAAmB,cAAc,eAAe,2DAA2D,2DAA2D,6KAA6K,+LAA+L,6EAA6E,uCAAuC,gNAAgN,wLAAwL,kBAAkB,gJAAgJ,+zBAA+zB,iBAAiB,+DAA+D,EAAE,qDAAqD,oIAAoI,2HAA2H,sCAAsC,iDAAiD,0GAA0G,wGAAwG,iCAAiC,OAAO,yHAAyH,EAAE,mBAAmB,OAAO,6QAA6Q,iBAAiB,6DAA6D,EAAE,qDAAqD,2FAA2F,oDAAoD,qLAAqL,iIAAiI,4LAA4L,yNAAyN,6GAA6G,ufAAuf,iBAAiB,+DAA+D,EAAE,qDAAqD,4HAA4H,6GAA6G,uGAAuG,yOAAyO,iCAAiC,iBAAiB,uEAAuE,4BAA4B,yIAAyI,iBAAiB,8DAA8D,EAAE,qDAAqD,qDAAqD,kLAAkL,qRAAqR,oDAAoD,QAAQ,4BAA4B,0LAA0L,QAAQ,4GAA4G,qEAAqE,sWAAsW,iBAAiB,+DAA+D,EAAE,qDAAqD,iIAAiI,kBAAkB,yBAAyB,mEAAmE,iCAAiC,6DAA6D,+DAA+D,IAAI,MAAM,UAAU,6BAA6B,MAAM,EAAE,sFAAsF,QAAQ,8CAA8C,8LAA8L,UAAU,4BAA4B,0BAA0B,6DAA6D,gGAAgG,iBAAiB,8DAA8D,EAAE,qDAAqD,8EAA8E,aAAa,iHAAiH,QAAQ,sGAAsG,gBAAgB,6FAA6F,oDAAoD,gFAAgF,sKAAsK,iBAAiB,kKAAkK,wEAAwE,iBAAiB,4IAA4I,iBAAiB,8DAA8D,EAAE,qDAAqD,yJAAyJ,EAAE,8GAA8G,wDAAwD,wDAAwD,sCAAsC,IAAI,mIAAmI,KAAK,2PAA2P,YAAY,qHAAqH,kBAAkB,6BAA6B,sEAAsE,sFAAsF,iBAAiB,6DAA6D,EAAE,qDAAqD,iVAAiV,yMAAyM,sEAAsE,6FAA6F,yCAAyC,gPAAgP,EAAE,wCAAwC,2IAA2I,6CAA6C,eAAe,0GAA0G,wdAAwd,iBAAiB,+DAA+D,EAAE,qDAAqD,wOAAwO,2NAA2N,gDAAgD,KAAK,4BAA4B,uCAAuC,8NAA8N,OAAO,kEAAkE,iIAAiI,sFAAsF,iBAAiB,6DAA6D,EAAE,qDAAqD,qGAAqG,+FAA+F,iBAAiB,6DAA6D,EAAE,qDAAqD,uGAAuG,uEAAuE,EAAE,QAAQ,6BAA6B,0BAA0B,2EAA2E,6FAA6F,+CAA+C,8CAA8C,sKAAsK,qCAAqC,+KAA+K,mFAAmF,gDAAgD,6IAA6I,iOAAiO,IAAI,cAAc,mDAAmD,GAAG,iEAAiE,MAAM,sBAAsB,4GAA4G,KAAK,eAAe,qBAAqB,+DAA+D,iBAAiB,8DAA8D,EAAE,qDAAqD,0JAA0J,MAAM,kDAAkD,mIAAmI,uDAAuD,gHAAgH,uIAAuI,qEAAqE,iFAAiF,EAAE,qBAAqB,gGAAgG,6CAA6C,wCAAwC,8BAA8B,8DAA8D,gFAAgF,iBAAiB,8DAA8D,EAAE,qDAAqD,kDAAkD,yBAAyB,oBAAoB,OAAO,8EAA8E,YAAY,sBAAsB,uQAAuQ,2NAA2N,4GAA4G,UAAU,kKAAkK,oBAAoB,gBAAgB,mFAAmF,0HAA0H,2JAA2J,YAAY,MAAM,mCAAmC,sCAAsC,mBAAmB,iDAAiD,KAAK,sDAAsD,iBAAiB,8DAA8D,EAAE,qDAAqD,6GAA6G,mEAAmE,qIAAqI,wJAAwJ,6CAA6C,wBAAwB,8FAA8F,gBAAgB,qCAAqC,8FAA8F,uJAAuJ,kBAAkB,uBAAuB,8KAA8K,sCAAsC,wCAAwC,sIAAsI,qNAAqN,oDAAoD,2PAA2P,iBAAiB,6DAA6D,EAAE,qDAAqD,sDAAsD,eAAe,2DAA2D,yJAAyJ,MAAM,wBAAwB,qEAAqE,0BAA0B,6GAA6G,4DAA4D,iFAAiF,QAAQ,oBAAoB,8NAA8N,8JAA8J,iBAAiB,8DAA8D,EAAE,qDAAqD,0IAA0I,kCAAkC,gEAAgE,iGAAiG,qLAAqL,0EAA0E,uNAAuN,iBAAiB,+EAA+E,MAAM,4KAA4K,4CAA4C,6LAA6L,UAAU,SAAS,YAAY,mDAAmD,kOAAkO,+BAA+B,sFAAsF,yDAAyD,KAAK,oBAAoB,6DAA6D,iBAAiB,8DAA8D,EAAE,qDAAqD,mFAAmF,oQAAoQ,EAAE,+BAA+B,qFAAqF,6EAA6E,wJAAwJ,4EAA4E,aAAa,KAAK,gCAAgC,iEAAiE,kGAAkG,2CAA2C,kCAAkC,iCAAiC,2CAA2C,2EAA2E,uEAAuE,mQAAmQ,iBAAiB,8DAA8D,EAAE,qDAAqD,gHAAgH,iBAAiB,+CAA+C,YAAY,qGAAqG,4FAA4F,wFAAwF,yLAAyL,iBAAiB,6DAA6D,EAAE,qDAAqD,uFAAuF,eAAe,0FAA0F,2BAA2B,qCAAqC,mJAAmJ,iFAAiF,6GAA6G,sCAAsC,uEAAuE,sCAAsC,oEAAoE,8BAA8B,YAAY,gDAAgD,yHAAyH,aAAa,qDAAqD,UAAU,GAAG,sJAAsJ,6GAA6G,mFAAmF,oJAAoJ,uEAAuE,iBAAiB,6DAA6D,EAAE,qDAAqD,gEAAgE,+GAA+G,4FAA4F,oCAAoC,uCAAuC,iBAAiB,8DAA8D,EAAE,qDAAqD,2EAA2E,wBAAwB,EAAE,OAAO,cAAc,6CAA6C,QAAQ,gCAAgC,6HAA6H,iBAAiB,8DAA8D,EAAE,qDAAqD,4LAA4L,4KAA4K,iBAAiB,8DAA8D,EAAE,qDAAqD,wEAAwE,uGAAuG,SAAS,6DAA6D,uDAAuD,iFAAiF,0BAA0B,mGAAmG,0EAA0E,UAAU,sBAAsB,+BAA+B,0CAA0C,2UAA2U,iBAAiB,8DAA8D,EAAE,qDAAqD,yJAAyJ,yKAAyK,iBAAiB,8DAA8D,EAAE,qDAAqD,yFAAyF,iBAAiB,6DAA6D,wBAAwB,EAAE,GAAG,GAAG,C;;;;;;;ACAx03C,sUAAsU,qBAAqB,mFAAmF,0YAA0Y,yIAAyI,8BAA8B,4EAA4E,WAAW,8BAA8B,UAAU,KAAK,OAAO,wBAAwB,KAAK,gDAAgD,mFAAmF,2VAA2V,iBAAiB,mCAAmC,yCAAyC,0BAA0B,4BAA4B,wBAAwB,8BAA8B,wBAAwB,uCAAuC,2CAA2C,qCAAqC,yDAAyD,qBAAqB,yCAAyC,4BAA4B,qDAAqD,2BAA2B,sEAAsE,KAAK,oTAAoT,wNAAwN,KAAK,uUAAuU,kCAAkC,MAAM,oCAAoC,2LAA2L,gCAAgC,KAAK,8IAA8I,6EAA6E,kCAAkC,OAAO,kHAAkH,KAAK,8IAA8I,2GAA2G,yFAAyF,+DAA+D,KAAK,kGAAkG,2CAA2C,KAAK,kCAAkC,oEAAoE,8CAA8C,OAAO,KAAK,KAAK,0BAA0B,8DAA8D,KAAK,0BAA0B,0BAA0B,KAAK,yBAAyB,2BAA2B,KAAK,0BAA0B,iEAAiE,sEAAsE,KAAK,wBAAwB,mDAAmD,KAAK,4JAA4J,mDAAmD,wFAAwF,gEAAgE,+EAA+E,oBAAoB,8EAA8E,UAAU,KAAK,0JAA0J,kBAAkB,KAAK,qFAAqF,oBAAoB,UAAU,KAAK,aAAa,YAAY,QAAQ,sGAAsG,oEAAoE,+BAA+B,iCAAiC,0EAA0E,qBAAqB,WAAW,wLAAwL,kCAAkC,kCAAkC,6DAA6D,eAAe,OAAO,oEAAoE,aAAa,wHAAwH,yDAAyD,iCAAiC,kCAAkC,WAAW,SAAS,OAAO,KAAK,qDAAqD,IAAI,oBAAoB,yOAAyO,6BAA6B,KAAK,0BAA0B,oCAAoC,iDAAiD,KAAK,kCAAkC,+CAA+C,KAAK,mCAAmC,oMAAoM,oTAAoT,KAAK,uCAAuC,sBAAsB,wKAAwK,qBAAqB,OAAO,gCAAgC,mGAAmG,oBAAoB,OAAO,yKAAyK,8FAA8F,KAAK,uCAAuC,mHAAmH,6BAA6B,qBAAqB,OAAO,kBAAkB,KAAK,8BAA8B,0BAA0B,0BAA0B,OAAO,+MAA+M,KAAK,kFAAkF,sBAAsB,KAAK,sCAAsC,wKAAwK,oFAAoF,KAAK,wCAAwC,wBAAwB,mCAAmC,4BAA4B,eAAe,YAAY,QAAQ,mEAAmE,kBAAkB,WAAW,SAAS,OAAO,OAAO,0BAA0B,mEAAmE,kBAAkB,WAAW,SAAS,OAAO,mBAAmB,KAAK,iEAAiE,wFAAwF,KAAK,qFAAqF,8BAA8B,4BAA4B,6CAA6C,wGAAwG,SAAS,OAAO,gCAAgC,SAAS,OAAO,mBAAmB,KAAK,0CAA0C,6DAA6D,KAAK,qJAAqJ,sEAAsE,eAAe,SAAS,QAAQ,mCAAmC,OAAO,yBAAyB,qBAAqB,KAAK,kDAAkD,4HAA4H,4GAA4G,YAAY,QAAQ,qDAAqD,mDAAmD,qCAAqC,SAAS,OAAO,uBAAuB,KAAK,mFAAmF,uDAAuD,qHAAqH,8BAA8B,eAAe,YAAY,QAAQ,iDAAiD,kCAAkC,8BAA8B,WAAW,SAAS,qDAAqD,OAAO,4BAA4B,iDAAiD,kCAAkC,8BAA8B,WAAW,SAAS,OAAO,yEAAyE,KAAK,oLAAoL,2BAA2B,8CAA8C,4BAA4B,qBAAqB,iBAAiB,OAAO,iLAAiL,yBAAyB,OAAO,iEAAiE,0BAA0B,mFAAmF,QAAQ,qJAAqJ,qBAAqB,KAAK,oKAAoK,GAAG,2CAA2C,0DAA0D,GAAG,gKAAgK,mEAAmE,GAAG,GAAG,iCAAiC,4SAA4S,8DAA8D,mBAAmB,KAAK,4HAA4H,GAAG,oQAAoQ,yiBAAyiB,sBAAsB,4BAA4B,OAAO,eAAe,KAAK,0CAA0C,uQAAuQ,0CAA0C,aAAa,SAAS,QAAQ,iCAAiC,mBAAmB,SAAS,OAAO,gBAAgB,KAAK,4iCAA4iC,69BAA69B,04BAA04B,oGAAoG,KAAK,4SAA4S,IAAI,uHAAuH,4CAA4C,gaAAga,KAAK,2OAA2O,0BAA0B,4FAA4F,6BAA6B,SAAS,oMAAoM,OAAO,sGAAsG,KAAK,uKAAuK,oBAAoB,KAAK,gEAAgE,iFAAiF,OAAO,QAAQ,wCAAwC,MAAM,oDAAoD,sGAAsG,uHAAuH,GAAG,cAAc,YAAY,wFAAwF,qDAAqD,OAAO,2FAA2F,8CAA8C,mFAAmF,8BAA8B,OAAO,MAAM,GAAG,yDAAyD,6NAA6N,8BAA8B,qLAAqL,uBAAuB,KAAK,oGAAoG,2FAA2F,+BAA+B,OAAO,oCAAoC,+BAA+B,8OAA8O,2DAA2D,oEAAoE,2DAA2D,yMAAyM,uCAAuC,iCAAiC,iBAAiB,eAAe,OAAO,+BAA+B,eAAe,6CAA6C,OAAO,qTAAqT,uCAAuC,+BAA+B,eAAe,aAAa,uCAAuC,uBAAuB,4EAA4E,2BAA2B,wCAAwC,4GAA4G,yEAAyE,2BAA2B,WAAW,SAAS,kLAAkL,mCAAmC,iCAAiC,mCAAmC,wNAAwN,4DAA4D,iIAAiI,0DAA0D,aAAa,OAAO,8DAA8D,aAAa,4FAA4F,8BAA8B,2BAA2B,wEAAwE,aAAa,+CAA+C,qKAAqK,WAAW,gCAAgC,iBAAiB,4GAA4G,6BAA6B,aAAa,qBAAqB,aAAa,UAAU,sCAAsC,kDAAkD,eAAe,aAAa,WAAW,SAAS,OAAO,KAAK,kGAAkG,GAAG,kEAAkE,yBAAyB,wNAAwN,kBAAkB,oCAAoC,yJAAyJ,iFAAiF,OAAO,4CAA4C,KAAK,iBAAiB,GAAG,kEAAkE,SAAS,4DAA4D,yBAAyB,cAAc,GAAG,yDAAyD,SAAS,yFAAyF,kDAAkD,WAAW,wBAAwB,KAAK,YAAY,mBAAmB,KAAK,UAAU,sEAAsE,wCAAwC,OAAO,6CAA6C,KAAK,GAAG,6EAA6E,OAAO,qDAAqD,SAAS,qFAAqF,sDAAsD,qBAAqB,0CAA0C,KAAK,GAAG,8DAA8D,QAAQ,eAAe,QAAQ,iBAAiB,OAAO,yGAAyG,sHAAsH,uEAAuE,kBAAkB,KAAK,6CAA6C,yCAAyC,0BAA0B,oBAAoB,SAAS,OAAO,KAAK,wBAAwB,GAAG,6EAA6E,OAAO,gDAAgD,6BAA6B,6CAA6C,sDAAsD,MAAM,GAAG,yEAAyE,OAAO,iDAAiD,6BAA6B,6CAA6C,+EAA+E,MAAM,GAAG,oFAAoF,QAAQ,6BAA6B,qEAAqE,gIAAgI,8PAA8P,6iBAA6iB,wGAAwG,iDAAiD,2DAA2D,aAAa,OAAO,gDAAgD,aAAa,WAAW,sWAAsW,SAAS,4CAA4C,gQAAgQ,gCAAgC,0CAA0C,OAAO,mFAAmF,MAAM,GAAG,6EAA6E,SAAS,iDAAiD,8CAA8C,2BAA2B,qDAAqD,yGAAyG,iFAAiF,gDAAgD,8CAA8C,WAAW,SAAS,OAAO,EAAE,KAAK,EAAE,GAAG,uEAAuE,gBAAgB,uBAAuB,uBAAuB,8FAA8F,uFAAuF,GAAG,0EAA0E,0CAA0C,eAAe,6CAA6C,QAAQ,qFAAqF,oMAAoM,2EAA2E,IAAI,2FAA2F,eAAe,8EAA8E,OAAO,yFAAyF,2FAA2F,sIAAsI,sBAAsB,KAAK,mDAAmD,uCAAuC,wCAAwC,iPAAiP,wEAAwE,uEAAuE,yCAAyC,oCAAoC,6DAA6D,OAAO,KAAK,iRAAiR,2BAA2B,6CAA6C,KAAK,EAAE,mOAAmO,qDAAqD,oDAAoD,KAAK,EAAE,2GAA2G,8PAA8P,6CAA6C,0FAA0F,KAAK,EAAE,uDAAuD,4CAA4C,wDAAwD,iCAAiC,sDAAsD,UAAU,QAAQ,mDAAmD,kFAAkF,kDAAkD,sCAAsC,SAAS,QAAQ,KAAK,OAAO,6CAA6C,wDAAwD,iCAAiC,gHAAgH,+CAA+C,UAAU,QAAQ,8IAA8I,kFAAkF,6EAA6E,yBAAyB,yFAAyF,8CAA8C,8BAA8B,aAAa,mGAAmG,kBAAkB,2CAA2C,mDAAmD,gDAAgD,gCAAgC,eAAe,aAAa,WAAW,sBAAsB,SAAS,QAAQ,KAAK,mGAAmG,sEAAsE,qDAAqD,6DAA6D,0BAA0B,iDAAiD,SAAS,OAAO,oCAAoC,qMAAqM,uEAAuE,2CAA2C,wCAAwC,+BAA+B,aAAa,WAAW,uBAAuB,SAAS,uBAAuB,QAAQ,2GAA2G,wFAAwF,2DAA2D,OAAO,MAAM,kPAAkP,+UAA+U,wEAAwE,sGAAsG,0cAA0c,+VAA+V,2EAA2E,SAAS,0JAA0J,uFAAuF,SAAS,iKAAiK,iCAAiC,SAAS,2QAA2Q,uCAAuC,SAAS,2OAA2O,uCAAuC,SAAS,OAAO,EAAE,+BAA+B,6HAA6H,oLAAoL,mDAAmD,gEAAgE,uIAAuI,oEAAoE,SAAS,4NAA4N,wDAAwD,SAAS,qKAAqK,gEAAgE,wDAAwD,SAAS,2GAA2G,iCAAiC,OAAO,EAAE,KAAK,kOAAkO,+BAA+B,oKAAoK,+IAA+I,8CAA8C,OAAO,EAAE,KAAK,0EAA0E,oFAAoF,+JAA+J,0MAA0M,+FAA+F,oNAAoN,OAAO,0BAA0B,kBAAkB,wCAAwC,4BAA4B,0BAA0B,aAAa,WAAW,SAAS,qBAAqB,QAAQ,8KAA8K,2DAA2D,4BAA4B,iBAAiB,OAAO,6JAA6J,sBAAsB,uBAAuB,OAAO,qPAAqP,uIAAuI,+KAA+K,oBAAoB,SAAS,gGAAgG,mBAAmB,SAAS,2IAA2I,OAAO,oCAAoC,KAAK,wBAAwB,oEAAoE,4BAA4B,iBAAiB,OAAO,0HAA0H,2FAA2F,2MAA2M,oEAAoE,0BAA0B,oCAAoC,OAAO,uFAAuF,wCAAwC,0BAA0B,OAAO,cAAc,wCAAwC,0BAA0B,OAAO,wFAAwF,YAAY,OAAO,mQAAmQ,MAAM,sBAAsB,IAAI,iDAAiD,gDAAgD,IAAI,qDAAqD,0FAA0F,0BAA0B,KAAK,8GAA8G,+MAA+M,aAAa,6CAA6C,2RAA2R,qBAAqB,SAAS,OAAO,aAAa,KAAK,iEAAiE,IAAI,iDAAiD,gGAAgG,6BAA6B,KAAK,qCAAqC,IAAI,0CAA0C,0FAA0F,0BAA0B,KAAK,gQAAgQ,6NAA6N,IAAI,qCAAqC,0DAA0D,IAAI,oCAAoC,yEAAyE,IAAI,iEAAiE,UAAU,wDAAwD,2DAA2D,sHAAsH,0DAA0D,8BAA8B,2BAA2B,uCAAuC,sCAAsC,mCAAmC,SAAS,OAAO,qBAAqB,6CAA6C,OAAO,KAAK,8HAA8H,qBAAqB,IAAI,gGAAgG,cAAc,yDAAyD,yEAAyE,wBAAwB,4FAA4F,uEAAuE,OAAO,KAAK,kEAAkE,uKAAuK,gCAAgC,OAAO,OAAO,qEAAqE,MAAM,4BAA4B,iCAAiC,SAAS,OAAO,KAAK,+CAA+C,4BAA4B,KAAK,8EAA8E,IAAI,+BAA+B,oIAAoI,eAAe,kBAAkB,cAAc,mCAAmC,eAAe,sBAAsB,eAAe,wCAAwC,eAAe,2BAA2B,KAAK,mBAAmB,mCAAmC,4DAA4D,wKAAwK,sCAAsC,8CAA8C,SAAS,qCAAqC,OAAO,uCAAuC,uYAAuY,qDAAqD,gEAAgE,qCAAqC,WAAW,qPAAqP,0EAA0E,oDAAoD,uBAAuB,mCAAmC,SAAS,uBAAuB,OAAO,wCAAwC,8DAA8D,wDAAwD,sBAAsB,SAAS,mEAAmE,kDAAkD,qEAAqE,ySAAyS,0FAA0F,iDAAiD,SAAS,2HAA2H,OAAO,KAAK,gBAAgB,+CAA+C,sFAAsF,iEAAiE,aAAa,EAAE,8BAA8B,6EAA6E,YAAY,OAAO,2CAA2C,sDAAsD,4LAA4L,gLAAgL,WAAW,EAAE,OAAO,sDAAsD,iCAAiC,iDAAiD,mCAAmC,uCAAuC,WAAW,4BAA4B,wBAAwB,WAAW,2BAA2B,skBAAskB,UAAU,OAAO,mEAAmE,8IAA8I,6GAA6G,qCAAqC,WAAW,8CAA8C,4TAA4T,6BAA6B,kFAAkF,+BAA+B,8BAA8B,kDAAkD,0IAA0I,qCAAqC,qBAAqB,mBAAmB,6JAA6J,iBAAiB,4BAA4B,eAAe,2EAA2E,kHAAkH,2IAA2I,qEAAqE,EAAE,6NAA6N,EAAE,oDAAoD,iEAAiE,+CAA+C,mEAAmE,mMAAmM,+IAA+I,uEAAuE,0BAA0B,mBAAmB,iBAAiB,iBAAiB,OAAO,oGAAoG,4EAA4E,uEAAuE,EAAE,qOAAqO,EAAE,sDAAsD,mEAAmE,mCAAmC,iBAAiB,sJAAsJ,kNAAkN,+KAA+K,6GAA6G,6EAA6E,EAAE,6PAA6P,EAAE,kEAAkE,uBAAuB,8CAA8C,8BAA8B,uBAAuB,qBAAqB,mBAAmB,iBAAiB,eAAe,mGAAmG,mFAAmF,aAAa,YAAY,OAAO,mDAAmD,uaAAua,oLAAoL,gCAAgC,SAAS,kFAAkF,oDAAoD,6HAA6H,wGAAwG,6BAA6B,kDAAkD,+DAA+D,eAAe,aAAa,iCAAiC,yCAAyC,cAAc,SAAS,oBAAoB,OAAO,KAAK,iBAAiB,sFAAsF,8OAA8O,qGAAqG,4GAA4G,iFAAiF,4CAA4C,+CAA+C,eAAe,aAAa,WAAW,6CAA6C,4BAA4B,iDAAiD,8EAA8E,kCAAkC,YAAY,OAAO,sDAAsD,iCAAiC,qDAAqD,UAAU,OAAO,uDAAuD,oDAAoD,iCAAiC,gGAAgG,UAAU,OAAO,2fAA2f,gGAAgG,wDAAwD,SAAS,kEAAkE,iCAAiC,uBAAuB,cAAc,uJAAuJ,kDAAkD,iFAAiF,aAAa,WAAW,2DAA2D,uBAAuB,UAAU,OAAO,8DAA8D,2DAA2D,mDAAmD,OAAO,qCAAqC,gCAAgC,OAAO,sCAAsC,8IAA8I,OAAO,uKAAuK,yMAAyM,0GAA0G,OAAO,yCAAyC,sIAAsI,wCAAwC,SAAS,wCAAwC,OAAO,uDAAuD,6HAA6H,UAAU,2DAA2D,2BAA2B,yHAAyH,MAAM,4BAA4B,oCAAoC,yBAAyB,WAAW,SAAS,oBAAoB,OAAO,uCAAuC,gDAAgD,OAAO,mEAAmE,6CAA6C,OAAO,sCAAsC,6CAA6C,OAAO,uCAAuC,+CAA+C,qFAAqF,OAAO,qCAAqC,iBAAiB,qTAAqT,OAAO,sFAAsF,qBAAqB,OAAO,6EAA6E,8BAA8B,OAAO,qFAAqF,+DAA+D,OAAO,6EAA6E,kBAAkB,eAAe,YAAY,WAAW,iCAAiC,SAAS,4BAA4B,OAAO,4EAA4E,kBAAkB,eAAe,YAAY,WAAW,iCAAiC,SAAS,4BAA4B,OAAO,qFAAqF,4DAA4D,eAAe,UAAU,IAAI,iCAAiC,SAAS,4BAA4B,OAAO,qFAAqF,4DAA4D,eAAe,cAAc,IAAI,iCAAiC,SAAS,4BAA4B,OAAO,MAAM,IAAI,iDAAiD,kDAAkD,uEAAuE,IAAI,+CAA+C,GAAG,cAAc,4BAA4B,IAAI,gDAAgD,GAAG,qEAAqE,qDAAqD,qCAAqC,kEAAkE,mHAAmH,qBAAqB,+CAA+C,KAAK,uBAAuB,gBAAgB,gCAAgC,uBAAuB,uFAAuF,sBAAsB,6GAA6G,SAAS,qCAAqC,OAAO,wBAAwB,yEAAyE,gCAAgC,qBAAqB,mIAAmI,EAAE,8CAA8C,OAAO,qDAAqD,qIAAqI,kCAAkC,uBAAuB,uFAAuF,EAAE,gDAAgD,SAAS,OAAO,yBAAyB,cAAc,OAAO,KAAK,mSAAmS,IAAI,mCAAmC,8DAA8D,WAAW,SAAS,QAAQ,kCAAkC,KAAK,oBAAoB,GAAG,yDAAyD,kKAAkK,8HAA8H,wCAAwC,0DAA0D,iDAAiD,WAAW,SAAS,qBAAqB,OAAO,gGAAgG,yFAAyF,wHAAwH,0CAA0C,4DAA4D,oDAAoD,4BAA4B,eAAe,aAAa,WAAW,SAAS,OAAO,0CAA0C,4DAA4D,mEAAmE,EAAE,sMAAsM,EAAE,qEAAqE,2CAA2C,eAAe,wHAAwH,6IAA6I,eAAe,OAAO,8HAA8H,8CAA8C,8GAA8G,8BAA8B,iBAAiB,eAAe,aAAa,WAAW,SAAS,qBAAqB,QAAQ,GAAG,yCAAyC,sEAAsE,gCAAgC,uBAAuB,qDAAqD,yBAAyB,WAAW,SAAS,oBAAoB,OAAO,oBAAoB,GAAG,8DAA8D,0CAA0C,WAAW,SAAS,QAAQ,+CAA+C,KAAK,mBAAmB,GAAG,+DAA+D,yGAAyG,aAAa,SAAS,QAAQ,oCAAoC,wDAAwD,oCAAoC,yBAAyB,0BAA0B,WAAW,SAAS,OAAO,KAAK,0BAA0B,GAAG,+FAA+F,iDAAiD,4CAA4C,KAAK,iDAAiD,0DAA0D,KAAK,iEAAiE,+1BAA+1B,qDAAqD,uDAAuD,OAAO,oDAAoD,+CAA+C,6CAA6C,+FAA+F,uBAAuB,mCAAmC,yEAAyE,WAAW,SAAS,OAAO,qBAAqB,wCAAwC,6BAA6B,sHAAsH,kCAAkC,2BAA2B,6CAA6C,2HAA2H,eAAe,aAAa,6DAA6D,WAAW,mHAAmH,yBAAyB,wHAAwH,qDAAqD,aAAa,WAAW,SAAS,wEAAwE,OAAO,iKAAiK,2BAA2B,uDAAuD,SAAS,OAAO,4CAA4C,SAAS,OAAO,KAAK,EAAE,GAAG,0CAA0C,6WAA6W,qCAAqC,OAAO,oFAAoF,kDAAkD,OAAO,8EAA8E,uOAAuO,8EAA8E,mBAAmB,OAAO,GAAG,aAAa,SAAS,QAAQ,0DAA0D,0EAA0E,OAAO,OAAO,iFAAiF,+FAA+F,2FAA2F,iBAAiB,SAAS,QAAQ,oDAAoD,oBAAoB,aAAa,WAAW,kQAAkQ,uDAAuD,2PAA2P,SAAS,iCAAiC,OAAO,KAAK,wCAAwC,GAAG,uEAAuE,6JAA6J,igBAAigB,4BAA4B,0EAA0E,SAAS,6JAA6J,yDAAyD,wCAAwC,QAAQ,oCAAoC,kBAAkB,gEAAgE,kCAAkC,oCAAoC,aAAa,wDAAwD,+DAA+D,qCAAqC,sBAAsB,eAAe,aAAa,8BAA8B,sCAAsC,aAAa,WAAW,+EAA+E,8GAA8G,6BAA6B,aAAa,8FAA8F,qCAAqC,aAAa,WAAW,SAAS,8JAA8J,kiBAAkiB,gBAAgB,kDAAkD,2DAA2D,WAAW,yBAAyB,iHAAiH,6BAA6B,yDAAyD,sDAAsD,iBAAiB,eAAe,aAAa,4HAA4H,WAAW,iFAAiF,mNAAmN,2CAA2C,WAAW,SAAS,0FAA0F,kCAAkC,2CAA2C,SAAS,2BAA2B,QAAQ,2EAA2E,GAAG,oFAAoF,6GAA6G,sBAAsB,+GAA+G,qCAAqC,OAAO,uBAAuB,qBAAqB,+CAA+C,kCAAkC,qCAAqC,SAAS,OAAO,yCAAyC,SAAS,OAAO,yIAAyI,0EAA0E,KAAK,kBAAkB,IAAI,iHAAiH,gBAAgB,oGAAoG,QAAQ,qBAAqB,MAAM,uBAAuB,MAAM,wHAAwH,iLAAiL,8BAA8B,0KAA0K,iHAAiH,+JAA+J,8GAA8G,yBAAyB,yBAAyB,yFAAyF,uBAAuB,uCAAuC,SAAS,mEAAmE,OAAO,iIAAiI,qBAAqB,0BAA0B,8FAA8F,gBAAgB,SAAS,2CAA2C,0QAA0Q,4GAA4G,2DAA2D,8BAA8B,0CAA0C,6BAA6B,aAAa,oBAAoB,WAAW,SAAS,OAAO,KAAK,qWAAqW,mBAAmB,IAAI,oIAAoI,uJAAuJ,8DAA8D,gLAAgL,mIAAmI,GAAG,EAAE,0KAA0K,wCAAwC,2DAA2D,GAAG,KAAK,0EAA0E,qBAAqB,kFAAkF,OAAO,KAAK,EAAE,GAAG,mIAAmI,gCAAgC,kDAAkD,4DAA4D,GAAG,KAAK,yDAAyD,kEAAkE,iCAAiC,OAAO,KAAK,EAAE,GAAG,qHAAqH,iDAAiD,GAAG,KAAK,wDAAwD,cAAc,qBAAqB,qKAAqK,OAAO,KAAK,EAAE,GAAG,kBAAkB,KAAK,YAAY,6BAA6B,iCAAiC,8DAA8D,wDAAwD,+BAA+B,iCAAiC,oCAAoC,wCAAwC,kDAAkD,0DAA0D,+DAA+D,kCAAkC,uDAAuD,gBAAgB,SAAS,6BAA6B,OAAO,KAAK,mBAAmB,IAAI,0CAA0C,qBAAqB,aAAa,GAAG,sBAAsB,6CAA6C,0BAA0B,OAAO,KAAK,qBAAqB,IAAI,yDAAyD,yCAAyC,iFAAiF,MAAM,wGAAwG,2CAA2C,8GAA8G,2CAA2C,yDAAyD,yDAAyD,OAAO,GAAG,KAAK,sDAAsD,sDAAsD,8CAA8C,OAAO,GAAG,KAAK,qGAAqG,sDAAsD,gEAAgE,OAAO,GAAG,KAAK,qHAAqH,uDAAuD,KAAK,2HAA2H,oDAAoD,qFAAqF,KAAK,GAAG,GAAG,kDAAkD,0BAA0B,kBAAkB,sCAAsC,KAAK,wDAAwD,uEAAuE,KAAK,8EAA8E,iCAAiC,KAAK,KAAK,IAAI,uBAAuB,gCAAgC,+DAA+D,+CAA+C,sEAAsE,sBAAsB,SAAS,QAAQ,uDAAuD,0BAA0B,aAAa,WAAW,SAAS,KAAK,OAAO,mCAAmC,oBAAoB,SAAS,QAAQ,gDAAgD,OAAO,wDAAwD,KAAK,mCAAmC,qEAAqE,KAAK,gCAAgC,oEAAoE,KAAK,+BAA+B,mXAAmX,KAAK,GAAG,GAAG,ocAAoc,sBAAsB,mFAAmF,oBAAoB,OAAO,4IAA4I,2EAA2E,+HAA+H,0IAA0I,WAAW,OAAO,8CAA8C,SAAS,wHAAwH,uEAAuE,yEAAyE,kVAAkV,4HAA4H,wCAAwC,uIAAuI,oDAAoD,wEAAwE,OAAO,uDAAuD,iBAAiB,eAAe,aAAa,0BAA0B,wCAAwC,OAAO,yDAAyD,2BAA2B,oGAAoG,8BAA8B,aAAa,wBAAwB,WAAW,6CAA6C,yCAAyC,sDAAsD,4GAA4G,OAAO,8DAA8D,SAAS,uCAAuC,gCAAgC,6BAA6B,wBAAwB,oBAAoB,yEAAyE,4CAA4C,kKAAkK,OAAO,kDAAkD,MAAM,uGAAuG,qEAAqE,qKAAqK,iFAAiF,uBAAuB,6BAA6B,sEAAsE,wCAAwC,kBAAkB,eAAe,OAAO,QAAQ,wDAAwD,wBAAwB,WAAW,SAAS,OAAO,GAAG,KAAK,gDAAgD,kJAAkJ,gIAAgI,eAAe,OAAO,QAAQ,gCAAgC,wBAAwB,yBAAyB,mSAAmS,oCAAoC,oBAAoB,aAAa,WAAW,SAAS,OAAO,6FAA6F,KAAK,0FAA0F,kEAAkE,0FAA0F,OAAO,qEAAqE,yDAAyD,OAAO,yMAAyM,KAAK,2CAA2C,wIAAwI,KAAK,sCAAsC,6GAA6G,KAAK,GAAG,GAAG,kCAAkC,2DAA2D,eAAe,GAAG,kBAAkB,8BAA8B,mCAAmC,8DAA8D,KAAK,gCAAgC,yCAAyC,KAAK,+CAA+C,gDAAgD,KAAK,6BAA6B,8CAA8C,KAAK,6BAA6B,kDAAkD,KAAK,gCAAgC,0CAA0C,KAAK,gCAAgC,8CAA8C,KAAK,4CAA4C,iDAAiD,KAAK,4CAA4C,qDAAqD,KAAK,iCAAiC,8CAA8C,sBAAsB,KAAK,iCAAiC,yCAAyC,KAAK,iCAAiC,+CAA+C,0CAA0C,WAAW,sOAAsO,0CAA0C,WAAW,uDAAuD,KAAK,GAAG,wBAAwB,qDAAqD,kDAAkD,+CAA+C,yBAAyB,OAAO,2DAA2D,qDAAqD,OAAO,gCAAgC,wEAAwE,uCAAuC,SAAS,sGAAsG,4BAA4B,SAAS,OAAO,yCAAyC,MAAM,GAAG,GAAG,mDAAmD,2GAA2G,oBAAoB,4EAA4E,4BAA4B,KAAK,GAAG,kBAAkB,GAAG,+2BAA+2B,gNAAgN,YAAY,8fAA8f,0EAA0E,uJAAuJ,eAAe,cAAc,qBAAqB,iCAAiC,iDAAiD,qLAAqL,kHAAkH,6BAA6B,aAAa,WAAW,SAAS,kFAAkF,yBAAyB,SAAS,yBAAyB,0EAA0E,+FAA+F,sBAAsB,yDAAyD,OAAO,wBAAwB,WAAW,SAAS,OAAO,iDAAiD,6FAA6F,uBAAuB,qHAAqH,4CAA4C,mCAAmC,aAAa,sCAAsC,qDAAqD,iDAAiD,8DAA8D,qCAAqC,mBAAmB,iBAAiB,qEAAqE,uEAAuE,iBAAiB,eAAe,GAAG,aAAa,gBAAgB,wCAAwC,qBAAqB,aAAa,WAAW,sBAAsB,SAAS,yEAAyE,sDAAsD,sBAAsB,2EAA2E,sCAAsC,mFAAmF,8BAA8B,eAAe,aAAa,WAAW,GAAG,sBAAsB,SAAS,0KAA0K,8FAA8F,SAAS,2EAA2E,uBAAuB,sBAAsB,WAAW,sBAAsB,SAAS,yJAAyJ,8BAA8B,+BAA+B,sBAAsB,SAAS,+BAA+B,uBAAuB,SAAS,8KAA8K,8BAA8B,qCAAqC,iCAAiC,WAAW,sBAAsB,SAAS,6BAA6B,0BAA0B,SAAS,kHAAkH,0BAA0B,8BAA8B,iEAAiE,+BAA+B,4BAA4B,qBAAqB,aAAa,WAAW,sBAAsB,SAAS,uFAAuF,2CAA2C,sBAAsB,SAAS,wGAAwG,yBAAyB,SAAS,QAAQ,kBAAkB,IAAI,8BAA8B,aAAa,GAAG,0BAA0B,aAAa,GAAG,4DAA4D,eAAe,WAAW,kJAAkJ,4DAA4D,iCAAiC,oEAAoE,8CAA8C,qCAAqC,OAAO,iRAAiR,OAAO,sNAAsN,kBAAkB,oKAAoK,KAAK,GAAG,oBAAoB,kCAAkC,ikBAAikB,6BAA6B,yBAAyB,WAAW,+BAA+B,yDAAyD,wBAAwB,WAAW,sCAAsC,4CAA4C,WAAW,uGAAuG,gCAAgC,4DAA4D,yDAAyD,+KAA+K,mDAAmD,sCAAsC,8CAA8C,uCAAuC,8CAA8C,sCAAsC,qDAAqD,mEAAmE,4EAA4E,sLAAsL,mBAAmB,OAAO,0JAA0J,mBAAmB,iBAAiB,GAAG,eAAe,GAAG,yBAAyB,aAAa,aAAa,WAAW,kEAAkE,6BAA6B,mEAAmE,iCAAiC,8GAA8G,uCAAuC,8NAA8N,6BAA6B,qBAAqB,6DAA6D,iLAAiL,0EAA0E,qBAAqB,ymBAAymB,yGAAyG,qHAAqH,mPAAmP,qGAAqG,OAAO,wGAAwG,uWAAuW,uBAAuB,8EAA8E,OAAO,sLAAsL,yCAAyC,4CAA4C,uBAAuB,0KAA0K,qBAAqB,mBAAmB,yLAAyL,2BAA2B,qCAAqC,uBAAuB,cAAc,gEAAgE,4GAA4G,yBAAyB,qPAAqP,iMAAiM,6CAA6C,yCAAyC,2BAA2B,8DAA8D,yBAAyB,uBAAuB,sBAAsB,mQAAmQ,4BAA4B,iBAAiB,OAAO,qNAAqN,wEAAwE,mBAAmB,+CAA+C,iBAAiB,gBAAgB,aAAa,4DAA4D,+UAA+U,4SAA4S,wSAAwS,aAAa,aAAa,WAAW,6JAA6J,yEAAyE,WAAW,SAAS,uBAAuB,qFAAqF,iEAAiE,qJAAqJ,qDAAqD,2CAA2C,gIAAgI,aAAa,oNAAoN,SAAS,0IAA0I,2CAA2C,2BAA2B,0CAA0C,4BAA4B,yCAAyC,2BAA2B,6CAA6C,+FAA+F,sBAAsB,UAAU,uMAAuM,OAAO,GAAG,wEAAwE,oDAAoD,wCAAwC,OAAO,0CAA0C,KAAK,4DAA4D,2aAA2a,oCAAoC,wCAAwC,wFAAwF,qCAAqC,mEAAmE,aAAa,YAAY,UAAU,oGAAoG,8GAA8G,kMAAkM,iCAAiC,SAAS,OAAO,iGAAiG,yEAAyE,OAAO,gCAAgC,KAAK,GAAG,GAAG,sNAAsN,8DAA8D,uMAAuM,iGAAiG,KAAK,IAAI,qDAAqD,mCAAmC,kBAAkB,KAAK,GAAG,IAAI,+EAA+E,sCAAsC,+NAA+N,uCAAuC,OAAO,GAAG,kBAAkB,IAAI,oBAAoB,2QAA2Q,oIAAoI,eAAe,OAAO,qEAAqE,kIAAkI,eAAe,OAAO,uGAAuG,KAAK,GAAG,GAAG,uCAAuC,8EAA8E,oEAAoE,sDAAsD,mBAAmB,GAAG,iUAAiU,uHAAuH,KAAK,OAAO,sGAAsG,8GAA8G,GAAG,mNAAmN,gEAAgE,uEAAuE,uBAAuB,wBAAwB,8DAA8D,OAAO,4BAA4B,kCAAkC,uBAAuB,4CAA4C,mBAAmB,OAAO,qBAAqB,2EAA2E,kCAAkC,oBAAoB,8DAA8D,OAAO,oBAAoB,6CAA6C,sDAAsD,YAAY,SAAS,OAAO,mBAAmB,eAAe,SAAS,QAAQ,4IAA4I,SAAS,OAAO,KAAK,wBAAwB,mBAAmB,KAAK,8BAA8B,8BAA8B,KAAK,oDAAoD,IAAI,sCAAsC,8MAA8M,IAAI,2BAA2B,+CAA+C,GAAG,iBAAiB,sBAAsB,gCAAgC,gGAAgG,kDAAkD,mBAAmB,8LAA8L,2IAA2I,0CAA0C,qLAAqL,OAAO,yDAAyD,wEAAwE,GAAG,WAAW,SAAS,OAAO,qBAAqB,KAAK,0CAA0C,mDAAmD,iIAAiI,kDAAkD,6BAA6B,aAAa,cAAc,OAAO,6FAA6F,2DAA2D,SAAS,OAAO,mBAAmB,KAAK,kCAAkC,8LAA8L,KAAK,4CAA4C,odAAod,wCAAwC,OAAO,2PAA2P,qLAAqL,KAAK,qCAAqC,kDAAkD,oCAAoC,eAAe,OAAO,kCAAkC,iGAAiG,kJAAkJ,SAAS,OAAO,wCAAwC,6NAA6N,SAAS,yBAAyB,yBAAyB,mCAAmC,SAAS,OAAO,sHAAsH,yRAAyR,4CAA4C,SAAS,OAAO,uCAAuC,SAAS,OAAO,KAAK,iCAAiC,wCAAwC,mEAAmE,KAAK,IAAI,4BAA4B,8BAA8B,wjBAAwjB,YAAY,8CAA8C,8BAA8B,8BAA8B,kBAAkB,KAAK,iCAAiC,mBAAmB,KAAK,gCAAgC,kBAAkB,KAAK,mGAAmG,mBAAmB,KAAK,kCAAkC,gCAAgC,KAAK,kBAAkB,GAAG,0CAA0C,aAAa,2JAA2J,0EAA0E,uCAAuC,2CAA2C,aAAa,iCAAiC,SAAS,eAAe,wGAAwG,OAAO,OAAO,yBAAyB,OAAO,KAAK,gBAAgB,GAAG,oBAAoB,+BAA+B,kEAAkE,KAAK,2CAA2C,iDAAiD,KAAK,2CAA2C,oCAAoC,KAAK,6LAA6L,iDAAiD,KAAK,4CAA4C,oCAAoC,KAAK,GAAG,GAAG,uBAAuB,kCAAkC,yFAAyF,0DAA0D,4BAA4B,sCAAsC,mFAAmF,6BAA6B,2BAA2B,+HAA+H,uCAAuC,wDAAwD,6DAA6D,uDAAuD,iBAAiB,eAAe,aAAa,yDAAyD,WAAW,SAAS,sBAAsB,OAAO,uEAAuE,sCAAsC,oCAAoC,SAAS,GAAG,OAAO,gDAAgD,iBAAiB,2YAA2Y,kJAAkJ,qCAAqC,wBAAwB,WAAW,+HAA+H,qCAAqC,wBAAwB,WAAW,iFAAiF,SAAS,2DAA2D,4FAA4F,SAAS,GAAG,OAAO,kDAAkD,KAAK,oCAAoC,oCAAoC,qCAAqC,OAAO,GAAG,KAAK,GAAG,GAAG,sBAAsB,yCAAyC,gBAAgB,qBAAqB,8CAA8C,2CAA2C,kGAAkG,kDAAkD,4EAA4E,WAAW,OAAO,+BAA+B,WAAW,SAAS,2BAA2B,OAAO,KAAK,wCAAwC,4BAA4B,yLAAyL,uCAAuC,UAAU,+GAA+G,2BAA2B,sBAAsB,OAAO,mBAAmB,wIAAwI,0CAA0C,SAAS,4EAA4E,qCAAqC,OAAO,sCAAsC,2BAA2B,OAAO,KAAK,uHAAuH,sCAAsC,uEAAuE,oEAAoE,6DAA6D,SAAS,SAAS,GAAG,KAAK,GAAG,GAAG,uBAAuB,mCAAmC,qBAAqB,2CAA2C,oBAAoB,sBAAsB,iBAAiB,OAAO,0CAA0C,+CAA+C,OAAO,gFAAgF,uDAAuD,uFAAuF,qEAAqE,yCAAyC,WAAW,SAAS,GAAG,KAAK,gCAAgC,oCAAoC,qCAAqC,OAAO,GAAG,KAAK,mCAAmC,8CAA8C,KAAK,gJAAgJ,gJAAgJ,+BAA+B,wDAAwD,WAAW,UAAU,2CAA2C,mBAAmB,yBAAyB,OAAO,4BAA4B,uBAAuB,mEAAmE,iCAAiC,kBAAkB,mCAAmC,SAAS,OAAO,gBAAgB,kCAAkC,KAAK,GAAG,GAAG,kEAAkE,mFAAmF,mEAAmE,mDAAmD,0EAA0E,8EAA8E,+aAA+a,MAAM,0DAA0D,iCAAiC,sFAAsF,uCAAuC,2CAA2C,KAAK,+CAA+C,2DAA2D,uCAAuC,KAAK,iBAAiB,IAAI,+DAA+D,0GAA0G,6BAA6B,SAAS,sBAAsB,gDAAgD,SAAS,+UAA+U,2DAA2D,qFAAqF,gGAAgG,oGAAoG,YAAY,uMAAuM,2EAA2E,yDAAyD,6JAA6J,wGAAwG,KAAK,yBAAyB,sDAAsD,mLAAmL,oBAAoB,0BAA0B,oCAAoC,6BAA6B,OAAO,KAAK,oBAAoB,GAAG,iCAAiC,wCAAwC,yHAAyH,sBAAsB,qBAAqB,KAAK,mEAAmE,8CAA8C,0CAA0C,mCAAmC,0BAA0B,KAAK,4CAA4C,qBAAqB,GAAG,yCAAyC,uFAAuF,gFAAgF,gBAAgB,YAAY,+BAA+B,0BAA0B,iBAAiB,OAAO,qCAAqC,mBAAmB,0QAA0Q,sEAAsE,mCAAmC,sCAAsC,WAAW,SAAS,0EAA0E,sDAAsD,SAAS,OAAO,OAAO,qCAAqC,qCAAqC,mGAAmG,SAAS,OAAO,KAAK,sGAAsG,gBAAgB,YAAY,sCAAsC,0DAA0D,OAAO,KAAK,sBAAsB,GAAG,uBAAuB,sBAAsB,oCAAoC,KAAK,uBAAuB,8BAA8B,KAAK,gCAAgC,2CAA2C,iDAAiD,OAAO,sCAAsC,2CAA2C,gCAAgC,SAAS,OAAO,gCAAgC,SAAS,OAAO,GAAG,KAAK,GAAG,GAAG,mDAAmD,+DAA+D,uDAAuD,iFAAiF,giBAAgiB,+DAA+D,uFAAuF,0BAA0B,uCAAuC,iIAAiI,oEAAoE,yDAAyD,OAAO,gEAAgE,qDAAqD,OAAO,OAAO,eAAe,KAAK,mEAAmE,8CAA8C,KAAK,iBAAiB,GAAG,sGAAsG,qCAAqC,aAAa,OAAO,QAAQ,6IAA6I,KAAK,GAAG,6BAA6B,EAAE,2EAA2E,gJAAgJ,aAAa,OAAO,QAAQ,wBAAwB,mCAAmC,kFAAkF,2LAA2L,uDAAuD,kCAAkC,uDAAuD,iDAAiD,OAAO,gFAAgF,mIAAmI,oDAAoD,+EAA+E,oFAAoF,yBAAyB,gCAAgC,WAAW,0KAA0K,mFAAmF,8FAA8F,SAAS,OAAO,KAAK,qEAAqE,YAAY,uCAAuC,wIAAwI,wBAAwB,+BAA+B,SAAS,iBAAiB,OAAO,+DAA+D,4FAA4F,oEAAoE,6BAA6B,OAAO,oDAAoD,cAAc,yCAAyC,wDAAwD,iCAAiC,WAAW,SAAS,OAAO,KAAK,sBAAsB,GAAG,oBAAoB,6KAA6K,+OAA+O,mDAAmD,0CAA0C,+BAA+B,6LAA6L,qJAAqJ,4EAA4E,GAAG,KAAK,iDAAiD,iJAAiJ,2BAA2B,gBAAgB,GAAG,4BAA4B,iBAAiB,GAAG,wFAAwF,SAAS,oCAAoC,KAAK,gBAAgB,EAAE,GAAG,yDAAyD,qBAAqB,qFAAqF,wFAAwF,mEAAmE,6BAA6B,OAAO,6BAA6B,6DAA6D,OAAO,kBAAkB,KAAK,yCAAyC,4CAA4C,kCAAkC,KAAK,yBAAyB,6CAA6C,sDAAsD,yBAAyB,OAAO,OAAO,kDAAkD,wBAAwB,6BAA6B,OAAO,KAAK,yBAAyB,uBAAuB,KAAK,kBAAkB,kBAAkB,KAAK,wBAAwB,kBAAkB,8BAA8B,8FAA8F,+CAA+C,QAAQ,yHAAyH,KAAK,kCAAkC,0DAA0D,KAAK,GAAG,GAAG,8KAA8K,gBAAgB,8DAA8D,qKAAqK,gHAAgH,eAAe,OAAO,2GAA2G,8BAA8B,sCAAsC,wCAAwC,OAAO,4LAA4L,iEAAiE,OAAO,+GAA+G,qCAAqC,OAAO,gIAAgI,sCAAsC,OAAO,iDAAiD,uDAAuD,mSAAmS,UAAU,OAAO,yHAAyH,uBAAuB,qBAAqB,sDAAsD,mCAAmC,gEAAgE,+FAA+F,mBAAmB,SAAS,gJAAgJ,sKAAsK,0GAA0G,0FAA0F,sSAAsS,gBAAgB,2GAA2G,yCAAyC,qCAAqC,uMAAuM,4CAA4C,yDAAyD,aAAa,WAAW,SAAS,8BAA8B,8CAA8C,4CAA4C,kDAAkD,WAAW,SAAS,2FAA2F,oEAAoE,SAAS,OAAO,qCAAqC,SAAS,8HAA8H,OAAO,OAAO,+HAA+H,qLAAqL,2DAA2D,eAAe,OAAO,iDAAiD,uFAAuF,uBAAuB,qBAAqB,sDAAsD,mCAAmC,gEAAgE,qGAAqG,kCAAkC,oFAAoF,WAAW,mBAAmB,SAAS,uDAAuD,8EAA8E,wCAAwC,0HAA0H,2EAA2E,uBAAuB,oCAAoC,wTAAwT,oCAAoC,yCAAyC,uCAAuC,aAAa,mCAAmC,qDAAqD,aAAa,WAAW,SAAS,sOAAsO,uHAAuH,gEAAgE,WAAW,kCAAkC,SAAS,OAAO,0GAA0G,mDAAmD,OAAO,KAAK,0CAA0C,sHAAsH,gKAAgK,kFAAkF,uGAAuG,oBAAoB,sBAAsB,QAAQ,mCAAmC,OAAO,oCAAoC,2KAA2K,eAAe,OAAO,sGAAsG,+BAA+B,yDAAyD,oFAAoF,2CAA2C,gBAAgB,8GAA8G,oQAAoQ,0CAA0C,wCAAwC,wEAAwE,0EAA0E,wCAAwC,uDAAuD,uCAAuC,wCAAwC,eAAe,aAAa,WAAW,SAAS,OAAO,4FAA4F,iDAAiD,OAAO,4BAA4B,KAAK,8CAA8C,mKAAmK,0iBAA0iB,iBAAiB,cAAc,iCAAiC,oOAAoO,iCAAiC,kCAAkC,wBAAwB,mBAAmB,QAAQ,wCAAwC,0HAA0H,8DAA8D,4LAA4L,eAAe,8CAA8C,kDAAkD,eAAe,aAAa,2CAA2C,kCAAkC,uCAAuC,GAAG,aAAa,WAAW,SAAS,OAAO,uEAAuE,8CAA8C,4BAA4B,uDAAuD,GAAG,OAAO,4BAA4B,KAAK,wCAAwC,4DAA4D,oHAAoH,uCAAuC,kDAAkD,aAAa,WAAW,wBAAwB,uCAAuC,kDAAkD,aAAa,WAAW,mCAAmC,8CAA8C,0HAA0H,GAAG,SAAS,OAAO,GAAG,KAAK,uCAAuC,+GAA+G,KAAK,iBAAiB,aAAa,0GAA0G,eAAe,yGAAyG,6DAA6D,yBAAyB,yBAAyB,WAAW,SAAS,yCAAyC,cAAc,6BAA6B,4DAA4D,wBAAwB,yBAAyB,WAAW,SAAS,0CAA0C,eAAe,wGAAwG,0FAA0F,yBAAyB,yBAAyB,WAAW,SAAS,qHAAqH,iDAAiD,SAAS,OAAO,wBAAwB,yCAAyC,8KAA8K,2DAA2D,WAAW,SAAS,OAAO,KAAK,IAAI,yDAAyD,qFAAqF,+CAA+C,KAAK,IAAI,2CAA2C,oGAAoG,4CAA4C,KAAK,iDAAiD,+BAA+B,2BAA2B,sHAAsH,wPAAwP,mPAAmP,+CAA+C,6CAA6C,wBAAwB,OAAO,sBAAsB,KAAK,mFAAmF,mCAAmC,KAAK,wHAAwH,2DAA2D,IAAI,8MAA8M,gNAAgN,iCAAiC,6CAA6C,uCAAuC,2BAA2B,OAAO,KAAK,kCAAkC,iCAAiC,+CAA+C,uCAAuC,4BAA4B,OAAO,KAAK,2CAA2C,iCAAiC,wDAAwD,uCAAuC,qCAAqC,OAAO,+BAA+B,KAAK,IAAI,uGAAuG,0jBAA0jB,gCAAgC,qGAAqG,uEAAuE,OAAO,2CAA2C,cAAc,iGAAiG,2BAA2B,mBAAmB,SAAS,6BAA6B,mBAAmB,SAAS,6BAA6B,mBAAmB,SAAS,mBAAmB,OAAO,2BAA2B,KAAK,GAAG,yBAAyB,4QAA4Q,wKAAwK,gIAAgI,yBAAyB,oCAAoC,+EAA+E,sHAAsH,0PAA0P,0CAA0C,2DAA2D,2BAA2B,SAAS,mBAAmB,OAAO,MAAM,GAAG,GAAG,uBAAuB,iDAAiD,mDAAmD,KAAK,iDAAiD,sDAAsD,KAAK,2CAA2C,0BAA0B,+DAA+D,mFAAmF,yOAAyO,oBAAoB,OAAO,0CAA0C,yEAAyE,oDAAoD,SAAS,oBAAoB,OAAO,qEAAqE,mDAAmD,6BAA6B,OAAO,2BAA2B,yBAAyB,OAAO,oCAAoC,yDAAyD,OAAO,GAAG,KAAK,GAAG,GAAG,wpBAAwpB,mHAAmH,2HAA2H,uDAAuD,KAAK,kBAAkB,GAAG,wHAAwH,+EAA+E,gBAAgB,GAAG,kCAAkC,oDAAoD,oBAAoB,6BAA6B,KAAK,OAAO,uCAAuC,KAAK,kBAAkB,GAAG,0CAA0C,mEAAmE,kCAAkC,aAAa,KAAK,yFAAyF,wCAAwC,gDAAgD,+BAA+B,uBAAuB,+BAA+B,6BAA6B,kCAAkC,iDAAiD,OAAO,QAAQ,gEAAgE,WAAW,SAAS,OAAO,KAAK,8DAA8D,wCAAwC,kCAAkC,aAAa,uCAAuC,KAAK,GAAG,uEAAuE,+CAA+C,uJAAuJ,iCAAiC,oGAAoG,kEAAkE,2CAA2C,KAAK,GAAG,8DAA8D,sEAAsE,+LAA+L,yMAAyM,iDAAiD,0CAA0C,2BAA2B,6DAA6D,SAAS,kDAAkD,OAAO,GAAG,KAAK,gBAAgB,kGAAkG,kCAAkC,iDAAiD,yBAAyB,OAAO,8HAA8H,8EAA8E,oCAAoC,+LAA+L,OAAO,QAAQ,0BAA0B,mCAAmC,oDAAoD,uGAAuG,oMAAoM,aAAa,WAAW,sDAAsD,SAAS,6BAA6B,4DAA4D,8EAA8E,4FAA4F,gBAAgB,QAAQ,gCAAgC,gKAAgK,iCAAiC,2HAA2H,8CAA8C,iBAAiB,eAAe,OAAO,+EAA+E,eAAe,aAAa,WAAW,SAAS,OAAO,KAAK,wBAAwB,GAAG,iDAAiD,yFAAyF,aAAa,+BAA+B,QAAQ,+CAA+C,2CAA2C,OAAO,gCAAgC,wEAAwE,sDAAsD,SAAS,4CAA4C,OAAO,KAAK,kBAAkB,GAAG,oBAAoB,qCAAqC,sDAAsD,KAAK,kEAAkE,8IAA8I,8JAA8J,wIAAwI,qCAAqC,8CAA8C,OAAO,QAAQ,0DAA0D,SAAS,OAAO,qFAAqF,kCAAkC,sDAAsD,yDAAyD,gDAAgD,OAAO,QAAQ,kEAAkE,WAAW,SAAS,OAAO,wCAAwC,SAAS,OAAO,8FAA8F,sCAAsC,6EAA6E,OAAO,mDAAmD,KAAK,qCAAqC,gFAAgF,eAAe,qCAAqC,QAAQ,mCAAmC,sDAAsD,gCAAgC,2CAA2C,wCAAwC,oDAAoD,gGAAgG,OAAO,gEAAgE,iBAAiB,eAAe,aAAa,oKAAoK,WAAW,2CAA2C,oKAAoK,WAAW,SAAS,OAAO,KAAK,GAAG,GAAG,uBAAuB,kCAAkC,4CAA4C,KAAK,qCAAqC,sCAAsC,KAAK,gCAAgC,8CAA8C,4GAA4G,uFAAuF,uCAAuC,aAAa,WAAW,GAAG,OAAO,kCAAkC,KAAK,2BAA2B,0DAA0D,mFAAmF,wDAAwD,qCAAqC,SAAS,OAAO,GAAG,KAAK,4BAA4B,0DAA0D,mFAAmF,wDAAwD,yDAAyD,SAAS,OAAO,GAAG,KAAK,2BAA2B,0DAA0D,gCAAgC,qDAAqD,SAAS,OAAO,GAAG,KAAK,0BAA0B,0DAA0D,gCAAgC,iEAAiE,SAAS,OAAO,GAAG,KAAK,0BAA0B,6BAA6B,eAAe,8BAA8B,QAAQ,oCAAoC,uFAAuF,2EAA2E,SAAS,OAAO,oBAAoB,KAAK,4DAA4D,oEAAoE,wFAAwF,qCAAqC,sEAAsE,OAAO,GAAG,KAAK,gCAAgC,8CAA8C,kCAAkC,2CAA2C,6DAA6D,gCAAgC,SAAS,oOAAoO,kDAAkD,iBAAiB,mBAAmB,OAAO,QAAQ,qCAAqC,0GAA0G,0DAA0D,uCAAuC,eAAe,aAAa,uBAAuB,yFAAyF,eAAe,SAAS,uBAAuB,uCAAuC,SAAS,OAAO,kCAAkC,KAAK,gCAAgC,uBAAuB,sJAAsJ,qCAAqC,sDAAsD,6CAA6C,yBAAyB,8CAA8C,WAAW,SAAS,2CAA2C,YAAY,KAAK,GAAG,GAAG,kBAAkB,8IAA8I,8BAA8B,8CAA8C,oHAAoH,eAAe,WAAW,QAAQ,uDAAuD,mDAAmD,4KAA4K,OAAO,qCAAqC,MAAM,GAAG,GAAG,8BAA8B,6EAA6E,sCAAsC,sPAAsP,sCAAsC,sBAAsB,OAAO,6CAA6C,MAAM,sBAAsB,oMAAoM,kFAAkF,eAAe,OAAO,2DAA2D,gCAAgC,cAAc,0BAA0B,WAAW,YAAY,qBAAqB,YAAY,2BAA2B,+CAA+C,sDAAsD,iDAAiD,0HAA0H,wDAAwD,iKAAiK,6DAA6D,iDAAiD,mJAAmJ,KAAK,+LAA+L,kFAAkF,aAAa,KAAK,qJAAqJ,sDAAsD,2EAA2E,2CAA2C,UAAU,SAAS,MAAM,aAAa,sBAAsB,eAAe,oBAAoB,iCAAiC,+BAA+B,iCAAiC,4BAA4B,gCAAgC,OAAO,sCAAsC,4BAA4B,oCAAoC,OAAO,qCAAqC,4BAA4B,mCAAmC,OAAO,uCAAuC,4BAA4B,qCAAqC,OAAO,KAAK,GAAG,GAAG,KAAK,+CAA+C,8NAA8N,+CAA+C,gJAAgJ,kEAAkE,6EAA6E,yCAAyC,OAAO,wWAAwW,qEAAqE,kCAAkC,kCAAkC,0HAA0H,6BAA6B,kEAAkE,kCAAkC,kCAAkC,OAAO,KAAK,+IAA+I,GAAG,oDAAoD,yFAAyF,uBAAuB,8BAA8B,2IAA2I,iBAAiB,SAAS,yBAAyB,0HAA0H,OAAO,MAAM,GAAG,8SAA8S,qEAAqE,2BAA2B,yDAAyD,8GAA8G,gHAAgH,uFAAuF,kBAAkB,KAAK,iIAAiI,qBAAqB,wCAAwC,iCAAiC,oBAAoB,OAAO,KAAK,GAAG,2IAA2I,sCAAsC,iBAAiB,qEAAqE,KAAK,eAAe,GAAG,yDAAyD,2HAA2H,mMAAmM,GAAG,6EAA6E,wBAAwB,sIAAsI,YAAY,wEAAwE,OAAO,qCAAqC,KAAK,aAAa,OAAO,WAAW,qGAAqG,wEAAwE,OAAO,4BAA4B,+GAA+G,gFAAgF,SAAS,gHAAgH,2FAA2F,SAAS,OAAO,OAAO,6IAA6I,gHAAgH,2FAA2F,SAAS,OAAO,KAAK,iBAAiB,GAAG,oDAAoD,6NAA6N,6FAA6F,iBAAiB,KAAK,6PAA6P,sKAAsK,2EAA2E,KAAK,qFAAqF,0QAA0Q,GAAG,oBAAoB,qIAAqI,gBAAgB,yCAAyC,2BAA2B,kHAAkH,8CAA8C,WAAW,SAAS,OAAO,KAAK,8FAA8F,uVAAuV,gHAAgH,kCAAkC,uGAAuG,sIAAsI,eAAe,OAAO,6MAA6M,qMAAqM,yCAAyC,OAAO,2IAA2I,2EAA2E,4BAA4B,oJAAoJ,+CAA+C,0DAA0D,SAAS,mHAAmH,iBAAiB,SAAS,4HAA4H,uFAAuF,SAAS,iKAAiK,sCAAsC,SAAS,iNAAiN,iCAAiC,6CAA6C,WAAW,OAAO,kCAAkC,WAAW,SAAS,SAAS,OAAO,uLAAuL,uBAAuB,SAAS,4FAA4F,OAAO,KAAK,mDAAmD,sHAAsH,sMAAsM,yCAAyC,OAAO,iIAAiI,2GAA2G,6CAA6C,OAAO,yGAAyG,2CAA2C,OAAO,8GAA8G,yCAAyC,OAAO,yHAAyH,gCAAgC,kEAAkE,OAAO,mBAAmB,KAAK,GAAG,GAAG,iEAAiE,+BAA+B,8CAA8C,yBAAyB,mqBAAmqB,6DAA6D,eAAe,wDAAwD,SAAS,OAAO,8CAA8C,uRAAuR,8KAA8K,uCAAuC,2CAA2C,SAAS,4DAA4D,OAAO,MAAM,GAAG,GAAG,0GAA0G,uBAAuB,sIAAsI,gBAAgB,cAAc,uDAAuD,aAAa,uBAAuB,OAAO,KAAK,IAAI,2EAA2E,2DAA2D,8BAA8B,0CAA0C,iCAAiC,yCAAyC,wIAAwI,iBAAiB,OAAO,QAAQ,+GAA+G,SAAS,0BAA0B,OAAO,MAAM,sCAAsC,iEAAiE,KAAK,GAAG,GAAG,uBAAuB,kCAAkC,0DAA0D,0CAA0C,iBAAiB,wCAAwC,qCAAqC,4BAA4B,mBAAmB,SAAS,QAAQ,4EAA4E,WAAW,uBAAuB,SAAS,sHAAsH,OAAO,sCAAsC,KAAK,GAAG,GAAG,0DAA0D,wEAAwE,GAAG,uBAAuB,uBAAuB,qFAAqF,uBAAuB,uBAAuB,qDAAqD,6BAA6B,yCAAyC,qBAAqB,uEAAuE,KAAK,sBAAsB,+CAA+C,2GAA2G,KAAK,+BAA+B,6DAA6D,sCAAsC,iJAAiJ,OAAO,OAAO,mCAAmC,OAAO,gEAAgE,kCAAkC,4DAA4D,OAAO,mCAAmC,0BAA0B,OAAO,OAAO,6CAA6C,OAAO,kBAAkB,KAAK,IAAI,qDAAqD,uBAAuB,eAAe,8BAA8B,mBAAmB,qRAAqR,0CAA0C,SAAS,4NAA4N,kIAAkI,uIAAuI,OAAO,+BAA+B,wMAAwM,gDAAgD,SAAS,8JAA8J,yEAAyE,SAAS,OAAO,+CAA+C,SAAS,OAAO,KAAK,IAAI,wJAAwJ,4BAA4B,2DAA2D,6CAA6C,OAAO,KAAK,IAAI,qBAAqB,2BAA2B,eAAe,KAAK,2BAA2B,+CAA+C,KAAK,4BAA4B,qCAAqC,6DAA6D,oGAAoG,yBAAyB,uBAAuB,wEAAwE,iDAAiD,OAAO,OAAO,0DAA0D,OAAO,yBAAyB,KAAK,GAAG,wFAAwF,mCAAmC,wBAAwB,KAAK,GAAG,oCAAoC,GAAG,iGAAiG,yCAAyC,gBAAgB,6KAA6K,WAAW,OAAO,0BAA0B,6BAA6B,wEAAwE,KAAK,2BAA2B,yCAAyC,KAAK,mBAAmB,GAAG,oDAAoD,6JAA6J,WAAW,gBAAgB,YAAY,6EAA6E,+DAA+D,OAAO,KAAK,GAAG,oDAAoD,yKAAyK,uIAAuI,8EAA8E,iDAAiD,qCAAqC,2BAA2B,mCAAmC,uCAAuC,kCAAkC,sBAAsB,WAAW,UAAU,OAAO,uBAAuB,iCAAiC,yGAAyG,2BAA2B,uDAAuD,+BAA+B,WAAW,SAAS,GAAG,OAAO,GAAG,KAAK,+DAA+D,4BAA4B,qCAAqC,6BAA6B,gDAAgD,2DAA2D,yMAAyM,0BAA0B,+DAA+D,OAAO,qBAAqB,WAAW,SAAS,kFAAkF,OAAO,KAAK,uGAAuG,uDAAuD,aAAa,KAAK,oHAAoH,iQAAiQ,0IAA0I,qCAAqC,2DAA2D,OAAO,gDAAgD,mCAAmC,+BAA+B,mCAAmC,SAAS,OAAO,2GAA2G,gEAAgE,oDAAoD,+BAA+B,SAAS,OAAO,iJAAiJ,2DAA2D,sHAAsH,mCAAmC,6CAA6C,aAAa,GAAG,2CAA2C,sCAAsC,qEAAqE,aAAa,WAAW,2CAA2C,SAAS,OAAO,KAAK,4BAA4B,kCAAkC,+BAA+B,4CAA4C,6CAA6C,6CAA6C,OAAO,GAAG,KAAK,6DAA6D,0BAA0B,sFAAsF,yBAAyB,yCAAyC,qCAAqC,WAAW,SAAS,OAAO,yDAAyD,0BAA0B,GAAG,SAAS,sGAAsG,oCAAoC,SAAS,uEAAuE,qCAAqC,SAAS,4EAA4E,wJAAwJ,iCAAiC,WAAW,8CAA8C,gCAAgC,qDAAqD,WAAW,SAAS,GAAG,OAAO,wGAAwG,oCAAoC,2CAA2C,uBAAuB,0CAA0C,8BAA8B,SAAS,OAAO,KAAK,GAAG,iDAAiD,0CAA0C,qFAAqF,uCAAuC,qCAAqC,6BAA6B,qCAAqC,4BAA4B,4CAA4C,OAAO,+BAA+B,8BAA8B,8BAA8B,OAAO,wCAAwC,2CAA2C,sCAAsC,6BAA6B,mKAAmK,sCAAsC,4CAA4C,4CAA4C,WAAW,SAAS,OAAO,OAAO,uCAAuC,OAAO,KAAK,GAAG,qDAAqD,+IAA+I,gFAAgF,OAAO,4BAA4B,wBAAwB,uBAAuB,SAAS,sZAAsZ,iBAAiB,gBAAgB,YAAY,mDAAmD,SAAS,yEAAyE,+EAA+E,2BAA2B,SAAS,6GAA6G,2DAA2D,SAAS,gHAAgH,qBAAqB,OAAO,sCAAsC,mDAAmD,mDAAmD,2BAA2B,kDAAkD,gOAAgO,kJAAkJ,yCAAyC,uBAAuB,SAAS,oCAAoC,uMAAuM,0BAA0B,wBAAwB,WAAW,yBAAyB,iBAAiB,gBAAgB,YAAY,+CAA+C,WAAW,qDAAqD,4CAA4C,6DAA6D,iEAAiE,WAAW,OAAO,gEAAgE,WAAW,sBAAsB,SAAS,OAAO,iCAAiC,wDAAwD,aAAa,gBAAgB,YAAY,4FAA4F,qBAAqB,iDAAiD,2HAA2H,SAAS,sBAAsB,OAAO,KAAK,kDAAkD,wDAAwD,mDAAmD,KAAK,iOAAiO,kDAAkD,qFAAqF,QAAQ,uBAAuB,GAAG,kDAAkD,iBAAiB,wCAAwC,oDAAoD,oEAAoE,qBAAqB,OAAO,OAAO,6CAA6C,yCAAyC,yBAAyB,0BAA0B,OAAO,OAAO,6CAA6C,OAAO,iEAAiE,eAAe,gBAAgB,YAAY,8BAA8B,sEAAsE,uDAAuD,OAAO,KAAK,wFAAwF,sBAAsB,iDAAiD,OAAO,OAAO,8CAA8C,OAAO,KAAK,GAAG,GAAG,kDAAkD,sEAAsE,aAAa,4LAA4L,oEAAoE,uBAAuB,OAAO,OAAO,iDAAiD,iDAAiD,0DAA0D,WAAW,OAAO,mDAAmD,SAAS,OAAO,KAAK,gHAAgH,yBAAyB,KAAK,4CAA4C,iCAAiC,2CAA2C,6BAA6B,OAAO,0BAA0B,0CAA0C,OAAO,MAAM,iBAAiB,IAAI,uBAAuB,qDAAqD,6MAA6M,cAAc,4BAA4B,KAAK,yDAAyD,0IAA0I,oIAAoI,mBAAmB,8HAA8H,8BAA8B,WAAW,UAAU,yCAAyC,kIAAkI,KAAK,kDAAkD,yCAAyC,8BAA8B,0BAA0B,wBAAwB,QAAQ,2CAA2C,6BAA6B,0BAA0B,yBAAyB,OAAO,2CAA2C,yCAAyC,OAAO,sCAAsC,0JAA0J,wBAAwB,sDAAsD,uCAAuC,WAAW,SAAS,OAAO,iCAAiC,8EAA8E,yCAAyC,aAAa,WAAW,SAAS,sCAAsC,SAAS,IAAI,iHAAiH,mDAAmD,4BAA4B,sCAAsC,WAAW,SAAS,uOAAuO,uCAAuC,SAAS,OAAO,GAAG,KAAK,+BAA+B,6BAA6B,8BAA8B,OAAO,oCAAoC,gOAAgO,6EAA6E,yEAAyE,sCAAsC,wCAAwC,SAAS,gGAAgG,SAAS,IAAI,kFAAkF,8CAA8C,sCAAsC,WAAW,SAAS,6FAA6F,gBAAgB,YAAY,0DAA0D,+CAA+C,WAAW,SAAS,+DAA+D,OAAO,GAAG,KAAK,GAAG,GAAG,0EAA0E,kCAAkC,6DAA6D,yKAAyK,MAAM,GAAG,GAAG,+DAA+D,kHAAkH,oBAAoB,eAAe,oBAAoB,kBAAkB,sBAAsB,GAAG,2BAA2B,6DAA6D,4DAA4D,MAAM,GAAG,GAAG,uBAAuB,+BAA+B,uDAAuD,2BAA2B,aAAa,mBAAmB,QAAQ,0BAA0B,uIAAuI,gCAAgC,OAAO,KAAK,6BAA6B,uBAAuB,KAAK,sBAAsB,IAAI,yCAAyC,gCAAgC,sBAAsB,IAAI,4BAA4B,gCAAgC,uBAAuB,aAAa,KAAK,wBAAwB,eAAe,IAAI,iCAAiC,sBAAsB,IAAI,wBAAwB,uEAAuE,sNAAsN,+DAA+D,0BAA0B,wDAAwD,oDAAoD,+BAA+B,uCAAuC,QAAQ,KAAK,GAAG,IAAI,oBAAoB,+KAA+K,gCAAgC,mIAAmI,oIAAoI,oIAAoI,wBAAwB,2BAA2B,+CAA+C,GAAG,KAAK,2DAA2D,uBAAuB,mCAAmC,4EAA4E,KAAK,qCAAqC,oCAAoC,wCAAwC,OAAO,GAAG,KAAK,GAAG,GAAG,oBAAoB,yCAAyC,mDAAmD,gIAAgI,eAAe,OAAO,sHAAsH,gDAAgD,OAAO,sKAAsK,kIAAkI,OAAO,oCAAoC,+BAA+B,0CAA0C,iBAAiB,SAAS,+GAA+G,qBAAqB,SAAS,kDAAkD,qBAAqB,OAAO,wFAAwF,mBAAmB,OAAO,6CAA6C,oHAAoH,KAAK,mBAAmB,aAAa,sCAAsC,uGAAuG,iCAAiC,iDAAiD,wBAAwB,+BAA+B,aAAa,yBAAyB,WAAW,SAAS,OAAO,KAAK,4CAA4C,wOAAwO,iDAAiD,+CAA+C,uCAAuC,SAAS,OAAO,KAAK,GAAG,GAAG,iDAAiD,wCAAwC,8BAA8B,gGAAgG,OAAO,OAAO,wCAAwC,OAAO,kBAAkB,KAAK,IAAI,sFAAsF,wDAAwD,0DAA0D,iEAAiE,uBAAuB,sIAAsI,0CAA0C,2FAA2F,6CAA6C,OAAO,iBAAiB,MAAM,GAAG,GAAG,kGAAkG,uBAAuB,mCAAmC,4EAA4E,KAAK,qCAAqC,oCAAoC,sDAAsD,OAAO,GAAG,KAAK,GAAG,GAAG,oBAAoB,yCAAyC,mDAAmD,gIAAgI,eAAe,OAAO,wDAAwD,oFAAoF,yCAAyC,OAAO,oCAAoC,6GAA6G,qBAAqB,SAAS,0CAA0C,OAAO,wFAAwF,mBAAmB,OAAO,4BAA4B,KAAK,mBAAmB,iBAAiB,+BAA+B,yaAAya,6BAA6B,4CAA4C,WAAW,gJAAgJ,qBAAqB,WAAW,sBAAsB,SAAS,OAAO,KAAK,iBAAiB,8DAA8D,GAAG,GAAG,qWAAqW,iCAAiC,6BAA6B,4FAA4F,4CAA4C,0CAA0C,SAAS,oBAAoB,OAAO,8BAA8B,4FAA4F,uBAAuB,+BAA+B,sCAAsC,4CAA4C,WAAW,SAAS,OAAO,MAAM,GAAG,yNAAyN,gDAAgD,GAAG,GAAG,0MAA0M,sDAAsD,kCAAkC,KAAK,iCAAiC,uEAAuE,GAAG,uBAAuB,iCAAiC,2EAA2E,2CAA2C,yCAAyC,6EAA6E,SAAS,GAAG,OAAO,qDAAqD,qDAAqD,4CAA4C,sCAAsC,wFAAwF,wBAAwB,kBAAkB,kDAAkD,+DAA+D,qCAAqC,eAAe,aAAa,uHAAuH,4CAA4C,yDAAyD,aAAa,WAAW,SAAS,OAAO,oBAAoB,KAAK,uCAAuC,2EAA2E,2CAA2C,yCAAyC,gFAAgF,SAAS,GAAG,OAAO,kCAAkC,4CAA4C,OAAO,qDAAqD,qDAAqD,4CAA4C,sCAAsC,wKAAwK,wBAAwB,kBAAkB,kDAAkD,4GAA4G,kEAAkE,eAAe,aAAa,uHAAuH,4CAA4C,yDAAyD,aAAa,WAAW,SAAS,OAAO,oBAAoB,KAAK,iDAAiD,8BAA8B,uEAAuE,6EAA6E,OAAO,2CAA2C,yCAAyC,mIAAmI,SAAS,GAAG,OAAO,sCAAsC,2CAA2C,sCAAsC,4DAA4D,gCAAgC,0DAA0D,yDAAyD,gHAAgH,4CAA4C,aAAa,OAAO,yCAAyC,aAAa,WAAW,6CAA6C,0DAA0D,uCAAuC,4BAA4B,sGAAsG,WAAW,oVAAoV,oLAAoL,WAAW,SAAS,OAAO,GAAG,KAAK,uCAAuC,wCAAwC,6CAA6C,wCAAwC,mIAAmI,wBAAwB,SAAS,OAAO,qBAAqB,KAAK,GAAG,GAAG,+BAA+B,uBAAuB,4BAA4B,0DAA0D,kCAAkC,qBAAqB,4GAA4G,qIAAqI,uBAAuB,WAAW,6BAA6B,0FAA0F,gDAAgD,WAAW,yGAAyG,SAAS,iBAAiB,OAAO,gDAAgD,yCAAyC,gBAAgB,sCAAsC,iBAAiB,SAAS,6BAA6B,4DAA4D,SAAS,OAAO,sBAAsB,SAAS,0CAA0C,sDAAsD,qBAAqB,WAAW,wCAAwC,sBAAsB,WAAW,mCAAmC,oDAAoD,uDAAuD,WAAW,GAAG,SAAS,iGAAiG,qKAAqK,2BAA2B,SAAS,OAAO,GAAG,KAAK,GAAG,GAAG,oBAAoB,eAAe,eAAe,+BAA+B,0DAA0D,iUAAiU,SAAS,OAAO,gBAAgB,+BAA+B,gPAAgP,8BAA8B,oBAAoB,aAAa,OAAO,gCAAgC,WAAW,qEAAqE,SAAS,QAAQ,kCAAkC,4YAA4Y,qGAAqG,mFAAmF,6BAA6B,eAAe,mFAAmF,aAAa,WAAW,0BAA0B,SAAS,yCAAyC,iJAAiJ,2BAA2B,kCAAkC,qLAAqL,+BAA+B,aAAa,2DAA2D,gHAAgH,oCAAoC,WAAW,wBAAwB,SAAS,OAAO,KAAK,GAAG,GAAG,kGAAkG,+BAA+B,oCAAoC,uCAAuC,uFAAuF,SAAS,OAAO,MAAM,6BAA6B,sDAAsD,6EAA6E,QAAQ,KAAK,GAAG,GAAG,kHAAkH,kCAAkC,4DAA4D,wQAAwQ,4CAA4C,6GAA6G,eAAe,OAAO,4CAA4C,uGAAuG,eAAe,OAAO,2CAA2C,gCAAgC,yFAAyF,kCAAkC,0BAA0B,OAAO,0DAA0D,sNAAsN,oDAAoD,0EAA0E,iDAAiD,uJAAuJ,uFAAuF,4BAA4B,4BAA4B,OAAO,iLAAiL,4GAA4G,gGAAgG,eAAe,OAAO,kIAAkI,0HAA0H,oDAAoD,uDAAuD,+BAA+B,SAAS,eAAe,KAAK,yBAAyB,gCAAgC,oBAAoB,SAAS,mJAAmJ,0EAA0E,SAAS,OAAO,sDAAsD,6EAA6E,uFAAuF,mFAAmF,6DAA6D,uBAAuB,oCAAoC,SAAS,oEAAoE,4DAA4D,mDAAmD,yCAAyC,mCAAmC,WAAW,SAAS,OAAO,wBAAwB,uHAAuH,6IAA6I,yQAAyQ,+GAA+G,0BAA0B,oCAAoC,aAAa,qIAAqI,2BAA2B,+CAA+C,0BAA0B,mCAAmC,aAAa,WAAW,SAAS,OAAO,4BAA4B,KAAK,0JAA0J,8EAA8E,yDAAyD,QAAQ,8CAA8C,KAAK,KAAK,GAAG,uBAAuB,uCAAuC,oCAAoC,iDAAiD,OAAO,GAAG,KAAK,6CAA6C,2BAA2B,mBAAmB,8DAA8D,OAAO,KAAK,GAAG,GAAG,6QAA6Q,2EAA2E,yGAAyG,MAAM,GAAG,GAAG,uBAAuB,sCAAsC,qEAAqE,KAAK,GAAG,GAAG,oDAAoD,0dAA0d,kBAAkB,yCAAyC,yBAAyB,wIAAwI,8EAA8E,QAAQ,uCAAuC,2BAA2B,kGAAkG,8BAA8B,wDAAwD,WAAW,6DAA6D,SAAS,+BAA+B,sGAAsG,8BAA8B,2DAA2D,wCAAwC,aAAa,OAAO,kDAAkD,WAAW,SAAS,QAAQ,KAAK,GAAG,GAAG,iCAAiC,6BAA6B,2BAA2B,0EAA0E,YAAY,gDAAgD,kBAAkB,KAAK,gGAAgG,6EAA6E,KAAK,cAAc,sBAAsB,KAAK,yEAAyE,+CAA+C,KAAK,eAAe,IAAI,+KAA+K,2DAA2D,aAAa,mCAAmC,0EAA0E,uDAAuD,4EAA4E,WAAW,OAAO,8PAA8P,SAAS,OAAO,GAAG,OAAO,gEAAgE,4DAA4D,oFAAoF,OAAO,OAAO,OAAO,0DAA0D,KAAK,GAAG,sIAAsI,0EAA0E,wLAAwL,0HAA0H,QAAQ,6JAA6J,wEAAwE,qCAAqC,OAAO,GAAG,OAAO,OAAO,0JAA0J,6DAA6D,OAAO,KAAK,sEAAsE,IAAI,uBAAuB,2BAA2B,mDAAmD,KAAK,iCAAiC,mCAAmC,sIAAsI,8DAA8D,OAAO,6BAA6B,6BAA6B,mRAAmR,OAAO,mCAAmC,uCAAuC,8BAA8B,sBAAsB,SAAS,uCAAuC,mDAAmD,oBAAoB,4DAA4D,WAAW,GAAG,SAAS,kBAAkB,4DAA4D,OAAO,SAAS,KAAK,GAAG,GAAG,0wBAA0wB,wNAAwN,sDAAsD,oLAAoL,sCAAsC,kIAAkI,8GAA8G,yDAAyD,kCAAkC,mCAAmC,OAAO,qHAAqH,0CAA0C,2GAA2G,6EAA6E,oDAAoD,oFAAoF,0CAA0C,OAAO,iFAAiF,WAAW,SAAS,OAAO,MAAM,GAAG,qJAAqJ,wBAAwB,uDAAuD,oCAAoC,mBAAmB,mCAAmC,mFAAmF,wFAAwF,6HAA6H,6DAA6D,yCAAyC,uBAAuB,SAAS,+BAA+B,qDAAqD,SAAS,OAAO,GAAG,sBAAsB,KAAK,0FAA0F,GAAG,wJAAwJ,4EAA4E,0BAA0B,uCAAuC,6DAA6D,2BAA2B,OAAO,KAAK,iBAAiB,0CAA0C,KAAK,oBAAoB,GAAG,sOAAsO,2GAA2G,yGAAyG,wBAAwB,+BAA+B,uEAAuE,OAAO,KAAK,wEAAwE,gCAAgC,gEAAgE,oCAAoC,gBAAgB,SAAS,OAAO,KAAK,6GAA6G,qCAAqC,KAAK,OAAO,qEAAqE,iFAAiF,+BAA+B,gBAAgB,SAAS,+BAA+B,+BAA+B,SAAS,OAAO,qFAAqF,KAAK,qJAAqJ,+CAA+C,2CAA2C,OAAO,wCAAwC,KAAK,GAAG,6LAA6L,6DAA6D,2HAA2H,8EAA8E,oCAAoC,gEAAgE,OAAO,KAAK,kCAAkC,mEAAmE,4CAA4C,wDAAwD,OAAO,4FAA4F,wDAAwD,OAAO,uBAAuB,kCAAkC,wBAAwB,sGAAsG,2BAA2B,4FAA4F,iDAAiD,8HAA8H,iEAAiE,yCAAyC,oFAAoF,2CAA2C,gLAAgL,6BAA6B,8FAA8F,+CAA+C,qFAAqF,2CAA2C,uCAAuC,kDAAkD,mBAAmB,wBAAwB,iBAAiB,eAAe,aAAa,WAAW,sFAAsF,gHAAgH,0CAA0C,aAAa,OAAO,mBAAmB,4CAA4C,eAAe,cAAc,wBAAwB,kJAAkJ,eAAe,aAAa,WAAW,SAAS,OAAO,KAAK,cAAc,sCAAsC,GAAG,oBAAoB,+IAA+I,aAAa,sBAAsB,yNAAyN,4MAA4M,2BAA2B,sLAAsL,oBAAoB,kFAAkF,0BAA0B,iGAAiG,yIAAyI,2SAA2S,yNAAyN,8CAA8C,KAAK,iNAAiN,8NAA8N,KAAK,qLAAqL,kGAAkG,sBAAsB,wBAAwB,OAAO,sEAAsE,olBAAolB,wiBAAwiB,4EAA4E,iCAAiC,yGAAyG,uHAAuH,sBAAsB,8BAA8B,uCAAuC,qCAAqC,8EAA8E,2EAA2E,iBAAiB,eAAe,2DAA2D,aAAa,gDAAgD,WAAW,uEAAuE,4DAA4D,WAAW,sFAAsF,sCAAsC,kIAAkI,6CAA6C,aAAa,wBAAwB,WAAW,oGAAoG,sCAAsC,gCAAgC,aAAa,wBAAwB,WAAW,iFAAiF,qBAAqB,wBAAwB,gCAAgC,0GAA0G,eAAe,OAAO,qHAAqH,2EAA2E,iBAAiB,eAAe,aAAa,wBAAwB,WAAW,2EAA2E,mDAAmD,8BAA8B,2CAA2C,aAAa,iCAAiC,wBAAwB,WAAW,UAAU,2DAA2D,oUAAoU,+HAA+H,8HAA8H,mIAAmI,oDAAoD,qLAAqL,iCAAiC,gKAAgK,yIAAyI,SAAS,cAAc,8KAA8K,SAAS,OAAO,qHAAqH,uDAAuD,OAAO,gGAAgG,wFAAwF,qBAAqB,OAAO,gMAAgM,6FAA6F,8CAA8C,OAAO,iEAAiE,2FAA2F,mNAAmN,yFAAyF,sGAAsG,4EAA4E,2EAA2E,oGAAoG,SAAS,uFAAuF,4DAA4D,mGAAmG,SAAS,oHAAoH,oFAAoF,iIAAiI,8CAA8C,OAAO,mHAAmH,gDAAgD,2FAA2F,SAAS,wCAAwC,+EAA+E,SAAS,OAAO,+IAA+I,kEAAkE,OAAO,iSAAiS,wDAAwD,iEAAiE,oDAAoD,OAAO,wKAAwK,8EAA8E,OAAO,0EAA0E,kFAAkF,8BAA8B,4BAA4B,yGAAyG,kEAAkE,qCAAqC,OAAO,OAAO,6BAA6B,0DAA0D,mEAAmE,SAAS,yFAAyF,uBAAuB,SAAS,6DAA6D,wDAAwD,uCAAuC,WAAW,cAAc,SAAS,eAAe,4BAA4B,iDAAiD,SAAS,cAAc,6EAA6E,oBAAoB,WAAW,kEAAkE,SAAS,OAAO,oHAAoH,kGAAkG,gEAAgE,iBAAiB,SAAS,2BAA2B,oEAAoE,8CAA8C,SAAS,0JAA0J,mFAAmF,yEAAyE,wGAAwG,wDAAwD,gEAAgE,SAAS,gJAAgJ,0EAA0E,2HAA2H,oEAAoE,6BAA6B,yDAAyD,aAAa,2DAA2D,6BAA6B,iDAAiD,aAAa,WAAW,oFAAoF,uCAAuC,yCAAyC,6BAA6B,yCAAyC,2DAA2D,OAAO,wCAAwC,oCAAoC,mCAAmC,+BAA+B,WAAW,SAAS,OAAO,sGAAsG,wCAAwC,mCAAmC,+BAA+B,yBAAyB,aAAa,WAAW,SAAS,2EAA2E,qEAAqE,oDAAoD,kFAAkF,SAAS,OAAO,+EAA+E,SAAS,8EAA8E,+BAA+B,8BAA8B,0IAA0I,SAAS,iGAAiG,8BAA8B,uEAAuE,oFAAoF,iDAAiD,WAAW,SAAS,OAAO,qBAAqB,KAAK,iDAAiD,yDAAyD,KAAK,6CAA6C,gEAAgE,KAAK,GAAG,GAAG,+DAA+D,8DAA8D,+FAA+F,gCAAgC,wBAAwB,yBAAyB,OAAO,iHAAiH,gHAAgH,yCAAyC,MAAM,GAAG,GAAG,yCAAyC,yBAAyB,wOAAwO,GAAG,IAAI,yBAAyB,+BAA+B,eAAe,0BAA0B,0CAA0C,wCAAwC,SAAS,gIAAgI,uCAAuC,yCAAyC,SAAS,gCAAgC,0BAA0B,8CAA8C,0CAA0C,WAAW,wBAAwB,SAAS,kBAAkB,OAAO,oBAAoB,KAAK,oCAAoC,wCAAwC,yCAAyC,2DAA2D,SAAS,GAAG,OAAO,sCAAsC,uEAAuE,kCAAkC,mCAAmC,WAAW,OAAO,8BAA8B,SAAS,OAAO,GAAG,KAAK,+BAA+B,iDAAiD,yCAAyC,2EAA2E,OAAO,GAAG,KAAK,qCAAqC,gEAAgE,sDAAsD,OAAO,GAAG,kBAAkB,KAAK,GAAG,GAAG,qDAAqD,gDAAgD,IAAI,kDAAkD,uFAAuF,IAAI,gDAAgD,SAAS,yCAAyC,KAAK,eAAe,IAAI,4BAA4B,+LAA+L,8CAA8C,6EAA6E,+CAA+C,+CAA+C,gCAAgC,uIAAuI,cAAc,6CAA6C,gDAAgD,qKAAqK,kFAAkF,4CAA4C,gDAAgD,aAAa,WAAW,sGAAsG,qDAAqD,WAAW,0aAA0a,iEAAiE,WAAW,0DAA0D,oDAAoD,WAAW,8DAA8D,+BAA+B,+BAA+B,mIAAmI,6CAA6C,8BAA8B,iBAAiB,iCAAiC,wOAAwO,6CAA6C,mBAAmB,OAAO,8FAA8F,6GAA6G,mBAAmB,iBAAiB,OAAO,wdAAwd,uBAAuB,yBAAyB,yBAAyB,oEAAoE,iBAAiB,eAAe,cAAc,YAAY,iEAAiE,8DAA8D,yKAAyK,wCAAwC,WAAW,OAAO,iDAAiD,2GAA2G,4QAA4Q,mCAAmC,oCAAoC,mBAAmB,iBAAiB,GAAG,eAAe,cAAc,WAAW,mFAAmF,iBAAiB,qIAAqI,WAAW,cAAc,+GAA+G,sBAAsB,aAAa,WAAW,SAAS,8BAA8B,2BAA2B,uBAAuB,WAAW,SAAS,QAAQ,KAAK,GAAG,GAAG,0IAA0I,0BAA0B,gCAAgC,KAAK,GAAG,GAAG,mDAAmD,cAAc,8HAA8H,gBAAgB,8CAA8C,kBAAkB,yCAAyC,kCAAkC,oBAAoB,OAAO,KAAK,GAAG,GAAG,qGAAqG,kCAAkC,sBAAsB,KAAK,0BAA0B,uBAAuB,KAAK,GAAG,GAAG,wFAAwF,uFAAuF,2BAA2B,cAAc,uCAAuC,iDAAiD,sEAAsE,yEAAyE,8BAA8B,8BAA8B,0BAA0B,yEAAyE,eAAe,aAAa,YAAY,iIAAiI,SAAS,4BAA4B,2BAA2B,uBAAuB,WAAW,SAAS,QAAQ,KAAK,GAAG,GAAG,oEAAoE,kDAAkD,uDAAuD,oFAAoF,8BAA8B,sBAAsB,KAAK,GAAG,GAAG,yJAAyJ,yUAAyU,4IAA4I,8MAA8M,uEAAuE,+EAA+E,OAAO,gCAAgC,2FAA2F,OAAO,yHAAyH,mCAAmC,6DAA6D,SAAS,sCAAsC,QAAQ,gEAAgE,sEAAsE,2CAA2C,sCAAsC,QAAQ,qFAAqF,iGAAiG,sDAAsD,yDAAyD,OAAO,+CAA+C,SAAS,gEAAgE,yIAAyI,gGAAgG,SAAS,mIAAmI,gDAAgD,SAAS,sDAAsD,OAAO,GAAG,qDAAqD,KAAK,GAAG,GAAG,4WAA4W,uEAAuE,oDAAoD,wCAAwC,GAAG,KAAK,iTAAiT,uCAAuC,gBAAgB,KAAK,2CAA2C,4BAA4B,sBAAsB,KAAK,gCAAgC,uBAAuB,kKAAkK,qEAAqE,uMAAuM,2CAA2C,yCAAyC,OAAO,OAAO,2BAA2B,OAAO,KAAK,uCAAuC,iCAAiC,sCAAsC,sDAAsD,KAAK,2DAA2D,wCAAwC,iCAAiC,KAAK,mDAAmD,IAAI,+FAA+F,oFAAoF,uBAAuB,sDAAsD,gCAAgC,KAAK,mEAAmE,mEAAmE,yBAAyB,6CAA6C,qDAAqD,sBAAsB,KAAK,oFAAoF,oBAAoB,gSAAgS,mCAAmC,oFAAoF,sVAAsV,mOAAmO,kDAAkD,+BAA+B,oFAAoF,SAAS,GAAG,OAAO,GAAG,KAAK,kBAAkB,IAAI,gOAAgO,wCAAwC,iCAAiC,MAAM,GAAG,GAAG,2DAA2D,uDAAuD,8BAA8B,KAAK,UAAU,IAAI,2BAA2B,6CAA6C,oMAAoM,iHAAiH,2CAA2C,OAAO,qCAAqC,8CAA8C,gDAAgD,gJAAgJ,+JAA+J,yCAAyC,iCAAiC,mCAAmC,SAAS,OAAO,8CAA8C,gDAAgD,OAAO,6CAA6C,qJAAqJ,gBAAgB,OAAO,oCAAoC,6DAA6D,OAAO,mCAAmC,iEAAiE,OAAO,qCAAqC,0CAA0C,SAAS,OAAO,6BAA6B,OAAO,KAAK,IAAI,uBAAuB,iCAAiC,sEAAsE,0FAA0F,wDAAwD,WAAW,GAAG,OAAO,6DAA6D,sBAAsB,eAAe,OAAO,2PAA2P,gBAAgB,mBAAmB,OAAO,4CAA4C,iCAAiC,oCAAoC,4BAA4B,gBAAgB,kIAAkI,KAAK,6BAA6B,yBAAyB,eAAe,OAAO,kFAAkF,mBAAmB,kEAAkE,eAAe,2GAA2G,gIAAgI,SAAS,OAAO,+EAA+E,+DAA+D,yDAAyD,+CAA+C,SAAS,6DAA6D,oMAAoM,OAAO,oEAAoE,qLAAqL,KAAK,ylBAAylB,mCAAmC,6CAA6C,6FAA6F,mDAAmD,SAAS,iDAAiD,OAAO,GAAG,KAAK,GAAG,GAAG,8DAA8D,0DAA0D,4BAA4B,uCAAuC,6CAA6C,0DAA0D,2DAA2D,wCAAwC,qBAAqB,SAAS,kCAAkC,iCAAiC,SAAS,oCAAoC,oDAAoD,SAAS,sBAAsB,mHAAmH,WAAW,OAAO,+BAA+B,SAAS,OAAO,kCAAkC,MAAM,GAAG,GAAG,kUAAkU,mJAAmJ,oGAAoG,yBAAyB,0CAA0C,yLAAyL,SAAS,OAAO,MAAM,GAAG,GAAG,0GAA0G,uCAAuC,0BAA0B,kBAAkB,mEAAmE,2CAA2C,8GAA8G,gMAAgM,8DAA8D,kBAAkB,4CAA4C,yPAAyP,WAAW,iFAAiF,uCAAuC,+VAA+V,WAAW,uRAAuR,SAAS,oDAAoD,QAAQ,KAAK,GAAG,GAAG,GAAG,yBAAyB,yCAAyC,8CAA8C,KAAK,oCAAoC,yCAAyC,KAAK,wDAAwD,kDAAkD,KAAK,kDAAkD,mLAAmL,KAAK,GAAG,GAAG,yCAAyC,iBAAiB,yBAAyB,KAAK,OAAO,2BAA2B,KAAK,IAAI,iCAAiC,gCAAgC,6BAA6B,w5BAAw5B,wCAAwC,oBAAoB,KAAK,GAAG,GAAG,oJAAoJ,0CAA0C,gCAAgC,oBAAoB,KAAK,+CAA+C,8BAA8B,KAAK,oBAAoB,IAAI,yLAAyL,sCAAsC,GAAG,wBAAwB,GAAG,GAAG,G;;;;;;;ACA9pwS,kWAAkW,yBAAyB,kNAAkN,qEAAqE,mBAAmB,2BAA2B,WAAW,iCAAiC,sCAAsC,qFAAqF,SAAS,4CAA4C,2CAA2C,SAAS,OAAO,4CAA4C,sBAAsB,4BAA4B,SAAS,OAAO,6BAA6B,iFAAiF,OAAO,gCAAgC,2BAA2B,8CAA8C,oBAAoB,EAAE,SAAS,2BAA2B,OAAO,2FAA2F,kCAAkC,yBAAyB,mDAAmD,kCAAkC,0CAA0C,kDAAkD,eAAe,aAAa,2BAA2B,kHAAkH,wBAAwB,EAAE,EAAE,SAAS,mBAAmB,OAAO,KAAK,mBAAmB,oCAAoC,iDAAiD,kCAAkC,iCAAiC,SAAS,sBAAsB,OAAO,soBAAsoB,mCAAmC,mCAAmC,sCAAsC,gCAAgC,0CAA0C,kDAAkD,mDAAmD,aAAa,WAAW,2BAA2B,SAAS,uBAAuB,sCAAsC,gDAAgD,oCAAoC,8CAA8C,wDAAwD,mDAAmD,iBAAiB,eAAe,aAAa,0CAA0C,WAAW,SAAS,uHAAuH,wDAAwD,4BAA4B,WAAW,SAAS,EAAE,oCAAoC,OAAO,mHAAmH,gCAAgC,0BAA0B,oCAAoC,iDAAiD,mFAAmF,iDAAiD,6DAA6D,aAAa,qFAAqF,iDAAiD,0DAA0D,aAAa,WAAW,SAAS,OAAO,KAAK,gBAAgB,gDAAgD,iBAAiB,+JAA+J,kDAAkD,+EAA+E,8BAA8B,yBAAyB,GAAG,kEAAkE,OAAO,KAAK,6DAA6D,oEAAoE,wDAAwD,mCAAmC,OAAO,qBAAqB,4EAA4E,wCAAwC,OAAO,oKAAoK,oFAAoF,2CAA2C,8GAA8G,OAAO,uCAAuC,mBAAmB,uGAAuG,gDAAgD,wCAAwC,uBAAuB,6CAA6C,SAAS,qCAAqC,eAAe,OAAO,6CAA6C,oCAAoC,4CAA4C,4CAA4C,yCAAyC,8CAA8C,wDAAwD,mDAAmD,8CAA8C,uCAAuC,UAAU,6CAA6C,iGAAiG,GAAG,OAAO,YAAY,+EAA+E,4CAA4C,sDAAsD,6CAA6C,8CAA8C,qCAAqC,OAAO,KAAK,sDAAsD,6CAA6C,8DAA8D,KAAK,oDAAoD,0BAA0B,4BAA4B,gCAAgC,mBAAmB,iCAAiC,uCAAuC,SAAS,8BAA8B,OAAO,+CAA+C,+DAA+D,mBAAmB,SAAS,wCAAwC,iFAAiF,yBAAyB,qBAAqB,OAAO,+NAA+N,oDAAoD,oIAAoI,4EAA4E,WAAW,iDAAiD,+FAA+F,iBAAiB,gCAAgC,kCAAkC,gDAAgD,2FAA2F,aAAa,yCAAyC,uBAAuB,aAAa,oCAAoC,uEAAuE,qJAAqJ,sCAAsC,yCAAyC,2BAA2B,sBAAsB,eAAe,mLAAmL,6CAA6C,mBAAmB,OAAO,sCAAsC,oHAAoH,sBAAsB,0BAA0B,iBAAiB,eAAe,0SAA0S,yBAAyB,eAAe,yGAAyG,uCAAuC,iCAAiC,aAAa,2BAA2B,uBAAuB,aAAa,8BAA8B,iDAAiD,aAAa,4OAA4O,qCAAqC,2BAA2B,gCAAgC,aAAa,8GAA8G,iCAAiC,0BAA0B,+BAA+B,aAAa,yDAAyD,WAAW,SAAS,OAAO,sBAAsB,KAAK,eAAe,aAAa,yCAAyC,gCAAgC,0CAA0C,qCAAqC,OAAO,oCAAoC,0CAA0C,gDAAgD,iBAAiB,SAAS,iCAAiC,2BAA2B,GAAG,wBAAwB,SAAS,OAAO,KAAK,IAAI,8EAA8E,qBAAqB,2BAA2B,uBAAuB,0GAA0G,2BAA2B,IAAI,qDAAqD,+BAA+B,eAAe,KAAK,uCAAuC,sCAAsC,qDAAqD,OAAO,WAAW,KAAK,iBAAiB,sJAAsJ,oDAAoD,kCAAkC,4CAA4C,KAAK,oBAAoB,2EAA2E,uDAAuD,KAAK,+BAA+B,uEAAuE,+EAA+E,UAAU,KAAK,YAAY,0JAA0J,MAAM,0BAA0B,kCAAkC,4CAA4C,KAAK,sEAAsE,2JAA2J,sEAAsE,2BAA2B,sBAAsB,OAAO,KAAK,SAAS,yBAAyB,GAAG,8IAA8I,iBAAiB,4BAA4B,6EAA6E,+CAA+C,2CAA2C,uDAAuD,SAAS,OAAO,gDAAgD,SAAS,OAAO,YAAY,sEAAsE,OAAO,KAAK,GAAG,uBAAuB,KAAK,IAAI,0DAA0D,2BAA2B,GAAG,6FAA6F,yBAAyB,GAAG,oKAAoK,oKAAoK,2JAA2J,gBAAgB,2DAA2D,wFAAwF,SAAS,wBAAwB,6EAA6E,+CAA+C,SAAS,sDAAsD,oDAAoD,oDAAoD,SAAS,SAAS,KAAK,4BAA4B,KAAK,MAAM,uHAAuH,kCAAkC,0DAA0D,QAAQ,KAAK,GAAG,EAAE,iDAAiD,gDAAgD,kDAAkD,+CAA+C,8JAA8J,uDAAuD,8BAA8B,WAAW,oBAAoB,0DAA0D,KAAK,gHAAgH,GAAG,SAAS,IAAI,aAAa,kBAAkB,iGAAiG,kJAAkJ,OAAO,sFAAsF,iCAAiC,mDAAmD,gBAAgB,iKAAiK,KAAK,EAAE,8DAA8D,qBAAqB,4DAA4D,wBAAwB,mGAAmG,gFAAgF,6EAA6E,SAAS,qCAAqC,KAAK,8BAA8B,GAAG,gKAAgK,uBAAuB,oFAAoF,QAAQ,uEAAuE,qBAAqB,kGAAkG,oBAAoB,mKAAmK,wCAAwC,KAAK,oXAAoX,KAAK,WAAW,4MAA4M,yqBAAyqB,EAAE,IAAI,EAAE,2DAA2D,cAAc,4EAA4E,IAAI,qBAAqB,oDAAoD,GAAG,EAAE,0DAA0D,wBAAwB,iFAAiF,0BAA0B,0BAA0B,GAAG,KAAK,qBAAqB,0CAA0C,+BAA+B,IAAI,kDAAkD,wDAAwD,SAAS,qCAAqC,KAAK,GAAG,EAAE,iCAAiC,mDAAmD,iBAAiB,iLAAiL,KAAK,EAAE,GAAG,oDAAoD,8JAA8J,kGAAkG,aAAa,KAAK,6CAA6C,0BAA0B,2NAA2N,qCAAqC,wIAAwI,iDAAiD,uCAAuC,0DAA0D,0DAA0D,uCAAuC,WAAW,yBAAyB,gEAAgE,WAAW,4BAA4B,mEAAmE,0DAA0D,WAAW,sDAAsD,kDAAkD,iCAAiC,0CAA0C,kCAAkC,2CAA2C,uCAAuC,kDAAkD,sCAAsC,2DAA2D,oDAAoD,+CAA+C,eAAe,2CAA2C,uGAAuG,eAAe,oBAAoB,8EAA8E,eAAe,aAAa,YAAY,2BAA2B,SAAS,EAAE,OAAO,QAAQ,8EAA8E,KAAK,IAAI,G;;;;;;;ACAthsB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACTA,6K;;;;;;;ACAA,0L;;;;;;;ACAA,oK;;;;;;;ACAA,yJ;;;;;;;ACAA,yJ;;;;;;;ACAA,uJ;;;;;;;ACAA,kJ","file":"scripts.bundle.js","sourcesContent":["module.exports = \"/*\\n* bootstrap-table - v1.11.1 - 2017-02-22\\n* https://github.com/wenzhixin/bootstrap-table\\n* Copyright (c) 2017 zhixin wen\\n* Licensed MIT License\\n*/\\n!function(a){\\\"use strict\\\";var b=null,c=function(a){var b=arguments,c=!0,d=1;return a=a.replace(/%s/g,function(){var a=b[d++];return\\\"undefined\\\"==typeof a?(c=!1,\\\"\\\"):a}),c?a:\\\"\\\"},d=function(b,c,d,e){var f=\\\"\\\";return a.each(b,function(a,b){return b[c]===e?(f=b[d],!1):!0}),f},e=function(b,c){var d=-1;return a.each(b,function(a,b){return b.field===c?(d=a,!1):!0}),d},f=function(b){var c,d,e,f=0,g=[];for(c=0;c<b[0].length;c++)f+=b[0][c].colspan||1;for(c=0;c<b.length;c++)for(g[c]=[],d=0;f>d;d++)g[c][d]=!1;for(c=0;c<b.length;c++)for(d=0;d<b[c].length;d++){var h=b[c][d],i=h.rowspan||1,j=h.colspan||1,k=a.inArray(!1,g[c]);for(1===j&&(h.fieldIndex=k,\\\"undefined\\\"==typeof h.field&&(h.field=k)),e=0;i>e;e++)g[c+e][k]=!0;for(e=0;j>e;e++)g[c][k+e]=!0}},g=function(){if(null===b){var c,d,e=a(\\\"<p/>\\\").addClass(\\\"fixed-table-scroll-inner\\\"),f=a(\\\"<div/>\\\").addClass(\\\"fixed-table-scroll-outer\\\");f.append(e),a(\\\"body\\\").append(f),c=e[0].offsetWidth,f.css(\\\"overflow\\\",\\\"scroll\\\"),d=e[0].offsetWidth,c===d&&(d=f[0].clientWidth),f.remove(),b=c-d}return b},h=function(b,d,e,f){var g=d;if(\\\"string\\\"==typeof d){var h=d.split(\\\".\\\");h.length>1?(g=window,a.each(h,function(a,b){g=g[b]})):g=window[d]}return\\\"object\\\"==typeof g?g:\\\"function\\\"==typeof g?g.apply(b,e||[]):!g&&\\\"string\\\"==typeof d&&c.apply(this,[d].concat(e))?c.apply(this,[d].concat(e)):f},i=function(b,c,d){var e=Object.getOwnPropertyNames(b),f=Object.getOwnPropertyNames(c),g=\\\"\\\";if(d&&e.length!==f.length)return!1;for(var h=0;h<e.length;h++)if(g=e[h],a.inArray(g,f)>-1&&b[g]!==c[g])return!1;return!0},j=function(a){return\\\"string\\\"==typeof a?a.replace(/&/g,\\\"&amp;\\\").replace(/</g,\\\"&lt;\\\").replace(/>/g,\\\"&gt;\\\").replace(/\\\"/g,\\\"&quot;\\\").replace(/'/g,\\\"&#039;\\\").replace(/`/g,\\\"&#x60;\\\"):a},k=function(a){for(var b in a){var c=b.split(/(?=[A-Z])/).join(\\\"-\\\").toLowerCase();c!==b&&(a[c]=a[b],delete a[b])}return a},l=function(a,b,c){var d=a;if(\\\"string\\\"!=typeof b||a.hasOwnProperty(b))return c?j(a[b]):a[b];var e=b.split(\\\".\\\");for(var f in e)e.hasOwnProperty(f)&&(d=d&&d[e[f]]);return c?j(d):d},m=function(){return!!(navigator.userAgent.indexOf(\\\"MSIE \\\")>0||navigator.userAgent.match(/Trident.*rv\\\\:11\\\\./))},n=function(){Object.keys||(Object.keys=function(){var a=Object.prototype.hasOwnProperty,b=!{toString:null}.propertyIsEnumerable(\\\"toString\\\"),c=[\\\"toString\\\",\\\"toLocaleString\\\",\\\"valueOf\\\",\\\"hasOwnProperty\\\",\\\"isPrototypeOf\\\",\\\"propertyIsEnumerable\\\",\\\"constructor\\\"],d=c.length;return function(e){if(\\\"object\\\"!=typeof e&&(\\\"function\\\"!=typeof e||null===e))throw new TypeError(\\\"Object.keys called on non-object\\\");var f,g,h=[];for(f in e)a.call(e,f)&&h.push(f);if(b)for(g=0;d>g;g++)a.call(e,c[g])&&h.push(c[g]);return h}}())},o=function(b,c){this.options=c,this.$el=a(b),this.$el_=this.$el.clone(),this.timeoutId_=0,this.timeoutFooter_=0,this.init()};o.DEFAULTS={classes:\\\"table table-hover\\\",sortClass:void 0,locale:void 0,height:void 0,undefinedText:\\\"-\\\",sortName:void 0,sortOrder:\\\"asc\\\",sortStable:!1,striped:!1,columns:[[]],data:[],totalField:\\\"total\\\",dataField:\\\"rows\\\",method:\\\"get\\\",url:void 0,ajax:void 0,cache:!0,contentType:\\\"application/json\\\",dataType:\\\"json\\\",ajaxOptions:{},queryParams:function(a){return a},queryParamsType:\\\"limit\\\",responseHandler:function(a){return a},pagination:!1,onlyInfoPagination:!1,paginationLoop:!0,sidePagination:\\\"client\\\",totalRows:0,pageNumber:1,pageSize:10,pageList:[10,25,50,100],paginationHAlign:\\\"right\\\",paginationVAlign:\\\"bottom\\\",paginationDetailHAlign:\\\"left\\\",paginationPreText:\\\"&lsaquo;\\\",paginationNextText:\\\"&rsaquo;\\\",search:!1,searchOnEnterKey:!1,strictSearch:!1,searchAlign:\\\"right\\\",selectItemName:\\\"btSelectItem\\\",showHeader:!0,showFooter:!1,showColumns:!1,showPaginationSwitch:!1,showRefresh:!1,showToggle:!1,buttonsAlign:\\\"right\\\",smartDisplay:!0,escape:!1,minimumCountColumns:1,idField:void 0,uniqueId:void 0,cardView:!1,detailView:!1,detailFormatter:function(){return\\\"\\\"},trimOnSearch:!0,clickToSelect:!1,singleSelect:!1,toolbar:void 0,toolbarAlign:\\\"left\\\",checkboxHeader:!0,sortable:!0,silentSort:!0,maintainSelected:!1,searchTimeOut:500,searchText:\\\"\\\",iconSize:void 0,buttonsClass:\\\"default\\\",iconsPrefix:\\\"glyphicon\\\",icons:{paginationSwitchDown:\\\"glyphicon-collapse-down icon-chevron-down\\\",paginationSwitchUp:\\\"glyphicon-collapse-up icon-chevron-up\\\",refresh:\\\"glyphicon-refresh icon-refresh\\\",toggle:\\\"glyphicon-list-alt icon-list-alt\\\",columns:\\\"glyphicon-th icon-th\\\",detailOpen:\\\"glyphicon-plus icon-plus\\\",detailClose:\\\"glyphicon-minus icon-minus\\\"},customSearch:a.noop,customSort:a.noop,rowStyle:function(){return{}},rowAttributes:function(){return{}},footerStyle:function(){return{}},onAll:function(){return!1},onClickCell:function(){return!1},onDblClickCell:function(){return!1},onClickRow:function(){return!1},onDblClickRow:function(){return!1},onSort:function(){return!1},onCheck:function(){return!1},onUncheck:function(){return!1},onCheckAll:function(){return!1},onUncheckAll:function(){return!1},onCheckSome:function(){return!1},onUncheckSome:function(){return!1},onLoadSuccess:function(){return!1},onLoadError:function(){return!1},onColumnSwitch:function(){return!1},onPageChange:function(){return!1},onSearch:function(){return!1},onToggle:function(){return!1},onPreBody:function(){return!1},onPostBody:function(){return!1},onPostHeader:function(){return!1},onExpandRow:function(){return!1},onCollapseRow:function(){return!1},onRefreshOptions:function(){return!1},onRefresh:function(){return!1},onResetView:function(){return!1}},o.LOCALES={},o.LOCALES[\\\"en-US\\\"]=o.LOCALES.en={formatLoadingMessage:function(){return\\\"Loading, please wait...\\\"},formatRecordsPerPage:function(a){return c(\\\"%s rows per page\\\",a)},formatShowingRows:function(a,b,d){return c(\\\"Showing %s to %s of %s rows\\\",a,b,d)},formatDetailPagination:function(a){return c(\\\"Showing %s rows\\\",a)},formatSearch:function(){return\\\"Search\\\"},formatNoMatches:function(){return\\\"No matching records found\\\"},formatPaginationSwitch:function(){return\\\"Hide/Show pagination\\\"},formatRefresh:function(){return\\\"Refresh\\\"},formatToggle:function(){return\\\"Toggle\\\"},formatColumns:function(){return\\\"Columns\\\"},formatAllRows:function(){return\\\"All\\\"}},a.extend(o.DEFAULTS,o.LOCALES[\\\"en-US\\\"]),o.COLUMN_DEFAULTS={radio:!1,checkbox:!1,checkboxEnabled:!0,field:void 0,title:void 0,titleTooltip:void 0,\\\"class\\\":void 0,align:void 0,halign:void 0,falign:void 0,valign:void 0,width:void 0,sortable:!1,order:\\\"asc\\\",visible:!0,switchable:!0,clickToSelect:!0,formatter:void 0,footerFormatter:void 0,events:void 0,sorter:void 0,sortName:void 0,cellStyle:void 0,searchable:!0,searchFormatter:!0,cardVisible:!0,escape:!1},o.EVENTS={\\\"all.bs.table\\\":\\\"onAll\\\",\\\"click-cell.bs.table\\\":\\\"onClickCell\\\",\\\"dbl-click-cell.bs.table\\\":\\\"onDblClickCell\\\",\\\"click-row.bs.table\\\":\\\"onClickRow\\\",\\\"dbl-click-row.bs.table\\\":\\\"onDblClickRow\\\",\\\"sort.bs.table\\\":\\\"onSort\\\",\\\"check.bs.table\\\":\\\"onCheck\\\",\\\"uncheck.bs.table\\\":\\\"onUncheck\\\",\\\"check-all.bs.table\\\":\\\"onCheckAll\\\",\\\"uncheck-all.bs.table\\\":\\\"onUncheckAll\\\",\\\"check-some.bs.table\\\":\\\"onCheckSome\\\",\\\"uncheck-some.bs.table\\\":\\\"onUncheckSome\\\",\\\"load-success.bs.table\\\":\\\"onLoadSuccess\\\",\\\"load-error.bs.table\\\":\\\"onLoadError\\\",\\\"column-switch.bs.table\\\":\\\"onColumnSwitch\\\",\\\"page-change.bs.table\\\":\\\"onPageChange\\\",\\\"search.bs.table\\\":\\\"onSearch\\\",\\\"toggle.bs.table\\\":\\\"onToggle\\\",\\\"pre-body.bs.table\\\":\\\"onPreBody\\\",\\\"post-body.bs.table\\\":\\\"onPostBody\\\",\\\"post-header.bs.table\\\":\\\"onPostHeader\\\",\\\"expand-row.bs.table\\\":\\\"onExpandRow\\\",\\\"collapse-row.bs.table\\\":\\\"onCollapseRow\\\",\\\"refresh-options.bs.table\\\":\\\"onRefreshOptions\\\",\\\"reset-view.bs.table\\\":\\\"onResetView\\\",\\\"refresh.bs.table\\\":\\\"onRefresh\\\"},o.prototype.init=function(){this.initLocale(),this.initContainer(),this.initTable(),this.initHeader(),this.initData(),this.initHiddenRows(),this.initFooter(),this.initToolbar(),this.initPagination(),this.initBody(),this.initSearchText(),this.initServer()},o.prototype.initLocale=function(){if(this.options.locale){var b=this.options.locale.split(/-|_/);b[0].toLowerCase(),b[1]&&b[1].toUpperCase(),a.fn.bootstrapTable.locales[this.options.locale]?a.extend(this.options,a.fn.bootstrapTable.locales[this.options.locale]):a.fn.bootstrapTable.locales[b.join(\\\"-\\\")]?a.extend(this.options,a.fn.bootstrapTable.locales[b.join(\\\"-\\\")]):a.fn.bootstrapTable.locales[b[0]]&&a.extend(this.options,a.fn.bootstrapTable.locales[b[0]])}},o.prototype.initContainer=function(){this.$container=a(['<div class=\\\"bootstrap-table\\\">','<div class=\\\"fixed-table-toolbar\\\"></div>',\\\"top\\\"===this.options.paginationVAlign||\\\"both\\\"===this.options.paginationVAlign?'<div class=\\\"fixed-table-pagination\\\" style=\\\"clear: both;\\\"></div>':\\\"\\\",'<div class=\\\"fixed-table-container\\\">','<div class=\\\"fixed-table-header\\\"><table></table></div>','<div class=\\\"fixed-table-body\\\">','<div class=\\\"fixed-table-loading\\\">',this.options.formatLoadingMessage(),\\\"</div>\\\",\\\"</div>\\\",'<div class=\\\"fixed-table-footer\\\"><table><tr></tr></table></div>',\\\"bottom\\\"===this.options.paginationVAlign||\\\"both\\\"===this.options.paginationVAlign?'<div class=\\\"fixed-table-pagination\\\"></div>':\\\"\\\",\\\"</div>\\\",\\\"</div>\\\"].join(\\\"\\\")),this.$container.insertAfter(this.$el),this.$tableContainer=this.$container.find(\\\".fixed-table-container\\\"),this.$tableHeader=this.$container.find(\\\".fixed-table-header\\\"),this.$tableBody=this.$container.find(\\\".fixed-table-body\\\"),this.$tableLoading=this.$container.find(\\\".fixed-table-loading\\\"),this.$tableFooter=this.$container.find(\\\".fixed-table-footer\\\"),this.$toolbar=this.$container.find(\\\".fixed-table-toolbar\\\"),this.$pagination=this.$container.find(\\\".fixed-table-pagination\\\"),this.$tableBody.append(this.$el),this.$container.after('<div class=\\\"clearfix\\\"></div>'),this.$el.addClass(this.options.classes),this.options.striped&&this.$el.addClass(\\\"table-striped\\\"),-1!==a.inArray(\\\"table-no-bordered\\\",this.options.classes.split(\\\" \\\"))&&this.$tableContainer.addClass(\\\"table-no-bordered\\\")},o.prototype.initTable=function(){var b=this,c=[],d=[];if(this.$header=this.$el.find(\\\">thead\\\"),this.$header.length||(this.$header=a(\\\"<thead></thead>\\\").appendTo(this.$el)),this.$header.find(\\\"tr\\\").each(function(){var b=[];a(this).find(\\\"th\\\").each(function(){\\\"undefined\\\"!=typeof a(this).data(\\\"field\\\")&&a(this).data(\\\"field\\\",a(this).data(\\\"field\\\")+\\\"\\\"),b.push(a.extend({},{title:a(this).html(),\\\"class\\\":a(this).attr(\\\"class\\\"),titleTooltip:a(this).attr(\\\"title\\\"),rowspan:a(this).attr(\\\"rowspan\\\")?+a(this).attr(\\\"rowspan\\\"):void 0,colspan:a(this).attr(\\\"colspan\\\")?+a(this).attr(\\\"colspan\\\"):void 0},a(this).data()))}),c.push(b)}),a.isArray(this.options.columns[0])||(this.options.columns=[this.options.columns]),this.options.columns=a.extend(!0,[],c,this.options.columns),this.columns=[],f(this.options.columns),a.each(this.options.columns,function(c,d){a.each(d,function(d,e){e=a.extend({},o.COLUMN_DEFAULTS,e),\\\"undefined\\\"!=typeof e.fieldIndex&&(b.columns[e.fieldIndex]=e),b.options.columns[c][d]=e})}),!this.options.data.length){var e=[];this.$el.find(\\\">tbody>tr\\\").each(function(c){var f={};f._id=a(this).attr(\\\"id\\\"),f._class=a(this).attr(\\\"class\\\"),f._data=k(a(this).data()),a(this).find(\\\">td\\\").each(function(d){for(var g,h,i=a(this),j=+i.attr(\\\"colspan\\\")||1,l=+i.attr(\\\"rowspan\\\")||1;e[c]&&e[c][d];d++);for(g=d;d+j>g;g++)for(h=c;c+l>h;h++)e[h]||(e[h]=[]),e[h][g]=!0;var m=b.columns[d].field;f[m]=a(this).html(),f[\\\"_\\\"+m+\\\"_id\\\"]=a(this).attr(\\\"id\\\"),f[\\\"_\\\"+m+\\\"_class\\\"]=a(this).attr(\\\"class\\\"),f[\\\"_\\\"+m+\\\"_rowspan\\\"]=a(this).attr(\\\"rowspan\\\"),f[\\\"_\\\"+m+\\\"_colspan\\\"]=a(this).attr(\\\"colspan\\\"),f[\\\"_\\\"+m+\\\"_title\\\"]=a(this).attr(\\\"title\\\"),f[\\\"_\\\"+m+\\\"_data\\\"]=k(a(this).data())}),d.push(f)}),this.options.data=d,d.length&&(this.fromHtml=!0)}},o.prototype.initHeader=function(){var b=this,d={},e=[];this.header={fields:[],styles:[],classes:[],formatters:[],events:[],sorters:[],sortNames:[],cellStyles:[],searchables:[]},a.each(this.options.columns,function(f,g){e.push(\\\"<tr>\\\"),0===f&&!b.options.cardView&&b.options.detailView&&e.push(c('<th class=\\\"detail\\\" rowspan=\\\"%s\\\"><div class=\\\"fht-cell\\\"></div></th>',b.options.columns.length)),a.each(g,function(a,f){var g=\\\"\\\",h=\\\"\\\",i=\\\"\\\",k=\\\"\\\",l=c(' class=\\\"%s\\\"',f[\\\"class\\\"]),m=(b.options.sortOrder||f.order,\\\"px\\\"),n=f.width;if(void 0===f.width||b.options.cardView||\\\"string\\\"==typeof f.width&&-1!==f.width.indexOf(\\\"%\\\")&&(m=\\\"%\\\"),f.width&&\\\"string\\\"==typeof f.width&&(n=f.width.replace(\\\"%\\\",\\\"\\\").replace(\\\"px\\\",\\\"\\\")),h=c(\\\"text-align: %s; \\\",f.halign?f.halign:f.align),i=c(\\\"text-align: %s; \\\",f.align),k=c(\\\"vertical-align: %s; \\\",f.valign),k+=c(\\\"width: %s; \\\",!f.checkbox&&!f.radio||n?n?n+m:void 0:\\\"36px\\\"),\\\"undefined\\\"!=typeof f.fieldIndex){if(b.header.fields[f.fieldIndex]=f.field,b.header.styles[f.fieldIndex]=i+k,b.header.classes[f.fieldIndex]=l,b.header.formatters[f.fieldIndex]=f.formatter,b.header.events[f.fieldIndex]=f.events,b.header.sorters[f.fieldIndex]=f.sorter,b.header.sortNames[f.fieldIndex]=f.sortName,b.header.cellStyles[f.fieldIndex]=f.cellStyle,b.header.searchables[f.fieldIndex]=f.searchable,!f.visible)return;if(b.options.cardView&&!f.cardVisible)return;d[f.field]=f}e.push(\\\"<th\\\"+c(' title=\\\"%s\\\"',f.titleTooltip),f.checkbox||f.radio?c(' class=\\\"bs-checkbox %s\\\"',f[\\\"class\\\"]||\\\"\\\"):l,c(' style=\\\"%s\\\"',h+k),c(' rowspan=\\\"%s\\\"',f.rowspan),c(' colspan=\\\"%s\\\"',f.colspan),c(' data-field=\\\"%s\\\"',f.field),\\\">\\\"),e.push(c('<div class=\\\"th-inner %s\\\">',b.options.sortable&&f.sortable?\\\"sortable both\\\":\\\"\\\")),g=b.options.escape?j(f.title):f.title,f.checkbox&&(!b.options.singleSelect&&b.options.checkboxHeader&&(g='<input name=\\\"btSelectAll\\\" type=\\\"checkbox\\\" />'),b.header.stateField=f.field),f.radio&&(g=\\\"\\\",b.header.stateField=f.field,b.options.singleSelect=!0),e.push(g),e.push(\\\"</div>\\\"),e.push('<div class=\\\"fht-cell\\\"></div>'),e.push(\\\"</div>\\\"),e.push(\\\"</th>\\\")}),e.push(\\\"</tr>\\\")}),this.$header.html(e.join(\\\"\\\")),this.$header.find(\\\"th[data-field]\\\").each(function(){a(this).data(d[a(this).data(\\\"field\\\")])}),this.$container.off(\\\"click\\\",\\\".th-inner\\\").on(\\\"click\\\",\\\".th-inner\\\",function(c){var d=a(this);return b.options.detailView&&d.closest(\\\".bootstrap-table\\\")[0]!==b.$container[0]?!1:void(b.options.sortable&&d.parent().data().sortable&&b.onSort(c))}),this.$header.children().children().off(\\\"keypress\\\").on(\\\"keypress\\\",function(c){if(b.options.sortable&&a(this).data().sortable){var d=c.keyCode||c.which;13==d&&b.onSort(c)}}),a(window).off(\\\"resize.bootstrap-table\\\"),!this.options.showHeader||this.options.cardView?(this.$header.hide(),this.$tableHeader.hide(),this.$tableLoading.css(\\\"top\\\",0)):(this.$header.show(),this.$tableHeader.show(),this.$tableLoading.css(\\\"top\\\",this.$header.outerHeight()+1),this.getCaret(),a(window).on(\\\"resize.bootstrap-table\\\",a.proxy(this.resetWidth,this))),this.$selectAll=this.$header.find('[name=\\\"btSelectAll\\\"]'),this.$selectAll.off(\\\"click\\\").on(\\\"click\\\",function(){var c=a(this).prop(\\\"checked\\\");b[c?\\\"checkAll\\\":\\\"uncheckAll\\\"](),b.updateSelected()})},o.prototype.initFooter=function(){!this.options.showFooter||this.options.cardView?this.$tableFooter.hide():this.$tableFooter.show()},o.prototype.initData=function(a,b){this.data=\\\"append\\\"===b?this.data.concat(a):\\\"prepend\\\"===b?[].concat(a).concat(this.data):a||this.options.data,this.options.data=\\\"append\\\"===b?this.options.data.concat(a):\\\"prepend\\\"===b?[].concat(a).concat(this.options.data):this.data,\\\"server\\\"!==this.options.sidePagination&&this.initSort()},o.prototype.initSort=function(){var b=this,d=this.options.sortName,e=\\\"desc\\\"===this.options.sortOrder?-1:1,f=a.inArray(this.options.sortName,this.header.fields),g=0;return this.options.customSort!==a.noop?void this.options.customSort.apply(this,[this.options.sortName,this.options.sortOrder]):void(-1!==f&&(this.options.sortStable&&a.each(this.data,function(a,b){b.hasOwnProperty(\\\"_position\\\")||(b._position=a)}),this.data.sort(function(c,g){b.header.sortNames[f]&&(d=b.header.sortNames[f]);var i=l(c,d,b.options.escape),j=l(g,d,b.options.escape),k=h(b.header,b.header.sorters[f],[i,j]);return void 0!==k?e*k:((void 0===i||null===i)&&(i=\\\"\\\"),(void 0===j||null===j)&&(j=\\\"\\\"),b.options.sortStable&&i===j&&(i=c._position,j=g._position),a.isNumeric(i)&&a.isNumeric(j)?(i=parseFloat(i),j=parseFloat(j),j>i?-1*e:e):i===j?0:(\\\"string\\\"!=typeof i&&(i=i.toString()),-1===i.localeCompare(j)?-1*e:e))}),void 0!==this.options.sortClass&&(clearTimeout(g),g=setTimeout(function(){b.$el.removeClass(b.options.sortClass);var a=b.$header.find(c('[data-field=\\\"%s\\\"]',b.options.sortName).index()+1);b.$el.find(c(\\\"tr td:nth-child(%s)\\\",a)).addClass(b.options.sortClass)},250))))},o.prototype.onSort=function(b){var c=\\\"keypress\\\"===b.type?a(b.currentTarget):a(b.currentTarget).parent(),d=this.$header.find(\\\"th\\\").eq(c.index());return this.$header.add(this.$header_).find(\\\"span.order\\\").remove(),this.options.sortName===c.data(\\\"field\\\")?this.options.sortOrder=\\\"asc\\\"===this.options.sortOrder?\\\"desc\\\":\\\"asc\\\":(this.options.sortName=c.data(\\\"field\\\"),this.options.sortOrder=\\\"asc\\\"===c.data(\\\"order\\\")?\\\"desc\\\":\\\"asc\\\"),this.trigger(\\\"sort\\\",this.options.sortName,this.options.sortOrder),c.add(d).data(\\\"order\\\",this.options.sortOrder),this.getCaret(),\\\"server\\\"===this.options.sidePagination?void this.initServer(this.options.silentSort):(this.initSort(),void this.initBody())},o.prototype.initToolbar=function(){var b,d,e=this,f=[],g=0,i=0;this.$toolbar.find(\\\".bs-bars\\\").children().length&&a(\\\"body\\\").append(a(this.options.toolbar)),this.$toolbar.html(\\\"\\\"),(\\\"string\\\"==typeof this.options.toolbar||\\\"object\\\"==typeof this.options.toolbar)&&a(c('<div class=\\\"bs-bars pull-%s\\\"></div>',this.options.toolbarAlign)).appendTo(this.$toolbar).append(a(this.options.toolbar)),f=[c('<div class=\\\"columns columns-%s btn-group pull-%s\\\">',this.options.buttonsAlign,this.options.buttonsAlign)],\\\"string\\\"==typeof this.options.icons&&(this.options.icons=h(null,this.options.icons)),this.options.showPaginationSwitch&&f.push(c('<button class=\\\"btn'+c(\\\" btn-%s\\\",this.options.buttonsClass)+c(\\\" btn-%s\\\",this.options.iconSize)+'\\\" type=\\\"button\\\" name=\\\"paginationSwitch\\\" aria-label=\\\"pagination Switch\\\" title=\\\"%s\\\">',this.options.formatPaginationSwitch()),c('<i class=\\\"%s %s\\\"></i>',this.options.iconsPrefix,this.options.icons.paginationSwitchDown),\\\"</button>\\\"),this.options.showRefresh&&f.push(c('<button class=\\\"btn'+c(\\\" btn-%s\\\",this.options.buttonsClass)+c(\\\" btn-%s\\\",this.options.iconSize)+'\\\" type=\\\"button\\\" name=\\\"refresh\\\" aria-label=\\\"refresh\\\" title=\\\"%s\\\">',this.options.formatRefresh()),c('<i class=\\\"%s %s\\\"></i>',this.options.iconsPrefix,this.options.icons.refresh),\\\"</button>\\\"),this.options.showToggle&&f.push(c('<button class=\\\"btn'+c(\\\" btn-%s\\\",this.options.buttonsClass)+c(\\\" btn-%s\\\",this.options.iconSize)+'\\\" type=\\\"button\\\" name=\\\"toggle\\\" aria-label=\\\"toggle\\\" title=\\\"%s\\\">',this.options.formatToggle()),c('<i class=\\\"%s %s\\\"></i>',this.options.iconsPrefix,this.options.icons.toggle),\\\"</button>\\\"),this.options.showColumns&&(f.push(c('<div class=\\\"keep-open btn-group\\\" title=\\\"%s\\\">',this.options.formatColumns()),'<button type=\\\"button\\\" aria-label=\\\"columns\\\" class=\\\"btn'+c(\\\" btn-%s\\\",this.options.buttonsClass)+c(\\\" btn-%s\\\",this.options.iconSize)+' dropdown-toggle\\\" data-toggle=\\\"dropdown\\\">',c('<i class=\\\"%s %s\\\"></i>',this.options.iconsPrefix,this.options.icons.columns),' <span class=\\\"caret\\\"></span>',\\\"</button>\\\",'<ul class=\\\"dropdown-menu\\\" role=\\\"menu\\\">'),a.each(this.columns,function(a,b){if(!(b.radio||b.checkbox||e.options.cardView&&!b.cardVisible)){var d=b.visible?' checked=\\\"checked\\\"':\\\"\\\";b.switchable&&(f.push(c('<li role=\\\"menuitem\\\"><label><input type=\\\"checkbox\\\" data-field=\\\"%s\\\" value=\\\"%s\\\"%s> %s</label></li>',b.field,a,d,b.title)),i++)}}),f.push(\\\"</ul>\\\",\\\"</div>\\\")),f.push(\\\"</div>\\\"),(this.showToolbar||f.length>2)&&this.$toolbar.append(f.join(\\\"\\\")),this.options.showPaginationSwitch&&this.$toolbar.find('button[name=\\\"paginationSwitch\\\"]').off(\\\"click\\\").on(\\\"click\\\",a.proxy(this.togglePagination,this)),this.options.showRefresh&&this.$toolbar.find('button[name=\\\"refresh\\\"]').off(\\\"click\\\").on(\\\"click\\\",a.proxy(this.refresh,this)),this.options.showToggle&&this.$toolbar.find('button[name=\\\"toggle\\\"]').off(\\\"click\\\").on(\\\"click\\\",function(){e.toggleView()}),this.options.showColumns&&(b=this.$toolbar.find(\\\".keep-open\\\"),i<=this.options.minimumCountColumns&&b.find(\\\"input\\\").prop(\\\"disabled\\\",!0),b.find(\\\"li\\\").off(\\\"click\\\").on(\\\"click\\\",function(a){a.stopImmediatePropagation()}),b.find(\\\"input\\\").off(\\\"click\\\").on(\\\"click\\\",function(){var b=a(this);e.toggleColumn(a(this).val(),b.prop(\\\"checked\\\"),!1),e.trigger(\\\"column-switch\\\",a(this).data(\\\"field\\\"),b.prop(\\\"checked\\\"))})),this.options.search&&(f=[],f.push('<div class=\\\"pull-'+this.options.searchAlign+' search\\\">',c('<input class=\\\"form-control'+c(\\\" input-%s\\\",this.options.iconSize)+'\\\" type=\\\"text\\\" placeholder=\\\"%s\\\">',this.options.formatSearch()),\\\"</div>\\\"),this.$toolbar.append(f.join(\\\"\\\")),d=this.$toolbar.find(\\\".search input\\\"),d.off(\\\"keyup drop blur\\\").on(\\\"keyup drop blur\\\",function(b){e.options.searchOnEnterKey&&13!==b.keyCode||a.inArray(b.keyCode,[37,38,39,40])>-1||(clearTimeout(g),g=setTimeout(function(){e.onSearch(b)},e.options.searchTimeOut))}),m()&&d.off(\\\"mouseup\\\").on(\\\"mouseup\\\",function(a){clearTimeout(g),g=setTimeout(function(){e.onSearch(a)},e.options.searchTimeOut)}))},o.prototype.onSearch=function(b){var c=a.trim(a(b.currentTarget).val());this.options.trimOnSearch&&a(b.currentTarget).val()!==c&&a(b.currentTarget).val(c),c!==this.searchText&&(this.searchText=c,this.options.searchText=c,this.options.pageNumber=1,this.initSearch(),this.updatePagination(),this.trigger(\\\"search\\\",c))},o.prototype.initSearch=function(){var b=this;if(\\\"server\\\"!==this.options.sidePagination){if(this.options.customSearch!==a.noop)return void this.options.customSearch.apply(this,[this.searchText]);var c=this.searchText&&(this.options.escape?j(this.searchText):this.searchText).toLowerCase(),d=a.isEmptyObject(this.filterColumns)?null:this.filterColumns;this.data=d?a.grep(this.options.data,function(b){for(var c in d)if(a.isArray(d[c])&&-1===a.inArray(b[c],d[c])||!a.isArray(d[c])&&b[c]!==d[c])return!1;return!0}):this.options.data,this.data=c?a.grep(this.data,function(d,f){for(var g=0;g<b.header.fields.length;g++)if(b.header.searchables[g]){var i,j=a.isNumeric(b.header.fields[g])?parseInt(b.header.fields[g],10):b.header.fields[g],k=b.columns[e(b.columns,j)];if(\\\"string\\\"==typeof j){i=d;for(var l=j.split(\\\".\\\"),m=0;m<l.length;m++)i=i[l[m]];k&&k.searchFormatter&&(i=h(k,b.header.formatters[g],[i,d,f],i))}else i=d[j];if(\\\"string\\\"==typeof i||\\\"number\\\"==typeof i)if(b.options.strictSearch){if((i+\\\"\\\").toLowerCase()===c)return!0}else if(-1!==(i+\\\"\\\").toLowerCase().indexOf(c))return!0}return!1}):this.data}},o.prototype.initPagination=function(){if(!this.options.pagination)return void this.$pagination.hide();this.$pagination.show();var b,d,e,f,g,h,i,j,k,l=this,m=[],n=!1,o=this.getData(),p=this.options.pageList;if(\\\"server\\\"!==this.options.sidePagination&&(this.options.totalRows=o.length),this.totalPages=0,this.options.totalRows){if(this.options.pageSize===this.options.formatAllRows())this.options.pageSize=this.options.totalRows,n=!0;else if(this.options.pageSize===this.options.totalRows){var q=\\\"string\\\"==typeof this.options.pageList?this.options.pageList.replace(\\\"[\\\",\\\"\\\").replace(\\\"]\\\",\\\"\\\").replace(/ /g,\\\"\\\").toLowerCase().split(\\\",\\\"):this.options.pageList;a.inArray(this.options.formatAllRows().toLowerCase(),q)>-1&&(n=!0)}this.totalPages=~~((this.options.totalRows-1)/this.options.pageSize)+1,this.options.totalPages=this.totalPages}if(this.totalPages>0&&this.options.pageNumber>this.totalPages&&(this.options.pageNumber=this.totalPages),this.pageFrom=(this.options.pageNumber-1)*this.options.pageSize+1,this.pageTo=this.options.pageNumber*this.options.pageSize,this.pageTo>this.options.totalRows&&(this.pageTo=this.options.totalRows),m.push('<div class=\\\"pull-'+this.options.paginationDetailHAlign+' pagination-detail\\\">','<span class=\\\"pagination-info\\\">',this.options.onlyInfoPagination?this.options.formatDetailPagination(this.options.totalRows):this.options.formatShowingRows(this.pageFrom,this.pageTo,this.options.totalRows),\\\"</span>\\\"),!this.options.onlyInfoPagination){m.push('<span class=\\\"page-list\\\">');var r=[c('<span class=\\\"btn-group %s\\\">',\\\"top\\\"===this.options.paginationVAlign||\\\"both\\\"===this.options.paginationVAlign?\\\"dropdown\\\":\\\"dropup\\\"),'<button type=\\\"button\\\" class=\\\"btn'+c(\\\" btn-%s\\\",this.options.buttonsClass)+c(\\\" btn-%s\\\",this.options.iconSize)+' dropdown-toggle\\\" data-toggle=\\\"dropdown\\\">','<span class=\\\"page-size\\\">',n?this.options.formatAllRows():this.options.pageSize,\\\"</span>\\\",' <span class=\\\"caret\\\"></span>',\\\"</button>\\\",'<ul class=\\\"dropdown-menu\\\" role=\\\"menu\\\">'];if(\\\"string\\\"==typeof this.options.pageList){var s=this.options.pageList.replace(\\\"[\\\",\\\"\\\").replace(\\\"]\\\",\\\"\\\").replace(/ /g,\\\"\\\").split(\\\",\\\");p=[],a.each(s,function(a,b){p.push(b.toUpperCase()===l.options.formatAllRows().toUpperCase()?l.options.formatAllRows():+b)})}for(a.each(p,function(a,b){if(!l.options.smartDisplay||0===a||p[a-1]<l.options.totalRows){var d;d=n?b===l.options.formatAllRows()?' class=\\\"active\\\"':\\\"\\\":b===l.options.pageSize?' class=\\\"active\\\"':\\\"\\\",r.push(c('<li role=\\\"menuitem\\\"%s><a href=\\\"#\\\">%s</a></li>',d,b))}}),r.push(\\\"</ul></span>\\\"),m.push(this.options.formatRecordsPerPage(r.join(\\\"\\\"))),m.push(\\\"</span>\\\"),m.push(\\\"</div>\\\",'<div class=\\\"pull-'+this.options.paginationHAlign+' pagination\\\">','<ul class=\\\"pagination'+c(\\\" pagination-%s\\\",this.options.iconSize)+'\\\">','<li class=\\\"page-pre\\\"><a href=\\\"#\\\">'+this.options.paginationPreText+\\\"</a></li>\\\"),this.totalPages<5?(d=1,e=this.totalPages):(d=this.options.pageNumber-2,e=d+4,1>d&&(d=1,e=5),e>this.totalPages&&(e=this.totalPages,d=e-4)),this.totalPages>=6&&(this.options.pageNumber>=3&&(m.push('<li class=\\\"page-first'+(1===this.options.pageNumber?\\\" active\\\":\\\"\\\")+'\\\">','<a href=\\\"#\\\">',1,\\\"</a>\\\",\\\"</li>\\\"),d++),this.options.pageNumber>=4&&(4==this.options.pageNumber||6==this.totalPages||7==this.totalPages?d--:m.push('<li class=\\\"page-first-separator disabled\\\">','<a href=\\\"#\\\">...</a>',\\\"</li>\\\"),e--)),this.totalPages>=7&&this.options.pageNumber>=this.totalPages-2&&d--,6==this.totalPages?this.options.pageNumber>=this.totalPages-2&&e++:this.totalPages>=7&&(7==this.totalPages||this.options.pageNumber>=this.totalPages-3)&&e++,b=d;e>=b;b++)m.push('<li class=\\\"page-number'+(b===this.options.pageNumber?\\\" active\\\":\\\"\\\")+'\\\">','<a href=\\\"#\\\">',b,\\\"</a>\\\",\\\"</li>\\\");this.totalPages>=8&&this.options.pageNumber<=this.totalPages-4&&m.push('<li class=\\\"page-last-separator disabled\\\">','<a href=\\\"#\\\">...</a>',\\\"</li>\\\"),this.totalPages>=6&&this.options.pageNumber<=this.totalPages-3&&m.push('<li class=\\\"page-last'+(this.totalPages===this.options.pageNumber?\\\" active\\\":\\\"\\\")+'\\\">','<a href=\\\"#\\\">',this.totalPages,\\\"</a>\\\",\\\"</li>\\\"),m.push('<li class=\\\"page-next\\\"><a href=\\\"#\\\">'+this.options.paginationNextText+\\\"</a></li>\\\",\\\"</ul>\\\",\\\"</div>\\\")}this.$pagination.html(m.join(\\\"\\\")),this.options.onlyInfoPagination||(f=this.$pagination.find(\\\".page-list a\\\"),g=this.$pagination.find(\\\".page-first\\\"),h=this.$pagination.find(\\\".page-pre\\\"),i=this.$pagination.find(\\\".page-next\\\"),j=this.$pagination.find(\\\".page-last\\\"),k=this.$pagination.find(\\\".page-number\\\"),this.options.smartDisplay&&(this.totalPages<=1&&this.$pagination.find(\\\"div.pagination\\\").hide(),(p.length<2||this.options.totalRows<=p[0])&&this.$pagination.find(\\\"span.page-list\\\").hide(),this.$pagination[this.getData().length?\\\"show\\\":\\\"hide\\\"]()),this.options.paginationLoop||(1===this.options.pageNumber&&h.addClass(\\\"disabled\\\"),this.options.pageNumber===this.totalPages&&i.addClass(\\\"disabled\\\")),n&&(this.options.pageSize=this.options.formatAllRows()),f.off(\\\"click\\\").on(\\\"click\\\",a.proxy(this.onPageListChange,this)),g.off(\\\"click\\\").on(\\\"click\\\",a.proxy(this.onPageFirst,this)),h.off(\\\"click\\\").on(\\\"click\\\",a.proxy(this.onPagePre,this)),i.off(\\\"click\\\").on(\\\"click\\\",a.proxy(this.onPageNext,this)),j.off(\\\"click\\\").on(\\\"click\\\",a.proxy(this.onPageLast,this)),k.off(\\\"click\\\").on(\\\"click\\\",a.proxy(this.onPageNumber,this)))},o.prototype.updatePagination=function(b){b&&a(b.currentTarget).hasClass(\\\"disabled\\\")||(this.options.maintainSelected||this.resetRows(),this.initPagination(),\\\"server\\\"===this.options.sidePagination?this.initServer():this.initBody(),this.trigger(\\\"page-change\\\",this.options.pageNumber,this.options.pageSize))},o.prototype.onPageListChange=function(b){var c=a(b.currentTarget);return c.parent().addClass(\\\"active\\\").siblings().removeClass(\\\"active\\\"),this.options.pageSize=c.text().toUpperCase()===this.options.formatAllRows().toUpperCase()?this.options.formatAllRows():+c.text(),this.$toolbar.find(\\\".page-size\\\").text(this.options.pageSize),this.updatePagination(b),!1},o.prototype.onPageFirst=function(a){return this.options.pageNumber=1,this.updatePagination(a),!1},o.prototype.onPagePre=function(a){return this.options.pageNumber-1===0?this.options.pageNumber=this.options.totalPages:this.options.pageNumber--,this.updatePagination(a),!1},o.prototype.onPageNext=function(a){return this.options.pageNumber+1>this.options.totalPages?this.options.pageNumber=1:this.options.pageNumber++,this.updatePagination(a),!1},o.prototype.onPageLast=function(a){return this.options.pageNumber=this.totalPages,this.updatePagination(a),!1},o.prototype.onPageNumber=function(b){return this.options.pageNumber!==+a(b.currentTarget).text()?(this.options.pageNumber=+a(b.currentTarget).text(),this.updatePagination(b),!1):void 0},o.prototype.initRow=function(b,e){var f,g=this,i=[],k={},m=[],n=\\\"\\\",o={},p=[];if(!(a.inArray(b,this.hiddenRows)>-1)){if(k=h(this.options,this.options.rowStyle,[b,e],k),k&&k.css)for(f in k.css)m.push(f+\\\": \\\"+k.css[f]);if(o=h(this.options,this.options.rowAttributes,[b,e],o))for(f in o)p.push(c('%s=\\\"%s\\\"',f,j(o[f])));return b._data&&!a.isEmptyObject(b._data)&&a.each(b._data,function(a,b){\\\"index\\\"!==a&&(n+=c(' data-%s=\\\"%s\\\"',a,b))}),i.push(\\\"<tr\\\",c(\\\" %s\\\",p.join(\\\" \\\")),c(' id=\\\"%s\\\"',a.isArray(b)?void 0:b._id),c(' class=\\\"%s\\\"',k.classes||(a.isArray(b)?void 0:b._class)),c(' data-index=\\\"%s\\\"',e),c(' data-uniqueid=\\\"%s\\\"',b[this.options.uniqueId]),c(\\\"%s\\\",n),\\\">\\\"),this.options.cardView&&i.push(c('<td colspan=\\\"%s\\\"><div class=\\\"card-views\\\">',this.header.fields.length)),!this.options.cardView&&this.options.detailView&&i.push(\\\"<td>\\\",'<a class=\\\"detail-icon\\\" href=\\\"#\\\">',c('<i class=\\\"%s %s\\\"></i>',this.options.iconsPrefix,this.options.icons.detailOpen),\\\"</a>\\\",\\\"</td>\\\"),a.each(this.header.fields,function(f,n){var o=\\\"\\\",p=l(b,n,g.options.escape),q=\\\"\\\",r=\\\"\\\",s={},t=\\\"\\\",u=g.header.classes[f],v=\\\"\\\",w=\\\"\\\",x=\\\"\\\",y=\\\"\\\",z=g.columns[f];if(!(g.fromHtml&&\\\"undefined\\\"==typeof p||!z.visible||g.options.cardView&&!z.cardVisible)){if(z.escape&&(p=j(p)),k=c('style=\\\"%s\\\"',m.concat(g.header.styles[f]).join(\\\"; \\\")),b[\\\"_\\\"+n+\\\"_id\\\"]&&(t=c(' id=\\\"%s\\\"',b[\\\"_\\\"+n+\\\"_id\\\"])),b[\\\"_\\\"+n+\\\"_class\\\"]&&(u=c(' class=\\\"%s\\\"',b[\\\"_\\\"+n+\\\"_class\\\"])),b[\\\"_\\\"+n+\\\"_rowspan\\\"]&&(w=c(' rowspan=\\\"%s\\\"',b[\\\"_\\\"+n+\\\"_rowspan\\\"])),b[\\\"_\\\"+n+\\\"_colspan\\\"]&&(x=c(' colspan=\\\"%s\\\"',b[\\\"_\\\"+n+\\\"_colspan\\\"])),b[\\\"_\\\"+n+\\\"_title\\\"]&&(y=c(' title=\\\"%s\\\"',b[\\\"_\\\"+n+\\\"_title\\\"])),s=h(g.header,g.header.cellStyles[f],[p,b,e,n],s),s.classes&&(u=c(' class=\\\"%s\\\"',s.classes)),s.css){var A=[];for(var B in s.css)A.push(B+\\\": \\\"+s.css[B]);k=c('style=\\\"%s\\\"',A.concat(g.header.styles[f]).join(\\\"; \\\"))}q=h(z,g.header.formatters[f],[p,b,e],p),b[\\\"_\\\"+n+\\\"_data\\\"]&&!a.isEmptyObject(b[\\\"_\\\"+n+\\\"_data\\\"])&&a.each(b[\\\"_\\\"+n+\\\"_data\\\"],function(a,b){\\\"index\\\"!==a&&(v+=c(' data-%s=\\\"%s\\\"',a,b))}),z.checkbox||z.radio?(r=z.checkbox?\\\"checkbox\\\":r,r=z.radio?\\\"radio\\\":r,o=[c(g.options.cardView?'<div class=\\\"card-view %s\\\">':'<td class=\\\"bs-checkbox %s\\\">',z[\\\"class\\\"]||\\\"\\\"),\\\"<input\\\"+c(' data-index=\\\"%s\\\"',e)+c(' name=\\\"%s\\\"',g.options.selectItemName)+c(' type=\\\"%s\\\"',r)+c(' value=\\\"%s\\\"',b[g.options.idField])+c(' checked=\\\"%s\\\"',q===!0||p||q&&q.checked?\\\"checked\\\":void 0)+c(' disabled=\\\"%s\\\"',!z.checkboxEnabled||q&&q.disabled?\\\"disabled\\\":void 0)+\\\" />\\\",g.header.formatters[f]&&\\\"string\\\"==typeof q?q:\\\"\\\",g.options.cardView?\\\"</div>\\\":\\\"</td>\\\"].join(\\\"\\\"),b[g.header.stateField]=q===!0||q&&q.checked):(q=\\\"undefined\\\"==typeof q||null===q?g.options.undefinedText:q,o=g.options.cardView?['<div class=\\\"card-view\\\">',g.options.showHeader?c('<span class=\\\"title\\\" %s>%s</span>',k,d(g.columns,\\\"field\\\",\\\"title\\\",n)):\\\"\\\",c('<span class=\\\"value\\\">%s</span>',q),\\\"</div>\\\"].join(\\\"\\\"):[c(\\\"<td%s %s %s %s %s %s %s>\\\",t,u,k,v,w,x,y),q,\\\"</td>\\\"].join(\\\"\\\"),g.options.cardView&&g.options.smartDisplay&&\\\"\\\"===q&&(o='<div class=\\\"card-view\\\"></div>')),i.push(o)}}),this.options.cardView&&i.push(\\\"</div></td>\\\"),i.push(\\\"</tr>\\\"),i.join(\\\" \\\")}},o.prototype.initBody=function(b){var d=this,f=this.getData();this.trigger(\\\"pre-body\\\",f),this.$body=this.$el.find(\\\">tbody\\\"),this.$body.length||(this.$body=a(\\\"<tbody></tbody>\\\").appendTo(this.$el)),this.options.pagination&&\\\"server\\\"!==this.options.sidePagination||(this.pageFrom=1,this.pageTo=f.length);for(var g,i=a(document.createDocumentFragment()),j=this.pageFrom-1;j<this.pageTo;j++){\\nvar k=f[j],m=this.initRow(k,j,f,i);g=g||!!m,m&&m!==!0&&i.append(m)}g||i.append('<tr class=\\\"no-records-found\\\">'+c('<td colspan=\\\"%s\\\">%s</td>',this.$header.find(\\\"th\\\").length,this.options.formatNoMatches())+\\\"</tr>\\\"),this.$body.html(i),b||this.scrollTo(0),this.$body.find(\\\"> tr[data-index] > td\\\").off(\\\"click dblclick\\\").on(\\\"click dblclick\\\",function(b){var f=a(this),g=f.parent(),h=d.data[g.data(\\\"index\\\")],i=f[0].cellIndex,j=d.getVisibleFields(),k=j[d.options.detailView&&!d.options.cardView?i-1:i],m=d.columns[e(d.columns,k)],n=l(h,k,d.options.escape);if(!f.find(\\\".detail-icon\\\").length&&(d.trigger(\\\"click\\\"===b.type?\\\"click-cell\\\":\\\"dbl-click-cell\\\",k,n,h,f),d.trigger(\\\"click\\\"===b.type?\\\"click-row\\\":\\\"dbl-click-row\\\",h,g,k),\\\"click\\\"===b.type&&d.options.clickToSelect&&m.clickToSelect)){var o=g.find(c('[name=\\\"%s\\\"]',d.options.selectItemName));o.length&&o[0].click()}}),this.$body.find(\\\"> tr[data-index] > td > .detail-icon\\\").off(\\\"click\\\").on(\\\"click\\\",function(){var b=a(this),e=b.parent().parent(),g=e.data(\\\"index\\\"),i=f[g];if(e.next().is(\\\"tr.detail-view\\\"))b.find(\\\"i\\\").attr(\\\"class\\\",c(\\\"%s %s\\\",d.options.iconsPrefix,d.options.icons.detailOpen)),d.trigger(\\\"collapse-row\\\",g,i),e.next().remove();else{b.find(\\\"i\\\").attr(\\\"class\\\",c(\\\"%s %s\\\",d.options.iconsPrefix,d.options.icons.detailClose)),e.after(c('<tr class=\\\"detail-view\\\"><td colspan=\\\"%s\\\"></td></tr>',e.find(\\\"td\\\").length));var j=e.next().find(\\\"td\\\"),k=h(d.options,d.options.detailFormatter,[g,i,j],\\\"\\\");1===j.length&&j.append(k),d.trigger(\\\"expand-row\\\",g,i,j)}return d.resetView(),!1}),this.$selectItem=this.$body.find(c('[name=\\\"%s\\\"]',this.options.selectItemName)),this.$selectItem.off(\\\"click\\\").on(\\\"click\\\",function(b){b.stopImmediatePropagation();var c=a(this),e=c.prop(\\\"checked\\\"),f=d.data[c.data(\\\"index\\\")];d.options.maintainSelected&&a(this).is(\\\":radio\\\")&&a.each(d.options.data,function(a,b){b[d.header.stateField]=!1}),f[d.header.stateField]=e,d.options.singleSelect&&(d.$selectItem.not(this).each(function(){d.data[a(this).data(\\\"index\\\")][d.header.stateField]=!1}),d.$selectItem.filter(\\\":checked\\\").not(this).prop(\\\"checked\\\",!1)),d.updateSelected(),d.trigger(e?\\\"check\\\":\\\"uncheck\\\",f,c)}),a.each(this.header.events,function(b,c){if(c){\\\"string\\\"==typeof c&&(c=h(null,c));var e=d.header.fields[b],f=a.inArray(e,d.getVisibleFields());d.options.detailView&&!d.options.cardView&&(f+=1);for(var g in c)d.$body.find(\\\">tr:not(.no-records-found)\\\").each(function(){var b=a(this),h=b.find(d.options.cardView?\\\".card-view\\\":\\\"td\\\").eq(f),i=g.indexOf(\\\" \\\"),j=g.substring(0,i),k=g.substring(i+1),l=c[g];h.find(k).off(j).on(j,function(a){var c=b.data(\\\"index\\\"),f=d.data[c],g=f[e];l.apply(this,[a,g,f,c])})})}}),this.updateSelected(),this.resetView(),this.trigger(\\\"post-body\\\",f)},o.prototype.initServer=function(b,c,d){var e,f=this,g={},i={searchText:this.searchText,sortName:this.options.sortName,sortOrder:this.options.sortOrder};this.options.pagination&&(i.pageSize=this.options.pageSize===this.options.formatAllRows()?this.options.totalRows:this.options.pageSize,i.pageNumber=this.options.pageNumber),(d||this.options.url||this.options.ajax)&&(\\\"limit\\\"===this.options.queryParamsType&&(i={search:i.searchText,sort:i.sortName,order:i.sortOrder},this.options.pagination&&(i.offset=this.options.pageSize===this.options.formatAllRows()?0:this.options.pageSize*(this.options.pageNumber-1),i.limit=this.options.pageSize===this.options.formatAllRows()?this.options.totalRows:this.options.pageSize)),a.isEmptyObject(this.filterColumnsPartial)||(i.filter=JSON.stringify(this.filterColumnsPartial,null)),g=h(this.options,this.options.queryParams,[i],g),a.extend(g,c||{}),g!==!1&&(b||this.$tableLoading.show(),e=a.extend({},h(null,this.options.ajaxOptions),{type:this.options.method,url:d||this.options.url,data:\\\"application/json\\\"===this.options.contentType&&\\\"post\\\"===this.options.method?JSON.stringify(g):g,cache:this.options.cache,contentType:this.options.contentType,dataType:this.options.dataType,success:function(a){a=h(f.options,f.options.responseHandler,[a],a),f.load(a),f.trigger(\\\"load-success\\\",a),b||f.$tableLoading.hide()},error:function(a){f.trigger(\\\"load-error\\\",a.status,a),b||f.$tableLoading.hide()}}),this.options.ajax?h(this,this.options.ajax,[e],null):(this._xhr&&4!==this._xhr.readyState&&this._xhr.abort(),this._xhr=a.ajax(e))))},o.prototype.initSearchText=function(){if(this.options.search&&\\\"\\\"!==this.options.searchText){var a=this.$toolbar.find(\\\".search input\\\");a.val(this.options.searchText),this.onSearch({currentTarget:a})}},o.prototype.getCaret=function(){var b=this;a.each(this.$header.find(\\\"th\\\"),function(c,d){a(d).find(\\\".sortable\\\").removeClass(\\\"desc asc\\\").addClass(a(d).data(\\\"field\\\")===b.options.sortName?b.options.sortOrder:\\\"both\\\")})},o.prototype.updateSelected=function(){var b=this.$selectItem.filter(\\\":enabled\\\").length&&this.$selectItem.filter(\\\":enabled\\\").length===this.$selectItem.filter(\\\":enabled\\\").filter(\\\":checked\\\").length;this.$selectAll.add(this.$selectAll_).prop(\\\"checked\\\",b),this.$selectItem.each(function(){a(this).closest(\\\"tr\\\")[a(this).prop(\\\"checked\\\")?\\\"addClass\\\":\\\"removeClass\\\"](\\\"selected\\\")})},o.prototype.updateRows=function(){var b=this;this.$selectItem.each(function(){b.data[a(this).data(\\\"index\\\")][b.header.stateField]=a(this).prop(\\\"checked\\\")})},o.prototype.resetRows=function(){var b=this;a.each(this.data,function(a,c){b.$selectAll.prop(\\\"checked\\\",!1),b.$selectItem.prop(\\\"checked\\\",!1),b.header.stateField&&(c[b.header.stateField]=!1)}),this.initHiddenRows()},o.prototype.trigger=function(b){var c=Array.prototype.slice.call(arguments,1);b+=\\\".bs.table\\\",this.options[o.EVENTS[b]].apply(this.options,c),this.$el.trigger(a.Event(b),c),this.options.onAll(b,c),this.$el.trigger(a.Event(\\\"all.bs.table\\\"),[b,c])},o.prototype.resetHeader=function(){clearTimeout(this.timeoutId_),this.timeoutId_=setTimeout(a.proxy(this.fitHeader,this),this.$el.is(\\\":hidden\\\")?100:0)},o.prototype.fitHeader=function(){var b,d,e,f,h=this;if(h.$el.is(\\\":hidden\\\"))return void(h.timeoutId_=setTimeout(a.proxy(h.fitHeader,h),100));if(b=this.$tableBody.get(0),d=b.scrollWidth>b.clientWidth&&b.scrollHeight>b.clientHeight+this.$header.outerHeight()?g():0,this.$el.css(\\\"margin-top\\\",-this.$header.outerHeight()),e=a(\\\":focus\\\"),e.length>0){var i=e.parents(\\\"th\\\");if(i.length>0){var j=i.attr(\\\"data-field\\\");if(void 0!==j){var k=this.$header.find(\\\"[data-field='\\\"+j+\\\"']\\\");k.length>0&&k.find(\\\":input\\\").addClass(\\\"focus-temp\\\")}}}this.$header_=this.$header.clone(!0,!0),this.$selectAll_=this.$header_.find('[name=\\\"btSelectAll\\\"]'),this.$tableHeader.css({\\\"margin-right\\\":d}).find(\\\"table\\\").css(\\\"width\\\",this.$el.outerWidth()).html(\\\"\\\").attr(\\\"class\\\",this.$el.attr(\\\"class\\\")).append(this.$header_),f=a(\\\".focus-temp:visible:eq(0)\\\"),f.length>0&&(f.focus(),this.$header.find(\\\".focus-temp\\\").removeClass(\\\"focus-temp\\\")),this.$header.find(\\\"th[data-field]\\\").each(function(){h.$header_.find(c('th[data-field=\\\"%s\\\"]',a(this).data(\\\"field\\\"))).data(a(this).data())});var l=this.getVisibleFields(),m=this.$header_.find(\\\"th\\\");this.$body.find(\\\">tr:first-child:not(.no-records-found) > *\\\").each(function(b){var d=a(this),e=b;h.options.detailView&&!h.options.cardView&&(0===b&&h.$header_.find(\\\"th.detail\\\").find(\\\".fht-cell\\\").width(d.innerWidth()),e=b-1);var f=h.$header_.find(c('th[data-field=\\\"%s\\\"]',l[e]));f.length>1&&(f=a(m[d[0].cellIndex])),f.find(\\\".fht-cell\\\").width(d.innerWidth())}),this.$tableBody.off(\\\"scroll\\\").on(\\\"scroll\\\",function(){h.$tableHeader.scrollLeft(a(this).scrollLeft()),h.options.showFooter&&!h.options.cardView&&h.$tableFooter.scrollLeft(a(this).scrollLeft())}),h.trigger(\\\"post-header\\\")},o.prototype.resetFooter=function(){var b=this,d=b.getData(),e=[];this.options.showFooter&&!this.options.cardView&&(!this.options.cardView&&this.options.detailView&&e.push('<td><div class=\\\"th-inner\\\">&nbsp;</div><div class=\\\"fht-cell\\\"></div></td>'),a.each(this.columns,function(a,f){var g,i=\\\"\\\",j=\\\"\\\",k=[],l={},m=c(' class=\\\"%s\\\"',f[\\\"class\\\"]);if(f.visible&&(!b.options.cardView||f.cardVisible)){if(i=c(\\\"text-align: %s; \\\",f.falign?f.falign:f.align),j=c(\\\"vertical-align: %s; \\\",f.valign),l=h(null,b.options.footerStyle),l&&l.css)for(g in l.css)k.push(g+\\\": \\\"+l.css[g]);e.push(\\\"<td\\\",m,c(' style=\\\"%s\\\"',i+j+k.concat().join(\\\"; \\\")),\\\">\\\"),e.push('<div class=\\\"th-inner\\\">'),e.push(h(f,f.footerFormatter,[d],\\\"&nbsp;\\\")||\\\"&nbsp;\\\"),e.push(\\\"</div>\\\"),e.push('<div class=\\\"fht-cell\\\"></div>'),e.push(\\\"</div>\\\"),e.push(\\\"</td>\\\")}}),this.$tableFooter.find(\\\"tr\\\").html(e.join(\\\"\\\")),this.$tableFooter.show(),clearTimeout(this.timeoutFooter_),this.timeoutFooter_=setTimeout(a.proxy(this.fitFooter,this),this.$el.is(\\\":hidden\\\")?100:0))},o.prototype.fitFooter=function(){var b,c,d;return clearTimeout(this.timeoutFooter_),this.$el.is(\\\":hidden\\\")?void(this.timeoutFooter_=setTimeout(a.proxy(this.fitFooter,this),100)):(c=this.$el.css(\\\"width\\\"),d=c>this.$tableBody.width()?g():0,this.$tableFooter.css({\\\"margin-right\\\":d}).find(\\\"table\\\").css(\\\"width\\\",c).attr(\\\"class\\\",this.$el.attr(\\\"class\\\")),b=this.$tableFooter.find(\\\"td\\\"),void this.$body.find(\\\">tr:first-child:not(.no-records-found) > *\\\").each(function(c){var d=a(this);b.eq(c).find(\\\".fht-cell\\\").width(d.innerWidth())}))},o.prototype.toggleColumn=function(a,b,d){if(-1!==a&&(this.columns[a].visible=b,this.initHeader(),this.initSearch(),this.initPagination(),this.initBody(),this.options.showColumns)){var e=this.$toolbar.find(\\\".keep-open input\\\").prop(\\\"disabled\\\",!1);d&&e.filter(c('[value=\\\"%s\\\"]',a)).prop(\\\"checked\\\",b),e.filter(\\\":checked\\\").length<=this.options.minimumCountColumns&&e.filter(\\\":checked\\\").prop(\\\"disabled\\\",!0)}},o.prototype.getVisibleFields=function(){var b=this,c=[];return a.each(this.header.fields,function(a,d){var f=b.columns[e(b.columns,d)];f.visible&&c.push(d)}),c},o.prototype.resetView=function(a){var b=0;if(a&&a.height&&(this.options.height=a.height),this.$selectAll.prop(\\\"checked\\\",this.$selectItem.length>0&&this.$selectItem.length===this.$selectItem.filter(\\\":checked\\\").length),this.options.height){var c=this.$toolbar.outerHeight(!0),d=this.$pagination.outerHeight(!0),e=this.options.height-c-d;this.$tableContainer.css(\\\"height\\\",e+\\\"px\\\")}return this.options.cardView?(this.$el.css(\\\"margin-top\\\",\\\"0\\\"),this.$tableContainer.css(\\\"padding-bottom\\\",\\\"0\\\"),void this.$tableFooter.hide()):(this.options.showHeader&&this.options.height?(this.$tableHeader.show(),this.resetHeader(),b+=this.$header.outerHeight()):(this.$tableHeader.hide(),this.trigger(\\\"post-header\\\")),this.options.showFooter&&(this.resetFooter(),this.options.height&&(b+=this.$tableFooter.outerHeight()+1)),this.getCaret(),this.$tableContainer.css(\\\"padding-bottom\\\",b+\\\"px\\\"),void this.trigger(\\\"reset-view\\\"))},o.prototype.getData=function(b){return!this.searchText&&a.isEmptyObject(this.filterColumns)&&a.isEmptyObject(this.filterColumnsPartial)?b?this.options.data.slice(this.pageFrom-1,this.pageTo):this.options.data:b?this.data.slice(this.pageFrom-1,this.pageTo):this.data},o.prototype.load=function(b){var c=!1;\\\"server\\\"===this.options.sidePagination?(this.options.totalRows=b[this.options.totalField],c=b.fixedScroll,b=b[this.options.dataField]):a.isArray(b)||(c=b.fixedScroll,b=b.data),this.initData(b),this.initSearch(),this.initPagination(),this.initBody(c)},o.prototype.append=function(a){this.initData(a,\\\"append\\\"),this.initSearch(),this.initPagination(),this.initSort(),this.initBody(!0)},o.prototype.prepend=function(a){this.initData(a,\\\"prepend\\\"),this.initSearch(),this.initPagination(),this.initSort(),this.initBody(!0)},o.prototype.remove=function(b){var c,d,e=this.options.data.length;if(b.hasOwnProperty(\\\"field\\\")&&b.hasOwnProperty(\\\"values\\\")){for(c=e-1;c>=0;c--)d=this.options.data[c],d.hasOwnProperty(b.field)&&-1!==a.inArray(d[b.field],b.values)&&(this.options.data.splice(c,1),\\\"server\\\"===this.options.sidePagination&&(this.options.totalRows-=1));e!==this.options.data.length&&(this.initSearch(),this.initPagination(),this.initSort(),this.initBody(!0))}},o.prototype.removeAll=function(){this.options.data.length>0&&(this.options.data.splice(0,this.options.data.length),this.initSearch(),this.initPagination(),this.initBody(!0))},o.prototype.getRowByUniqueId=function(a){var b,c,d,e=this.options.uniqueId,f=this.options.data.length,g=null;for(b=f-1;b>=0;b--){if(c=this.options.data[b],c.hasOwnProperty(e))d=c[e];else{if(!c._data.hasOwnProperty(e))continue;d=c._data[e]}if(\\\"string\\\"==typeof d?a=a.toString():\\\"number\\\"==typeof d&&(Number(d)===d&&d%1===0?a=parseInt(a):d===Number(d)&&0!==d&&(a=parseFloat(a))),d===a){g=c;break}}return g},o.prototype.removeByUniqueId=function(a){var b=this.options.data.length,c=this.getRowByUniqueId(a);c&&this.options.data.splice(this.options.data.indexOf(c),1),b!==this.options.data.length&&(this.initSearch(),this.initPagination(),this.initBody(!0))},o.prototype.updateByUniqueId=function(b){var c=this,d=a.isArray(b)?b:[b];a.each(d,function(b,d){var e;d.hasOwnProperty(\\\"id\\\")&&d.hasOwnProperty(\\\"row\\\")&&(e=a.inArray(c.getRowByUniqueId(d.id),c.options.data),-1!==e&&a.extend(c.options.data[e],d.row))}),this.initSearch(),this.initPagination(),this.initSort(),this.initBody(!0)},o.prototype.insertRow=function(a){a.hasOwnProperty(\\\"index\\\")&&a.hasOwnProperty(\\\"row\\\")&&(this.data.splice(a.index,0,a.row),this.initSearch(),this.initPagination(),this.initSort(),this.initBody(!0))},o.prototype.updateRow=function(b){var c=this,d=a.isArray(b)?b:[b];a.each(d,function(b,d){d.hasOwnProperty(\\\"index\\\")&&d.hasOwnProperty(\\\"row\\\")&&a.extend(c.options.data[d.index],d.row)}),this.initSearch(),this.initPagination(),this.initSort(),this.initBody(!0)},o.prototype.initHiddenRows=function(){this.hiddenRows=[]},o.prototype.showRow=function(a){this.toggleRow(a,!0)},o.prototype.hideRow=function(a){this.toggleRow(a,!1)},o.prototype.toggleRow=function(b,c){var d,e;b.hasOwnProperty(\\\"index\\\")?d=this.getData()[b.index]:b.hasOwnProperty(\\\"uniqueId\\\")&&(d=this.getRowByUniqueId(b.uniqueId)),d&&(e=a.inArray(d,this.hiddenRows),c||-1!==e?c&&e>-1&&this.hiddenRows.splice(e,1):this.hiddenRows.push(d),this.initBody(!0))},o.prototype.getHiddenRows=function(){var b=this,c=this.getData(),d=[];return a.each(c,function(c,e){a.inArray(e,b.hiddenRows)>-1&&d.push(e)}),this.hiddenRows=d,d},o.prototype.mergeCells=function(b){var c,d,e,f=b.index,g=a.inArray(b.field,this.getVisibleFields()),h=b.rowspan||1,i=b.colspan||1,j=this.$body.find(\\\">tr\\\");if(this.options.detailView&&!this.options.cardView&&(g+=1),e=j.eq(f).find(\\\">td\\\").eq(g),!(0>f||0>g||f>=this.data.length)){for(c=f;f+h>c;c++)for(d=g;g+i>d;d++)j.eq(c).find(\\\">td\\\").eq(d).hide();e.attr(\\\"rowspan\\\",h).attr(\\\"colspan\\\",i).show()}},o.prototype.updateCell=function(a){a.hasOwnProperty(\\\"index\\\")&&a.hasOwnProperty(\\\"field\\\")&&a.hasOwnProperty(\\\"value\\\")&&(this.data[a.index][a.field]=a.value,a.reinit!==!1&&(this.initSort(),this.initBody(!0)))},o.prototype.getOptions=function(){return this.options},o.prototype.getSelections=function(){var b=this;return a.grep(this.options.data,function(a){return a[b.header.stateField]===!0})},o.prototype.getAllSelections=function(){var b=this;return a.grep(this.options.data,function(a){return a[b.header.stateField]})},o.prototype.checkAll=function(){this.checkAll_(!0)},o.prototype.uncheckAll=function(){this.checkAll_(!1)},o.prototype.checkInvert=function(){var b=this,c=b.$selectItem.filter(\\\":enabled\\\"),d=c.filter(\\\":checked\\\");c.each(function(){a(this).prop(\\\"checked\\\",!a(this).prop(\\\"checked\\\"))}),b.updateRows(),b.updateSelected(),b.trigger(\\\"uncheck-some\\\",d),d=b.getSelections(),b.trigger(\\\"check-some\\\",d)},o.prototype.checkAll_=function(a){var b;a||(b=this.getSelections()),this.$selectAll.add(this.$selectAll_).prop(\\\"checked\\\",a),this.$selectItem.filter(\\\":enabled\\\").prop(\\\"checked\\\",a),this.updateRows(),a&&(b=this.getSelections()),this.trigger(a?\\\"check-all\\\":\\\"uncheck-all\\\",b)},o.prototype.check=function(a){this.check_(!0,a)},o.prototype.uncheck=function(a){this.check_(!1,a)},o.prototype.check_=function(a,b){var d=this.$selectItem.filter(c('[data-index=\\\"%s\\\"]',b)).prop(\\\"checked\\\",a);this.data[b][this.header.stateField]=a,this.updateSelected(),this.trigger(a?\\\"check\\\":\\\"uncheck\\\",this.data[b],d)},o.prototype.checkBy=function(a){this.checkBy_(!0,a)},o.prototype.uncheckBy=function(a){this.checkBy_(!1,a)},o.prototype.checkBy_=function(b,d){if(d.hasOwnProperty(\\\"field\\\")&&d.hasOwnProperty(\\\"values\\\")){var e=this,f=[];a.each(this.options.data,function(g,h){if(!h.hasOwnProperty(d.field))return!1;if(-1!==a.inArray(h[d.field],d.values)){var i=e.$selectItem.filter(\\\":enabled\\\").filter(c('[data-index=\\\"%s\\\"]',g)).prop(\\\"checked\\\",b);h[e.header.stateField]=b,f.push(h),e.trigger(b?\\\"check\\\":\\\"uncheck\\\",h,i)}}),this.updateSelected(),this.trigger(b?\\\"check-some\\\":\\\"uncheck-some\\\",f)}},o.prototype.destroy=function(){this.$el.insertBefore(this.$container),a(this.options.toolbar).insertBefore(this.$el),this.$container.next().remove(),this.$container.remove(),this.$el.html(this.$el_.html()).css(\\\"margin-top\\\",\\\"0\\\").attr(\\\"class\\\",this.$el_.attr(\\\"class\\\")||\\\"\\\")},o.prototype.showLoading=function(){this.$tableLoading.show()},o.prototype.hideLoading=function(){this.$tableLoading.hide()},o.prototype.togglePagination=function(){this.options.pagination=!this.options.pagination;var a=this.$toolbar.find('button[name=\\\"paginationSwitch\\\"] i');this.options.pagination?a.attr(\\\"class\\\",this.options.iconsPrefix+\\\" \\\"+this.options.icons.paginationSwitchDown):a.attr(\\\"class\\\",this.options.iconsPrefix+\\\" \\\"+this.options.icons.paginationSwitchUp),this.updatePagination()},o.prototype.refresh=function(a){a&&a.url&&(this.options.url=a.url),a&&a.pageNumber&&(this.options.pageNumber=a.pageNumber),a&&a.pageSize&&(this.options.pageSize=a.pageSize),this.initServer(a&&a.silent,a&&a.query,a&&a.url),this.trigger(\\\"refresh\\\",a)},o.prototype.resetWidth=function(){this.options.showHeader&&this.options.height&&this.fitHeader(),this.options.showFooter&&this.fitFooter()},o.prototype.showColumn=function(a){this.toggleColumn(e(this.columns,a),!0,!0)},o.prototype.hideColumn=function(a){this.toggleColumn(e(this.columns,a),!1,!0)},o.prototype.getHiddenColumns=function(){return a.grep(this.columns,function(a){return!a.visible})},o.prototype.getVisibleColumns=function(){return a.grep(this.columns,function(a){return a.visible})},o.prototype.toggleAllColumns=function(b){if(a.each(this.columns,function(a){this.columns[a].visible=b}),this.initHeader(),this.initSearch(),this.initPagination(),this.initBody(),this.options.showColumns){var c=this.$toolbar.find(\\\".keep-open input\\\").prop(\\\"disabled\\\",!1);c.filter(\\\":checked\\\").length<=this.options.minimumCountColumns&&c.filter(\\\":checked\\\").prop(\\\"disabled\\\",!0)}},o.prototype.showAllColumns=function(){this.toggleAllColumns(!0)},o.prototype.hideAllColumns=function(){this.toggleAllColumns(!1)},o.prototype.filterBy=function(b){this.filterColumns=a.isEmptyObject(b)?{}:b,this.options.pageNumber=1,this.initSearch(),this.updatePagination()},o.prototype.scrollTo=function(a){return\\\"string\\\"==typeof a&&(a=\\\"bottom\\\"===a?this.$tableBody[0].scrollHeight:0),\\\"number\\\"==typeof a&&this.$tableBody.scrollTop(a),\\\"undefined\\\"==typeof a?this.$tableBody.scrollTop():void 0},o.prototype.getScrollPosition=function(){return this.scrollTo()},o.prototype.selectPage=function(a){a>0&&a<=this.options.totalPages&&(this.options.pageNumber=a,this.updatePagination())},o.prototype.prevPage=function(){this.options.pageNumber>1&&(this.options.pageNumber--,this.updatePagination())},o.prototype.nextPage=function(){this.options.pageNumber<this.options.totalPages&&(this.options.pageNumber++,this.updatePagination())},o.prototype.toggleView=function(){this.options.cardView=!this.options.cardView,this.initHeader(),this.initBody(),this.trigger(\\\"toggle\\\",this.options.cardView)},o.prototype.refreshOptions=function(b){i(this.options,b,!0)||(this.options=a.extend(this.options,b),this.trigger(\\\"refresh-options\\\",this.options),this.destroy(),this.init())},o.prototype.resetSearch=function(a){var b=this.$toolbar.find(\\\".search input\\\");b.val(a||\\\"\\\"),this.onSearch({currentTarget:b})},o.prototype.expandRow_=function(a,b){var d=this.$body.find(c('> tr[data-index=\\\"%s\\\"]',b));d.next().is(\\\"tr.detail-view\\\")===(a?!1:!0)&&d.find(\\\"> td > .detail-icon\\\").click()},o.prototype.expandRow=function(a){this.expandRow_(!0,a)},o.prototype.collapseRow=function(a){this.expandRow_(!1,a)},o.prototype.expandAllRows=function(b){if(b){var d=this.$body.find(c('> tr[data-index=\\\"%s\\\"]',0)),e=this,f=null,g=!1,h=-1;if(d.next().is(\\\"tr.detail-view\\\")?d.next().next().is(\\\"tr.detail-view\\\")||(d.next().find(\\\".detail-icon\\\").click(),g=!0):(d.find(\\\"> td > .detail-icon\\\").click(),g=!0),g)try{h=setInterval(function(){f=e.$body.find(\\\"tr.detail-view\\\").last().find(\\\".detail-icon\\\"),f.length>0?f.click():clearInterval(h)},1)}catch(i){clearInterval(h)}}else for(var j=this.$body.children(),k=0;k<j.length;k++)this.expandRow_(!0,a(j[k]).data(\\\"index\\\"))},o.prototype.collapseAllRows=function(b){if(b)this.expandRow_(!1,0);else for(var c=this.$body.children(),d=0;d<c.length;d++)this.expandRow_(!1,a(c[d]).data(\\\"index\\\"))},o.prototype.updateFormatText=function(a,b){this.options[c(\\\"format%s\\\",a)]&&(\\\"string\\\"==typeof b?this.options[c(\\\"format%s\\\",a)]=function(){return b}:\\\"function\\\"==typeof b&&(this.options[c(\\\"format%s\\\",a)]=b)),this.initToolbar(),this.initPagination(),this.initBody()};var p=[\\\"getOptions\\\",\\\"getSelections\\\",\\\"getAllSelections\\\",\\\"getData\\\",\\\"load\\\",\\\"append\\\",\\\"prepend\\\",\\\"remove\\\",\\\"removeAll\\\",\\\"insertRow\\\",\\\"updateRow\\\",\\\"updateCell\\\",\\\"updateByUniqueId\\\",\\\"removeByUniqueId\\\",\\\"getRowByUniqueId\\\",\\\"showRow\\\",\\\"hideRow\\\",\\\"getHiddenRows\\\",\\\"mergeCells\\\",\\\"checkAll\\\",\\\"uncheckAll\\\",\\\"checkInvert\\\",\\\"check\\\",\\\"uncheck\\\",\\\"checkBy\\\",\\\"uncheckBy\\\",\\\"refresh\\\",\\\"resetView\\\",\\\"resetWidth\\\",\\\"destroy\\\",\\\"showLoading\\\",\\\"hideLoading\\\",\\\"showColumn\\\",\\\"hideColumn\\\",\\\"getHiddenColumns\\\",\\\"getVisibleColumns\\\",\\\"showAllColumns\\\",\\\"hideAllColumns\\\",\\\"filterBy\\\",\\\"scrollTo\\\",\\\"getScrollPosition\\\",\\\"selectPage\\\",\\\"prevPage\\\",\\\"nextPage\\\",\\\"togglePagination\\\",\\\"toggleView\\\",\\\"refreshOptions\\\",\\\"resetSearch\\\",\\\"expandRow\\\",\\\"collapseRow\\\",\\\"expandAllRows\\\",\\\"collapseAllRows\\\",\\\"updateFormatText\\\"];a.fn.bootstrapTable=function(b){var c,d=Array.prototype.slice.call(arguments,1);return this.each(function(){var e=a(this),f=e.data(\\\"bootstrap.table\\\"),g=a.extend({},o.DEFAULTS,e.data(),\\\"object\\\"==typeof b&&b);if(\\\"string\\\"==typeof b){if(a.inArray(b,p)<0)throw new Error(\\\"Unknown method: \\\"+b);if(!f)return;c=f[b].apply(f,d),\\\"destroy\\\"===b&&e.removeData(\\\"bootstrap.table\\\")}f||e.data(\\\"bootstrap.table\\\",f=new o(this,g))}),\\\"undefined\\\"==typeof c?this:c},a.fn.bootstrapTable.Constructor=o,a.fn.bootstrapTable.defaults=o.DEFAULTS,a.fn.bootstrapTable.columnDefaults=o.COLUMN_DEFAULTS,a.fn.bootstrapTable.locales=o.LOCALES,a.fn.bootstrapTable.methods=p,a.fn.bootstrapTable.utils={sprintf:c,getFieldIndex:e,compareObjects:i,calculateObjectValue:h,getItemField:l,objectKeys:n,isIEBrowser:m},a(function(){a('[data-toggle=\\\"table\\\"]').bootstrapTable()})}(jQuery);\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/skadyeyes/代码/chart/~/raw-loader!/Users/skadyeyes/代码/chart/~/bootstrap-table/dist/bootstrap-table.min.js\n// module id = ../../../../raw-loader/index.js!../../../../bootstrap-table/dist/bootstrap-table.min.js\n// module chunks = 3","module.exports = \"/*\\n* bootstrap-table - v1.11.1 - 2017-02-22\\n* https://github.com/wenzhixin/bootstrap-table\\n* Copyright (c) 2017 zhixin wen\\n* Licensed MIT License\\n*/\\n!function(a){\\\"use strict\\\";a.fn.bootstrapTable.locales[\\\"zh-CN\\\"]={formatLoadingMessage:function(){return\\\"正在努力地加载数据中，请稍候……\\\"},formatRecordsPerPage:function(a){return\\\"每页显示 \\\"+a+\\\" 条记录\\\"},formatShowingRows:function(a,b,c){return\\\"显示第 \\\"+a+\\\" 到第 \\\"+b+\\\" 条记录，总共 \\\"+c+\\\" 条记录\\\"},formatSearch:function(){return\\\"搜索\\\"},formatNoMatches:function(){return\\\"没有找到匹配的记录\\\"},formatPaginationSwitch:function(){return\\\"隐藏/显示分页\\\"},formatRefresh:function(){return\\\"刷新\\\"},formatToggle:function(){return\\\"切换\\\"},formatColumns:function(){return\\\"列\\\"},formatExport:function(){return\\\"导出数据\\\"},formatClearFilters:function(){return\\\"清空过滤\\\"}},a.extend(a.fn.bootstrapTable.defaults,a.fn.bootstrapTable.locales[\\\"zh-CN\\\"])}(jQuery);\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/skadyeyes/代码/chart/~/raw-loader!/Users/skadyeyes/代码/chart/~/bootstrap-table/dist/locale/bootstrap-table-zh-CN.min.js\n// module id = ../../../../raw-loader/index.js!../../../../bootstrap-table/dist/locale/bootstrap-table-zh-CN.min.js\n// module chunks = 3","module.exports = \"/*!\\n * Bootstrap v3.3.7 (http://getbootstrap.com)\\n * Copyright 2011-2016 Twitter, Inc.\\n * Licensed under the MIT license\\n */\\nif(\\\"undefined\\\"==typeof jQuery)throw new Error(\\\"Bootstrap's JavaScript requires jQuery\\\");+function(a){\\\"use strict\\\";var b=a.fn.jquery.split(\\\" \\\")[0].split(\\\".\\\");if(b[0]<2&&b[1]<9||1==b[0]&&9==b[1]&&b[2]<1||b[0]>3)throw new Error(\\\"Bootstrap's JavaScript requires jQuery version 1.9.1 or higher, but lower than version 4\\\")}(jQuery),+function(a){\\\"use strict\\\";function b(){var a=document.createElement(\\\"bootstrap\\\"),b={WebkitTransition:\\\"webkitTransitionEnd\\\",MozTransition:\\\"transitionend\\\",OTransition:\\\"oTransitionEnd otransitionend\\\",transition:\\\"transitionend\\\"};for(var c in b)if(void 0!==a.style[c])return{end:b[c]};return!1}a.fn.emulateTransitionEnd=function(b){var c=!1,d=this;a(this).one(\\\"bsTransitionEnd\\\",function(){c=!0});var e=function(){c||a(d).trigger(a.support.transition.end)};return setTimeout(e,b),this},a(function(){a.support.transition=b(),a.support.transition&&(a.event.special.bsTransitionEnd={bindType:a.support.transition.end,delegateType:a.support.transition.end,handle:function(b){if(a(b.target).is(this))return b.handleObj.handler.apply(this,arguments)}})})}(jQuery),+function(a){\\\"use strict\\\";function b(b){return this.each(function(){var c=a(this),e=c.data(\\\"bs.alert\\\");e||c.data(\\\"bs.alert\\\",e=new d(this)),\\\"string\\\"==typeof b&&e[b].call(c)})}var c='[data-dismiss=\\\"alert\\\"]',d=function(b){a(b).on(\\\"click\\\",c,this.close)};d.VERSION=\\\"3.3.7\\\",d.TRANSITION_DURATION=150,d.prototype.close=function(b){function c(){g.detach().trigger(\\\"closed.bs.alert\\\").remove()}var e=a(this),f=e.attr(\\\"data-target\\\");f||(f=e.attr(\\\"href\\\"),f=f&&f.replace(/.*(?=#[^\\\\s]*$)/,\\\"\\\"));var g=a(\\\"#\\\"===f?[]:f);b&&b.preventDefault(),g.length||(g=e.closest(\\\".alert\\\")),g.trigger(b=a.Event(\\\"close.bs.alert\\\")),b.isDefaultPrevented()||(g.removeClass(\\\"in\\\"),a.support.transition&&g.hasClass(\\\"fade\\\")?g.one(\\\"bsTransitionEnd\\\",c).emulateTransitionEnd(d.TRANSITION_DURATION):c())};var e=a.fn.alert;a.fn.alert=b,a.fn.alert.Constructor=d,a.fn.alert.noConflict=function(){return a.fn.alert=e,this},a(document).on(\\\"click.bs.alert.data-api\\\",c,d.prototype.close)}(jQuery),+function(a){\\\"use strict\\\";function b(b){return this.each(function(){var d=a(this),e=d.data(\\\"bs.button\\\"),f=\\\"object\\\"==typeof b&&b;e||d.data(\\\"bs.button\\\",e=new c(this,f)),\\\"toggle\\\"==b?e.toggle():b&&e.setState(b)})}var c=function(b,d){this.$element=a(b),this.options=a.extend({},c.DEFAULTS,d),this.isLoading=!1};c.VERSION=\\\"3.3.7\\\",c.DEFAULTS={loadingText:\\\"loading...\\\"},c.prototype.setState=function(b){var c=\\\"disabled\\\",d=this.$element,e=d.is(\\\"input\\\")?\\\"val\\\":\\\"html\\\",f=d.data();b+=\\\"Text\\\",null==f.resetText&&d.data(\\\"resetText\\\",d[e]()),setTimeout(a.proxy(function(){d[e](null==f[b]?this.options[b]:f[b]),\\\"loadingText\\\"==b?(this.isLoading=!0,d.addClass(c).attr(c,c).prop(c,!0)):this.isLoading&&(this.isLoading=!1,d.removeClass(c).removeAttr(c).prop(c,!1))},this),0)},c.prototype.toggle=function(){var a=!0,b=this.$element.closest('[data-toggle=\\\"buttons\\\"]');if(b.length){var c=this.$element.find(\\\"input\\\");\\\"radio\\\"==c.prop(\\\"type\\\")?(c.prop(\\\"checked\\\")&&(a=!1),b.find(\\\".active\\\").removeClass(\\\"active\\\"),this.$element.addClass(\\\"active\\\")):\\\"checkbox\\\"==c.prop(\\\"type\\\")&&(c.prop(\\\"checked\\\")!==this.$element.hasClass(\\\"active\\\")&&(a=!1),this.$element.toggleClass(\\\"active\\\")),c.prop(\\\"checked\\\",this.$element.hasClass(\\\"active\\\")),a&&c.trigger(\\\"change\\\")}else this.$element.attr(\\\"aria-pressed\\\",!this.$element.hasClass(\\\"active\\\")),this.$element.toggleClass(\\\"active\\\")};var d=a.fn.button;a.fn.button=b,a.fn.button.Constructor=c,a.fn.button.noConflict=function(){return a.fn.button=d,this},a(document).on(\\\"click.bs.button.data-api\\\",'[data-toggle^=\\\"button\\\"]',function(c){var d=a(c.target).closest(\\\".btn\\\");b.call(d,\\\"toggle\\\"),a(c.target).is('input[type=\\\"radio\\\"], input[type=\\\"checkbox\\\"]')||(c.preventDefault(),d.is(\\\"input,button\\\")?d.trigger(\\\"focus\\\"):d.find(\\\"input:visible,button:visible\\\").first().trigger(\\\"focus\\\"))}).on(\\\"focus.bs.button.data-api blur.bs.button.data-api\\\",'[data-toggle^=\\\"button\\\"]',function(b){a(b.target).closest(\\\".btn\\\").toggleClass(\\\"focus\\\",/^focus(in)?$/.test(b.type))})}(jQuery),+function(a){\\\"use strict\\\";function b(b){return this.each(function(){var d=a(this),e=d.data(\\\"bs.carousel\\\"),f=a.extend({},c.DEFAULTS,d.data(),\\\"object\\\"==typeof b&&b),g=\\\"string\\\"==typeof b?b:f.slide;e||d.data(\\\"bs.carousel\\\",e=new c(this,f)),\\\"number\\\"==typeof b?e.to(b):g?e[g]():f.interval&&e.pause().cycle()})}var c=function(b,c){this.$element=a(b),this.$indicators=this.$element.find(\\\".carousel-indicators\\\"),this.options=c,this.paused=null,this.sliding=null,this.interval=null,this.$active=null,this.$items=null,this.options.keyboard&&this.$element.on(\\\"keydown.bs.carousel\\\",a.proxy(this.keydown,this)),\\\"hover\\\"==this.options.pause&&!(\\\"ontouchstart\\\"in document.documentElement)&&this.$element.on(\\\"mouseenter.bs.carousel\\\",a.proxy(this.pause,this)).on(\\\"mouseleave.bs.carousel\\\",a.proxy(this.cycle,this))};c.VERSION=\\\"3.3.7\\\",c.TRANSITION_DURATION=600,c.DEFAULTS={interval:5e3,pause:\\\"hover\\\",wrap:!0,keyboard:!0},c.prototype.keydown=function(a){if(!/input|textarea/i.test(a.target.tagName)){switch(a.which){case 37:this.prev();break;case 39:this.next();break;default:return}a.preventDefault()}},c.prototype.cycle=function(b){return b||(this.paused=!1),this.interval&&clearInterval(this.interval),this.options.interval&&!this.paused&&(this.interval=setInterval(a.proxy(this.next,this),this.options.interval)),this},c.prototype.getItemIndex=function(a){return this.$items=a.parent().children(\\\".item\\\"),this.$items.index(a||this.$active)},c.prototype.getItemForDirection=function(a,b){var c=this.getItemIndex(b),d=\\\"prev\\\"==a&&0===c||\\\"next\\\"==a&&c==this.$items.length-1;if(d&&!this.options.wrap)return b;var e=\\\"prev\\\"==a?-1:1,f=(c+e)%this.$items.length;return this.$items.eq(f)},c.prototype.to=function(a){var b=this,c=this.getItemIndex(this.$active=this.$element.find(\\\".item.active\\\"));if(!(a>this.$items.length-1||a<0))return this.sliding?this.$element.one(\\\"slid.bs.carousel\\\",function(){b.to(a)}):c==a?this.pause().cycle():this.slide(a>c?\\\"next\\\":\\\"prev\\\",this.$items.eq(a))},c.prototype.pause=function(b){return b||(this.paused=!0),this.$element.find(\\\".next, .prev\\\").length&&a.support.transition&&(this.$element.trigger(a.support.transition.end),this.cycle(!0)),this.interval=clearInterval(this.interval),this},c.prototype.next=function(){if(!this.sliding)return this.slide(\\\"next\\\")},c.prototype.prev=function(){if(!this.sliding)return this.slide(\\\"prev\\\")},c.prototype.slide=function(b,d){var e=this.$element.find(\\\".item.active\\\"),f=d||this.getItemForDirection(b,e),g=this.interval,h=\\\"next\\\"==b?\\\"left\\\":\\\"right\\\",i=this;if(f.hasClass(\\\"active\\\"))return this.sliding=!1;var j=f[0],k=a.Event(\\\"slide.bs.carousel\\\",{relatedTarget:j,direction:h});if(this.$element.trigger(k),!k.isDefaultPrevented()){if(this.sliding=!0,g&&this.pause(),this.$indicators.length){this.$indicators.find(\\\".active\\\").removeClass(\\\"active\\\");var l=a(this.$indicators.children()[this.getItemIndex(f)]);l&&l.addClass(\\\"active\\\")}var m=a.Event(\\\"slid.bs.carousel\\\",{relatedTarget:j,direction:h});return a.support.transition&&this.$element.hasClass(\\\"slide\\\")?(f.addClass(b),f[0].offsetWidth,e.addClass(h),f.addClass(h),e.one(\\\"bsTransitionEnd\\\",function(){f.removeClass([b,h].join(\\\" \\\")).addClass(\\\"active\\\"),e.removeClass([\\\"active\\\",h].join(\\\" \\\")),i.sliding=!1,setTimeout(function(){i.$element.trigger(m)},0)}).emulateTransitionEnd(c.TRANSITION_DURATION)):(e.removeClass(\\\"active\\\"),f.addClass(\\\"active\\\"),this.sliding=!1,this.$element.trigger(m)),g&&this.cycle(),this}};var d=a.fn.carousel;a.fn.carousel=b,a.fn.carousel.Constructor=c,a.fn.carousel.noConflict=function(){return a.fn.carousel=d,this};var e=function(c){var d,e=a(this),f=a(e.attr(\\\"data-target\\\")||(d=e.attr(\\\"href\\\"))&&d.replace(/.*(?=#[^\\\\s]+$)/,\\\"\\\"));if(f.hasClass(\\\"carousel\\\")){var g=a.extend({},f.data(),e.data()),h=e.attr(\\\"data-slide-to\\\");h&&(g.interval=!1),b.call(f,g),h&&f.data(\\\"bs.carousel\\\").to(h),c.preventDefault()}};a(document).on(\\\"click.bs.carousel.data-api\\\",\\\"[data-slide]\\\",e).on(\\\"click.bs.carousel.data-api\\\",\\\"[data-slide-to]\\\",e),a(window).on(\\\"load\\\",function(){a('[data-ride=\\\"carousel\\\"]').each(function(){var c=a(this);b.call(c,c.data())})})}(jQuery),+function(a){\\\"use strict\\\";function b(b){var c,d=b.attr(\\\"data-target\\\")||(c=b.attr(\\\"href\\\"))&&c.replace(/.*(?=#[^\\\\s]+$)/,\\\"\\\");return a(d)}function c(b){return this.each(function(){var c=a(this),e=c.data(\\\"bs.collapse\\\"),f=a.extend({},d.DEFAULTS,c.data(),\\\"object\\\"==typeof b&&b);!e&&f.toggle&&/show|hide/.test(b)&&(f.toggle=!1),e||c.data(\\\"bs.collapse\\\",e=new d(this,f)),\\\"string\\\"==typeof b&&e[b]()})}var d=function(b,c){this.$element=a(b),this.options=a.extend({},d.DEFAULTS,c),this.$trigger=a('[data-toggle=\\\"collapse\\\"][href=\\\"#'+b.id+'\\\"],[data-toggle=\\\"collapse\\\"][data-target=\\\"#'+b.id+'\\\"]'),this.transitioning=null,this.options.parent?this.$parent=this.getParent():this.addAriaAndCollapsedClass(this.$element,this.$trigger),this.options.toggle&&this.toggle()};d.VERSION=\\\"3.3.7\\\",d.TRANSITION_DURATION=350,d.DEFAULTS={toggle:!0},d.prototype.dimension=function(){var a=this.$element.hasClass(\\\"width\\\");return a?\\\"width\\\":\\\"height\\\"},d.prototype.show=function(){if(!this.transitioning&&!this.$element.hasClass(\\\"in\\\")){var b,e=this.$parent&&this.$parent.children(\\\".panel\\\").children(\\\".in, .collapsing\\\");if(!(e&&e.length&&(b=e.data(\\\"bs.collapse\\\"),b&&b.transitioning))){var f=a.Event(\\\"show.bs.collapse\\\");if(this.$element.trigger(f),!f.isDefaultPrevented()){e&&e.length&&(c.call(e,\\\"hide\\\"),b||e.data(\\\"bs.collapse\\\",null));var g=this.dimension();this.$element.removeClass(\\\"collapse\\\").addClass(\\\"collapsing\\\")[g](0).attr(\\\"aria-expanded\\\",!0),this.$trigger.removeClass(\\\"collapsed\\\").attr(\\\"aria-expanded\\\",!0),this.transitioning=1;var h=function(){this.$element.removeClass(\\\"collapsing\\\").addClass(\\\"collapse in\\\")[g](\\\"\\\"),this.transitioning=0,this.$element.trigger(\\\"shown.bs.collapse\\\")};if(!a.support.transition)return h.call(this);var i=a.camelCase([\\\"scroll\\\",g].join(\\\"-\\\"));this.$element.one(\\\"bsTransitionEnd\\\",a.proxy(h,this)).emulateTransitionEnd(d.TRANSITION_DURATION)[g](this.$element[0][i])}}}},d.prototype.hide=function(){if(!this.transitioning&&this.$element.hasClass(\\\"in\\\")){var b=a.Event(\\\"hide.bs.collapse\\\");if(this.$element.trigger(b),!b.isDefaultPrevented()){var c=this.dimension();this.$element[c](this.$element[c]())[0].offsetHeight,this.$element.addClass(\\\"collapsing\\\").removeClass(\\\"collapse in\\\").attr(\\\"aria-expanded\\\",!1),this.$trigger.addClass(\\\"collapsed\\\").attr(\\\"aria-expanded\\\",!1),this.transitioning=1;var e=function(){this.transitioning=0,this.$element.removeClass(\\\"collapsing\\\").addClass(\\\"collapse\\\").trigger(\\\"hidden.bs.collapse\\\")};return a.support.transition?void this.$element[c](0).one(\\\"bsTransitionEnd\\\",a.proxy(e,this)).emulateTransitionEnd(d.TRANSITION_DURATION):e.call(this)}}},d.prototype.toggle=function(){this[this.$element.hasClass(\\\"in\\\")?\\\"hide\\\":\\\"show\\\"]()},d.prototype.getParent=function(){return a(this.options.parent).find('[data-toggle=\\\"collapse\\\"][data-parent=\\\"'+this.options.parent+'\\\"]').each(a.proxy(function(c,d){var e=a(d);this.addAriaAndCollapsedClass(b(e),e)},this)).end()},d.prototype.addAriaAndCollapsedClass=function(a,b){var c=a.hasClass(\\\"in\\\");a.attr(\\\"aria-expanded\\\",c),b.toggleClass(\\\"collapsed\\\",!c).attr(\\\"aria-expanded\\\",c)};var e=a.fn.collapse;a.fn.collapse=c,a.fn.collapse.Constructor=d,a.fn.collapse.noConflict=function(){return a.fn.collapse=e,this},a(document).on(\\\"click.bs.collapse.data-api\\\",'[data-toggle=\\\"collapse\\\"]',function(d){var e=a(this);e.attr(\\\"data-target\\\")||d.preventDefault();var f=b(e),g=f.data(\\\"bs.collapse\\\"),h=g?\\\"toggle\\\":e.data();c.call(f,h)})}(jQuery),+function(a){\\\"use strict\\\";function b(b){var c=b.attr(\\\"data-target\\\");c||(c=b.attr(\\\"href\\\"),c=c&&/#[A-Za-z]/.test(c)&&c.replace(/.*(?=#[^\\\\s]*$)/,\\\"\\\"));var d=c&&a(c);return d&&d.length?d:b.parent()}function c(c){c&&3===c.which||(a(e).remove(),a(f).each(function(){var d=a(this),e=b(d),f={relatedTarget:this};e.hasClass(\\\"open\\\")&&(c&&\\\"click\\\"==c.type&&/input|textarea/i.test(c.target.tagName)&&a.contains(e[0],c.target)||(e.trigger(c=a.Event(\\\"hide.bs.dropdown\\\",f)),c.isDefaultPrevented()||(d.attr(\\\"aria-expanded\\\",\\\"false\\\"),e.removeClass(\\\"open\\\").trigger(a.Event(\\\"hidden.bs.dropdown\\\",f)))))}))}function d(b){return this.each(function(){var c=a(this),d=c.data(\\\"bs.dropdown\\\");d||c.data(\\\"bs.dropdown\\\",d=new g(this)),\\\"string\\\"==typeof b&&d[b].call(c)})}var e=\\\".dropdown-backdrop\\\",f='[data-toggle=\\\"dropdown\\\"]',g=function(b){a(b).on(\\\"click.bs.dropdown\\\",this.toggle)};g.VERSION=\\\"3.3.7\\\",g.prototype.toggle=function(d){var e=a(this);if(!e.is(\\\".disabled, :disabled\\\")){var f=b(e),g=f.hasClass(\\\"open\\\");if(c(),!g){\\\"ontouchstart\\\"in document.documentElement&&!f.closest(\\\".navbar-nav\\\").length&&a(document.createElement(\\\"div\\\")).addClass(\\\"dropdown-backdrop\\\").insertAfter(a(this)).on(\\\"click\\\",c);var h={relatedTarget:this};if(f.trigger(d=a.Event(\\\"show.bs.dropdown\\\",h)),d.isDefaultPrevented())return;e.trigger(\\\"focus\\\").attr(\\\"aria-expanded\\\",\\\"true\\\"),f.toggleClass(\\\"open\\\").trigger(a.Event(\\\"shown.bs.dropdown\\\",h))}return!1}},g.prototype.keydown=function(c){if(/(38|40|27|32)/.test(c.which)&&!/input|textarea/i.test(c.target.tagName)){var d=a(this);if(c.preventDefault(),c.stopPropagation(),!d.is(\\\".disabled, :disabled\\\")){var e=b(d),g=e.hasClass(\\\"open\\\");if(!g&&27!=c.which||g&&27==c.which)return 27==c.which&&e.find(f).trigger(\\\"focus\\\"),d.trigger(\\\"click\\\");var h=\\\" li:not(.disabled):visible a\\\",i=e.find(\\\".dropdown-menu\\\"+h);if(i.length){var j=i.index(c.target);38==c.which&&j>0&&j--,40==c.which&&j<i.length-1&&j++,~j||(j=0),i.eq(j).trigger(\\\"focus\\\")}}}};var h=a.fn.dropdown;a.fn.dropdown=d,a.fn.dropdown.Constructor=g,a.fn.dropdown.noConflict=function(){return a.fn.dropdown=h,this},a(document).on(\\\"click.bs.dropdown.data-api\\\",c).on(\\\"click.bs.dropdown.data-api\\\",\\\".dropdown form\\\",function(a){a.stopPropagation()}).on(\\\"click.bs.dropdown.data-api\\\",f,g.prototype.toggle).on(\\\"keydown.bs.dropdown.data-api\\\",f,g.prototype.keydown).on(\\\"keydown.bs.dropdown.data-api\\\",\\\".dropdown-menu\\\",g.prototype.keydown)}(jQuery),+function(a){\\\"use strict\\\";function b(b,d){return this.each(function(){var e=a(this),f=e.data(\\\"bs.modal\\\"),g=a.extend({},c.DEFAULTS,e.data(),\\\"object\\\"==typeof b&&b);f||e.data(\\\"bs.modal\\\",f=new c(this,g)),\\\"string\\\"==typeof b?f[b](d):g.show&&f.show(d)})}var c=function(b,c){this.options=c,this.$body=a(document.body),this.$element=a(b),this.$dialog=this.$element.find(\\\".modal-dialog\\\"),this.$backdrop=null,this.isShown=null,this.originalBodyPad=null,this.scrollbarWidth=0,this.ignoreBackdropClick=!1,this.options.remote&&this.$element.find(\\\".modal-content\\\").load(this.options.remote,a.proxy(function(){this.$element.trigger(\\\"loaded.bs.modal\\\")},this))};c.VERSION=\\\"3.3.7\\\",c.TRANSITION_DURATION=300,c.BACKDROP_TRANSITION_DURATION=150,c.DEFAULTS={backdrop:!0,keyboard:!0,show:!0},c.prototype.toggle=function(a){return this.isShown?this.hide():this.show(a)},c.prototype.show=function(b){var d=this,e=a.Event(\\\"show.bs.modal\\\",{relatedTarget:b});this.$element.trigger(e),this.isShown||e.isDefaultPrevented()||(this.isShown=!0,this.checkScrollbar(),this.setScrollbar(),this.$body.addClass(\\\"modal-open\\\"),this.escape(),this.resize(),this.$element.on(\\\"click.dismiss.bs.modal\\\",'[data-dismiss=\\\"modal\\\"]',a.proxy(this.hide,this)),this.$dialog.on(\\\"mousedown.dismiss.bs.modal\\\",function(){d.$element.one(\\\"mouseup.dismiss.bs.modal\\\",function(b){a(b.target).is(d.$element)&&(d.ignoreBackdropClick=!0)})}),this.backdrop(function(){var e=a.support.transition&&d.$element.hasClass(\\\"fade\\\");d.$element.parent().length||d.$element.appendTo(d.$body),d.$element.show().scrollTop(0),d.adjustDialog(),e&&d.$element[0].offsetWidth,d.$element.addClass(\\\"in\\\"),d.enforceFocus();var f=a.Event(\\\"shown.bs.modal\\\",{relatedTarget:b});e?d.$dialog.one(\\\"bsTransitionEnd\\\",function(){d.$element.trigger(\\\"focus\\\").trigger(f)}).emulateTransitionEnd(c.TRANSITION_DURATION):d.$element.trigger(\\\"focus\\\").trigger(f)}))},c.prototype.hide=function(b){b&&b.preventDefault(),b=a.Event(\\\"hide.bs.modal\\\"),this.$element.trigger(b),this.isShown&&!b.isDefaultPrevented()&&(this.isShown=!1,this.escape(),this.resize(),a(document).off(\\\"focusin.bs.modal\\\"),this.$element.removeClass(\\\"in\\\").off(\\\"click.dismiss.bs.modal\\\").off(\\\"mouseup.dismiss.bs.modal\\\"),this.$dialog.off(\\\"mousedown.dismiss.bs.modal\\\"),a.support.transition&&this.$element.hasClass(\\\"fade\\\")?this.$element.one(\\\"bsTransitionEnd\\\",a.proxy(this.hideModal,this)).emulateTransitionEnd(c.TRANSITION_DURATION):this.hideModal())},c.prototype.enforceFocus=function(){a(document).off(\\\"focusin.bs.modal\\\").on(\\\"focusin.bs.modal\\\",a.proxy(function(a){document===a.target||this.$element[0]===a.target||this.$element.has(a.target).length||this.$element.trigger(\\\"focus\\\")},this))},c.prototype.escape=function(){this.isShown&&this.options.keyboard?this.$element.on(\\\"keydown.dismiss.bs.modal\\\",a.proxy(function(a){27==a.which&&this.hide()},this)):this.isShown||this.$element.off(\\\"keydown.dismiss.bs.modal\\\")},c.prototype.resize=function(){this.isShown?a(window).on(\\\"resize.bs.modal\\\",a.proxy(this.handleUpdate,this)):a(window).off(\\\"resize.bs.modal\\\")},c.prototype.hideModal=function(){var a=this;this.$element.hide(),this.backdrop(function(){a.$body.removeClass(\\\"modal-open\\\"),a.resetAdjustments(),a.resetScrollbar(),a.$element.trigger(\\\"hidden.bs.modal\\\")})},c.prototype.removeBackdrop=function(){this.$backdrop&&this.$backdrop.remove(),this.$backdrop=null},c.prototype.backdrop=function(b){var d=this,e=this.$element.hasClass(\\\"fade\\\")?\\\"fade\\\":\\\"\\\";if(this.isShown&&this.options.backdrop){var f=a.support.transition&&e;if(this.$backdrop=a(document.createElement(\\\"div\\\")).addClass(\\\"modal-backdrop \\\"+e).appendTo(this.$body),this.$element.on(\\\"click.dismiss.bs.modal\\\",a.proxy(function(a){return this.ignoreBackdropClick?void(this.ignoreBackdropClick=!1):void(a.target===a.currentTarget&&(\\\"static\\\"==this.options.backdrop?this.$element[0].focus():this.hide()))},this)),f&&this.$backdrop[0].offsetWidth,this.$backdrop.addClass(\\\"in\\\"),!b)return;f?this.$backdrop.one(\\\"bsTransitionEnd\\\",b).emulateTransitionEnd(c.BACKDROP_TRANSITION_DURATION):b()}else if(!this.isShown&&this.$backdrop){this.$backdrop.removeClass(\\\"in\\\");var g=function(){d.removeBackdrop(),b&&b()};a.support.transition&&this.$element.hasClass(\\\"fade\\\")?this.$backdrop.one(\\\"bsTransitionEnd\\\",g).emulateTransitionEnd(c.BACKDROP_TRANSITION_DURATION):g()}else b&&b()},c.prototype.handleUpdate=function(){this.adjustDialog()},c.prototype.adjustDialog=function(){var a=this.$element[0].scrollHeight>document.documentElement.clientHeight;this.$element.css({paddingLeft:!this.bodyIsOverflowing&&a?this.scrollbarWidth:\\\"\\\",paddingRight:this.bodyIsOverflowing&&!a?this.scrollbarWidth:\\\"\\\"})},c.prototype.resetAdjustments=function(){this.$element.css({paddingLeft:\\\"\\\",paddingRight:\\\"\\\"})},c.prototype.checkScrollbar=function(){var a=window.innerWidth;if(!a){var b=document.documentElement.getBoundingClientRect();a=b.right-Math.abs(b.left)}this.bodyIsOverflowing=document.body.clientWidth<a,this.scrollbarWidth=this.measureScrollbar()},c.prototype.setScrollbar=function(){var a=parseInt(this.$body.css(\\\"padding-right\\\")||0,10);this.originalBodyPad=document.body.style.paddingRight||\\\"\\\",this.bodyIsOverflowing&&this.$body.css(\\\"padding-right\\\",a+this.scrollbarWidth)},c.prototype.resetScrollbar=function(){this.$body.css(\\\"padding-right\\\",this.originalBodyPad)},c.prototype.measureScrollbar=function(){var a=document.createElement(\\\"div\\\");a.className=\\\"modal-scrollbar-measure\\\",this.$body.append(a);var b=a.offsetWidth-a.clientWidth;return this.$body[0].removeChild(a),b};var d=a.fn.modal;a.fn.modal=b,a.fn.modal.Constructor=c,a.fn.modal.noConflict=function(){return a.fn.modal=d,this},a(document).on(\\\"click.bs.modal.data-api\\\",'[data-toggle=\\\"modal\\\"]',function(c){var d=a(this),e=d.attr(\\\"href\\\"),f=a(d.attr(\\\"data-target\\\")||e&&e.replace(/.*(?=#[^\\\\s]+$)/,\\\"\\\")),g=f.data(\\\"bs.modal\\\")?\\\"toggle\\\":a.extend({remote:!/#/.test(e)&&e},f.data(),d.data());d.is(\\\"a\\\")&&c.preventDefault(),f.one(\\\"show.bs.modal\\\",function(a){a.isDefaultPrevented()||f.one(\\\"hidden.bs.modal\\\",function(){d.is(\\\":visible\\\")&&d.trigger(\\\"focus\\\")})}),b.call(f,g,this)})}(jQuery),+function(a){\\\"use strict\\\";function b(b){return this.each(function(){var d=a(this),e=d.data(\\\"bs.tooltip\\\"),f=\\\"object\\\"==typeof b&&b;!e&&/destroy|hide/.test(b)||(e||d.data(\\\"bs.tooltip\\\",e=new c(this,f)),\\\"string\\\"==typeof b&&e[b]())})}var c=function(a,b){this.type=null,this.options=null,this.enabled=null,this.timeout=null,this.hoverState=null,this.$element=null,this.inState=null,this.init(\\\"tooltip\\\",a,b)};c.VERSION=\\\"3.3.7\\\",c.TRANSITION_DURATION=150,c.DEFAULTS={animation:!0,placement:\\\"top\\\",selector:!1,template:'<div class=\\\"tooltip\\\" role=\\\"tooltip\\\"><div class=\\\"tooltip-arrow\\\"></div><div class=\\\"tooltip-inner\\\"></div></div>',trigger:\\\"hover focus\\\",title:\\\"\\\",delay:0,html:!1,container:!1,viewport:{selector:\\\"body\\\",padding:0}},c.prototype.init=function(b,c,d){if(this.enabled=!0,this.type=b,this.$element=a(c),this.options=this.getOptions(d),this.$viewport=this.options.viewport&&a(a.isFunction(this.options.viewport)?this.options.viewport.call(this,this.$element):this.options.viewport.selector||this.options.viewport),this.inState={click:!1,hover:!1,focus:!1},this.$element[0]instanceof document.constructor&&!this.options.selector)throw new Error(\\\"`selector` option must be specified when initializing \\\"+this.type+\\\" on the window.document object!\\\");for(var e=this.options.trigger.split(\\\" \\\"),f=e.length;f--;){var g=e[f];if(\\\"click\\\"==g)this.$element.on(\\\"click.\\\"+this.type,this.options.selector,a.proxy(this.toggle,this));else if(\\\"manual\\\"!=g){var h=\\\"hover\\\"==g?\\\"mouseenter\\\":\\\"focusin\\\",i=\\\"hover\\\"==g?\\\"mouseleave\\\":\\\"focusout\\\";this.$element.on(h+\\\".\\\"+this.type,this.options.selector,a.proxy(this.enter,this)),this.$element.on(i+\\\".\\\"+this.type,this.options.selector,a.proxy(this.leave,this))}}this.options.selector?this._options=a.extend({},this.options,{trigger:\\\"manual\\\",selector:\\\"\\\"}):this.fixTitle()},c.prototype.getDefaults=function(){return c.DEFAULTS},c.prototype.getOptions=function(b){return b=a.extend({},this.getDefaults(),this.$element.data(),b),b.delay&&\\\"number\\\"==typeof b.delay&&(b.delay={show:b.delay,hide:b.delay}),b},c.prototype.getDelegateOptions=function(){var b={},c=this.getDefaults();return this._options&&a.each(this._options,function(a,d){c[a]!=d&&(b[a]=d)}),b},c.prototype.enter=function(b){var c=b instanceof this.constructor?b:a(b.currentTarget).data(\\\"bs.\\\"+this.type);return c||(c=new this.constructor(b.currentTarget,this.getDelegateOptions()),a(b.currentTarget).data(\\\"bs.\\\"+this.type,c)),b instanceof a.Event&&(c.inState[\\\"focusin\\\"==b.type?\\\"focus\\\":\\\"hover\\\"]=!0),c.tip().hasClass(\\\"in\\\")||\\\"in\\\"==c.hoverState?void(c.hoverState=\\\"in\\\"):(clearTimeout(c.timeout),c.hoverState=\\\"in\\\",c.options.delay&&c.options.delay.show?void(c.timeout=setTimeout(function(){\\\"in\\\"==c.hoverState&&c.show()},c.options.delay.show)):c.show())},c.prototype.isInStateTrue=function(){for(var a in this.inState)if(this.inState[a])return!0;return!1},c.prototype.leave=function(b){var c=b instanceof this.constructor?b:a(b.currentTarget).data(\\\"bs.\\\"+this.type);if(c||(c=new this.constructor(b.currentTarget,this.getDelegateOptions()),a(b.currentTarget).data(\\\"bs.\\\"+this.type,c)),b instanceof a.Event&&(c.inState[\\\"focusout\\\"==b.type?\\\"focus\\\":\\\"hover\\\"]=!1),!c.isInStateTrue())return clearTimeout(c.timeout),c.hoverState=\\\"out\\\",c.options.delay&&c.options.delay.hide?void(c.timeout=setTimeout(function(){\\\"out\\\"==c.hoverState&&c.hide()},c.options.delay.hide)):c.hide()},c.prototype.show=function(){var b=a.Event(\\\"show.bs.\\\"+this.type);if(this.hasContent()&&this.enabled){this.$element.trigger(b);var d=a.contains(this.$element[0].ownerDocument.documentElement,this.$element[0]);if(b.isDefaultPrevented()||!d)return;var e=this,f=this.tip(),g=this.getUID(this.type);this.setContent(),f.attr(\\\"id\\\",g),this.$element.attr(\\\"aria-describedby\\\",g),this.options.animation&&f.addClass(\\\"fade\\\");var h=\\\"function\\\"==typeof this.options.placement?this.options.placement.call(this,f[0],this.$element[0]):this.options.placement,i=/\\\\s?auto?\\\\s?/i,j=i.test(h);j&&(h=h.replace(i,\\\"\\\")||\\\"top\\\"),f.detach().css({top:0,left:0,display:\\\"block\\\"}).addClass(h).data(\\\"bs.\\\"+this.type,this),this.options.container?f.appendTo(this.options.container):f.insertAfter(this.$element),this.$element.trigger(\\\"inserted.bs.\\\"+this.type);var k=this.getPosition(),l=f[0].offsetWidth,m=f[0].offsetHeight;if(j){var n=h,o=this.getPosition(this.$viewport);h=\\\"bottom\\\"==h&&k.bottom+m>o.bottom?\\\"top\\\":\\\"top\\\"==h&&k.top-m<o.top?\\\"bottom\\\":\\\"right\\\"==h&&k.right+l>o.width?\\\"left\\\":\\\"left\\\"==h&&k.left-l<o.left?\\\"right\\\":h,f.removeClass(n).addClass(h)}var p=this.getCalculatedOffset(h,k,l,m);this.applyPlacement(p,h);var q=function(){var a=e.hoverState;e.$element.trigger(\\\"shown.bs.\\\"+e.type),e.hoverState=null,\\\"out\\\"==a&&e.leave(e)};a.support.transition&&this.$tip.hasClass(\\\"fade\\\")?f.one(\\\"bsTransitionEnd\\\",q).emulateTransitionEnd(c.TRANSITION_DURATION):q()}},c.prototype.applyPlacement=function(b,c){var d=this.tip(),e=d[0].offsetWidth,f=d[0].offsetHeight,g=parseInt(d.css(\\\"margin-top\\\"),10),h=parseInt(d.css(\\\"margin-left\\\"),10);isNaN(g)&&(g=0),isNaN(h)&&(h=0),b.top+=g,b.left+=h,a.offset.setOffset(d[0],a.extend({using:function(a){d.css({top:Math.round(a.top),left:Math.round(a.left)})}},b),0),d.addClass(\\\"in\\\");var i=d[0].offsetWidth,j=d[0].offsetHeight;\\\"top\\\"==c&&j!=f&&(b.top=b.top+f-j);var k=this.getViewportAdjustedDelta(c,b,i,j);k.left?b.left+=k.left:b.top+=k.top;var l=/top|bottom/.test(c),m=l?2*k.left-e+i:2*k.top-f+j,n=l?\\\"offsetWidth\\\":\\\"offsetHeight\\\";d.offset(b),this.replaceArrow(m,d[0][n],l)},c.prototype.replaceArrow=function(a,b,c){this.arrow().css(c?\\\"left\\\":\\\"top\\\",50*(1-a/b)+\\\"%\\\").css(c?\\\"top\\\":\\\"left\\\",\\\"\\\")},c.prototype.setContent=function(){var a=this.tip(),b=this.getTitle();a.find(\\\".tooltip-inner\\\")[this.options.html?\\\"html\\\":\\\"text\\\"](b),a.removeClass(\\\"fade in top bottom left right\\\")},c.prototype.hide=function(b){function d(){\\\"in\\\"!=e.hoverState&&f.detach(),e.$element&&e.$element.removeAttr(\\\"aria-describedby\\\").trigger(\\\"hidden.bs.\\\"+e.type),b&&b()}var e=this,f=a(this.$tip),g=a.Event(\\\"hide.bs.\\\"+this.type);if(this.$element.trigger(g),!g.isDefaultPrevented())return f.removeClass(\\\"in\\\"),a.support.transition&&f.hasClass(\\\"fade\\\")?f.one(\\\"bsTransitionEnd\\\",d).emulateTransitionEnd(c.TRANSITION_DURATION):d(),this.hoverState=null,this},c.prototype.fixTitle=function(){var a=this.$element;(a.attr(\\\"title\\\")||\\\"string\\\"!=typeof a.attr(\\\"data-original-title\\\"))&&a.attr(\\\"data-original-title\\\",a.attr(\\\"title\\\")||\\\"\\\").attr(\\\"title\\\",\\\"\\\")},c.prototype.hasContent=function(){return this.getTitle()},c.prototype.getPosition=function(b){b=b||this.$element;var c=b[0],d=\\\"BODY\\\"==c.tagName,e=c.getBoundingClientRect();null==e.width&&(e=a.extend({},e,{width:e.right-e.left,height:e.bottom-e.top}));var f=window.SVGElement&&c instanceof window.SVGElement,g=d?{top:0,left:0}:f?null:b.offset(),h={scroll:d?document.documentElement.scrollTop||document.body.scrollTop:b.scrollTop()},i=d?{width:a(window).width(),height:a(window).height()}:null;return a.extend({},e,h,i,g)},c.prototype.getCalculatedOffset=function(a,b,c,d){return\\\"bottom\\\"==a?{top:b.top+b.height,left:b.left+b.width/2-c/2}:\\\"top\\\"==a?{top:b.top-d,left:b.left+b.width/2-c/2}:\\\"left\\\"==a?{top:b.top+b.height/2-d/2,left:b.left-c}:{top:b.top+b.height/2-d/2,left:b.left+b.width}},c.prototype.getViewportAdjustedDelta=function(a,b,c,d){var e={top:0,left:0};if(!this.$viewport)return e;var f=this.options.viewport&&this.options.viewport.padding||0,g=this.getPosition(this.$viewport);if(/right|left/.test(a)){var h=b.top-f-g.scroll,i=b.top+f-g.scroll+d;h<g.top?e.top=g.top-h:i>g.top+g.height&&(e.top=g.top+g.height-i)}else{var j=b.left-f,k=b.left+f+c;j<g.left?e.left=g.left-j:k>g.right&&(e.left=g.left+g.width-k)}return e},c.prototype.getTitle=function(){var a,b=this.$element,c=this.options;return a=b.attr(\\\"data-original-title\\\")||(\\\"function\\\"==typeof c.title?c.title.call(b[0]):c.title)},c.prototype.getUID=function(a){do a+=~~(1e6*Math.random());while(document.getElementById(a));return a},c.prototype.tip=function(){if(!this.$tip&&(this.$tip=a(this.options.template),1!=this.$tip.length))throw new Error(this.type+\\\" `template` option must consist of exactly 1 top-level element!\\\");return this.$tip},c.prototype.arrow=function(){return this.$arrow=this.$arrow||this.tip().find(\\\".tooltip-arrow\\\")},c.prototype.enable=function(){this.enabled=!0},c.prototype.disable=function(){this.enabled=!1},c.prototype.toggleEnabled=function(){this.enabled=!this.enabled},c.prototype.toggle=function(b){var c=this;b&&(c=a(b.currentTarget).data(\\\"bs.\\\"+this.type),c||(c=new this.constructor(b.currentTarget,this.getDelegateOptions()),a(b.currentTarget).data(\\\"bs.\\\"+this.type,c))),b?(c.inState.click=!c.inState.click,c.isInStateTrue()?c.enter(c):c.leave(c)):c.tip().hasClass(\\\"in\\\")?c.leave(c):c.enter(c)},c.prototype.destroy=function(){var a=this;clearTimeout(this.timeout),this.hide(function(){a.$element.off(\\\".\\\"+a.type).removeData(\\\"bs.\\\"+a.type),a.$tip&&a.$tip.detach(),a.$tip=null,a.$arrow=null,a.$viewport=null,a.$element=null})};var d=a.fn.tooltip;a.fn.tooltip=b,a.fn.tooltip.Constructor=c,a.fn.tooltip.noConflict=function(){return a.fn.tooltip=d,this}}(jQuery),+function(a){\\\"use strict\\\";function b(b){return this.each(function(){var d=a(this),e=d.data(\\\"bs.popover\\\"),f=\\\"object\\\"==typeof b&&b;!e&&/destroy|hide/.test(b)||(e||d.data(\\\"bs.popover\\\",e=new c(this,f)),\\\"string\\\"==typeof b&&e[b]())})}var c=function(a,b){this.init(\\\"popover\\\",a,b)};if(!a.fn.tooltip)throw new Error(\\\"Popover requires tooltip.js\\\");c.VERSION=\\\"3.3.7\\\",c.DEFAULTS=a.extend({},a.fn.tooltip.Constructor.DEFAULTS,{placement:\\\"right\\\",trigger:\\\"click\\\",content:\\\"\\\",template:'<div class=\\\"popover\\\" role=\\\"tooltip\\\"><div class=\\\"arrow\\\"></div><h3 class=\\\"popover-title\\\"></h3><div class=\\\"popover-content\\\"></div></div>'}),c.prototype=a.extend({},a.fn.tooltip.Constructor.prototype),c.prototype.constructor=c,c.prototype.getDefaults=function(){return c.DEFAULTS},c.prototype.setContent=function(){var a=this.tip(),b=this.getTitle(),c=this.getContent();a.find(\\\".popover-title\\\")[this.options.html?\\\"html\\\":\\\"text\\\"](b),a.find(\\\".popover-content\\\").children().detach().end()[this.options.html?\\\"string\\\"==typeof c?\\\"html\\\":\\\"append\\\":\\\"text\\\"](c),a.removeClass(\\\"fade top bottom left right in\\\"),a.find(\\\".popover-title\\\").html()||a.find(\\\".popover-title\\\").hide()},c.prototype.hasContent=function(){return this.getTitle()||this.getContent()},c.prototype.getContent=function(){var a=this.$element,b=this.options;return a.attr(\\\"data-content\\\")||(\\\"function\\\"==typeof b.content?b.content.call(a[0]):b.content)},c.prototype.arrow=function(){return this.$arrow=this.$arrow||this.tip().find(\\\".arrow\\\")};var d=a.fn.popover;a.fn.popover=b,a.fn.popover.Constructor=c,a.fn.popover.noConflict=function(){return a.fn.popover=d,this}}(jQuery),+function(a){\\\"use strict\\\";function b(c,d){this.$body=a(document.body),this.$scrollElement=a(a(c).is(document.body)?window:c),this.options=a.extend({},b.DEFAULTS,d),this.selector=(this.options.target||\\\"\\\")+\\\" .nav li > a\\\",this.offsets=[],this.targets=[],this.activeTarget=null,this.scrollHeight=0,this.$scrollElement.on(\\\"scroll.bs.scrollspy\\\",a.proxy(this.process,this)),this.refresh(),this.process()}function c(c){return this.each(function(){var d=a(this),e=d.data(\\\"bs.scrollspy\\\"),f=\\\"object\\\"==typeof c&&c;e||d.data(\\\"bs.scrollspy\\\",e=new b(this,f)),\\\"string\\\"==typeof c&&e[c]()})}b.VERSION=\\\"3.3.7\\\",b.DEFAULTS={offset:10},b.prototype.getScrollHeight=function(){return this.$scrollElement[0].scrollHeight||Math.max(this.$body[0].scrollHeight,document.documentElement.scrollHeight)},b.prototype.refresh=function(){var b=this,c=\\\"offset\\\",d=0;this.offsets=[],this.targets=[],this.scrollHeight=this.getScrollHeight(),a.isWindow(this.$scrollElement[0])||(c=\\\"position\\\",d=this.$scrollElement.scrollTop()),this.$body.find(this.selector).map(function(){var b=a(this),e=b.data(\\\"target\\\")||b.attr(\\\"href\\\"),f=/^#./.test(e)&&a(e);return f&&f.length&&f.is(\\\":visible\\\")&&[[f[c]().top+d,e]]||null}).sort(function(a,b){return a[0]-b[0]}).each(function(){b.offsets.push(this[0]),b.targets.push(this[1])})},b.prototype.process=function(){var a,b=this.$scrollElement.scrollTop()+this.options.offset,c=this.getScrollHeight(),d=this.options.offset+c-this.$scrollElement.height(),e=this.offsets,f=this.targets,g=this.activeTarget;if(this.scrollHeight!=c&&this.refresh(),b>=d)return g!=(a=f[f.length-1])&&this.activate(a);if(g&&b<e[0])return this.activeTarget=null,this.clear();for(a=e.length;a--;)g!=f[a]&&b>=e[a]&&(void 0===e[a+1]||b<e[a+1])&&this.activate(f[a])},b.prototype.activate=function(b){\\nthis.activeTarget=b,this.clear();var c=this.selector+'[data-target=\\\"'+b+'\\\"],'+this.selector+'[href=\\\"'+b+'\\\"]',d=a(c).parents(\\\"li\\\").addClass(\\\"active\\\");d.parent(\\\".dropdown-menu\\\").length&&(d=d.closest(\\\"li.dropdown\\\").addClass(\\\"active\\\")),d.trigger(\\\"activate.bs.scrollspy\\\")},b.prototype.clear=function(){a(this.selector).parentsUntil(this.options.target,\\\".active\\\").removeClass(\\\"active\\\")};var d=a.fn.scrollspy;a.fn.scrollspy=c,a.fn.scrollspy.Constructor=b,a.fn.scrollspy.noConflict=function(){return a.fn.scrollspy=d,this},a(window).on(\\\"load.bs.scrollspy.data-api\\\",function(){a('[data-spy=\\\"scroll\\\"]').each(function(){var b=a(this);c.call(b,b.data())})})}(jQuery),+function(a){\\\"use strict\\\";function b(b){return this.each(function(){var d=a(this),e=d.data(\\\"bs.tab\\\");e||d.data(\\\"bs.tab\\\",e=new c(this)),\\\"string\\\"==typeof b&&e[b]()})}var c=function(b){this.element=a(b)};c.VERSION=\\\"3.3.7\\\",c.TRANSITION_DURATION=150,c.prototype.show=function(){var b=this.element,c=b.closest(\\\"ul:not(.dropdown-menu)\\\"),d=b.data(\\\"target\\\");if(d||(d=b.attr(\\\"href\\\"),d=d&&d.replace(/.*(?=#[^\\\\s]*$)/,\\\"\\\")),!b.parent(\\\"li\\\").hasClass(\\\"active\\\")){var e=c.find(\\\".active:last a\\\"),f=a.Event(\\\"hide.bs.tab\\\",{relatedTarget:b[0]}),g=a.Event(\\\"show.bs.tab\\\",{relatedTarget:e[0]});if(e.trigger(f),b.trigger(g),!g.isDefaultPrevented()&&!f.isDefaultPrevented()){var h=a(d);this.activate(b.closest(\\\"li\\\"),c),this.activate(h,h.parent(),function(){e.trigger({type:\\\"hidden.bs.tab\\\",relatedTarget:b[0]}),b.trigger({type:\\\"shown.bs.tab\\\",relatedTarget:e[0]})})}}},c.prototype.activate=function(b,d,e){function f(){g.removeClass(\\\"active\\\").find(\\\"> .dropdown-menu > .active\\\").removeClass(\\\"active\\\").end().find('[data-toggle=\\\"tab\\\"]').attr(\\\"aria-expanded\\\",!1),b.addClass(\\\"active\\\").find('[data-toggle=\\\"tab\\\"]').attr(\\\"aria-expanded\\\",!0),h?(b[0].offsetWidth,b.addClass(\\\"in\\\")):b.removeClass(\\\"fade\\\"),b.parent(\\\".dropdown-menu\\\").length&&b.closest(\\\"li.dropdown\\\").addClass(\\\"active\\\").end().find('[data-toggle=\\\"tab\\\"]').attr(\\\"aria-expanded\\\",!0),e&&e()}var g=d.find(\\\"> .active\\\"),h=e&&a.support.transition&&(g.length&&g.hasClass(\\\"fade\\\")||!!d.find(\\\"> .fade\\\").length);g.length&&h?g.one(\\\"bsTransitionEnd\\\",f).emulateTransitionEnd(c.TRANSITION_DURATION):f(),g.removeClass(\\\"in\\\")};var d=a.fn.tab;a.fn.tab=b,a.fn.tab.Constructor=c,a.fn.tab.noConflict=function(){return a.fn.tab=d,this};var e=function(c){c.preventDefault(),b.call(a(this),\\\"show\\\")};a(document).on(\\\"click.bs.tab.data-api\\\",'[data-toggle=\\\"tab\\\"]',e).on(\\\"click.bs.tab.data-api\\\",'[data-toggle=\\\"pill\\\"]',e)}(jQuery),+function(a){\\\"use strict\\\";function b(b){return this.each(function(){var d=a(this),e=d.data(\\\"bs.affix\\\"),f=\\\"object\\\"==typeof b&&b;e||d.data(\\\"bs.affix\\\",e=new c(this,f)),\\\"string\\\"==typeof b&&e[b]()})}var c=function(b,d){this.options=a.extend({},c.DEFAULTS,d),this.$target=a(this.options.target).on(\\\"scroll.bs.affix.data-api\\\",a.proxy(this.checkPosition,this)).on(\\\"click.bs.affix.data-api\\\",a.proxy(this.checkPositionWithEventLoop,this)),this.$element=a(b),this.affixed=null,this.unpin=null,this.pinnedOffset=null,this.checkPosition()};c.VERSION=\\\"3.3.7\\\",c.RESET=\\\"affix affix-top affix-bottom\\\",c.DEFAULTS={offset:0,target:window},c.prototype.getState=function(a,b,c,d){var e=this.$target.scrollTop(),f=this.$element.offset(),g=this.$target.height();if(null!=c&&\\\"top\\\"==this.affixed)return e<c&&\\\"top\\\";if(\\\"bottom\\\"==this.affixed)return null!=c?!(e+this.unpin<=f.top)&&\\\"bottom\\\":!(e+g<=a-d)&&\\\"bottom\\\";var h=null==this.affixed,i=h?e:f.top,j=h?g:b;return null!=c&&e<=c?\\\"top\\\":null!=d&&i+j>=a-d&&\\\"bottom\\\"},c.prototype.getPinnedOffset=function(){if(this.pinnedOffset)return this.pinnedOffset;this.$element.removeClass(c.RESET).addClass(\\\"affix\\\");var a=this.$target.scrollTop(),b=this.$element.offset();return this.pinnedOffset=b.top-a},c.prototype.checkPositionWithEventLoop=function(){setTimeout(a.proxy(this.checkPosition,this),1)},c.prototype.checkPosition=function(){if(this.$element.is(\\\":visible\\\")){var b=this.$element.height(),d=this.options.offset,e=d.top,f=d.bottom,g=Math.max(a(document).height(),a(document.body).height());\\\"object\\\"!=typeof d&&(f=e=d),\\\"function\\\"==typeof e&&(e=d.top(this.$element)),\\\"function\\\"==typeof f&&(f=d.bottom(this.$element));var h=this.getState(g,b,e,f);if(this.affixed!=h){null!=this.unpin&&this.$element.css(\\\"top\\\",\\\"\\\");var i=\\\"affix\\\"+(h?\\\"-\\\"+h:\\\"\\\"),j=a.Event(i+\\\".bs.affix\\\");if(this.$element.trigger(j),j.isDefaultPrevented())return;this.affixed=h,this.unpin=\\\"bottom\\\"==h?this.getPinnedOffset():null,this.$element.removeClass(c.RESET).addClass(i).trigger(i.replace(\\\"affix\\\",\\\"affixed\\\")+\\\".bs.affix\\\")}\\\"bottom\\\"==h&&this.$element.offset({top:g-b-f})}};var d=a.fn.affix;a.fn.affix=b,a.fn.affix.Constructor=c,a.fn.affix.noConflict=function(){return a.fn.affix=d,this},a(window).on(\\\"load\\\",function(){a('[data-spy=\\\"affix\\\"]').each(function(){var c=a(this),d=c.data();d.offset=d.offset||{},null!=d.offsetBottom&&(d.offset.bottom=d.offsetBottom),null!=d.offsetTop&&(d.offset.top=d.offsetTop),b.call(c,d)})})}(jQuery);\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/skadyeyes/代码/chart/~/raw-loader!/Users/skadyeyes/代码/chart/~/bootstrap/dist/js/bootstrap.min.js\n// module id = ../../../../raw-loader/index.js!../../../../bootstrap/dist/js/bootstrap.min.js\n// module chunks = 3","module.exports = \"(function webpackUniversalModuleDefinition(root, factory) {\\n\\tif(typeof exports === 'object' && typeof module === 'object')\\n\\t\\tmodule.exports = factory();\\n\\telse if(typeof define === 'function' && define.amd)\\n\\t\\tdefine([], factory);\\n\\telse if(typeof exports === 'object')\\n\\t\\texports[\\\"echarts\\\"] = factory();\\n\\telse\\n\\t\\troot[\\\"echarts\\\"] = factory();\\n})(this, function() {\\nreturn /******/ (function(modules) { // webpackBootstrap\\n/******/ \\t// The module cache\\n/******/ \\tvar installedModules = {};\\n\\n/******/ \\t// The require function\\n/******/ \\tfunction __webpack_require__(moduleId) {\\n\\n/******/ \\t\\t// Check if module is in cache\\n/******/ \\t\\tif(installedModules[moduleId])\\n/******/ \\t\\t\\treturn installedModules[moduleId].exports;\\n\\n/******/ \\t\\t// Create a new module (and put it into the cache)\\n/******/ \\t\\tvar module = installedModules[moduleId] = {\\n/******/ \\t\\t\\texports: {},\\n/******/ \\t\\t\\tid: moduleId,\\n/******/ \\t\\t\\tloaded: false\\n/******/ \\t\\t};\\n\\n/******/ \\t\\t// Execute the module function\\n/******/ \\t\\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\\n\\n/******/ \\t\\t// Flag the module as loaded\\n/******/ \\t\\tmodule.loaded = true;\\n\\n/******/ \\t\\t// Return the exports of the module\\n/******/ \\t\\treturn module.exports;\\n/******/ \\t}\\n\\n\\n/******/ \\t// expose the modules object (__webpack_modules__)\\n/******/ \\t__webpack_require__.m = modules;\\n\\n/******/ \\t// expose the module cache\\n/******/ \\t__webpack_require__.c = installedModules;\\n\\n/******/ \\t// __webpack_public_path__\\n/******/ \\t__webpack_require__.p = \\\"\\\";\\n\\n/******/ \\t// Load entry module and return exports\\n/******/ \\treturn __webpack_require__(0);\\n/******/ })\\n/************************************************************************/\\n/******/ ([\\n/* 0 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * Export echarts as CommonJS module\\n\\t */\\n\\tmodule.exports = __webpack_require__(1);\\n\\n\\t// Import all charts and components\\n\\t__webpack_require__(113);\\n\\t__webpack_require__(139);\\n\\t__webpack_require__(146);\\n\\t__webpack_require__(155);\\n\\t__webpack_require__(159);\\n\\n\\t__webpack_require__(169);\\n\\t__webpack_require__(193);\\n\\t__webpack_require__(205);\\n\\t__webpack_require__(226);\\n\\t__webpack_require__(230);\\n\\t__webpack_require__(234);\\n\\t__webpack_require__(251);\\n\\t__webpack_require__(257);\\n\\t__webpack_require__(264);\\n\\t__webpack_require__(270);\\n\\t__webpack_require__(274);\\n\\t__webpack_require__(283);\\n\\t__webpack_require__(287);\\n\\t__webpack_require__(290);\\n\\t__webpack_require__(313);\\n\\n\\t__webpack_require__(319);\\n\\t__webpack_require__(320);\\n\\t__webpack_require__(321);\\n\\t__webpack_require__(327);\\n\\t__webpack_require__(298);\\n\\t__webpack_require__(331);\\n\\t__webpack_require__(344);\\n\\t__webpack_require__(235);\\n\\t__webpack_require__(291);\\n\\t__webpack_require__(347);\\n\\t__webpack_require__(358);\\n\\n\\t__webpack_require__(362);\\n\\n\\t__webpack_require__(363);\\n\\t__webpack_require__(376);\\n\\n\\t__webpack_require__(391);\\n\\t__webpack_require__(397);\\n\\t__webpack_require__(400);\\n\\n\\t__webpack_require__(403);\\n\\t__webpack_require__(412);\\n\\n\\t__webpack_require__(424);\\n\\n\\n/***/ },\\n/* 1 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t// Enable DEV mode when using source code without build. which has no __DEV__ variable\\n\\t// In build process 'typeof __DEV__' will be replace with 'boolean'\\n\\t// So this code will be removed or disabled anyway after built.\\n\\tif (false) {\\n\\t    // In browser\\n\\t    if (typeof window !== 'undefined') {\\n\\t        window.__DEV__ = true;\\n\\t    }\\n\\t    // In node\\n\\t    else if (typeof global !== 'undefined') {\\n\\t        global.__DEV__ = true;\\n\\t    }\\n\\t}\\n\\n\\t/*!\\n\\t * ECharts, a javascript interactive chart library.\\n\\t *\\n\\t * Copyright (c) 2015, Baidu Inc.\\n\\t * All rights reserved.\\n\\t *\\n\\t * LICENSE\\n\\t * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt\\n\\t */\\n\\n\\t/**\\n\\t * @module echarts\\n\\t */\\n\\n\\n\\t    var env = __webpack_require__(2);\\n\\n\\t    var GlobalModel = __webpack_require__(3);\\n\\t    var ExtensionAPI = __webpack_require__(75);\\n\\t    var CoordinateSystemManager = __webpack_require__(76);\\n\\t    var OptionManager = __webpack_require__(77);\\n\\n\\t    var ComponentModel = __webpack_require__(69);\\n\\t    var SeriesModel = __webpack_require__(78);\\n\\n\\t    var ComponentView = __webpack_require__(79);\\n\\t    var ChartView = __webpack_require__(80);\\n\\t    var graphic = __webpack_require__(18);\\n\\t    var modelUtil = __webpack_require__(5);\\n\\t    var throttle = __webpack_require__(81);\\n\\n\\t    var zrender = __webpack_require__(82);\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var colorTool = __webpack_require__(31);\\n\\t    var Eventful = __webpack_require__(25);\\n\\t    var timsort = __webpack_require__(86);\\n\\n\\t    var each = zrUtil.each;\\n\\t    var parseClassType = ComponentModel.parseClassType;\\n\\n\\t    var PRIORITY_PROCESSOR_FILTER = 1000;\\n\\t    var PRIORITY_PROCESSOR_STATISTIC = 5000;\\n\\n\\n\\t    var PRIORITY_VISUAL_LAYOUT = 1000;\\n\\t    var PRIORITY_VISUAL_GLOBAL = 2000;\\n\\t    var PRIORITY_VISUAL_CHART = 3000;\\n\\t    var PRIORITY_VISUAL_COMPONENT = 4000;\\n\\t    // FIXME\\n\\t    // necessary?\\n\\t    var PRIORITY_VISUAL_BRUSH = 5000;\\n\\n\\t    // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\\n\\t    // where they must not be invoked nestedly, except the only case: invoke\\n\\t    // dispatchAction with updateMethod \\\"none\\\" in main process.\\n\\t    // This flag is used to carry out this rule.\\n\\t    // All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\\n\\t    var IN_MAIN_PROCESS = '__flagInMainProcess';\\n\\t    var HAS_GRADIENT_OR_PATTERN_BG = '__hasGradientOrPatternBg';\\n\\t    var OPTION_UPDATED = '__optionUpdated';\\n\\t    var ACTION_REG = /^[a-zA-Z0-9_]+$/;\\n\\n\\t    function createRegisterEventWithLowercaseName(method) {\\n\\t        return function (eventName, handler, context) {\\n\\t            // Event name is all lowercase\\n\\t            eventName = eventName && eventName.toLowerCase();\\n\\t            Eventful.prototype[method].call(this, eventName, handler, context);\\n\\t        };\\n\\t    }\\n\\n\\t    /**\\n\\t     * @module echarts~MessageCenter\\n\\t     */\\n\\t    function MessageCenter() {\\n\\t        Eventful.call(this);\\n\\t    }\\n\\t    MessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\\n\\t    MessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\\n\\t    MessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\\n\\t    zrUtil.mixin(MessageCenter, Eventful);\\n\\n\\t    /**\\n\\t     * @module echarts~ECharts\\n\\t     */\\n\\t    function ECharts(dom, theme, opts) {\\n\\t        opts = opts || {};\\n\\n\\t        // Get theme by name\\n\\t        if (typeof theme === 'string') {\\n\\t            theme = themeStorage[theme];\\n\\t        }\\n\\n\\t        /**\\n\\t         * @type {string}\\n\\t         */\\n\\t        this.id;\\n\\t        /**\\n\\t         * Group id\\n\\t         * @type {string}\\n\\t         */\\n\\t        this.group;\\n\\t        /**\\n\\t         * @type {HTMLDomElement}\\n\\t         * @private\\n\\t         */\\n\\t        this._dom = dom;\\n\\t        /**\\n\\t         * @type {module:zrender/ZRender}\\n\\t         * @private\\n\\t         */\\n\\t        var zr = this._zr = zrender.init(dom, {\\n\\t            renderer: opts.renderer || 'canvas',\\n\\t            devicePixelRatio: opts.devicePixelRatio,\\n\\t            width: opts.width,\\n\\t            height: opts.height\\n\\t        });\\n\\n\\t        /**\\n\\t         * Expect 60 pfs.\\n\\t         * @type {Function}\\n\\t         * @private\\n\\t         */\\n\\t        this._throttledZrFlush = throttle.throttle(zrUtil.bind(zr.flush, zr), 17);\\n\\n\\t        /**\\n\\t         * @type {Object}\\n\\t         * @private\\n\\t         */\\n\\t        this._theme = zrUtil.clone(theme);\\n\\n\\t        /**\\n\\t         * @type {Array.<module:echarts/view/Chart>}\\n\\t         * @private\\n\\t         */\\n\\t        this._chartsViews = [];\\n\\n\\t        /**\\n\\t         * @type {Object.<string, module:echarts/view/Chart>}\\n\\t         * @private\\n\\t         */\\n\\t        this._chartsMap = {};\\n\\n\\t        /**\\n\\t         * @type {Array.<module:echarts/view/Component>}\\n\\t         * @private\\n\\t         */\\n\\t        this._componentsViews = [];\\n\\n\\t        /**\\n\\t         * @type {Object.<string, module:echarts/view/Component>}\\n\\t         * @private\\n\\t         */\\n\\t        this._componentsMap = {};\\n\\n\\t        /**\\n\\t         * @type {module:echarts/CoordinateSystem}\\n\\t         * @private\\n\\t         */\\n\\t        this._coordSysMgr = new CoordinateSystemManager();\\n\\n\\t        /**\\n\\t         * @type {module:echarts/ExtensionAPI}\\n\\t         * @private\\n\\t         */\\n\\t        this._api = createExtensionAPI(this);\\n\\n\\t        Eventful.call(this);\\n\\n\\t        /**\\n\\t         * @type {module:echarts~MessageCenter}\\n\\t         * @private\\n\\t         */\\n\\t        this._messageCenter = new MessageCenter();\\n\\n\\t        // Init mouse events\\n\\t        this._initEvents();\\n\\n\\t        // In case some people write `window.onresize = chart.resize`\\n\\t        this.resize = zrUtil.bind(this.resize, this);\\n\\n\\t        // Can't dispatch action during rendering procedure\\n\\t        this._pendingActions = [];\\n\\t        // Sort on demand\\n\\t        function prioritySortFunc(a, b) {\\n\\t            return a.prio - b.prio;\\n\\t        }\\n\\t        timsort(visualFuncs, prioritySortFunc);\\n\\t        timsort(dataProcessorFuncs, prioritySortFunc);\\n\\n\\t        zr.animation.on('frame', this._onframe, this);\\n\\n\\t        // ECharts instance can be used as value.\\n\\t        zrUtil.setAsPrimitive(this);\\n\\t    }\\n\\n\\t    var echartsProto = ECharts.prototype;\\n\\n\\t    echartsProto._onframe = function () {\\n\\t        // Lazy update\\n\\t        if (this[OPTION_UPDATED]) {\\n\\t            var silent = this[OPTION_UPDATED].silent;\\n\\n\\t            this[IN_MAIN_PROCESS] = true;\\n\\n\\t            updateMethods.prepareAndUpdate.call(this);\\n\\n\\t            this[IN_MAIN_PROCESS] = false;\\n\\n\\t            this[OPTION_UPDATED] = false;\\n\\n\\t            flushPendingActions.call(this, silent);\\n\\n\\t            triggerUpdatedEvent.call(this, silent);\\n\\t        }\\n\\t    };\\n\\t    /**\\n\\t     * @return {HTMLDomElement}\\n\\t     */\\n\\t    echartsProto.getDom = function () {\\n\\t        return this._dom;\\n\\t    };\\n\\n\\t    /**\\n\\t     * @return {module:zrender~ZRender}\\n\\t     */\\n\\t    echartsProto.getZr = function () {\\n\\t        return this._zr;\\n\\t    };\\n\\n\\t    /**\\n\\t     * Usage:\\n\\t     * chart.setOption(option, notMerge, lazyUpdate);\\n\\t     * chart.setOption(option, {\\n\\t     *     notMerge: ...,\\n\\t     *     lazyUpdate: ...,\\n\\t     *     silent: ...\\n\\t     * });\\n\\t     *\\n\\t     * @param {Object} option\\n\\t     * @param {Object|boolean} [opts] opts or notMerge.\\n\\t     * @param {boolean} [opts.notMerge=false]\\n\\t     * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\\n\\t     */\\n\\t    echartsProto.setOption = function (option, notMerge, lazyUpdate) {\\n\\t        if (true) {\\n\\t            zrUtil.assert(!this[IN_MAIN_PROCESS], '`setOption` should not be called during main process.');\\n\\t        }\\n\\n\\t        var silent;\\n\\t        if (zrUtil.isObject(notMerge)) {\\n\\t            lazyUpdate = notMerge.lazyUpdate;\\n\\t            silent = notMerge.silent;\\n\\t            notMerge = notMerge.notMerge;\\n\\t        }\\n\\n\\t        this[IN_MAIN_PROCESS] = true;\\n\\n\\t        if (!this._model || notMerge) {\\n\\t            var optionManager = new OptionManager(this._api);\\n\\t            var theme = this._theme;\\n\\t            var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\\n\\t            ecModel.init(null, null, theme, optionManager);\\n\\t        }\\n\\n\\t        this._model.setOption(option, optionPreprocessorFuncs);\\n\\n\\t        if (lazyUpdate) {\\n\\t            this[OPTION_UPDATED] = {silent: silent};\\n\\t            this[IN_MAIN_PROCESS] = false;\\n\\t        }\\n\\t        else {\\n\\t            updateMethods.prepareAndUpdate.call(this);\\n\\t            // Ensure zr refresh sychronously, and then pixel in canvas can be\\n\\t            // fetched after `setOption`.\\n\\t            this._zr.flush();\\n\\n\\t            this[OPTION_UPDATED] = false;\\n\\t            this[IN_MAIN_PROCESS] = false;\\n\\n\\t            flushPendingActions.call(this, silent);\\n\\t            triggerUpdatedEvent.call(this, silent);\\n\\t        }\\n\\t    };\\n\\n\\t    /**\\n\\t     * @DEPRECATED\\n\\t     */\\n\\t    echartsProto.setTheme = function () {\\n\\t        console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\\n\\t    };\\n\\n\\t    /**\\n\\t     * @return {module:echarts/model/Global}\\n\\t     */\\n\\t    echartsProto.getModel = function () {\\n\\t        return this._model;\\n\\t    };\\n\\n\\t    /**\\n\\t     * @return {Object}\\n\\t     */\\n\\t    echartsProto.getOption = function () {\\n\\t        return this._model && this._model.getOption();\\n\\t    };\\n\\n\\t    /**\\n\\t     * @return {number}\\n\\t     */\\n\\t    echartsProto.getWidth = function () {\\n\\t        return this._zr.getWidth();\\n\\t    };\\n\\n\\t    /**\\n\\t     * @return {number}\\n\\t     */\\n\\t    echartsProto.getHeight = function () {\\n\\t        return this._zr.getHeight();\\n\\t    };\\n\\n\\t    /**\\n\\t     * @return {number}\\n\\t     */\\n\\t    echartsProto.getDevicePixelRatio = function () {\\n\\t        return this._zr.painter.dpr || window.devicePixelRatio || 1;\\n\\t    };\\n\\n\\t    /**\\n\\t     * Get canvas which has all thing rendered\\n\\t     * @param {Object} opts\\n\\t     * @param {string} [opts.backgroundColor]\\n\\t     */\\n\\t    echartsProto.getRenderedCanvas = function (opts) {\\n\\t        if (!env.canvasSupported) {\\n\\t            return;\\n\\t        }\\n\\t        opts = opts || {};\\n\\t        opts.pixelRatio = opts.pixelRatio || 1;\\n\\t        opts.backgroundColor = opts.backgroundColor\\n\\t            || this._model.get('backgroundColor');\\n\\t        var zr = this._zr;\\n\\t        var list = zr.storage.getDisplayList();\\n\\t        // Stop animations\\n\\t        zrUtil.each(list, function (el) {\\n\\t            el.stopAnimation(true);\\n\\t        });\\n\\t        return zr.painter.getRenderedCanvas(opts);\\n\\t    };\\n\\t    /**\\n\\t     * @return {string}\\n\\t     * @param {Object} opts\\n\\t     * @param {string} [opts.type='png']\\n\\t     * @param {string} [opts.pixelRatio=1]\\n\\t     * @param {string} [opts.backgroundColor]\\n\\t     * @param {string} [opts.excludeComponents]\\n\\t     */\\n\\t    echartsProto.getDataURL = function (opts) {\\n\\t        opts = opts || {};\\n\\t        var excludeComponents = opts.excludeComponents;\\n\\t        var ecModel = this._model;\\n\\t        var excludesComponentViews = [];\\n\\t        var self = this;\\n\\n\\t        each(excludeComponents, function (componentType) {\\n\\t            ecModel.eachComponent({\\n\\t                mainType: componentType\\n\\t            }, function (component) {\\n\\t                var view = self._componentsMap[component.__viewId];\\n\\t                if (!view.group.ignore) {\\n\\t                    excludesComponentViews.push(view);\\n\\t                    view.group.ignore = true;\\n\\t                }\\n\\t            });\\n\\t        });\\n\\n\\t        var url = this.getRenderedCanvas(opts).toDataURL(\\n\\t            'image/' + (opts && opts.type || 'png')\\n\\t        );\\n\\n\\t        each(excludesComponentViews, function (view) {\\n\\t            view.group.ignore = false;\\n\\t        });\\n\\t        return url;\\n\\t    };\\n\\n\\n\\t    /**\\n\\t     * @return {string}\\n\\t     * @param {Object} opts\\n\\t     * @param {string} [opts.type='png']\\n\\t     * @param {string} [opts.pixelRatio=1]\\n\\t     * @param {string} [opts.backgroundColor]\\n\\t     */\\n\\t    echartsProto.getConnectedDataURL = function (opts) {\\n\\t        if (!env.canvasSupported) {\\n\\t            return;\\n\\t        }\\n\\t        var groupId = this.group;\\n\\t        var mathMin = Math.min;\\n\\t        var mathMax = Math.max;\\n\\t        var MAX_NUMBER = Infinity;\\n\\t        if (connectedGroups[groupId]) {\\n\\t            var left = MAX_NUMBER;\\n\\t            var top = MAX_NUMBER;\\n\\t            var right = -MAX_NUMBER;\\n\\t            var bottom = -MAX_NUMBER;\\n\\t            var canvasList = [];\\n\\t            var dpr = (opts && opts.pixelRatio) || 1;\\n\\n\\t            zrUtil.each(instances, function (chart, id) {\\n\\t                if (chart.group === groupId) {\\n\\t                    var canvas = chart.getRenderedCanvas(\\n\\t                        zrUtil.clone(opts)\\n\\t                    );\\n\\t                    var boundingRect = chart.getDom().getBoundingClientRect();\\n\\t                    left = mathMin(boundingRect.left, left);\\n\\t                    top = mathMin(boundingRect.top, top);\\n\\t                    right = mathMax(boundingRect.right, right);\\n\\t                    bottom = mathMax(boundingRect.bottom, bottom);\\n\\t                    canvasList.push({\\n\\t                        dom: canvas,\\n\\t                        left: boundingRect.left,\\n\\t                        top: boundingRect.top\\n\\t                    });\\n\\t                }\\n\\t            });\\n\\n\\t            left *= dpr;\\n\\t            top *= dpr;\\n\\t            right *= dpr;\\n\\t            bottom *= dpr;\\n\\t            var width = right - left;\\n\\t            var height = bottom - top;\\n\\t            var targetCanvas = zrUtil.createCanvas();\\n\\t            targetCanvas.width = width;\\n\\t            targetCanvas.height = height;\\n\\t            var zr = zrender.init(targetCanvas);\\n\\n\\t            each(canvasList, function (item) {\\n\\t                var img = new graphic.Image({\\n\\t                    style: {\\n\\t                        x: item.left * dpr - left,\\n\\t                        y: item.top * dpr - top,\\n\\t                        image: item.dom\\n\\t                    }\\n\\t                });\\n\\t                zr.add(img);\\n\\t            });\\n\\t            zr.refreshImmediately();\\n\\n\\t            return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\\n\\t        }\\n\\t        else {\\n\\t            return this.getDataURL(opts);\\n\\t        }\\n\\t    };\\n\\n\\t    /**\\n\\t     * Convert from logical coordinate system to pixel coordinate system.\\n\\t     * See CoordinateSystem#convertToPixel.\\n\\t     * @param {string|Object} finder\\n\\t     *        If string, e.g., 'geo', means {geoIndex: 0}.\\n\\t     *        If Object, could contain some of these properties below:\\n\\t     *        {\\n\\t     *            seriesIndex / seriesId / seriesName,\\n\\t     *            geoIndex / geoId, geoName,\\n\\t     *            bmapIndex / bmapId / bmapName,\\n\\t     *            xAxisIndex / xAxisId / xAxisName,\\n\\t     *            yAxisIndex / yAxisId / yAxisName,\\n\\t     *            gridIndex / gridId / gridName,\\n\\t     *            ... (can be extended)\\n\\t     *        }\\n\\t     * @param {Array|number} value\\n\\t     * @return {Array|number} result\\n\\t     */\\n\\t    echartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\\n\\n\\t    /**\\n\\t     * Convert from pixel coordinate system to logical coordinate system.\\n\\t     * See CoordinateSystem#convertFromPixel.\\n\\t     * @param {string|Object} finder\\n\\t     *        If string, e.g., 'geo', means {geoIndex: 0}.\\n\\t     *        If Object, could contain some of these properties below:\\n\\t     *        {\\n\\t     *            seriesIndex / seriesId / seriesName,\\n\\t     *            geoIndex / geoId / geoName,\\n\\t     *            bmapIndex / bmapId / bmapName,\\n\\t     *            xAxisIndex / xAxisId / xAxisName,\\n\\t     *            yAxisIndex / yAxisId / yAxisName\\n\\t     *            gridIndex / gridId / gridName,\\n\\t     *            ... (can be extended)\\n\\t     *        }\\n\\t     * @param {Array|number} value\\n\\t     * @return {Array|number} result\\n\\t     */\\n\\t    echartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\\n\\n\\t    function doConvertPixel(methodName, finder, value) {\\n\\t        var ecModel = this._model;\\n\\t        var coordSysList = this._coordSysMgr.getCoordinateSystems();\\n\\t        var result;\\n\\n\\t        finder = modelUtil.parseFinder(ecModel, finder);\\n\\n\\t        for (var i = 0; i < coordSysList.length; i++) {\\n\\t            var coordSys = coordSysList[i];\\n\\t            if (coordSys[methodName]\\n\\t                && (result = coordSys[methodName](ecModel, finder, value)) != null\\n\\t            ) {\\n\\t                return result;\\n\\t            }\\n\\t        }\\n\\n\\t        if (true) {\\n\\t            console.warn(\\n\\t                'No coordinate system that supports ' + methodName + ' found by the given finder.'\\n\\t            );\\n\\t        }\\n\\t    }\\n\\n\\t    /**\\n\\t     * Is the specified coordinate systems or components contain the given pixel point.\\n\\t     * @param {string|Object} finder\\n\\t     *        If string, e.g., 'geo', means {geoIndex: 0}.\\n\\t     *        If Object, could contain some of these properties below:\\n\\t     *        {\\n\\t     *            seriesIndex / seriesId / seriesName,\\n\\t     *            geoIndex / geoId / geoName,\\n\\t     *            bmapIndex / bmapId / bmapName,\\n\\t     *            xAxisIndex / xAxisId / xAxisName,\\n\\t     *            yAxisIndex / yAxisId / yAxisName,\\n\\t     *            gridIndex / gridId / gridName,\\n\\t     *            ... (can be extended)\\n\\t     *        }\\n\\t     * @param {Array|number} value\\n\\t     * @return {boolean} result\\n\\t     */\\n\\t    echartsProto.containPixel = function (finder, value) {\\n\\t        var ecModel = this._model;\\n\\t        var result;\\n\\n\\t        finder = modelUtil.parseFinder(ecModel, finder);\\n\\n\\t        zrUtil.each(finder, function (models, key) {\\n\\t            key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\\n\\t                var coordSys = model.coordinateSystem;\\n\\t                if (coordSys && coordSys.containPoint) {\\n\\t                    result |= !!coordSys.containPoint(value);\\n\\t                }\\n\\t                else if (key === 'seriesModels') {\\n\\t                    var view = this._chartsMap[model.__viewId];\\n\\t                    if (view && view.containPoint) {\\n\\t                        result |= view.containPoint(value, model);\\n\\t                    }\\n\\t                    else {\\n\\t                        if (true) {\\n\\t                            console.warn(key + ': ' + (view\\n\\t                                ? 'The found component do not support containPoint.'\\n\\t                                : 'No view mapping to the found component.'\\n\\t                            ));\\n\\t                        }\\n\\t                    }\\n\\t                }\\n\\t                else {\\n\\t                    if (true) {\\n\\t                        console.warn(key + ': containPoint is not supported');\\n\\t                    }\\n\\t                }\\n\\t            }, this);\\n\\t        }, this);\\n\\n\\t        return !!result;\\n\\t    };\\n\\n\\t    /**\\n\\t     * Get visual from series or data.\\n\\t     * @param {string|Object} finder\\n\\t     *        If string, e.g., 'series', means {seriesIndex: 0}.\\n\\t     *        If Object, could contain some of these properties below:\\n\\t     *        {\\n\\t     *            seriesIndex / seriesId / seriesName,\\n\\t     *            dataIndex / dataIndexInside\\n\\t     *        }\\n\\t     *        If dataIndex is not specified, series visual will be fetched,\\n\\t     *        but not data item visual.\\n\\t     *        If all of seriesIndex, seriesId, seriesName are not specified,\\n\\t     *        visual will be fetched from first series.\\n\\t     * @param {string} visualType 'color', 'symbol', 'symbolSize'\\n\\t     */\\n\\t    echartsProto.getVisual = function (finder, visualType) {\\n\\t        var ecModel = this._model;\\n\\n\\t        finder = modelUtil.parseFinder(ecModel, finder, {defaultMainType: 'series'});\\n\\n\\t        var seriesModel = finder.seriesModel;\\n\\n\\t        if (true) {\\n\\t            if (!seriesModel) {\\n\\t                console.warn('There is no specified seires model');\\n\\t            }\\n\\t        }\\n\\n\\t        var data = seriesModel.getData();\\n\\n\\t        var dataIndexInside = finder.hasOwnProperty('dataIndexInside')\\n\\t            ? finder.dataIndexInside\\n\\t            : finder.hasOwnProperty('dataIndex')\\n\\t            ? data.indexOfRawIndex(finder.dataIndex)\\n\\t            : null;\\n\\n\\t        return dataIndexInside != null\\n\\t            ? data.getItemVisual(dataIndexInside, visualType)\\n\\t            : data.getVisual(visualType);\\n\\t    };\\n\\n\\t    /**\\n\\t     * Get view of corresponding component model\\n\\t     * @param  {module:echarts/model/Component} componentModel\\n\\t     * @return {module:echarts/view/Component}\\n\\t     */\\n\\t    echartsProto.getViewOfComponentModel = function (componentModel) {\\n\\t        return this._componentsMap[componentModel.__viewId];\\n\\t    };\\n\\n\\t    /**\\n\\t     * Get view of corresponding series model\\n\\t     * @param  {module:echarts/model/Series} seriesModel\\n\\t     * @return {module:echarts/view/Chart}\\n\\t     */\\n\\t    echartsProto.getViewOfSeriesModel = function (seriesModel) {\\n\\t        return this._chartsMap[seriesModel.__viewId];\\n\\t    };\\n\\n\\n\\t    var updateMethods = {\\n\\n\\t        /**\\n\\t         * @param {Object} payload\\n\\t         * @private\\n\\t         */\\n\\t        update: function (payload) {\\n\\t            // console.profile && console.profile('update');\\n\\n\\t            var ecModel = this._model;\\n\\t            var api = this._api;\\n\\t            var coordSysMgr = this._coordSysMgr;\\n\\t            var zr = this._zr;\\n\\t            // update before setOption\\n\\t            if (!ecModel) {\\n\\t                return;\\n\\t            }\\n\\n\\t            // Fixme First time update ?\\n\\t            ecModel.restoreData();\\n\\n\\t            // TODO\\n\\t            // Save total ecModel here for undo/redo (after restoring data and before processing data).\\n\\t            // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\\n\\n\\t            // Create new coordinate system each update\\n\\t            // In LineView may save the old coordinate system and use it to get the orignal point\\n\\t            coordSysMgr.create(this._model, this._api);\\n\\n\\t            processData.call(this, ecModel, api);\\n\\n\\t            stackSeriesData.call(this, ecModel);\\n\\n\\t            coordSysMgr.update(ecModel, api);\\n\\n\\t            doVisualEncoding.call(this, ecModel, payload);\\n\\n\\t            doRender.call(this, ecModel, payload);\\n\\n\\t            // Set background\\n\\t            var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\\n\\n\\t            var painter = zr.painter;\\n\\t            // TODO all use clearColor ?\\n\\t            if (painter.isSingleCanvas && painter.isSingleCanvas()) {\\n\\t                zr.configLayer(0, {\\n\\t                    clearColor: backgroundColor\\n\\t                });\\n\\t            }\\n\\t            else {\\n\\t                // In IE8\\n\\t                if (!env.canvasSupported) {\\n\\t                    var colorArr = colorTool.parse(backgroundColor);\\n\\t                    backgroundColor = colorTool.stringify(colorArr, 'rgb');\\n\\t                    if (colorArr[3] === 0) {\\n\\t                        backgroundColor = 'transparent';\\n\\t                    }\\n\\t                }\\n\\t                if (backgroundColor.colorStops || backgroundColor.image) {\\n\\t                    // Gradient background\\n\\t                    // FIXME Fixed layer？\\n\\t                    zr.configLayer(0, {\\n\\t                        clearColor: backgroundColor\\n\\t                    });\\n\\t                    this[HAS_GRADIENT_OR_PATTERN_BG] = true;\\n\\n\\t                    this._dom.style.background = 'transparent';\\n\\t                }\\n\\t                else {\\n\\t                    if (this[HAS_GRADIENT_OR_PATTERN_BG]) {\\n\\t                        zr.configLayer(0, {\\n\\t                            clearColor: null\\n\\t                        });\\n\\t                    }\\n\\t                    this[HAS_GRADIENT_OR_PATTERN_BG] = false;\\n\\n\\t                    this._dom.style.background = backgroundColor;\\n\\t                }\\n\\t            }\\n\\n\\t            each(postUpdateFuncs, function (func) {\\n\\t                func(ecModel, api);\\n\\t            });\\n\\n\\t            // console.profile && console.profileEnd('update');\\n\\t        },\\n\\n\\t        /**\\n\\t         * @param {Object} payload\\n\\t         * @private\\n\\t         */\\n\\t        updateView: function (payload) {\\n\\t            var ecModel = this._model;\\n\\n\\t            // update before setOption\\n\\t            if (!ecModel) {\\n\\t                return;\\n\\t            }\\n\\n\\t            ecModel.eachSeries(function (seriesModel) {\\n\\t                seriesModel.getData().clearAllVisual();\\n\\t            });\\n\\n\\t            doVisualEncoding.call(this, ecModel, payload);\\n\\n\\t            invokeUpdateMethod.call(this, 'updateView', ecModel, payload);\\n\\t        },\\n\\n\\t        /**\\n\\t         * @param {Object} payload\\n\\t         * @private\\n\\t         */\\n\\t        updateVisual: function (payload) {\\n\\t            var ecModel = this._model;\\n\\n\\t            // update before setOption\\n\\t            if (!ecModel) {\\n\\t                return;\\n\\t            }\\n\\n\\t            ecModel.eachSeries(function (seriesModel) {\\n\\t                seriesModel.getData().clearAllVisual();\\n\\t            });\\n\\n\\t            doVisualEncoding.call(this, ecModel, payload, true);\\n\\n\\t            invokeUpdateMethod.call(this, 'updateVisual', ecModel, payload);\\n\\t        },\\n\\n\\t        /**\\n\\t         * @param {Object} payload\\n\\t         * @private\\n\\t         */\\n\\t        updateLayout: function (payload) {\\n\\t            var ecModel = this._model;\\n\\n\\t            // update before setOption\\n\\t            if (!ecModel) {\\n\\t                return;\\n\\t            }\\n\\n\\t            doLayout.call(this, ecModel, payload);\\n\\n\\t            invokeUpdateMethod.call(this, 'updateLayout', ecModel, payload);\\n\\t        },\\n\\n\\t        /**\\n\\t         * @param {Object} payload\\n\\t         * @private\\n\\t         */\\n\\t        prepareAndUpdate: function (payload) {\\n\\t            var ecModel = this._model;\\n\\n\\t            prepareView.call(this, 'component', ecModel);\\n\\n\\t            prepareView.call(this, 'chart', ecModel);\\n\\n\\t            updateMethods.update.call(this, payload);\\n\\t        }\\n\\t    };\\n\\n\\t    /**\\n\\t     * @private\\n\\t     */\\n\\t    function updateDirectly(ecIns, method, payload, mainType, subType) {\\n\\t        var ecModel = ecIns._model;\\n\\n\\t        // broadcast\\n\\t        if (!mainType) {\\n\\t            each(ecIns._componentsViews.concat(ecIns._chartsViews), callView);\\n\\t            return;\\n\\t        }\\n\\n\\t        var query = {};\\n\\t        query[mainType + 'Id'] = payload[mainType + 'Id'];\\n\\t        query[mainType + 'Index'] = payload[mainType + 'Index'];\\n\\t        query[mainType + 'Name'] = payload[mainType + 'Name'];\\n\\n\\t        var condition = {mainType: mainType, query: query};\\n\\t        subType && (condition.subType = subType); // subType may be '' by parseClassType;\\n\\n\\t        // If dispatchAction before setOption, do nothing.\\n\\t        ecModel && ecModel.eachComponent(condition, function (model, index) {\\n\\t            callView(ecIns[\\n\\t                mainType === 'series' ? '_chartsMap' : '_componentsMap'\\n\\t            ][model.__viewId]);\\n\\t        }, ecIns);\\n\\n\\t        function callView(view) {\\n\\t            view && view.__alive && view[method] && view[method](\\n\\t                view.__model, ecModel, ecIns._api, payload\\n\\t            );\\n\\t        }\\n\\t    }\\n\\n\\t    /**\\n\\t     * Resize the chart\\n\\t     * @param {Object} opts\\n\\t     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\\n\\t     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\\n\\t     * @param {boolean} [opts.silent=false]\\n\\t     */\\n\\t    echartsProto.resize = function (opts) {\\n\\t        if (true) {\\n\\t            zrUtil.assert(!this[IN_MAIN_PROCESS], '`resize` should not be called during main process.');\\n\\t        }\\n\\n\\t        this[IN_MAIN_PROCESS] = true;\\n\\n\\t        this._zr.resize(opts);\\n\\n\\t        var optionChanged = this._model && this._model.resetOption('media');\\n\\t        var updateMethod = optionChanged ? 'prepareAndUpdate' : 'update';\\n\\n\\t        updateMethods[updateMethod].call(this);\\n\\n\\t        // Resize loading effect\\n\\t        this._loadingFX && this._loadingFX.resize();\\n\\n\\t        this[IN_MAIN_PROCESS] = false;\\n\\n\\t        var silent = opts && opts.silent;\\n\\n\\t        flushPendingActions.call(this, silent);\\n\\n\\t        triggerUpdatedEvent.call(this, silent);\\n\\t    };\\n\\n\\t    /**\\n\\t     * Show loading effect\\n\\t     * @param  {string} [name='default']\\n\\t     * @param  {Object} [cfg]\\n\\t     */\\n\\t    echartsProto.showLoading = function (name, cfg) {\\n\\t        if (zrUtil.isObject(name)) {\\n\\t            cfg = name;\\n\\t            name = '';\\n\\t        }\\n\\t        name = name || 'default';\\n\\n\\t        this.hideLoading();\\n\\t        if (!loadingEffects[name]) {\\n\\t            if (true) {\\n\\t                console.warn('Loading effects ' + name + ' not exists.');\\n\\t            }\\n\\t            return;\\n\\t        }\\n\\t        var el = loadingEffects[name](this._api, cfg);\\n\\t        var zr = this._zr;\\n\\t        this._loadingFX = el;\\n\\n\\t        zr.add(el);\\n\\t    };\\n\\n\\t    /**\\n\\t     * Hide loading effect\\n\\t     */\\n\\t    echartsProto.hideLoading = function () {\\n\\t        this._loadingFX && this._zr.remove(this._loadingFX);\\n\\t        this._loadingFX = null;\\n\\t    };\\n\\n\\t    /**\\n\\t     * @param {Object} eventObj\\n\\t     * @return {Object}\\n\\t     */\\n\\t    echartsProto.makeActionFromEvent = function (eventObj) {\\n\\t        var payload = zrUtil.extend({}, eventObj);\\n\\t        payload.type = eventActionMap[eventObj.type];\\n\\t        return payload;\\n\\t    };\\n\\n\\t    /**\\n\\t     * @pubilc\\n\\t     * @param {Object} payload\\n\\t     * @param {string} [payload.type] Action type\\n\\t     * @param {Object|boolean} [opt] If pass boolean, means opt.silent\\n\\t     * @param {boolean} [opt.silent=false] Whether trigger events.\\n\\t     * @param {boolean} [opt.flush=undefined]\\n\\t     *                  true: Flush immediately, and then pixel in canvas can be fetched\\n\\t     *                      immediately. Caution: it might affect performance.\\n\\t     *                  false: Not not flush.\\n\\t     *                  undefined: Auto decide whether perform flush.\\n\\t     */\\n\\t    echartsProto.dispatchAction = function (payload, opt) {\\n\\t        if (!zrUtil.isObject(opt)) {\\n\\t            opt = {silent: !!opt};\\n\\t        }\\n\\n\\t        if (!actions[payload.type]) {\\n\\t            return;\\n\\t        }\\n\\n\\t        // May dispatchAction in rendering procedure\\n\\t        if (this[IN_MAIN_PROCESS]) {\\n\\t            this._pendingActions.push(payload);\\n\\t            return;\\n\\t        }\\n\\n\\t        doDispatchAction.call(this, payload, opt.silent);\\n\\n\\t        if (opt.flush) {\\n\\t            this._zr.flush(true);\\n\\t        }\\n\\t        else if (opt.flush !== false && env.browser.weChat) {\\n\\t            // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\\n\\t            // hang when sliding page (on touch event), which cause that zr does not\\n\\t            // refresh util user interaction finished, which is not expected.\\n\\t            // But `dispatchAction` may be called too frequently when pan on touch\\n\\t            // screen, which impacts performance if do not throttle them.\\n\\t            this._throttledZrFlush();\\n\\t        }\\n\\n\\t        flushPendingActions.call(this, opt.silent);\\n\\n\\t        triggerUpdatedEvent.call(this, opt.silent);\\n\\t    };\\n\\n\\t    function doDispatchAction(payload, silent) {\\n\\t        var payloadType = payload.type;\\n\\t        var escapeConnect = payload.escapeConnect;\\n\\t        var actionWrap = actions[payloadType];\\n\\t        var actionInfo = actionWrap.actionInfo;\\n\\n\\t        var cptType = (actionInfo.update || 'update').split(':');\\n\\t        var updateMethod = cptType.pop();\\n\\t        cptType = cptType[0] != null && parseClassType(cptType[0]);\\n\\n\\t        this[IN_MAIN_PROCESS] = true;\\n\\n\\t        var payloads = [payload];\\n\\t        var batched = false;\\n\\t        // Batch action\\n\\t        if (payload.batch) {\\n\\t            batched = true;\\n\\t            payloads = zrUtil.map(payload.batch, function (item) {\\n\\t                item = zrUtil.defaults(zrUtil.extend({}, item), payload);\\n\\t                item.batch = null;\\n\\t                return item;\\n\\t            });\\n\\t        }\\n\\n\\t        var eventObjBatch = [];\\n\\t        var eventObj;\\n\\t        var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\\n\\n\\t        each(payloads, function (batchItem) {\\n\\t            // Action can specify the event by return it.\\n\\t            eventObj = actionWrap.action(batchItem, this._model, this._api);\\n\\t            // Emit event outside\\n\\t            eventObj = eventObj || zrUtil.extend({}, batchItem);\\n\\t            // Convert type to eventType\\n\\t            eventObj.type = actionInfo.event || eventObj.type;\\n\\t            eventObjBatch.push(eventObj);\\n\\n\\t            // light update does not perform data process, layout and visual.\\n\\t            if (isHighDown) {\\n\\t                // method, payload, mainType, subType\\n\\t                updateDirectly(this, updateMethod, batchItem, 'series');\\n\\t            }\\n\\t            else if (cptType) {\\n\\t                updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\\n\\t            }\\n\\t        }, this);\\n\\n\\t        if (updateMethod !== 'none' && !isHighDown && !cptType) {\\n\\t            // Still dirty\\n\\t            if (this[OPTION_UPDATED]) {\\n\\t                // FIXME Pass payload ?\\n\\t                updateMethods.prepareAndUpdate.call(this, payload);\\n\\t                this[OPTION_UPDATED] = false;\\n\\t            }\\n\\t            else {\\n\\t                updateMethods[updateMethod].call(this, payload);\\n\\t            }\\n\\t        }\\n\\n\\t        // Follow the rule of action batch\\n\\t        if (batched) {\\n\\t            eventObj = {\\n\\t                type: actionInfo.event || payloadType,\\n\\t                escapeConnect: escapeConnect,\\n\\t                batch: eventObjBatch\\n\\t            };\\n\\t        }\\n\\t        else {\\n\\t            eventObj = eventObjBatch[0];\\n\\t        }\\n\\n\\t        this[IN_MAIN_PROCESS] = false;\\n\\n\\t        !silent && this._messageCenter.trigger(eventObj.type, eventObj);\\n\\t    }\\n\\n\\t    function flushPendingActions(silent) {\\n\\t        var pendingActions = this._pendingActions;\\n\\t        while (pendingActions.length) {\\n\\t            var payload = pendingActions.shift();\\n\\t            doDispatchAction.call(this, payload, silent);\\n\\t        }\\n\\t    }\\n\\n\\t    function triggerUpdatedEvent(silent) {\\n\\t        !silent && this.trigger('updated');\\n\\t    }\\n\\n\\t    /**\\n\\t     * Register event\\n\\t     * @method\\n\\t     */\\n\\t    echartsProto.on = createRegisterEventWithLowercaseName('on');\\n\\t    echartsProto.off = createRegisterEventWithLowercaseName('off');\\n\\t    echartsProto.one = createRegisterEventWithLowercaseName('one');\\n\\n\\t    /**\\n\\t     * @param {string} methodName\\n\\t     * @private\\n\\t     */\\n\\t    function invokeUpdateMethod(methodName, ecModel, payload) {\\n\\t        var api = this._api;\\n\\n\\t        // Update all components\\n\\t        each(this._componentsViews, function (component) {\\n\\t            var componentModel = component.__model;\\n\\t            component[methodName](componentModel, ecModel, api, payload);\\n\\n\\t            updateZ(componentModel, component);\\n\\t        }, this);\\n\\n\\t        // Upate all charts\\n\\t        ecModel.eachSeries(function (seriesModel, idx) {\\n\\t            var chart = this._chartsMap[seriesModel.__viewId];\\n\\t            chart[methodName](seriesModel, ecModel, api, payload);\\n\\n\\t            updateZ(seriesModel, chart);\\n\\n\\t            updateProgressiveAndBlend(seriesModel, chart);\\n\\t        }, this);\\n\\n\\t        // If use hover layer\\n\\t        updateHoverLayerStatus(this._zr, ecModel);\\n\\n\\t        // Post render\\n\\t        each(postUpdateFuncs, function (func) {\\n\\t            func(ecModel, api);\\n\\t        });\\n\\t    }\\n\\n\\t    /**\\n\\t     * Prepare view instances of charts and components\\n\\t     * @param  {module:echarts/model/Global} ecModel\\n\\t     * @private\\n\\t     */\\n\\t    function prepareView(type, ecModel) {\\n\\t        var isComponent = type === 'component';\\n\\t        var viewList = isComponent ? this._componentsViews : this._chartsViews;\\n\\t        var viewMap = isComponent ? this._componentsMap : this._chartsMap;\\n\\t        var zr = this._zr;\\n\\n\\t        for (var i = 0; i < viewList.length; i++) {\\n\\t            viewList[i].__alive = false;\\n\\t        }\\n\\n\\t        ecModel[isComponent ? 'eachComponent' : 'eachSeries'](function (componentType, model) {\\n\\t            if (isComponent) {\\n\\t                if (componentType === 'series') {\\n\\t                    return;\\n\\t                }\\n\\t            }\\n\\t            else {\\n\\t                model = componentType;\\n\\t            }\\n\\n\\t            // Consider: id same and type changed.\\n\\t            var viewId = '_ec_' + model.id + '_' + model.type;\\n\\t            var view = viewMap[viewId];\\n\\t            if (!view) {\\n\\t                var classType = parseClassType(model.type);\\n\\t                var Clazz = isComponent\\n\\t                    ? ComponentView.getClass(classType.main, classType.sub)\\n\\t                    : ChartView.getClass(classType.sub);\\n\\t                if (Clazz) {\\n\\t                    view = new Clazz();\\n\\t                    view.init(ecModel, this._api);\\n\\t                    viewMap[viewId] = view;\\n\\t                    viewList.push(view);\\n\\t                    zr.add(view.group);\\n\\t                }\\n\\t                else {\\n\\t                    // Error\\n\\t                    return;\\n\\t                }\\n\\t            }\\n\\n\\t            model.__viewId = view.__id = viewId;\\n\\t            view.__alive = true;\\n\\t            view.__model = model;\\n\\t            view.group.__ecComponentInfo = {\\n\\t                mainType: model.mainType,\\n\\t                index: model.componentIndex\\n\\t            };\\n\\t        }, this);\\n\\n\\t        for (var i = 0; i < viewList.length;) {\\n\\t            var view = viewList[i];\\n\\t            if (!view.__alive) {\\n\\t                zr.remove(view.group);\\n\\t                view.dispose(ecModel, this._api);\\n\\t                viewList.splice(i, 1);\\n\\t                delete viewMap[view.__id];\\n\\t                view.__id = view.group.__ecComponentInfo = null;\\n\\t            }\\n\\t            else {\\n\\t                i++;\\n\\t            }\\n\\t        }\\n\\t    }\\n\\n\\t    /**\\n\\t     * Processor data in each series\\n\\t     *\\n\\t     * @param {module:echarts/model/Global} ecModel\\n\\t     * @private\\n\\t     */\\n\\t    function processData(ecModel, api) {\\n\\t        each(dataProcessorFuncs, function (process) {\\n\\t            process.func(ecModel, api);\\n\\t        });\\n\\t    }\\n\\n\\t    /**\\n\\t     * @private\\n\\t     */\\n\\t    function stackSeriesData(ecModel) {\\n\\t        var stackedDataMap = {};\\n\\t        ecModel.eachSeries(function (series) {\\n\\t            var stack = series.get('stack');\\n\\t            var data = series.getData();\\n\\t            if (stack && data.type === 'list') {\\n\\t                var previousStack = stackedDataMap[stack];\\n\\t                // Avoid conflict with Object.prototype\\n\\t                if (stackedDataMap.hasOwnProperty(stack) && previousStack) {\\n\\t                    data.stackedOn = previousStack;\\n\\t                }\\n\\t                stackedDataMap[stack] = data;\\n\\t            }\\n\\t        });\\n\\t    }\\n\\n\\t    /**\\n\\t     * Layout before each chart render there series, special visual encoding stage\\n\\t     *\\n\\t     * @param {module:echarts/model/Global} ecModel\\n\\t     * @private\\n\\t     */\\n\\t    function doLayout(ecModel, payload) {\\n\\t        var api = this._api;\\n\\t        each(visualFuncs, function (visual) {\\n\\t            if (visual.isLayout) {\\n\\t                visual.func(ecModel, api, payload);\\n\\t            }\\n\\t        });\\n\\t    }\\n\\n\\t    /**\\n\\t     * Encode visual infomation from data after data processing\\n\\t     *\\n\\t     * @param {module:echarts/model/Global} ecModel\\n\\t     * @param {object} layout\\n\\t     * @param {boolean} [excludesLayout]\\n\\t     * @private\\n\\t     */\\n\\t    function doVisualEncoding(ecModel, payload, excludesLayout) {\\n\\t        var api = this._api;\\n\\t        ecModel.clearColorPalette();\\n\\t        ecModel.eachSeries(function (seriesModel) {\\n\\t            seriesModel.clearColorPalette();\\n\\t        });\\n\\t        each(visualFuncs, function (visual) {\\n\\t            (!excludesLayout || !visual.isLayout)\\n\\t                && visual.func(ecModel, api, payload);\\n\\t        });\\n\\t    }\\n\\n\\t    /**\\n\\t     * Render each chart and component\\n\\t     * @private\\n\\t     */\\n\\t    function doRender(ecModel, payload) {\\n\\t        var api = this._api;\\n\\t        // Render all components\\n\\t        each(this._componentsViews, function (componentView) {\\n\\t            var componentModel = componentView.__model;\\n\\t            componentView.render(componentModel, ecModel, api, payload);\\n\\n\\t            updateZ(componentModel, componentView);\\n\\t        }, this);\\n\\n\\t        each(this._chartsViews, function (chart) {\\n\\t            chart.__alive = false;\\n\\t        }, this);\\n\\n\\t        // Render all charts\\n\\t        ecModel.eachSeries(function (seriesModel, idx) {\\n\\t            var chartView = this._chartsMap[seriesModel.__viewId];\\n\\t            chartView.__alive = true;\\n\\t            chartView.render(seriesModel, ecModel, api, payload);\\n\\n\\t            chartView.group.silent = !!seriesModel.get('silent');\\n\\n\\t            updateZ(seriesModel, chartView);\\n\\n\\t            updateProgressiveAndBlend(seriesModel, chartView);\\n\\n\\t        }, this);\\n\\n\\t        // If use hover layer\\n\\t        updateHoverLayerStatus(this._zr, ecModel);\\n\\n\\t        // Remove groups of unrendered charts\\n\\t        each(this._chartsViews, function (chart) {\\n\\t            if (!chart.__alive) {\\n\\t                chart.remove(ecModel, api);\\n\\t            }\\n\\t        }, this);\\n\\t    }\\n\\n\\t    var MOUSE_EVENT_NAMES = [\\n\\t        'click', 'dblclick', 'mouseover', 'mouseout', 'mousemove',\\n\\t        'mousedown', 'mouseup', 'globalout', 'contextmenu'\\n\\t    ];\\n\\t    /**\\n\\t     * @private\\n\\t     */\\n\\t    echartsProto._initEvents = function () {\\n\\t        each(MOUSE_EVENT_NAMES, function (eveName) {\\n\\t            this._zr.on(eveName, function (e) {\\n\\t                var ecModel = this.getModel();\\n\\t                var el = e.target;\\n\\t                var params;\\n\\n\\t                // no e.target when 'globalout'.\\n\\t                if (eveName === 'globalout') {\\n\\t                    params = {};\\n\\t                }\\n\\t                else if (el && el.dataIndex != null) {\\n\\t                    var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\\n\\t                    params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\\n\\t                }\\n\\t                // If element has custom eventData of components\\n\\t                else if (el && el.eventData) {\\n\\t                    params = zrUtil.extend({}, el.eventData);\\n\\t                }\\n\\n\\t                if (params) {\\n\\t                    params.event = e;\\n\\t                    params.type = eveName;\\n\\t                    this.trigger(eveName, params);\\n\\t                }\\n\\n\\t            }, this);\\n\\t        }, this);\\n\\n\\t        each(eventActionMap, function (actionType, eventType) {\\n\\t            this._messageCenter.on(eventType, function (event) {\\n\\t                this.trigger(eventType, event);\\n\\t            }, this);\\n\\t        }, this);\\n\\t    };\\n\\n\\t    /**\\n\\t     * @return {boolean}\\n\\t     */\\n\\t    echartsProto.isDisposed = function () {\\n\\t        return this._disposed;\\n\\t    };\\n\\n\\t    /**\\n\\t     * Clear\\n\\t     */\\n\\t    echartsProto.clear = function () {\\n\\t        this.setOption({ series: [] }, true);\\n\\t    };\\n\\n\\t    /**\\n\\t     * Dispose instance\\n\\t     */\\n\\t    echartsProto.dispose = function () {\\n\\t        if (this._disposed) {\\n\\t            if (true) {\\n\\t                console.warn('Instance ' + this.id + ' has been disposed');\\n\\t            }\\n\\t            return;\\n\\t        }\\n\\t        this._disposed = true;\\n\\n\\t        var api = this._api;\\n\\t        var ecModel = this._model;\\n\\n\\t        each(this._componentsViews, function (component) {\\n\\t            component.dispose(ecModel, api);\\n\\t        });\\n\\t        each(this._chartsViews, function (chart) {\\n\\t            chart.dispose(ecModel, api);\\n\\t        });\\n\\n\\t        // Dispose after all views disposed\\n\\t        this._zr.dispose();\\n\\n\\t        delete instances[this.id];\\n\\t    };\\n\\n\\t    zrUtil.mixin(ECharts, Eventful);\\n\\n\\t    function updateHoverLayerStatus(zr, ecModel) {\\n\\t        var storage = zr.storage;\\n\\t        var elCount = 0;\\n\\t        storage.traverse(function (el) {\\n\\t            if (!el.isGroup) {\\n\\t                elCount++;\\n\\t            }\\n\\t        });\\n\\t        if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\\n\\t            storage.traverse(function (el) {\\n\\t                if (!el.isGroup) {\\n\\t                    el.useHoverLayer = true;\\n\\t                }\\n\\t            });\\n\\t        }\\n\\t    }\\n\\n\\t    /**\\n\\t     * Update chart progressive and blend.\\n\\t     * @param {module:echarts/model/Series|module:echarts/model/Component} model\\n\\t     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\\n\\t     */\\n\\t    function updateProgressiveAndBlend(seriesModel, chartView) {\\n\\t        // Progressive configuration\\n\\t        var elCount = 0;\\n\\t        chartView.group.traverse(function (el) {\\n\\t            if (el.type !== 'group' && !el.ignore) {\\n\\t                elCount++;\\n\\t            }\\n\\t        });\\n\\t        var frameDrawNum = +seriesModel.get('progressive');\\n\\t        var needProgressive = elCount > seriesModel.get('progressiveThreshold') && frameDrawNum && !env.node;\\n\\t        if (needProgressive) {\\n\\t            chartView.group.traverse(function (el) {\\n\\t                // FIXME marker and other components\\n\\t                if (!el.isGroup) {\\n\\t                    el.progressive = needProgressive ?\\n\\t                        Math.floor(elCount++ / frameDrawNum) : -1;\\n\\t                    if (needProgressive) {\\n\\t                        el.stopAnimation(true);\\n\\t                    }\\n\\t                }\\n\\t            });\\n\\t        }\\n\\n\\t        // Blend configration\\n\\t        var blendMode = seriesModel.get('blendMode') || null;\\n\\t        if (true) {\\n\\t            if (!env.canvasSupported && blendMode && blendMode !== 'source-over') {\\n\\t                console.warn('Only canvas support blendMode');\\n\\t            }\\n\\t        }\\n\\t        chartView.group.traverse(function (el) {\\n\\t            // FIXME marker and other components\\n\\t            if (!el.isGroup) {\\n\\t                el.setStyle('blend', blendMode);\\n\\t            }\\n\\t        });\\n\\t    }\\n\\n\\t    /**\\n\\t     * @param {module:echarts/model/Series|module:echarts/model/Component} model\\n\\t     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\\n\\t     */\\n\\t    function updateZ(model, view) {\\n\\t        var z = model.get('z');\\n\\t        var zlevel = model.get('zlevel');\\n\\t        // Set z and zlevel\\n\\t        view.group.traverse(function (el) {\\n\\t            if (el.type !== 'group') {\\n\\t                z != null && (el.z = z);\\n\\t                zlevel != null && (el.zlevel = zlevel);\\n\\t            }\\n\\t        });\\n\\t    }\\n\\n\\t    function createExtensionAPI(ecInstance) {\\n\\t        var coordSysMgr = ecInstance._coordSysMgr;\\n\\t        return zrUtil.extend(new ExtensionAPI(ecInstance), {\\n\\t            // Inject methods\\n\\t            getCoordinateSystems: zrUtil.bind(\\n\\t                coordSysMgr.getCoordinateSystems, coordSysMgr\\n\\t            ),\\n\\t            getComponentByElement: function (el) {\\n\\t                while (el) {\\n\\t                    var modelInfo = el.__ecComponentInfo;\\n\\t                    if (modelInfo != null) {\\n\\t                        return ecInstance._model.getComponent(modelInfo.mainType, modelInfo.index);\\n\\t                    }\\n\\t                    el = el.parent;\\n\\t                }\\n\\t            }\\n\\t        });\\n\\t    }\\n\\n\\t    /**\\n\\t     * @type {Object} key: actionType.\\n\\t     * @inner\\n\\t     */\\n\\t    var actions = {};\\n\\n\\t    /**\\n\\t     * Map eventType to actionType\\n\\t     * @type {Object}\\n\\t     */\\n\\t    var eventActionMap = {};\\n\\n\\t    /**\\n\\t     * Data processor functions of each stage\\n\\t     * @type {Array.<Object.<string, Function>>}\\n\\t     * @inner\\n\\t     */\\n\\t    var dataProcessorFuncs = [];\\n\\n\\t    /**\\n\\t     * @type {Array.<Function>}\\n\\t     * @inner\\n\\t     */\\n\\t    var optionPreprocessorFuncs = [];\\n\\n\\t    /**\\n\\t     * @type {Array.<Function>}\\n\\t     * @inner\\n\\t     */\\n\\t    var postUpdateFuncs = [];\\n\\n\\t    /**\\n\\t     * Visual encoding functions of each stage\\n\\t     * @type {Array.<Object.<string, Function>>}\\n\\t     * @inner\\n\\t     */\\n\\t    var visualFuncs = [];\\n\\t    /**\\n\\t     * Theme storage\\n\\t     * @type {Object.<key, Object>}\\n\\t     */\\n\\t    var themeStorage = {};\\n\\t    /**\\n\\t     * Loading effects\\n\\t     */\\n\\t    var loadingEffects = {};\\n\\n\\n\\t    var instances = {};\\n\\t    var connectedGroups = {};\\n\\n\\t    var idBase = new Date() - 0;\\n\\t    var groupIdBase = new Date() - 0;\\n\\t    var DOM_ATTRIBUTE_KEY = '_echarts_instance_';\\n\\n\\t    /**\\n\\t     * @alias module:echarts\\n\\t     */\\n\\t    var echarts = {\\n\\t        /**\\n\\t         * @type {number}\\n\\t         */\\n\\t        version: '3.6.2',\\n\\t        dependencies: {\\n\\t            zrender: '3.5.2'\\n\\t        }\\n\\t    };\\n\\n\\t    function enableConnect(chart) {\\n\\t        var STATUS_PENDING = 0;\\n\\t        var STATUS_UPDATING = 1;\\n\\t        var STATUS_UPDATED = 2;\\n\\t        var STATUS_KEY = '__connectUpdateStatus';\\n\\n\\t        function updateConnectedChartsStatus(charts, status) {\\n\\t            for (var i = 0; i < charts.length; i++) {\\n\\t                var otherChart = charts[i];\\n\\t                otherChart[STATUS_KEY] = status;\\n\\t            }\\n\\t        }\\n\\n\\t        zrUtil.each(eventActionMap, function (actionType, eventType) {\\n\\t            chart._messageCenter.on(eventType, function (event) {\\n\\t                if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\\n\\t                    if (event && event.escapeConnect) {\\n\\t                        return;\\n\\t                    }\\n\\n\\t                    var action = chart.makeActionFromEvent(event);\\n\\t                    var otherCharts = [];\\n\\n\\t                    zrUtil.each(instances, function (otherChart) {\\n\\t                        if (otherChart !== chart && otherChart.group === chart.group) {\\n\\t                            otherCharts.push(otherChart);\\n\\t                        }\\n\\t                    });\\n\\n\\t                    updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\\n\\t                    each(otherCharts, function (otherChart) {\\n\\t                        if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\\n\\t                            otherChart.dispatchAction(action);\\n\\t                        }\\n\\t                    });\\n\\t                    updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\\n\\t                }\\n\\t            });\\n\\t        });\\n\\t    }\\n\\n\\t    /**\\n\\t     * @param {HTMLDomElement} dom\\n\\t     * @param {Object} [theme]\\n\\t     * @param {Object} opts\\n\\t     * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\\n\\t     * @param {string} [opts.renderer] Currently only 'canvas' is supported.\\n\\t     * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\\n\\t     *                              Can be 'auto' (the same as null/undefined)\\n\\t     * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\\n\\t     *                               Can be 'auto' (the same as null/undefined)\\n\\t     */\\n\\t    echarts.init = function (dom, theme, opts) {\\n\\t        if (true) {\\n\\t            // Check version\\n\\t            if ((zrender.version.replace('.', '') - 0) < (echarts.dependencies.zrender.replace('.', '') - 0)) {\\n\\t                throw new Error(\\n\\t                    'ZRender ' + zrender.version\\n\\t                    + ' is too old for ECharts ' + echarts.version\\n\\t                    + '. Current version need ZRender '\\n\\t                    + echarts.dependencies.zrender + '+'\\n\\t                );\\n\\t            }\\n\\n\\t            if (!dom) {\\n\\t                throw new Error('Initialize failed: invalid dom.');\\n\\t            }\\n\\t        }\\n\\n\\t        var existInstance = echarts.getInstanceByDom(dom);\\n\\t        if (existInstance) {\\n\\t            if (true) {\\n\\t                console.warn('There is a chart instance already initialized on the dom.');\\n\\t            }\\n\\t            return existInstance;\\n\\t        }\\n\\n\\t        if (true) {\\n\\t            if (zrUtil.isDom(dom)\\n\\t                && dom.nodeName.toUpperCase() !== 'CANVAS'\\n\\t                && (\\n\\t                    (!dom.clientWidth && (!opts || opts.width == null))\\n\\t                    || (!dom.clientHeight && (!opts || opts.height == null))\\n\\t                )\\n\\t            ) {\\n\\t                console.warn('Can\\\\'t get dom width or height');\\n\\t            }\\n\\t        }\\n\\n\\t        var chart = new ECharts(dom, theme, opts);\\n\\t        chart.id = 'ec_' + idBase++;\\n\\t        instances[chart.id] = chart;\\n\\n\\t        if (dom.setAttribute) {\\n\\t            dom.setAttribute(DOM_ATTRIBUTE_KEY, chart.id);\\n\\t        }\\n\\t        else {\\n\\t            dom[DOM_ATTRIBUTE_KEY] = chart.id;\\n\\t        }\\n\\n\\t        enableConnect(chart);\\n\\n\\t        return chart;\\n\\t    };\\n\\n\\t    /**\\n\\t     * @return {string|Array.<module:echarts~ECharts>} groupId\\n\\t     */\\n\\t    echarts.connect = function (groupId) {\\n\\t        // Is array of charts\\n\\t        if (zrUtil.isArray(groupId)) {\\n\\t            var charts = groupId;\\n\\t            groupId = null;\\n\\t            // If any chart has group\\n\\t            zrUtil.each(charts, function (chart) {\\n\\t                if (chart.group != null) {\\n\\t                    groupId = chart.group;\\n\\t                }\\n\\t            });\\n\\t            groupId = groupId || ('g_' + groupIdBase++);\\n\\t            zrUtil.each(charts, function (chart) {\\n\\t                chart.group = groupId;\\n\\t            });\\n\\t        }\\n\\t        connectedGroups[groupId] = true;\\n\\t        return groupId;\\n\\t    };\\n\\n\\t    /**\\n\\t     * @DEPRECATED\\n\\t     * @return {string} groupId\\n\\t     */\\n\\t    echarts.disConnect = function (groupId) {\\n\\t        connectedGroups[groupId] = false;\\n\\t    };\\n\\n\\t    /**\\n\\t     * @return {string} groupId\\n\\t     */\\n\\t    echarts.disconnect = echarts.disConnect;\\n\\n\\t    /**\\n\\t     * Dispose a chart instance\\n\\t     * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\\n\\t     */\\n\\t    echarts.dispose = function (chart) {\\n\\t        if (typeof chart === 'string') {\\n\\t            chart = instances[chart];\\n\\t        }\\n\\t        else if (!(chart instanceof ECharts)){\\n\\t            // Try to treat as dom\\n\\t            chart = echarts.getInstanceByDom(chart);\\n\\t        }\\n\\t        if ((chart instanceof ECharts) && !chart.isDisposed()) {\\n\\t            chart.dispose();\\n\\t        }\\n\\t    };\\n\\n\\t    /**\\n\\t     * @param  {HTMLDomElement} dom\\n\\t     * @return {echarts~ECharts}\\n\\t     */\\n\\t    echarts.getInstanceByDom = function (dom) {\\n\\t        var key;\\n\\t        if (dom.getAttribute) {\\n\\t            key = dom.getAttribute(DOM_ATTRIBUTE_KEY);\\n\\t        }\\n\\t        else {\\n\\t            key = dom[DOM_ATTRIBUTE_KEY];\\n\\t        }\\n\\t        return instances[key];\\n\\t    };\\n\\n\\t    /**\\n\\t     * @param {string} key\\n\\t     * @return {echarts~ECharts}\\n\\t     */\\n\\t    echarts.getInstanceById = function (key) {\\n\\t        return instances[key];\\n\\t    };\\n\\n\\t    /**\\n\\t     * Register theme\\n\\t     */\\n\\t    echarts.registerTheme = function (name, theme) {\\n\\t        themeStorage[name] = theme;\\n\\t    };\\n\\n\\t    /**\\n\\t     * Register option preprocessor\\n\\t     * @param {Function} preprocessorFunc\\n\\t     */\\n\\t    echarts.registerPreprocessor = function (preprocessorFunc) {\\n\\t        optionPreprocessorFuncs.push(preprocessorFunc);\\n\\t    };\\n\\n\\t    /**\\n\\t     * @param {number} [priority=1000]\\n\\t     * @param {Function} processorFunc\\n\\t     */\\n\\t    echarts.registerProcessor = function (priority, processorFunc) {\\n\\t        if (typeof priority === 'function') {\\n\\t            processorFunc = priority;\\n\\t            priority = PRIORITY_PROCESSOR_FILTER;\\n\\t        }\\n\\t        if (true) {\\n\\t            if (isNaN(priority)) {\\n\\t                throw new Error('Unkown processor priority');\\n\\t            }\\n\\t        }\\n\\t        dataProcessorFuncs.push({\\n\\t            prio: priority,\\n\\t            func: processorFunc\\n\\t        });\\n\\t    };\\n\\n\\t    /**\\n\\t     * Register postUpdater\\n\\t     * @param {Function} postUpdateFunc\\n\\t     */\\n\\t    echarts.registerPostUpdate = function (postUpdateFunc) {\\n\\t        postUpdateFuncs.push(postUpdateFunc);\\n\\t    };\\n\\n\\t    /**\\n\\t     * Usage:\\n\\t     * registerAction('someAction', 'someEvent', function () { ... });\\n\\t     * registerAction('someAction', function () { ... });\\n\\t     * registerAction(\\n\\t     *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\\n\\t     *     function () { ... }\\n\\t     * );\\n\\t     *\\n\\t     * @param {(string|Object)} actionInfo\\n\\t     * @param {string} actionInfo.type\\n\\t     * @param {string} [actionInfo.event]\\n\\t     * @param {string} [actionInfo.update]\\n\\t     * @param {string} [eventName]\\n\\t     * @param {Function} action\\n\\t     */\\n\\t    echarts.registerAction = function (actionInfo, eventName, action) {\\n\\t        if (typeof eventName === 'function') {\\n\\t            action = eventName;\\n\\t            eventName = '';\\n\\t        }\\n\\t        var actionType = zrUtil.isObject(actionInfo)\\n\\t            ? actionInfo.type\\n\\t            : ([actionInfo, actionInfo = {\\n\\t                event: eventName\\n\\t            }][0]);\\n\\n\\t        // Event name is all lowercase\\n\\t        actionInfo.event = (actionInfo.event || actionType).toLowerCase();\\n\\t        eventName = actionInfo.event;\\n\\n\\t        // Validate action type and event name.\\n\\t        zrUtil.assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\\n\\n\\t        if (!actions[actionType]) {\\n\\t            actions[actionType] = {action: action, actionInfo: actionInfo};\\n\\t        }\\n\\t        eventActionMap[eventName] = actionType;\\n\\t    };\\n\\n\\t    /**\\n\\t     * @param {string} type\\n\\t     * @param {*} CoordinateSystem\\n\\t     */\\n\\t    echarts.registerCoordinateSystem = function (type, CoordinateSystem) {\\n\\t        CoordinateSystemManager.register(type, CoordinateSystem);\\n\\t    };\\n\\n\\t    /**\\n\\t     * Get dimensions of specified coordinate system.\\n\\t     * @param {string} type\\n\\t     * @return {Array.<string|Object>}\\n\\t     */\\n\\t    echarts.getCoordinateSystemDimensions = function (type) {\\n\\t        var coordSysCreator = CoordinateSystemManager.get(type);\\n\\t        if (coordSysCreator) {\\n\\t            return coordSysCreator.getDimensionsInfo\\n\\t                    ? coordSysCreator.getDimensionsInfo()\\n\\t                    : coordSysCreator.dimensions.slice();\\n\\t        }\\n\\t    };\\n\\n\\t    /**\\n\\t     * Layout is a special stage of visual encoding\\n\\t     * Most visual encoding like color are common for different chart\\n\\t     * But each chart has it's own layout algorithm\\n\\t     *\\n\\t     * @param {number} [priority=1000]\\n\\t     * @param {Function} layoutFunc\\n\\t     */\\n\\t    echarts.registerLayout = function (priority, layoutFunc) {\\n\\t        if (typeof priority === 'function') {\\n\\t            layoutFunc = priority;\\n\\t            priority = PRIORITY_VISUAL_LAYOUT;\\n\\t        }\\n\\t        if (true) {\\n\\t            if (isNaN(priority)) {\\n\\t                throw new Error('Unkown layout priority');\\n\\t            }\\n\\t        }\\n\\t        visualFuncs.push({\\n\\t            prio: priority,\\n\\t            func: layoutFunc,\\n\\t            isLayout: true\\n\\t        });\\n\\t    };\\n\\n\\t    /**\\n\\t     * @param {number} [priority=3000]\\n\\t     * @param {Function} visualFunc\\n\\t     */\\n\\t    echarts.registerVisual = function (priority, visualFunc) {\\n\\t        if (typeof priority === 'function') {\\n\\t            visualFunc = priority;\\n\\t            priority = PRIORITY_VISUAL_CHART;\\n\\t        }\\n\\t        if (true) {\\n\\t            if (isNaN(priority)) {\\n\\t                throw new Error('Unkown visual priority');\\n\\t            }\\n\\t        }\\n\\t        visualFuncs.push({\\n\\t            prio: priority,\\n\\t            func: visualFunc\\n\\t        });\\n\\t    };\\n\\n\\t    /**\\n\\t     * @param {string} name\\n\\t     */\\n\\t    echarts.registerLoading = function (name, loadingFx) {\\n\\t        loadingEffects[name] = loadingFx;\\n\\t    };\\n\\n\\t    /**\\n\\t     * @param {Object} opts\\n\\t     * @param {string} [superClass]\\n\\t     */\\n\\t    echarts.extendComponentModel = function (opts/*, superClass*/) {\\n\\t        // var Clazz = ComponentModel;\\n\\t        // if (superClass) {\\n\\t        //     var classType = parseClassType(superClass);\\n\\t        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\\n\\t        // }\\n\\t        return ComponentModel.extend(opts);\\n\\t    };\\n\\n\\t    /**\\n\\t     * @param {Object} opts\\n\\t     * @param {string} [superClass]\\n\\t     */\\n\\t    echarts.extendComponentView = function (opts/*, superClass*/) {\\n\\t        // var Clazz = ComponentView;\\n\\t        // if (superClass) {\\n\\t        //     var classType = parseClassType(superClass);\\n\\t        //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\\n\\t        // }\\n\\t        return ComponentView.extend(opts);\\n\\t    };\\n\\n\\t    /**\\n\\t     * @param {Object} opts\\n\\t     * @param {string} [superClass]\\n\\t     */\\n\\t    echarts.extendSeriesModel = function (opts/*, superClass*/) {\\n\\t        // var Clazz = SeriesModel;\\n\\t        // if (superClass) {\\n\\t        //     superClass = 'series.' + superClass.replace('series.', '');\\n\\t        //     var classType = parseClassType(superClass);\\n\\t        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\\n\\t        // }\\n\\t        return SeriesModel.extend(opts);\\n\\t    };\\n\\n\\t    /**\\n\\t     * @param {Object} opts\\n\\t     * @param {string} [superClass]\\n\\t     */\\n\\t    echarts.extendChartView = function (opts/*, superClass*/) {\\n\\t        // var Clazz = ChartView;\\n\\t        // if (superClass) {\\n\\t        //     superClass = superClass.replace('series.', '');\\n\\t        //     var classType = parseClassType(superClass);\\n\\t        //     Clazz = ChartView.getClass(classType.main, true);\\n\\t        // }\\n\\t        return ChartView.extend(opts);\\n\\t    };\\n\\n\\t    /**\\n\\t     * ZRender need a canvas context to do measureText.\\n\\t     * But in node environment canvas may be created by node-canvas.\\n\\t     * So we need to specify how to create a canvas instead of using document.createElement('canvas')\\n\\t     *\\n\\t     * Be careful of using it in the browser.\\n\\t     *\\n\\t     * @param {Function} creator\\n\\t     * @example\\n\\t     *     var Canvas = require('canvas');\\n\\t     *     var echarts = require('echarts');\\n\\t     *     echarts.setCanvasCreator(function () {\\n\\t     *         // Small size is enough.\\n\\t     *         return new Canvas(32, 32);\\n\\t     *     });\\n\\t     */\\n\\t    echarts.setCanvasCreator = function (creator) {\\n\\t        zrUtil.createCanvas = creator;\\n\\t    };\\n\\n\\t    echarts.registerVisual(PRIORITY_VISUAL_GLOBAL, __webpack_require__(94));\\n\\t    echarts.registerPreprocessor(__webpack_require__(95));\\n\\t    echarts.registerLoading('default', __webpack_require__(97));\\n\\n\\t    // Default action\\n\\t    echarts.registerAction({\\n\\t        type: 'highlight',\\n\\t        event: 'highlight',\\n\\t        update: 'highlight'\\n\\t    }, zrUtil.noop);\\n\\t    echarts.registerAction({\\n\\t        type: 'downplay',\\n\\t        event: 'downplay',\\n\\t        update: 'downplay'\\n\\t    }, zrUtil.noop);\\n\\n\\n\\t    // --------\\n\\t    // Exports\\n\\t    // --------\\n\\t    echarts.zrender = zrender;\\n\\n\\t    echarts.List = __webpack_require__(98);\\n\\t    echarts.Model = __webpack_require__(12);\\n\\n\\t    echarts.Axis = __webpack_require__(100);\\n\\n\\t    echarts.graphic = __webpack_require__(18);\\n\\t    echarts.number = __webpack_require__(7);\\n\\t    echarts.format = __webpack_require__(6);\\n\\t    echarts.throttle = throttle.throttle;\\n\\t    echarts.matrix = __webpack_require__(11);\\n\\t    echarts.vector = __webpack_require__(10);\\n\\t    echarts.color = __webpack_require__(31);\\n\\n\\t    echarts.util = {};\\n\\t    each([\\n\\t            'map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter',\\n\\t            'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction',\\n\\t            'extend', 'defaults', 'clone', 'merge'\\n\\t        ],\\n\\t        function (name) {\\n\\t            echarts.util[name] = zrUtil[name];\\n\\t        }\\n\\t    );\\n\\n\\t    echarts.helper = __webpack_require__(108);\\n\\n\\n\\t    // PRIORITY\\n\\t    echarts.PRIORITY = {\\n\\t        PROCESSOR: {\\n\\t            FILTER: PRIORITY_PROCESSOR_FILTER,\\n\\t            STATISTIC: PRIORITY_PROCESSOR_STATISTIC\\n\\t        },\\n\\t        VISUAL: {\\n\\t            LAYOUT: PRIORITY_VISUAL_LAYOUT,\\n\\t            GLOBAL: PRIORITY_VISUAL_GLOBAL,\\n\\t            CHART: PRIORITY_VISUAL_CHART,\\n\\t            COMPONENT: PRIORITY_VISUAL_COMPONENT,\\n\\t            BRUSH: PRIORITY_VISUAL_BRUSH\\n\\t        }\\n\\t    };\\n\\n\\t    module.exports = echarts;\\n\\n\\n/***/ },\\n/* 2 */\\n/***/ function(module, exports) {\\n\\n\\t/**\\n\\t * echarts设备环境识别\\n\\t *\\n\\t * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\\n\\t * @author firede[firede@firede.us]\\n\\t * @desc thanks zepto.\\n\\t */\\n\\n\\t    var env = {};\\n\\t    if (typeof navigator === 'undefined') {\\n\\t        // In node\\n\\t        env = {\\n\\t            browser: {},\\n\\t            os: {},\\n\\t            node: true,\\n\\t            // Assume canvas is supported\\n\\t            canvasSupported: true\\n\\t        };\\n\\t    }\\n\\t    else {\\n\\t        env = detect(navigator.userAgent);\\n\\t    }\\n\\n\\t    module.exports = env;\\n\\n\\t    // Zepto.js\\n\\t    // (c) 2010-2013 Thomas Fuchs\\n\\t    // Zepto.js may be freely distributed under the MIT license.\\n\\n\\t    function detect(ua) {\\n\\t        var os = {};\\n\\t        var browser = {};\\n\\t        // var webkit = ua.match(/Web[kK]it[\\\\/]{0,1}([\\\\d.]+)/);\\n\\t        // var android = ua.match(/(Android);?[\\\\s\\\\/]+([\\\\d.]+)?/);\\n\\t        // var ipad = ua.match(/(iPad).*OS\\\\s([\\\\d_]+)/);\\n\\t        // var ipod = ua.match(/(iPod)(.*OS\\\\s([\\\\d_]+))?/);\\n\\t        // var iphone = !ipad && ua.match(/(iPhone\\\\sOS)\\\\s([\\\\d_]+)/);\\n\\t        // var webos = ua.match(/(webOS|hpwOS)[\\\\s\\\\/]([\\\\d.]+)/);\\n\\t        // var touchpad = webos && ua.match(/TouchPad/);\\n\\t        // var kindle = ua.match(/Kindle\\\\/([\\\\d.]+)/);\\n\\t        // var silk = ua.match(/Silk\\\\/([\\\\d._]+)/);\\n\\t        // var blackberry = ua.match(/(BlackBerry).*Version\\\\/([\\\\d.]+)/);\\n\\t        // var bb10 = ua.match(/(BB10).*Version\\\\/([\\\\d.]+)/);\\n\\t        // var rimtabletos = ua.match(/(RIM\\\\sTablet\\\\sOS)\\\\s([\\\\d.]+)/);\\n\\t        // var playbook = ua.match(/PlayBook/);\\n\\t        // var chrome = ua.match(/Chrome\\\\/([\\\\d.]+)/) || ua.match(/CriOS\\\\/([\\\\d.]+)/);\\n\\t        var firefox = ua.match(/Firefox\\\\/([\\\\d.]+)/);\\n\\t        // var safari = webkit && ua.match(/Mobile\\\\//) && !chrome;\\n\\t        // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\\n\\t        var ie = ua.match(/MSIE\\\\s([\\\\d.]+)/)\\n\\t            // IE 11 Trident/7.0; rv:11.0\\n\\t            || ua.match(/Trident\\\\/.+?rv:(([\\\\d.]+))/);\\n\\t        var edge = ua.match(/Edge\\\\/([\\\\d.]+)/); // IE 12 and 12+\\n\\n\\t        var weChat = (/micromessenger/i).test(ua);\\n\\n\\t        // Todo: clean this up with a better OS/browser seperation:\\n\\t        // - discern (more) between multiple browsers on android\\n\\t        // - decide if kindle fire in silk mode is android or not\\n\\t        // - Firefox on Android doesn't specify the Android version\\n\\t        // - possibly devide in os, device and browser hashes\\n\\n\\t        // if (browser.webkit = !!webkit) browser.version = webkit[1];\\n\\n\\t        // if (android) os.android = true, os.version = android[2];\\n\\t        // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\\n\\t        // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\\n\\t        // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\\n\\t        // if (webos) os.webos = true, os.version = webos[2];\\n\\t        // if (touchpad) os.touchpad = true;\\n\\t        // if (blackberry) os.blackberry = true, os.version = blackberry[2];\\n\\t        // if (bb10) os.bb10 = true, os.version = bb10[2];\\n\\t        // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\\n\\t        // if (playbook) browser.playbook = true;\\n\\t        // if (kindle) os.kindle = true, os.version = kindle[1];\\n\\t        // if (silk) browser.silk = true, browser.version = silk[1];\\n\\t        // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\\n\\t        // if (chrome) browser.chrome = true, browser.version = chrome[1];\\n\\t        if (firefox) {\\n\\t            browser.firefox = true;\\n\\t            browser.version = firefox[1];\\n\\t        }\\n\\t        // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\\n\\t        // if (webview) browser.webview = true;\\n\\n\\t        if (ie) {\\n\\t            browser.ie = true;\\n\\t            browser.version = ie[1];\\n\\t        }\\n\\n\\t        if (edge) {\\n\\t            browser.edge = true;\\n\\t            browser.version = edge[1];\\n\\t        }\\n\\n\\t        // It is difficult to detect WeChat in Win Phone precisely, because ua can\\n\\t        // not be set on win phone. So we do not consider Win Phone.\\n\\t        if (weChat) {\\n\\t            browser.weChat = true;\\n\\t        }\\n\\n\\t        // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\\n\\t        //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\\n\\t        // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\\n\\t        //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\\\/([\\\\d.]+)/)) ||\\n\\t        //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\\n\\n\\t        return {\\n\\t            browser: browser,\\n\\t            os: os,\\n\\t            node: false,\\n\\t            // 原生canvas支持，改极端点了\\n\\t            // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\\n\\t            canvasSupported : document.createElement('canvas').getContext ? true : false,\\n\\t            // @see <http://stackoverflow.com/questions/4817029/whats-the-best-way-to-detect-a-touch-screen-device-using-javascript>\\n\\t            // works on most browsers\\n\\t            // IE10/11 does not support touch event, and MS Edge supports them but not by\\n\\t            // default, so we dont check navigator.maxTouchPoints for them here.\\n\\t            touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\\n\\t            // <http://caniuse.com/#search=pointer%20event>.\\n\\t            pointerEventsSupported: 'onpointerdown' in window\\n\\t                // Firefox supports pointer but not by default, only MS browsers are reliable on pointer\\n\\t                // events currently. So we dont use that on other browsers unless tested sufficiently.\\n\\t                // Although IE 10 supports pointer event, it use old style and is different from the\\n\\t                // standard. So we exclude that. (IE 10 is hardly used on touch device)\\n\\t                && (browser.edge || (browser.ie && browser.version >= 11))\\n\\t        };\\n\\t    }\\n\\n\\n/***/ },\\n/* 3 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * ECharts global model\\n\\t *\\n\\t * @module {echarts/model/Global}\\n\\t */\\n\\n\\n\\n\\t    /**\\n\\t     * Caution: If the mechanism should be changed some day, these cases\\n\\t     * should be considered:\\n\\t     *\\n\\t     * (1) In `merge option` mode, if using the same option to call `setOption`\\n\\t     * many times, the result should be the same (try our best to ensure that).\\n\\t     * (2) In `merge option` mode, if a component has no id/name specified, it\\n\\t     * will be merged by index, and the result sequence of the components is\\n\\t     * consistent to the original sequence.\\n\\t     * (3) `reset` feature (in toolbox). Find detailed info in comments about\\n\\t     * `mergeOption` in module:echarts/model/OptionManager.\\n\\t     */\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var modelUtil = __webpack_require__(5);\\n\\t    var Model = __webpack_require__(12);\\n\\t    var each = zrUtil.each;\\n\\t    var filter = zrUtil.filter;\\n\\t    var map = zrUtil.map;\\n\\t    var isArray = zrUtil.isArray;\\n\\t    var indexOf = zrUtil.indexOf;\\n\\t    var isObject = zrUtil.isObject;\\n\\n\\t    var ComponentModel = __webpack_require__(69);\\n\\n\\t    var globalDefault = __webpack_require__(73);\\n\\n\\t    var OPTION_INNER_KEY = '\\\\0_ec_inner';\\n\\n\\t    /**\\n\\t     * @alias module:echarts/model/Global\\n\\t     *\\n\\t     * @param {Object} option\\n\\t     * @param {module:echarts/model/Model} parentModel\\n\\t     * @param {Object} theme\\n\\t     */\\n\\t    var GlobalModel = Model.extend({\\n\\n\\t        constructor: GlobalModel,\\n\\n\\t        init: function (option, parentModel, theme, optionManager) {\\n\\t            theme = theme || {};\\n\\n\\t            this.option = null; // Mark as not initialized.\\n\\n\\t            /**\\n\\t             * @type {module:echarts/model/Model}\\n\\t             * @private\\n\\t             */\\n\\t            this._theme = new Model(theme);\\n\\n\\t            /**\\n\\t             * @type {module:echarts/model/OptionManager}\\n\\t             */\\n\\t            this._optionManager = optionManager;\\n\\t        },\\n\\n\\t        setOption: function (option, optionPreprocessorFuncs) {\\n\\t            zrUtil.assert(\\n\\t                !(OPTION_INNER_KEY in option),\\n\\t                'please use chart.getOption()'\\n\\t            );\\n\\n\\t            this._optionManager.setOption(option, optionPreprocessorFuncs);\\n\\n\\t            this.resetOption(null);\\n\\t        },\\n\\n\\t        /**\\n\\t         * @param {string} type null/undefined: reset all.\\n\\t         *                      'recreate': force recreate all.\\n\\t         *                      'timeline': only reset timeline option\\n\\t         *                      'media': only reset media query option\\n\\t         * @return {boolean} Whether option changed.\\n\\t         */\\n\\t        resetOption: function (type) {\\n\\t            var optionChanged = false;\\n\\t            var optionManager = this._optionManager;\\n\\n\\t            if (!type || type === 'recreate') {\\n\\t                var baseOption = optionManager.mountOption(type === 'recreate');\\n\\n\\t                if (!this.option || type === 'recreate') {\\n\\t                    initBase.call(this, baseOption);\\n\\t                }\\n\\t                else {\\n\\t                    this.restoreData();\\n\\t                    this.mergeOption(baseOption);\\n\\t                }\\n\\t                optionChanged = true;\\n\\t            }\\n\\n\\t            if (type === 'timeline' || type === 'media') {\\n\\t                this.restoreData();\\n\\t            }\\n\\n\\t            if (!type || type === 'recreate' || type === 'timeline') {\\n\\t                var timelineOption = optionManager.getTimelineOption(this);\\n\\t                timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\\n\\t            }\\n\\n\\t            if (!type || type === 'recreate' || type === 'media') {\\n\\t                var mediaOptions = optionManager.getMediaOption(this, this._api);\\n\\t                if (mediaOptions.length) {\\n\\t                    each(mediaOptions, function (mediaOption) {\\n\\t                        this.mergeOption(mediaOption, optionChanged = true);\\n\\t                    }, this);\\n\\t                }\\n\\t            }\\n\\n\\t            return optionChanged;\\n\\t        },\\n\\n\\t        /**\\n\\t         * @protected\\n\\t         */\\n\\t        mergeOption: function (newOption) {\\n\\t            var option = this.option;\\n\\t            var componentsMap = this._componentsMap;\\n\\t            var newCptTypes = [];\\n\\n\\t            // 如果不存在对应的 component model 则直接 merge\\n\\t            each(newOption, function (componentOption, mainType) {\\n\\t                if (componentOption == null) {\\n\\t                    return;\\n\\t                }\\n\\n\\t                if (!ComponentModel.hasClass(mainType)) {\\n\\t                    option[mainType] = option[mainType] == null\\n\\t                        ? zrUtil.clone(componentOption)\\n\\t                        : zrUtil.merge(option[mainType], componentOption, true);\\n\\t                }\\n\\t                else {\\n\\t                    newCptTypes.push(mainType);\\n\\t                }\\n\\t            });\\n\\n\\t            // FIXME OPTION 同步是否要改回原来的\\n\\t            ComponentModel.topologicalTravel(\\n\\t                newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this\\n\\t            );\\n\\n\\t            this._seriesIndices = this._seriesIndices || [];\\n\\n\\t            function visitComponent(mainType, dependencies) {\\n\\t                var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\\n\\n\\t                var mapResult = modelUtil.mappingToExists(\\n\\t                    componentsMap.get(mainType), newCptOptionList\\n\\t                );\\n\\n\\t                modelUtil.makeIdAndName(mapResult);\\n\\n\\t                // Set mainType and complete subType.\\n\\t                each(mapResult, function (item, index) {\\n\\t                    var opt = item.option;\\n\\t                    if (isObject(opt)) {\\n\\t                        item.keyInfo.mainType = mainType;\\n\\t                        item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\\n\\t                    }\\n\\t                });\\n\\n\\t                var dependentModels = getComponentsByTypes(\\n\\t                    componentsMap, dependencies\\n\\t                );\\n\\n\\t                option[mainType] = [];\\n\\t                componentsMap.set(mainType, []);\\n\\n\\t                each(mapResult, function (resultItem, index) {\\n\\t                    var componentModel = resultItem.exist;\\n\\t                    var newCptOption = resultItem.option;\\n\\n\\t                    zrUtil.assert(\\n\\t                        isObject(newCptOption) || componentModel,\\n\\t                        'Empty component definition'\\n\\t                    );\\n\\n\\t                    // Consider where is no new option and should be merged using {},\\n\\t                    // see removeEdgeAndAdd in topologicalTravel and\\n\\t                    // ComponentModel.getAllClassMainTypes.\\n\\t                    if (!newCptOption) {\\n\\t                        componentModel.mergeOption({}, this);\\n\\t                        componentModel.optionUpdated({}, false);\\n\\t                    }\\n\\t                    else {\\n\\t                        var ComponentModelClass = ComponentModel.getClass(\\n\\t                            mainType, resultItem.keyInfo.subType, true\\n\\t                        );\\n\\n\\t                        if (componentModel && componentModel instanceof ComponentModelClass) {\\n\\t                            componentModel.name = resultItem.keyInfo.name;\\n\\t                            componentModel.mergeOption(newCptOption, this);\\n\\t                            componentModel.optionUpdated(newCptOption, false);\\n\\t                        }\\n\\t                        else {\\n\\t                            // PENDING Global as parent ?\\n\\t                            var extraOpt = zrUtil.extend(\\n\\t                                {\\n\\t                                    dependentModels: dependentModels,\\n\\t                                    componentIndex: index\\n\\t                                },\\n\\t                                resultItem.keyInfo\\n\\t                            );\\n\\t                            componentModel = new ComponentModelClass(\\n\\t                                newCptOption, this, this, extraOpt\\n\\t                            );\\n\\t                            zrUtil.extend(componentModel, extraOpt);\\n\\t                            componentModel.init(newCptOption, this, this, extraOpt);\\n\\t                            // Call optionUpdated after init.\\n\\t                            // newCptOption has been used as componentModel.option\\n\\t                            // and may be merged with theme and default, so pass null\\n\\t                            // to avoid confusion.\\n\\t                            componentModel.optionUpdated(null, true);\\n\\t                        }\\n\\t                    }\\n\\n\\t                    componentsMap.get(mainType)[index] = componentModel;\\n\\t                    option[mainType][index] = componentModel.option;\\n\\t                }, this);\\n\\n\\t                // Backup series for filtering.\\n\\t                if (mainType === 'series') {\\n\\t                    this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\\n\\t                }\\n\\t            }\\n\\t        },\\n\\n\\t        /**\\n\\t         * Get option for output (cloned option and inner info removed)\\n\\t         * @public\\n\\t         * @return {Object}\\n\\t         */\\n\\t        getOption: function () {\\n\\t            var option = zrUtil.clone(this.option);\\n\\n\\t            each(option, function (opts, mainType) {\\n\\t                if (ComponentModel.hasClass(mainType)) {\\n\\t                    var opts = modelUtil.normalizeToArray(opts);\\n\\t                    for (var i = opts.length - 1; i >= 0; i--) {\\n\\t                        // Remove options with inner id.\\n\\t                        if (modelUtil.isIdInner(opts[i])) {\\n\\t                            opts.splice(i, 1);\\n\\t                        }\\n\\t                    }\\n\\t                    option[mainType] = opts;\\n\\t                }\\n\\t            });\\n\\n\\t            delete option[OPTION_INNER_KEY];\\n\\n\\t            return option;\\n\\t        },\\n\\n\\t        /**\\n\\t         * @return {module:echarts/model/Model}\\n\\t         */\\n\\t        getTheme: function () {\\n\\t            return this._theme;\\n\\t        },\\n\\n\\t        /**\\n\\t         * @param {string} mainType\\n\\t         * @param {number} [idx=0]\\n\\t         * @return {module:echarts/model/Component}\\n\\t         */\\n\\t        getComponent: function (mainType, idx) {\\n\\t            var list = this._componentsMap.get(mainType);\\n\\t            if (list) {\\n\\t                return list[idx || 0];\\n\\t            }\\n\\t        },\\n\\n\\t        /**\\n\\t         * If none of index and id and name used, return all components with mainType.\\n\\t         * @param {Object} condition\\n\\t         * @param {string} condition.mainType\\n\\t         * @param {string} [condition.subType] If ignore, only query by mainType\\n\\t         * @param {number|Array.<number>} [condition.index] Either input index or id or name.\\n\\t         * @param {string|Array.<string>} [condition.id] Either input index or id or name.\\n\\t         * @param {string|Array.<string>} [condition.name] Either input index or id or name.\\n\\t         * @return {Array.<module:echarts/model/Component>}\\n\\t         */\\n\\t        queryComponents: function (condition) {\\n\\t            var mainType = condition.mainType;\\n\\t            if (!mainType) {\\n\\t                return [];\\n\\t            }\\n\\n\\t            var index = condition.index;\\n\\t            var id = condition.id;\\n\\t            var name = condition.name;\\n\\n\\t            var cpts = this._componentsMap.get(mainType);\\n\\n\\t            if (!cpts || !cpts.length) {\\n\\t                return [];\\n\\t            }\\n\\n\\t            var result;\\n\\n\\t            if (index != null) {\\n\\t                if (!isArray(index)) {\\n\\t                    index = [index];\\n\\t                }\\n\\t                result = filter(map(index, function (idx) {\\n\\t                    return cpts[idx];\\n\\t                }), function (val) {\\n\\t                    return !!val;\\n\\t                });\\n\\t            }\\n\\t            else if (id != null) {\\n\\t                var isIdArray = isArray(id);\\n\\t                result = filter(cpts, function (cpt) {\\n\\t                    return (isIdArray && indexOf(id, cpt.id) >= 0)\\n\\t                        || (!isIdArray && cpt.id === id);\\n\\t                });\\n\\t            }\\n\\t            else if (name != null) {\\n\\t                var isNameArray = isArray(name);\\n\\t                result = filter(cpts, function (cpt) {\\n\\t                    return (isNameArray && indexOf(name, cpt.name) >= 0)\\n\\t                        || (!isNameArray && cpt.name === name);\\n\\t                });\\n\\t            }\\n\\t            else {\\n\\t                // Return all components with mainType\\n\\t                result = cpts.slice();\\n\\t            }\\n\\n\\t            return filterBySubType(result, condition);\\n\\t        },\\n\\n\\t        /**\\n\\t         * The interface is different from queryComponents,\\n\\t         * which is convenient for inner usage.\\n\\t         *\\n\\t         * @usage\\n\\t         * var result = findComponents(\\n\\t         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\\n\\t         * );\\n\\t         * var result = findComponents(\\n\\t         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\\n\\t         * );\\n\\t         * var result = findComponents(\\n\\t         *     {mainType: 'series'},\\n\\t         *     function (model, index) {...}\\n\\t         * );\\n\\t         * // result like [component0, componnet1, ...]\\n\\t         *\\n\\t         * @param {Object} condition\\n\\t         * @param {string} condition.mainType Mandatory.\\n\\t         * @param {string} [condition.subType] Optional.\\n\\t         * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\\n\\t         *        where xxx is mainType.\\n\\t         *        If query attribute is null/undefined or has no index/id/name,\\n\\t         *        do not filtering by query conditions, which is convenient for\\n\\t         *        no-payload situations or when target of action is global.\\n\\t         * @param {Function} [condition.filter] parameter: component, return boolean.\\n\\t         * @return {Array.<module:echarts/model/Component>}\\n\\t         */\\n\\t        findComponents: function (condition) {\\n\\t            var query = condition.query;\\n\\t            var mainType = condition.mainType;\\n\\n\\t            var queryCond = getQueryCond(query);\\n\\t            var result = queryCond\\n\\t                ? this.queryComponents(queryCond)\\n\\t                : this._componentsMap.get(mainType);\\n\\n\\t            return doFilter(filterBySubType(result, condition));\\n\\n\\t            function getQueryCond(q) {\\n\\t                var indexAttr = mainType + 'Index';\\n\\t                var idAttr = mainType + 'Id';\\n\\t                var nameAttr = mainType + 'Name';\\n\\t                return q && (\\n\\t                        q[indexAttr] != null\\n\\t                        || q[idAttr] != null\\n\\t                        || q[nameAttr] != null\\n\\t                    )\\n\\t                    ? {\\n\\t                        mainType: mainType,\\n\\t                        // subType will be filtered finally.\\n\\t                        index: q[indexAttr],\\n\\t                        id: q[idAttr],\\n\\t                        name: q[nameAttr]\\n\\t                    }\\n\\t                    : null;\\n\\t            }\\n\\n\\t            function doFilter(res) {\\n\\t                return condition.filter\\n\\t                     ? filter(res, condition.filter)\\n\\t                     : res;\\n\\t            }\\n\\t        },\\n\\n\\t        /**\\n\\t         * @usage\\n\\t         * eachComponent('legend', function (legendModel, index) {\\n\\t         *     ...\\n\\t         * });\\n\\t         * eachComponent(function (componentType, model, index) {\\n\\t         *     // componentType does not include subType\\n\\t         *     // (componentType is 'xxx' but not 'xxx.aa')\\n\\t         * });\\n\\t         * eachComponent(\\n\\t         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\\n\\t         *     function (model, index) {...}\\n\\t         * );\\n\\t         * eachComponent(\\n\\t         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\\n\\t         *     function (model, index) {...}\\n\\t         * );\\n\\t         *\\n\\t         * @param {string|Object=} mainType When mainType is object, the definition\\n\\t         *                                  is the same as the method 'findComponents'.\\n\\t         * @param {Function} cb\\n\\t         * @param {*} context\\n\\t         */\\n\\t        eachComponent: function (mainType, cb, context) {\\n\\t            var componentsMap = this._componentsMap;\\n\\n\\t            if (typeof mainType === 'function') {\\n\\t                context = cb;\\n\\t                cb = mainType;\\n\\t                componentsMap.each(function (components, componentType) {\\n\\t                    each(components, function (component, index) {\\n\\t                        cb.call(context, componentType, component, index);\\n\\t                    });\\n\\t                });\\n\\t            }\\n\\t            else if (zrUtil.isString(mainType)) {\\n\\t                each(componentsMap.get(mainType), cb, context);\\n\\t            }\\n\\t            else if (isObject(mainType)) {\\n\\t                var queryResult = this.findComponents(mainType);\\n\\t                each(queryResult, cb, context);\\n\\t            }\\n\\t        },\\n\\n\\t        /**\\n\\t         * @param {string} name\\n\\t         * @return {Array.<module:echarts/model/Series>}\\n\\t         */\\n\\t        getSeriesByName: function (name) {\\n\\t            var series = this._componentsMap.get('series');\\n\\t            return filter(series, function (oneSeries) {\\n\\t                return oneSeries.name === name;\\n\\t            });\\n\\t        },\\n\\n\\t        /**\\n\\t         * @param {number} seriesIndex\\n\\t         * @return {module:echarts/model/Series}\\n\\t         */\\n\\t        getSeriesByIndex: function (seriesIndex) {\\n\\t            return this._componentsMap.get('series')[seriesIndex];\\n\\t        },\\n\\n\\t        /**\\n\\t         * @param {string} subType\\n\\t         * @return {Array.<module:echarts/model/Series>}\\n\\t         */\\n\\t        getSeriesByType: function (subType) {\\n\\t            var series = this._componentsMap.get('series');\\n\\t            return filter(series, function (oneSeries) {\\n\\t                return oneSeries.subType === subType;\\n\\t            });\\n\\t        },\\n\\n\\t        /**\\n\\t         * @return {Array.<module:echarts/model/Series>}\\n\\t         */\\n\\t        getSeries: function () {\\n\\t            return this._componentsMap.get('series').slice();\\n\\t        },\\n\\n\\t        /**\\n\\t         * After filtering, series may be different\\n\\t         * frome raw series.\\n\\t         *\\n\\t         * @param {Function} cb\\n\\t         * @param {*} context\\n\\t         */\\n\\t        eachSeries: function (cb, context) {\\n\\t            assertSeriesInitialized(this);\\n\\t            each(this._seriesIndices, function (rawSeriesIndex) {\\n\\t                var series = this._componentsMap.get('series')[rawSeriesIndex];\\n\\t                cb.call(context, series, rawSeriesIndex);\\n\\t            }, this);\\n\\t        },\\n\\n\\t        /**\\n\\t         * Iterate raw series before filtered.\\n\\t         *\\n\\t         * @param {Function} cb\\n\\t         * @param {*} context\\n\\t         */\\n\\t        eachRawSeries: function (cb, context) {\\n\\t            each(this._componentsMap.get('series'), cb, context);\\n\\t        },\\n\\n\\t        /**\\n\\t         * After filtering, series may be different.\\n\\t         * frome raw series.\\n\\t         *\\n\\t         * @parma {string} subType\\n\\t         * @param {Function} cb\\n\\t         * @param {*} context\\n\\t         */\\n\\t        eachSeriesByType: function (subType, cb, context) {\\n\\t            assertSeriesInitialized(this);\\n\\t            each(this._seriesIndices, function (rawSeriesIndex) {\\n\\t                var series = this._componentsMap.get('series')[rawSeriesIndex];\\n\\t                if (series.subType === subType) {\\n\\t                    cb.call(context, series, rawSeriesIndex);\\n\\t                }\\n\\t            }, this);\\n\\t        },\\n\\n\\t        /**\\n\\t         * Iterate raw series before filtered of given type.\\n\\t         *\\n\\t         * @parma {string} subType\\n\\t         * @param {Function} cb\\n\\t         * @param {*} context\\n\\t         */\\n\\t        eachRawSeriesByType: function (subType, cb, context) {\\n\\t            return each(this.getSeriesByType(subType), cb, context);\\n\\t        },\\n\\n\\t        /**\\n\\t         * @param {module:echarts/model/Series} seriesModel\\n\\t         */\\n\\t        isSeriesFiltered: function (seriesModel) {\\n\\t            assertSeriesInitialized(this);\\n\\t            return zrUtil.indexOf(this._seriesIndices, seriesModel.componentIndex) < 0;\\n\\t        },\\n\\n\\t        /**\\n\\t         * @return {Array.<number>}\\n\\t         */\\n\\t        getCurrentSeriesIndices: function () {\\n\\t            return (this._seriesIndices || []).slice();\\n\\t        },\\n\\n\\t        /**\\n\\t         * @param {Function} cb\\n\\t         * @param {*} context\\n\\t         */\\n\\t        filterSeries: function (cb, context) {\\n\\t            assertSeriesInitialized(this);\\n\\t            var filteredSeries = filter(\\n\\t                this._componentsMap.get('series'), cb, context\\n\\t            );\\n\\t            this._seriesIndices = createSeriesIndices(filteredSeries);\\n\\t        },\\n\\n\\t        restoreData: function () {\\n\\t            var componentsMap = this._componentsMap;\\n\\n\\t            this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\\n\\n\\t            var componentTypes = [];\\n\\t            componentsMap.each(function (components, componentType) {\\n\\t                componentTypes.push(componentType);\\n\\t            });\\n\\n\\t            ComponentModel.topologicalTravel(\\n\\t                componentTypes,\\n\\t                ComponentModel.getAllClassMainTypes(),\\n\\t                function (componentType, dependencies) {\\n\\t                    each(componentsMap.get(componentType), function (component) {\\n\\t                        component.restoreData();\\n\\t                    });\\n\\t                }\\n\\t            );\\n\\t        }\\n\\n\\t    });\\n\\n\\t    /**\\n\\t     * @inner\\n\\t     */\\n\\t    function mergeTheme(option, theme) {\\n\\t        zrUtil.each(theme, function (themeItem, name) {\\n\\t            // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\\n\\t            if (!ComponentModel.hasClass(name)) {\\n\\t                if (typeof themeItem === 'object') {\\n\\t                    option[name] = !option[name]\\n\\t                        ? zrUtil.clone(themeItem)\\n\\t                        : zrUtil.merge(option[name], themeItem, false);\\n\\t                }\\n\\t                else {\\n\\t                    if (option[name] == null) {\\n\\t                        option[name] = themeItem;\\n\\t                    }\\n\\t                }\\n\\t            }\\n\\t        });\\n\\t    }\\n\\n\\t    function initBase(baseOption) {\\n\\t        baseOption = baseOption;\\n\\n\\t        // Using OPTION_INNER_KEY to mark that this option can not be used outside,\\n\\t        // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\\n\\t        this.option = {};\\n\\t        this.option[OPTION_INNER_KEY] = 1;\\n\\n\\t        /**\\n\\t         * Init with series: [], in case of calling findSeries method\\n\\t         * before series initialized.\\n\\t         * @type {Object.<string, Array.<module:echarts/model/Model>>}\\n\\t         * @private\\n\\t         */\\n\\t        this._componentsMap = zrUtil.createHashMap({series: []});\\n\\n\\t        /**\\n\\t         * Mapping between filtered series list and raw series list.\\n\\t         * key: filtered series indices, value: raw series indices.\\n\\t         * @type {Array.<nubmer>}\\n\\t         * @private\\n\\t         */\\n\\t        this._seriesIndices = null;\\n\\n\\t        mergeTheme(baseOption, this._theme.option);\\n\\n\\t        // TODO Needs clone when merging to the unexisted property\\n\\t        zrUtil.merge(baseOption, globalDefault, false);\\n\\n\\t        this.mergeOption(baseOption);\\n\\t    }\\n\\n\\t    /**\\n\\t     * @inner\\n\\t     * @param {Array.<string>|string} types model types\\n\\t     * @return {Object} key: {string} type, value: {Array.<Object>} models\\n\\t     */\\n\\t    function getComponentsByTypes(componentsMap, types) {\\n\\t        if (!zrUtil.isArray(types)) {\\n\\t            types = types ? [types] : [];\\n\\t        }\\n\\n\\t        var ret = {};\\n\\t        each(types, function (type) {\\n\\t            ret[type] = (componentsMap.get(type) || []).slice();\\n\\t        });\\n\\n\\t        return ret;\\n\\t    }\\n\\n\\t    /**\\n\\t     * @inner\\n\\t     */\\n\\t    function determineSubType(mainType, newCptOption, existComponent) {\\n\\t        var subType = newCptOption.type\\n\\t            ? newCptOption.type\\n\\t            : existComponent\\n\\t            ? existComponent.subType\\n\\t            // Use determineSubType only when there is no existComponent.\\n\\t            : ComponentModel.determineSubType(mainType, newCptOption);\\n\\n\\t        // tooltip, markline, markpoint may always has no subType\\n\\t        return subType;\\n\\t    }\\n\\n\\t    /**\\n\\t     * @inner\\n\\t     */\\n\\t    function createSeriesIndices(seriesModels) {\\n\\t        return map(seriesModels, function (series) {\\n\\t            return series.componentIndex;\\n\\t        }) || [];\\n\\t    }\\n\\n\\t    /**\\n\\t     * @inner\\n\\t     */\\n\\t    function filterBySubType(components, condition) {\\n\\t        // Using hasOwnProperty for restrict. Consider\\n\\t        // subType is undefined in user payload.\\n\\t        return condition.hasOwnProperty('subType')\\n\\t            ? filter(components, function (cpt) {\\n\\t                return cpt.subType === condition.subType;\\n\\t            })\\n\\t            : components;\\n\\t    }\\n\\n\\t    /**\\n\\t     * @inner\\n\\t     */\\n\\t    function assertSeriesInitialized(ecModel) {\\n\\t        // Components that use _seriesIndices should depends on series component,\\n\\t        // which make sure that their initialization is after series.\\n\\t        if (true) {\\n\\t            if (!ecModel._seriesIndices) {\\n\\t                throw new Error('Option should contains series.');\\n\\t            }\\n\\t        }\\n\\t    }\\n\\n\\t    zrUtil.mixin(GlobalModel, __webpack_require__(74));\\n\\n\\t    module.exports = GlobalModel;\\n\\n\\n/***/ },\\n/* 4 */\\n/***/ function(module, exports) {\\n\\n\\t/**\\n\\t * @module zrender/core/util\\n\\t */\\n\\n\\n\\t    // 用于处理merge时无法遍历Date等对象的问题\\n\\t    var BUILTIN_OBJECT = {\\n\\t        '[object Function]': 1,\\n\\t        '[object RegExp]': 1,\\n\\t        '[object Date]': 1,\\n\\t        '[object Error]': 1,\\n\\t        '[object CanvasGradient]': 1,\\n\\t        '[object CanvasPattern]': 1,\\n\\t        // For node-canvas\\n\\t        '[object Image]': 1,\\n\\t        '[object Canvas]': 1\\n\\t    };\\n\\n\\t    var TYPED_ARRAY = {\\n\\t        '[object Int8Array]': 1,\\n\\t        '[object Uint8Array]': 1,\\n\\t        '[object Uint8ClampedArray]': 1,\\n\\t        '[object Int16Array]': 1,\\n\\t        '[object Uint16Array]': 1,\\n\\t        '[object Int32Array]': 1,\\n\\t        '[object Uint32Array]': 1,\\n\\t        '[object Float32Array]': 1,\\n\\t        '[object Float64Array]': 1\\n\\t    };\\n\\n\\t    var objToString = Object.prototype.toString;\\n\\n\\t    var arrayProto = Array.prototype;\\n\\t    var nativeForEach = arrayProto.forEach;\\n\\t    var nativeFilter = arrayProto.filter;\\n\\t    var nativeSlice = arrayProto.slice;\\n\\t    var nativeMap = arrayProto.map;\\n\\t    var nativeReduce = arrayProto.reduce;\\n\\n\\t    /**\\n\\t     * Those data types can be cloned:\\n\\t     *     Plain object, Array, TypedArray, number, string, null, undefined.\\n\\t     * Those data types will be assgined using the orginal data:\\n\\t     *     BUILTIN_OBJECT\\n\\t     * Instance of user defined class will be cloned to a plain object, without\\n\\t     * properties in prototype.\\n\\t     * Other data types is not supported (not sure what will happen).\\n\\t     *\\n\\t     * Caution: do not support clone Date, for performance consideration.\\n\\t     * (There might be a large number of date in `series.data`).\\n\\t     * So date should not be modified in and out of echarts.\\n\\t     *\\n\\t     * @param {*} source\\n\\t     * @return {*} new\\n\\t     */\\n\\t    function clone(source) {\\n\\t        if (source == null || typeof source != 'object') {\\n\\t            return source;\\n\\t        }\\n\\n\\t        var result = source;\\n\\t        var typeStr = objToString.call(source);\\n\\n\\t        if (typeStr === '[object Array]') {\\n\\t            result = [];\\n\\t            for (var i = 0, len = source.length; i < len; i++) {\\n\\t                result[i] = clone(source[i]);\\n\\t            }\\n\\t        }\\n\\t        else if (TYPED_ARRAY[typeStr]) {\\n\\t            result = source.constructor.from(source);\\n\\t        }\\n\\t        else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {\\n\\t            result = {};\\n\\t            for (var key in source) {\\n\\t                if (source.hasOwnProperty(key)) {\\n\\t                    result[key] = clone(source[key]);\\n\\t                }\\n\\t            }\\n\\t        }\\n\\n\\t        return result;\\n\\t    }\\n\\n\\t    /**\\n\\t     * @memberOf module:zrender/core/util\\n\\t     * @param {*} target\\n\\t     * @param {*} source\\n\\t     * @param {boolean} [overwrite=false]\\n\\t     */\\n\\t    function merge(target, source, overwrite) {\\n\\t        // We should escapse that source is string\\n\\t        // and enter for ... in ...\\n\\t        if (!isObject(source) || !isObject(target)) {\\n\\t            return overwrite ? clone(source) : target;\\n\\t        }\\n\\n\\t        for (var key in source) {\\n\\t            if (source.hasOwnProperty(key)) {\\n\\t                var targetProp = target[key];\\n\\t                var sourceProp = source[key];\\n\\n\\t                if (isObject(sourceProp)\\n\\t                    && isObject(targetProp)\\n\\t                    && !isArray(sourceProp)\\n\\t                    && !isArray(targetProp)\\n\\t                    && !isDom(sourceProp)\\n\\t                    && !isDom(targetProp)\\n\\t                    && !isBuiltInObject(sourceProp)\\n\\t                    && !isBuiltInObject(targetProp)\\n\\t                    && !isPrimitive(sourceProp)\\n\\t                    && !isPrimitive(targetProp)\\n\\t                ) {\\n\\t                    // 如果需要递归覆盖，就递归调用merge\\n\\t                    merge(targetProp, sourceProp, overwrite);\\n\\t                }\\n\\t                else if (overwrite || !(key in target)) {\\n\\t                    // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\\n\\t                    // NOTE，在 target[key] 不存在的时候也是直接覆盖\\n\\t                    target[key] = clone(source[key], true);\\n\\t                }\\n\\t            }\\n\\t        }\\n\\n\\t        return target;\\n\\t    }\\n\\n\\t    /**\\n\\t     * @param {Array} targetAndSources The first item is target, and the rests are source.\\n\\t     * @param {boolean} [overwrite=false]\\n\\t     * @return {*} target\\n\\t     */\\n\\t    function mergeAll(targetAndSources, overwrite) {\\n\\t        var result = targetAndSources[0];\\n\\t        for (var i = 1, len = targetAndSources.length; i < len; i++) {\\n\\t            result = merge(result, targetAndSources[i], overwrite);\\n\\t        }\\n\\t        return result;\\n\\t    }\\n\\n\\t    /**\\n\\t     * @param {*} target\\n\\t     * @param {*} source\\n\\t     * @memberOf module:zrender/core/util\\n\\t     */\\n\\t    function extend(target, source) {\\n\\t        for (var key in source) {\\n\\t            if (source.hasOwnProperty(key)) {\\n\\t                target[key] = source[key];\\n\\t            }\\n\\t        }\\n\\t        return target;\\n\\t    }\\n\\n\\t    /**\\n\\t     * @param {*} target\\n\\t     * @param {*} source\\n\\t     * @param {boolen} [overlay=false]\\n\\t     * @memberOf module:zrender/core/util\\n\\t     */\\n\\t    function defaults(target, source, overlay) {\\n\\t        for (var key in source) {\\n\\t            if (source.hasOwnProperty(key)\\n\\t                && (overlay ? source[key] != null : target[key] == null)\\n\\t            ) {\\n\\t                target[key] = source[key];\\n\\t            }\\n\\t        }\\n\\t        return target;\\n\\t    }\\n\\n\\t    function createCanvas() {\\n\\t        return document.createElement('canvas');\\n\\t    }\\n\\t    // FIXME\\n\\t    var _ctx;\\n\\t    function getContext() {\\n\\t        if (!_ctx) {\\n\\t            // Use util.createCanvas instead of createCanvas\\n\\t            // because createCanvas may be overwritten in different environment\\n\\t            _ctx = util.createCanvas().getContext('2d');\\n\\t        }\\n\\t        return _ctx;\\n\\t    }\\n\\n\\t    /**\\n\\t     * 查询数组中元素的index\\n\\t     * @memberOf module:zrender/core/util\\n\\t     */\\n\\t    function indexOf(array, value) {\\n\\t        if (array) {\\n\\t            if (array.indexOf) {\\n\\t                return array.indexOf(value);\\n\\t            }\\n\\t            for (var i = 0, len = array.length; i < len; i++) {\\n\\t                if (array[i] === value) {\\n\\t                    return i;\\n\\t                }\\n\\t            }\\n\\t        }\\n\\t        return -1;\\n\\t    }\\n\\n\\t    /**\\n\\t     * 构造类继承关系\\n\\t     *\\n\\t     * @memberOf module:zrender/core/util\\n\\t     * @param {Function} clazz 源类\\n\\t     * @param {Function} baseClazz 基类\\n\\t     */\\n\\t    function inherits(clazz, baseClazz) {\\n\\t        var clazzPrototype = clazz.prototype;\\n\\t        function F() {}\\n\\t        F.prototype = baseClazz.prototype;\\n\\t        clazz.prototype = new F();\\n\\n\\t        for (var prop in clazzPrototype) {\\n\\t            clazz.prototype[prop] = clazzPrototype[prop];\\n\\t        }\\n\\t        clazz.prototype.constructor = clazz;\\n\\t        clazz.superClass = baseClazz;\\n\\t    }\\n\\n\\t    /**\\n\\t     * @memberOf module:zrender/core/util\\n\\t     * @param {Object|Function} target\\n\\t     * @param {Object|Function} sorce\\n\\t     * @param {boolean} overlay\\n\\t     */\\n\\t    function mixin(target, source, overlay) {\\n\\t        target = 'prototype' in target ? target.prototype : target;\\n\\t        source = 'prototype' in source ? source.prototype : source;\\n\\n\\t        defaults(target, source, overlay);\\n\\t    }\\n\\n\\t    /**\\n\\t     * Consider typed array.\\n\\t     * @param {Array|TypedArray} data\\n\\t     */\\n\\t    function isArrayLike(data) {\\n\\t        if (! data) {\\n\\t            return;\\n\\t        }\\n\\t        if (typeof data == 'string') {\\n\\t            return false;\\n\\t        }\\n\\t        return typeof data.length == 'number';\\n\\t    }\\n\\n\\t    /**\\n\\t     * 数组或对象遍历\\n\\t     * @memberOf module:zrender/core/util\\n\\t     * @param {Object|Array} obj\\n\\t     * @param {Function} cb\\n\\t     * @param {*} [context]\\n\\t     */\\n\\t    function each(obj, cb, context) {\\n\\t        if (!(obj && cb)) {\\n\\t            return;\\n\\t        }\\n\\t        if (obj.forEach && obj.forEach === nativeForEach) {\\n\\t            obj.forEach(cb, context);\\n\\t        }\\n\\t        else if (obj.length === +obj.length) {\\n\\t            for (var i = 0, len = obj.length; i < len; i++) {\\n\\t                cb.call(context, obj[i], i, obj);\\n\\t            }\\n\\t        }\\n\\t        else {\\n\\t            for (var key in obj) {\\n\\t                if (obj.hasOwnProperty(key)) {\\n\\t                    cb.call(context, obj[key], key, obj);\\n\\t                }\\n\\t            }\\n\\t        }\\n\\t    }\\n\\n\\t    /**\\n\\t     * 数组映射\\n\\t     * @memberOf module:zrender/core/util\\n\\t     * @param {Array} obj\\n\\t     * @param {Function} cb\\n\\t     * @param {*} [context]\\n\\t     * @return {Array}\\n\\t     */\\n\\t    function map(obj, cb, context) {\\n\\t        if (!(obj && cb)) {\\n\\t            return;\\n\\t        }\\n\\t        if (obj.map && obj.map === nativeMap) {\\n\\t            return obj.map(cb, context);\\n\\t        }\\n\\t        else {\\n\\t            var result = [];\\n\\t            for (var i = 0, len = obj.length; i < len; i++) {\\n\\t                result.push(cb.call(context, obj[i], i, obj));\\n\\t            }\\n\\t            return result;\\n\\t        }\\n\\t    }\\n\\n\\t    /**\\n\\t     * @memberOf module:zrender/core/util\\n\\t     * @param {Array} obj\\n\\t     * @param {Function} cb\\n\\t     * @param {Object} [memo]\\n\\t     * @param {*} [context]\\n\\t     * @return {Array}\\n\\t     */\\n\\t    function reduce(obj, cb, memo, context) {\\n\\t        if (!(obj && cb)) {\\n\\t            return;\\n\\t        }\\n\\t        if (obj.reduce && obj.reduce === nativeReduce) {\\n\\t            return obj.reduce(cb, memo, context);\\n\\t        }\\n\\t        else {\\n\\t            for (var i = 0, len = obj.length; i < len; i++) {\\n\\t                memo = cb.call(context, memo, obj[i], i, obj);\\n\\t            }\\n\\t            return memo;\\n\\t        }\\n\\t    }\\n\\n\\t    /**\\n\\t     * 数组过滤\\n\\t     * @memberOf module:zrender/core/util\\n\\t     * @param {Array} obj\\n\\t     * @param {Function} cb\\n\\t     * @param {*} [context]\\n\\t     * @return {Array}\\n\\t     */\\n\\t    function filter(obj, cb, context) {\\n\\t        if (!(obj && cb)) {\\n\\t            return;\\n\\t        }\\n\\t        if (obj.filter && obj.filter === nativeFilter) {\\n\\t            return obj.filter(cb, context);\\n\\t        }\\n\\t        else {\\n\\t            var result = [];\\n\\t            for (var i = 0, len = obj.length; i < len; i++) {\\n\\t                if (cb.call(context, obj[i], i, obj)) {\\n\\t                    result.push(obj[i]);\\n\\t                }\\n\\t            }\\n\\t            return result;\\n\\t        }\\n\\t    }\\n\\n\\t    /**\\n\\t     * 数组项查找\\n\\t     * @memberOf module:zrender/core/util\\n\\t     * @param {Array} obj\\n\\t     * @param {Function} cb\\n\\t     * @param {*} [context]\\n\\t     * @return {Array}\\n\\t     */\\n\\t    function find(obj, cb, context) {\\n\\t        if (!(obj && cb)) {\\n\\t            return;\\n\\t        }\\n\\t        for (var i = 0, len = obj.length; i < len; i++) {\\n\\t            if (cb.call(context, obj[i], i, obj)) {\\n\\t                return obj[i];\\n\\t            }\\n\\t        }\\n\\t    }\\n\\n\\t    /**\\n\\t     * @memberOf module:zrender/core/util\\n\\t     * @param {Function} func\\n\\t     * @param {*} context\\n\\t     * @return {Function}\\n\\t     */\\n\\t    function bind(func, context) {\\n\\t        var args = nativeSlice.call(arguments, 2);\\n\\t        return function () {\\n\\t            return func.apply(context, args.concat(nativeSlice.call(arguments)));\\n\\t        };\\n\\t    }\\n\\n\\t    /**\\n\\t     * @memberOf module:zrender/core/util\\n\\t     * @param {Function} func\\n\\t     * @return {Function}\\n\\t     */\\n\\t    function curry(func) {\\n\\t        var args = nativeSlice.call(arguments, 1);\\n\\t        return function () {\\n\\t            return func.apply(this, args.concat(nativeSlice.call(arguments)));\\n\\t        };\\n\\t    }\\n\\n\\t    /**\\n\\t     * @memberOf module:zrender/core/util\\n\\t     * @param {*} value\\n\\t     * @return {boolean}\\n\\t     */\\n\\t    function isArray(value) {\\n\\t        return objToString.call(value) === '[object Array]';\\n\\t    }\\n\\n\\t    /**\\n\\t     * @memberOf module:zrender/core/util\\n\\t     * @param {*} value\\n\\t     * @return {boolean}\\n\\t     */\\n\\t    function isFunction(value) {\\n\\t        return typeof value === 'function';\\n\\t    }\\n\\n\\t    /**\\n\\t     * @memberOf module:zrender/core/util\\n\\t     * @param {*} value\\n\\t     * @return {boolean}\\n\\t     */\\n\\t    function isString(value) {\\n\\t        return objToString.call(value) === '[object String]';\\n\\t    }\\n\\n\\t    /**\\n\\t     * @memberOf module:zrender/core/util\\n\\t     * @param {*} value\\n\\t     * @return {boolean}\\n\\t     */\\n\\t    function isObject(value) {\\n\\t        // Avoid a V8 JIT bug in Chrome 19-20.\\n\\t        // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\\n\\t        var type = typeof value;\\n\\t        return type === 'function' || (!!value && type == 'object');\\n\\t    }\\n\\n\\t    /**\\n\\t     * @memberOf module:zrender/core/util\\n\\t     * @param {*} value\\n\\t     * @return {boolean}\\n\\t     */\\n\\t    function isBuiltInObject(value) {\\n\\t        return !!BUILTIN_OBJECT[objToString.call(value)];\\n\\t    }\\n\\n\\t    /**\\n\\t     * @memberOf module:zrender/core/util\\n\\t     * @param {*} value\\n\\t     * @return {boolean}\\n\\t     */\\n\\t    function isDom(value) {\\n\\t        return typeof value === 'object'\\n\\t            && typeof value.nodeType === 'number'\\n\\t            && typeof value.ownerDocument === 'object';\\n\\t    }\\n\\n\\t    /**\\n\\t     * Whether is exactly NaN. Notice isNaN('a') returns true.\\n\\t     * @param {*} value\\n\\t     * @return {boolean}\\n\\t     */\\n\\t    function eqNaN(value) {\\n\\t        return value !== value;\\n\\t    }\\n\\n\\t    /**\\n\\t     * If value1 is not null, then return value1, otherwise judget rest of values.\\n\\t     * @memberOf module:zrender/core/util\\n\\t     * @return {*} Final value\\n\\t     */\\n\\t    function retrieve(values) {\\n\\t        for (var i = 0, len = arguments.length; i < len; i++) {\\n\\t            if (arguments[i] != null) {\\n\\t                return arguments[i];\\n\\t            }\\n\\t        }\\n\\t    }\\n\\n\\t    /**\\n\\t     * @memberOf module:zrender/core/util\\n\\t     * @param {Array} arr\\n\\t     * @param {number} startIndex\\n\\t     * @param {number} endIndex\\n\\t     * @return {Array}\\n\\t     */\\n\\t    function slice() {\\n\\t        return Function.call.apply(nativeSlice, arguments);\\n\\t    }\\n\\n\\t    /**\\n\\t     * @memberOf module:zrender/core/util\\n\\t     * @param {boolean} condition\\n\\t     * @param {string} message\\n\\t     */\\n\\t    function assert(condition, message) {\\n\\t        if (!condition) {\\n\\t            throw new Error(message);\\n\\t        }\\n\\t    }\\n\\n\\t    var primitiveKey = '__ec_primitive__';\\n\\t    /**\\n\\t     * Set an object as primitive to be ignored traversing children in clone or merge\\n\\t     */\\n\\t    function setAsPrimitive(obj) {\\n\\t        obj[primitiveKey] = true;\\n\\t    }\\n\\n\\t    function isPrimitive(obj) {\\n\\t        return obj[primitiveKey];\\n\\t    }\\n\\n\\t    /**\\n\\t     * @constructor\\n\\t     * @param {Object} obj Only apply `ownProperty`.\\n\\t     */\\n\\t    function HashMap(obj) {\\n\\t        obj && each(obj, function (value, key) {\\n\\t            this.set(key, value);\\n\\t        }, this);\\n\\t    }\\n\\n\\t    // Add prefix to avoid conflict with Object.prototype.\\n\\t    var HASH_MAP_PREFIX = '_ec_';\\n\\t    var HASH_MAP_PREFIX_LENGTH = 4;\\n\\n\\t    HashMap.prototype = {\\n\\t        constructor: HashMap,\\n\\t        // Do not provide `has` method to avoid defining what is `has`.\\n\\t        // (We usually treat `null` and `undefined` as the same, different\\n\\t        // from ES6 Map).\\n\\t        get: function (key) {\\n\\t            return this[HASH_MAP_PREFIX + key];\\n\\t        },\\n\\t        set: function (key, value) {\\n\\t            this[HASH_MAP_PREFIX + key] = value;\\n\\t            // Comparing with invocation chaining, `return value` is more commonly\\n\\t            // used in this case: `var someVal = map.set('a', genVal());`\\n\\t            return value;\\n\\t        },\\n\\t        // Although util.each can be performed on this hashMap directly, user\\n\\t        // should not use the exposed keys, who are prefixed.\\n\\t        each: function (cb, context) {\\n\\t            context !== void 0 && (cb = bind(cb, context));\\n\\t            for (var prefixedKey in this) {\\n\\t                this.hasOwnProperty(prefixedKey)\\n\\t                    && cb(this[prefixedKey], prefixedKey.slice(HASH_MAP_PREFIX_LENGTH));\\n\\t            }\\n\\t        },\\n\\t        // Do not use this method if performance sensitive.\\n\\t        removeKey: function (key) {\\n\\t            delete this[key];\\n\\t        }\\n\\t    };\\n\\n\\t    function createHashMap(obj) {\\n\\t        return new HashMap(obj);\\n\\t    }\\n\\n\\t    var util = {\\n\\t        inherits: inherits,\\n\\t        mixin: mixin,\\n\\t        clone: clone,\\n\\t        merge: merge,\\n\\t        mergeAll: mergeAll,\\n\\t        extend: extend,\\n\\t        defaults: defaults,\\n\\t        getContext: getContext,\\n\\t        createCanvas: createCanvas,\\n\\t        indexOf: indexOf,\\n\\t        slice: slice,\\n\\t        find: find,\\n\\t        isArrayLike: isArrayLike,\\n\\t        each: each,\\n\\t        map: map,\\n\\t        reduce: reduce,\\n\\t        filter: filter,\\n\\t        bind: bind,\\n\\t        curry: curry,\\n\\t        isArray: isArray,\\n\\t        isString: isString,\\n\\t        isObject: isObject,\\n\\t        isFunction: isFunction,\\n\\t        isBuiltInObject: isBuiltInObject,\\n\\t        isDom: isDom,\\n\\t        eqNaN: eqNaN,\\n\\t        retrieve: retrieve,\\n\\t        assert: assert,\\n\\t        setAsPrimitive: setAsPrimitive,\\n\\t        createHashMap: createHashMap,\\n\\t        noop: function () {}\\n\\t    };\\n\\t    module.exports = util;\\n\\n\\n\\n/***/ },\\n/* 5 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var formatUtil = __webpack_require__(6);\\n\\t    var nubmerUtil = __webpack_require__(7);\\n\\t    var Model = __webpack_require__(12);\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var each = zrUtil.each;\\n\\t    var isObject = zrUtil.isObject;\\n\\n\\t    var modelUtil = {};\\n\\n\\t    /**\\n\\t     * If value is not array, then translate it to array.\\n\\t     * @param  {*} value\\n\\t     * @return {Array} [value] or value\\n\\t     */\\n\\t    modelUtil.normalizeToArray = function (value) {\\n\\t        return value instanceof Array\\n\\t            ? value\\n\\t            : value == null\\n\\t            ? []\\n\\t            : [value];\\n\\t    };\\n\\n\\t    /**\\n\\t     * Sync default option between normal and emphasis like `position` and `show`\\n\\t     * In case some one will write code like\\n\\t     *     label: {\\n\\t     *         normal: {\\n\\t     *             show: false,\\n\\t     *             position: 'outside',\\n\\t     *             textStyle: {\\n\\t     *                 fontSize: 18\\n\\t     *             }\\n\\t     *         },\\n\\t     *         emphasis: {\\n\\t     *             show: true\\n\\t     *         }\\n\\t     *     }\\n\\t     * @param {Object} opt\\n\\t     * @param {Array.<string>} subOpts\\n\\t     */\\n\\t     modelUtil.defaultEmphasis = function (opt, subOpts) {\\n\\t        if (opt) {\\n\\t            var emphasisOpt = opt.emphasis = opt.emphasis || {};\\n\\t            var normalOpt = opt.normal = opt.normal || {};\\n\\n\\t            // Default emphasis option from normal\\n\\t            each(subOpts, function (subOptName) {\\n\\t                var val = zrUtil.retrieve(emphasisOpt[subOptName], normalOpt[subOptName]);\\n\\t                if (val != null) {\\n\\t                    emphasisOpt[subOptName] = val;\\n\\t                }\\n\\t            });\\n\\t        }\\n\\t    };\\n\\n\\t    modelUtil.LABEL_OPTIONS = ['position', 'offset', 'show', 'textStyle', 'distance', 'formatter'];\\n\\n\\t    /**\\n\\t     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\\n\\t     * This helper method retieves value from data.\\n\\t     * @param {string|number|Date|Array|Object} dataItem\\n\\t     * @return {number|string|Date|Array.<number|string|Date>}\\n\\t     */\\n\\t    modelUtil.getDataItemValue = function (dataItem) {\\n\\t        // Performance sensitive.\\n\\t        return dataItem && (dataItem.value == null ? dataItem : dataItem.value);\\n\\t    };\\n\\n\\t    /**\\n\\t     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\\n\\t     * This helper method determine if dataItem has extra option besides value\\n\\t     * @param {string|number|Date|Array|Object} dataItem\\n\\t     */\\n\\t    modelUtil.isDataItemOption = function (dataItem) {\\n\\t        return isObject(dataItem)\\n\\t            && !(dataItem instanceof Array);\\n\\t            // // markLine data can be array\\n\\t            // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\\n\\t    };\\n\\n\\t    /**\\n\\t     * This helper method convert value in data.\\n\\t     * @param {string|number|Date} value\\n\\t     * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\\n\\t     */\\n\\t    modelUtil.converDataValue = function (value, dimInfo) {\\n\\t        // Performance sensitive.\\n\\t        var dimType = dimInfo && dimInfo.type;\\n\\t        if (dimType === 'ordinal') {\\n\\t            return value;\\n\\t        }\\n\\n\\t        if (dimType === 'time'\\n\\t            // spead up when using timestamp\\n\\t            && typeof value !== 'number'\\n\\t            && value != null\\n\\t            && value !== '-'\\n\\t        ) {\\n\\t            value = +nubmerUtil.parseDate(value);\\n\\t        }\\n\\n\\t        // dimType defaults 'number'.\\n\\t        // If dimType is not ordinal and value is null or undefined or NaN or '-',\\n\\t        // parse to NaN.\\n\\t        return (value == null || value === '')\\n\\t            ? NaN : +value; // If string (like '-'), using '+' parse to NaN\\n\\t    };\\n\\n\\t    /**\\n\\t     * Create a model proxy to be used in tooltip for edge data, markLine data, markPoint data.\\n\\t     * @param {module:echarts/data/List} data\\n\\t     * @param {Object} opt\\n\\t     * @param {string} [opt.seriesIndex]\\n\\t     * @param {Object} [opt.name]\\n\\t     * @param {Object} [opt.mainType]\\n\\t     * @param {Object} [opt.subType]\\n\\t     */\\n\\t    modelUtil.createDataFormatModel = function (data, opt) {\\n\\t        var model = new Model();\\n\\t        zrUtil.mixin(model, modelUtil.dataFormatMixin);\\n\\t        model.seriesIndex = opt.seriesIndex;\\n\\t        model.name = opt.name || '';\\n\\t        model.mainType = opt.mainType;\\n\\t        model.subType = opt.subType;\\n\\n\\t        model.getData = function () {\\n\\t            return data;\\n\\t        };\\n\\t        return model;\\n\\t    };\\n\\n\\t    // PENDING A little ugly\\n\\t    modelUtil.dataFormatMixin = {\\n\\t        /**\\n\\t         * Get params for formatter\\n\\t         * @param {number} dataIndex\\n\\t         * @param {string} [dataType]\\n\\t         * @return {Object}\\n\\t         */\\n\\t        getDataParams: function (dataIndex, dataType) {\\n\\t            var data = this.getData(dataType);\\n\\t            var rawValue = this.getRawValue(dataIndex, dataType);\\n\\t            var rawDataIndex = data.getRawIndex(dataIndex);\\n\\t            var name = data.getName(dataIndex, true);\\n\\t            var itemOpt = data.getRawDataItem(dataIndex);\\n\\t            var color = data.getItemVisual(dataIndex, 'color');\\n\\n\\t            return {\\n\\t                componentType: this.mainType,\\n\\t                componentSubType: this.subType,\\n\\t                seriesType: this.mainType === 'series' ? this.subType : null,\\n\\t                seriesIndex: this.seriesIndex,\\n\\t                seriesId: this.id,\\n\\t                seriesName: this.name,\\n\\t                name: name,\\n\\t                dataIndex: rawDataIndex,\\n\\t                data: itemOpt,\\n\\t                dataType: dataType,\\n\\t                value: rawValue,\\n\\t                color: color,\\n\\t                marker: formatUtil.getTooltipMarker(color),\\n\\n\\t                // Param name list for mapping `a`, `b`, `c`, `d`, `e`\\n\\t                $vars: ['seriesName', 'name', 'value']\\n\\t            };\\n\\t        },\\n\\n\\t        /**\\n\\t         * Format label\\n\\t         * @param {number} dataIndex\\n\\t         * @param {string} [status='normal'] 'normal' or 'emphasis'\\n\\t         * @param {string} [dataType]\\n\\t         * @param {number} [dimIndex]\\n\\t         * @param {string} [labelProp='label']\\n\\t         * @return {string}\\n\\t         */\\n\\t        getFormattedLabel: function (dataIndex, status, dataType, dimIndex, labelProp) {\\n\\t            status = status || 'normal';\\n\\t            var data = this.getData(dataType);\\n\\t            var itemModel = data.getItemModel(dataIndex);\\n\\n\\t            var params = this.getDataParams(dataIndex, dataType);\\n\\t            if (dimIndex != null && (params.value instanceof Array)) {\\n\\t                params.value = params.value[dimIndex];\\n\\t            }\\n\\n\\t            var formatter = itemModel.get([labelProp || 'label', status, 'formatter']);\\n\\n\\t            if (typeof formatter === 'function') {\\n\\t                params.status = status;\\n\\t                return formatter(params);\\n\\t            }\\n\\t            else if (typeof formatter === 'string') {\\n\\t                return formatUtil.formatTpl(formatter, params);\\n\\t            }\\n\\t        },\\n\\n\\t        /**\\n\\t         * Get raw value in option\\n\\t         * @param {number} idx\\n\\t         * @param {string} [dataType]\\n\\t         * @return {Object}\\n\\t         */\\n\\t        getRawValue: function (idx, dataType) {\\n\\t            var data = this.getData(dataType);\\n\\t            var dataItem = data.getRawDataItem(idx);\\n\\t            if (dataItem != null) {\\n\\t                return (isObject(dataItem) && !(dataItem instanceof Array))\\n\\t                    ? dataItem.value : dataItem;\\n\\t            }\\n\\t        },\\n\\n\\t        /**\\n\\t         * Should be implemented.\\n\\t         * @param {number} dataIndex\\n\\t         * @param {boolean} [multipleSeries=false]\\n\\t         * @param {number} [dataType]\\n\\t         * @return {string} tooltip string\\n\\t         */\\n\\t        formatTooltip: zrUtil.noop\\n\\t    };\\n\\n\\t    /**\\n\\t     * Mapping to exists for merge.\\n\\t     *\\n\\t     * @public\\n\\t     * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\\n\\t     * @param {Object|Array.<Object>} newCptOptions\\n\\t     * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\\n\\t     *                          index of which is the same as exists.\\n\\t     */\\n\\t    modelUtil.mappingToExists = function (exists, newCptOptions) {\\n\\t        // Mapping by the order by original option (but not order of\\n\\t        // new option) in merge mode. Because we should ensure\\n\\t        // some specified index (like xAxisIndex) is consistent with\\n\\t        // original option, which is easy to understand, espatially in\\n\\t        // media query. And in most case, merge option is used to\\n\\t        // update partial option but not be expected to change order.\\n\\t        newCptOptions = (newCptOptions || []).slice();\\n\\n\\t        var result = zrUtil.map(exists || [], function (obj, index) {\\n\\t            return {exist: obj};\\n\\t        });\\n\\n\\t        // Mapping by id or name if specified.\\n\\t        each(newCptOptions, function (cptOption, index) {\\n\\t            if (!isObject(cptOption)) {\\n\\t                return;\\n\\t            }\\n\\n\\t            // id has highest priority.\\n\\t            for (var i = 0; i < result.length; i++) {\\n\\t                if (!result[i].option // Consider name: two map to one.\\n\\t                    && cptOption.id != null\\n\\t                    && result[i].exist.id === cptOption.id + ''\\n\\t                ) {\\n\\t                    result[i].option = cptOption;\\n\\t                    newCptOptions[index] = null;\\n\\t                    return;\\n\\t                }\\n\\t            }\\n\\n\\t            for (var i = 0; i < result.length; i++) {\\n\\t                var exist = result[i].exist;\\n\\t                if (!result[i].option // Consider name: two map to one.\\n\\t                    // Can not match when both ids exist but different.\\n\\t                    && (exist.id == null || cptOption.id == null)\\n\\t                    && cptOption.name != null\\n\\t                    && !modelUtil.isIdInner(cptOption)\\n\\t                    && !modelUtil.isIdInner(exist)\\n\\t                    && exist.name === cptOption.name + ''\\n\\t                ) {\\n\\t                    result[i].option = cptOption;\\n\\t                    newCptOptions[index] = null;\\n\\t                    return;\\n\\t                }\\n\\t            }\\n\\t        });\\n\\n\\t        // Otherwise mapping by index.\\n\\t        each(newCptOptions, function (cptOption, index) {\\n\\t            if (!isObject(cptOption)) {\\n\\t                return;\\n\\t            }\\n\\n\\t            var i = 0;\\n\\t            for (; i < result.length; i++) {\\n\\t                var exist = result[i].exist;\\n\\t                if (!result[i].option\\n\\t                    // Existing model that already has id should be able to\\n\\t                    // mapped to (because after mapping performed model may\\n\\t                    // be assigned with a id, whish should not affect next\\n\\t                    // mapping), except those has inner id.\\n\\t                    && !modelUtil.isIdInner(exist)\\n\\t                    // Caution:\\n\\t                    // Do not overwrite id. But name can be overwritten,\\n\\t                    // because axis use name as 'show label text'.\\n\\t                    // 'exist' always has id and name and we dont\\n\\t                    // need to check it.\\n\\t                    && cptOption.id == null\\n\\t                ) {\\n\\t                    result[i].option = cptOption;\\n\\t                    break;\\n\\t                }\\n\\t            }\\n\\n\\t            if (i >= result.length) {\\n\\t                result.push({option: cptOption});\\n\\t            }\\n\\t        });\\n\\n\\t        return result;\\n\\t    };\\n\\n\\t    /**\\n\\t     * Make id and name for mapping result (result of mappingToExists)\\n\\t     * into `keyInfo` field.\\n\\t     *\\n\\t     * @public\\n\\t     * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\\n\\t     *                          which order is the same as exists.\\n\\t     * @return {Array.<Object>} The input.\\n\\t     */\\n\\t    modelUtil.makeIdAndName = function (mapResult) {\\n\\t        // We use this id to hash component models and view instances\\n\\t        // in echarts. id can be specified by user, or auto generated.\\n\\n\\t        // The id generation rule ensures new view instance are able\\n\\t        // to mapped to old instance when setOption are called in\\n\\t        // no-merge mode. So we generate model id by name and plus\\n\\t        // type in view id.\\n\\n\\t        // name can be duplicated among components, which is convenient\\n\\t        // to specify multi components (like series) by one name.\\n\\n\\t        // Ensure that each id is distinct.\\n\\t        var idMap = zrUtil.createHashMap();\\n\\n\\t        each(mapResult, function (item, index) {\\n\\t            var existCpt = item.exist;\\n\\t            existCpt && idMap.set(existCpt.id, item);\\n\\t        });\\n\\n\\t        each(mapResult, function (item, index) {\\n\\t            var opt = item.option;\\n\\n\\t            zrUtil.assert(\\n\\t                !opt || opt.id == null || !idMap.get(opt.id) || idMap.get(opt.id) === item,\\n\\t                'id duplicates: ' + (opt && opt.id)\\n\\t            );\\n\\n\\t            opt && opt.id != null && idMap.set(opt.id, item);\\n\\t            !item.keyInfo && (item.keyInfo = {});\\n\\t        });\\n\\n\\t        // Make name and id.\\n\\t        each(mapResult, function (item, index) {\\n\\t            var existCpt = item.exist;\\n\\t            var opt = item.option;\\n\\t            var keyInfo = item.keyInfo;\\n\\n\\t            if (!isObject(opt)) {\\n\\t                return;\\n\\t            }\\n\\n\\t            // name can be overwitten. Consider case: axis.name = '20km'.\\n\\t            // But id generated by name will not be changed, which affect\\n\\t            // only in that case: setOption with 'not merge mode' and view\\n\\t            // instance will be recreated, which can be accepted.\\n\\t            keyInfo.name = opt.name != null\\n\\t                ? opt.name + ''\\n\\t                : existCpt\\n\\t                ? existCpt.name\\n\\t                : '\\\\0-'; // name may be displayed on screen, so use '-'.\\n\\n\\t            if (existCpt) {\\n\\t                keyInfo.id = existCpt.id;\\n\\t            }\\n\\t            else if (opt.id != null) {\\n\\t                keyInfo.id = opt.id + '';\\n\\t            }\\n\\t            else {\\n\\t                // Consider this situatoin:\\n\\t                //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\\n\\t                //  optionB [{..}, {name: 'a'}, {name: 'a'}]\\n\\t                // Series with the same name between optionA and optionB\\n\\t                // should be mapped.\\n\\t                var idNum = 0;\\n\\t                do {\\n\\t                    keyInfo.id = '\\\\0' + keyInfo.name + '\\\\0' + idNum++;\\n\\t                }\\n\\t                while (idMap.get(keyInfo.id));\\n\\t            }\\n\\n\\t            idMap.set(keyInfo.id, item);\\n\\t        });\\n\\t    };\\n\\n\\t    /**\\n\\t     * @public\\n\\t     * @param {Object} cptOption\\n\\t     * @return {boolean}\\n\\t     */\\n\\t    modelUtil.isIdInner = function (cptOption) {\\n\\t        return isObject(cptOption)\\n\\t            && cptOption.id\\n\\t            && (cptOption.id + '').indexOf('\\\\0_ec_\\\\0') === 0;\\n\\t    };\\n\\n\\t    /**\\n\\t     * A helper for removing duplicate items between batchA and batchB,\\n\\t     * and in themselves, and categorize by series.\\n\\t     *\\n\\t     * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\\n\\t     * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\\n\\t     * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\\n\\t     */\\n\\t    modelUtil.compressBatches = function (batchA, batchB) {\\n\\t        var mapA = {};\\n\\t        var mapB = {};\\n\\n\\t        makeMap(batchA || [], mapA);\\n\\t        makeMap(batchB || [], mapB, mapA);\\n\\n\\t        return [mapToArray(mapA), mapToArray(mapB)];\\n\\n\\t        function makeMap(sourceBatch, map, otherMap) {\\n\\t            for (var i = 0, len = sourceBatch.length; i < len; i++) {\\n\\t                var seriesId = sourceBatch[i].seriesId;\\n\\t                var dataIndices = modelUtil.normalizeToArray(sourceBatch[i].dataIndex);\\n\\t                var otherDataIndices = otherMap && otherMap[seriesId];\\n\\n\\t                for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\\n\\t                    var dataIndex = dataIndices[j];\\n\\n\\t                    if (otherDataIndices && otherDataIndices[dataIndex]) {\\n\\t                        otherDataIndices[dataIndex] = null;\\n\\t                    }\\n\\t                    else {\\n\\t                        (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\\n\\t                    }\\n\\t                }\\n\\t            }\\n\\t        }\\n\\n\\t        function mapToArray(map, isData) {\\n\\t            var result = [];\\n\\t            for (var i in map) {\\n\\t                if (map.hasOwnProperty(i) && map[i] != null) {\\n\\t                    if (isData) {\\n\\t                        result.push(+i);\\n\\t                    }\\n\\t                    else {\\n\\t                        var dataIndices = mapToArray(map[i], true);\\n\\t                        dataIndices.length && result.push({seriesId: i, dataIndex: dataIndices});\\n\\t                    }\\n\\t                }\\n\\t            }\\n\\t            return result;\\n\\t        }\\n\\t    };\\n\\n\\t    /**\\n\\t     * @param {module:echarts/data/List} data\\n\\t     * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\\n\\t     *                         each of which can be Array or primary type.\\n\\t     * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\\n\\t     */\\n\\t    modelUtil.queryDataIndex = function (data, payload) {\\n\\t        if (payload.dataIndexInside != null) {\\n\\t            return payload.dataIndexInside;\\n\\t        }\\n\\t        else if (payload.dataIndex != null) {\\n\\t            return zrUtil.isArray(payload.dataIndex)\\n\\t                ? zrUtil.map(payload.dataIndex, function (value) {\\n\\t                    return data.indexOfRawIndex(value);\\n\\t                })\\n\\t                : data.indexOfRawIndex(payload.dataIndex);\\n\\t        }\\n\\t        else if (payload.name != null) {\\n\\t            return zrUtil.isArray(payload.name)\\n\\t                ? zrUtil.map(payload.name, function (value) {\\n\\t                    return data.indexOfName(value);\\n\\t                })\\n\\t                : data.indexOfName(payload.name);\\n\\t        }\\n\\t    };\\n\\n\\t    /**\\n\\t     * Enable property storage to any host object.\\n\\t     * Notice: Serialization is not supported.\\n\\t     *\\n\\t     * For example:\\n\\t     * var get = modelUitl.makeGetter();\\n\\t     *\\n\\t     * function some(hostObj) {\\n\\t     *      get(hostObj)._someProperty = 1212;\\n\\t     *      ...\\n\\t     * }\\n\\t     *\\n\\t     * @return {Function}\\n\\t     */\\n\\t    modelUtil.makeGetter = (function () {\\n\\t        var index = 0;\\n\\t        return function () {\\n\\t            var key = '\\\\0__ec_prop_getter_' + index++;\\n\\t            return function (hostObj) {\\n\\t                return hostObj[key] || (hostObj[key] = {});\\n\\t            };\\n\\t        };\\n\\t    })();\\n\\n\\t    /**\\n\\t     * @param {module:echarts/model/Global} ecModel\\n\\t     * @param {string|Object} finder\\n\\t     *        If string, e.g., 'geo', means {geoIndex: 0}.\\n\\t     *        If Object, could contain some of these properties below:\\n\\t     *        {\\n\\t     *            seriesIndex, seriesId, seriesName,\\n\\t     *            geoIndex, geoId, geoName,\\n\\t     *            bmapIndex, bmapId, bmapName,\\n\\t     *            xAxisIndex, xAxisId, xAxisName,\\n\\t     *            yAxisIndex, yAxisId, yAxisName,\\n\\t     *            gridIndex, gridId, gridName,\\n\\t     *            ... (can be extended)\\n\\t     *        }\\n\\t     *        Each properties can be number|string|Array.<number>|Array.<string>\\n\\t     *        For example, a finder could be\\n\\t     *        {\\n\\t     *            seriesIndex: 3,\\n\\t     *            geoId: ['aa', 'cc'],\\n\\t     *            gridName: ['xx', 'rr']\\n\\t     *        }\\n\\t     *        xxxIndex can be set as 'all' (means all xxx) or 'none' (means not specify)\\n\\t     *        If nothing or null/undefined specified, return nothing.\\n\\t     * @param {Object} [opt]\\n\\t     * @param {string} [opt.defaultMainType]\\n\\t     * @param {Array.<string>} [opt.includeMainTypes]\\n\\t     * @return {Object} result like:\\n\\t     *        {\\n\\t     *            seriesModels: [seriesModel1, seriesModel2],\\n\\t     *            seriesModel: seriesModel1, // The first model\\n\\t     *            geoModels: [geoModel1, geoModel2],\\n\\t     *            geoModel: geoModel1, // The first model\\n\\t     *            ...\\n\\t     *        }\\n\\t     */\\n\\t    modelUtil.parseFinder = function (ecModel, finder, opt) {\\n\\t        if (zrUtil.isString(finder)) {\\n\\t            var obj = {};\\n\\t            obj[finder + 'Index'] = 0;\\n\\t            finder = obj;\\n\\t        }\\n\\n\\t        var defaultMainType = opt && opt.defaultMainType;\\n\\t        if (defaultMainType\\n\\t            && !has(finder, defaultMainType + 'Index')\\n\\t            && !has(finder, defaultMainType + 'Id')\\n\\t            && !has(finder, defaultMainType + 'Name')\\n\\t        ) {\\n\\t            finder[defaultMainType + 'Index'] = 0;\\n\\t        }\\n\\n\\t        var result = {};\\n\\n\\t        each(finder, function (value, key) {\\n\\t            var value = finder[key];\\n\\n\\t            // Exclude 'dataIndex' and other illgal keys.\\n\\t            if (key === 'dataIndex' || key === 'dataIndexInside') {\\n\\t                result[key] = value;\\n\\t                return;\\n\\t            }\\n\\n\\t            var parsedKey = key.match(/^(\\\\w+)(Index|Id|Name)$/) || [];\\n\\t            var mainType = parsedKey[1];\\n\\t            var queryType = (parsedKey[2] || '').toLowerCase();\\n\\n\\t            if (!mainType\\n\\t                || !queryType\\n\\t                || value == null\\n\\t                || (queryType === 'index' && value === 'none')\\n\\t                || (opt && opt.includeMainTypes && zrUtil.indexOf(opt.includeMainTypes, mainType) < 0)\\n\\t            ) {\\n\\t                return;\\n\\t            }\\n\\n\\t            var queryParam = {mainType: mainType};\\n\\t            if (queryType !== 'index' || value !== 'all') {\\n\\t                queryParam[queryType] = value;\\n\\t            }\\n\\n\\t            var models = ecModel.queryComponents(queryParam);\\n\\t            result[mainType + 'Models'] = models;\\n\\t            result[mainType + 'Model'] = models[0];\\n\\t        });\\n\\n\\t        return result;\\n\\t    };\\n\\n\\t    /**\\n\\t     * @see {module:echarts/data/helper/completeDimensions}\\n\\t     * @param {module:echarts/data/List} data\\n\\t     * @param {string|number} dataDim\\n\\t     * @return {string}\\n\\t     */\\n\\t    modelUtil.dataDimToCoordDim = function (data, dataDim) {\\n\\t        var dimensions = data.dimensions;\\n\\t        dataDim = data.getDimension(dataDim);\\n\\t        for (var i = 0; i < dimensions.length; i++) {\\n\\t            var dimItem = data.getDimensionInfo(dimensions[i]);\\n\\t            if (dimItem.name === dataDim) {\\n\\t                return dimItem.coordDim;\\n\\t            }\\n\\t        }\\n\\t    };\\n\\n\\t    /**\\n\\t     * @see {module:echarts/data/helper/completeDimensions}\\n\\t     * @param {module:echarts/data/List} data\\n\\t     * @param {string} coordDim\\n\\t     * @return {Array.<string>} data dimensions on the coordDim.\\n\\t     */\\n\\t    modelUtil.coordDimToDataDim = function (data, coordDim) {\\n\\t        var dataDim = [];\\n\\t        each(data.dimensions, function (dimName) {\\n\\t            var dimItem = data.getDimensionInfo(dimName);\\n\\t            if (dimItem.coordDim === coordDim) {\\n\\t                dataDim[dimItem.coordDimIndex] = dimItem.name;\\n\\t            }\\n\\t        });\\n\\t        return dataDim;\\n\\t    };\\n\\n\\t    /**\\n\\t     * @see {module:echarts/data/helper/completeDimensions}\\n\\t     * @param {module:echarts/data/List} data\\n\\t     * @param {string} otherDim Can be `otherDims`\\n\\t     *                        like 'label' or 'tooltip'.\\n\\t     * @return {Array.<string>} data dimensions on the otherDim.\\n\\t     */\\n\\t    modelUtil.otherDimToDataDim = function (data, otherDim) {\\n\\t        var dataDim = [];\\n\\t        each(data.dimensions, function (dimName) {\\n\\t            var dimItem = data.getDimensionInfo(dimName);\\n\\t            var otherDims = dimItem.otherDims;\\n\\t            var dimIndex = otherDims[otherDim];\\n\\t            if (dimIndex != null && dimIndex !== false) {\\n\\t                dataDim[dimIndex] = dimItem.name;\\n\\t            }\\n\\t        });\\n\\t        return dataDim;\\n\\t    };\\n\\n\\t    function has(obj, prop) {\\n\\t        return obj && obj.hasOwnProperty(prop);\\n\\t    }\\n\\n\\t    module.exports = modelUtil;\\n\\n\\n\\n/***/ },\\n/* 6 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var numberUtil = __webpack_require__(7);\\n\\t    var textContain = __webpack_require__(8);\\n\\n\\t    var formatUtil = {};\\n\\n\\t    /**\\n\\t     * 每三位默认加,格式化\\n\\t     * @param {string|number} x\\n\\t     * @return {string}\\n\\t     */\\n\\t    formatUtil.addCommas = function (x) {\\n\\t        if (isNaN(x)) {\\n\\t            return '-';\\n\\t        }\\n\\t        x = (x + '').split('.');\\n\\t        return x[0].replace(/(\\\\d{1,3})(?=(?:\\\\d{3})+(?!\\\\d))/g,'$1,')\\n\\t               + (x.length > 1 ? ('.' + x[1]) : '');\\n\\t    };\\n\\n\\t    /**\\n\\t     * @param {string} str\\n\\t     * @param {boolean} [upperCaseFirst=false]\\n\\t     * @return {string} str\\n\\t     */\\n\\t    formatUtil.toCamelCase = function (str, upperCaseFirst) {\\n\\t        str = (str || '').toLowerCase().replace(/-(.)/g, function(match, group1) {\\n\\t            return group1.toUpperCase();\\n\\t        });\\n\\n\\t        if (upperCaseFirst && str) {\\n\\t            str = str.charAt(0).toUpperCase() + str.slice(1);\\n\\t        }\\n\\n\\t        return str;\\n\\t    };\\n\\n\\t    /**\\n\\t     * Normalize css liked array configuration\\n\\t     * e.g.\\n\\t     *  3 => [3, 3, 3, 3]\\n\\t     *  [4, 2] => [4, 2, 4, 2]\\n\\t     *  [4, 3, 2] => [4, 3, 2, 3]\\n\\t     * @param {number|Array.<number>} val\\n\\t     */\\n\\t    formatUtil.normalizeCssArray = function (val) {\\n\\t        var len = val.length;\\n\\t        if (typeof (val) === 'number') {\\n\\t            return [val, val, val, val];\\n\\t        }\\n\\t        else if (len === 2) {\\n\\t            // vertical | horizontal\\n\\t            return [val[0], val[1], val[0], val[1]];\\n\\t        }\\n\\t        else if (len === 3) {\\n\\t            // top | horizontal | bottom\\n\\t            return [val[0], val[1], val[2], val[1]];\\n\\t        }\\n\\t        return val;\\n\\t    };\\n\\n\\t    var encodeHTML = formatUtil.encodeHTML = function (source) {\\n\\t        return String(source)\\n\\t            .replace(/&/g, '&amp;')\\n\\t            .replace(/</g, '&lt;')\\n\\t            .replace(/>/g, '&gt;')\\n\\t            .replace(/\\\"/g, '&quot;')\\n\\t            .replace(/'/g, '&#39;');\\n\\t    };\\n\\n\\t    var TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\\n\\n\\t    var wrapVar = function (varName, seriesIdx) {\\n\\t        return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\\n\\t    };\\n\\n\\t    /**\\n\\t     * Template formatter\\n\\t     * @param {string} tpl\\n\\t     * @param {Array.<Object>|Object} paramsList\\n\\t     * @param {boolean} [encode=false]\\n\\t     * @return {string}\\n\\t     */\\n\\t    formatUtil.formatTpl = function (tpl, paramsList, encode) {\\n\\t        if (!zrUtil.isArray(paramsList)) {\\n\\t            paramsList = [paramsList];\\n\\t        }\\n\\t        var seriesLen = paramsList.length;\\n\\t        if (!seriesLen) {\\n\\t            return '';\\n\\t        }\\n\\n\\t        var $vars = paramsList[0].$vars || [];\\n\\t        for (var i = 0; i < $vars.length; i++) {\\n\\t            var alias = TPL_VAR_ALIAS[i];\\n\\t            var val = wrapVar(alias, 0);\\n\\t            tpl = tpl.replace(wrapVar(alias), encode ? encodeHTML(val) : val);\\n\\t        }\\n\\t        for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\\n\\t            for (var k = 0; k < $vars.length; k++) {\\n\\t                var val = paramsList[seriesIdx][$vars[k]];\\n\\t                tpl = tpl.replace(\\n\\t                    wrapVar(TPL_VAR_ALIAS[k], seriesIdx),\\n\\t                    encode ? encodeHTML(val) : val\\n\\t                );\\n\\t            }\\n\\t        }\\n\\n\\t        return tpl;\\n\\t    };\\n\\n\\t    /**\\n\\t     * simple Template formatter\\n\\t     *\\n\\t     * @param {string} tpl\\n\\t     * @param {Object} param\\n\\t     * @param {boolean} [encode=false]\\n\\t     * @return {string}\\n\\t     */\\n\\t    formatUtil.formatTplSimple = function (tpl, param, encode) {\\n\\t        zrUtil.each(param, function (value, key) {\\n\\t            tpl = tpl.replace(\\n\\t                '{' + key + '}',\\n\\t                encode ? encodeHTML(value) : value\\n\\t            );\\n\\t        });\\n\\t        return tpl;\\n\\t    };\\n\\n\\t    /**\\n\\t     * @param {string} color\\n\\t     * @param {string} [extraCssText]\\n\\t     * @return {string}\\n\\t     */\\n\\t    formatUtil.getTooltipMarker = function (color, extraCssText) {\\n\\t        return color\\n\\t            ? '<span style=\\\"display:inline-block;margin-right:5px;'\\n\\t                + 'border-radius:10px;width:9px;height:9px;background-color:'\\n\\t                + formatUtil.encodeHTML(color) + ';' + (extraCssText || '') + '\\\"></span>'\\n\\t            : '';\\n\\t    };\\n\\n\\t    /**\\n\\t     * @param {string} str\\n\\t     * @return {string}\\n\\t     * @inner\\n\\t     */\\n\\t    var s2d = function (str) {\\n\\t        return str < 10 ? ('0' + str) : str;\\n\\t    };\\n\\n\\t    /**\\n\\t     * ISO Date format\\n\\t     * @param {string} tpl\\n\\t     * @param {number} value\\n\\t     * @param {boolean} [isUTC=false] Default in local time.\\n\\t     *           see `module:echarts/scale/Time`\\n\\t     *           and `module:echarts/util/number#parseDate`.\\n\\t     * @inner\\n\\t     */\\n\\t    formatUtil.formatTime = function (tpl, value, isUTC) {\\n\\t        if (tpl === 'week'\\n\\t            || tpl === 'month'\\n\\t            || tpl === 'quarter'\\n\\t            || tpl === 'half-year'\\n\\t            || tpl === 'year'\\n\\t        ) {\\n\\t            tpl = 'MM-dd\\\\nyyyy';\\n\\t        }\\n\\n\\t        var date = numberUtil.parseDate(value);\\n\\t        var utc = isUTC ? 'UTC' : '';\\n\\t        var y = date['get' + utc + 'FullYear']();\\n\\t        var M = date['get' + utc + 'Month']() + 1;\\n\\t        var d = date['get' + utc + 'Date']();\\n\\t        var h = date['get' + utc + 'Hours']();\\n\\t        var m = date['get' + utc + 'Minutes']();\\n\\t        var s = date['get' + utc + 'Seconds']();\\n\\n\\t        tpl = tpl.replace('MM', s2d(M))\\n\\t            .toLowerCase()\\n\\t            .replace('yyyy', y)\\n\\t            .replace('yy', y % 100)\\n\\t            .replace('dd', s2d(d))\\n\\t            .replace('d', d)\\n\\t            .replace('hh', s2d(h))\\n\\t            .replace('h', h)\\n\\t            .replace('mm', s2d(m))\\n\\t            .replace('m', m)\\n\\t            .replace('ss', s2d(s))\\n\\t            .replace('s', s);\\n\\n\\t        return tpl;\\n\\t    };\\n\\n\\t    /**\\n\\t     * Capital first\\n\\t     * @param {string} str\\n\\t     * @return {string}\\n\\t     */\\n\\t    formatUtil.capitalFirst = function (str) {\\n\\t        return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\\n\\t    };\\n\\n\\t    formatUtil.truncateText = textContain.truncateText;\\n\\n\\t    module.exports = formatUtil;\\n\\n\\n\\n/***/ },\\n/* 7 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * 数值处理模块\\n\\t * @module echarts/util/number\\n\\t */\\n\\n\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\n\\t    var number = {};\\n\\n\\t    var RADIAN_EPSILON = 1e-4;\\n\\n\\t    function _trim(str) {\\n\\t        return str.replace(/^\\\\s+/, '').replace(/\\\\s+$/, '');\\n\\t    }\\n\\n\\t    /**\\n\\t     * Linear mapping a value from domain to range\\n\\t     * @memberOf module:echarts/util/number\\n\\t     * @param  {(number|Array.<number>)} val\\n\\t     * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\\n\\t     * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\\n\\t     * @param  {boolean} clamp\\n\\t     * @return {(number|Array.<number>}\\n\\t     */\\n\\t    number.linearMap = function (val, domain, range, clamp) {\\n\\t        var subDomain = domain[1] - domain[0];\\n\\t        var subRange = range[1] - range[0];\\n\\n\\t        if (subDomain === 0) {\\n\\t            return subRange === 0\\n\\t                ? range[0]\\n\\t                : (range[0] + range[1]) / 2;\\n\\t        }\\n\\n\\t        // Avoid accuracy problem in edge, such as\\n\\t        // 146.39 - 62.83 === 83.55999999999999.\\n\\t        // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\\n\\t        // It is a little verbose for efficiency considering this method\\n\\t        // is a hotspot.\\n\\t        if (clamp) {\\n\\t            if (subDomain > 0) {\\n\\t                if (val <= domain[0]) {\\n\\t                    return range[0];\\n\\t                }\\n\\t                else if (val >= domain[1]) {\\n\\t                    return range[1];\\n\\t                }\\n\\t            }\\n\\t            else {\\n\\t                if (val >= domain[0]) {\\n\\t                    return range[0];\\n\\t                }\\n\\t                else if (val <= domain[1]) {\\n\\t                    return range[1];\\n\\t                }\\n\\t            }\\n\\t        }\\n\\t        else {\\n\\t            if (val === domain[0]) {\\n\\t                return range[0];\\n\\t            }\\n\\t            if (val === domain[1]) {\\n\\t                return range[1];\\n\\t            }\\n\\t        }\\n\\n\\t        return (val - domain[0]) / subDomain * subRange + range[0];\\n\\t    };\\n\\n\\t    /**\\n\\t     * Convert a percent string to absolute number.\\n\\t     * Returns NaN if percent is not a valid string or number\\n\\t     * @memberOf module:echarts/util/number\\n\\t     * @param {string|number} percent\\n\\t     * @param {number} all\\n\\t     * @return {number}\\n\\t     */\\n\\t    number.parsePercent = function(percent, all) {\\n\\t        switch (percent) {\\n\\t            case 'center':\\n\\t            case 'middle':\\n\\t                percent = '50%';\\n\\t                break;\\n\\t            case 'left':\\n\\t            case 'top':\\n\\t                percent = '0%';\\n\\t                break;\\n\\t            case 'right':\\n\\t            case 'bottom':\\n\\t                percent = '100%';\\n\\t                break;\\n\\t        }\\n\\t        if (typeof percent === 'string') {\\n\\t            if (_trim(percent).match(/%$/)) {\\n\\t                return parseFloat(percent) / 100 * all;\\n\\t            }\\n\\n\\t            return parseFloat(percent);\\n\\t        }\\n\\n\\t        return percent == null ? NaN : +percent;\\n\\t    };\\n\\n\\t    /**\\n\\t     * (1) Fix rounding error of float numbers.\\n\\t     * (2) Support return string to avoid scientific notation like '3.5e-7'.\\n\\t     *\\n\\t     * @param {number} x\\n\\t     * @param {number} [precision]\\n\\t     * @param {boolean} [returnStr]\\n\\t     * @return {number|string}\\n\\t     */\\n\\t    number.round = function (x, precision, returnStr) {\\n\\t        if (precision == null) {\\n\\t            precision = 10;\\n\\t        }\\n\\t        // Avoid range error\\n\\t        precision = Math.min(Math.max(0, precision), 20);\\n\\t        x = (+x).toFixed(precision);\\n\\t        return returnStr ? x : +x;\\n\\t    };\\n\\n\\t    number.asc = function (arr) {\\n\\t        arr.sort(function (a, b) {\\n\\t            return a - b;\\n\\t        });\\n\\t        return arr;\\n\\t    };\\n\\n\\t    /**\\n\\t     * Get precision\\n\\t     * @param {number} val\\n\\t     */\\n\\t    number.getPrecision = function (val) {\\n\\t        val = +val;\\n\\t        if (isNaN(val)) {\\n\\t            return 0;\\n\\t        }\\n\\t        // It is much faster than methods converting number to string as follows\\n\\t        //      var tmp = val.toString();\\n\\t        //      return tmp.length - 1 - tmp.indexOf('.');\\n\\t        // especially when precision is low\\n\\t        var e = 1;\\n\\t        var count = 0;\\n\\t        while (Math.round(val * e) / e !== val) {\\n\\t            e *= 10;\\n\\t            count++;\\n\\t        }\\n\\t        return count;\\n\\t    };\\n\\n\\t    /**\\n\\t     * @param {string|number} val\\n\\t     * @return {number}\\n\\t     */\\n\\t    number.getPrecisionSafe = function (val) {\\n\\t        var str = val.toString();\\n\\n\\t        // Consider scientific notation: '3.4e-12' '3.4e+12'\\n\\t        var eIndex = str.indexOf('e');\\n\\t        if (eIndex > 0) {\\n\\t            var precision = +str.slice(eIndex + 1);\\n\\t            return precision < 0 ? -precision : 0;\\n\\t        }\\n\\t        else {\\n\\t            var dotIndex = str.indexOf('.');\\n\\t            return dotIndex < 0 ? 0 : str.length - 1 - dotIndex;\\n\\t        }\\n\\t    };\\n\\n\\t    /**\\n\\t     * Minimal dicernible data precisioin according to a single pixel.\\n\\t     *\\n\\t     * @param {Array.<number>} dataExtent\\n\\t     * @param {Array.<number>} pixelExtent\\n\\t     * @return {number} precision\\n\\t     */\\n\\t    number.getPixelPrecision = function (dataExtent, pixelExtent) {\\n\\t        var log = Math.log;\\n\\t        var LN10 = Math.LN10;\\n\\t        var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\\n\\t        var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10);\\n\\t        // toFixed() digits argument must be between 0 and 20.\\n\\t        var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\\n\\t        return !isFinite(precision) ? 20 : precision;\\n\\t    };\\n\\n\\t    /**\\n\\t     * Get a data of given precision, assuring the sum of percentages\\n\\t     * in valueList is 1.\\n\\t     * The largest remainer method is used.\\n\\t     * https://en.wikipedia.org/wiki/Largest_remainder_method\\n\\t     *\\n\\t     * @param {Array.<number>} valueList a list of all data\\n\\t     * @param {number} idx index of the data to be processed in valueList\\n\\t     * @param {number} precision integer number showing digits of precision\\n\\t     * @return {number} percent ranging from 0 to 100\\n\\t     */\\n\\t    number.getPercentWithPrecision = function (valueList, idx, precision) {\\n\\t        if (!valueList[idx]) {\\n\\t            return 0;\\n\\t        }\\n\\n\\t        var sum = zrUtil.reduce(valueList, function (acc, val) {\\n\\t            return acc + (isNaN(val) ? 0 : val);\\n\\t        }, 0);\\n\\t        if (sum === 0) {\\n\\t            return 0;\\n\\t        }\\n\\n\\t        var digits = Math.pow(10, precision);\\n\\t        var votesPerQuota = zrUtil.map(valueList, function (val) {\\n\\t            return (isNaN(val) ? 0 : val) / sum * digits * 100;\\n\\t        });\\n\\t        var targetSeats = digits * 100;\\n\\n\\t        var seats = zrUtil.map(votesPerQuota, function (votes) {\\n\\t            // Assign automatic seats.\\n\\t            return Math.floor(votes);\\n\\t        });\\n\\t        var currentSum = zrUtil.reduce(seats, function (acc, val) {\\n\\t            return acc + val;\\n\\t        }, 0);\\n\\n\\t        var remainder = zrUtil.map(votesPerQuota, function (votes, idx) {\\n\\t            return votes - seats[idx];\\n\\t        });\\n\\n\\t        // Has remainding votes.\\n\\t        while (currentSum < targetSeats) {\\n\\t            // Find next largest remainder.\\n\\t            var max = Number.NEGATIVE_INFINITY;\\n\\t            var maxId = null;\\n\\t            for (var i = 0, len = remainder.length; i < len; ++i) {\\n\\t                if (remainder[i] > max) {\\n\\t                    max = remainder[i];\\n\\t                    maxId = i;\\n\\t                }\\n\\t            }\\n\\n\\t            // Add a vote to max remainder.\\n\\t            ++seats[maxId];\\n\\t            remainder[maxId] = 0;\\n\\t            ++currentSum;\\n\\t        }\\n\\n\\t        return seats[idx] / digits;\\n\\t    };\\n\\n\\t    // Number.MAX_SAFE_INTEGER, ie do not support.\\n\\t    number.MAX_SAFE_INTEGER = 9007199254740991;\\n\\n\\t    /**\\n\\t     * To 0 - 2 * PI, considering negative radian.\\n\\t     * @param {number} radian\\n\\t     * @return {number}\\n\\t     */\\n\\t    number.remRadian = function (radian) {\\n\\t        var pi2 = Math.PI * 2;\\n\\t        return (radian % pi2 + pi2) % pi2;\\n\\t    };\\n\\n\\t    /**\\n\\t     * @param {type} radian\\n\\t     * @return {boolean}\\n\\t     */\\n\\t    number.isRadianAroundZero = function (val) {\\n\\t        return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\\n\\t    };\\n\\n\\t    var TIME_REG = /^(?:(\\\\d{4})(?:[-\\\\/](\\\\d{1,2})(?:[-\\\\/](\\\\d{1,2})(?:[T ](\\\\d{1,2})(?::(\\\\d\\\\d)(?::(\\\\d\\\\d)(?:[.,](\\\\d+))?)?)?(Z|[\\\\+\\\\-]\\\\d\\\\d:?\\\\d\\\\d)?)?)?)?)?$/; // jshint ignore:line\\n\\n\\t    /**\\n\\t     * @return {number} in minutes\\n\\t     */\\n\\t    number.getTimezoneOffset = function () {\\n\\t        return (new Date()).getTimezoneOffset();\\n\\t    };\\n\\n\\t    /**\\n\\t     * @param {string|Date|number} value These values can be accepted:\\n\\t     *   + An instance of Date, represent a time in its own time zone.\\n\\t     *   + Or string in a subset of ISO 8601, only including:\\n\\t     *     + only year, month, date: '2012-03', '2012-03-01', '2012-03-01 05', '2012-03-01 05:06',\\n\\t     *     + separated with T or space: '2012-03-01T12:22:33.123', '2012-03-01 12:22:33.123',\\n\\t     *     + time zone: '2012-03-01T12:22:33Z', '2012-03-01T12:22:33+8000', '2012-03-01T12:22:33-05:00',\\n\\t     *     all of which will be treated as local time if time zone is not specified\\n\\t     *     (see <https://momentjs.com/>).\\n\\t     *   + Or other string format, including (all of which will be treated as loacal time):\\n\\t     *     '2012', '2012-3-1', '2012/3/1', '2012/03/01',\\n\\t     *     '2009/6/12 2:00', '2009/6/12 2:05:08', '2009/6/12 2:05:08.123'\\n\\t     *   + a timestamp, which represent a time in UTC.\\n\\t     * @return {Date} date\\n\\t     */\\n\\t    number.parseDate = function (value) {\\n\\t        if (value instanceof Date) {\\n\\t            return value;\\n\\t        }\\n\\t        else if (typeof value === 'string') {\\n\\t            // Different browsers parse date in different way, so we parse it manually.\\n\\t            // Some other issues:\\n\\t            // new Date('1970-01-01') is UTC,\\n\\t            // new Date('1970/01/01') and new Date('1970-1-01') is local.\\n\\t            // See issue #3623\\n\\t            var match = TIME_REG.exec(value);\\n\\n\\t            if (!match) {\\n\\t                // return Invalid Date.\\n\\t                return new Date(NaN);\\n\\t            }\\n\\n\\t            var timezoneOffset = number.getTimezoneOffset();\\n\\t            var timeOffset = !match[8]\\n\\t                ? 0\\n\\t                : match[8].toUpperCase() === 'Z'\\n\\t                ? timezoneOffset\\n\\t                : +match[8].slice(0, 3) * 60 + timezoneOffset;\\n\\n\\t            // match[n] can only be string or undefined.\\n\\t            // But take care of '12' + 1 => '121'.\\n\\t            return new Date(\\n\\t                +match[1],\\n\\t                +(match[2] || 1) - 1,\\n\\t                +match[3] || 1,\\n\\t                +match[4] || 0,\\n\\t                +(match[5] || 0) - timeOffset,\\n\\t                +match[6] || 0,\\n\\t                +match[7] || 0\\n\\t            );\\n\\t        }\\n\\t        else if (value == null) {\\n\\t            return new Date(NaN);\\n\\t        }\\n\\n\\t        return new Date(Math.round(value));\\n\\t    };\\n\\n\\t    /**\\n\\t     * Quantity of a number. e.g. 0.1, 1, 10, 100\\n\\t     *\\n\\t     * @param  {number} val\\n\\t     * @return {number}\\n\\t     */\\n\\t    number.quantity = function (val) {\\n\\t        return Math.pow(10, quantityExponent(val));\\n\\t    };\\n\\n\\t    function quantityExponent(val) {\\n\\t        return Math.floor(Math.log(val) / Math.LN10);\\n\\t    }\\n\\n\\t    /**\\n\\t     * find a “nice” number approximately equal to x. Round the number if round = true,\\n\\t     * take ceiling if round = false. The primary observation is that the “nicest”\\n\\t     * numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\\n\\t     *\\n\\t     * See \\\"Nice Numbers for Graph Labels\\\" of Graphic Gems.\\n\\t     *\\n\\t     * @param  {number} val Non-negative value.\\n\\t     * @param  {boolean} round\\n\\t     * @return {number}\\n\\t     */\\n\\t    number.nice = function (val, round) {\\n\\t        var exponent = quantityExponent(val);\\n\\t        var exp10 = Math.pow(10, exponent);\\n\\t        var f = val / exp10; // 1 <= f < 10\\n\\t        var nf;\\n\\t        if (round) {\\n\\t            if (f < 1.5) { nf = 1; }\\n\\t            else if (f < 2.5) { nf = 2; }\\n\\t            else if (f < 4) { nf = 3; }\\n\\t            else if (f < 7) { nf = 5; }\\n\\t            else { nf = 10; }\\n\\t        }\\n\\t        else {\\n\\t            if (f < 1) { nf = 1; }\\n\\t            else if (f < 2) { nf = 2; }\\n\\t            else if (f < 3) { nf = 3; }\\n\\t            else if (f < 5) { nf = 5; }\\n\\t            else { nf = 10; }\\n\\t        }\\n\\t        val = nf * exp10;\\n\\n\\t        // Fix 3 * 0.1 === 0.30000000000000004 issue (see IEEE 754).\\n\\t        // 20 is the uppper bound of toFixed.\\n\\t        return exponent >= -20 ? +val.toFixed(exponent < 0 ? -exponent : 0) : val;\\n\\t    };\\n\\n\\t    /**\\n\\t     * Order intervals asc, and split them when overlap.\\n\\t     * expect(numberUtil.reformIntervals([\\n\\t     *     {interval: [18, 62], close: [1, 1]},\\n\\t     *     {interval: [-Infinity, -70], close: [0, 0]},\\n\\t     *     {interval: [-70, -26], close: [1, 1]},\\n\\t     *     {interval: [-26, 18], close: [1, 1]},\\n\\t     *     {interval: [62, 150], close: [1, 1]},\\n\\t     *     {interval: [106, 150], close: [1, 1]},\\n\\t     *     {interval: [150, Infinity], close: [0, 0]}\\n\\t     * ])).toEqual([\\n\\t     *     {interval: [-Infinity, -70], close: [0, 0]},\\n\\t     *     {interval: [-70, -26], close: [1, 1]},\\n\\t     *     {interval: [-26, 18], close: [0, 1]},\\n\\t     *     {interval: [18, 62], close: [0, 1]},\\n\\t     *     {interval: [62, 150], close: [0, 1]},\\n\\t     *     {interval: [150, Infinity], close: [0, 0]}\\n\\t     * ]);\\n\\t     * @param {Array.<Object>} list, where `close` mean open or close\\n\\t     *        of the interval, and Infinity can be used.\\n\\t     * @return {Array.<Object>} The origin list, which has been reformed.\\n\\t     */\\n\\t    number.reformIntervals = function (list) {\\n\\t        list.sort(function (a, b) {\\n\\t            return littleThan(a, b, 0) ? -1 : 1;\\n\\t        });\\n\\n\\t        var curr = -Infinity;\\n\\t        var currClose = 1;\\n\\t        for (var i = 0; i < list.length;) {\\n\\t            var interval = list[i].interval;\\n\\t            var close = list[i].close;\\n\\n\\t            for (var lg = 0; lg < 2; lg++) {\\n\\t                if (interval[lg] <= curr) {\\n\\t                    interval[lg] = curr;\\n\\t                    close[lg] = !lg ? 1 - currClose : 1;\\n\\t                }\\n\\t                curr = interval[lg];\\n\\t                currClose = close[lg];\\n\\t            }\\n\\n\\t            if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\\n\\t                list.splice(i, 1);\\n\\t            }\\n\\t            else {\\n\\t                i++;\\n\\t            }\\n\\t        }\\n\\n\\t        return list;\\n\\n\\t        function littleThan(a, b, lg) {\\n\\t            return a.interval[lg] < b.interval[lg]\\n\\t                || (\\n\\t                    a.interval[lg] === b.interval[lg]\\n\\t                    && (\\n\\t                        (a.close[lg] - b.close[lg] === (!lg ? 1 : -1))\\n\\t                        || (!lg && littleThan(a, b, 1))\\n\\t                    )\\n\\t                );\\n\\t        }\\n\\t    };\\n\\n\\t    /**\\n\\t     * parseFloat NaNs numeric-cast false positives (null|true|false|\\\"\\\")\\n\\t     * ...but misinterprets leading-number strings, particularly hex literals (\\\"0x...\\\")\\n\\t     * subtraction forces infinities to NaN\\n\\t     *\\n\\t     * @param {*} v\\n\\t     * @return {boolean}\\n\\t     */\\n\\t    number.isNumeric = function (v) {\\n\\t        return v - parseFloat(v) >= 0;\\n\\t    };\\n\\n\\t    module.exports = number;\\n\\n\\n/***/ },\\n/* 8 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var textWidthCache = {};\\n\\t    var textWidthCacheCounter = 0;\\n\\t    var TEXT_CACHE_MAX = 5000;\\n\\n\\t    var util = __webpack_require__(4);\\n\\t    var BoundingRect = __webpack_require__(9);\\n\\t    var retrieve = util.retrieve;\\n\\n\\t    function getTextWidth(text, textFont) {\\n\\t        var key = text + ':' + textFont;\\n\\t        if (textWidthCache[key]) {\\n\\t            return textWidthCache[key];\\n\\t        }\\n\\n\\t        var textLines = (text + '').split('\\\\n');\\n\\t        var width = 0;\\n\\n\\t        for (var i = 0, l = textLines.length; i < l; i++) {\\n\\t            // measureText 可以被覆盖以兼容不支持 Canvas 的环境\\n\\t            width = Math.max(textContain.measureText(textLines[i], textFont).width, width);\\n\\t        }\\n\\n\\t        if (textWidthCacheCounter > TEXT_CACHE_MAX) {\\n\\t            textWidthCacheCounter = 0;\\n\\t            textWidthCache = {};\\n\\t        }\\n\\t        textWidthCacheCounter++;\\n\\t        textWidthCache[key] = width;\\n\\n\\t        return width;\\n\\t    }\\n\\n\\t    function getTextRect(text, textFont, textAlign, textBaseline) {\\n\\t        var textLineLen = ((text || '') + '').split('\\\\n').length;\\n\\n\\t        var width = getTextWidth(text, textFont);\\n\\t        // FIXME 高度计算比较粗暴\\n\\t        var lineHeight = getTextWidth('国', textFont);\\n\\t        var height = textLineLen * lineHeight;\\n\\n\\t        var rect = new BoundingRect(0, 0, width, height);\\n\\t        // Text has a special line height property\\n\\t        rect.lineHeight = lineHeight;\\n\\n\\t        switch (textBaseline) {\\n\\t            case 'bottom':\\n\\t            case 'alphabetic':\\n\\t                rect.y -= lineHeight;\\n\\t                break;\\n\\t            case 'middle':\\n\\t                rect.y -= lineHeight / 2;\\n\\t                break;\\n\\t            // case 'hanging':\\n\\t            // case 'top':\\n\\t        }\\n\\n\\t        // FIXME Right to left language\\n\\t        switch (textAlign) {\\n\\t            case 'end':\\n\\t            case 'right':\\n\\t                rect.x -= rect.width;\\n\\t                break;\\n\\t            case 'center':\\n\\t                rect.x -= rect.width / 2;\\n\\t                break;\\n\\t            // case 'start':\\n\\t            // case 'left':\\n\\t        }\\n\\n\\t        return rect;\\n\\t    }\\n\\n\\t    function adjustTextPositionOnRect(textPosition, rect, textRect, distance) {\\n\\n\\t        var x = rect.x;\\n\\t        var y = rect.y;\\n\\n\\t        var height = rect.height;\\n\\t        var width = rect.width;\\n\\n\\t        var textHeight = textRect.height;\\n\\n\\t        var lineHeight = textRect.lineHeight;\\n\\t        var halfHeight = height / 2 - textHeight / 2 + lineHeight;\\n\\n\\t        var textAlign = 'left';\\n\\n\\t        switch (textPosition) {\\n\\t            case 'left':\\n\\t                x -= distance;\\n\\t                y += halfHeight;\\n\\t                textAlign = 'right';\\n\\t                break;\\n\\t            case 'right':\\n\\t                x += distance + width;\\n\\t                y += halfHeight;\\n\\t                textAlign = 'left';\\n\\t                break;\\n\\t            case 'top':\\n\\t                x += width / 2;\\n\\t                y -= distance + textHeight - lineHeight;\\n\\t                textAlign = 'center';\\n\\t                break;\\n\\t            case 'bottom':\\n\\t                x += width / 2;\\n\\t                y += height + distance + lineHeight;\\n\\t                textAlign = 'center';\\n\\t                break;\\n\\t            case 'inside':\\n\\t                x += width / 2;\\n\\t                y += halfHeight;\\n\\t                textAlign = 'center';\\n\\t                break;\\n\\t            case 'insideLeft':\\n\\t                x += distance;\\n\\t                y += halfHeight;\\n\\t                textAlign = 'left';\\n\\t                break;\\n\\t            case 'insideRight':\\n\\t                x += width - distance;\\n\\t                y += halfHeight;\\n\\t                textAlign = 'right';\\n\\t                break;\\n\\t            case 'insideTop':\\n\\t                x += width / 2;\\n\\t                y += distance + lineHeight;\\n\\t                textAlign = 'center';\\n\\t                break;\\n\\t            case 'insideBottom':\\n\\t                x += width / 2;\\n\\t                y += height - textHeight - distance + lineHeight;\\n\\t                textAlign = 'center';\\n\\t                break;\\n\\t            case 'insideTopLeft':\\n\\t                x += distance;\\n\\t                y += distance + lineHeight;\\n\\t                textAlign = 'left';\\n\\t                break;\\n\\t            case 'insideTopRight':\\n\\t                x += width - distance;\\n\\t                y += distance + lineHeight;\\n\\t                textAlign = 'right';\\n\\t                break;\\n\\t            case 'insideBottomLeft':\\n\\t                x += distance;\\n\\t                y += height - textHeight - distance + lineHeight;\\n\\t                break;\\n\\t            case 'insideBottomRight':\\n\\t                x += width - distance;\\n\\t                y += height - textHeight - distance + lineHeight;\\n\\t                textAlign = 'right';\\n\\t                break;\\n\\t        }\\n\\n\\t        return {\\n\\t            x: x,\\n\\t            y: y,\\n\\t            textAlign: textAlign,\\n\\t            textBaseline: 'alphabetic'\\n\\t        };\\n\\t    }\\n\\n\\t    /**\\n\\t     * Show ellipsis if overflow.\\n\\t     *\\n\\t     * @param  {string} text\\n\\t     * @param  {string} containerWidth\\n\\t     * @param  {string} textFont\\n\\t     * @param  {number} [ellipsis='...']\\n\\t     * @param  {Object} [options]\\n\\t     * @param  {number} [options.maxIterations=3]\\n\\t     * @param  {number} [options.minChar=0] If truncate result are less\\n\\t     *                  then minChar, ellipsis will not show, which is\\n\\t     *                  better for user hint in some cases.\\n\\t     * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\\n\\t     * @return {string}\\n\\t     */\\n\\t    function truncateText(text, containerWidth, textFont, ellipsis, options) {\\n\\t        if (!containerWidth) {\\n\\t            return '';\\n\\t        }\\n\\n\\t        options = options || {};\\n\\n\\t        ellipsis = retrieve(ellipsis, '...');\\n\\t        var maxIterations = retrieve(options.maxIterations, 2);\\n\\t        var minChar = retrieve(options.minChar, 0);\\n\\t        // FIXME\\n\\t        // Other languages?\\n\\t        var cnCharWidth = getTextWidth('国', textFont);\\n\\t        // FIXME\\n\\t        // Consider proportional font?\\n\\t        var ascCharWidth = getTextWidth('a', textFont);\\n\\t        var placeholder = retrieve(options.placeholder, '');\\n\\n\\t        // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\\n\\t        // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\\n\\t        var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\\n\\t        for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\\n\\t            contentWidth -= ascCharWidth;\\n\\t        }\\n\\n\\t        var ellipsisWidth = getTextWidth(ellipsis);\\n\\t        if (ellipsisWidth > contentWidth) {\\n\\t            ellipsis = '';\\n\\t            ellipsisWidth = 0;\\n\\t        }\\n\\n\\t        contentWidth = containerWidth - ellipsisWidth;\\n\\n\\t        var textLines = (text + '').split('\\\\n');\\n\\n\\t        for (var i = 0, len = textLines.length; i < len; i++) {\\n\\t            var textLine = textLines[i];\\n\\t            var lineWidth = getTextWidth(textLine, textFont);\\n\\n\\t            if (lineWidth <= containerWidth) {\\n\\t                continue;\\n\\t            }\\n\\n\\t            for (var j = 0;; j++) {\\n\\t                if (lineWidth <= contentWidth || j >= maxIterations) {\\n\\t                    textLine += ellipsis;\\n\\t                    break;\\n\\t                }\\n\\n\\t                var subLength = j === 0\\n\\t                    ? estimateLength(textLine, contentWidth, ascCharWidth, cnCharWidth)\\n\\t                    : lineWidth > 0\\n\\t                    ? Math.floor(textLine.length * contentWidth / lineWidth)\\n\\t                    : 0;\\n\\n\\t                textLine = textLine.substr(0, subLength);\\n\\t                lineWidth = getTextWidth(textLine, textFont);\\n\\t            }\\n\\n\\t            if (textLine === '') {\\n\\t                textLine = placeholder;\\n\\t            }\\n\\n\\t            textLines[i] = textLine;\\n\\t        }\\n\\n\\t        return textLines.join('\\\\n');\\n\\t    }\\n\\n\\t    function estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\\n\\t        var width = 0;\\n\\t        var i = 0;\\n\\t        for (var len = text.length; i < len && width < contentWidth; i++) {\\n\\t            var charCode = text.charCodeAt(i);\\n\\t            width += (0 <= charCode && charCode <= 127) ? ascCharWidth : cnCharWidth;\\n\\t        }\\n\\t        return i;\\n\\t    }\\n\\n\\t    var textContain = {\\n\\n\\t        getWidth: getTextWidth,\\n\\n\\t        getBoundingRect: getTextRect,\\n\\n\\t        adjustTextPositionOnRect: adjustTextPositionOnRect,\\n\\n\\t        truncateText: truncateText,\\n\\n\\t        measureText: function (text, textFont) {\\n\\t            var ctx = util.getContext();\\n\\t            ctx.font = textFont || '12px sans-serif';\\n\\t            return ctx.measureText(text);\\n\\t        }\\n\\t    };\\n\\n\\t    module.exports = textContain;\\n\\n\\n/***/ },\\n/* 9 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t'use strict';\\n\\t/**\\n\\t * @module echarts/core/BoundingRect\\n\\t */\\n\\n\\n\\t    var vec2 = __webpack_require__(10);\\n\\t    var matrix = __webpack_require__(11);\\n\\n\\t    var v2ApplyTransform = vec2.applyTransform;\\n\\t    var mathMin = Math.min;\\n\\t    var mathMax = Math.max;\\n\\t    /**\\n\\t     * @alias module:echarts/core/BoundingRect\\n\\t     */\\n\\t    function BoundingRect(x, y, width, height) {\\n\\n\\t        if (width < 0) {\\n\\t            x = x + width;\\n\\t            width = -width;\\n\\t        }\\n\\t        if (height < 0) {\\n\\t            y = y + height;\\n\\t            height = -height;\\n\\t        }\\n\\n\\t        /**\\n\\t         * @type {number}\\n\\t         */\\n\\t        this.x = x;\\n\\t        /**\\n\\t         * @type {number}\\n\\t         */\\n\\t        this.y = y;\\n\\t        /**\\n\\t         * @type {number}\\n\\t         */\\n\\t        this.width = width;\\n\\t        /**\\n\\t         * @type {number}\\n\\t         */\\n\\t        this.height = height;\\n\\t    }\\n\\n\\t    BoundingRect.prototype = {\\n\\n\\t        constructor: BoundingRect,\\n\\n\\t        /**\\n\\t         * @param {module:echarts/core/BoundingRect} other\\n\\t         */\\n\\t        union: function (other) {\\n\\t            var x = mathMin(other.x, this.x);\\n\\t            var y = mathMin(other.y, this.y);\\n\\n\\t            this.width = mathMax(\\n\\t                    other.x + other.width,\\n\\t                    this.x + this.width\\n\\t                ) - x;\\n\\t            this.height = mathMax(\\n\\t                    other.y + other.height,\\n\\t                    this.y + this.height\\n\\t                ) - y;\\n\\t            this.x = x;\\n\\t            this.y = y;\\n\\t        },\\n\\n\\t        /**\\n\\t         * @param {Array.<number>} m\\n\\t         * @methods\\n\\t         */\\n\\t        applyTransform: (function () {\\n\\t            var lt = [];\\n\\t            var rb = [];\\n\\t            var lb = [];\\n\\t            var rt = [];\\n\\t            return function (m) {\\n\\t                // In case usage like this\\n\\t                // el.getBoundingRect().applyTransform(el.transform)\\n\\t                // And element has no transform\\n\\t                if (!m) {\\n\\t                    return;\\n\\t                }\\n\\t                lt[0] = lb[0] = this.x;\\n\\t                lt[1] = rt[1] = this.y;\\n\\t                rb[0] = rt[0] = this.x + this.width;\\n\\t                rb[1] = lb[1] = this.y + this.height;\\n\\n\\t                v2ApplyTransform(lt, lt, m);\\n\\t                v2ApplyTransform(rb, rb, m);\\n\\t                v2ApplyTransform(lb, lb, m);\\n\\t                v2ApplyTransform(rt, rt, m);\\n\\n\\t                this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\\n\\t                this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\\n\\t                var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\\n\\t                var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\\n\\t                this.width = maxX - this.x;\\n\\t                this.height = maxY - this.y;\\n\\t            };\\n\\t        })(),\\n\\n\\t        /**\\n\\t         * Calculate matrix of transforming from self to target rect\\n\\t         * @param  {module:zrender/core/BoundingRect} b\\n\\t         * @return {Array.<number>}\\n\\t         */\\n\\t        calculateTransform: function (b) {\\n\\t            var a = this;\\n\\t            var sx = b.width / a.width;\\n\\t            var sy = b.height / a.height;\\n\\n\\t            var m = matrix.create();\\n\\n\\t            // 矩阵右乘\\n\\t            matrix.translate(m, m, [-a.x, -a.y]);\\n\\t            matrix.scale(m, m, [sx, sy]);\\n\\t            matrix.translate(m, m, [b.x, b.y]);\\n\\n\\t            return m;\\n\\t        },\\n\\n\\t        /**\\n\\t         * @param {(module:echarts/core/BoundingRect|Object)} b\\n\\t         * @return {boolean}\\n\\t         */\\n\\t        intersect: function (b) {\\n\\t            if (!b) {\\n\\t                return false;\\n\\t            }\\n\\n\\t            if (!(b instanceof BoundingRect)) {\\n\\t                // Normalize negative width/height.\\n\\t                b = BoundingRect.create(b);\\n\\t            }\\n\\n\\t            var a = this;\\n\\t            var ax0 = a.x;\\n\\t            var ax1 = a.x + a.width;\\n\\t            var ay0 = a.y;\\n\\t            var ay1 = a.y + a.height;\\n\\n\\t            var bx0 = b.x;\\n\\t            var bx1 = b.x + b.width;\\n\\t            var by0 = b.y;\\n\\t            var by1 = b.y + b.height;\\n\\n\\t            return ! (ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\\n\\t        },\\n\\n\\t        contain: function (x, y) {\\n\\t            var rect = this;\\n\\t            return x >= rect.x\\n\\t                && x <= (rect.x + rect.width)\\n\\t                && y >= rect.y\\n\\t                && y <= (rect.y + rect.height);\\n\\t        },\\n\\n\\t        /**\\n\\t         * @return {module:echarts/core/BoundingRect}\\n\\t         */\\n\\t        clone: function () {\\n\\t            return new BoundingRect(this.x, this.y, this.width, this.height);\\n\\t        },\\n\\n\\t        /**\\n\\t         * Copy from another rect\\n\\t         */\\n\\t        copy: function (other) {\\n\\t            this.x = other.x;\\n\\t            this.y = other.y;\\n\\t            this.width = other.width;\\n\\t            this.height = other.height;\\n\\t        },\\n\\n\\t        plain: function () {\\n\\t            return {\\n\\t                x: this.x,\\n\\t                y: this.y,\\n\\t                width: this.width,\\n\\t                height: this.height\\n\\t            };\\n\\t        }\\n\\t    };\\n\\n\\t    /**\\n\\t     * @param {Object|module:zrender/core/BoundingRect} rect\\n\\t     * @param {number} rect.x\\n\\t     * @param {number} rect.y\\n\\t     * @param {number} rect.width\\n\\t     * @param {number} rect.height\\n\\t     * @return {module:zrender/core/BoundingRect}\\n\\t     */\\n\\t    BoundingRect.create = function (rect) {\\n\\t        return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\\n\\t    };\\n\\n\\t    module.exports = BoundingRect;\\n\\n\\n/***/ },\\n/* 10 */\\n/***/ function(module, exports) {\\n\\n\\t\\n\\t    var ArrayCtor = typeof Float32Array === 'undefined'\\n\\t        ? Array\\n\\t        : Float32Array;\\n\\n\\t    /**\\n\\t     * @typedef {Float32Array|Array.<number>} Vector2\\n\\t     */\\n\\t    /**\\n\\t     * 二维向量类\\n\\t     * @exports zrender/tool/vector\\n\\t     */\\n\\t    var vector = {\\n\\t        /**\\n\\t         * 创建一个向量\\n\\t         * @param {number} [x=0]\\n\\t         * @param {number} [y=0]\\n\\t         * @return {Vector2}\\n\\t         */\\n\\t        create: function (x, y) {\\n\\t            var out = new ArrayCtor(2);\\n\\t            if (x == null) {\\n\\t                x = 0;\\n\\t            }\\n\\t            if (y == null) {\\n\\t                y = 0;\\n\\t            }\\n\\t            out[0] = x;\\n\\t            out[1] = y;\\n\\t            return out;\\n\\t        },\\n\\n\\t        /**\\n\\t         * 复制向量数据\\n\\t         * @param {Vector2} out\\n\\t         * @param {Vector2} v\\n\\t         * @return {Vector2}\\n\\t         */\\n\\t        copy: function (out, v) {\\n\\t            out[0] = v[0];\\n\\t            out[1] = v[1];\\n\\t            return out;\\n\\t        },\\n\\n\\t        /**\\n\\t         * 克隆一个向量\\n\\t         * @param {Vector2} v\\n\\t         * @return {Vector2}\\n\\t         */\\n\\t        clone: function (v) {\\n\\t            var out = new ArrayCtor(2);\\n\\t            out[0] = v[0];\\n\\t            out[1] = v[1];\\n\\t            return out;\\n\\t        },\\n\\n\\t        /**\\n\\t         * 设置向量的两个项\\n\\t         * @param {Vector2} out\\n\\t         * @param {number} a\\n\\t         * @param {number} b\\n\\t         * @return {Vector2} 结果\\n\\t         */\\n\\t        set: function (out, a, b) {\\n\\t            out[0] = a;\\n\\t            out[1] = b;\\n\\t            return out;\\n\\t        },\\n\\n\\t        /**\\n\\t         * 向量相加\\n\\t         * @param {Vector2} out\\n\\t         * @param {Vector2} v1\\n\\t         * @param {Vector2} v2\\n\\t         */\\n\\t        add: function (out, v1, v2) {\\n\\t            out[0] = v1[0] + v2[0];\\n\\t            out[1] = v1[1] + v2[1];\\n\\t            return out;\\n\\t        },\\n\\n\\t        /**\\n\\t         * 向量缩放后相加\\n\\t         * @param {Vector2} out\\n\\t         * @param {Vector2} v1\\n\\t         * @param {Vector2} v2\\n\\t         * @param {number} a\\n\\t         */\\n\\t        scaleAndAdd: function (out, v1, v2, a) {\\n\\t            out[0] = v1[0] + v2[0] * a;\\n\\t            out[1] = v1[1] + v2[1] * a;\\n\\t            return out;\\n\\t        },\\n\\n\\t        /**\\n\\t         * 向量相减\\n\\t         * @param {Vector2} out\\n\\t         * @param {Vector2} v1\\n\\t         * @param {Vector2} v2\\n\\t         */\\n\\t        sub: function (out, v1, v2) {\\n\\t            out[0] = v1[0] - v2[0];\\n\\t            out[1] = v1[1] - v2[1];\\n\\t            return out;\\n\\t        },\\n\\n\\t        /**\\n\\t         * 向量长度\\n\\t         * @param {Vector2} v\\n\\t         * @return {number}\\n\\t         */\\n\\t        len: function (v) {\\n\\t            return Math.sqrt(this.lenSquare(v));\\n\\t        },\\n\\n\\t        /**\\n\\t         * 向量长度平方\\n\\t         * @param {Vector2} v\\n\\t         * @return {number}\\n\\t         */\\n\\t        lenSquare: function (v) {\\n\\t            return v[0] * v[0] + v[1] * v[1];\\n\\t        },\\n\\n\\t        /**\\n\\t         * 向量乘法\\n\\t         * @param {Vector2} out\\n\\t         * @param {Vector2} v1\\n\\t         * @param {Vector2} v2\\n\\t         */\\n\\t        mul: function (out, v1, v2) {\\n\\t            out[0] = v1[0] * v2[0];\\n\\t            out[1] = v1[1] * v2[1];\\n\\t            return out;\\n\\t        },\\n\\n\\t        /**\\n\\t         * 向量除法\\n\\t         * @param {Vector2} out\\n\\t         * @param {Vector2} v1\\n\\t         * @param {Vector2} v2\\n\\t         */\\n\\t        div: function (out, v1, v2) {\\n\\t            out[0] = v1[0] / v2[0];\\n\\t            out[1] = v1[1] / v2[1];\\n\\t            return out;\\n\\t        },\\n\\n\\t        /**\\n\\t         * 向量点乘\\n\\t         * @param {Vector2} v1\\n\\t         * @param {Vector2} v2\\n\\t         * @return {number}\\n\\t         */\\n\\t        dot: function (v1, v2) {\\n\\t            return v1[0] * v2[0] + v1[1] * v2[1];\\n\\t        },\\n\\n\\t        /**\\n\\t         * 向量缩放\\n\\t         * @param {Vector2} out\\n\\t         * @param {Vector2} v\\n\\t         * @param {number} s\\n\\t         */\\n\\t        scale: function (out, v, s) {\\n\\t            out[0] = v[0] * s;\\n\\t            out[1] = v[1] * s;\\n\\t            return out;\\n\\t        },\\n\\n\\t        /**\\n\\t         * 向量归一化\\n\\t         * @param {Vector2} out\\n\\t         * @param {Vector2} v\\n\\t         */\\n\\t        normalize: function (out, v) {\\n\\t            var d = vector.len(v);\\n\\t            if (d === 0) {\\n\\t                out[0] = 0;\\n\\t                out[1] = 0;\\n\\t            }\\n\\t            else {\\n\\t                out[0] = v[0] / d;\\n\\t                out[1] = v[1] / d;\\n\\t            }\\n\\t            return out;\\n\\t        },\\n\\n\\t        /**\\n\\t         * 计算向量间距离\\n\\t         * @param {Vector2} v1\\n\\t         * @param {Vector2} v2\\n\\t         * @return {number}\\n\\t         */\\n\\t        distance: function (v1, v2) {\\n\\t            return Math.sqrt(\\n\\t                (v1[0] - v2[0]) * (v1[0] - v2[0])\\n\\t                + (v1[1] - v2[1]) * (v1[1] - v2[1])\\n\\t            );\\n\\t        },\\n\\n\\t        /**\\n\\t         * 向量距离平方\\n\\t         * @param {Vector2} v1\\n\\t         * @param {Vector2} v2\\n\\t         * @return {number}\\n\\t         */\\n\\t        distanceSquare: function (v1, v2) {\\n\\t            return (v1[0] - v2[0]) * (v1[0] - v2[0])\\n\\t                + (v1[1] - v2[1]) * (v1[1] - v2[1]);\\n\\t        },\\n\\n\\t        /**\\n\\t         * 求负向量\\n\\t         * @param {Vector2} out\\n\\t         * @param {Vector2} v\\n\\t         */\\n\\t        negate: function (out, v) {\\n\\t            out[0] = -v[0];\\n\\t            out[1] = -v[1];\\n\\t            return out;\\n\\t        },\\n\\n\\t        /**\\n\\t         * 插值两个点\\n\\t         * @param {Vector2} out\\n\\t         * @param {Vector2} v1\\n\\t         * @param {Vector2} v2\\n\\t         * @param {number} t\\n\\t         */\\n\\t        lerp: function (out, v1, v2, t) {\\n\\t            out[0] = v1[0] + t * (v2[0] - v1[0]);\\n\\t            out[1] = v1[1] + t * (v2[1] - v1[1]);\\n\\t            return out;\\n\\t        },\\n\\n\\t        /**\\n\\t         * 矩阵左乘向量\\n\\t         * @param {Vector2} out\\n\\t         * @param {Vector2} v\\n\\t         * @param {Vector2} m\\n\\t         */\\n\\t        applyTransform: function (out, v, m) {\\n\\t            var x = v[0];\\n\\t            var y = v[1];\\n\\t            out[0] = m[0] * x + m[2] * y + m[4];\\n\\t            out[1] = m[1] * x + m[3] * y + m[5];\\n\\t            return out;\\n\\t        },\\n\\t        /**\\n\\t         * 求两个向量最小值\\n\\t         * @param  {Vector2} out\\n\\t         * @param  {Vector2} v1\\n\\t         * @param  {Vector2} v2\\n\\t         */\\n\\t        min: function (out, v1, v2) {\\n\\t            out[0] = Math.min(v1[0], v2[0]);\\n\\t            out[1] = Math.min(v1[1], v2[1]);\\n\\t            return out;\\n\\t        },\\n\\t        /**\\n\\t         * 求两个向量最大值\\n\\t         * @param  {Vector2} out\\n\\t         * @param  {Vector2} v1\\n\\t         * @param  {Vector2} v2\\n\\t         */\\n\\t        max: function (out, v1, v2) {\\n\\t            out[0] = Math.max(v1[0], v2[0]);\\n\\t            out[1] = Math.max(v1[1], v2[1]);\\n\\t            return out;\\n\\t        }\\n\\t    };\\n\\n\\t    vector.length = vector.len;\\n\\t    vector.lengthSquare = vector.lenSquare;\\n\\t    vector.dist = vector.distance;\\n\\t    vector.distSquare = vector.distanceSquare;\\n\\n\\t    module.exports = vector;\\n\\n\\n\\n/***/ },\\n/* 11 */\\n/***/ function(module, exports) {\\n\\n\\t\\n\\t    var ArrayCtor = typeof Float32Array === 'undefined'\\n\\t        ? Array\\n\\t        : Float32Array;\\n\\t    /**\\n\\t     * 3x2矩阵操作类\\n\\t     * @exports zrender/tool/matrix\\n\\t     */\\n\\t    var matrix = {\\n\\t        /**\\n\\t         * 创建一个单位矩阵\\n\\t         * @return {Float32Array|Array.<number>}\\n\\t         */\\n\\t        create : function() {\\n\\t            var out = new ArrayCtor(6);\\n\\t            matrix.identity(out);\\n\\n\\t            return out;\\n\\t        },\\n\\t        /**\\n\\t         * 设置矩阵为单位矩阵\\n\\t         * @param {Float32Array|Array.<number>} out\\n\\t         */\\n\\t        identity : function(out) {\\n\\t            out[0] = 1;\\n\\t            out[1] = 0;\\n\\t            out[2] = 0;\\n\\t            out[3] = 1;\\n\\t            out[4] = 0;\\n\\t            out[5] = 0;\\n\\t            return out;\\n\\t        },\\n\\t        /**\\n\\t         * 复制矩阵\\n\\t         * @param {Float32Array|Array.<number>} out\\n\\t         * @param {Float32Array|Array.<number>} m\\n\\t         */\\n\\t        copy: function(out, m) {\\n\\t            out[0] = m[0];\\n\\t            out[1] = m[1];\\n\\t            out[2] = m[2];\\n\\t            out[3] = m[3];\\n\\t            out[4] = m[4];\\n\\t            out[5] = m[5];\\n\\t            return out;\\n\\t        },\\n\\t        /**\\n\\t         * 矩阵相乘\\n\\t         * @param {Float32Array|Array.<number>} out\\n\\t         * @param {Float32Array|Array.<number>} m1\\n\\t         * @param {Float32Array|Array.<number>} m2\\n\\t         */\\n\\t        mul : function (out, m1, m2) {\\n\\t            // Consider matrix.mul(m, m2, m);\\n\\t            // where out is the same as m2.\\n\\t            // So use temp variable to escape error.\\n\\t            var out0 = m1[0] * m2[0] + m1[2] * m2[1];\\n\\t            var out1 = m1[1] * m2[0] + m1[3] * m2[1];\\n\\t            var out2 = m1[0] * m2[2] + m1[2] * m2[3];\\n\\t            var out3 = m1[1] * m2[2] + m1[3] * m2[3];\\n\\t            var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\\n\\t            var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\\n\\t            out[0] = out0;\\n\\t            out[1] = out1;\\n\\t            out[2] = out2;\\n\\t            out[3] = out3;\\n\\t            out[4] = out4;\\n\\t            out[5] = out5;\\n\\t            return out;\\n\\t        },\\n\\t        /**\\n\\t         * 平移变换\\n\\t         * @param {Float32Array|Array.<number>} out\\n\\t         * @param {Float32Array|Array.<number>} a\\n\\t         * @param {Float32Array|Array.<number>} v\\n\\t         */\\n\\t        translate : function(out, a, v) {\\n\\t            out[0] = a[0];\\n\\t            out[1] = a[1];\\n\\t            out[2] = a[2];\\n\\t            out[3] = a[3];\\n\\t            out[4] = a[4] + v[0];\\n\\t            out[5] = a[5] + v[1];\\n\\t            return out;\\n\\t        },\\n\\t        /**\\n\\t         * 旋转变换\\n\\t         * @param {Float32Array|Array.<number>} out\\n\\t         * @param {Float32Array|Array.<number>} a\\n\\t         * @param {number} rad\\n\\t         */\\n\\t        rotate : function(out, a, rad) {\\n\\t            var aa = a[0];\\n\\t            var ac = a[2];\\n\\t            var atx = a[4];\\n\\t            var ab = a[1];\\n\\t            var ad = a[3];\\n\\t            var aty = a[5];\\n\\t            var st = Math.sin(rad);\\n\\t            var ct = Math.cos(rad);\\n\\n\\t            out[0] = aa * ct + ab * st;\\n\\t            out[1] = -aa * st + ab * ct;\\n\\t            out[2] = ac * ct + ad * st;\\n\\t            out[3] = -ac * st + ct * ad;\\n\\t            out[4] = ct * atx + st * aty;\\n\\t            out[5] = ct * aty - st * atx;\\n\\t            return out;\\n\\t        },\\n\\t        /**\\n\\t         * 缩放变换\\n\\t         * @param {Float32Array|Array.<number>} out\\n\\t         * @param {Float32Array|Array.<number>} a\\n\\t         * @param {Float32Array|Array.<number>} v\\n\\t         */\\n\\t        scale : function(out, a, v) {\\n\\t            var vx = v[0];\\n\\t            var vy = v[1];\\n\\t            out[0] = a[0] * vx;\\n\\t            out[1] = a[1] * vy;\\n\\t            out[2] = a[2] * vx;\\n\\t            out[3] = a[3] * vy;\\n\\t            out[4] = a[4] * vx;\\n\\t            out[5] = a[5] * vy;\\n\\t            return out;\\n\\t        },\\n\\t        /**\\n\\t         * 求逆矩阵\\n\\t         * @param {Float32Array|Array.<number>} out\\n\\t         * @param {Float32Array|Array.<number>} a\\n\\t         */\\n\\t        invert : function(out, a) {\\n\\n\\t            var aa = a[0];\\n\\t            var ac = a[2];\\n\\t            var atx = a[4];\\n\\t            var ab = a[1];\\n\\t            var ad = a[3];\\n\\t            var aty = a[5];\\n\\n\\t            var det = aa * ad - ab * ac;\\n\\t            if (!det) {\\n\\t                return null;\\n\\t            }\\n\\t            det = 1.0 / det;\\n\\n\\t            out[0] = ad * det;\\n\\t            out[1] = -ab * det;\\n\\t            out[2] = -ac * det;\\n\\t            out[3] = aa * det;\\n\\t            out[4] = (ac * aty - ad * atx) * det;\\n\\t            out[5] = (ab * atx - aa * aty) * det;\\n\\t            return out;\\n\\t        }\\n\\t    };\\n\\n\\t    module.exports = matrix;\\n\\n\\n\\n/***/ },\\n/* 12 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * @module echarts/model/Model\\n\\t */\\n\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var clazzUtil = __webpack_require__(13);\\n\\t    var env = __webpack_require__(2);\\n\\n\\t    /**\\n\\t     * @alias module:echarts/model/Model\\n\\t     * @constructor\\n\\t     * @param {Object} option\\n\\t     * @param {module:echarts/model/Model} [parentModel]\\n\\t     * @param {module:echarts/model/Global} [ecModel]\\n\\t     */\\n\\t    function Model(option, parentModel, ecModel) {\\n\\t        /**\\n\\t         * @type {module:echarts/model/Model}\\n\\t         * @readOnly\\n\\t         */\\n\\t        this.parentModel = parentModel;\\n\\n\\t        /**\\n\\t         * @type {module:echarts/model/Global}\\n\\t         * @readOnly\\n\\t         */\\n\\t        this.ecModel = ecModel;\\n\\n\\t        /**\\n\\t         * @type {Object}\\n\\t         * @protected\\n\\t         */\\n\\t        this.option = option;\\n\\n\\t        // Simple optimization\\n\\t        // if (this.init) {\\n\\t        //     if (arguments.length <= 4) {\\n\\t        //         this.init(option, parentModel, ecModel, extraOpt);\\n\\t        //     }\\n\\t        //     else {\\n\\t        //         this.init.apply(this, arguments);\\n\\t        //     }\\n\\t        // }\\n\\t    }\\n\\n\\t    Model.prototype = {\\n\\n\\t        constructor: Model,\\n\\n\\t        /**\\n\\t         * Model 的初始化函数\\n\\t         * @param {Object} option\\n\\t         */\\n\\t        init: null,\\n\\n\\t        /**\\n\\t         * 从新的 Option merge\\n\\t         */\\n\\t        mergeOption: function (option) {\\n\\t            zrUtil.merge(this.option, option, true);\\n\\t        },\\n\\n\\t        /**\\n\\t         * @param {string|Array.<string>} path\\n\\t         * @param {boolean} [ignoreParent=false]\\n\\t         * @return {*}\\n\\t         */\\n\\t        get: function (path, ignoreParent) {\\n\\t            if (path == null) {\\n\\t                return this.option;\\n\\t            }\\n\\n\\t            return doGet(\\n\\t                this.option,\\n\\t                this.parsePath(path),\\n\\t                !ignoreParent && getParent(this, path)\\n\\t            );\\n\\t        },\\n\\n\\t        /**\\n\\t         * @param {string} key\\n\\t         * @param {boolean} [ignoreParent=false]\\n\\t         * @return {*}\\n\\t         */\\n\\t        getShallow: function (key, ignoreParent) {\\n\\t            var option = this.option;\\n\\n\\t            var val = option == null ? option : option[key];\\n\\t            var parentModel = !ignoreParent && getParent(this, key);\\n\\t            if (val == null && parentModel) {\\n\\t                val = parentModel.getShallow(key);\\n\\t            }\\n\\t            return val;\\n\\t        },\\n\\n\\t        /**\\n\\t         * @param {string|Array.<string>} [path]\\n\\t         * @param {module:echarts/model/Model} [parentModel]\\n\\t         * @return {module:echarts/model/Model}\\n\\t         */\\n\\t        getModel: function (path, parentModel) {\\n\\t            var obj = path == null\\n\\t                ? this.option\\n\\t                : doGet(this.option, path = this.parsePath(path));\\n\\n\\t            var thisParentModel;\\n\\t            parentModel = parentModel || (\\n\\t                (thisParentModel = getParent(this, path))\\n\\t                    && thisParentModel.getModel(path)\\n\\t            );\\n\\n\\t            return new Model(obj, parentModel, this.ecModel);\\n\\t        },\\n\\n\\t        /**\\n\\t         * If model has option\\n\\t         */\\n\\t        isEmpty: function () {\\n\\t            return this.option == null;\\n\\t        },\\n\\n\\t        restoreData: function () {},\\n\\n\\t        // Pending\\n\\t        clone: function () {\\n\\t            var Ctor = this.constructor;\\n\\t            return new Ctor(zrUtil.clone(this.option));\\n\\t        },\\n\\n\\t        setReadOnly: function (properties) {\\n\\t            clazzUtil.setReadOnly(this, properties);\\n\\t        },\\n\\n\\t        // If path is null/undefined, return null/undefined.\\n\\t        parsePath: function(path) {\\n\\t            if (typeof path === 'string') {\\n\\t                path = path.split('.');\\n\\t            }\\n\\t            return path;\\n\\t        },\\n\\n\\t        /**\\n\\t         * @param {Function} getParentMethod\\n\\t         *        param {Array.<string>|string} path\\n\\t         *        return {module:echarts/model/Model}\\n\\t         */\\n\\t        customizeGetParent: function (getParentMethod) {\\n\\t            clazzUtil.set(this, 'getParent', getParentMethod);\\n\\t        },\\n\\n\\t        isAnimationEnabled: function () {\\n\\t            if (!env.node) {\\n\\t                if (this.option.animation != null) {\\n\\t                    return !!this.option.animation;\\n\\t                }\\n\\t                else if (this.parentModel) {\\n\\t                    return this.parentModel.isAnimationEnabled();\\n\\t                }\\n\\t            }\\n\\t        }\\n\\t    };\\n\\n\\t    function doGet(obj, pathArr, parentModel) {\\n\\t        for (var i = 0; i < pathArr.length; i++) {\\n\\t            // Ignore empty\\n\\t            if (!pathArr[i]) {\\n\\t                continue;\\n\\t            }\\n\\t            // obj could be number/string/... (like 0)\\n\\t            obj = (obj && typeof obj === 'object') ? obj[pathArr[i]] : null;\\n\\t            if (obj == null) {\\n\\t                break;\\n\\t            }\\n\\t        }\\n\\t        if (obj == null && parentModel) {\\n\\t            obj = parentModel.get(pathArr);\\n\\t        }\\n\\t        return obj;\\n\\t    }\\n\\n\\t    // `path` can be null/undefined\\n\\t    function getParent(model, path) {\\n\\t        var getParentMethod = clazzUtil.get(model, 'getParent');\\n\\t        return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\\n\\t    }\\n\\n\\t    // Enable Model.extend.\\n\\t    clazzUtil.enableClassExtend(Model);\\n\\n\\t    var mixin = zrUtil.mixin;\\n\\t    mixin(Model, __webpack_require__(14));\\n\\t    mixin(Model, __webpack_require__(16));\\n\\t    mixin(Model, __webpack_require__(17));\\n\\t    mixin(Model, __webpack_require__(68));\\n\\n\\t    module.exports = Model;\\n\\n\\n/***/ },\\n/* 13 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\n\\t    var clazz = {};\\n\\n\\t    var TYPE_DELIMITER = '.';\\n\\t    var IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\\n\\t    var MEMBER_PRIFIX = '\\\\0ec_\\\\0';\\n\\n\\t    /**\\n\\t     * Hide private class member.\\n\\t     * The same behavior as `host[name] = value;` (can be right-value)\\n\\t     * @public\\n\\t     */\\n\\t    clazz.set = function (host, name, value) {\\n\\t        return (host[MEMBER_PRIFIX + name] = value);\\n\\t    };\\n\\n\\t    /**\\n\\t     * Hide private class member.\\n\\t     * The same behavior as `host[name];`\\n\\t     * @public\\n\\t     */\\n\\t    clazz.get = function (host, name) {\\n\\t        return host[MEMBER_PRIFIX + name];\\n\\t    };\\n\\n\\t    /**\\n\\t     * For hidden private class member.\\n\\t     * The same behavior as `host.hasOwnProperty(name);`\\n\\t     * @public\\n\\t     */\\n\\t    clazz.hasOwn = function (host, name) {\\n\\t        return host.hasOwnProperty(MEMBER_PRIFIX + name);\\n\\t    };\\n\\n\\t    /**\\n\\t     * Notice, parseClassType('') should returns {main: '', sub: ''}\\n\\t     * @public\\n\\t     */\\n\\t    var parseClassType = clazz.parseClassType = function (componentType) {\\n\\t        var ret = {main: '', sub: ''};\\n\\t        if (componentType) {\\n\\t            componentType = componentType.split(TYPE_DELIMITER);\\n\\t            ret.main = componentType[0] || '';\\n\\t            ret.sub = componentType[1] || '';\\n\\t        }\\n\\t        return ret;\\n\\t    };\\n\\n\\t    /**\\n\\t     * @public\\n\\t     */\\n\\t    function checkClassType(componentType) {\\n\\t        zrUtil.assert(\\n\\t            /^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType),\\n\\t            'componentType \\\"' + componentType + '\\\" illegal'\\n\\t        );\\n\\t    }\\n\\n\\t    /**\\n\\t     * @public\\n\\t     */\\n\\t    clazz.enableClassExtend = function (RootClass, mandatoryMethods) {\\n\\n\\t        RootClass.$constructor = RootClass;\\n\\t        RootClass.extend = function (proto) {\\n\\n\\t            if (true) {\\n\\t                zrUtil.each(mandatoryMethods, function (method) {\\n\\t                    if (!proto[method]) {\\n\\t                        console.warn(\\n\\t                            'Method `' + method + '` should be implemented'\\n\\t                            + (proto.type ? ' in ' + proto.type : '') + '.'\\n\\t                        );\\n\\t                    }\\n\\t                });\\n\\t            }\\n\\n\\t            var superClass = this;\\n\\t            var ExtendedClass = function () {\\n\\t                if (!proto.$constructor) {\\n\\t                    superClass.apply(this, arguments);\\n\\t                }\\n\\t                else {\\n\\t                    proto.$constructor.apply(this, arguments);\\n\\t                }\\n\\t            };\\n\\n\\t            zrUtil.extend(ExtendedClass.prototype, proto);\\n\\n\\t            ExtendedClass.extend = this.extend;\\n\\t            ExtendedClass.superCall = superCall;\\n\\t            ExtendedClass.superApply = superApply;\\n\\t            zrUtil.inherits(ExtendedClass, this);\\n\\t            ExtendedClass.superClass = superClass;\\n\\n\\t            return ExtendedClass;\\n\\t        };\\n\\t    };\\n\\n\\t    // superCall should have class info, which can not be fetch from 'this'.\\n\\t    // Consider this case:\\n\\t    // class A has method f,\\n\\t    // class B inherits class A, overrides method f, f call superApply('f'),\\n\\t    // class C inherits class B, do not overrides method f,\\n\\t    // then when method of class C is called, dead loop occured.\\n\\t    function superCall(context, methodName) {\\n\\t        var args = zrUtil.slice(arguments, 2);\\n\\t        return this.superClass.prototype[methodName].apply(context, args);\\n\\t    }\\n\\n\\t    function superApply(context, methodName, args) {\\n\\t        return this.superClass.prototype[methodName].apply(context, args);\\n\\t    }\\n\\n\\t    /**\\n\\t     * @param {Object} entity\\n\\t     * @param {Object} options\\n\\t     * @param {boolean} [options.registerWhenExtend]\\n\\t     * @public\\n\\t     */\\n\\t    clazz.enableClassManagement = function (entity, options) {\\n\\t        options = options || {};\\n\\n\\t        /**\\n\\t         * Component model classes\\n\\t         * key: componentType,\\n\\t         * value:\\n\\t         *     componentClass, when componentType is 'xxx'\\n\\t         *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\\n\\t         * @type {Object}\\n\\t         */\\n\\t        var storage = {};\\n\\n\\t        entity.registerClass = function (Clazz, componentType) {\\n\\t            if (componentType) {\\n\\t                checkClassType(componentType);\\n\\t                componentType = parseClassType(componentType);\\n\\n\\t                if (!componentType.sub) {\\n\\t                    if (true) {\\n\\t                        if (storage[componentType.main]) {\\n\\t                            console.warn(componentType.main + ' exists.');\\n\\t                        }\\n\\t                    }\\n\\t                    storage[componentType.main] = Clazz;\\n\\t                }\\n\\t                else if (componentType.sub !== IS_CONTAINER) {\\n\\t                    var container = makeContainer(componentType);\\n\\t                    container[componentType.sub] = Clazz;\\n\\t                }\\n\\t            }\\n\\t            return Clazz;\\n\\t        };\\n\\n\\t        entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\\n\\t            var Clazz = storage[componentMainType];\\n\\n\\t            if (Clazz && Clazz[IS_CONTAINER]) {\\n\\t                Clazz = subType ? Clazz[subType] : null;\\n\\t            }\\n\\n\\t            if (throwWhenNotFound && !Clazz) {\\n\\t                throw new Error(\\n\\t                    !subType\\n\\t                        ? componentMainType + '.' + 'type should be specified.'\\n\\t                        : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.'\\n\\t                );\\n\\t            }\\n\\n\\t            return Clazz;\\n\\t        };\\n\\n\\t        entity.getClassesByMainType = function (componentType) {\\n\\t            componentType = parseClassType(componentType);\\n\\n\\t            var result = [];\\n\\t            var obj = storage[componentType.main];\\n\\n\\t            if (obj && obj[IS_CONTAINER]) {\\n\\t                zrUtil.each(obj, function (o, type) {\\n\\t                    type !== IS_CONTAINER && result.push(o);\\n\\t                });\\n\\t            }\\n\\t            else {\\n\\t                result.push(obj);\\n\\t            }\\n\\n\\t            return result;\\n\\t        };\\n\\n\\t        entity.hasClass = function (componentType) {\\n\\t            // Just consider componentType.main.\\n\\t            componentType = parseClassType(componentType);\\n\\t            return !!storage[componentType.main];\\n\\t        };\\n\\n\\t        /**\\n\\t         * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\\n\\t         */\\n\\t        entity.getAllClassMainTypes = function () {\\n\\t            var types = [];\\n\\t            zrUtil.each(storage, function (obj, type) {\\n\\t                types.push(type);\\n\\t            });\\n\\t            return types;\\n\\t        };\\n\\n\\t        /**\\n\\t         * If a main type is container and has sub types\\n\\t         * @param  {string}  mainType\\n\\t         * @return {boolean}\\n\\t         */\\n\\t        entity.hasSubTypes = function (componentType) {\\n\\t            componentType = parseClassType(componentType);\\n\\t            var obj = storage[componentType.main];\\n\\t            return obj && obj[IS_CONTAINER];\\n\\t        };\\n\\n\\t        entity.parseClassType = parseClassType;\\n\\n\\t        function makeContainer(componentType) {\\n\\t            var container = storage[componentType.main];\\n\\t            if (!container || !container[IS_CONTAINER]) {\\n\\t                container = storage[componentType.main] = {};\\n\\t                container[IS_CONTAINER] = true;\\n\\t            }\\n\\t            return container;\\n\\t        }\\n\\n\\t        if (options.registerWhenExtend) {\\n\\t            var originalExtend = entity.extend;\\n\\t            if (originalExtend) {\\n\\t                entity.extend = function (proto) {\\n\\t                    var ExtendedClass = originalExtend.call(this, proto);\\n\\t                    return entity.registerClass(ExtendedClass, proto.type);\\n\\t                };\\n\\t            }\\n\\t        }\\n\\n\\t        return entity;\\n\\t    };\\n\\n\\t    /**\\n\\t     * @param {string|Array.<string>} properties\\n\\t     */\\n\\t    clazz.setReadOnly = function (obj, properties) {\\n\\t        // FIXME It seems broken in IE8 simulation of IE11\\n\\t        // if (!zrUtil.isArray(properties)) {\\n\\t        //     properties = properties != null ? [properties] : [];\\n\\t        // }\\n\\t        // zrUtil.each(properties, function (prop) {\\n\\t        //     var value = obj[prop];\\n\\n\\t        //     Object.defineProperty\\n\\t        //         && Object.defineProperty(obj, prop, {\\n\\t        //             value: value, writable: false\\n\\t        //         });\\n\\t        //     zrUtil.isArray(obj[prop])\\n\\t        //         && Object.freeze\\n\\t        //         && Object.freeze(obj[prop]);\\n\\t        // });\\n\\t    };\\n\\n\\t    module.exports = clazz;\\n\\n\\n/***/ },\\n/* 14 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\t    var getLineStyle = __webpack_require__(15)(\\n\\t        [\\n\\t            ['lineWidth', 'width'],\\n\\t            ['stroke', 'color'],\\n\\t            ['opacity'],\\n\\t            ['shadowBlur'],\\n\\t            ['shadowOffsetX'],\\n\\t            ['shadowOffsetY'],\\n\\t            ['shadowColor']\\n\\t        ]\\n\\t    );\\n\\t    module.exports = {\\n\\t        getLineStyle: function (excludes) {\\n\\t            var style = getLineStyle.call(this, excludes);\\n\\t            var lineDash = this.getLineDash(style.lineWidth);\\n\\t            lineDash && (style.lineDash = lineDash);\\n\\t            return style;\\n\\t        },\\n\\n\\t        getLineDash: function (lineWidth) {\\n\\t            if (lineWidth == null) {\\n\\t                lineWidth = 1;\\n\\t            }\\n\\t            var lineType = this.get('type');\\n\\t            var dotSize = Math.max(lineWidth, 2);\\n\\t            var dashSize = lineWidth * 4;\\n\\t            return (lineType === 'solid' || lineType == null) ? null\\n\\t                : (lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize]);\\n\\t        }\\n\\t    };\\n\\n\\n/***/ },\\n/* 15 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t// TODO Parse shadow style\\n\\t// TODO Only shallow path support\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\n\\t    module.exports = function (properties) {\\n\\t        // Normalize\\n\\t        for (var i = 0; i < properties.length; i++) {\\n\\t            if (!properties[i][1]) {\\n\\t               properties[i][1] = properties[i][0];\\n\\t            }\\n\\t        }\\n\\t        return function (excludes, includes) {\\n\\t            var style = {};\\n\\t            for (var i = 0; i < properties.length; i++) {\\n\\t                var propName = properties[i][1];\\n\\t                if ((excludes && zrUtil.indexOf(excludes, propName) >= 0)\\n\\t                    || (includes && zrUtil.indexOf(includes, propName) < 0)\\n\\t                ) {\\n\\t                    continue;\\n\\t                }\\n\\t                var val = this.getShallow(propName);\\n\\t                if (val != null) {\\n\\t                    style[properties[i][0]] = val;\\n\\t                }\\n\\t            }\\n\\t            return style;\\n\\t        };\\n\\t    };\\n\\n\\n/***/ },\\n/* 16 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\t    module.exports = {\\n\\t        getAreaStyle: __webpack_require__(15)(\\n\\t            [\\n\\t                ['fill', 'color'],\\n\\t                ['shadowBlur'],\\n\\t                ['shadowOffsetX'],\\n\\t                ['shadowOffsetY'],\\n\\t                ['opacity'],\\n\\t                ['shadowColor']\\n\\t            ]\\n\\t        )\\n\\t    };\\n\\n\\n/***/ },\\n/* 17 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var textContain = __webpack_require__(8);\\n\\t    var graphicUtil = __webpack_require__(18);\\n\\n\\t    module.exports = {\\n\\t        /**\\n\\t         * Get color property or get color from option.textStyle.color\\n\\t         * @return {string}\\n\\t         */\\n\\t        getTextColor: function () {\\n\\t            var ecModel = this.ecModel;\\n\\t            return this.getShallow('color')\\n\\t                || (ecModel && ecModel.get('textStyle.color'));\\n\\t        },\\n\\n\\t        /**\\n\\t         * Create font string from fontStyle, fontWeight, fontSize, fontFamily\\n\\t         * @return {string}\\n\\t         */\\n\\t        getFont: function () {\\n\\t            return graphicUtil.getFont({\\n\\t                fontStyle: this.getShallow('fontStyle'),\\n\\t                fontWeight: this.getShallow('fontWeight'),\\n\\t                fontSize: this.getShallow('fontSize'),\\n\\t                fontFamily: this.getShallow('fontFamily')\\n\\t            }, this.ecModel);\\n\\t        },\\n\\n\\t        getTextRect: function (text) {\\n\\t            return textContain.getBoundingRect(\\n\\t                text,\\n\\t                this.getFont(),\\n\\t                this.getShallow('align'),\\n\\t                this.getShallow('baseline')\\n\\t            );\\n\\t        },\\n\\n\\t        truncateText: function (text, containerWidth, ellipsis, options) {\\n\\t            return textContain.truncateText(\\n\\t                text, containerWidth, this.getFont(), ellipsis, options\\n\\t            );\\n\\t        }\\n\\t    };\\n\\n\\n/***/ },\\n/* 18 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t'use strict';\\n\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\n\\t    var pathTool = __webpack_require__(19);\\n\\t    var Path = __webpack_require__(20);\\n\\t    var colorTool = __webpack_require__(31);\\n\\t    var matrix = __webpack_require__(11);\\n\\t    var vector = __webpack_require__(10);\\n\\t    var Transformable = __webpack_require__(26);\\n\\t    var BoundingRect = __webpack_require__(9);\\n\\n\\t    var round = Math.round;\\n\\t    var mathMax = Math.max;\\n\\t    var mathMin = Math.min;\\n\\n\\t    var graphic = {};\\n\\n\\t    graphic.Group = __webpack_require__(48);\\n\\n\\t    graphic.Image = __webpack_require__(49);\\n\\n\\t    graphic.Text = __webpack_require__(50);\\n\\n\\t    graphic.Circle = __webpack_require__(51);\\n\\n\\t    graphic.Sector = __webpack_require__(52);\\n\\n\\t    graphic.Ring = __webpack_require__(53);\\n\\n\\t    graphic.Polygon = __webpack_require__(54);\\n\\n\\t    graphic.Polyline = __webpack_require__(58);\\n\\n\\t    graphic.Rect = __webpack_require__(59);\\n\\n\\t    graphic.Line = __webpack_require__(61);\\n\\n\\t    graphic.BezierCurve = __webpack_require__(62);\\n\\n\\t    graphic.Arc = __webpack_require__(63);\\n\\n\\t    graphic.CompoundPath = __webpack_require__(64);\\n\\n\\t    graphic.LinearGradient = __webpack_require__(65);\\n\\n\\t    graphic.RadialGradient = __webpack_require__(67);\\n\\n\\t    graphic.BoundingRect = BoundingRect;\\n\\n\\t    /**\\n\\t     * Extend shape with parameters\\n\\t     */\\n\\t    graphic.extendShape = function (opts) {\\n\\t        return Path.extend(opts);\\n\\t    };\\n\\n\\t    /**\\n\\t     * Extend path\\n\\t     */\\n\\t    graphic.extendPath = function (pathData, opts) {\\n\\t        return pathTool.extendFromString(pathData, opts);\\n\\t    };\\n\\n\\t    /**\\n\\t     * Create a path element from path data string\\n\\t     * @param {string} pathData\\n\\t     * @param {Object} opts\\n\\t     * @param {module:zrender/core/BoundingRect} rect\\n\\t     * @param {string} [layout=cover] 'center' or 'cover'\\n\\t     */\\n\\t    graphic.makePath = function (pathData, opts, rect, layout) {\\n\\t        var path = pathTool.createFromString(pathData, opts);\\n\\t        var boundingRect = path.getBoundingRect();\\n\\t        if (rect) {\\n\\t            var aspect = boundingRect.width / boundingRect.height;\\n\\n\\t            if (layout === 'center') {\\n\\t                // Set rect to center, keep width / height ratio.\\n\\t                var width = rect.height * aspect;\\n\\t                var height;\\n\\t                if (width <= rect.width) {\\n\\t                    height = rect.height;\\n\\t                }\\n\\t                else {\\n\\t                    width = rect.width;\\n\\t                    height = width / aspect;\\n\\t                }\\n\\t                var cx = rect.x + rect.width / 2;\\n\\t                var cy = rect.y + rect.height / 2;\\n\\n\\t                rect.x = cx - width / 2;\\n\\t                rect.y = cy - height / 2;\\n\\t                rect.width = width;\\n\\t                rect.height = height;\\n\\t            }\\n\\n\\t            graphic.resizePath(path, rect);\\n\\t        }\\n\\t        return path;\\n\\t    };\\n\\n\\t    graphic.mergePath = pathTool.mergePath,\\n\\n\\t    /**\\n\\t     * Resize a path to fit the rect\\n\\t     * @param {module:zrender/graphic/Path} path\\n\\t     * @param {Object} rect\\n\\t     */\\n\\t    graphic.resizePath = function (path, rect) {\\n\\t        if (!path.applyTransform) {\\n\\t            return;\\n\\t        }\\n\\n\\t        var pathRect = path.getBoundingRect();\\n\\n\\t        var m = pathRect.calculateTransform(rect);\\n\\n\\t        path.applyTransform(m);\\n\\t    };\\n\\n\\t    /**\\n\\t     * Sub pixel optimize line for canvas\\n\\t     *\\n\\t     * @param {Object} param\\n\\t     * @param {Object} [param.shape]\\n\\t     * @param {number} [param.shape.x1]\\n\\t     * @param {number} [param.shape.y1]\\n\\t     * @param {number} [param.shape.x2]\\n\\t     * @param {number} [param.shape.y2]\\n\\t     * @param {Object} [param.style]\\n\\t     * @param {number} [param.style.lineWidth]\\n\\t     * @return {Object} Modified param\\n\\t     */\\n\\t    graphic.subPixelOptimizeLine = function (param) {\\n\\t        var subPixelOptimize = graphic.subPixelOptimize;\\n\\t        var shape = param.shape;\\n\\t        var lineWidth = param.style.lineWidth;\\n\\n\\t        if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\\n\\t            shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\\n\\t        }\\n\\t        if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\\n\\t            shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\\n\\t        }\\n\\t        return param;\\n\\t    };\\n\\n\\t    /**\\n\\t     * Sub pixel optimize rect for canvas\\n\\t     *\\n\\t     * @param {Object} param\\n\\t     * @param {Object} [param.shape]\\n\\t     * @param {number} [param.shape.x]\\n\\t     * @param {number} [param.shape.y]\\n\\t     * @param {number} [param.shape.width]\\n\\t     * @param {number} [param.shape.height]\\n\\t     * @param {Object} [param.style]\\n\\t     * @param {number} [param.style.lineWidth]\\n\\t     * @return {Object} Modified param\\n\\t     */\\n\\t    graphic.subPixelOptimizeRect = function (param) {\\n\\t        var subPixelOptimize = graphic.subPixelOptimize;\\n\\t        var shape = param.shape;\\n\\t        var lineWidth = param.style.lineWidth;\\n\\t        var originX = shape.x;\\n\\t        var originY = shape.y;\\n\\t        var originWidth = shape.width;\\n\\t        var originHeight = shape.height;\\n\\t        shape.x = subPixelOptimize(shape.x, lineWidth, true);\\n\\t        shape.y = subPixelOptimize(shape.y, lineWidth, true);\\n\\t        shape.width = Math.max(\\n\\t            subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x,\\n\\t            originWidth === 0 ? 0 : 1\\n\\t        );\\n\\t        shape.height = Math.max(\\n\\t            subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y,\\n\\t            originHeight === 0 ? 0 : 1\\n\\t        );\\n\\t        return param;\\n\\t    };\\n\\n\\t    /**\\n\\t     * Sub pixel optimize for canvas\\n\\t     *\\n\\t     * @param {number} position Coordinate, such as x, y\\n\\t     * @param {number} lineWidth Should be nonnegative integer.\\n\\t     * @param {boolean=} positiveOrNegative Default false (negative).\\n\\t     * @return {number} Optimized position.\\n\\t     */\\n\\t    graphic.subPixelOptimize = function (position, lineWidth, positiveOrNegative) {\\n\\t        // Assure that (position + lineWidth / 2) is near integer edge,\\n\\t        // otherwise line will be fuzzy in canvas.\\n\\t        var doubledPosition = round(position * 2);\\n\\t        return (doubledPosition + round(lineWidth)) % 2 === 0\\n\\t            ? doubledPosition / 2\\n\\t            : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\\n\\t    };\\n\\n\\t    function hasFillOrStroke(fillOrStroke) {\\n\\t        return fillOrStroke != null && fillOrStroke != 'none';\\n\\t    }\\n\\n\\t    function liftColor(color) {\\n\\t        return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\\n\\t    }\\n\\n\\t    /**\\n\\t     * @private\\n\\t     */\\n\\t    function cacheElementStl(el) {\\n\\t        if (el.__hoverStlDirty) {\\n\\t            var stroke = el.style.stroke;\\n\\t            var fill = el.style.fill;\\n\\n\\t            // Create hoverStyle on mouseover\\n\\t            var hoverStyle = el.__hoverStl;\\n\\t            hoverStyle.fill = hoverStyle.fill\\n\\t                || (hasFillOrStroke(fill) ? liftColor(fill) : null);\\n\\t            hoverStyle.stroke = hoverStyle.stroke\\n\\t                || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\\n\\n\\t            var normalStyle = {};\\n\\t            for (var name in hoverStyle) {\\n\\t                if (hoverStyle.hasOwnProperty(name)) {\\n\\t                    normalStyle[name] = el.style[name];\\n\\t                }\\n\\t            }\\n\\n\\t            el.__normalStl = normalStyle;\\n\\n\\t            el.__hoverStlDirty = false;\\n\\t        }\\n\\t    }\\n\\n\\t    /**\\n\\t     * @private\\n\\t     */\\n\\t    function doSingleEnterHover(el) {\\n\\t        if (el.__isHover) {\\n\\t            return;\\n\\t        }\\n\\n\\t        cacheElementStl(el);\\n\\n\\t        if (el.useHoverLayer) {\\n\\t            el.__zr && el.__zr.addHover(el, el.__hoverStl);\\n\\t        }\\n\\t        else {\\n\\t            el.setStyle(el.__hoverStl);\\n\\t            el.z2 += 1;\\n\\t        }\\n\\n\\t        el.__isHover = true;\\n\\t    }\\n\\n\\t    /**\\n\\t     * @inner\\n\\t     */\\n\\t    function doSingleLeaveHover(el) {\\n\\t        if (!el.__isHover) {\\n\\t            return;\\n\\t        }\\n\\n\\t        var normalStl = el.__normalStl;\\n\\t        if (el.useHoverLayer) {\\n\\t            el.__zr && el.__zr.removeHover(el);\\n\\t        }\\n\\t        else {\\n\\t            normalStl && el.setStyle(normalStl);\\n\\t            el.z2 -= 1;\\n\\t        }\\n\\n\\t        el.__isHover = false;\\n\\t    }\\n\\n\\t    /**\\n\\t     * @inner\\n\\t     */\\n\\t    function doEnterHover(el) {\\n\\t        el.type === 'group'\\n\\t            ? el.traverse(function (child) {\\n\\t                if (child.type !== 'group') {\\n\\t                    doSingleEnterHover(child);\\n\\t                }\\n\\t            })\\n\\t            : doSingleEnterHover(el);\\n\\t    }\\n\\n\\t    function doLeaveHover(el) {\\n\\t        el.type === 'group'\\n\\t            ? el.traverse(function (child) {\\n\\t                if (child.type !== 'group') {\\n\\t                    doSingleLeaveHover(child);\\n\\t                }\\n\\t            })\\n\\t            : doSingleLeaveHover(el);\\n\\t    }\\n\\n\\t    /**\\n\\t     * @inner\\n\\t     */\\n\\t    function setElementHoverStl(el, hoverStl) {\\n\\t        // If element has sepcified hoverStyle, then use it instead of given hoverStyle\\n\\t        // Often used when item group has a label element and it's hoverStyle is different\\n\\t        el.__hoverStl = el.hoverStyle || hoverStl || {};\\n\\t        el.__hoverStlDirty = true;\\n\\n\\t        if (el.__isHover) {\\n\\t            cacheElementStl(el);\\n\\t        }\\n\\t    }\\n\\n\\t    /**\\n\\t     * @inner\\n\\t     */\\n\\t    function onElementMouseOver(e) {\\n\\t        if (this.__hoverSilentOnTouch && e.zrByTouch) {\\n\\t            return;\\n\\t        }\\n\\n\\t        // Only if element is not in emphasis status\\n\\t        !this.__isEmphasis && doEnterHover(this);\\n\\t    }\\n\\n\\t    /**\\n\\t     * @inner\\n\\t     */\\n\\t    function onElementMouseOut(e) {\\n\\t        if (this.__hoverSilentOnTouch && e.zrByTouch) {\\n\\t            return;\\n\\t        }\\n\\n\\t        // Only if element is not in emphasis status\\n\\t        !this.__isEmphasis && doLeaveHover(this);\\n\\t    }\\n\\n\\t    /**\\n\\t     * @inner\\n\\t     */\\n\\t    function enterEmphasis() {\\n\\t        this.__isEmphasis = true;\\n\\t        doEnterHover(this);\\n\\t    }\\n\\n\\t    /**\\n\\t     * @inner\\n\\t     */\\n\\t    function leaveEmphasis() {\\n\\t        this.__isEmphasis = false;\\n\\t        doLeaveHover(this);\\n\\t    }\\n\\n\\t    /**\\n\\t     * Set hover style of element.\\n\\t     * This method can be called repeatly without side-effects.\\n\\t     * @param {module:zrender/Element} el\\n\\t     * @param {Object} [hoverStyle]\\n\\t     * @param {Object} [opt]\\n\\t     * @param {boolean} [opt.hoverSilentOnTouch=false]\\n\\t     *        In touch device, mouseover event will be trigger on touchstart event\\n\\t     *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\\n\\t     *        conviniently use hoverStyle when tap on touch screen without additional\\n\\t     *        code for compatibility.\\n\\t     *        But if the chart/component has select feature, which usually also use\\n\\t     *        hoverStyle, there might be conflict between 'select-highlight' and\\n\\t     *        'hover-highlight' especially when roam is enabled (see geo for example).\\n\\t     *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\\n\\t     *        on touch device.\\n\\t     */\\n\\t    graphic.setHoverStyle = function (el, hoverStyle, opt) {\\n\\t        el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\\n\\n\\t        el.type === 'group'\\n\\t            ? el.traverse(function (child) {\\n\\t                if (child.type !== 'group') {\\n\\t                    setElementHoverStl(child, hoverStyle);\\n\\t                }\\n\\t            })\\n\\t            : setElementHoverStl(el, hoverStyle);\\n\\n\\t        // Duplicated function will be auto-ignored, see Eventful.js.\\n\\t        el.on('mouseover', onElementMouseOver)\\n\\t          .on('mouseout', onElementMouseOut);\\n\\n\\t        // Emphasis, normal can be triggered manually\\n\\t        el.on('emphasis', enterEmphasis)\\n\\t          .on('normal', leaveEmphasis);\\n\\t    };\\n\\n\\t    /**\\n\\t     * Set text option in the style\\n\\t     * @param {Object} textStyle\\n\\t     * @param {module:echarts/model/Model} labelModel\\n\\t     * @param {string} color\\n\\t     */\\n\\t    graphic.setText = function (textStyle, labelModel, color) {\\n\\t        var labelPosition = labelModel.getShallow('position') || 'inside';\\n\\t        var labelOffset = labelModel.getShallow('offset');\\n\\t        var labelColor = labelPosition.indexOf('inside') >= 0 ? 'white' : color;\\n\\t        var textStyleModel = labelModel.getModel('textStyle');\\n\\t        zrUtil.extend(textStyle, {\\n\\t            textDistance: labelModel.getShallow('distance') || 5,\\n\\t            textFont: textStyleModel.getFont(),\\n\\t            textPosition: labelPosition,\\n\\t            textOffset: labelOffset,\\n\\t            textFill: textStyleModel.getTextColor() || labelColor\\n\\t        });\\n\\t    };\\n\\n\\t    graphic.getFont = function (opt, ecModel) {\\n\\t        var gTextStyleModel = ecModel && ecModel.getModel('textStyle');\\n\\t        return [\\n\\t            // FIXME in node-canvas fontWeight is before fontStyle\\n\\t            opt.fontStyle || gTextStyleModel && gTextStyleModel.getShallow('fontStyle') || '',\\n\\t            opt.fontWeight || gTextStyleModel && gTextStyleModel.getShallow('fontWeight') || '',\\n\\t            (opt.fontSize || gTextStyleModel && gTextStyleModel.getShallow('fontSize') || 12) + 'px',\\n\\t            opt.fontFamily || gTextStyleModel && gTextStyleModel.getShallow('fontFamily') || 'sans-serif'\\n\\t        ].join(' ');\\n\\t    };\\n\\n\\t    function animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\\n\\t        if (typeof dataIndex === 'function') {\\n\\t            cb = dataIndex;\\n\\t            dataIndex = null;\\n\\t        }\\n\\t        // Do not check 'animation' property directly here. Consider this case:\\n\\t        // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\\n\\t        // but its parent model (`seriesModel`) does.\\n\\t        var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\\n\\n\\t        if (animationEnabled) {\\n\\t            var postfix = isUpdate ? 'Update' : '';\\n\\t            var duration = animatableModel.getShallow('animationDuration' + postfix);\\n\\t            var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\\n\\t            var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\\n\\t            if (typeof animationDelay === 'function') {\\n\\t                animationDelay = animationDelay(\\n\\t                    dataIndex,\\n\\t                    animatableModel.getAnimationDelayParams\\n\\t                        ? animatableModel.getAnimationDelayParams(el, dataIndex)\\n\\t                        : null\\n\\t                );\\n\\t            }\\n\\t            if (typeof duration === 'function') {\\n\\t                duration = duration(dataIndex);\\n\\t            }\\n\\n\\t            duration > 0\\n\\t                ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb)\\n\\t                : (el.stopAnimation(), el.attr(props), cb && cb());\\n\\t        }\\n\\t        else {\\n\\t            el.stopAnimation();\\n\\t            el.attr(props);\\n\\t            cb && cb();\\n\\t        }\\n\\t    }\\n\\n\\t    /**\\n\\t     * Update graphic element properties with or without animation according to the configuration in series\\n\\t     * @param {module:zrender/Element} el\\n\\t     * @param {Object} props\\n\\t     * @param {module:echarts/model/Model} [animatableModel]\\n\\t     * @param {number} [dataIndex]\\n\\t     * @param {Function} [cb]\\n\\t     * @example\\n\\t     *     graphic.updateProps(el, {\\n\\t     *         position: [100, 100]\\n\\t     *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\\n\\t     *     // Or\\n\\t     *     graphic.updateProps(el, {\\n\\t     *         position: [100, 100]\\n\\t     *     }, seriesModel, function () { console.log('Animation done!'); });\\n\\t     */\\n\\t    graphic.updateProps = function (el, props, animatableModel, dataIndex, cb) {\\n\\t        animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\\n\\t    };\\n\\n\\t    /**\\n\\t     * Init graphic element properties with or without animation according to the configuration in series\\n\\t     * @param {module:zrender/Element} el\\n\\t     * @param {Object} props\\n\\t     * @param {module:echarts/model/Model} [animatableModel]\\n\\t     * @param {number} [dataIndex]\\n\\t     * @param {Function} cb\\n\\t     */\\n\\t    graphic.initProps = function (el, props, animatableModel, dataIndex, cb) {\\n\\t        animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\\n\\t    };\\n\\n\\t    /**\\n\\t     * Get transform matrix of target (param target),\\n\\t     * in coordinate of its ancestor (param ancestor)\\n\\t     *\\n\\t     * @param {module:zrender/mixin/Transformable} target\\n\\t     * @param {module:zrender/mixin/Transformable} [ancestor]\\n\\t     */\\n\\t    graphic.getTransform = function (target, ancestor) {\\n\\t        var mat = matrix.identity([]);\\n\\n\\t        while (target && target !== ancestor) {\\n\\t            matrix.mul(mat, target.getLocalTransform(), mat);\\n\\t            target = target.parent;\\n\\t        }\\n\\n\\t        return mat;\\n\\t    };\\n\\n\\t    /**\\n\\t     * Apply transform to an vertex.\\n\\t     * @param {Array.<number>} target [x, y]\\n\\t     * @param {Array.<number>|TypedArray.<number>|Object} transform Can be:\\n\\t     *      + Transform matrix: like [1, 0, 0, 1, 0, 0]\\n\\t     *      + {position, rotation, scale}, the same as `zrender/Transformable`.\\n\\t     * @param {boolean=} invert Whether use invert matrix.\\n\\t     * @return {Array.<number>} [x, y]\\n\\t     */\\n\\t    graphic.applyTransform = function (target, transform, invert) {\\n\\t        if (transform && !zrUtil.isArrayLike(transform)) {\\n\\t            transform = Transformable.getLocalTransform(transform);\\n\\t        }\\n\\n\\t        if (invert) {\\n\\t            transform = matrix.invert([], transform);\\n\\t        }\\n\\t        return vector.applyTransform([], target, transform);\\n\\t    };\\n\\n\\t    /**\\n\\t     * @param {string} direction 'left' 'right' 'top' 'bottom'\\n\\t     * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\\n\\t     * @param {boolean=} invert Whether use invert matrix.\\n\\t     * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\\n\\t     */\\n\\t    graphic.transformDirection = function (direction, transform, invert) {\\n\\n\\t        // Pick a base, ensure that transform result will not be (0, 0).\\n\\t        var hBase = (transform[4] === 0 || transform[5] === 0 || transform[0] === 0)\\n\\t            ? 1 : Math.abs(2 * transform[4] / transform[0]);\\n\\t        var vBase = (transform[4] === 0 || transform[5] === 0 || transform[2] === 0)\\n\\t            ? 1 : Math.abs(2 * transform[4] / transform[2]);\\n\\n\\t        var vertex = [\\n\\t            direction === 'left' ? -hBase : direction === 'right' ? hBase : 0,\\n\\t            direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0\\n\\t        ];\\n\\n\\t        vertex = graphic.applyTransform(vertex, transform, invert);\\n\\n\\t        return Math.abs(vertex[0]) > Math.abs(vertex[1])\\n\\t            ? (vertex[0] > 0 ? 'right' : 'left')\\n\\t            : (vertex[1] > 0 ? 'bottom' : 'top');\\n\\t    };\\n\\n\\t    /**\\n\\t     * Apply group transition animation from g1 to g2.\\n\\t     * If no animatableModel, no animation.\\n\\t     */\\n\\t    graphic.groupTransition = function (g1, g2, animatableModel, cb) {\\n\\t        if (!g1 || !g2) {\\n\\t            return;\\n\\t        }\\n\\n\\t        function getElMap(g) {\\n\\t            var elMap = {};\\n\\t            g.traverse(function (el) {\\n\\t                if (!el.isGroup && el.anid) {\\n\\t                    elMap[el.anid] = el;\\n\\t                }\\n\\t            });\\n\\t            return elMap;\\n\\t        }\\n\\t        function getAnimatableProps(el) {\\n\\t            var obj = {\\n\\t                position: vector.clone(el.position),\\n\\t                rotation: el.rotation\\n\\t            };\\n\\t            if (el.shape) {\\n\\t                obj.shape = zrUtil.extend({}, el.shape);\\n\\t            }\\n\\t            return obj;\\n\\t        }\\n\\t        var elMap1 = getElMap(g1);\\n\\n\\t        g2.traverse(function (el) {\\n\\t            if (!el.isGroup && el.anid) {\\n\\t                var oldEl = elMap1[el.anid];\\n\\t                if (oldEl) {\\n\\t                    var newProp = getAnimatableProps(el);\\n\\t                    el.attr(getAnimatableProps(oldEl));\\n\\t                    graphic.updateProps(el, newProp, animatableModel, el.dataIndex);\\n\\t                }\\n\\t                // else {\\n\\t                //     if (el.previousProps) {\\n\\t                //         graphic.updateProps\\n\\t                //     }\\n\\t                // }\\n\\t            }\\n\\t        });\\n\\t    };\\n\\n\\t    /**\\n\\t     * @param {Array.<Array.<number>>} points Like: [[23, 44], [53, 66], ...]\\n\\t     * @param {Object} rect {x, y, width, height}\\n\\t     * @return {Array.<Array.<number>>} A new clipped points.\\n\\t     */\\n\\t    graphic.clipPointsByRect = function (points, rect) {\\n\\t        return zrUtil.map(points, function (point) {\\n\\t            var x = point[0];\\n\\t            x = mathMax(x, rect.x);\\n\\t            x = mathMin(x, rect.x + rect.width);\\n\\t            var y = point[1];\\n\\t            y = mathMax(y, rect.y);\\n\\t            y = mathMin(y, rect.y + rect.height);\\n\\t            return [x, y];\\n\\t        });\\n\\t    };\\n\\n\\t    /**\\n\\t     * @param {Object} targetRect {x, y, width, height}\\n\\t     * @param {Object} rect {x, y, width, height}\\n\\t     * @return {Object} A new clipped rect. If rect size are negative, return undefined.\\n\\t     */\\n\\t    graphic.clipRectByRect = function (targetRect, rect) {\\n\\t        var x = mathMax(targetRect.x, rect.x);\\n\\t        var x2 = mathMin(targetRect.x + targetRect.width, rect.x + rect.width);\\n\\t        var y = mathMax(targetRect.y, rect.y);\\n\\t        var y2 = mathMin(targetRect.y + targetRect.height, rect.y + rect.height);\\n\\n\\t        if (x2 >= x && y2 >= y) {\\n\\t            return {\\n\\t                x: x,\\n\\t                y: y,\\n\\t                width: x2 - x,\\n\\t                height: y2 - y\\n\\t            };\\n\\t        }\\n\\t    };\\n\\n\\t    module.exports = graphic;\\n\\n\\n\\n/***/ },\\n/* 19 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var Path = __webpack_require__(20);\\n\\t    var PathProxy = __webpack_require__(36);\\n\\t    var transformPath = __webpack_require__(47);\\n\\n\\t    // command chars\\n\\t    var cc = [\\n\\t        'm', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z',\\n\\t        'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'\\n\\t    ];\\n\\n\\t    var mathSqrt = Math.sqrt;\\n\\t    var mathSin = Math.sin;\\n\\t    var mathCos = Math.cos;\\n\\t    var PI = Math.PI;\\n\\n\\t    var vMag = function(v) {\\n\\t        return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\\n\\t    };\\n\\t    var vRatio = function(u, v) {\\n\\t        return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\\n\\t    };\\n\\t    var vAngle = function(u, v) {\\n\\t        return (u[0] * v[1] < u[1] * v[0] ? -1 : 1)\\n\\t                * Math.acos(vRatio(u, v));\\n\\t    };\\n\\n\\t    function processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\\n\\t        var psi = psiDeg * (PI / 180.0);\\n\\t        var xp = mathCos(psi) * (x1 - x2) / 2.0\\n\\t                 + mathSin(psi) * (y1 - y2) / 2.0;\\n\\t        var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0\\n\\t                 + mathCos(psi) * (y1 - y2) / 2.0;\\n\\n\\t        var lambda = (xp * xp) / (rx * rx) + (yp * yp) / (ry * ry);\\n\\n\\t        if (lambda > 1) {\\n\\t            rx *= mathSqrt(lambda);\\n\\t            ry *= mathSqrt(lambda);\\n\\t        }\\n\\n\\t        var f = (fa === fs ? -1 : 1)\\n\\t            * mathSqrt((((rx * rx) * (ry * ry))\\n\\t                    - ((rx * rx) * (yp * yp))\\n\\t                    - ((ry * ry) * (xp * xp))) / ((rx * rx) * (yp * yp)\\n\\t                    + (ry * ry) * (xp * xp))\\n\\t                ) || 0;\\n\\n\\t        var cxp = f * rx * yp / ry;\\n\\t        var cyp = f * -ry * xp / rx;\\n\\n\\t        var cx = (x1 + x2) / 2.0\\n\\t                 + mathCos(psi) * cxp\\n\\t                 - mathSin(psi) * cyp;\\n\\t        var cy = (y1 + y2) / 2.0\\n\\t                + mathSin(psi) * cxp\\n\\t                + mathCos(psi) * cyp;\\n\\n\\t        var theta = vAngle([ 1, 0 ], [ (xp - cxp) / rx, (yp - cyp) / ry ]);\\n\\t        var u = [ (xp - cxp) / rx, (yp - cyp) / ry ];\\n\\t        var v = [ (-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry ];\\n\\t        var dTheta = vAngle(u, v);\\n\\n\\t        if (vRatio(u, v) <= -1) {\\n\\t            dTheta = PI;\\n\\t        }\\n\\t        if (vRatio(u, v) >= 1) {\\n\\t            dTheta = 0;\\n\\t        }\\n\\t        if (fs === 0 && dTheta > 0) {\\n\\t            dTheta = dTheta - 2 * PI;\\n\\t        }\\n\\t        if (fs === 1 && dTheta < 0) {\\n\\t            dTheta = dTheta + 2 * PI;\\n\\t        }\\n\\n\\t        path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\\n\\t    }\\n\\n\\t    function createPathProxyFromString(data) {\\n\\t        if (!data) {\\n\\t            return [];\\n\\t        }\\n\\n\\t        // command string\\n\\t        var cs = data.replace(/-/g, ' -')\\n\\t            .replace(/  /g, ' ')\\n\\t            .replace(/ /g, ',')\\n\\t            .replace(/,,/g, ',');\\n\\n\\t        var n;\\n\\t        // create pipes so that we can split the data\\n\\t        for (n = 0; n < cc.length; n++) {\\n\\t            cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\\n\\t        }\\n\\n\\t        // create array\\n\\t        var arr = cs.split('|');\\n\\t        // init context point\\n\\t        var cpx = 0;\\n\\t        var cpy = 0;\\n\\n\\t        var path = new PathProxy();\\n\\t        var CMD = PathProxy.CMD;\\n\\n\\t        var prevCmd;\\n\\t        for (n = 1; n < arr.length; n++) {\\n\\t            var str = arr[n];\\n\\t            var c = str.charAt(0);\\n\\t            var off = 0;\\n\\t            var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\\n\\t            var cmd;\\n\\n\\t            if (p.length > 0 && p[0] === '') {\\n\\t                p.shift();\\n\\t            }\\n\\n\\t            for (var i = 0; i < p.length; i++) {\\n\\t                p[i] = parseFloat(p[i]);\\n\\t            }\\n\\t            while (off < p.length && !isNaN(p[off])) {\\n\\t                if (isNaN(p[0])) {\\n\\t                    break;\\n\\t                }\\n\\t                var ctlPtx;\\n\\t                var ctlPty;\\n\\n\\t                var rx;\\n\\t                var ry;\\n\\t                var psi;\\n\\t                var fa;\\n\\t                var fs;\\n\\n\\t                var x1 = cpx;\\n\\t                var y1 = cpy;\\n\\n\\t                // convert l, H, h, V, and v to L\\n\\t                switch (c) {\\n\\t                    case 'l':\\n\\t                        cpx += p[off++];\\n\\t                        cpy += p[off++];\\n\\t                        cmd = CMD.L;\\n\\t                        path.addData(cmd, cpx, cpy);\\n\\t                        break;\\n\\t                    case 'L':\\n\\t                        cpx = p[off++];\\n\\t                        cpy = p[off++];\\n\\t                        cmd = CMD.L;\\n\\t                        path.addData(cmd, cpx, cpy);\\n\\t                        break;\\n\\t                    case 'm':\\n\\t                        cpx += p[off++];\\n\\t                        cpy += p[off++];\\n\\t                        cmd = CMD.M;\\n\\t                        path.addData(cmd, cpx, cpy);\\n\\t                        c = 'l';\\n\\t                        break;\\n\\t                    case 'M':\\n\\t                        cpx = p[off++];\\n\\t                        cpy = p[off++];\\n\\t                        cmd = CMD.M;\\n\\t                        path.addData(cmd, cpx, cpy);\\n\\t                        c = 'L';\\n\\t                        break;\\n\\t                    case 'h':\\n\\t                        cpx += p[off++];\\n\\t                        cmd = CMD.L;\\n\\t                        path.addData(cmd, cpx, cpy);\\n\\t                        break;\\n\\t                    case 'H':\\n\\t                        cpx = p[off++];\\n\\t                        cmd = CMD.L;\\n\\t                        path.addData(cmd, cpx, cpy);\\n\\t                        break;\\n\\t                    case 'v':\\n\\t                        cpy += p[off++];\\n\\t                        cmd = CMD.L;\\n\\t                        path.addData(cmd, cpx, cpy);\\n\\t                        break;\\n\\t                    case 'V':\\n\\t                        cpy = p[off++];\\n\\t                        cmd = CMD.L;\\n\\t                        path.addData(cmd, cpx, cpy);\\n\\t                        break;\\n\\t                    case 'C':\\n\\t                        cmd = CMD.C;\\n\\t                        path.addData(\\n\\t                            cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]\\n\\t                        );\\n\\t                        cpx = p[off - 2];\\n\\t                        cpy = p[off - 1];\\n\\t                        break;\\n\\t                    case 'c':\\n\\t                        cmd = CMD.C;\\n\\t                        path.addData(\\n\\t                            cmd,\\n\\t                            p[off++] + cpx, p[off++] + cpy,\\n\\t                            p[off++] + cpx, p[off++] + cpy,\\n\\t                            p[off++] + cpx, p[off++] + cpy\\n\\t                        );\\n\\t                        cpx += p[off - 2];\\n\\t                        cpy += p[off - 1];\\n\\t                        break;\\n\\t                    case 'S':\\n\\t                        ctlPtx = cpx;\\n\\t                        ctlPty = cpy;\\n\\t                        var len = path.len();\\n\\t                        var pathData = path.data;\\n\\t                        if (prevCmd === CMD.C) {\\n\\t                            ctlPtx += cpx - pathData[len - 4];\\n\\t                            ctlPty += cpy - pathData[len - 3];\\n\\t                        }\\n\\t                        cmd = CMD.C;\\n\\t                        x1 = p[off++];\\n\\t                        y1 = p[off++];\\n\\t                        cpx = p[off++];\\n\\t                        cpy = p[off++];\\n\\t                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\\n\\t                        break;\\n\\t                    case 's':\\n\\t                        ctlPtx = cpx;\\n\\t                        ctlPty = cpy;\\n\\t                        var len = path.len();\\n\\t                        var pathData = path.data;\\n\\t                        if (prevCmd === CMD.C) {\\n\\t                            ctlPtx += cpx - pathData[len - 4];\\n\\t                            ctlPty += cpy - pathData[len - 3];\\n\\t                        }\\n\\t                        cmd = CMD.C;\\n\\t                        x1 = cpx + p[off++];\\n\\t                        y1 = cpy + p[off++];\\n\\t                        cpx += p[off++];\\n\\t                        cpy += p[off++];\\n\\t                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\\n\\t                        break;\\n\\t                    case 'Q':\\n\\t                        x1 = p[off++];\\n\\t                        y1 = p[off++];\\n\\t                        cpx = p[off++];\\n\\t                        cpy = p[off++];\\n\\t                        cmd = CMD.Q;\\n\\t                        path.addData(cmd, x1, y1, cpx, cpy);\\n\\t                        break;\\n\\t                    case 'q':\\n\\t                        x1 = p[off++] + cpx;\\n\\t                        y1 = p[off++] + cpy;\\n\\t                        cpx += p[off++];\\n\\t                        cpy += p[off++];\\n\\t                        cmd = CMD.Q;\\n\\t                        path.addData(cmd, x1, y1, cpx, cpy);\\n\\t                        break;\\n\\t                    case 'T':\\n\\t                        ctlPtx = cpx;\\n\\t                        ctlPty = cpy;\\n\\t                        var len = path.len();\\n\\t                        var pathData = path.data;\\n\\t                        if (prevCmd === CMD.Q) {\\n\\t                            ctlPtx += cpx - pathData[len - 4];\\n\\t                            ctlPty += cpy - pathData[len - 3];\\n\\t                        }\\n\\t                        cpx = p[off++];\\n\\t                        cpy = p[off++];\\n\\t                        cmd = CMD.Q;\\n\\t                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\\n\\t                        break;\\n\\t                    case 't':\\n\\t                        ctlPtx = cpx;\\n\\t                        ctlPty = cpy;\\n\\t                        var len = path.len();\\n\\t                        var pathData = path.data;\\n\\t                        if (prevCmd === CMD.Q) {\\n\\t                            ctlPtx += cpx - pathData[len - 4];\\n\\t                            ctlPty += cpy - pathData[len - 3];\\n\\t                        }\\n\\t                        cpx += p[off++];\\n\\t                        cpy += p[off++];\\n\\t                        cmd = CMD.Q;\\n\\t                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\\n\\t                        break;\\n\\t                    case 'A':\\n\\t                        rx = p[off++];\\n\\t                        ry = p[off++];\\n\\t                        psi = p[off++];\\n\\t                        fa = p[off++];\\n\\t                        fs = p[off++];\\n\\n\\t                        x1 = cpx, y1 = cpy;\\n\\t                        cpx = p[off++];\\n\\t                        cpy = p[off++];\\n\\t                        cmd = CMD.A;\\n\\t                        processArc(\\n\\t                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\\n\\t                        );\\n\\t                        break;\\n\\t                    case 'a':\\n\\t                        rx = p[off++];\\n\\t                        ry = p[off++];\\n\\t                        psi = p[off++];\\n\\t                        fa = p[off++];\\n\\t                        fs = p[off++];\\n\\n\\t                        x1 = cpx, y1 = cpy;\\n\\t                        cpx += p[off++];\\n\\t                        cpy += p[off++];\\n\\t                        cmd = CMD.A;\\n\\t                        processArc(\\n\\t                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\\n\\t                        );\\n\\t                        break;\\n\\t                }\\n\\t            }\\n\\n\\t            if (c === 'z' || c === 'Z') {\\n\\t                cmd = CMD.Z;\\n\\t                path.addData(cmd);\\n\\t            }\\n\\n\\t            prevCmd = cmd;\\n\\t        }\\n\\n\\t        path.toStatic();\\n\\n\\t        return path;\\n\\t    }\\n\\n\\t    // TODO Optimize double memory cost problem\\n\\t    function createPathOptions(str, opts) {\\n\\t        var pathProxy = createPathProxyFromString(str);\\n\\t        opts = opts || {};\\n\\t        opts.buildPath = function (path) {\\n\\t            if (path.setData) {\\n\\t                path.setData(pathProxy.data);\\n\\t                // Svg and vml renderer don't have context\\n\\t                var ctx = path.getContext();\\n\\t                if (ctx) {\\n\\t                    path.rebuildPath(ctx);\\n\\t                }\\n\\t            }\\n\\t            else {\\n\\t                var ctx = path;\\n\\t                pathProxy.rebuildPath(ctx);\\n\\t            }\\n\\t        };\\n\\n\\t        opts.applyTransform = function (m) {\\n\\t            transformPath(pathProxy, m);\\n\\n\\t            this.dirty(true);\\n\\t        };\\n\\n\\t        return opts;\\n\\t    }\\n\\n\\t    module.exports = {\\n\\t        /**\\n\\t         * Create a Path object from path string data\\n\\t         * http://www.w3.org/TR/SVG/paths.html#PathData\\n\\t         * @param  {Object} opts Other options\\n\\t         */\\n\\t        createFromString: function (str, opts) {\\n\\t            return new Path(createPathOptions(str, opts));\\n\\t        },\\n\\n\\t        /**\\n\\t         * Create a Path class from path string data\\n\\t         * @param  {string} str\\n\\t         * @param  {Object} opts Other options\\n\\t         */\\n\\t        extendFromString: function (str, opts) {\\n\\t            return Path.extend(createPathOptions(str, opts));\\n\\t        },\\n\\n\\t        /**\\n\\t         * Merge multiple paths\\n\\t         */\\n\\t        // TODO Apply transform\\n\\t        // TODO stroke dash\\n\\t        // TODO Optimize double memory cost problem\\n\\t        mergePath: function (pathEls, opts) {\\n\\t            var pathList = [];\\n\\t            var len = pathEls.length;\\n\\t            for (var i = 0; i < len; i++) {\\n\\t                var pathEl = pathEls[i];\\n\\t                if (!pathEl.path) {\\n\\t                    pathEl.createPathProxy();\\n\\t                }\\n\\t                if (pathEl.__dirtyPath) {\\n\\t                    pathEl.buildPath(pathEl.path, pathEl.shape, true);\\n\\t                }\\n\\t                pathList.push(pathEl.path);\\n\\t            }\\n\\n\\t            var pathBundle = new Path(opts);\\n\\t            // Need path proxy.\\n\\t            pathBundle.createPathProxy();\\n\\t            pathBundle.buildPath = function (path) {\\n\\t                path.appendPath(pathList);\\n\\t                // Svg and vml renderer don't have context\\n\\t                var ctx = path.getContext();\\n\\t                if (ctx) {\\n\\t                    path.rebuildPath(ctx);\\n\\t                }\\n\\t            };\\n\\n\\t            return pathBundle;\\n\\t        }\\n\\t    };\\n\\n\\n/***/ },\\n/* 20 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * Path element\\n\\t * @module zrender/graphic/Path\\n\\t */\\n\\n\\n\\n\\t    var Displayable = __webpack_require__(21);\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var PathProxy = __webpack_require__(36);\\n\\t    var pathContain = __webpack_require__(39);\\n\\n\\t    var Pattern = __webpack_require__(46);\\n\\t    var getCanvasPattern = Pattern.prototype.getCanvasPattern;\\n\\n\\t    var abs = Math.abs;\\n\\n\\t    var pathProxyForDraw = new PathProxy(true);\\n\\t    /**\\n\\t     * @alias module:zrender/graphic/Path\\n\\t     * @extends module:zrender/graphic/Displayable\\n\\t     * @constructor\\n\\t     * @param {Object} opts\\n\\t     */\\n\\t    function Path(opts) {\\n\\t        Displayable.call(this, opts);\\n\\n\\t        /**\\n\\t         * @type {module:zrender/core/PathProxy}\\n\\t         * @readOnly\\n\\t         */\\n\\t        this.path = null;\\n\\t    }\\n\\n\\t    Path.prototype = {\\n\\n\\t        constructor: Path,\\n\\n\\t        type: 'path',\\n\\n\\t        __dirtyPath: true,\\n\\n\\t        strokeContainThreshold: 5,\\n\\n\\t        brush: function (ctx, prevEl) {\\n\\t            var style = this.style;\\n\\t            var path = this.path || pathProxyForDraw;\\n\\t            var hasStroke = style.hasStroke();\\n\\t            var hasFill = style.hasFill();\\n\\t            var fill = style.fill;\\n\\t            var stroke = style.stroke;\\n\\t            var hasFillGradient = hasFill && !!(fill.colorStops);\\n\\t            var hasStrokeGradient = hasStroke && !!(stroke.colorStops);\\n\\t            var hasFillPattern = hasFill && !!(fill.image);\\n\\t            var hasStrokePattern = hasStroke && !!(stroke.image);\\n\\n\\t            style.bind(ctx, this, prevEl);\\n\\t            this.setTransform(ctx);\\n\\n\\t            if (this.__dirty) {\\n\\t                var rect;\\n\\t                // Update gradient because bounding rect may changed\\n\\t                if (hasFillGradient) {\\n\\t                    rect = rect || this.getBoundingRect();\\n\\t                    this._fillGradient = style.getGradient(ctx, fill, rect);\\n\\t                }\\n\\t                if (hasStrokeGradient) {\\n\\t                    rect = rect || this.getBoundingRect();\\n\\t                    this._strokeGradient = style.getGradient(ctx, stroke, rect);\\n\\t                }\\n\\t            }\\n\\t            // Use the gradient or pattern\\n\\t            if (hasFillGradient) {\\n\\t                // PENDING If may have affect the state\\n\\t                ctx.fillStyle = this._fillGradient;\\n\\t            }\\n\\t            else if (hasFillPattern) {\\n\\t                ctx.fillStyle = getCanvasPattern.call(fill, ctx);\\n\\t            }\\n\\t            if (hasStrokeGradient) {\\n\\t                ctx.strokeStyle = this._strokeGradient;\\n\\t            }\\n\\t            else if (hasStrokePattern) {\\n\\t                ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\\n\\t            }\\n\\n\\t            var lineDash = style.lineDash;\\n\\t            var lineDashOffset = style.lineDashOffset;\\n\\n\\t            var ctxLineDash = !!ctx.setLineDash;\\n\\n\\t            // Update path sx, sy\\n\\t            var scale = this.getGlobalScale();\\n\\t            path.setScale(scale[0], scale[1]);\\n\\n\\t            // Proxy context\\n\\t            // Rebuild path in following 2 cases\\n\\t            // 1. Path is dirty\\n\\t            // 2. Path needs javascript implemented lineDash stroking.\\n\\t            //    In this case, lineDash information will not be saved in PathProxy\\n\\t            if (this.__dirtyPath\\n\\t                || (lineDash && !ctxLineDash && hasStroke)\\n\\t            ) {\\n\\t                path.beginPath(ctx);\\n\\n\\t                // Setting line dash before build path\\n\\t                if (lineDash && !ctxLineDash) {\\n\\t                    path.setLineDash(lineDash);\\n\\t                    path.setLineDashOffset(lineDashOffset);\\n\\t                }\\n\\n\\t                this.buildPath(path, this.shape, false);\\n\\n\\t                // Clear path dirty flag\\n\\t                if (this.path) {\\n\\t                    this.__dirtyPath = false;\\n\\t                }\\n\\t            }\\n\\t            else {\\n\\t                // Replay path building\\n\\t                ctx.beginPath();\\n\\t                this.path.rebuildPath(ctx);\\n\\t            }\\n\\n\\t            hasFill && path.fill(ctx);\\n\\n\\t            if (lineDash && ctxLineDash) {\\n\\t                ctx.setLineDash(lineDash);\\n\\t                ctx.lineDashOffset = lineDashOffset;\\n\\t            }\\n\\n\\t            hasStroke && path.stroke(ctx);\\n\\n\\t            if (lineDash && ctxLineDash) {\\n\\t                // PENDING\\n\\t                // Remove lineDash\\n\\t                ctx.setLineDash([]);\\n\\t            }\\n\\n\\n\\t            this.restoreTransform(ctx);\\n\\n\\t            // Draw rect text\\n\\t            if (style.text != null) {\\n\\t                this.drawRectText(ctx, this.getBoundingRect());\\n\\t            }\\n\\t        },\\n\\n\\t        // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\\n\\t        // Like in circle\\n\\t        buildPath: function (ctx, shapeCfg, inBundle) {},\\n\\n\\t        createPathProxy: function () {\\n\\t            this.path = new PathProxy();\\n\\t        },\\n\\n\\t        getBoundingRect: function () {\\n\\t            var rect = this._rect;\\n\\t            var style = this.style;\\n\\t            var needsUpdateRect = !rect;\\n\\t            if (needsUpdateRect) {\\n\\t                var path = this.path;\\n\\t                if (!path) {\\n\\t                    // Create path on demand.\\n\\t                    path = this.path = new PathProxy();\\n\\t                }\\n\\t                if (this.__dirtyPath) {\\n\\t                    path.beginPath();\\n\\t                    this.buildPath(path, this.shape, false);\\n\\t                }\\n\\t                rect = path.getBoundingRect();\\n\\t            }\\n\\t            this._rect = rect;\\n\\n\\t            if (style.hasStroke()) {\\n\\t                // Needs update rect with stroke lineWidth when\\n\\t                // 1. Element changes scale or lineWidth\\n\\t                // 2. Shape is changed\\n\\t                var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\\n\\t                if (this.__dirty || needsUpdateRect) {\\n\\t                    rectWithStroke.copy(rect);\\n\\t                    // FIXME Must after updateTransform\\n\\t                    var w = style.lineWidth;\\n\\t                    // PENDING, Min line width is needed when line is horizontal or vertical\\n\\t                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\\n\\n\\t                    // Only add extra hover lineWidth when there are no fill\\n\\t                    if (!style.hasFill()) {\\n\\t                        w = Math.max(w, this.strokeContainThreshold || 4);\\n\\t                    }\\n\\t                    // Consider line width\\n\\t                    // Line scale can't be 0;\\n\\t                    if (lineScale > 1e-10) {\\n\\t                        rectWithStroke.width += w / lineScale;\\n\\t                        rectWithStroke.height += w / lineScale;\\n\\t                        rectWithStroke.x -= w / lineScale / 2;\\n\\t                        rectWithStroke.y -= w / lineScale / 2;\\n\\t                    }\\n\\t                }\\n\\n\\t                // Return rect with stroke\\n\\t                return rectWithStroke;\\n\\t            }\\n\\n\\t            return rect;\\n\\t        },\\n\\n\\t        contain: function (x, y) {\\n\\t            var localPos = this.transformCoordToLocal(x, y);\\n\\t            var rect = this.getBoundingRect();\\n\\t            var style = this.style;\\n\\t            x = localPos[0];\\n\\t            y = localPos[1];\\n\\n\\t            if (rect.contain(x, y)) {\\n\\t                var pathData = this.path.data;\\n\\t                if (style.hasStroke()) {\\n\\t                    var lineWidth = style.lineWidth;\\n\\t                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\\n\\t                    // Line scale can't be 0;\\n\\t                    if (lineScale > 1e-10) {\\n\\t                        // Only add extra hover lineWidth when there are no fill\\n\\t                        if (!style.hasFill()) {\\n\\t                            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\\n\\t                        }\\n\\t                        if (pathContain.containStroke(\\n\\t                            pathData, lineWidth / lineScale, x, y\\n\\t                        )) {\\n\\t                            return true;\\n\\t                        }\\n\\t                    }\\n\\t                }\\n\\t                if (style.hasFill()) {\\n\\t                    return pathContain.contain(pathData, x, y);\\n\\t                }\\n\\t            }\\n\\t            return false;\\n\\t        },\\n\\n\\t        /**\\n\\t         * @param  {boolean} dirtyPath\\n\\t         */\\n\\t        dirty: function (dirtyPath) {\\n\\t            if (dirtyPath == null) {\\n\\t                dirtyPath = true;\\n\\t            }\\n\\t            // Only mark dirty, not mark clean\\n\\t            if (dirtyPath) {\\n\\t                this.__dirtyPath = dirtyPath;\\n\\t                this._rect = null;\\n\\t            }\\n\\n\\t            this.__dirty = true;\\n\\n\\t            this.__zr && this.__zr.refresh();\\n\\n\\t            // Used as a clipping path\\n\\t            if (this.__clipTarget) {\\n\\t                this.__clipTarget.dirty();\\n\\t            }\\n\\t        },\\n\\n\\t        /**\\n\\t         * Alias for animate('shape')\\n\\t         * @param {boolean} loop\\n\\t         */\\n\\t        animateShape: function (loop) {\\n\\t            return this.animate('shape', loop);\\n\\t        },\\n\\n\\t        // Overwrite attrKV\\n\\t        attrKV: function (key, value) {\\n\\t            // FIXME\\n\\t            if (key === 'shape') {\\n\\t                this.setShape(value);\\n\\t                this.__dirtyPath = true;\\n\\t                this._rect = null;\\n\\t            }\\n\\t            else {\\n\\t                Displayable.prototype.attrKV.call(this, key, value);\\n\\t            }\\n\\t        },\\n\\n\\t        /**\\n\\t         * @param {Object|string} key\\n\\t         * @param {*} value\\n\\t         */\\n\\t        setShape: function (key, value) {\\n\\t            var shape = this.shape;\\n\\t            // Path from string may not have shape\\n\\t            if (shape) {\\n\\t                if (zrUtil.isObject(key)) {\\n\\t                    for (var name in key) {\\n\\t                        if (key.hasOwnProperty(name)) {\\n\\t                            shape[name] = key[name];\\n\\t                        }\\n\\t                    }\\n\\t                }\\n\\t                else {\\n\\t                    shape[key] = value;\\n\\t                }\\n\\t                this.dirty(true);\\n\\t            }\\n\\t            return this;\\n\\t        },\\n\\n\\t        getLineScale: function () {\\n\\t            var m = this.transform;\\n\\t            // Get the line scale.\\n\\t            // Determinant of `m` means how much the area is enlarged by the\\n\\t            // transformation. So its square root can be used as a scale factor\\n\\t            // for width.\\n\\t            return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10\\n\\t                ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1]))\\n\\t                : 1;\\n\\t        }\\n\\t    };\\n\\n\\t    /**\\n\\t     * 扩展一个 Path element, 比如星形，圆等。\\n\\t     * Extend a path element\\n\\t     * @param {Object} props\\n\\t     * @param {string} props.type Path type\\n\\t     * @param {Function} props.init Initialize\\n\\t     * @param {Function} props.buildPath Overwrite buildPath method\\n\\t     * @param {Object} [props.style] Extended default style config\\n\\t     * @param {Object} [props.shape] Extended default shape config\\n\\t     */\\n\\t    Path.extend = function (defaults) {\\n\\t        var Sub = function (opts) {\\n\\t            Path.call(this, opts);\\n\\n\\t            if (defaults.style) {\\n\\t                // Extend default style\\n\\t                this.style.extendFrom(defaults.style, false);\\n\\t            }\\n\\n\\t            // Extend default shape\\n\\t            var defaultShape = defaults.shape;\\n\\t            if (defaultShape) {\\n\\t                this.shape = this.shape || {};\\n\\t                var thisShape = this.shape;\\n\\t                for (var name in defaultShape) {\\n\\t                    if (\\n\\t                        ! thisShape.hasOwnProperty(name)\\n\\t                        && defaultShape.hasOwnProperty(name)\\n\\t                    ) {\\n\\t                        thisShape[name] = defaultShape[name];\\n\\t                    }\\n\\t                }\\n\\t            }\\n\\n\\t            defaults.init && defaults.init.call(this, opts);\\n\\t        };\\n\\n\\t        zrUtil.inherits(Sub, Path);\\n\\n\\t        // FIXME 不能 extend position, rotation 等引用对象\\n\\t        for (var name in defaults) {\\n\\t            // Extending prototype values and methods\\n\\t            if (name !== 'style' && name !== 'shape') {\\n\\t                Sub.prototype[name] = defaults[name];\\n\\t            }\\n\\t        }\\n\\n\\t        return Sub;\\n\\t    };\\n\\n\\t    zrUtil.inherits(Path, Displayable);\\n\\n\\t    module.exports = Path;\\n\\n\\n/***/ },\\n/* 21 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * 可绘制的图形基类\\n\\t * Base class of all displayable graphic objects\\n\\t * @module zrender/graphic/Displayable\\n\\t */\\n\\n\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\n\\t    var Style = __webpack_require__(22);\\n\\n\\t    var Element = __webpack_require__(23);\\n\\t    var RectText = __webpack_require__(35);\\n\\t    // var Stateful = require('./mixin/Stateful');\\n\\n\\t    /**\\n\\t     * @alias module:zrender/graphic/Displayable\\n\\t     * @extends module:zrender/Element\\n\\t     * @extends module:zrender/graphic/mixin/RectText\\n\\t     */\\n\\t    function Displayable(opts) {\\n\\n\\t        opts = opts || {};\\n\\n\\t        Element.call(this, opts);\\n\\n\\t        // Extend properties\\n\\t        for (var name in opts) {\\n\\t            if (\\n\\t                opts.hasOwnProperty(name) &&\\n\\t                name !== 'style'\\n\\t            ) {\\n\\t                this[name] = opts[name];\\n\\t            }\\n\\t        }\\n\\n\\t        /**\\n\\t         * @type {module:zrender/graphic/Style}\\n\\t         */\\n\\t        this.style = new Style(opts.style);\\n\\n\\t        this._rect = null;\\n\\t        // Shapes for cascade clipping.\\n\\t        this.__clipPaths = [];\\n\\n\\t        // FIXME Stateful must be mixined after style is setted\\n\\t        // Stateful.call(this, opts);\\n\\t    }\\n\\n\\t    Displayable.prototype = {\\n\\n\\t        constructor: Displayable,\\n\\n\\t        type: 'displayable',\\n\\n\\t        /**\\n\\t         * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\\n\\t         * Dirty flag. From which painter will determine if this displayable object needs brush\\n\\t         * @name module:zrender/graphic/Displayable#__dirty\\n\\t         * @type {boolean}\\n\\t         */\\n\\t        __dirty: true,\\n\\n\\t        /**\\n\\t         * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\\n\\t         * If ignore drawing of the displayable object. Mouse event will still be triggered\\n\\t         * @name module:/zrender/graphic/Displayable#invisible\\n\\t         * @type {boolean}\\n\\t         * @default false\\n\\t         */\\n\\t        invisible: false,\\n\\n\\t        /**\\n\\t         * @name module:/zrender/graphic/Displayable#z\\n\\t         * @type {number}\\n\\t         * @default 0\\n\\t         */\\n\\t        z: 0,\\n\\n\\t        /**\\n\\t         * @name module:/zrender/graphic/Displayable#z\\n\\t         * @type {number}\\n\\t         * @default 0\\n\\t         */\\n\\t        z2: 0,\\n\\n\\t        /**\\n\\t         * z层level，决定绘画在哪层canvas中\\n\\t         * @name module:/zrender/graphic/Displayable#zlevel\\n\\t         * @type {number}\\n\\t         * @default 0\\n\\t         */\\n\\t        zlevel: 0,\\n\\n\\t        /**\\n\\t         * 是否可拖拽\\n\\t         * @name module:/zrender/graphic/Displayable#draggable\\n\\t         * @type {boolean}\\n\\t         * @default false\\n\\t         */\\n\\t        draggable: false,\\n\\n\\t        /**\\n\\t         * 是否正在拖拽\\n\\t         * @name module:/zrender/graphic/Displayable#draggable\\n\\t         * @type {boolean}\\n\\t         * @default false\\n\\t         */\\n\\t        dragging: false,\\n\\n\\t        /**\\n\\t         * 是否相应鼠标事件\\n\\t         * @name module:/zrender/graphic/Displayable#silent\\n\\t         * @type {boolean}\\n\\t         * @default false\\n\\t         */\\n\\t        silent: false,\\n\\n\\t        /**\\n\\t         * If enable culling\\n\\t         * @type {boolean}\\n\\t         * @default false\\n\\t         */\\n\\t        culling: false,\\n\\n\\t        /**\\n\\t         * Mouse cursor when hovered\\n\\t         * @name module:/zrender/graphic/Displayable#cursor\\n\\t         * @type {string}\\n\\t         */\\n\\t        cursor: 'pointer',\\n\\n\\t        /**\\n\\t         * If hover area is bounding rect\\n\\t         * @name module:/zrender/graphic/Displayable#rectHover\\n\\t         * @type {string}\\n\\t         */\\n\\t        rectHover: false,\\n\\n\\t        /**\\n\\t         * Render the element progressively when the value >= 0,\\n\\t         * usefull for large data.\\n\\t         * @type {number}\\n\\t         */\\n\\t        progressive: -1,\\n\\n\\t        beforeBrush: function (ctx) {},\\n\\n\\t        afterBrush: function (ctx) {},\\n\\n\\t        /**\\n\\t         * 图形绘制方法\\n\\t         * @param {Canvas2DRenderingContext} ctx\\n\\t         */\\n\\t        // Interface\\n\\t        brush: function (ctx, prevEl) {},\\n\\n\\t        /**\\n\\t         * 获取最小包围盒\\n\\t         * @return {module:zrender/core/BoundingRect}\\n\\t         */\\n\\t        // Interface\\n\\t        getBoundingRect: function () {},\\n\\n\\t        /**\\n\\t         * 判断坐标 x, y 是否在图形上\\n\\t         * If displayable element contain coord x, y\\n\\t         * @param  {number} x\\n\\t         * @param  {number} y\\n\\t         * @return {boolean}\\n\\t         */\\n\\t        contain: function (x, y) {\\n\\t            return this.rectContain(x, y);\\n\\t        },\\n\\n\\t        /**\\n\\t         * @param  {Function} cb\\n\\t         * @param  {}   context\\n\\t         */\\n\\t        traverse: function (cb, context) {\\n\\t            cb.call(context, this);\\n\\t        },\\n\\n\\t        /**\\n\\t         * 判断坐标 x, y 是否在图形的包围盒上\\n\\t         * If bounding rect of element contain coord x, y\\n\\t         * @param  {number} x\\n\\t         * @param  {number} y\\n\\t         * @return {boolean}\\n\\t         */\\n\\t        rectContain: function (x, y) {\\n\\t            var coord = this.transformCoordToLocal(x, y);\\n\\t            var rect = this.getBoundingRect();\\n\\t            return rect.contain(coord[0], coord[1]);\\n\\t        },\\n\\n\\t        /**\\n\\t         * 标记图形元素为脏，并且在下一帧重绘\\n\\t         * Mark displayable element dirty and refresh next frame\\n\\t         */\\n\\t        dirty: function () {\\n\\t            this.__dirty = true;\\n\\n\\t            this._rect = null;\\n\\n\\t            this.__zr && this.__zr.refresh();\\n\\t        },\\n\\n\\t        /**\\n\\t         * 图形是否会触发事件\\n\\t         * If displayable object binded any event\\n\\t         * @return {boolean}\\n\\t         */\\n\\t        // TODO, 通过 bind 绑定的事件\\n\\t        // isSilent: function () {\\n\\t        //     return !(\\n\\t        //         this.hoverable || this.draggable\\n\\t        //         || this.onmousemove || this.onmouseover || this.onmouseout\\n\\t        //         || this.onmousedown || this.onmouseup || this.onclick\\n\\t        //         || this.ondragenter || this.ondragover || this.ondragleave\\n\\t        //         || this.ondrop\\n\\t        //     );\\n\\t        // },\\n\\t        /**\\n\\t         * Alias for animate('style')\\n\\t         * @param {boolean} loop\\n\\t         */\\n\\t        animateStyle: function (loop) {\\n\\t            return this.animate('style', loop);\\n\\t        },\\n\\n\\t        attrKV: function (key, value) {\\n\\t            if (key !== 'style') {\\n\\t                Element.prototype.attrKV.call(this, key, value);\\n\\t            }\\n\\t            else {\\n\\t                this.style.set(value);\\n\\t            }\\n\\t        },\\n\\n\\t        /**\\n\\t         * @param {Object|string} key\\n\\t         * @param {*} value\\n\\t         */\\n\\t        setStyle: function (key, value) {\\n\\t            this.style.set(key, value);\\n\\t            this.dirty(false);\\n\\t            return this;\\n\\t        },\\n\\n\\t        /**\\n\\t         * Use given style object\\n\\t         * @param  {Object} obj\\n\\t         */\\n\\t        useStyle: function (obj) {\\n\\t            this.style = new Style(obj);\\n\\t            this.dirty(false);\\n\\t            return this;\\n\\t        }\\n\\t    };\\n\\n\\t    zrUtil.inherits(Displayable, Element);\\n\\n\\t    zrUtil.mixin(Displayable, RectText);\\n\\t    // zrUtil.mixin(Displayable, Stateful);\\n\\n\\t    module.exports = Displayable;\\n\\n\\n/***/ },\\n/* 22 */\\n/***/ function(module, exports) {\\n\\n\\t/**\\n\\t * @module zrender/graphic/Style\\n\\t */\\n\\n\\n\\t    var STYLE_COMMON_PROPS = [\\n\\t        ['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'],\\n\\t        ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]\\n\\t    ];\\n\\n\\t    // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\\n\\t    // var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\\n\\n\\t    var Style = function (opts) {\\n\\t        this.extendFrom(opts);\\n\\t    };\\n\\n\\t    function createLinearGradient(ctx, obj, rect) {\\n\\t        var x = obj.x == null ? 0 : obj.x;\\n\\t        var x2 = obj.x2 == null ? 1 : obj.x2;\\n\\t        var y = obj.y == null ? 0 : obj.y;\\n\\t        var y2 = obj.y2 == null ? 0 : obj.y2;\\n\\n\\t        if (!obj.global) {\\n\\t            x = x * rect.width + rect.x;\\n\\t            x2 = x2 * rect.width + rect.x;\\n\\t            y = y * rect.height + rect.y;\\n\\t            y2 = y2 * rect.height + rect.y;\\n\\t        }\\n\\n\\t        var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\\n\\n\\t        return canvasGradient;\\n\\t    }\\n\\n\\t    function createRadialGradient(ctx, obj, rect) {\\n\\t        var width = rect.width;\\n\\t        var height = rect.height;\\n\\t        var min = Math.min(width, height);\\n\\n\\t        var x = obj.x == null ? 0.5 : obj.x;\\n\\t        var y = obj.y == null ? 0.5 : obj.y;\\n\\t        var r = obj.r == null ? 0.5 : obj.r;\\n\\t        if (!obj.global) {\\n\\t            x = x * width + rect.x;\\n\\t            y = y * height + rect.y;\\n\\t            r = r * min;\\n\\t        }\\n\\n\\t        var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\\n\\n\\t        return canvasGradient;\\n\\t    }\\n\\n\\n\\t    Style.prototype = {\\n\\n\\t        constructor: Style,\\n\\n\\t        /**\\n\\t         * @type {string}\\n\\t         */\\n\\t        fill: '#000000',\\n\\n\\t        /**\\n\\t         * @type {string}\\n\\t         */\\n\\t        stroke: null,\\n\\n\\t        /**\\n\\t         * @type {number}\\n\\t         */\\n\\t        opacity: 1,\\n\\n\\t        /**\\n\\t         * @type {Array.<number>}\\n\\t         */\\n\\t        lineDash: null,\\n\\n\\t        /**\\n\\t         * @type {number}\\n\\t         */\\n\\t        lineDashOffset: 0,\\n\\n\\t        /**\\n\\t         * @type {number}\\n\\t         */\\n\\t        shadowBlur: 0,\\n\\n\\t        /**\\n\\t         * @type {number}\\n\\t         */\\n\\t        shadowOffsetX: 0,\\n\\n\\t        /**\\n\\t         * @type {number}\\n\\t         */\\n\\t        shadowOffsetY: 0,\\n\\n\\t        /**\\n\\t         * @type {number}\\n\\t         */\\n\\t        lineWidth: 1,\\n\\n\\t        /**\\n\\t         * If stroke ignore scale\\n\\t         * @type {Boolean}\\n\\t         */\\n\\t        strokeNoScale: false,\\n\\n\\t        // Bounding rect text configuration\\n\\t        // Not affected by element transform\\n\\t        /**\\n\\t         * @type {string}\\n\\t         */\\n\\t        text: null,\\n\\n\\t        /**\\n\\t         * @type {string}\\n\\t         */\\n\\t        textFill: '#000',\\n\\n\\t        /**\\n\\t         * @type {string}\\n\\t         */\\n\\t        textStroke: null,\\n\\n\\t        /**\\n\\t         * 'inside', 'left', 'right', 'top', 'bottom'\\n\\t         * [x, y]\\n\\t         * @type {string|Array.<number>}\\n\\t         * @default 'inside'\\n\\t         */\\n\\t        textPosition: 'inside',\\n\\n\\t        /**\\n\\t         * If not specified, use the boundingRect of a `displayable`.\\n\\t         * @type {Object}\\n\\t         */\\n\\t        textPositionRect: null,\\n\\n\\t        /**\\n\\t         * [x, y]\\n\\t         * @type {Array.<number>}\\n\\t         */\\n\\t        textOffset: null,\\n\\n\\t        /**\\n\\t         * @type {string}\\n\\t         */\\n\\t        textBaseline: null,\\n\\n\\t        /**\\n\\t         * @type {string}\\n\\t         */\\n\\t        textAlign: null,\\n\\n\\t        /**\\n\\t         * @type {string}\\n\\t         */\\n\\t        textVerticalAlign: null,\\n\\n\\t        /**\\n\\t         * Only useful in Path and Image element\\n\\t         * @type {number}\\n\\t         */\\n\\t        textDistance: 5,\\n\\n\\t        /**\\n\\t         * Only useful in Path and Image element\\n\\t         * @type {number}\\n\\t         */\\n\\t        textShadowBlur: 0,\\n\\n\\t        /**\\n\\t         * Only useful in Path and Image element\\n\\t         * @type {number}\\n\\t         */\\n\\t        textShadowOffsetX: 0,\\n\\n\\t        /**\\n\\t         * Only useful in Path and Image element\\n\\t         * @type {number}\\n\\t         */\\n\\t        textShadowOffsetY: 0,\\n\\n\\t        /**\\n\\t         * If transform text\\n\\t         * Only useful in Path and Image element\\n\\t         * @type {boolean}\\n\\t         */\\n\\t        textTransform: false,\\n\\n\\t        /**\\n\\t         * Text rotate around position of Path or Image\\n\\t         * Only useful in Path and Image element and textTransform is false.\\n\\t         */\\n\\t        textRotation: 0,\\n\\n\\t        /**\\n\\t         * @type {string}\\n\\t         * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\\n\\t         */\\n\\t        blend: null,\\n\\n\\t        /**\\n\\t         * @param {CanvasRenderingContext2D} ctx\\n\\t         */\\n\\t        bind: function (ctx, el, prevEl) {\\n\\t            var style = this;\\n\\t            var prevStyle = prevEl && prevEl.style;\\n\\t            var firstDraw = !prevStyle;\\n\\n\\t            for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\\n\\t                var prop = STYLE_COMMON_PROPS[i];\\n\\t                var styleName = prop[0];\\n\\n\\t                if (firstDraw || style[styleName] !== prevStyle[styleName]) {\\n\\t                    // FIXME Invalid property value will cause style leak from previous element.\\n\\t                    ctx[styleName] = style[styleName] || prop[1];\\n\\t                }\\n\\t            }\\n\\n\\t            if ((firstDraw || style.fill !== prevStyle.fill)) {\\n\\t                ctx.fillStyle = style.fill;\\n\\t            }\\n\\t            if ((firstDraw || style.stroke !== prevStyle.stroke)) {\\n\\t                ctx.strokeStyle = style.stroke;\\n\\t            }\\n\\t            if ((firstDraw || style.opacity !== prevStyle.opacity)) {\\n\\t                ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\\n\\t            }\\n\\n\\t            if ((firstDraw || style.blend !== prevStyle.blend)) {\\n\\t                ctx.globalCompositeOperation = style.blend || 'source-over';\\n\\t            }\\n\\t            if (this.hasStroke()) {\\n\\t                var lineWidth = style.lineWidth;\\n\\t                ctx.lineWidth = lineWidth / (\\n\\t                    (this.strokeNoScale && el && el.getLineScale) ? el.getLineScale() : 1\\n\\t                );\\n\\t            }\\n\\t        },\\n\\n\\t        hasFill: function () {\\n\\t            var fill = this.fill;\\n\\t            return fill != null && fill !== 'none';\\n\\t        },\\n\\n\\t        hasStroke: function () {\\n\\t            var stroke = this.stroke;\\n\\t            return stroke != null && stroke !== 'none' && this.lineWidth > 0;\\n\\t        },\\n\\n\\t        /**\\n\\t         * Extend from other style\\n\\t         * @param {zrender/graphic/Style} otherStyle\\n\\t         * @param {boolean} overwrite\\n\\t         */\\n\\t        extendFrom: function (otherStyle, overwrite) {\\n\\t            if (otherStyle) {\\n\\t                var target = this;\\n\\t                for (var name in otherStyle) {\\n\\t                    if (otherStyle.hasOwnProperty(name)\\n\\t                        && (overwrite || ! target.hasOwnProperty(name))\\n\\t                    ) {\\n\\t                        target[name] = otherStyle[name];\\n\\t                    }\\n\\t                }\\n\\t            }\\n\\t        },\\n\\n\\t        /**\\n\\t         * Batch setting style with a given object\\n\\t         * @param {Object|string} obj\\n\\t         * @param {*} [obj]\\n\\t         */\\n\\t        set: function (obj, value) {\\n\\t            if (typeof obj === 'string') {\\n\\t                this[obj] = value;\\n\\t            }\\n\\t            else {\\n\\t                this.extendFrom(obj, true);\\n\\t            }\\n\\t        },\\n\\n\\t        /**\\n\\t         * Clone\\n\\t         * @return {zrender/graphic/Style} [description]\\n\\t         */\\n\\t        clone: function () {\\n\\t            var newStyle = new this.constructor();\\n\\t            newStyle.extendFrom(this, true);\\n\\t            return newStyle;\\n\\t        },\\n\\n\\t        getGradient: function (ctx, obj, rect) {\\n\\t            var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\\n\\t            var canvasGradient = method(ctx, obj, rect);\\n\\t            var colorStops = obj.colorStops;\\n\\t            for (var i = 0; i < colorStops.length; i++) {\\n\\t                canvasGradient.addColorStop(\\n\\t                    colorStops[i].offset, colorStops[i].color\\n\\t                );\\n\\t            }\\n\\t            return canvasGradient;\\n\\t        }\\n\\t    };\\n\\n\\t    var styleProto = Style.prototype;\\n\\t    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\\n\\t        var prop = STYLE_COMMON_PROPS[i];\\n\\t        if (!(prop[0] in styleProto)) {\\n\\t            styleProto[prop[0]] = prop[1];\\n\\t        }\\n\\t    }\\n\\n\\t    // Provide for others\\n\\t    Style.getGradient = styleProto.getGradient;\\n\\n\\t    module.exports = Style;\\n\\n\\n/***/ },\\n/* 23 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t'use strict';\\n\\t/**\\n\\t * @module zrender/Element\\n\\t */\\n\\n\\n\\t    var guid = __webpack_require__(24);\\n\\t    var Eventful = __webpack_require__(25);\\n\\t    var Transformable = __webpack_require__(26);\\n\\t    var Animatable = __webpack_require__(27);\\n\\t    var zrUtil = __webpack_require__(4);\\n\\n\\t    /**\\n\\t     * @alias module:zrender/Element\\n\\t     * @constructor\\n\\t     * @extends {module:zrender/mixin/Animatable}\\n\\t     * @extends {module:zrender/mixin/Transformable}\\n\\t     * @extends {module:zrender/mixin/Eventful}\\n\\t     */\\n\\t    var Element = function (opts) {\\n\\n\\t        Transformable.call(this, opts);\\n\\t        Eventful.call(this, opts);\\n\\t        Animatable.call(this, opts);\\n\\n\\t        /**\\n\\t         * 画布元素ID\\n\\t         * @type {string}\\n\\t         */\\n\\t        this.id = opts.id || guid();\\n\\t    };\\n\\n\\t    Element.prototype = {\\n\\n\\t        /**\\n\\t         * 元素类型\\n\\t         * Element type\\n\\t         * @type {string}\\n\\t         */\\n\\t        type: 'element',\\n\\n\\t        /**\\n\\t         * 元素名字\\n\\t         * Element name\\n\\t         * @type {string}\\n\\t         */\\n\\t        name: '',\\n\\n\\t        /**\\n\\t         * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\\n\\t         * ZRender instance will be assigned when element is associated with zrender\\n\\t         * @name module:/zrender/Element#__zr\\n\\t         * @type {module:zrender/ZRender}\\n\\t         */\\n\\t        __zr: null,\\n\\n\\t        /**\\n\\t         * 图形是否忽略，为true时忽略图形的绘制以及事件触发\\n\\t         * If ignore drawing and events of the element object\\n\\t         * @name module:/zrender/Element#ignore\\n\\t         * @type {boolean}\\n\\t         * @default false\\n\\t         */\\n\\t        ignore: false,\\n\\n\\t        /**\\n\\t         * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\\n\\t         * 该路径会继承被裁减对象的变换\\n\\t         * @type {module:zrender/graphic/Path}\\n\\t         * @see http://www.w3.org/TR/2dcontext/#clipping-region\\n\\t         * @readOnly\\n\\t         */\\n\\t        clipPath: null,\\n\\n\\t        /**\\n\\t         * Drift element\\n\\t         * @param  {number} dx dx on the global space\\n\\t         * @param  {number} dy dy on the global space\\n\\t         */\\n\\t        drift: function (dx, dy) {\\n\\t            switch (this.draggable) {\\n\\t                case 'horizontal':\\n\\t                    dy = 0;\\n\\t                    break;\\n\\t                case 'vertical':\\n\\t                    dx = 0;\\n\\t                    break;\\n\\t            }\\n\\n\\t            var m = this.transform;\\n\\t            if (!m) {\\n\\t                m = this.transform = [1, 0, 0, 1, 0, 0];\\n\\t            }\\n\\t            m[4] += dx;\\n\\t            m[5] += dy;\\n\\n\\t            this.decomposeTransform();\\n\\t            this.dirty(false);\\n\\t        },\\n\\n\\t        /**\\n\\t         * Hook before update\\n\\t         */\\n\\t        beforeUpdate: function () {},\\n\\t        /**\\n\\t         * Hook after update\\n\\t         */\\n\\t        afterUpdate: function () {},\\n\\t        /**\\n\\t         * Update each frame\\n\\t         */\\n\\t        update: function () {\\n\\t            this.updateTransform();\\n\\t        },\\n\\n\\t        /**\\n\\t         * @param  {Function} cb\\n\\t         * @param  {}   context\\n\\t         */\\n\\t        traverse: function (cb, context) {},\\n\\n\\t        /**\\n\\t         * @protected\\n\\t         */\\n\\t        attrKV: function (key, value) {\\n\\t            if (key === 'position' || key === 'scale' || key === 'origin') {\\n\\t                // Copy the array\\n\\t                if (value) {\\n\\t                    var target = this[key];\\n\\t                    if (!target) {\\n\\t                        target = this[key] = [];\\n\\t                    }\\n\\t                    target[0] = value[0];\\n\\t                    target[1] = value[1];\\n\\t                }\\n\\t            }\\n\\t            else {\\n\\t                this[key] = value;\\n\\t            }\\n\\t        },\\n\\n\\t        /**\\n\\t         * Hide the element\\n\\t         */\\n\\t        hide: function () {\\n\\t            this.ignore = true;\\n\\t            this.__zr && this.__zr.refresh();\\n\\t        },\\n\\n\\t        /**\\n\\t         * Show the element\\n\\t         */\\n\\t        show: function () {\\n\\t            this.ignore = false;\\n\\t            this.__zr && this.__zr.refresh();\\n\\t        },\\n\\n\\t        /**\\n\\t         * @param {string|Object} key\\n\\t         * @param {*} value\\n\\t         */\\n\\t        attr: function (key, value) {\\n\\t            if (typeof key === 'string') {\\n\\t                this.attrKV(key, value);\\n\\t            }\\n\\t            else if (zrUtil.isObject(key)) {\\n\\t                for (var name in key) {\\n\\t                    if (key.hasOwnProperty(name)) {\\n\\t                        this.attrKV(name, key[name]);\\n\\t                    }\\n\\t                }\\n\\t            }\\n\\n\\t            this.dirty(false);\\n\\n\\t            return this;\\n\\t        },\\n\\n\\t        /**\\n\\t         * @param {module:zrender/graphic/Path} clipPath\\n\\t         */\\n\\t        setClipPath: function (clipPath) {\\n\\t            var zr = this.__zr;\\n\\t            if (zr) {\\n\\t                clipPath.addSelfToZr(zr);\\n\\t            }\\n\\n\\t            // Remove previous clip path\\n\\t            if (this.clipPath && this.clipPath !== clipPath) {\\n\\t                this.removeClipPath();\\n\\t            }\\n\\n\\t            this.clipPath = clipPath;\\n\\t            clipPath.__zr = zr;\\n\\t            clipPath.__clipTarget = this;\\n\\n\\t            this.dirty(false);\\n\\t        },\\n\\n\\t        /**\\n\\t         */\\n\\t        removeClipPath: function () {\\n\\t            var clipPath = this.clipPath;\\n\\t            if (clipPath) {\\n\\t                if (clipPath.__zr) {\\n\\t                    clipPath.removeSelfFromZr(clipPath.__zr);\\n\\t                }\\n\\n\\t                clipPath.__zr = null;\\n\\t                clipPath.__clipTarget = null;\\n\\t                this.clipPath = null;\\n\\n\\t                this.dirty(false);\\n\\t            }\\n\\t        },\\n\\n\\t        /**\\n\\t         * Add self from zrender instance.\\n\\t         * Not recursively because it will be invoked when element added to storage.\\n\\t         * @param {module:zrender/ZRender} zr\\n\\t         */\\n\\t        addSelfToZr: function (zr) {\\n\\t            this.__zr = zr;\\n\\t            // 添加动画\\n\\t            var animators = this.animators;\\n\\t            if (animators) {\\n\\t                for (var i = 0; i < animators.length; i++) {\\n\\t                    zr.animation.addAnimator(animators[i]);\\n\\t                }\\n\\t            }\\n\\n\\t            if (this.clipPath) {\\n\\t                this.clipPath.addSelfToZr(zr);\\n\\t            }\\n\\t        },\\n\\n\\t        /**\\n\\t         * Remove self from zrender instance.\\n\\t         * Not recursively because it will be invoked when element added to storage.\\n\\t         * @param {module:zrender/ZRender} zr\\n\\t         */\\n\\t        removeSelfFromZr: function (zr) {\\n\\t            this.__zr = null;\\n\\t            // 移除动画\\n\\t            var animators = this.animators;\\n\\t            if (animators) {\\n\\t                for (var i = 0; i < animators.length; i++) {\\n\\t                    zr.animation.removeAnimator(animators[i]);\\n\\t                }\\n\\t            }\\n\\n\\t            if (this.clipPath) {\\n\\t                this.clipPath.removeSelfFromZr(zr);\\n\\t            }\\n\\t        }\\n\\t    };\\n\\n\\t    zrUtil.mixin(Element, Animatable);\\n\\t    zrUtil.mixin(Element, Transformable);\\n\\t    zrUtil.mixin(Element, Eventful);\\n\\n\\t    module.exports = Element;\\n\\n\\n/***/ },\\n/* 24 */\\n/***/ function(module, exports) {\\n\\n\\t/**\\n\\t * zrender: 生成唯一id\\n\\t *\\n\\t * @author errorrik (errorrik@gmail.com)\\n\\t */\\n\\n\\n\\t    var idStart = 0x0907;\\n\\n\\t    module.exports = function () {\\n\\t        return idStart++;\\n\\t    };\\n\\n\\n\\n/***/ },\\n/* 25 */\\n/***/ function(module, exports) {\\n\\n\\t/**\\n\\t * 事件扩展\\n\\t * @module zrender/mixin/Eventful\\n\\t * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\\n\\t *         pissang (https://www.github.com/pissang)\\n\\t */\\n\\n\\n\\t    var arrySlice = Array.prototype.slice;\\n\\n\\t    /**\\n\\t     * 事件分发器\\n\\t     * @alias module:zrender/mixin/Eventful\\n\\t     * @constructor\\n\\t     */\\n\\t    var Eventful = function () {\\n\\t        this._$handlers = {};\\n\\t    };\\n\\n\\t    Eventful.prototype = {\\n\\n\\t        constructor: Eventful,\\n\\n\\t        /**\\n\\t         * 单次触发绑定，trigger后销毁\\n\\t         *\\n\\t         * @param {string} event 事件名\\n\\t         * @param {Function} handler 响应函数\\n\\t         * @param {Object} context\\n\\t         */\\n\\t        one: function (event, handler, context) {\\n\\t            var _h = this._$handlers;\\n\\n\\t            if (!handler || !event) {\\n\\t                return this;\\n\\t            }\\n\\n\\t            if (!_h[event]) {\\n\\t                _h[event] = [];\\n\\t            }\\n\\n\\t            for (var i = 0; i < _h[event].length; i++) {\\n\\t                if (_h[event][i].h === handler) {\\n\\t                    return this;\\n\\t                }\\n\\t            }\\n\\n\\t            _h[event].push({\\n\\t                h: handler,\\n\\t                one: true,\\n\\t                ctx: context || this\\n\\t            });\\n\\n\\t            return this;\\n\\t        },\\n\\n\\t        /**\\n\\t         * 绑定事件\\n\\t         * @param {string} event 事件名\\n\\t         * @param {Function} handler 事件处理函数\\n\\t         * @param {Object} [context]\\n\\t         */\\n\\t        on: function (event, handler, context) {\\n\\t            var _h = this._$handlers;\\n\\n\\t            if (!handler || !event) {\\n\\t                return this;\\n\\t            }\\n\\n\\t            if (!_h[event]) {\\n\\t                _h[event] = [];\\n\\t            }\\n\\n\\t            for (var i = 0; i < _h[event].length; i++) {\\n\\t                if (_h[event][i].h === handler) {\\n\\t                    return this;\\n\\t                }\\n\\t            }\\n\\n\\t            _h[event].push({\\n\\t                h: handler,\\n\\t                one: false,\\n\\t                ctx: context || this\\n\\t            });\\n\\n\\t            return this;\\n\\t        },\\n\\n\\t        /**\\n\\t         * 是否绑定了事件\\n\\t         * @param  {string}  event\\n\\t         * @return {boolean}\\n\\t         */\\n\\t        isSilent: function (event) {\\n\\t            var _h = this._$handlers;\\n\\t            return _h[event] && _h[event].length;\\n\\t        },\\n\\n\\t        /**\\n\\t         * 解绑事件\\n\\t         * @param {string} event 事件名\\n\\t         * @param {Function} [handler] 事件处理函数\\n\\t         */\\n\\t        off: function (event, handler) {\\n\\t            var _h = this._$handlers;\\n\\n\\t            if (!event) {\\n\\t                this._$handlers = {};\\n\\t                return this;\\n\\t            }\\n\\n\\t            if (handler) {\\n\\t                if (_h[event]) {\\n\\t                    var newList = [];\\n\\t                    for (var i = 0, l = _h[event].length; i < l; i++) {\\n\\t                        if (_h[event][i]['h'] != handler) {\\n\\t                            newList.push(_h[event][i]);\\n\\t                        }\\n\\t                    }\\n\\t                    _h[event] = newList;\\n\\t                }\\n\\n\\t                if (_h[event] && _h[event].length === 0) {\\n\\t                    delete _h[event];\\n\\t                }\\n\\t            }\\n\\t            else {\\n\\t                delete _h[event];\\n\\t            }\\n\\n\\t            return this;\\n\\t        },\\n\\n\\t        /**\\n\\t         * 事件分发\\n\\t         *\\n\\t         * @param {string} type 事件类型\\n\\t         */\\n\\t        trigger: function (type) {\\n\\t            if (this._$handlers[type]) {\\n\\t                var args = arguments;\\n\\t                var argLen = args.length;\\n\\n\\t                if (argLen > 3) {\\n\\t                    args = arrySlice.call(args, 1);\\n\\t                }\\n\\n\\t                var _h = this._$handlers[type];\\n\\t                var len = _h.length;\\n\\t                for (var i = 0; i < len;) {\\n\\t                    // Optimize advise from backbone\\n\\t                    switch (argLen) {\\n\\t                        case 1:\\n\\t                            _h[i]['h'].call(_h[i]['ctx']);\\n\\t                            break;\\n\\t                        case 2:\\n\\t                            _h[i]['h'].call(_h[i]['ctx'], args[1]);\\n\\t                            break;\\n\\t                        case 3:\\n\\t                            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\\n\\t                            break;\\n\\t                        default:\\n\\t                            // have more than 2 given arguments\\n\\t                            _h[i]['h'].apply(_h[i]['ctx'], args);\\n\\t                            break;\\n\\t                    }\\n\\n\\t                    if (_h[i]['one']) {\\n\\t                        _h.splice(i, 1);\\n\\t                        len--;\\n\\t                    }\\n\\t                    else {\\n\\t                        i++;\\n\\t                    }\\n\\t                }\\n\\t            }\\n\\n\\t            return this;\\n\\t        },\\n\\n\\t        /**\\n\\t         * 带有context的事件分发, 最后一个参数是事件回调的context\\n\\t         * @param {string} type 事件类型\\n\\t         */\\n\\t        triggerWithContext: function (type) {\\n\\t            if (this._$handlers[type]) {\\n\\t                var args = arguments;\\n\\t                var argLen = args.length;\\n\\n\\t                if (argLen > 4) {\\n\\t                    args = arrySlice.call(args, 1, args.length - 1);\\n\\t                }\\n\\t                var ctx = args[args.length - 1];\\n\\n\\t                var _h = this._$handlers[type];\\n\\t                var len = _h.length;\\n\\t                for (var i = 0; i < len;) {\\n\\t                    // Optimize advise from backbone\\n\\t                    switch (argLen) {\\n\\t                        case 1:\\n\\t                            _h[i]['h'].call(ctx);\\n\\t                            break;\\n\\t                        case 2:\\n\\t                            _h[i]['h'].call(ctx, args[1]);\\n\\t                            break;\\n\\t                        case 3:\\n\\t                            _h[i]['h'].call(ctx, args[1], args[2]);\\n\\t                            break;\\n\\t                        default:\\n\\t                            // have more than 2 given arguments\\n\\t                            _h[i]['h'].apply(ctx, args);\\n\\t                            break;\\n\\t                    }\\n\\n\\t                    if (_h[i]['one']) {\\n\\t                        _h.splice(i, 1);\\n\\t                        len--;\\n\\t                    }\\n\\t                    else {\\n\\t                        i++;\\n\\t                    }\\n\\t                }\\n\\t            }\\n\\n\\t            return this;\\n\\t        }\\n\\t    };\\n\\n\\t    // 对象可以通过 onxxxx 绑定事件\\n\\t    /**\\n\\t     * @event module:zrender/mixin/Eventful#onclick\\n\\t     * @type {Function}\\n\\t     * @default null\\n\\t     */\\n\\t    /**\\n\\t     * @event module:zrender/mixin/Eventful#onmouseover\\n\\t     * @type {Function}\\n\\t     * @default null\\n\\t     */\\n\\t    /**\\n\\t     * @event module:zrender/mixin/Eventful#onmouseout\\n\\t     * @type {Function}\\n\\t     * @default null\\n\\t     */\\n\\t    /**\\n\\t     * @event module:zrender/mixin/Eventful#onmousemove\\n\\t     * @type {Function}\\n\\t     * @default null\\n\\t     */\\n\\t    /**\\n\\t     * @event module:zrender/mixin/Eventful#onmousewheel\\n\\t     * @type {Function}\\n\\t     * @default null\\n\\t     */\\n\\t    /**\\n\\t     * @event module:zrender/mixin/Eventful#onmousedown\\n\\t     * @type {Function}\\n\\t     * @default null\\n\\t     */\\n\\t    /**\\n\\t     * @event module:zrender/mixin/Eventful#onmouseup\\n\\t     * @type {Function}\\n\\t     * @default null\\n\\t     */\\n\\t    /**\\n\\t     * @event module:zrender/mixin/Eventful#ondrag\\n\\t     * @type {Function}\\n\\t     * @default null\\n\\t     */\\n\\t    /**\\n\\t     * @event module:zrender/mixin/Eventful#ondragstart\\n\\t     * @type {Function}\\n\\t     * @default null\\n\\t     */\\n\\t    /**\\n\\t     * @event module:zrender/mixin/Eventful#ondragend\\n\\t     * @type {Function}\\n\\t     * @default null\\n\\t     */\\n\\t    /**\\n\\t     * @event module:zrender/mixin/Eventful#ondragenter\\n\\t     * @type {Function}\\n\\t     * @default null\\n\\t     */\\n\\t    /**\\n\\t     * @event module:zrender/mixin/Eventful#ondragleave\\n\\t     * @type {Function}\\n\\t     * @default null\\n\\t     */\\n\\t    /**\\n\\t     * @event module:zrender/mixin/Eventful#ondragover\\n\\t     * @type {Function}\\n\\t     * @default null\\n\\t     */\\n\\t    /**\\n\\t     * @event module:zrender/mixin/Eventful#ondrop\\n\\t     * @type {Function}\\n\\t     * @default null\\n\\t     */\\n\\n\\t    module.exports = Eventful;\\n\\n\\n\\n/***/ },\\n/* 26 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t'use strict';\\n\\t/**\\n\\t * 提供变换扩展\\n\\t * @module zrender/mixin/Transformable\\n\\t * @author pissang (https://www.github.com/pissang)\\n\\t */\\n\\n\\n\\t    var matrix = __webpack_require__(11);\\n\\t    var vector = __webpack_require__(10);\\n\\t    var mIdentity = matrix.identity;\\n\\n\\t    var EPSILON = 5e-5;\\n\\n\\t    function isNotAroundZero(val) {\\n\\t        return val > EPSILON || val < -EPSILON;\\n\\t    }\\n\\n\\t    /**\\n\\t     * @alias module:zrender/mixin/Transformable\\n\\t     * @constructor\\n\\t     */\\n\\t    var Transformable = function (opts) {\\n\\t        opts = opts || {};\\n\\t        // If there are no given position, rotation, scale\\n\\t        if (!opts.position) {\\n\\t            /**\\n\\t             * 平移\\n\\t             * @type {Array.<number>}\\n\\t             * @default [0, 0]\\n\\t             */\\n\\t            this.position = [0, 0];\\n\\t        }\\n\\t        if (opts.rotation == null) {\\n\\t            /**\\n\\t             * 旋转\\n\\t             * @type {Array.<number>}\\n\\t             * @default 0\\n\\t             */\\n\\t            this.rotation = 0;\\n\\t        }\\n\\t        if (!opts.scale) {\\n\\t            /**\\n\\t             * 缩放\\n\\t             * @type {Array.<number>}\\n\\t             * @default [1, 1]\\n\\t             */\\n\\t            this.scale = [1, 1];\\n\\t        }\\n\\t        /**\\n\\t         * 旋转和缩放的原点\\n\\t         * @type {Array.<number>}\\n\\t         * @default null\\n\\t         */\\n\\t        this.origin = this.origin || null;\\n\\t    };\\n\\n\\t    var transformableProto = Transformable.prototype;\\n\\t    transformableProto.transform = null;\\n\\n\\t    /**\\n\\t     * 判断是否需要有坐标变换\\n\\t     * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\\n\\t     */\\n\\t    transformableProto.needLocalTransform = function () {\\n\\t        return isNotAroundZero(this.rotation)\\n\\t            || isNotAroundZero(this.position[0])\\n\\t            || isNotAroundZero(this.position[1])\\n\\t            || isNotAroundZero(this.scale[0] - 1)\\n\\t            || isNotAroundZero(this.scale[1] - 1);\\n\\t    };\\n\\n\\t    transformableProto.updateTransform = function () {\\n\\t        var parent = this.parent;\\n\\t        var parentHasTransform = parent && parent.transform;\\n\\t        var needLocalTransform = this.needLocalTransform();\\n\\n\\t        var m = this.transform;\\n\\t        if (!(needLocalTransform || parentHasTransform)) {\\n\\t            m && mIdentity(m);\\n\\t            return;\\n\\t        }\\n\\n\\t        m = m || matrix.create();\\n\\n\\t        if (needLocalTransform) {\\n\\t            this.getLocalTransform(m);\\n\\t        }\\n\\t        else {\\n\\t            mIdentity(m);\\n\\t        }\\n\\n\\t        // 应用父节点变换\\n\\t        if (parentHasTransform) {\\n\\t            if (needLocalTransform) {\\n\\t                matrix.mul(m, parent.transform, m);\\n\\t            }\\n\\t            else {\\n\\t                matrix.copy(m, parent.transform);\\n\\t            }\\n\\t        }\\n\\t        // 保存这个变换矩阵\\n\\t        this.transform = m;\\n\\n\\t        this.invTransform = this.invTransform || matrix.create();\\n\\t        matrix.invert(this.invTransform, m);\\n\\t    };\\n\\n\\t    transformableProto.getLocalTransform = function (m) {\\n\\t        return Transformable.getLocalTransform(this, m);\\n\\t    };\\n\\n\\t    /**\\n\\t     * 将自己的transform应用到context上\\n\\t     * @param {Context2D} ctx\\n\\t     */\\n\\t    transformableProto.setTransform = function (ctx) {\\n\\t        var m = this.transform;\\n\\t        var dpr = ctx.dpr || 1;\\n\\t        if (m) {\\n\\t            ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\\n\\t        }\\n\\t        else {\\n\\t            ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\\n\\t        }\\n\\t    };\\n\\n\\t    transformableProto.restoreTransform = function (ctx) {\\n\\t        var dpr = ctx.dpr || 1;\\n\\t        ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\\n\\t    };\\n\\n\\t    var tmpTransform = [];\\n\\n\\t    /**\\n\\t     * 分解`transform`矩阵到`position`, `rotation`, `scale`\\n\\t     */\\n\\t    transformableProto.decomposeTransform = function () {\\n\\t        if (!this.transform) {\\n\\t            return;\\n\\t        }\\n\\t        var parent = this.parent;\\n\\t        var m = this.transform;\\n\\t        if (parent && parent.transform) {\\n\\t            // Get local transform and decompose them to position, scale, rotation\\n\\t            matrix.mul(tmpTransform, parent.invTransform, m);\\n\\t            m = tmpTransform;\\n\\t        }\\n\\t        var sx = m[0] * m[0] + m[1] * m[1];\\n\\t        var sy = m[2] * m[2] + m[3] * m[3];\\n\\t        var position = this.position;\\n\\t        var scale = this.scale;\\n\\t        if (isNotAroundZero(sx - 1)) {\\n\\t            sx = Math.sqrt(sx);\\n\\t        }\\n\\t        if (isNotAroundZero(sy - 1)) {\\n\\t            sy = Math.sqrt(sy);\\n\\t        }\\n\\t        if (m[0] < 0) {\\n\\t            sx = -sx;\\n\\t        }\\n\\t        if (m[3] < 0) {\\n\\t            sy = -sy;\\n\\t        }\\n\\t        position[0] = m[4];\\n\\t        position[1] = m[5];\\n\\t        scale[0] = sx;\\n\\t        scale[1] = sy;\\n\\t        this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\\n\\t    };\\n\\n\\t    /**\\n\\t     * Get global scale\\n\\t     * @return {Array.<number>}\\n\\t     */\\n\\t    transformableProto.getGlobalScale = function () {\\n\\t        var m = this.transform;\\n\\t        if (!m) {\\n\\t            return [1, 1];\\n\\t        }\\n\\t        var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\\n\\t        var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\\n\\t        if (m[0] < 0) {\\n\\t            sx = -sx;\\n\\t        }\\n\\t        if (m[3] < 0) {\\n\\t            sy = -sy;\\n\\t        }\\n\\t        return [sx, sy];\\n\\t    };\\n\\t    /**\\n\\t     * 变换坐标位置到 shape 的局部坐标空间\\n\\t     * @method\\n\\t     * @param {number} x\\n\\t     * @param {number} y\\n\\t     * @return {Array.<number>}\\n\\t     */\\n\\t    transformableProto.transformCoordToLocal = function (x, y) {\\n\\t        var v2 = [x, y];\\n\\t        var invTransform = this.invTransform;\\n\\t        if (invTransform) {\\n\\t            vector.applyTransform(v2, v2, invTransform);\\n\\t        }\\n\\t        return v2;\\n\\t    };\\n\\n\\t    /**\\n\\t     * 变换局部坐标位置到全局坐标空间\\n\\t     * @method\\n\\t     * @param {number} x\\n\\t     * @param {number} y\\n\\t     * @return {Array.<number>}\\n\\t     */\\n\\t    transformableProto.transformCoordToGlobal = function (x, y) {\\n\\t        var v2 = [x, y];\\n\\t        var transform = this.transform;\\n\\t        if (transform) {\\n\\t            vector.applyTransform(v2, v2, transform);\\n\\t        }\\n\\t        return v2;\\n\\t    };\\n\\n\\t    /**\\n\\t     * @static\\n\\t     * @param {Object} target\\n\\t     * @param {Array.<number>} target.origin\\n\\t     * @param {number} target.rotation\\n\\t     * @param {Array.<number>} target.position\\n\\t     * @param {Array.<number>} [m]\\n\\t     */\\n\\t    Transformable.getLocalTransform = function (target, m) {\\n\\t        m = m || [];\\n\\t        mIdentity(m);\\n\\n\\t        var origin = target.origin;\\n\\t        var scale = target.scale || [1, 1];\\n\\t        var rotation = target.rotation || 0;\\n\\t        var position = target.position || [0, 0];\\n\\n\\t        if (origin) {\\n\\t            // Translate to origin\\n\\t            m[4] -= origin[0];\\n\\t            m[5] -= origin[1];\\n\\t        }\\n\\t        matrix.scale(m, m, scale);\\n\\t        if (rotation) {\\n\\t            matrix.rotate(m, m, rotation);\\n\\t        }\\n\\t        if (origin) {\\n\\t            // Translate back from origin\\n\\t            m[4] += origin[0];\\n\\t            m[5] += origin[1];\\n\\t        }\\n\\n\\t        m[4] += position[0];\\n\\t        m[5] += position[1];\\n\\n\\t        return m;\\n\\t    };\\n\\n\\t    module.exports = Transformable;\\n\\n\\n\\n/***/ },\\n/* 27 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t'use strict';\\n\\t/**\\n\\t * @module zrender/mixin/Animatable\\n\\t */\\n\\n\\n\\t    var Animator = __webpack_require__(28);\\n\\t    var util = __webpack_require__(4);\\n\\t    var isString = util.isString;\\n\\t    var isFunction = util.isFunction;\\n\\t    var isObject = util.isObject;\\n\\t    var log = __webpack_require__(33);\\n\\n\\t    /**\\n\\t     * @alias modue:zrender/mixin/Animatable\\n\\t     * @constructor\\n\\t     */\\n\\t    var Animatable = function () {\\n\\n\\t        /**\\n\\t         * @type {Array.<module:zrender/animation/Animator>}\\n\\t         * @readOnly\\n\\t         */\\n\\t        this.animators = [];\\n\\t    };\\n\\n\\t    Animatable.prototype = {\\n\\n\\t        constructor: Animatable,\\n\\n\\t        /**\\n\\t         * 动画\\n\\t         *\\n\\t         * @param {string} path 需要添加动画的属性获取路径，可以通过a.b.c来获取深层的属性\\n\\t         * @param {boolean} [loop] 动画是否循环\\n\\t         * @return {module:zrender/animation/Animator}\\n\\t         * @example:\\n\\t         *     el.animate('style', false)\\n\\t         *         .when(1000, {x: 10} )\\n\\t         *         .done(function(){ // Animation done })\\n\\t         *         .start()\\n\\t         */\\n\\t        animate: function (path, loop) {\\n\\t            var target;\\n\\t            var animatingShape = false;\\n\\t            var el = this;\\n\\t            var zr = this.__zr;\\n\\t            if (path) {\\n\\t                var pathSplitted = path.split('.');\\n\\t                var prop = el;\\n\\t                // If animating shape\\n\\t                animatingShape = pathSplitted[0] === 'shape';\\n\\t                for (var i = 0, l = pathSplitted.length; i < l; i++) {\\n\\t                    if (!prop) {\\n\\t                        continue;\\n\\t                    }\\n\\t                    prop = prop[pathSplitted[i]];\\n\\t                }\\n\\t                if (prop) {\\n\\t                    target = prop;\\n\\t                }\\n\\t            }\\n\\t            else {\\n\\t                target = el;\\n\\t            }\\n\\n\\t            if (!target) {\\n\\t                log(\\n\\t                    'Property \\\"'\\n\\t                    + path\\n\\t                    + '\\\" is not existed in element '\\n\\t                    + el.id\\n\\t                );\\n\\t                return;\\n\\t            }\\n\\n\\t            var animators = el.animators;\\n\\n\\t            var animator = new Animator(target, loop);\\n\\n\\t            animator.during(function (target) {\\n\\t                el.dirty(animatingShape);\\n\\t            })\\n\\t            .done(function () {\\n\\t                // FIXME Animator will not be removed if use `Animator#stop` to stop animation\\n\\t                animators.splice(util.indexOf(animators, animator), 1);\\n\\t            });\\n\\n\\t            animators.push(animator);\\n\\n\\t            // If animate after added to the zrender\\n\\t            if (zr) {\\n\\t                zr.animation.addAnimator(animator);\\n\\t            }\\n\\n\\t            return animator;\\n\\t        },\\n\\n\\t        /**\\n\\t         * 停止动画\\n\\t         * @param {boolean} forwardToLast If move to last frame before stop\\n\\t         */\\n\\t        stopAnimation: function (forwardToLast) {\\n\\t            var animators = this.animators;\\n\\t            var len = animators.length;\\n\\t            for (var i = 0; i < len; i++) {\\n\\t                animators[i].stop(forwardToLast);\\n\\t            }\\n\\t            animators.length = 0;\\n\\n\\t            return this;\\n\\t        },\\n\\n\\t        /**\\n\\t         * @param {Object} target\\n\\t         * @param {number} [time=500] Time in ms\\n\\t         * @param {string} [easing='linear']\\n\\t         * @param {number} [delay=0]\\n\\t         * @param {Function} [callback]\\n\\t         *\\n\\t         * @example\\n\\t         *  // Animate position\\n\\t         *  el.animateTo({\\n\\t         *      position: [10, 10]\\n\\t         *  }, function () { // done })\\n\\t         *\\n\\t         *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\\n\\t         *  el.animateTo({\\n\\t         *      shape: {\\n\\t         *          width: 500\\n\\t         *      },\\n\\t         *      style: {\\n\\t         *          fill: 'red'\\n\\t         *      }\\n\\t         *      position: [10, 10]\\n\\t         *  }, 100, 100, 'cubicOut', function () { // done })\\n\\t         */\\n\\t         // TODO Return animation key\\n\\t        animateTo: function (target, time, delay, easing, callback) {\\n\\t            // animateTo(target, time, easing, callback);\\n\\t            if (isString(delay)) {\\n\\t                callback = easing;\\n\\t                easing = delay;\\n\\t                delay = 0;\\n\\t            }\\n\\t            // animateTo(target, time, delay, callback);\\n\\t            else if (isFunction(easing)) {\\n\\t                callback = easing;\\n\\t                easing = 'linear';\\n\\t                delay = 0;\\n\\t            }\\n\\t            // animateTo(target, time, callback);\\n\\t            else if (isFunction(delay)) {\\n\\t                callback = delay;\\n\\t                delay = 0;\\n\\t            }\\n\\t            // animateTo(target, callback)\\n\\t            else if (isFunction(time)) {\\n\\t                callback = time;\\n\\t                time = 500;\\n\\t            }\\n\\t            // animateTo(target)\\n\\t            else if (!time) {\\n\\t                time = 500;\\n\\t            }\\n\\t            // Stop all previous animations\\n\\t            this.stopAnimation();\\n\\t            this._animateToShallow('', this, target, time, delay, easing, callback);\\n\\n\\t            // Animators may be removed immediately after start\\n\\t            // if there is nothing to animate\\n\\t            var animators = this.animators.slice();\\n\\t            var count = animators.length;\\n\\t            function done() {\\n\\t                count--;\\n\\t                if (!count) {\\n\\t                    callback && callback();\\n\\t                }\\n\\t            }\\n\\n\\t            // No animators. This should be checked before animators[i].start(),\\n\\t            // because 'done' may be executed immediately if no need to animate.\\n\\t            if (!count) {\\n\\t                callback && callback();\\n\\t            }\\n\\t            // Start after all animators created\\n\\t            // Incase any animator is done immediately when all animation properties are not changed\\n\\t            for (var i = 0; i < animators.length; i++) {\\n\\t                animators[i]\\n\\t                    .done(done)\\n\\t                    .start(easing);\\n\\t            }\\n\\t        },\\n\\n\\t        /**\\n\\t         * @private\\n\\t         * @param {string} path=''\\n\\t         * @param {Object} source=this\\n\\t         * @param {Object} target\\n\\t         * @param {number} [time=500]\\n\\t         * @param {number} [delay=0]\\n\\t         *\\n\\t         * @example\\n\\t         *  // Animate position\\n\\t         *  el._animateToShallow({\\n\\t         *      position: [10, 10]\\n\\t         *  })\\n\\t         *\\n\\t         *  // Animate shape, style and position in 100ms, delayed 100ms\\n\\t         *  el._animateToShallow({\\n\\t         *      shape: {\\n\\t         *          width: 500\\n\\t         *      },\\n\\t         *      style: {\\n\\t         *          fill: 'red'\\n\\t         *      }\\n\\t         *      position: [10, 10]\\n\\t         *  }, 100, 100)\\n\\t         */\\n\\t        _animateToShallow: function (path, source, target, time, delay) {\\n\\t            var objShallow = {};\\n\\t            var propertyCount = 0;\\n\\t            for (var name in target) {\\n\\t                if (!target.hasOwnProperty(name)) {\\n\\t                    continue;\\n\\t                }\\n\\n\\t                if (source[name] != null) {\\n\\t                    if (isObject(target[name]) && !util.isArrayLike(target[name])) {\\n\\t                        this._animateToShallow(\\n\\t                            path ? path + '.' + name : name,\\n\\t                            source[name],\\n\\t                            target[name],\\n\\t                            time,\\n\\t                            delay\\n\\t                        );\\n\\t                    }\\n\\t                    else {\\n\\t                        objShallow[name] = target[name];\\n\\t                        propertyCount++;\\n\\t                    }\\n\\t                }\\n\\t                else if (target[name] != null) {\\n\\t                    // Attr directly if not has property\\n\\t                    // FIXME, if some property not needed for element ?\\n\\t                    if (!path) {\\n\\t                        this.attr(name, target[name]);\\n\\t                    }\\n\\t                    else {  // Shape or style\\n\\t                        var props = {};\\n\\t                        props[path] = {};\\n\\t                        props[path][name] = target[name];\\n\\t                        this.attr(props);\\n\\t                    }\\n\\t                }\\n\\t            }\\n\\n\\t            if (propertyCount > 0) {\\n\\t                this.animate(path, false)\\n\\t                    .when(time == null ? 500 : time, objShallow)\\n\\t                    .delay(delay || 0);\\n\\t            }\\n\\n\\t            return this;\\n\\t        }\\n\\t    };\\n\\n\\t    module.exports = Animatable;\\n\\n\\n/***/ },\\n/* 28 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * @module echarts/animation/Animator\\n\\t */\\n\\n\\n\\t    var Clip = __webpack_require__(29);\\n\\t    var color = __webpack_require__(31);\\n\\t    var util = __webpack_require__(4);\\n\\t    var isArrayLike = util.isArrayLike;\\n\\n\\t    var arraySlice = Array.prototype.slice;\\n\\n\\t    function defaultGetter(target, key) {\\n\\t        return target[key];\\n\\t    }\\n\\n\\t    function defaultSetter(target, key, value) {\\n\\t        target[key] = value;\\n\\t    }\\n\\n\\t    /**\\n\\t     * @param  {number} p0\\n\\t     * @param  {number} p1\\n\\t     * @param  {number} percent\\n\\t     * @return {number}\\n\\t     */\\n\\t    function interpolateNumber(p0, p1, percent) {\\n\\t        return (p1 - p0) * percent + p0;\\n\\t    }\\n\\n\\t    /**\\n\\t     * @param  {string} p0\\n\\t     * @param  {string} p1\\n\\t     * @param  {number} percent\\n\\t     * @return {string}\\n\\t     */\\n\\t    function interpolateString(p0, p1, percent) {\\n\\t        return percent > 0.5 ? p1 : p0;\\n\\t    }\\n\\n\\t    /**\\n\\t     * @param  {Array} p0\\n\\t     * @param  {Array} p1\\n\\t     * @param  {number} percent\\n\\t     * @param  {Array} out\\n\\t     * @param  {number} arrDim\\n\\t     */\\n\\t    function interpolateArray(p0, p1, percent, out, arrDim) {\\n\\t        var len = p0.length;\\n\\t        if (arrDim == 1) {\\n\\t            for (var i = 0; i < len; i++) {\\n\\t                out[i] = interpolateNumber(p0[i], p1[i], percent);\\n\\t            }\\n\\t        }\\n\\t        else {\\n\\t            var len2 = len && p0[0].length;\\n\\t            for (var i = 0; i < len; i++) {\\n\\t                for (var j = 0; j < len2; j++) {\\n\\t                    out[i][j] = interpolateNumber(\\n\\t                        p0[i][j], p1[i][j], percent\\n\\t                    );\\n\\t                }\\n\\t            }\\n\\t        }\\n\\t    }\\n\\n\\t    // arr0 is source array, arr1 is target array.\\n\\t    // Do some preprocess to avoid error happened when interpolating from arr0 to arr1\\n\\t    function fillArr(arr0, arr1, arrDim) {\\n\\t        var arr0Len = arr0.length;\\n\\t        var arr1Len = arr1.length;\\n\\t        if (arr0Len !== arr1Len) {\\n\\t            // FIXME Not work for TypedArray\\n\\t            var isPreviousLarger = arr0Len > arr1Len;\\n\\t            if (isPreviousLarger) {\\n\\t                // Cut the previous\\n\\t                arr0.length = arr1Len;\\n\\t            }\\n\\t            else {\\n\\t                // Fill the previous\\n\\t                for (var i = arr0Len; i < arr1Len; i++) {\\n\\t                    arr0.push(\\n\\t                        arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i])\\n\\t                    );\\n\\t                }\\n\\t            }\\n\\t        }\\n\\t        // Handling NaN value\\n\\t        var len2 = arr0[0] && arr0[0].length;\\n\\t        for (var i = 0; i < arr0.length; i++) {\\n\\t            if (arrDim === 1) {\\n\\t                if (isNaN(arr0[i])) {\\n\\t                    arr0[i] = arr1[i];\\n\\t                }\\n\\t            }\\n\\t            else {\\n\\t                for (var j = 0; j < len2; j++) {\\n\\t                    if (isNaN(arr0[i][j])) {\\n\\t                        arr0[i][j] = arr1[i][j];\\n\\t                    }\\n\\t                }\\n\\t            }\\n\\t        }\\n\\t    }\\n\\n\\t    /**\\n\\t     * @param  {Array} arr0\\n\\t     * @param  {Array} arr1\\n\\t     * @param  {number} arrDim\\n\\t     * @return {boolean}\\n\\t     */\\n\\t    function isArraySame(arr0, arr1, arrDim) {\\n\\t        if (arr0 === arr1) {\\n\\t            return true;\\n\\t        }\\n\\t        var len = arr0.length;\\n\\t        if (len !== arr1.length) {\\n\\t            return false;\\n\\t        }\\n\\t        if (arrDim === 1) {\\n\\t            for (var i = 0; i < len; i++) {\\n\\t                if (arr0[i] !== arr1[i]) {\\n\\t                    return false;\\n\\t                }\\n\\t            }\\n\\t        }\\n\\t        else {\\n\\t            var len2 = arr0[0].length;\\n\\t            for (var i = 0; i < len; i++) {\\n\\t                for (var j = 0; j < len2; j++) {\\n\\t                    if (arr0[i][j] !== arr1[i][j]) {\\n\\t                        return false;\\n\\t                    }\\n\\t                }\\n\\t            }\\n\\t        }\\n\\t        return true;\\n\\t    }\\n\\n\\t    /**\\n\\t     * Catmull Rom interpolate array\\n\\t     * @param  {Array} p0\\n\\t     * @param  {Array} p1\\n\\t     * @param  {Array} p2\\n\\t     * @param  {Array} p3\\n\\t     * @param  {number} t\\n\\t     * @param  {number} t2\\n\\t     * @param  {number} t3\\n\\t     * @param  {Array} out\\n\\t     * @param  {number} arrDim\\n\\t     */\\n\\t    function catmullRomInterpolateArray(\\n\\t        p0, p1, p2, p3, t, t2, t3, out, arrDim\\n\\t    ) {\\n\\t        var len = p0.length;\\n\\t        if (arrDim == 1) {\\n\\t            for (var i = 0; i < len; i++) {\\n\\t                out[i] = catmullRomInterpolate(\\n\\t                    p0[i], p1[i], p2[i], p3[i], t, t2, t3\\n\\t                );\\n\\t            }\\n\\t        }\\n\\t        else {\\n\\t            var len2 = p0[0].length;\\n\\t            for (var i = 0; i < len; i++) {\\n\\t                for (var j = 0; j < len2; j++) {\\n\\t                    out[i][j] = catmullRomInterpolate(\\n\\t                        p0[i][j], p1[i][j], p2[i][j], p3[i][j],\\n\\t                        t, t2, t3\\n\\t                    );\\n\\t                }\\n\\t            }\\n\\t        }\\n\\t    }\\n\\n\\t    /**\\n\\t     * Catmull Rom interpolate number\\n\\t     * @param  {number} p0\\n\\t     * @param  {number} p1\\n\\t     * @param  {number} p2\\n\\t     * @param  {number} p3\\n\\t     * @param  {number} t\\n\\t     * @param  {number} t2\\n\\t     * @param  {number} t3\\n\\t     * @return {number}\\n\\t     */\\n\\t    function catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\\n\\t        var v0 = (p2 - p0) * 0.5;\\n\\t        var v1 = (p3 - p1) * 0.5;\\n\\t        return (2 * (p1 - p2) + v0 + v1) * t3\\n\\t                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\\n\\t                + v0 * t + p1;\\n\\t    }\\n\\n\\t    function cloneValue(value) {\\n\\t        if (isArrayLike(value)) {\\n\\t            var len = value.length;\\n\\t            if (isArrayLike(value[0])) {\\n\\t                var ret = [];\\n\\t                for (var i = 0; i < len; i++) {\\n\\t                    ret.push(arraySlice.call(value[i]));\\n\\t                }\\n\\t                return ret;\\n\\t            }\\n\\n\\t            return arraySlice.call(value);\\n\\t        }\\n\\n\\t        return value;\\n\\t    }\\n\\n\\t    function rgba2String(rgba) {\\n\\t        rgba[0] = Math.floor(rgba[0]);\\n\\t        rgba[1] = Math.floor(rgba[1]);\\n\\t        rgba[2] = Math.floor(rgba[2]);\\n\\n\\t        return 'rgba(' + rgba.join(',') + ')';\\n\\t    }\\n\\n\\t    function getArrayDim(keyframes) {\\n\\t        var lastValue = keyframes[keyframes.length - 1].value;\\n\\t        return isArrayLike(lastValue && lastValue[0]) ? 2 : 1;\\n\\t    }\\n\\n\\t    function createTrackClip (animator, easing, oneTrackDone, keyframes, propName) {\\n\\t        var getter = animator._getter;\\n\\t        var setter = animator._setter;\\n\\t        var useSpline = easing === 'spline';\\n\\n\\t        var trackLen = keyframes.length;\\n\\t        if (!trackLen) {\\n\\t            return;\\n\\t        }\\n\\t        // Guess data type\\n\\t        var firstVal = keyframes[0].value;\\n\\t        var isValueArray = isArrayLike(firstVal);\\n\\t        var isValueColor = false;\\n\\t        var isValueString = false;\\n\\n\\t        // For vertices morphing\\n\\t        var arrDim = isValueArray ? getArrayDim(keyframes) : 0;\\n\\n\\t        var trackMaxTime;\\n\\t        // Sort keyframe as ascending\\n\\t        keyframes.sort(function(a, b) {\\n\\t            return a.time - b.time;\\n\\t        });\\n\\n\\t        trackMaxTime = keyframes[trackLen - 1].time;\\n\\t        // Percents of each keyframe\\n\\t        var kfPercents = [];\\n\\t        // Value of each keyframe\\n\\t        var kfValues = [];\\n\\t        var prevValue = keyframes[0].value;\\n\\t        var isAllValueEqual = true;\\n\\t        for (var i = 0; i < trackLen; i++) {\\n\\t            kfPercents.push(keyframes[i].time / trackMaxTime);\\n\\t            // Assume value is a color when it is a string\\n\\t            var value = keyframes[i].value;\\n\\n\\t            // Check if value is equal, deep check if value is array\\n\\t            if (!((isValueArray && isArraySame(value, prevValue, arrDim))\\n\\t                || (!isValueArray && value === prevValue))) {\\n\\t                isAllValueEqual = false;\\n\\t            }\\n\\t            prevValue = value;\\n\\n\\t            // Try converting a string to a color array\\n\\t            if (typeof value == 'string') {\\n\\t                var colorArray = color.parse(value);\\n\\t                if (colorArray) {\\n\\t                    value = colorArray;\\n\\t                    isValueColor = true;\\n\\t                }\\n\\t                else {\\n\\t                    isValueString = true;\\n\\t                }\\n\\t            }\\n\\t            kfValues.push(value);\\n\\t        }\\n\\t        if (isAllValueEqual) {\\n\\t            return;\\n\\t        }\\n\\n\\t        var lastValue = kfValues[trackLen - 1];\\n\\t        // Polyfill array and NaN value\\n\\t        for (var i = 0; i < trackLen - 1; i++) {\\n\\t            if (isValueArray) {\\n\\t                fillArr(kfValues[i], lastValue, arrDim);\\n\\t            }\\n\\t            else {\\n\\t                if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\\n\\t                    kfValues[i] = lastValue;\\n\\t                }\\n\\t            }\\n\\t        }\\n\\t        isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim);\\n\\n\\t        // Cache the key of last frame to speed up when\\n\\t        // animation playback is sequency\\n\\t        var lastFrame = 0;\\n\\t        var lastFramePercent = 0;\\n\\t        var start;\\n\\t        var w;\\n\\t        var p0;\\n\\t        var p1;\\n\\t        var p2;\\n\\t        var p3;\\n\\n\\t        if (isValueColor) {\\n\\t            var rgba = [0, 0, 0, 0];\\n\\t        }\\n\\n\\t        var onframe = function (target, percent) {\\n\\t            // Find the range keyframes\\n\\t            // kf1-----kf2---------current--------kf3\\n\\t            // find kf2 and kf3 and do interpolation\\n\\t            var frame;\\n\\t            // In the easing function like elasticOut, percent may less than 0\\n\\t            if (percent < 0) {\\n\\t                frame = 0;\\n\\t            }\\n\\t            else if (percent < lastFramePercent) {\\n\\t                // Start from next key\\n\\t                // PENDING start from lastFrame ?\\n\\t                start = Math.min(lastFrame + 1, trackLen - 1);\\n\\t                for (frame = start; frame >= 0; frame--) {\\n\\t                    if (kfPercents[frame] <= percent) {\\n\\t                        break;\\n\\t                    }\\n\\t                }\\n\\t                // PENDING really need to do this ?\\n\\t                frame = Math.min(frame, trackLen - 2);\\n\\t            }\\n\\t            else {\\n\\t                for (frame = lastFrame; frame < trackLen; frame++) {\\n\\t                    if (kfPercents[frame] > percent) {\\n\\t                        break;\\n\\t                    }\\n\\t                }\\n\\t                frame = Math.min(frame - 1, trackLen - 2);\\n\\t            }\\n\\t            lastFrame = frame;\\n\\t            lastFramePercent = percent;\\n\\n\\t            var range = (kfPercents[frame + 1] - kfPercents[frame]);\\n\\t            if (range === 0) {\\n\\t                return;\\n\\t            }\\n\\t            else {\\n\\t                w = (percent - kfPercents[frame]) / range;\\n\\t            }\\n\\t            if (useSpline) {\\n\\t                p1 = kfValues[frame];\\n\\t                p0 = kfValues[frame === 0 ? frame : frame - 1];\\n\\t                p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\\n\\t                p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\\n\\t                if (isValueArray) {\\n\\t                    catmullRomInterpolateArray(\\n\\t                        p0, p1, p2, p3, w, w * w, w * w * w,\\n\\t                        getter(target, propName),\\n\\t                        arrDim\\n\\t                    );\\n\\t                }\\n\\t                else {\\n\\t                    var value;\\n\\t                    if (isValueColor) {\\n\\t                        value = catmullRomInterpolateArray(\\n\\t                            p0, p1, p2, p3, w, w * w, w * w * w,\\n\\t                            rgba, 1\\n\\t                        );\\n\\t                        value = rgba2String(rgba);\\n\\t                    }\\n\\t                    else if (isValueString) {\\n\\t                        // String is step(0.5)\\n\\t                        return interpolateString(p1, p2, w);\\n\\t                    }\\n\\t                    else {\\n\\t                        value = catmullRomInterpolate(\\n\\t                            p0, p1, p2, p3, w, w * w, w * w * w\\n\\t                        );\\n\\t                    }\\n\\t                    setter(\\n\\t                        target,\\n\\t                        propName,\\n\\t                        value\\n\\t                    );\\n\\t                }\\n\\t            }\\n\\t            else {\\n\\t                if (isValueArray) {\\n\\t                    interpolateArray(\\n\\t                        kfValues[frame], kfValues[frame + 1], w,\\n\\t                        getter(target, propName),\\n\\t                        arrDim\\n\\t                    );\\n\\t                }\\n\\t                else {\\n\\t                    var value;\\n\\t                    if (isValueColor) {\\n\\t                        interpolateArray(\\n\\t                            kfValues[frame], kfValues[frame + 1], w,\\n\\t                            rgba, 1\\n\\t                        );\\n\\t                        value = rgba2String(rgba);\\n\\t                    }\\n\\t                    else if (isValueString) {\\n\\t                        // String is step(0.5)\\n\\t                        return interpolateString(kfValues[frame], kfValues[frame + 1], w);\\n\\t                    }\\n\\t                    else {\\n\\t                        value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\\n\\t                    }\\n\\t                    setter(\\n\\t                        target,\\n\\t                        propName,\\n\\t                        value\\n\\t                    );\\n\\t                }\\n\\t            }\\n\\t        };\\n\\n\\t        var clip = new Clip({\\n\\t            target: animator._target,\\n\\t            life: trackMaxTime,\\n\\t            loop: animator._loop,\\n\\t            delay: animator._delay,\\n\\t            onframe: onframe,\\n\\t            ondestroy: oneTrackDone\\n\\t        });\\n\\n\\t        if (easing && easing !== 'spline') {\\n\\t            clip.easing = easing;\\n\\t        }\\n\\n\\t        return clip;\\n\\t    }\\n\\n\\t    /**\\n\\t     * @alias module:zrender/animation/Animator\\n\\t     * @constructor\\n\\t     * @param {Object} target\\n\\t     * @param {boolean} loop\\n\\t     * @param {Function} getter\\n\\t     * @param {Function} setter\\n\\t     */\\n\\t    var Animator = function(target, loop, getter, setter) {\\n\\t        this._tracks = {};\\n\\t        this._target = target;\\n\\n\\t        this._loop = loop || false;\\n\\n\\t        this._getter = getter || defaultGetter;\\n\\t        this._setter = setter || defaultSetter;\\n\\n\\t        this._clipCount = 0;\\n\\n\\t        this._delay = 0;\\n\\n\\t        this._doneList = [];\\n\\n\\t        this._onframeList = [];\\n\\n\\t        this._clipList = [];\\n\\t    };\\n\\n\\t    Animator.prototype = {\\n\\t        /**\\n\\t         * 设置动画关键帧\\n\\t         * @param  {number} time 关键帧时间，单位是ms\\n\\t         * @param  {Object} props 关键帧的属性值，key-value表示\\n\\t         * @return {module:zrender/animation/Animator}\\n\\t         */\\n\\t        when: function(time /* ms */, props) {\\n\\t            var tracks = this._tracks;\\n\\t            for (var propName in props) {\\n\\t                if (!props.hasOwnProperty(propName)) {\\n\\t                    continue;\\n\\t                }\\n\\n\\t                if (!tracks[propName]) {\\n\\t                    tracks[propName] = [];\\n\\t                    // Invalid value\\n\\t                    var value = this._getter(this._target, propName);\\n\\t                    if (value == null) {\\n\\t                        // zrLog('Invalid property ' + propName);\\n\\t                        continue;\\n\\t                    }\\n\\t                    // If time is 0\\n\\t                    //  Then props is given initialize value\\n\\t                    // Else\\n\\t                    //  Initialize value from current prop value\\n\\t                    if (time !== 0) {\\n\\t                        tracks[propName].push({\\n\\t                            time: 0,\\n\\t                            value: cloneValue(value)\\n\\t                        });\\n\\t                    }\\n\\t                }\\n\\t                tracks[propName].push({\\n\\t                    time: time,\\n\\t                    value: props[propName]\\n\\t                });\\n\\t            }\\n\\t            return this;\\n\\t        },\\n\\t        /**\\n\\t         * 添加动画每一帧的回调函数\\n\\t         * @param  {Function} callback\\n\\t         * @return {module:zrender/animation/Animator}\\n\\t         */\\n\\t        during: function (callback) {\\n\\t            this._onframeList.push(callback);\\n\\t            return this;\\n\\t        },\\n\\n\\t        pause: function () {\\n\\t            for (var i = 0; i < this._clipList.length; i++) {\\n\\t                this._clipList[i].pause();\\n\\t            }\\n\\t            this._paused = true;\\n\\t        },\\n\\n\\t        resume: function () {\\n\\t            for (var i = 0; i < this._clipList.length; i++) {\\n\\t                this._clipList[i].resume();\\n\\t            }\\n\\t            this._paused = false;\\n\\t        },\\n\\n\\t        isPaused: function () {\\n\\t            return !!this._paused;\\n\\t        },\\n\\n\\t        _doneCallback: function () {\\n\\t            // Clear all tracks\\n\\t            this._tracks = {};\\n\\t            // Clear all clips\\n\\t            this._clipList.length = 0;\\n\\n\\t            var doneList = this._doneList;\\n\\t            var len = doneList.length;\\n\\t            for (var i = 0; i < len; i++) {\\n\\t                doneList[i].call(this);\\n\\t            }\\n\\t        },\\n\\t        /**\\n\\t         * 开始执行动画\\n\\t         * @param  {string|Function} easing\\n\\t         *         动画缓动函数，详见{@link module:zrender/animation/easing}\\n\\t         * @return {module:zrender/animation/Animator}\\n\\t         */\\n\\t        start: function (easing) {\\n\\n\\t            var self = this;\\n\\t            var clipCount = 0;\\n\\n\\t            var oneTrackDone = function() {\\n\\t                clipCount--;\\n\\t                if (!clipCount) {\\n\\t                    self._doneCallback();\\n\\t                }\\n\\t            };\\n\\n\\t            var lastClip;\\n\\t            for (var propName in this._tracks) {\\n\\t                if (!this._tracks.hasOwnProperty(propName)) {\\n\\t                    continue;\\n\\t                }\\n\\t                var clip = createTrackClip(\\n\\t                    this, easing, oneTrackDone,\\n\\t                    this._tracks[propName], propName\\n\\t                );\\n\\t                if (clip) {\\n\\t                    this._clipList.push(clip);\\n\\t                    clipCount++;\\n\\n\\t                    // If start after added to animation\\n\\t                    if (this.animation) {\\n\\t                        this.animation.addClip(clip);\\n\\t                    }\\n\\n\\t                    lastClip = clip;\\n\\t                }\\n\\t            }\\n\\n\\t            // Add during callback on the last clip\\n\\t            if (lastClip) {\\n\\t                var oldOnFrame = lastClip.onframe;\\n\\t                lastClip.onframe = function (target, percent) {\\n\\t                    oldOnFrame(target, percent);\\n\\n\\t                    for (var i = 0; i < self._onframeList.length; i++) {\\n\\t                        self._onframeList[i](target, percent);\\n\\t                    }\\n\\t                };\\n\\t            }\\n\\n\\t            if (!clipCount) {\\n\\t                this._doneCallback();\\n\\t            }\\n\\t            return this;\\n\\t        },\\n\\t        /**\\n\\t         * 停止动画\\n\\t         * @param {boolean} forwardToLast If move to last frame before stop\\n\\t         */\\n\\t        stop: function (forwardToLast) {\\n\\t            var clipList = this._clipList;\\n\\t            var animation = this.animation;\\n\\t            for (var i = 0; i < clipList.length; i++) {\\n\\t                var clip = clipList[i];\\n\\t                if (forwardToLast) {\\n\\t                    // Move to last frame before stop\\n\\t                    clip.onframe(this._target, 1);\\n\\t                }\\n\\t                animation && animation.removeClip(clip);\\n\\t            }\\n\\t            clipList.length = 0;\\n\\t        },\\n\\t        /**\\n\\t         * 设置动画延迟开始的时间\\n\\t         * @param  {number} time 单位ms\\n\\t         * @return {module:zrender/animation/Animator}\\n\\t         */\\n\\t        delay: function (time) {\\n\\t            this._delay = time;\\n\\t            return this;\\n\\t        },\\n\\t        /**\\n\\t         * 添加动画结束的回调\\n\\t         * @param  {Function} cb\\n\\t         * @return {module:zrender/animation/Animator}\\n\\t         */\\n\\t        done: function(cb) {\\n\\t            if (cb) {\\n\\t                this._doneList.push(cb);\\n\\t            }\\n\\t            return this;\\n\\t        },\\n\\n\\t        /**\\n\\t         * @return {Array.<module:zrender/animation/Clip>}\\n\\t         */\\n\\t        getClips: function () {\\n\\t            return this._clipList;\\n\\t        }\\n\\t    };\\n\\n\\t    module.exports = Animator;\\n\\n\\n/***/ },\\n/* 29 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * 动画主控制器\\n\\t * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\\n\\t * @config life(1000) 动画时长\\n\\t * @config delay(0) 动画延迟时间\\n\\t * @config loop(true)\\n\\t * @config gap(0) 循环的间隔时间\\n\\t * @config onframe\\n\\t * @config easing(optional)\\n\\t * @config ondestroy(optional)\\n\\t * @config onrestart(optional)\\n\\t *\\n\\t * TODO pause\\n\\t */\\n\\n\\n\\t    var easingFuncs = __webpack_require__(30);\\n\\n\\t    function Clip(options) {\\n\\n\\t        this._target = options.target;\\n\\n\\t        // 生命周期\\n\\t        this._life = options.life || 1000;\\n\\t        // 延时\\n\\t        this._delay = options.delay || 0;\\n\\t        // 开始时间\\n\\t        // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\\n\\t        this._initialized = false;\\n\\n\\t        // 是否循环\\n\\t        this.loop = options.loop == null ? false : options.loop;\\n\\n\\t        this.gap = options.gap || 0;\\n\\n\\t        this.easing = options.easing || 'Linear';\\n\\n\\t        this.onframe = options.onframe;\\n\\t        this.ondestroy = options.ondestroy;\\n\\t        this.onrestart = options.onrestart;\\n\\n\\t        this._pausedTime = 0;\\n\\t        this._paused = false;\\n\\t    }\\n\\n\\t    Clip.prototype = {\\n\\n\\t        constructor: Clip,\\n\\n\\t        step: function (globalTime, deltaTime) {\\n\\t            // Set startTime on first step, or _startTime may has milleseconds different between clips\\n\\t            // PENDING\\n\\t            if (!this._initialized) {\\n\\t                this._startTime = globalTime + this._delay;\\n\\t                this._initialized = true;\\n\\t            }\\n\\n\\t            if (this._paused) {\\n\\t                this._pausedTime += deltaTime;\\n\\t                return;\\n\\t            }\\n\\n\\t            var percent = (globalTime - this._startTime - this._pausedTime) / this._life;\\n\\n\\t            // 还没开始\\n\\t            if (percent < 0) {\\n\\t                return;\\n\\t            }\\n\\n\\t            percent = Math.min(percent, 1);\\n\\n\\t            var easing = this.easing;\\n\\t            var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\\n\\t            var schedule = typeof easingFunc === 'function'\\n\\t                ? easingFunc(percent)\\n\\t                : percent;\\n\\n\\t            this.fire('frame', schedule);\\n\\n\\t            // 结束\\n\\t            if (percent == 1) {\\n\\t                if (this.loop) {\\n\\t                    this.restart (globalTime);\\n\\t                    // 重新开始周期\\n\\t                    // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\\n\\t                    return 'restart';\\n\\t                }\\n\\n\\t                // 动画完成将这个控制器标识为待删除\\n\\t                // 在Animation.update中进行批量删除\\n\\t                this._needsRemove = true;\\n\\t                return 'destroy';\\n\\t            }\\n\\n\\t            return null;\\n\\t        },\\n\\n\\t        restart: function (globalTime) {\\n\\t            var remainder = (globalTime - this._startTime - this._pausedTime) % this._life;\\n\\t            this._startTime = globalTime - remainder + this.gap;\\n\\t            this._pausedTime = 0;\\n\\n\\t            this._needsRemove = false;\\n\\t        },\\n\\n\\t        fire: function (eventType, arg) {\\n\\t            eventType = 'on' + eventType;\\n\\t            if (this[eventType]) {\\n\\t                this[eventType](this._target, arg);\\n\\t            }\\n\\t        },\\n\\n\\t        pause: function () {\\n\\t            this._paused = true;\\n\\t        },\\n\\n\\t        resume: function () {\\n\\t            this._paused = false;\\n\\t        }\\n\\t    };\\n\\n\\t    module.exports = Clip;\\n\\n\\n\\n/***/ },\\n/* 30 */\\n/***/ function(module, exports) {\\n\\n\\t/**\\n\\t * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\\n\\t * @see http://sole.github.io/tween.js/examples/03_graphs.html\\n\\t * @exports zrender/animation/easing\\n\\t */\\n\\n\\t    var easing = {\\n\\t        /**\\n\\t        * @param {number} k\\n\\t        * @return {number}\\n\\t        */\\n\\t        linear: function (k) {\\n\\t            return k;\\n\\t        },\\n\\n\\t        /**\\n\\t        * @param {number} k\\n\\t        * @return {number}\\n\\t        */\\n\\t        quadraticIn: function (k) {\\n\\t            return k * k;\\n\\t        },\\n\\t        /**\\n\\t        * @param {number} k\\n\\t        * @return {number}\\n\\t        */\\n\\t        quadraticOut: function (k) {\\n\\t            return k * (2 - k);\\n\\t        },\\n\\t        /**\\n\\t        * @param {number} k\\n\\t        * @return {number}\\n\\t        */\\n\\t        quadraticInOut: function (k) {\\n\\t            if ((k *= 2) < 1) {\\n\\t                return 0.5 * k * k;\\n\\t            }\\n\\t            return -0.5 * (--k * (k - 2) - 1);\\n\\t        },\\n\\n\\t        // 三次方的缓动（t^3）\\n\\t        /**\\n\\t        * @param {number} k\\n\\t        * @return {number}\\n\\t        */\\n\\t        cubicIn: function (k) {\\n\\t            return k * k * k;\\n\\t        },\\n\\t        /**\\n\\t        * @param {number} k\\n\\t        * @return {number}\\n\\t        */\\n\\t        cubicOut: function (k) {\\n\\t            return --k * k * k + 1;\\n\\t        },\\n\\t        /**\\n\\t        * @param {number} k\\n\\t        * @return {number}\\n\\t        */\\n\\t        cubicInOut: function (k) {\\n\\t            if ((k *= 2) < 1) {\\n\\t                return 0.5 * k * k * k;\\n\\t            }\\n\\t            return 0.5 * ((k -= 2) * k * k + 2);\\n\\t        },\\n\\n\\t        // 四次方的缓动（t^4）\\n\\t        /**\\n\\t        * @param {number} k\\n\\t        * @return {number}\\n\\t        */\\n\\t        quarticIn: function (k) {\\n\\t            return k * k * k * k;\\n\\t        },\\n\\t        /**\\n\\t        * @param {number} k\\n\\t        * @return {number}\\n\\t        */\\n\\t        quarticOut: function (k) {\\n\\t            return 1 - (--k * k * k * k);\\n\\t        },\\n\\t        /**\\n\\t        * @param {number} k\\n\\t        * @return {number}\\n\\t        */\\n\\t        quarticInOut: function (k) {\\n\\t            if ((k *= 2) < 1) {\\n\\t                return 0.5 * k * k * k * k;\\n\\t            }\\n\\t            return -0.5 * ((k -= 2) * k * k * k - 2);\\n\\t        },\\n\\n\\t        // 五次方的缓动（t^5）\\n\\t        /**\\n\\t        * @param {number} k\\n\\t        * @return {number}\\n\\t        */\\n\\t        quinticIn: function (k) {\\n\\t            return k * k * k * k * k;\\n\\t        },\\n\\t        /**\\n\\t        * @param {number} k\\n\\t        * @return {number}\\n\\t        */\\n\\t        quinticOut: function (k) {\\n\\t            return --k * k * k * k * k + 1;\\n\\t        },\\n\\t        /**\\n\\t        * @param {number} k\\n\\t        * @return {number}\\n\\t        */\\n\\t        quinticInOut: function (k) {\\n\\t            if ((k *= 2) < 1) {\\n\\t                return 0.5 * k * k * k * k * k;\\n\\t            }\\n\\t            return 0.5 * ((k -= 2) * k * k * k * k + 2);\\n\\t        },\\n\\n\\t        // 正弦曲线的缓动（sin(t)）\\n\\t        /**\\n\\t        * @param {number} k\\n\\t        * @return {number}\\n\\t        */\\n\\t        sinusoidalIn: function (k) {\\n\\t            return 1 - Math.cos(k * Math.PI / 2);\\n\\t        },\\n\\t        /**\\n\\t        * @param {number} k\\n\\t        * @return {number}\\n\\t        */\\n\\t        sinusoidalOut: function (k) {\\n\\t            return Math.sin(k * Math.PI / 2);\\n\\t        },\\n\\t        /**\\n\\t        * @param {number} k\\n\\t        * @return {number}\\n\\t        */\\n\\t        sinusoidalInOut: function (k) {\\n\\t            return 0.5 * (1 - Math.cos(Math.PI * k));\\n\\t        },\\n\\n\\t        // 指数曲线的缓动（2^t）\\n\\t        /**\\n\\t        * @param {number} k\\n\\t        * @return {number}\\n\\t        */\\n\\t        exponentialIn: function (k) {\\n\\t            return k === 0 ? 0 : Math.pow(1024, k - 1);\\n\\t        },\\n\\t        /**\\n\\t        * @param {number} k\\n\\t        * @return {number}\\n\\t        */\\n\\t        exponentialOut: function (k) {\\n\\t            return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\\n\\t        },\\n\\t        /**\\n\\t        * @param {number} k\\n\\t        * @return {number}\\n\\t        */\\n\\t        exponentialInOut: function (k) {\\n\\t            if (k === 0) {\\n\\t                return 0;\\n\\t            }\\n\\t            if (k === 1) {\\n\\t                return 1;\\n\\t            }\\n\\t            if ((k *= 2) < 1) {\\n\\t                return 0.5 * Math.pow(1024, k - 1);\\n\\t            }\\n\\t            return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\\n\\t        },\\n\\n\\t        // 圆形曲线的缓动（sqrt(1-t^2)）\\n\\t        /**\\n\\t        * @param {number} k\\n\\t        * @return {number}\\n\\t        */\\n\\t        circularIn: function (k) {\\n\\t            return 1 - Math.sqrt(1 - k * k);\\n\\t        },\\n\\t        /**\\n\\t        * @param {number} k\\n\\t        * @return {number}\\n\\t        */\\n\\t        circularOut: function (k) {\\n\\t            return Math.sqrt(1 - (--k * k));\\n\\t        },\\n\\t        /**\\n\\t        * @param {number} k\\n\\t        * @return {number}\\n\\t        */\\n\\t        circularInOut: function (k) {\\n\\t            if ((k *= 2) < 1) {\\n\\t                return -0.5 * (Math.sqrt(1 - k * k) - 1);\\n\\t            }\\n\\t            return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\\n\\t        },\\n\\n\\t        // 创建类似于弹簧在停止前来回振荡的动画\\n\\t        /**\\n\\t        * @param {number} k\\n\\t        * @return {number}\\n\\t        */\\n\\t        elasticIn: function (k) {\\n\\t            var s;\\n\\t            var a = 0.1;\\n\\t            var p = 0.4;\\n\\t            if (k === 0) {\\n\\t                return 0;\\n\\t            }\\n\\t            if (k === 1) {\\n\\t                return 1;\\n\\t            }\\n\\t            if (!a || a < 1) {\\n\\t                a = 1; s = p / 4;\\n\\t            }\\n\\t            else {\\n\\t                s = p * Math.asin(1 / a) / (2 * Math.PI);\\n\\t            }\\n\\t            return -(a * Math.pow(2, 10 * (k -= 1)) *\\n\\t                        Math.sin((k - s) * (2 * Math.PI) / p));\\n\\t        },\\n\\t        /**\\n\\t        * @param {number} k\\n\\t        * @return {number}\\n\\t        */\\n\\t        elasticOut: function (k) {\\n\\t            var s;\\n\\t            var a = 0.1;\\n\\t            var p = 0.4;\\n\\t            if (k === 0) {\\n\\t                return 0;\\n\\t            }\\n\\t            if (k === 1) {\\n\\t                return 1;\\n\\t            }\\n\\t            if (!a || a < 1) {\\n\\t                a = 1; s = p / 4;\\n\\t            }\\n\\t            else {\\n\\t                s = p * Math.asin(1 / a) / (2 * Math.PI);\\n\\t            }\\n\\t            return (a * Math.pow(2, -10 * k) *\\n\\t                    Math.sin((k - s) * (2 * Math.PI) / p) + 1);\\n\\t        },\\n\\t        /**\\n\\t        * @param {number} k\\n\\t        * @return {number}\\n\\t        */\\n\\t        elasticInOut: function (k) {\\n\\t            var s;\\n\\t            var a = 0.1;\\n\\t            var p = 0.4;\\n\\t            if (k === 0) {\\n\\t                return 0;\\n\\t            }\\n\\t            if (k === 1) {\\n\\t                return 1;\\n\\t            }\\n\\t            if (!a || a < 1) {\\n\\t                a = 1; s = p / 4;\\n\\t            }\\n\\t            else {\\n\\t                s = p * Math.asin(1 / a) / (2 * Math.PI);\\n\\t            }\\n\\t            if ((k *= 2) < 1) {\\n\\t                return -0.5 * (a * Math.pow(2, 10 * (k -= 1))\\n\\t                    * Math.sin((k - s) * (2 * Math.PI) / p));\\n\\t            }\\n\\t            return a * Math.pow(2, -10 * (k -= 1))\\n\\t                    * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\\n\\n\\t        },\\n\\n\\t        // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\\n\\t        /**\\n\\t        * @param {number} k\\n\\t        * @return {number}\\n\\t        */\\n\\t        backIn: function (k) {\\n\\t            var s = 1.70158;\\n\\t            return k * k * ((s + 1) * k - s);\\n\\t        },\\n\\t        /**\\n\\t        * @param {number} k\\n\\t        * @return {number}\\n\\t        */\\n\\t        backOut: function (k) {\\n\\t            var s = 1.70158;\\n\\t            return --k * k * ((s + 1) * k + s) + 1;\\n\\t        },\\n\\t        /**\\n\\t        * @param {number} k\\n\\t        * @return {number}\\n\\t        */\\n\\t        backInOut: function (k) {\\n\\t            var s = 1.70158 * 1.525;\\n\\t            if ((k *= 2) < 1) {\\n\\t                return 0.5 * (k * k * ((s + 1) * k - s));\\n\\t            }\\n\\t            return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\\n\\t        },\\n\\n\\t        // 创建弹跳效果\\n\\t        /**\\n\\t        * @param {number} k\\n\\t        * @return {number}\\n\\t        */\\n\\t        bounceIn: function (k) {\\n\\t            return 1 - easing.bounceOut(1 - k);\\n\\t        },\\n\\t        /**\\n\\t        * @param {number} k\\n\\t        * @return {number}\\n\\t        */\\n\\t        bounceOut: function (k) {\\n\\t            if (k < (1 / 2.75)) {\\n\\t                return 7.5625 * k * k;\\n\\t            }\\n\\t            else if (k < (2 / 2.75)) {\\n\\t                return 7.5625 * (k -= (1.5 / 2.75)) * k + 0.75;\\n\\t            }\\n\\t            else if (k < (2.5 / 2.75)) {\\n\\t                return 7.5625 * (k -= (2.25 / 2.75)) * k + 0.9375;\\n\\t            }\\n\\t            else {\\n\\t                return 7.5625 * (k -= (2.625 / 2.75)) * k + 0.984375;\\n\\t            }\\n\\t        },\\n\\t        /**\\n\\t        * @param {number} k\\n\\t        * @return {number}\\n\\t        */\\n\\t        bounceInOut: function (k) {\\n\\t            if (k < 0.5) {\\n\\t                return easing.bounceIn(k * 2) * 0.5;\\n\\t            }\\n\\t            return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\\n\\t        }\\n\\t    };\\n\\n\\t    module.exports = easing;\\n\\n\\n\\n\\n/***/ },\\n/* 31 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * @module zrender/tool/color\\n\\t */\\n\\n\\n\\t    var LRU = __webpack_require__(32);\\n\\n\\t    var kCSSColorTable = {\\n\\t        'transparent': [0,0,0,0], 'aliceblue': [240,248,255,1],\\n\\t        'antiquewhite': [250,235,215,1], 'aqua': [0,255,255,1],\\n\\t        'aquamarine': [127,255,212,1], 'azure': [240,255,255,1],\\n\\t        'beige': [245,245,220,1], 'bisque': [255,228,196,1],\\n\\t        'black': [0,0,0,1], 'blanchedalmond': [255,235,205,1],\\n\\t        'blue': [0,0,255,1], 'blueviolet': [138,43,226,1],\\n\\t        'brown': [165,42,42,1], 'burlywood': [222,184,135,1],\\n\\t        'cadetblue': [95,158,160,1], 'chartreuse': [127,255,0,1],\\n\\t        'chocolate': [210,105,30,1], 'coral': [255,127,80,1],\\n\\t        'cornflowerblue': [100,149,237,1], 'cornsilk': [255,248,220,1],\\n\\t        'crimson': [220,20,60,1], 'cyan': [0,255,255,1],\\n\\t        'darkblue': [0,0,139,1], 'darkcyan': [0,139,139,1],\\n\\t        'darkgoldenrod': [184,134,11,1], 'darkgray': [169,169,169,1],\\n\\t        'darkgreen': [0,100,0,1], 'darkgrey': [169,169,169,1],\\n\\t        'darkkhaki': [189,183,107,1], 'darkmagenta': [139,0,139,1],\\n\\t        'darkolivegreen': [85,107,47,1], 'darkorange': [255,140,0,1],\\n\\t        'darkorchid': [153,50,204,1], 'darkred': [139,0,0,1],\\n\\t        'darksalmon': [233,150,122,1], 'darkseagreen': [143,188,143,1],\\n\\t        'darkslateblue': [72,61,139,1], 'darkslategray': [47,79,79,1],\\n\\t        'darkslategrey': [47,79,79,1], 'darkturquoise': [0,206,209,1],\\n\\t        'darkviolet': [148,0,211,1], 'deeppink': [255,20,147,1],\\n\\t        'deepskyblue': [0,191,255,1], 'dimgray': [105,105,105,1],\\n\\t        'dimgrey': [105,105,105,1], 'dodgerblue': [30,144,255,1],\\n\\t        'firebrick': [178,34,34,1], 'floralwhite': [255,250,240,1],\\n\\t        'forestgreen': [34,139,34,1], 'fuchsia': [255,0,255,1],\\n\\t        'gainsboro': [220,220,220,1], 'ghostwhite': [248,248,255,1],\\n\\t        'gold': [255,215,0,1], 'goldenrod': [218,165,32,1],\\n\\t        'gray': [128,128,128,1], 'green': [0,128,0,1],\\n\\t        'greenyellow': [173,255,47,1], 'grey': [128,128,128,1],\\n\\t        'honeydew': [240,255,240,1], 'hotpink': [255,105,180,1],\\n\\t        'indianred': [205,92,92,1], 'indigo': [75,0,130,1],\\n\\t        'ivory': [255,255,240,1], 'khaki': [240,230,140,1],\\n\\t        'lavender': [230,230,250,1], 'lavenderblush': [255,240,245,1],\\n\\t        'lawngreen': [124,252,0,1], 'lemonchiffon': [255,250,205,1],\\n\\t        'lightblue': [173,216,230,1], 'lightcoral': [240,128,128,1],\\n\\t        'lightcyan': [224,255,255,1], 'lightgoldenrodyellow': [250,250,210,1],\\n\\t        'lightgray': [211,211,211,1], 'lightgreen': [144,238,144,1],\\n\\t        'lightgrey': [211,211,211,1], 'lightpink': [255,182,193,1],\\n\\t        'lightsalmon': [255,160,122,1], 'lightseagreen': [32,178,170,1],\\n\\t        'lightskyblue': [135,206,250,1], 'lightslategray': [119,136,153,1],\\n\\t        'lightslategrey': [119,136,153,1], 'lightsteelblue': [176,196,222,1],\\n\\t        'lightyellow': [255,255,224,1], 'lime': [0,255,0,1],\\n\\t        'limegreen': [50,205,50,1], 'linen': [250,240,230,1],\\n\\t        'magenta': [255,0,255,1], 'maroon': [128,0,0,1],\\n\\t        'mediumaquamarine': [102,205,170,1], 'mediumblue': [0,0,205,1],\\n\\t        'mediumorchid': [186,85,211,1], 'mediumpurple': [147,112,219,1],\\n\\t        'mediumseagreen': [60,179,113,1], 'mediumslateblue': [123,104,238,1],\\n\\t        'mediumspringgreen': [0,250,154,1], 'mediumturquoise': [72,209,204,1],\\n\\t        'mediumvioletred': [199,21,133,1], 'midnightblue': [25,25,112,1],\\n\\t        'mintcream': [245,255,250,1], 'mistyrose': [255,228,225,1],\\n\\t        'moccasin': [255,228,181,1], 'navajowhite': [255,222,173,1],\\n\\t        'navy': [0,0,128,1], 'oldlace': [253,245,230,1],\\n\\t        'olive': [128,128,0,1], 'olivedrab': [107,142,35,1],\\n\\t        'orange': [255,165,0,1], 'orangered': [255,69,0,1],\\n\\t        'orchid': [218,112,214,1], 'palegoldenrod': [238,232,170,1],\\n\\t        'palegreen': [152,251,152,1], 'paleturquoise': [175,238,238,1],\\n\\t        'palevioletred': [219,112,147,1], 'papayawhip': [255,239,213,1],\\n\\t        'peachpuff': [255,218,185,1], 'peru': [205,133,63,1],\\n\\t        'pink': [255,192,203,1], 'plum': [221,160,221,1],\\n\\t        'powderblue': [176,224,230,1], 'purple': [128,0,128,1],\\n\\t        'red': [255,0,0,1], 'rosybrown': [188,143,143,1],\\n\\t        'royalblue': [65,105,225,1], 'saddlebrown': [139,69,19,1],\\n\\t        'salmon': [250,128,114,1], 'sandybrown': [244,164,96,1],\\n\\t        'seagreen': [46,139,87,1], 'seashell': [255,245,238,1],\\n\\t        'sienna': [160,82,45,1], 'silver': [192,192,192,1],\\n\\t        'skyblue': [135,206,235,1], 'slateblue': [106,90,205,1],\\n\\t        'slategray': [112,128,144,1], 'slategrey': [112,128,144,1],\\n\\t        'snow': [255,250,250,1], 'springgreen': [0,255,127,1],\\n\\t        'steelblue': [70,130,180,1], 'tan': [210,180,140,1],\\n\\t        'teal': [0,128,128,1], 'thistle': [216,191,216,1],\\n\\t        'tomato': [255,99,71,1], 'turquoise': [64,224,208,1],\\n\\t        'violet': [238,130,238,1], 'wheat': [245,222,179,1],\\n\\t        'white': [255,255,255,1], 'whitesmoke': [245,245,245,1],\\n\\t        'yellow': [255,255,0,1], 'yellowgreen': [154,205,50,1]\\n\\t    };\\n\\n\\t    function clampCssByte(i) {  // Clamp to integer 0 .. 255.\\n\\t        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\\n\\t        return i < 0 ? 0 : i > 255 ? 255 : i;\\n\\t    }\\n\\n\\t    function clampCssAngle(i) {  // Clamp to integer 0 .. 360.\\n\\t        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\\n\\t        return i < 0 ? 0 : i > 360 ? 360 : i;\\n\\t    }\\n\\n\\t    function clampCssFloat(f) {  // Clamp to float 0.0 .. 1.0.\\n\\t        return f < 0 ? 0 : f > 1 ? 1 : f;\\n\\t    }\\n\\n\\t    function parseCssInt(str) {  // int or percentage.\\n\\t        if (str.length && str.charAt(str.length - 1) === '%') {\\n\\t            return clampCssByte(parseFloat(str) / 100 * 255);\\n\\t        }\\n\\t        return clampCssByte(parseInt(str, 10));\\n\\t    }\\n\\n\\t    function parseCssFloat(str) {  // float or percentage.\\n\\t        if (str.length && str.charAt(str.length - 1) === '%') {\\n\\t            return clampCssFloat(parseFloat(str) / 100);\\n\\t        }\\n\\t        return clampCssFloat(parseFloat(str));\\n\\t    }\\n\\n\\t    function cssHueToRgb(m1, m2, h) {\\n\\t        if (h < 0) {\\n\\t            h += 1;\\n\\t        }\\n\\t        else if (h > 1) {\\n\\t            h -= 1;\\n\\t        }\\n\\n\\t        if (h * 6 < 1) {\\n\\t            return m1 + (m2 - m1) * h * 6;\\n\\t        }\\n\\t        if (h * 2 < 1) {\\n\\t            return m2;\\n\\t        }\\n\\t        if (h * 3 < 2) {\\n\\t            return m1 + (m2 - m1) * (2/3 - h) * 6;\\n\\t        }\\n\\t        return m1;\\n\\t    }\\n\\n\\t    function lerp(a, b, p) {\\n\\t        return a + (b - a) * p;\\n\\t    }\\n\\n\\t    function setRgba(out, r, g, b, a) {\\n\\t        out[0] = r; out[1] = g; out[2] = b; out[3] = a;\\n\\t        return out;\\n\\t    }\\n\\t    function copyRgba(out, a) {\\n\\t        out[0] = a[0]; out[1] = a[1]; out[2] = a[2]; out[3] = a[3];\\n\\t        return out;\\n\\t    }\\n\\t    var colorCache = new LRU(20);\\n\\t    var lastRemovedArr = null;\\n\\t    function putToCache(colorStr, rgbaArr) {\\n\\t        // Reuse removed array\\n\\t        if (lastRemovedArr) {\\n\\t            copyRgba(lastRemovedArr, rgbaArr);\\n\\t        }\\n\\t        lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || (rgbaArr.slice()));\\n\\t    }\\n\\t    /**\\n\\t     * @param {string} colorStr\\n\\t     * @param {Array.<number>} out\\n\\t     * @return {Array.<number>}\\n\\t     * @memberOf module:zrender/util/color\\n\\t     */\\n\\t    function parse(colorStr, rgbaArr) {\\n\\t        if (!colorStr) {\\n\\t            return;\\n\\t        }\\n\\t        rgbaArr = rgbaArr || [];\\n\\n\\t        var cached = colorCache.get(colorStr);\\n\\t        if (cached) {\\n\\t            return copyRgba(rgbaArr, cached);\\n\\t        }\\n\\n\\t        // colorStr may be not string\\n\\t        colorStr = colorStr + '';\\n\\t        // Remove all whitespace, not compliant, but should just be more accepting.\\n\\t        var str = colorStr.replace(/ /g, '').toLowerCase();\\n\\n\\t        // Color keywords (and transparent) lookup.\\n\\t        if (str in kCSSColorTable) {\\n\\t            copyRgba(rgbaArr, kCSSColorTable[str]);\\n\\t            putToCache(colorStr, rgbaArr);\\n\\t            return rgbaArr;\\n\\t        }\\n\\n\\t        // #abc and #abc123 syntax.\\n\\t        if (str.charAt(0) === '#') {\\n\\t            if (str.length === 4) {\\n\\t                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\\n\\t                if (!(iv >= 0 && iv <= 0xfff)) {\\n\\t                    setRgba(rgbaArr, 0, 0, 0, 1);\\n\\t                    return;  // Covers NaN.\\n\\t                }\\n\\t                setRgba(rgbaArr,\\n\\t                    ((iv & 0xf00) >> 4) | ((iv & 0xf00) >> 8),\\n\\t                    (iv & 0xf0) | ((iv & 0xf0) >> 4),\\n\\t                    (iv & 0xf) | ((iv & 0xf) << 4),\\n\\t                    1\\n\\t                );\\n\\t                putToCache(colorStr, rgbaArr);\\n\\t                return rgbaArr;\\n\\t            }\\n\\t            else if (str.length === 7) {\\n\\t                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\\n\\t                if (!(iv >= 0 && iv <= 0xffffff)) {\\n\\t                    setRgba(rgbaArr, 0, 0, 0, 1);\\n\\t                    return;  // Covers NaN.\\n\\t                }\\n\\t                setRgba(rgbaArr,\\n\\t                    (iv & 0xff0000) >> 16,\\n\\t                    (iv & 0xff00) >> 8,\\n\\t                    iv & 0xff,\\n\\t                    1\\n\\t                );\\n\\t                putToCache(colorStr, rgbaArr);\\n\\t                return rgbaArr;\\n\\t            }\\n\\n\\t            return;\\n\\t        }\\n\\t        var op = str.indexOf('('), ep = str.indexOf(')');\\n\\t        if (op !== -1 && ep + 1 === str.length) {\\n\\t            var fname = str.substr(0, op);\\n\\t            var params = str.substr(op + 1, ep - (op + 1)).split(',');\\n\\t            var alpha = 1;  // To allow case fallthrough.\\n\\t            switch (fname) {\\n\\t                case 'rgba':\\n\\t                    if (params.length !== 4) {\\n\\t                        setRgba(rgbaArr, 0, 0, 0, 1);\\n\\t                        return;\\n\\t                    }\\n\\t                    alpha = parseCssFloat(params.pop()); // jshint ignore:line\\n\\t                // Fall through.\\n\\t                case 'rgb':\\n\\t                    if (params.length !== 3) {\\n\\t                        setRgba(rgbaArr, 0, 0, 0, 1);\\n\\t                        return;\\n\\t                    }\\n\\t                    setRgba(rgbaArr,\\n\\t                        parseCssInt(params[0]),\\n\\t                        parseCssInt(params[1]),\\n\\t                        parseCssInt(params[2]),\\n\\t                        alpha\\n\\t                    );\\n\\t                    putToCache(colorStr, rgbaArr);\\n\\t                    return rgbaArr;\\n\\t                case 'hsla':\\n\\t                    if (params.length !== 4) {\\n\\t                        setRgba(rgbaArr, 0, 0, 0, 1);\\n\\t                        return;\\n\\t                    }\\n\\t                    params[3] = parseCssFloat(params[3]);\\n\\t                    hsla2rgba(params, rgbaArr);\\n\\t                    putToCache(colorStr, rgbaArr);\\n\\t                    return rgbaArr;\\n\\t                case 'hsl':\\n\\t                    if (params.length !== 3) {\\n\\t                        setRgba(rgbaArr, 0, 0, 0, 1);\\n\\t                        return;\\n\\t                    }\\n\\t                    hsla2rgba(params, rgbaArr);\\n\\t                    putToCache(colorStr, rgbaArr);\\n\\t                    return rgbaArr;\\n\\t                default:\\n\\t                    return;\\n\\t            }\\n\\t        }\\n\\n\\t        setRgba(rgbaArr, 0, 0, 0, 1);\\n\\t        return;\\n\\t    }\\n\\n\\t    /**\\n\\t     * @param {Array.<number>} hsla\\n\\t     * @param {Array.<number>} rgba\\n\\t     * @return {Array.<number>} rgba\\n\\t     */\\n\\t    function hsla2rgba(hsla, rgba) {\\n\\t        var h = (((parseFloat(hsla[0]) % 360) + 360) % 360) / 360;  // 0 .. 1\\n\\t        // NOTE(deanm): According to the CSS spec s/l should only be\\n\\t        // percentages, but we don't bother and let float or percentage.\\n\\t        var s = parseCssFloat(hsla[1]);\\n\\t        var l = parseCssFloat(hsla[2]);\\n\\t        var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\\n\\t        var m1 = l * 2 - m2;\\n\\n\\t        rgba = rgba || [];\\n\\t        setRgba(rgba,\\n\\t            clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255),\\n\\t            clampCssByte(cssHueToRgb(m1, m2, h) * 255),\\n\\t            clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255),\\n\\t            1\\n\\t        );\\n\\n\\t        if (hsla.length === 4) {\\n\\t            rgba[3] = hsla[3];\\n\\t        }\\n\\n\\t        return rgba;\\n\\t    }\\n\\n\\t    /**\\n\\t     * @param {Array.<number>} rgba\\n\\t     * @return {Array.<number>} hsla\\n\\t     */\\n\\t    function rgba2hsla(rgba) {\\n\\t        if (!rgba) {\\n\\t            return;\\n\\t        }\\n\\n\\t        // RGB from 0 to 255\\n\\t        var R = rgba[0] / 255;\\n\\t        var G = rgba[1] / 255;\\n\\t        var B = rgba[2] / 255;\\n\\n\\t        var vMin = Math.min(R, G, B); // Min. value of RGB\\n\\t        var vMax = Math.max(R, G, B); // Max. value of RGB\\n\\t        var delta = vMax - vMin; // Delta RGB value\\n\\n\\t        var L = (vMax + vMin) / 2;\\n\\t        var H;\\n\\t        var S;\\n\\t        // HSL results from 0 to 1\\n\\t        if (delta === 0) {\\n\\t            H = 0;\\n\\t            S = 0;\\n\\t        }\\n\\t        else {\\n\\t            if (L < 0.5) {\\n\\t                S = delta / (vMax + vMin);\\n\\t            }\\n\\t            else {\\n\\t                S = delta / (2 - vMax - vMin);\\n\\t            }\\n\\n\\t            var deltaR = (((vMax - R) / 6) + (delta / 2)) / delta;\\n\\t            var deltaG = (((vMax - G) / 6) + (delta / 2)) / delta;\\n\\t            var deltaB = (((vMax - B) / 6) + (delta / 2)) / delta;\\n\\n\\t            if (R === vMax) {\\n\\t                H = deltaB - deltaG;\\n\\t            }\\n\\t            else if (G === vMax) {\\n\\t                H = (1 / 3) + deltaR - deltaB;\\n\\t            }\\n\\t            else if (B === vMax) {\\n\\t                H = (2 / 3) + deltaG - deltaR;\\n\\t            }\\n\\n\\t            if (H < 0) {\\n\\t                H += 1;\\n\\t            }\\n\\n\\t            if (H > 1) {\\n\\t                H -= 1;\\n\\t            }\\n\\t        }\\n\\n\\t        var hsla = [H * 360, S, L];\\n\\n\\t        if (rgba[3] != null) {\\n\\t            hsla.push(rgba[3]);\\n\\t        }\\n\\n\\t        return hsla;\\n\\t    }\\n\\n\\t    /**\\n\\t     * @param {string} color\\n\\t     * @param {number} level\\n\\t     * @return {string}\\n\\t     * @memberOf module:zrender/util/color\\n\\t     */\\n\\t    function lift(color, level) {\\n\\t        var colorArr = parse(color);\\n\\t        if (colorArr) {\\n\\t            for (var i = 0; i < 3; i++) {\\n\\t                if (level < 0) {\\n\\t                    colorArr[i] = colorArr[i] * (1 - level) | 0;\\n\\t                }\\n\\t                else {\\n\\t                    colorArr[i] = ((255 - colorArr[i]) * level + colorArr[i]) | 0;\\n\\t                }\\n\\t            }\\n\\t            return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\\n\\t        }\\n\\t    }\\n\\n\\t    /**\\n\\t     * @param {string} color\\n\\t     * @return {string}\\n\\t     * @memberOf module:zrender/util/color\\n\\t     */\\n\\t    function toHex(color, level) {\\n\\t        var colorArr = parse(color);\\n\\t        if (colorArr) {\\n\\t            return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + (+colorArr[2])).toString(16).slice(1);\\n\\t        }\\n\\t    }\\n\\n\\t    /**\\n\\t     * Map value to color. Faster than mapToColor methods because color is represented by rgba array.\\n\\t     * @param {number} normalizedValue A float between 0 and 1.\\n\\t     * @param {Array.<Array.<number>>} colors List of rgba color array\\n\\t     * @param {Array.<number>} [out] Mapped gba color array\\n\\t     * @return {Array.<number>} will be null/undefined if input illegal.\\n\\t     */\\n\\t    function fastMapToColor(normalizedValue, colors, out) {\\n\\t        if (!(colors && colors.length)\\n\\t            || !(normalizedValue >= 0 && normalizedValue <= 1)\\n\\t        ) {\\n\\t            return;\\n\\t        }\\n\\n\\t        out = out || [];\\n\\n\\t        var value = normalizedValue * (colors.length - 1);\\n\\t        var leftIndex = Math.floor(value);\\n\\t        var rightIndex = Math.ceil(value);\\n\\t        var leftColor = colors[leftIndex];\\n\\t        var rightColor = colors[rightIndex];\\n\\t        var dv = value - leftIndex;\\n\\t        out[0] = clampCssByte(lerp(leftColor[0], rightColor[0], dv));\\n\\t        out[1] = clampCssByte(lerp(leftColor[1], rightColor[1], dv));\\n\\t        out[2] = clampCssByte(lerp(leftColor[2], rightColor[2], dv));\\n\\t        out[3] = clampCssFloat(lerp(leftColor[3], rightColor[3], dv));\\n\\n\\t        return out;\\n\\t    }\\n\\t    /**\\n\\t     * @param {number} normalizedValue A float between 0 and 1.\\n\\t     * @param {Array.<string>} colors Color list.\\n\\t     * @param {boolean=} fullOutput Default false.\\n\\t     * @return {(string|Object)} Result color. If fullOutput,\\n\\t     *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\\n\\t     * @memberOf module:zrender/util/color\\n\\t     */\\n\\t    function mapToColor(normalizedValue, colors, fullOutput) {\\n\\t        if (!(colors && colors.length)\\n\\t            || !(normalizedValue >= 0 && normalizedValue <= 1)\\n\\t        ) {\\n\\t            return;\\n\\t        }\\n\\n\\t        var value = normalizedValue * (colors.length - 1);\\n\\t        var leftIndex = Math.floor(value);\\n\\t        var rightIndex = Math.ceil(value);\\n\\t        var leftColor = parse(colors[leftIndex]);\\n\\t        var rightColor = parse(colors[rightIndex]);\\n\\t        var dv = value - leftIndex;\\n\\n\\t        var color = stringify(\\n\\t            [\\n\\t                clampCssByte(lerp(leftColor[0], rightColor[0], dv)),\\n\\t                clampCssByte(lerp(leftColor[1], rightColor[1], dv)),\\n\\t                clampCssByte(lerp(leftColor[2], rightColor[2], dv)),\\n\\t                clampCssFloat(lerp(leftColor[3], rightColor[3], dv))\\n\\t            ],\\n\\t            'rgba'\\n\\t        );\\n\\n\\t        return fullOutput\\n\\t            ? {\\n\\t                color: color,\\n\\t                leftIndex: leftIndex,\\n\\t                rightIndex: rightIndex,\\n\\t                value: value\\n\\t            }\\n\\t            : color;\\n\\t    }\\n\\n\\t    /**\\n\\t     * @param {string} color\\n\\t     * @param {number=} h 0 ~ 360, ignore when null.\\n\\t     * @param {number=} s 0 ~ 1, ignore when null.\\n\\t     * @param {number=} l 0 ~ 1, ignore when null.\\n\\t     * @return {string} Color string in rgba format.\\n\\t     * @memberOf module:zrender/util/color\\n\\t     */\\n\\t    function modifyHSL(color, h, s, l) {\\n\\t        color = parse(color);\\n\\n\\t        if (color) {\\n\\t            color = rgba2hsla(color);\\n\\t            h != null && (color[0] = clampCssAngle(h));\\n\\t            s != null && (color[1] = parseCssFloat(s));\\n\\t            l != null && (color[2] = parseCssFloat(l));\\n\\n\\t            return stringify(hsla2rgba(color), 'rgba');\\n\\t        }\\n\\t    }\\n\\n\\t    /**\\n\\t     * @param {string} color\\n\\t     * @param {number=} alpha 0 ~ 1\\n\\t     * @return {string} Color string in rgba format.\\n\\t     * @memberOf module:zrender/util/color\\n\\t     */\\n\\t    function modifyAlpha(color, alpha) {\\n\\t        color = parse(color);\\n\\n\\t        if (color && alpha != null) {\\n\\t            color[3] = clampCssFloat(alpha);\\n\\t            return stringify(color, 'rgba');\\n\\t        }\\n\\t    }\\n\\n\\t    /**\\n\\t     * @param {Array.<number>} arrColor like [12,33,44,0.4]\\n\\t     * @param {string} type 'rgba', 'hsva', ...\\n\\t     * @return {string} Result color. (If input illegal, return undefined).\\n\\t     */\\n\\t    function stringify(arrColor, type) {\\n\\t        if (!arrColor || !arrColor.length) {\\n\\t            return;\\n\\t        }\\n\\t        var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\\n\\t        if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\\n\\t            colorStr += ',' + arrColor[3];\\n\\t        }\\n\\t        return type + '(' + colorStr + ')';\\n\\t    }\\n\\n\\t    module.exports = {\\n\\t        parse: parse,\\n\\t        lift: lift,\\n\\t        toHex: toHex,\\n\\t        fastMapToColor: fastMapToColor,\\n\\t        mapToColor: mapToColor,\\n\\t        modifyHSL: modifyHSL,\\n\\t        modifyAlpha: modifyAlpha,\\n\\t        stringify: stringify\\n\\t    };\\n\\n\\n\\n\\n/***/ },\\n/* 32 */\\n/***/ function(module, exports) {\\n\\n\\t// Simple LRU cache use doubly linked list\\n\\t// @module zrender/core/LRU\\n\\n\\n\\t    /**\\n\\t     * Simple double linked list. Compared with array, it has O(1) remove operation.\\n\\t     * @constructor\\n\\t     */\\n\\t    var LinkedList = function () {\\n\\n\\t        /**\\n\\t         * @type {module:zrender/core/LRU~Entry}\\n\\t         */\\n\\t        this.head = null;\\n\\n\\t        /**\\n\\t         * @type {module:zrender/core/LRU~Entry}\\n\\t         */\\n\\t        this.tail = null;\\n\\n\\t        this._len = 0;\\n\\t    };\\n\\n\\t    var linkedListProto = LinkedList.prototype;\\n\\t    /**\\n\\t     * Insert a new value at the tail\\n\\t     * @param  {} val\\n\\t     * @return {module:zrender/core/LRU~Entry}\\n\\t     */\\n\\t    linkedListProto.insert = function (val) {\\n\\t        var entry = new Entry(val);\\n\\t        this.insertEntry(entry);\\n\\t        return entry;\\n\\t    };\\n\\n\\t    /**\\n\\t     * Insert an entry at the tail\\n\\t     * @param  {module:zrender/core/LRU~Entry} entry\\n\\t     */\\n\\t    linkedListProto.insertEntry = function (entry) {\\n\\t        if (!this.head) {\\n\\t            this.head = this.tail = entry;\\n\\t        }\\n\\t        else {\\n\\t            this.tail.next = entry;\\n\\t            entry.prev = this.tail;\\n\\t            entry.next = null;\\n\\t            this.tail = entry;\\n\\t        }\\n\\t        this._len++;\\n\\t    };\\n\\n\\t    /**\\n\\t     * Remove entry.\\n\\t     * @param  {module:zrender/core/LRU~Entry} entry\\n\\t     */\\n\\t    linkedListProto.remove = function (entry) {\\n\\t        var prev = entry.prev;\\n\\t        var next = entry.next;\\n\\t        if (prev) {\\n\\t            prev.next = next;\\n\\t        }\\n\\t        else {\\n\\t            // Is head\\n\\t            this.head = next;\\n\\t        }\\n\\t        if (next) {\\n\\t            next.prev = prev;\\n\\t        }\\n\\t        else {\\n\\t            // Is tail\\n\\t            this.tail = prev;\\n\\t        }\\n\\t        entry.next = entry.prev = null;\\n\\t        this._len--;\\n\\t    };\\n\\n\\t    /**\\n\\t     * @return {number}\\n\\t     */\\n\\t    linkedListProto.len = function () {\\n\\t        return this._len;\\n\\t    };\\n\\n\\t    /**\\n\\t     * Clear list\\n\\t     */\\n\\t    linkedListProto.clear = function () {\\n\\t        this.head = this.tail = null;\\n\\t        this._len = 0;\\n\\t    };\\n\\n\\t    /**\\n\\t     * @constructor\\n\\t     * @param {} val\\n\\t     */\\n\\t    var Entry = function (val) {\\n\\t        /**\\n\\t         * @type {}\\n\\t         */\\n\\t        this.value = val;\\n\\n\\t        /**\\n\\t         * @type {module:zrender/core/LRU~Entry}\\n\\t         */\\n\\t        this.next;\\n\\n\\t        /**\\n\\t         * @type {module:zrender/core/LRU~Entry}\\n\\t         */\\n\\t        this.prev;\\n\\t    };\\n\\n\\t    /**\\n\\t     * LRU Cache\\n\\t     * @constructor\\n\\t     * @alias module:zrender/core/LRU\\n\\t     */\\n\\t    var LRU = function (maxSize) {\\n\\n\\t        this._list = new LinkedList();\\n\\n\\t        this._map = {};\\n\\n\\t        this._maxSize = maxSize || 10;\\n\\n\\t        this._lastRemovedEntry = null;\\n\\t    };\\n\\n\\t    var LRUProto = LRU.prototype;\\n\\n\\t    /**\\n\\t     * @param  {string} key\\n\\t     * @param  {} value\\n\\t     * @return {} Removed value\\n\\t     */\\n\\t    LRUProto.put = function (key, value) {\\n\\t        var list = this._list;\\n\\t        var map = this._map;\\n\\t        var removed = null;\\n\\t        if (map[key] == null) {\\n\\t            var len = list.len();\\n\\t            // Reuse last removed entry\\n\\t            var entry = this._lastRemovedEntry;\\n\\n\\t            if (len >= this._maxSize && len > 0) {\\n\\t                // Remove the least recently used\\n\\t                var leastUsedEntry = list.head;\\n\\t                list.remove(leastUsedEntry);\\n\\t                delete map[leastUsedEntry.key];\\n\\n\\t                removed = leastUsedEntry.value;\\n\\t                this._lastRemovedEntry = leastUsedEntry;\\n\\t            }\\n\\n\\t            if (entry) {\\n\\t                entry.value = value;\\n\\t            }\\n\\t            else {\\n\\t                entry = new Entry(value);\\n\\t            }\\n\\t            entry.key = key;\\n\\t            list.insertEntry(entry);\\n\\t            map[key] = entry;\\n\\t        }\\n\\n\\t        return removed;\\n\\t    };\\n\\n\\t    /**\\n\\t     * @param  {string} key\\n\\t     * @return {}\\n\\t     */\\n\\t    LRUProto.get = function (key) {\\n\\t        var entry = this._map[key];\\n\\t        var list = this._list;\\n\\t        if (entry != null) {\\n\\t            // Put the latest used entry in the tail\\n\\t            if (entry !== list.tail) {\\n\\t                list.remove(entry);\\n\\t                list.insertEntry(entry);\\n\\t            }\\n\\n\\t            return entry.value;\\n\\t        }\\n\\t    };\\n\\n\\t    /**\\n\\t     * Clear the cache\\n\\t     */\\n\\t    LRUProto.clear = function () {\\n\\t        this._list.clear();\\n\\t        this._map = {};\\n\\t    };\\n\\n\\t    module.exports = LRU;\\n\\n\\n/***/ },\\n/* 33 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\t        var config = __webpack_require__(34);\\n\\n\\t        /**\\n\\t         * @exports zrender/tool/log\\n\\t         * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\\n\\t         */\\n\\t        module.exports = function() {\\n\\t            if (config.debugMode === 0) {\\n\\t                return;\\n\\t            }\\n\\t            else if (config.debugMode == 1) {\\n\\t                for (var k in arguments) {\\n\\t                    throw new Error(arguments[k]);\\n\\t                }\\n\\t            }\\n\\t            else if (config.debugMode > 1) {\\n\\t                for (var k in arguments) {\\n\\t                    console.log(arguments[k]);\\n\\t                }\\n\\t            }\\n\\t        };\\n\\n\\t        /* for debug\\n\\t        return function(mes) {\\n\\t            document.getElementById('wrong-message').innerHTML =\\n\\t                mes + ' ' + (new Date() - 0)\\n\\t                + '<br/>'\\n\\t                + document.getElementById('wrong-message').innerHTML;\\n\\t        };\\n\\t        */\\n\\t    \\n\\n\\n/***/ },\\n/* 34 */\\n/***/ function(module, exports) {\\n\\n\\t\\n\\t    var dpr = 1;\\n\\t    // If in browser environment\\n\\t    if (typeof window !== 'undefined') {\\n\\t        dpr = Math.max(window.devicePixelRatio || 1, 1);\\n\\t    }\\n\\t    /**\\n\\t     * config默认配置项\\n\\t     * @exports zrender/config\\n\\t     * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\\n\\t     */\\n\\t    var config = {\\n\\t        /**\\n\\t         * debug日志选项：catchBrushException为true下有效\\n\\t         * 0 : 不生成debug数据，发布用\\n\\t         * 1 : 异常抛出，调试用\\n\\t         * 2 : 控制台输出，调试用\\n\\t         */\\n\\t        debugMode: 0,\\n\\n\\t        // retina 屏幕优化\\n\\t        devicePixelRatio: dpr\\n\\t    };\\n\\t    module.exports = config;\\n\\n\\n\\n\\n/***/ },\\n/* 35 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * Mixin for drawing text in a element bounding rect\\n\\t * @module zrender/mixin/RectText\\n\\t */\\n\\n\\n\\n\\t    var textContain = __webpack_require__(8);\\n\\t    var BoundingRect = __webpack_require__(9);\\n\\n\\t    var tmpRect = new BoundingRect();\\n\\n\\t    var RectText = function () {};\\n\\n\\t    function parsePercent(value, maxValue) {\\n\\t        if (typeof value === 'string') {\\n\\t            if (value.lastIndexOf('%') >= 0) {\\n\\t                return parseFloat(value) / 100 * maxValue;\\n\\t            }\\n\\t            return parseFloat(value);\\n\\t        }\\n\\t        return value;\\n\\t    }\\n\\n\\t    RectText.prototype = {\\n\\n\\t        constructor: RectText,\\n\\n\\t        /**\\n\\t         * Draw text in a rect with specified position.\\n\\t         * @param  {CanvasRenderingContext} ctx\\n\\t         * @param  {Object} rect Displayable rect\\n\\t         * @return {Object} textRect Alternative precalculated text bounding rect\\n\\t         */\\n\\t        drawRectText: function (ctx, rect, textRect) {\\n\\t            var style = this.style;\\n\\t            var text = style.text;\\n\\t            // Convert to string\\n\\t            text != null && (text += '');\\n\\t            if (!text) {\\n\\t                return;\\n\\t            }\\n\\n\\t            // FIXME\\n\\t            ctx.save();\\n\\n\\t            var x;\\n\\t            var y;\\n\\t            var textPosition = style.textPosition;\\n\\t            var textOffset = style.textOffset;\\n\\t            var distance = style.textDistance;\\n\\t            var align = style.textAlign;\\n\\t            var font = style.textFont || style.font;\\n\\t            var baseline = style.textBaseline;\\n\\t            var verticalAlign = style.textVerticalAlign;\\n\\t            rect = style.textPositionRect || rect;\\n\\n\\t            textRect = textRect || textContain.getBoundingRect(text, font, align, baseline);\\n\\n\\t            // Transform rect to view space\\n\\t            var transform = this.transform;\\n\\t            if (!style.textTransform) {\\n\\t                if (transform) {\\n\\t                    tmpRect.copy(rect);\\n\\t                    tmpRect.applyTransform(transform);\\n\\t                    rect = tmpRect;\\n\\t                }\\n\\t            }\\n\\t            else {\\n\\t                this.setTransform(ctx);\\n\\t            }\\n\\n\\t            // Text position represented by coord\\n\\t            if (textPosition instanceof Array) {\\n\\t                // Percent\\n\\t                x = rect.x + parsePercent(textPosition[0], rect.width);\\n\\t                y = rect.y + parsePercent(textPosition[1], rect.height);\\n\\t                align = align || 'left';\\n\\t                baseline = baseline || 'top';\\n\\n\\t                if (verticalAlign) {\\n\\t                    switch (verticalAlign) {\\n\\t                        case 'middle':\\n\\t                            y -= textRect.height / 2 - textRect.lineHeight / 2;\\n\\t                            break;\\n\\t                        case 'bottom':\\n\\t                            y -= textRect.height - textRect.lineHeight / 2;\\n\\t                            break;\\n\\t                        default:\\n\\t                            y += textRect.lineHeight / 2;\\n\\t                    }\\n\\t                    // Force bseline to be middle\\n\\t                    baseline = 'middle';\\n\\t                }\\n\\t            }\\n\\t            else {\\n\\t                var res = textContain.adjustTextPositionOnRect(\\n\\t                    textPosition, rect, textRect, distance\\n\\t                );\\n\\t                x = res.x;\\n\\t                y = res.y;\\n\\t                // Default align and baseline when has textPosition\\n\\t                align = align || res.textAlign;\\n\\t                baseline = baseline || res.textBaseline;\\n\\t            }\\n\\n\\t            if (textOffset) {\\n\\t                x += textOffset[0];\\n\\t                y += textOffset[1];\\n\\t            }\\n\\n\\t            // Use canvas default left textAlign. Giving invalid value will cause state not change\\n\\t            ctx.textAlign = align || 'left';\\n\\t            // Use canvas default alphabetic baseline\\n\\t            ctx.textBaseline = baseline || 'alphabetic';\\n\\n\\t            var textFill = style.textFill;\\n\\t            var textStroke = style.textStroke;\\n\\t            textFill && (ctx.fillStyle = textFill);\\n\\t            textStroke && (ctx.strokeStyle = textStroke);\\n\\n\\t            // TODO Invalid font\\n\\t            ctx.font = font || '12px sans-serif';\\n\\n\\t            // Text shadow\\n\\t            // Always set shadowBlur and shadowOffset to avoid leak from displayable\\n\\t            ctx.shadowBlur = style.textShadowBlur;\\n\\t            ctx.shadowColor = style.textShadowColor || 'transparent';\\n\\t            ctx.shadowOffsetX = style.textShadowOffsetX;\\n\\t            ctx.shadowOffsetY = style.textShadowOffsetY;\\n\\n\\t            var textLines = text.split('\\\\n');\\n\\n\\t            if (style.textRotation) {\\n\\t                transform && ctx.translate(transform[4], transform[5]);\\n\\t                ctx.rotate(style.textRotation);\\n\\t                transform && ctx.translate(-transform[4], -transform[5]);\\n\\t            }\\n\\n\\t            for (var i = 0; i < textLines.length; i++) {\\n\\t                // Fill after stroke so the outline will not cover the main part.\\n\\t                textStroke && ctx.strokeText(textLines[i], x, y);\\n\\t                textFill && ctx.fillText(textLines[i], x, y);\\n\\t                y += textRect.lineHeight;\\n\\t            }\\n\\n\\t            ctx.restore();\\n\\t        }\\n\\t    };\\n\\n\\t    module.exports = RectText;\\n\\n\\n/***/ },\\n/* 36 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t'use strict';\\n\\t/**\\n\\t * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\\n\\t * 可以用于 isInsidePath 判断以及获取boundingRect\\n\\t *\\n\\t * @module zrender/core/PathProxy\\n\\t * @author Yi Shen (http://www.github.com/pissang)\\n\\t */\\n\\n\\t // TODO getTotalLength, getPointAtLength\\n\\n\\n\\t    var curve = __webpack_require__(37);\\n\\t    var vec2 = __webpack_require__(10);\\n\\t    var bbox = __webpack_require__(38);\\n\\t    var BoundingRect = __webpack_require__(9);\\n\\t    var dpr = __webpack_require__(34).devicePixelRatio;\\n\\n\\t    var CMD = {\\n\\t        M: 1,\\n\\t        L: 2,\\n\\t        C: 3,\\n\\t        Q: 4,\\n\\t        A: 5,\\n\\t        Z: 6,\\n\\t        // Rect\\n\\t        R: 7\\n\\t    };\\n\\n\\t    // var CMD_MEM_SIZE = {\\n\\t    //     M: 3,\\n\\t    //     L: 3,\\n\\t    //     C: 7,\\n\\t    //     Q: 5,\\n\\t    //     A: 9,\\n\\t    //     R: 5,\\n\\t    //     Z: 1\\n\\t    // };\\n\\n\\t    var min = [];\\n\\t    var max = [];\\n\\t    var min2 = [];\\n\\t    var max2 = [];\\n\\t    var mathMin = Math.min;\\n\\t    var mathMax = Math.max;\\n\\t    var mathCos = Math.cos;\\n\\t    var mathSin = Math.sin;\\n\\t    var mathSqrt = Math.sqrt;\\n\\t    var mathAbs = Math.abs;\\n\\n\\t    var hasTypedArray = typeof Float32Array != 'undefined';\\n\\n\\t    /**\\n\\t     * @alias module:zrender/core/PathProxy\\n\\t     * @constructor\\n\\t     */\\n\\t    var PathProxy = function (notSaveData) {\\n\\n\\t        this._saveData = !(notSaveData || false);\\n\\n\\t        if (this._saveData) {\\n\\t            /**\\n\\t             * Path data. Stored as flat array\\n\\t             * @type {Array.<Object>}\\n\\t             */\\n\\t            this.data = [];\\n\\t        }\\n\\n\\t        this._ctx = null;\\n\\t    };\\n\\n\\t    /**\\n\\t     * 快速计算Path包围盒（并不是最小包围盒）\\n\\t     * @return {Object}\\n\\t     */\\n\\t    PathProxy.prototype = {\\n\\n\\t        constructor: PathProxy,\\n\\n\\t        _xi: 0,\\n\\t        _yi: 0,\\n\\n\\t        _x0: 0,\\n\\t        _y0: 0,\\n\\t        // Unit x, Unit y. Provide for avoiding drawing that too short line segment\\n\\t        _ux: 0,\\n\\t        _uy: 0,\\n\\n\\t        _len: 0,\\n\\n\\t        _lineDash: null,\\n\\n\\t        _dashOffset: 0,\\n\\n\\t        _dashIdx: 0,\\n\\n\\t        _dashSum: 0,\\n\\n\\t        /**\\n\\t         * @readOnly\\n\\t         */\\n\\t        setScale: function (sx, sy) {\\n\\t            this._ux = mathAbs(1 / dpr / sx) || 0;\\n\\t            this._uy = mathAbs(1 / dpr / sy) || 0;\\n\\t        },\\n\\n\\t        getContext: function () {\\n\\t            return this._ctx;\\n\\t        },\\n\\n\\t        /**\\n\\t         * @param  {CanvasRenderingContext2D} ctx\\n\\t         * @return {module:zrender/core/PathProxy}\\n\\t         */\\n\\t        beginPath: function (ctx) {\\n\\n\\t            this._ctx = ctx;\\n\\n\\t            ctx && ctx.beginPath();\\n\\n\\t            ctx && (this.dpr = ctx.dpr);\\n\\n\\t            // Reset\\n\\t            if (this._saveData) {\\n\\t                this._len = 0;\\n\\t            }\\n\\n\\t            if (this._lineDash) {\\n\\t                this._lineDash = null;\\n\\n\\t                this._dashOffset = 0;\\n\\t            }\\n\\n\\t            return this;\\n\\t        },\\n\\n\\t        /**\\n\\t         * @param  {number} x\\n\\t         * @param  {number} y\\n\\t         * @return {module:zrender/core/PathProxy}\\n\\t         */\\n\\t        moveTo: function (x, y) {\\n\\t            this.addData(CMD.M, x, y);\\n\\t            this._ctx && this._ctx.moveTo(x, y);\\n\\n\\t            // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\\n\\t            // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\\n\\t            // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\\n\\t            // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\\n\\t            this._x0 = x;\\n\\t            this._y0 = y;\\n\\n\\t            this._xi = x;\\n\\t            this._yi = y;\\n\\n\\t            return this;\\n\\t        },\\n\\n\\t        /**\\n\\t         * @param  {number} x\\n\\t         * @param  {number} y\\n\\t         * @return {module:zrender/core/PathProxy}\\n\\t         */\\n\\t        lineTo: function (x, y) {\\n\\t            var exceedUnit = mathAbs(x - this._xi) > this._ux\\n\\t                || mathAbs(y - this._yi) > this._uy\\n\\t                // Force draw the first segment\\n\\t                || this._len < 5;\\n\\n\\t            this.addData(CMD.L, x, y);\\n\\n\\t            if (this._ctx && exceedUnit) {\\n\\t                this._needsDash() ? this._dashedLineTo(x, y)\\n\\t                    : this._ctx.lineTo(x, y);\\n\\t            }\\n\\t            if (exceedUnit) {\\n\\t                this._xi = x;\\n\\t                this._yi = y;\\n\\t            }\\n\\n\\t            return this;\\n\\t        },\\n\\n\\t        /**\\n\\t         * @param  {number} x1\\n\\t         * @param  {number} y1\\n\\t         * @param  {number} x2\\n\\t         * @param  {number} y2\\n\\t         * @param  {number} x3\\n\\t         * @param  {number} y3\\n\\t         * @return {module:zrender/core/PathProxy}\\n\\t         */\\n\\t        bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\\n\\t            this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\\n\\t            if (this._ctx) {\\n\\t                this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3)\\n\\t                    : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\\n\\t            }\\n\\t            this._xi = x3;\\n\\t            this._yi = y3;\\n\\t            return this;\\n\\t        },\\n\\n\\t        /**\\n\\t         * @param  {number} x1\\n\\t         * @param  {number} y1\\n\\t         * @param  {number} x2\\n\\t         * @param  {number} y2\\n\\t         * @return {module:zrender/core/PathProxy}\\n\\t         */\\n\\t        quadraticCurveTo: function (x1, y1, x2, y2) {\\n\\t            this.addData(CMD.Q, x1, y1, x2, y2);\\n\\t            if (this._ctx) {\\n\\t                this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2)\\n\\t                    : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\\n\\t            }\\n\\t            this._xi = x2;\\n\\t            this._yi = y2;\\n\\t            return this;\\n\\t        },\\n\\n\\t        /**\\n\\t         * @param  {number} cx\\n\\t         * @param  {number} cy\\n\\t         * @param  {number} r\\n\\t         * @param  {number} startAngle\\n\\t         * @param  {number} endAngle\\n\\t         * @param  {boolean} anticlockwise\\n\\t         * @return {module:zrender/core/PathProxy}\\n\\t         */\\n\\t        arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\\n\\t            this.addData(\\n\\t                CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1\\n\\t            );\\n\\t            this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\\n\\n\\t            this._xi = mathCos(endAngle) * r + cx;\\n\\t            this._yi = mathSin(endAngle) * r + cx;\\n\\t            return this;\\n\\t        },\\n\\n\\t        // TODO\\n\\t        arcTo: function (x1, y1, x2, y2, radius) {\\n\\t            if (this._ctx) {\\n\\t                this._ctx.arcTo(x1, y1, x2, y2, radius);\\n\\t            }\\n\\t            return this;\\n\\t        },\\n\\n\\t        // TODO\\n\\t        rect: function (x, y, w, h) {\\n\\t            this._ctx && this._ctx.rect(x, y, w, h);\\n\\t            this.addData(CMD.R, x, y, w, h);\\n\\t            return this;\\n\\t        },\\n\\n\\t        /**\\n\\t         * @return {module:zrender/core/PathProxy}\\n\\t         */\\n\\t        closePath: function () {\\n\\t            this.addData(CMD.Z);\\n\\n\\t            var ctx = this._ctx;\\n\\t            var x0 = this._x0;\\n\\t            var y0 = this._y0;\\n\\t            if (ctx) {\\n\\t                this._needsDash() && this._dashedLineTo(x0, y0);\\n\\t                ctx.closePath();\\n\\t            }\\n\\n\\t            this._xi = x0;\\n\\t            this._yi = y0;\\n\\t            return this;\\n\\t        },\\n\\n\\t        /**\\n\\t         * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\\n\\t         * stroke 同样\\n\\t         * @param {CanvasRenderingContext2D} ctx\\n\\t         * @return {module:zrender/core/PathProxy}\\n\\t         */\\n\\t        fill: function (ctx) {\\n\\t            ctx && ctx.fill();\\n\\t            this.toStatic();\\n\\t        },\\n\\n\\t        /**\\n\\t         * @param {CanvasRenderingContext2D} ctx\\n\\t         * @return {module:zrender/core/PathProxy}\\n\\t         */\\n\\t        stroke: function (ctx) {\\n\\t            ctx && ctx.stroke();\\n\\t            this.toStatic();\\n\\t        },\\n\\n\\t        /**\\n\\t         * 必须在其它绘制命令前调用\\n\\t         * Must be invoked before all other path drawing methods\\n\\t         * @return {module:zrender/core/PathProxy}\\n\\t         */\\n\\t        setLineDash: function (lineDash) {\\n\\t            if (lineDash instanceof Array) {\\n\\t                this._lineDash = lineDash;\\n\\n\\t                this._dashIdx = 0;\\n\\n\\t                var lineDashSum = 0;\\n\\t                for (var i = 0; i < lineDash.length; i++) {\\n\\t                    lineDashSum += lineDash[i];\\n\\t                }\\n\\t                this._dashSum = lineDashSum;\\n\\t            }\\n\\t            return this;\\n\\t        },\\n\\n\\t        /**\\n\\t         * 必须在其它绘制命令前调用\\n\\t         * Must be invoked before all other path drawing methods\\n\\t         * @return {module:zrender/core/PathProxy}\\n\\t         */\\n\\t        setLineDashOffset: function (offset) {\\n\\t            this._dashOffset = offset;\\n\\t            return this;\\n\\t        },\\n\\n\\t        /**\\n\\t         *\\n\\t         * @return {boolean}\\n\\t         */\\n\\t        len: function () {\\n\\t            return this._len;\\n\\t        },\\n\\n\\t        /**\\n\\t         * 直接设置 Path 数据\\n\\t         */\\n\\t        setData: function (data) {\\n\\n\\t            var len = data.length;\\n\\n\\t            if (! (this.data && this.data.length == len) && hasTypedArray) {\\n\\t                this.data = new Float32Array(len);\\n\\t            }\\n\\n\\t            for (var i = 0; i < len; i++) {\\n\\t                this.data[i] = data[i];\\n\\t            }\\n\\n\\t            this._len = len;\\n\\t        },\\n\\n\\t        /**\\n\\t         * 添加子路径\\n\\t         * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\\n\\t         */\\n\\t        appendPath: function (path) {\\n\\t            if (!(path instanceof Array)) {\\n\\t                path = [path];\\n\\t            }\\n\\t            var len = path.length;\\n\\t            var appendSize = 0;\\n\\t            var offset = this._len;\\n\\t            for (var i = 0; i < len; i++) {\\n\\t                appendSize += path[i].len();\\n\\t            }\\n\\t            if (hasTypedArray && (this.data instanceof Float32Array)) {\\n\\t                this.data = new Float32Array(offset + appendSize);\\n\\t            }\\n\\t            for (var i = 0; i < len; i++) {\\n\\t                var appendPathData = path[i].data;\\n\\t                for (var k = 0; k < appendPathData.length; k++) {\\n\\t                    this.data[offset++] = appendPathData[k];\\n\\t                }\\n\\t            }\\n\\t            this._len = offset;\\n\\t        },\\n\\n\\t        /**\\n\\t         * 填充 Path 数据。\\n\\t         * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\\n\\t         */\\n\\t        addData: function (cmd) {\\n\\t            if (!this._saveData) {\\n\\t                return;\\n\\t            }\\n\\n\\t            var data = this.data;\\n\\t            if (this._len + arguments.length > data.length) {\\n\\t                // 因为之前的数组已经转换成静态的 Float32Array\\n\\t                // 所以不够用时需要扩展一个新的动态数组\\n\\t                this._expandData();\\n\\t                data = this.data;\\n\\t            }\\n\\t            for (var i = 0; i < arguments.length; i++) {\\n\\t                data[this._len++] = arguments[i];\\n\\t            }\\n\\n\\t            this._prevCmd = cmd;\\n\\t        },\\n\\n\\t        _expandData: function () {\\n\\t            // Only if data is Float32Array\\n\\t            if (!(this.data instanceof Array)) {\\n\\t                var newData = [];\\n\\t                for (var i = 0; i < this._len; i++) {\\n\\t                    newData[i] = this.data[i];\\n\\t                }\\n\\t                this.data = newData;\\n\\t            }\\n\\t        },\\n\\n\\t        /**\\n\\t         * If needs js implemented dashed line\\n\\t         * @return {boolean}\\n\\t         * @private\\n\\t         */\\n\\t        _needsDash: function () {\\n\\t            return this._lineDash;\\n\\t        },\\n\\n\\t        _dashedLineTo: function (x1, y1) {\\n\\t            var dashSum = this._dashSum;\\n\\t            var offset = this._dashOffset;\\n\\t            var lineDash = this._lineDash;\\n\\t            var ctx = this._ctx;\\n\\n\\t            var x0 = this._xi;\\n\\t            var y0 = this._yi;\\n\\t            var dx = x1 - x0;\\n\\t            var dy = y1 - y0;\\n\\t            var dist = mathSqrt(dx * dx + dy * dy);\\n\\t            var x = x0;\\n\\t            var y = y0;\\n\\t            var dash;\\n\\t            var nDash = lineDash.length;\\n\\t            var idx;\\n\\t            dx /= dist;\\n\\t            dy /= dist;\\n\\n\\t            if (offset < 0) {\\n\\t                // Convert to positive offset\\n\\t                offset = dashSum + offset;\\n\\t            }\\n\\t            offset %= dashSum;\\n\\t            x -= offset * dx;\\n\\t            y -= offset * dy;\\n\\n\\t            while ((dx > 0 && x <= x1) || (dx < 0 && x >= x1)\\n\\t            || (dx == 0 && ((dy > 0 && y <= y1) || (dy < 0 && y >= y1)))) {\\n\\t                idx = this._dashIdx;\\n\\t                dash = lineDash[idx];\\n\\t                x += dx * dash;\\n\\t                y += dy * dash;\\n\\t                this._dashIdx = (idx + 1) % nDash;\\n\\t                // Skip positive offset\\n\\t                if ((dx > 0 && x < x0) || (dx < 0 && x > x0) || (dy > 0 && y < y0) || (dy < 0 && y > y0)) {\\n\\t                    continue;\\n\\t                }\\n\\t                ctx[idx % 2 ? 'moveTo' : 'lineTo'](\\n\\t                    dx >= 0 ? mathMin(x, x1) : mathMax(x, x1),\\n\\t                    dy >= 0 ? mathMin(y, y1) : mathMax(y, y1)\\n\\t                );\\n\\t            }\\n\\t            // Offset for next lineTo\\n\\t            dx = x - x1;\\n\\t            dy = y - y1;\\n\\t            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\\n\\t        },\\n\\n\\t        // Not accurate dashed line to\\n\\t        _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\\n\\t            var dashSum = this._dashSum;\\n\\t            var offset = this._dashOffset;\\n\\t            var lineDash = this._lineDash;\\n\\t            var ctx = this._ctx;\\n\\n\\t            var x0 = this._xi;\\n\\t            var y0 = this._yi;\\n\\t            var t;\\n\\t            var dx;\\n\\t            var dy;\\n\\t            var cubicAt = curve.cubicAt;\\n\\t            var bezierLen = 0;\\n\\t            var idx = this._dashIdx;\\n\\t            var nDash = lineDash.length;\\n\\n\\t            var x;\\n\\t            var y;\\n\\n\\t            var tmpLen = 0;\\n\\n\\t            if (offset < 0) {\\n\\t                // Convert to positive offset\\n\\t                offset = dashSum + offset;\\n\\t            }\\n\\t            offset %= dashSum;\\n\\t            // Bezier approx length\\n\\t            for (t = 0; t < 1; t += 0.1) {\\n\\t                dx = cubicAt(x0, x1, x2, x3, t + 0.1)\\n\\t                    - cubicAt(x0, x1, x2, x3, t);\\n\\t                dy = cubicAt(y0, y1, y2, y3, t + 0.1)\\n\\t                    - cubicAt(y0, y1, y2, y3, t);\\n\\t                bezierLen += mathSqrt(dx * dx + dy * dy);\\n\\t            }\\n\\n\\t            // Find idx after add offset\\n\\t            for (; idx < nDash; idx++) {\\n\\t                tmpLen += lineDash[idx];\\n\\t                if (tmpLen > offset) {\\n\\t                    break;\\n\\t                }\\n\\t            }\\n\\t            t = (tmpLen - offset) / bezierLen;\\n\\n\\t            while (t <= 1) {\\n\\n\\t                x = cubicAt(x0, x1, x2, x3, t);\\n\\t                y = cubicAt(y0, y1, y2, y3, t);\\n\\n\\t                // Use line to approximate dashed bezier\\n\\t                // Bad result if dash is long\\n\\t                idx % 2 ? ctx.moveTo(x, y)\\n\\t                    : ctx.lineTo(x, y);\\n\\n\\t                t += lineDash[idx] / bezierLen;\\n\\n\\t                idx = (idx + 1) % nDash;\\n\\t            }\\n\\n\\t            // Finish the last segment and calculate the new offset\\n\\t            (idx % 2 !== 0) && ctx.lineTo(x3, y3);\\n\\t            dx = x3 - x;\\n\\t            dy = y3 - y;\\n\\t            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\\n\\t        },\\n\\n\\t        _dashedQuadraticTo: function (x1, y1, x2, y2) {\\n\\t            // Convert quadratic to cubic using degree elevation\\n\\t            var x3 = x2;\\n\\t            var y3 = y2;\\n\\t            x2 = (x2 + 2 * x1) / 3;\\n\\t            y2 = (y2 + 2 * y1) / 3;\\n\\t            x1 = (this._xi + 2 * x1) / 3;\\n\\t            y1 = (this._yi + 2 * y1) / 3;\\n\\n\\t            this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\\n\\t        },\\n\\n\\t        /**\\n\\t         * 转成静态的 Float32Array 减少堆内存占用\\n\\t         * Convert dynamic array to static Float32Array\\n\\t         */\\n\\t        toStatic: function () {\\n\\t            var data = this.data;\\n\\t            if (data instanceof Array) {\\n\\t                data.length = this._len;\\n\\t                if (hasTypedArray) {\\n\\t                    this.data = new Float32Array(data);\\n\\t                }\\n\\t            }\\n\\t        },\\n\\n\\t        /**\\n\\t         * @return {module:zrender/core/BoundingRect}\\n\\t         */\\n\\t        getBoundingRect: function () {\\n\\t            min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\\n\\t            max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\\n\\n\\t            var data = this.data;\\n\\t            var xi = 0;\\n\\t            var yi = 0;\\n\\t            var x0 = 0;\\n\\t            var y0 = 0;\\n\\n\\t            for (var i = 0; i < data.length;) {\\n\\t                var cmd = data[i++];\\n\\n\\t                if (i == 1) {\\n\\t                    // 如果第一个命令是 L, C, Q\\n\\t                    // 则 previous point 同绘制命令的第一个 point\\n\\t                    //\\n\\t                    // 第一个命令为 Arc 的情况下会在后面特殊处理\\n\\t                    xi = data[i];\\n\\t                    yi = data[i + 1];\\n\\n\\t                    x0 = xi;\\n\\t                    y0 = yi;\\n\\t                }\\n\\n\\t                switch (cmd) {\\n\\t                    case CMD.M:\\n\\t                        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\\n\\t                        // 在 closePath 的时候使用\\n\\t                        x0 = data[i++];\\n\\t                        y0 = data[i++];\\n\\t                        xi = x0;\\n\\t                        yi = y0;\\n\\t                        min2[0] = x0;\\n\\t                        min2[1] = y0;\\n\\t                        max2[0] = x0;\\n\\t                        max2[1] = y0;\\n\\t                        break;\\n\\t                    case CMD.L:\\n\\t                        bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\\n\\t                        xi = data[i++];\\n\\t                        yi = data[i++];\\n\\t                        break;\\n\\t                    case CMD.C:\\n\\t                        bbox.fromCubic(\\n\\t                            xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\\n\\t                            min2, max2\\n\\t                        );\\n\\t                        xi = data[i++];\\n\\t                        yi = data[i++];\\n\\t                        break;\\n\\t                    case CMD.Q:\\n\\t                        bbox.fromQuadratic(\\n\\t                            xi, yi, data[i++], data[i++], data[i], data[i + 1],\\n\\t                            min2, max2\\n\\t                        );\\n\\t                        xi = data[i++];\\n\\t                        yi = data[i++];\\n\\t                        break;\\n\\t                    case CMD.A:\\n\\t                        // TODO Arc 判断的开销比较大\\n\\t                        var cx = data[i++];\\n\\t                        var cy = data[i++];\\n\\t                        var rx = data[i++];\\n\\t                        var ry = data[i++];\\n\\t                        var startAngle = data[i++];\\n\\t                        var endAngle = data[i++] + startAngle;\\n\\t                        // TODO Arc 旋转\\n\\t                        var psi = data[i++];\\n\\t                        var anticlockwise = 1 - data[i++];\\n\\n\\t                        if (i == 1) {\\n\\t                            // 直接使用 arc 命令\\n\\t                            // 第一个命令起点还未定义\\n\\t                            x0 = mathCos(startAngle) * rx + cx;\\n\\t                            y0 = mathSin(startAngle) * ry + cy;\\n\\t                        }\\n\\n\\t                        bbox.fromArc(\\n\\t                            cx, cy, rx, ry, startAngle, endAngle,\\n\\t                            anticlockwise, min2, max2\\n\\t                        );\\n\\n\\t                        xi = mathCos(endAngle) * rx + cx;\\n\\t                        yi = mathSin(endAngle) * ry + cy;\\n\\t                        break;\\n\\t                    case CMD.R:\\n\\t                        x0 = xi = data[i++];\\n\\t                        y0 = yi = data[i++];\\n\\t                        var width = data[i++];\\n\\t                        var height = data[i++];\\n\\t                        // Use fromLine\\n\\t                        bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\\n\\t                        break;\\n\\t                    case CMD.Z:\\n\\t                        xi = x0;\\n\\t                        yi = y0;\\n\\t                        break;\\n\\t                }\\n\\n\\t                // Union\\n\\t                vec2.min(min, min, min2);\\n\\t                vec2.max(max, max, max2);\\n\\t            }\\n\\n\\t            // No data\\n\\t            if (i === 0) {\\n\\t                min[0] = min[1] = max[0] = max[1] = 0;\\n\\t            }\\n\\n\\t            return new BoundingRect(\\n\\t                min[0], min[1], max[0] - min[0], max[1] - min[1]\\n\\t            );\\n\\t        },\\n\\n\\t        /**\\n\\t         * Rebuild path from current data\\n\\t         * Rebuild path will not consider javascript implemented line dash.\\n\\t         * @param {CanvasRenderingContext} ctx\\n\\t         */\\n\\t        rebuildPath: function (ctx) {\\n\\t            var d = this.data;\\n\\t            var x0, y0;\\n\\t            var xi, yi;\\n\\t            var x, y;\\n\\t            var ux = this._ux;\\n\\t            var uy = this._uy;\\n\\t            var len = this._len;\\n\\t            for (var i = 0; i < len;) {\\n\\t                var cmd = d[i++];\\n\\n\\t                if (i == 1) {\\n\\t                    // 如果第一个命令是 L, C, Q\\n\\t                    // 则 previous point 同绘制命令的第一个 point\\n\\t                    //\\n\\t                    // 第一个命令为 Arc 的情况下会在后面特殊处理\\n\\t                    xi = d[i];\\n\\t                    yi = d[i + 1];\\n\\n\\t                    x0 = xi;\\n\\t                    y0 = yi;\\n\\t                }\\n\\t                switch (cmd) {\\n\\t                    case CMD.M:\\n\\t                        x0 = xi = d[i++];\\n\\t                        y0 = yi = d[i++];\\n\\t                        ctx.moveTo(xi, yi);\\n\\t                        break;\\n\\t                    case CMD.L:\\n\\t                        x = d[i++];\\n\\t                        y = d[i++];\\n\\t                        // Not draw too small seg between\\n\\t                        if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\\n\\t                            ctx.lineTo(x, y);\\n\\t                            xi = x;\\n\\t                            yi = y;\\n\\t                        }\\n\\t                        break;\\n\\t                    case CMD.C:\\n\\t                        ctx.bezierCurveTo(\\n\\t                            d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]\\n\\t                        );\\n\\t                        xi = d[i - 2];\\n\\t                        yi = d[i - 1];\\n\\t                        break;\\n\\t                    case CMD.Q:\\n\\t                        ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\\n\\t                        xi = d[i - 2];\\n\\t                        yi = d[i - 1];\\n\\t                        break;\\n\\t                    case CMD.A:\\n\\t                        var cx = d[i++];\\n\\t                        var cy = d[i++];\\n\\t                        var rx = d[i++];\\n\\t                        var ry = d[i++];\\n\\t                        var theta = d[i++];\\n\\t                        var dTheta = d[i++];\\n\\t                        var psi = d[i++];\\n\\t                        var fs = d[i++];\\n\\t                        var r = (rx > ry) ? rx : ry;\\n\\t                        var scaleX = (rx > ry) ? 1 : rx / ry;\\n\\t                        var scaleY = (rx > ry) ? ry / rx : 1;\\n\\t                        var isEllipse = Math.abs(rx - ry) > 1e-3;\\n\\t                        var endAngle = theta + dTheta;\\n\\t                        if (isEllipse) {\\n\\t                            ctx.translate(cx, cy);\\n\\t                            ctx.rotate(psi);\\n\\t                            ctx.scale(scaleX, scaleY);\\n\\t                            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\\n\\t                            ctx.scale(1 / scaleX, 1 / scaleY);\\n\\t                            ctx.rotate(-psi);\\n\\t                            ctx.translate(-cx, -cy);\\n\\t                        }\\n\\t                        else {\\n\\t                            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\\n\\t                        }\\n\\n\\t                        if (i == 1) {\\n\\t                            // 直接使用 arc 命令\\n\\t                            // 第一个命令起点还未定义\\n\\t                            x0 = mathCos(theta) * rx + cx;\\n\\t                            y0 = mathSin(theta) * ry + cy;\\n\\t                        }\\n\\t                        xi = mathCos(endAngle) * rx + cx;\\n\\t                        yi = mathSin(endAngle) * ry + cy;\\n\\t                        break;\\n\\t                    case CMD.R:\\n\\t                        x0 = xi = d[i];\\n\\t                        y0 = yi = d[i + 1];\\n\\t                        ctx.rect(d[i++], d[i++], d[i++], d[i++]);\\n\\t                        break;\\n\\t                    case CMD.Z:\\n\\t                        ctx.closePath();\\n\\t                        xi = x0;\\n\\t                        yi = y0;\\n\\t                }\\n\\t            }\\n\\t        }\\n\\t    };\\n\\n\\t    PathProxy.CMD = CMD;\\n\\n\\t    module.exports = PathProxy;\\n\\n\\n/***/ },\\n/* 37 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t'use strict';\\n\\t/**\\n\\t * 曲线辅助模块\\n\\t * @module zrender/core/curve\\n\\t * @author pissang(https://www.github.com/pissang)\\n\\t */\\n\\n\\n\\t    var vec2 = __webpack_require__(10);\\n\\t    var v2Create = vec2.create;\\n\\t    var v2DistSquare = vec2.distSquare;\\n\\t    var mathPow = Math.pow;\\n\\t    var mathSqrt = Math.sqrt;\\n\\n\\t    var EPSILON = 1e-8;\\n\\t    var EPSILON_NUMERIC = 1e-4;\\n\\n\\t    var THREE_SQRT = mathSqrt(3);\\n\\t    var ONE_THIRD = 1 / 3;\\n\\n\\t    // 临时变量\\n\\t    var _v0 = v2Create();\\n\\t    var _v1 = v2Create();\\n\\t    var _v2 = v2Create();\\n\\t    // var _v3 = vec2.create();\\n\\n\\t    function isAroundZero(val) {\\n\\t        return val > -EPSILON && val < EPSILON;\\n\\t    }\\n\\t    function isNotAroundZero(val) {\\n\\t        return val > EPSILON || val < -EPSILON;\\n\\t    }\\n\\t    /**\\n\\t     * 计算三次贝塞尔值\\n\\t     * @memberOf module:zrender/core/curve\\n\\t     * @param  {number} p0\\n\\t     * @param  {number} p1\\n\\t     * @param  {number} p2\\n\\t     * @param  {number} p3\\n\\t     * @param  {number} t\\n\\t     * @return {number}\\n\\t     */\\n\\t    function cubicAt(p0, p1, p2, p3, t) {\\n\\t        var onet = 1 - t;\\n\\t        return onet * onet * (onet * p0 + 3 * t * p1)\\n\\t             + t * t * (t * p3 + 3 * onet * p2);\\n\\t    }\\n\\n\\t    /**\\n\\t     * 计算三次贝塞尔导数值\\n\\t     * @memberOf module:zrender/core/curve\\n\\t     * @param  {number} p0\\n\\t     * @param  {number} p1\\n\\t     * @param  {number} p2\\n\\t     * @param  {number} p3\\n\\t     * @param  {number} t\\n\\t     * @return {number}\\n\\t     */\\n\\t    function cubicDerivativeAt(p0, p1, p2, p3, t) {\\n\\t        var onet = 1 - t;\\n\\t        return 3 * (\\n\\t            ((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet\\n\\t            + (p3 - p2) * t * t\\n\\t        );\\n\\t    }\\n\\n\\t    /**\\n\\t     * 计算三次贝塞尔方程根，使用盛金公式\\n\\t     * @memberOf module:zrender/core/curve\\n\\t     * @param  {number} p0\\n\\t     * @param  {number} p1\\n\\t     * @param  {number} p2\\n\\t     * @param  {number} p3\\n\\t     * @param  {number} val\\n\\t     * @param  {Array.<number>} roots\\n\\t     * @return {number} 有效根数目\\n\\t     */\\n\\t    function cubicRootAt(p0, p1, p2, p3, val, roots) {\\n\\t        // Evaluate roots of cubic functions\\n\\t        var a = p3 + 3 * (p1 - p2) - p0;\\n\\t        var b = 3 * (p2 - p1 * 2 + p0);\\n\\t        var c = 3 * (p1  - p0);\\n\\t        var d = p0 - val;\\n\\n\\t        var A = b * b - 3 * a * c;\\n\\t        var B = b * c - 9 * a * d;\\n\\t        var C = c * c - 3 * b * d;\\n\\n\\t        var n = 0;\\n\\n\\t        if (isAroundZero(A) && isAroundZero(B)) {\\n\\t            if (isAroundZero(b)) {\\n\\t                roots[0] = 0;\\n\\t            }\\n\\t            else {\\n\\t                var t1 = -c / b;  //t1, t2, t3, b is not zero\\n\\t                if (t1 >= 0 && t1 <= 1) {\\n\\t                    roots[n++] = t1;\\n\\t                }\\n\\t            }\\n\\t        }\\n\\t        else {\\n\\t            var disc = B * B - 4 * A * C;\\n\\n\\t            if (isAroundZero(disc)) {\\n\\t                var K = B / A;\\n\\t                var t1 = -b / a + K;  // t1, a is not zero\\n\\t                var t2 = -K / 2;  // t2, t3\\n\\t                if (t1 >= 0 && t1 <= 1) {\\n\\t                    roots[n++] = t1;\\n\\t                }\\n\\t                if (t2 >= 0 && t2 <= 1) {\\n\\t                    roots[n++] = t2;\\n\\t                }\\n\\t            }\\n\\t            else if (disc > 0) {\\n\\t                var discSqrt = mathSqrt(disc);\\n\\t                var Y1 = A * b + 1.5 * a * (-B + discSqrt);\\n\\t                var Y2 = A * b + 1.5 * a * (-B - discSqrt);\\n\\t                if (Y1 < 0) {\\n\\t                    Y1 = -mathPow(-Y1, ONE_THIRD);\\n\\t                }\\n\\t                else {\\n\\t                    Y1 = mathPow(Y1, ONE_THIRD);\\n\\t                }\\n\\t                if (Y2 < 0) {\\n\\t                    Y2 = -mathPow(-Y2, ONE_THIRD);\\n\\t                }\\n\\t                else {\\n\\t                    Y2 = mathPow(Y2, ONE_THIRD);\\n\\t                }\\n\\t                var t1 = (-b - (Y1 + Y2)) / (3 * a);\\n\\t                if (t1 >= 0 && t1 <= 1) {\\n\\t                    roots[n++] = t1;\\n\\t                }\\n\\t            }\\n\\t            else {\\n\\t                var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\\n\\t                var theta = Math.acos(T) / 3;\\n\\t                var ASqrt = mathSqrt(A);\\n\\t                var tmp = Math.cos(theta);\\n\\n\\t                var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\\n\\t                var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\\n\\t                var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\\n\\t                if (t1 >= 0 && t1 <= 1) {\\n\\t                    roots[n++] = t1;\\n\\t                }\\n\\t                if (t2 >= 0 && t2 <= 1) {\\n\\t                    roots[n++] = t2;\\n\\t                }\\n\\t                if (t3 >= 0 && t3 <= 1) {\\n\\t                    roots[n++] = t3;\\n\\t                }\\n\\t            }\\n\\t        }\\n\\t        return n;\\n\\t    }\\n\\n\\t    /**\\n\\t     * 计算三次贝塞尔方程极限值的位置\\n\\t     * @memberOf module:zrender/core/curve\\n\\t     * @param  {number} p0\\n\\t     * @param  {number} p1\\n\\t     * @param  {number} p2\\n\\t     * @param  {number} p3\\n\\t     * @param  {Array.<number>} extrema\\n\\t     * @return {number} 有效数目\\n\\t     */\\n\\t    function cubicExtrema(p0, p1, p2, p3, extrema) {\\n\\t        var b = 6 * p2 - 12 * p1 + 6 * p0;\\n\\t        var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\\n\\t        var c = 3 * p1 - 3 * p0;\\n\\n\\t        var n = 0;\\n\\t        if (isAroundZero(a)) {\\n\\t            if (isNotAroundZero(b)) {\\n\\t                var t1 = -c / b;\\n\\t                if (t1 >= 0 && t1 <=1) {\\n\\t                    extrema[n++] = t1;\\n\\t                }\\n\\t            }\\n\\t        }\\n\\t        else {\\n\\t            var disc = b * b - 4 * a * c;\\n\\t            if (isAroundZero(disc)) {\\n\\t                extrema[0] = -b / (2 * a);\\n\\t            }\\n\\t            else if (disc > 0) {\\n\\t                var discSqrt = mathSqrt(disc);\\n\\t                var t1 = (-b + discSqrt) / (2 * a);\\n\\t                var t2 = (-b - discSqrt) / (2 * a);\\n\\t                if (t1 >= 0 && t1 <= 1) {\\n\\t                    extrema[n++] = t1;\\n\\t                }\\n\\t                if (t2 >= 0 && t2 <= 1) {\\n\\t                    extrema[n++] = t2;\\n\\t                }\\n\\t            }\\n\\t        }\\n\\t        return n;\\n\\t    }\\n\\n\\t    /**\\n\\t     * 细分三次贝塞尔曲线\\n\\t     * @memberOf module:zrender/core/curve\\n\\t     * @param  {number} p0\\n\\t     * @param  {number} p1\\n\\t     * @param  {number} p2\\n\\t     * @param  {number} p3\\n\\t     * @param  {number} t\\n\\t     * @param  {Array.<number>} out\\n\\t     */\\n\\t    function cubicSubdivide(p0, p1, p2, p3, t, out) {\\n\\t        var p01 = (p1 - p0) * t + p0;\\n\\t        var p12 = (p2 - p1) * t + p1;\\n\\t        var p23 = (p3 - p2) * t + p2;\\n\\n\\t        var p012 = (p12 - p01) * t + p01;\\n\\t        var p123 = (p23 - p12) * t + p12;\\n\\n\\t        var p0123 = (p123 - p012) * t + p012;\\n\\t        // Seg0\\n\\t        out[0] = p0;\\n\\t        out[1] = p01;\\n\\t        out[2] = p012;\\n\\t        out[3] = p0123;\\n\\t        // Seg1\\n\\t        out[4] = p0123;\\n\\t        out[5] = p123;\\n\\t        out[6] = p23;\\n\\t        out[7] = p3;\\n\\t    }\\n\\n\\t    /**\\n\\t     * 投射点到三次贝塞尔曲线上，返回投射距离。\\n\\t     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\\n\\t     * @param {number} x0\\n\\t     * @param {number} y0\\n\\t     * @param {number} x1\\n\\t     * @param {number} y1\\n\\t     * @param {number} x2\\n\\t     * @param {number} y2\\n\\t     * @param {number} x3\\n\\t     * @param {number} y3\\n\\t     * @param {number} x\\n\\t     * @param {number} y\\n\\t     * @param {Array.<number>} [out] 投射点\\n\\t     * @return {number}\\n\\t     */\\n\\t    function cubicProjectPoint(\\n\\t        x0, y0, x1, y1, x2, y2, x3, y3,\\n\\t        x, y, out\\n\\t    ) {\\n\\t        // http://pomax.github.io/bezierinfo/#projections\\n\\t        var t;\\n\\t        var interval = 0.005;\\n\\t        var d = Infinity;\\n\\t        var prev;\\n\\t        var next;\\n\\t        var d1;\\n\\t        var d2;\\n\\n\\t        _v0[0] = x;\\n\\t        _v0[1] = y;\\n\\n\\t        // 先粗略估计一下可能的最小距离的 t 值\\n\\t        // PENDING\\n\\t        for (var _t = 0; _t < 1; _t += 0.05) {\\n\\t            _v1[0] = cubicAt(x0, x1, x2, x3, _t);\\n\\t            _v1[1] = cubicAt(y0, y1, y2, y3, _t);\\n\\t            d1 = v2DistSquare(_v0, _v1);\\n\\t            if (d1 < d) {\\n\\t                t = _t;\\n\\t                d = d1;\\n\\t            }\\n\\t        }\\n\\t        d = Infinity;\\n\\n\\t        // At most 32 iteration\\n\\t        for (var i = 0; i < 32; i++) {\\n\\t            if (interval < EPSILON_NUMERIC) {\\n\\t                break;\\n\\t            }\\n\\t            prev = t - interval;\\n\\t            next = t + interval;\\n\\t            // t - interval\\n\\t            _v1[0] = cubicAt(x0, x1, x2, x3, prev);\\n\\t            _v1[1] = cubicAt(y0, y1, y2, y3, prev);\\n\\n\\t            d1 = v2DistSquare(_v1, _v0);\\n\\n\\t            if (prev >= 0 && d1 < d) {\\n\\t                t = prev;\\n\\t                d = d1;\\n\\t            }\\n\\t            else {\\n\\t                // t + interval\\n\\t                _v2[0] = cubicAt(x0, x1, x2, x3, next);\\n\\t                _v2[1] = cubicAt(y0, y1, y2, y3, next);\\n\\t                d2 = v2DistSquare(_v2, _v0);\\n\\n\\t                if (next <= 1 && d2 < d) {\\n\\t                    t = next;\\n\\t                    d = d2;\\n\\t                }\\n\\t                else {\\n\\t                    interval *= 0.5;\\n\\t                }\\n\\t            }\\n\\t        }\\n\\t        // t\\n\\t        if (out) {\\n\\t            out[0] = cubicAt(x0, x1, x2, x3, t);\\n\\t            out[1] = cubicAt(y0, y1, y2, y3, t);\\n\\t        }\\n\\t        // console.log(interval, i);\\n\\t        return mathSqrt(d);\\n\\t    }\\n\\n\\t    /**\\n\\t     * 计算二次方贝塞尔值\\n\\t     * @param  {number} p0\\n\\t     * @param  {number} p1\\n\\t     * @param  {number} p2\\n\\t     * @param  {number} t\\n\\t     * @return {number}\\n\\t     */\\n\\t    function quadraticAt(p0, p1, p2, t) {\\n\\t        var onet = 1 - t;\\n\\t        return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\\n\\t    }\\n\\n\\t    /**\\n\\t     * 计算二次方贝塞尔导数值\\n\\t     * @param  {number} p0\\n\\t     * @param  {number} p1\\n\\t     * @param  {number} p2\\n\\t     * @param  {number} t\\n\\t     * @return {number}\\n\\t     */\\n\\t    function quadraticDerivativeAt(p0, p1, p2, t) {\\n\\t        return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\\n\\t    }\\n\\n\\t    /**\\n\\t     * 计算二次方贝塞尔方程根\\n\\t     * @param  {number} p0\\n\\t     * @param  {number} p1\\n\\t     * @param  {number} p2\\n\\t     * @param  {number} t\\n\\t     * @param  {Array.<number>} roots\\n\\t     * @return {number} 有效根数目\\n\\t     */\\n\\t    function quadraticRootAt(p0, p1, p2, val, roots) {\\n\\t        var a = p0 - 2 * p1 + p2;\\n\\t        var b = 2 * (p1 - p0);\\n\\t        var c = p0 - val;\\n\\n\\t        var n = 0;\\n\\t        if (isAroundZero(a)) {\\n\\t            if (isNotAroundZero(b)) {\\n\\t                var t1 = -c / b;\\n\\t                if (t1 >= 0 && t1 <= 1) {\\n\\t                    roots[n++] = t1;\\n\\t                }\\n\\t            }\\n\\t        }\\n\\t        else {\\n\\t            var disc = b * b - 4 * a * c;\\n\\t            if (isAroundZero(disc)) {\\n\\t                var t1 = -b / (2 * a);\\n\\t                if (t1 >= 0 && t1 <= 1) {\\n\\t                    roots[n++] = t1;\\n\\t                }\\n\\t            }\\n\\t            else if (disc > 0) {\\n\\t                var discSqrt = mathSqrt(disc);\\n\\t                var t1 = (-b + discSqrt) / (2 * a);\\n\\t                var t2 = (-b - discSqrt) / (2 * a);\\n\\t                if (t1 >= 0 && t1 <= 1) {\\n\\t                    roots[n++] = t1;\\n\\t                }\\n\\t                if (t2 >= 0 && t2 <= 1) {\\n\\t                    roots[n++] = t2;\\n\\t                }\\n\\t            }\\n\\t        }\\n\\t        return n;\\n\\t    }\\n\\n\\t    /**\\n\\t     * 计算二次贝塞尔方程极限值\\n\\t     * @memberOf module:zrender/core/curve\\n\\t     * @param  {number} p0\\n\\t     * @param  {number} p1\\n\\t     * @param  {number} p2\\n\\t     * @return {number}\\n\\t     */\\n\\t    function quadraticExtremum(p0, p1, p2) {\\n\\t        var divider = p0 + p2 - 2 * p1;\\n\\t        if (divider === 0) {\\n\\t            // p1 is center of p0 and p2\\n\\t            return 0.5;\\n\\t        }\\n\\t        else {\\n\\t            return (p0 - p1) / divider;\\n\\t        }\\n\\t    }\\n\\n\\t    /**\\n\\t     * 细分二次贝塞尔曲线\\n\\t     * @memberOf module:zrender/core/curve\\n\\t     * @param  {number} p0\\n\\t     * @param  {number} p1\\n\\t     * @param  {number} p2\\n\\t     * @param  {number} t\\n\\t     * @param  {Array.<number>} out\\n\\t     */\\n\\t    function quadraticSubdivide(p0, p1, p2, t, out) {\\n\\t        var p01 = (p1 - p0) * t + p0;\\n\\t        var p12 = (p2 - p1) * t + p1;\\n\\t        var p012 = (p12 - p01) * t + p01;\\n\\n\\t        // Seg0\\n\\t        out[0] = p0;\\n\\t        out[1] = p01;\\n\\t        out[2] = p012;\\n\\n\\t        // Seg1\\n\\t        out[3] = p012;\\n\\t        out[4] = p12;\\n\\t        out[5] = p2;\\n\\t    }\\n\\n\\t    /**\\n\\t     * 投射点到二次贝塞尔曲线上，返回投射距离。\\n\\t     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\\n\\t     * @param {number} x0\\n\\t     * @param {number} y0\\n\\t     * @param {number} x1\\n\\t     * @param {number} y1\\n\\t     * @param {number} x2\\n\\t     * @param {number} y2\\n\\t     * @param {number} x\\n\\t     * @param {number} y\\n\\t     * @param {Array.<number>} out 投射点\\n\\t     * @return {number}\\n\\t     */\\n\\t    function quadraticProjectPoint(\\n\\t        x0, y0, x1, y1, x2, y2,\\n\\t        x, y, out\\n\\t    ) {\\n\\t        // http://pomax.github.io/bezierinfo/#projections\\n\\t        var t;\\n\\t        var interval = 0.005;\\n\\t        var d = Infinity;\\n\\n\\t        _v0[0] = x;\\n\\t        _v0[1] = y;\\n\\n\\t        // 先粗略估计一下可能的最小距离的 t 值\\n\\t        // PENDING\\n\\t        for (var _t = 0; _t < 1; _t += 0.05) {\\n\\t            _v1[0] = quadraticAt(x0, x1, x2, _t);\\n\\t            _v1[1] = quadraticAt(y0, y1, y2, _t);\\n\\t            var d1 = v2DistSquare(_v0, _v1);\\n\\t            if (d1 < d) {\\n\\t                t = _t;\\n\\t                d = d1;\\n\\t            }\\n\\t        }\\n\\t        d = Infinity;\\n\\n\\t        // At most 32 iteration\\n\\t        for (var i = 0; i < 32; i++) {\\n\\t            if (interval < EPSILON_NUMERIC) {\\n\\t                break;\\n\\t            }\\n\\t            var prev = t - interval;\\n\\t            var next = t + interval;\\n\\t            // t - interval\\n\\t            _v1[0] = quadraticAt(x0, x1, x2, prev);\\n\\t            _v1[1] = quadraticAt(y0, y1, y2, prev);\\n\\n\\t            var d1 = v2DistSquare(_v1, _v0);\\n\\n\\t            if (prev >= 0 && d1 < d) {\\n\\t                t = prev;\\n\\t                d = d1;\\n\\t            }\\n\\t            else {\\n\\t                // t + interval\\n\\t                _v2[0] = quadraticAt(x0, x1, x2, next);\\n\\t                _v2[1] = quadraticAt(y0, y1, y2, next);\\n\\t                var d2 = v2DistSquare(_v2, _v0);\\n\\t                if (next <= 1 && d2 < d) {\\n\\t                    t = next;\\n\\t                    d = d2;\\n\\t                }\\n\\t                else {\\n\\t                    interval *= 0.5;\\n\\t                }\\n\\t            }\\n\\t        }\\n\\t        // t\\n\\t        if (out) {\\n\\t            out[0] = quadraticAt(x0, x1, x2, t);\\n\\t            out[1] = quadraticAt(y0, y1, y2, t);\\n\\t        }\\n\\t        // console.log(interval, i);\\n\\t        return mathSqrt(d);\\n\\t    }\\n\\n\\t    module.exports = {\\n\\n\\t        cubicAt: cubicAt,\\n\\n\\t        cubicDerivativeAt: cubicDerivativeAt,\\n\\n\\t        cubicRootAt: cubicRootAt,\\n\\n\\t        cubicExtrema: cubicExtrema,\\n\\n\\t        cubicSubdivide: cubicSubdivide,\\n\\n\\t        cubicProjectPoint: cubicProjectPoint,\\n\\n\\t        quadraticAt: quadraticAt,\\n\\n\\t        quadraticDerivativeAt: quadraticDerivativeAt,\\n\\n\\t        quadraticRootAt: quadraticRootAt,\\n\\n\\t        quadraticExtremum: quadraticExtremum,\\n\\n\\t        quadraticSubdivide: quadraticSubdivide,\\n\\n\\t        quadraticProjectPoint: quadraticProjectPoint\\n\\t    };\\n\\n\\n/***/ },\\n/* 38 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * @author Yi Shen(https://github.com/pissang)\\n\\t */\\n\\n\\n\\t    var vec2 = __webpack_require__(10);\\n\\t    var curve = __webpack_require__(37);\\n\\n\\t    var bbox = {};\\n\\t    var mathMin = Math.min;\\n\\t    var mathMax = Math.max;\\n\\t    var mathSin = Math.sin;\\n\\t    var mathCos = Math.cos;\\n\\n\\t    var start = vec2.create();\\n\\t    var end = vec2.create();\\n\\t    var extremity = vec2.create();\\n\\n\\t    var PI2 = Math.PI * 2;\\n\\t    /**\\n\\t     * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\\n\\t     * @module zrender/core/bbox\\n\\t     * @param {Array<Object>} points 顶点数组\\n\\t     * @param {number} min\\n\\t     * @param {number} max\\n\\t     */\\n\\t    bbox.fromPoints = function(points, min, max) {\\n\\t        if (points.length === 0) {\\n\\t            return;\\n\\t        }\\n\\t        var p = points[0];\\n\\t        var left = p[0];\\n\\t        var right = p[0];\\n\\t        var top = p[1];\\n\\t        var bottom = p[1];\\n\\t        var i;\\n\\n\\t        for (i = 1; i < points.length; i++) {\\n\\t            p = points[i];\\n\\t            left = mathMin(left, p[0]);\\n\\t            right = mathMax(right, p[0]);\\n\\t            top = mathMin(top, p[1]);\\n\\t            bottom = mathMax(bottom, p[1]);\\n\\t        }\\n\\n\\t        min[0] = left;\\n\\t        min[1] = top;\\n\\t        max[0] = right;\\n\\t        max[1] = bottom;\\n\\t    };\\n\\n\\t    /**\\n\\t     * @memberOf module:zrender/core/bbox\\n\\t     * @param {number} x0\\n\\t     * @param {number} y0\\n\\t     * @param {number} x1\\n\\t     * @param {number} y1\\n\\t     * @param {Array.<number>} min\\n\\t     * @param {Array.<number>} max\\n\\t     */\\n\\t    bbox.fromLine = function (x0, y0, x1, y1, min, max) {\\n\\t        min[0] = mathMin(x0, x1);\\n\\t        min[1] = mathMin(y0, y1);\\n\\t        max[0] = mathMax(x0, x1);\\n\\t        max[1] = mathMax(y0, y1);\\n\\t    };\\n\\n\\t    var xDim = [];\\n\\t    var yDim = [];\\n\\t    /**\\n\\t     * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\\n\\t     * @memberOf module:zrender/core/bbox\\n\\t     * @param {number} x0\\n\\t     * @param {number} y0\\n\\t     * @param {number} x1\\n\\t     * @param {number} y1\\n\\t     * @param {number} x2\\n\\t     * @param {number} y2\\n\\t     * @param {number} x3\\n\\t     * @param {number} y3\\n\\t     * @param {Array.<number>} min\\n\\t     * @param {Array.<number>} max\\n\\t     */\\n\\t    bbox.fromCubic = function(\\n\\t        x0, y0, x1, y1, x2, y2, x3, y3, min, max\\n\\t    ) {\\n\\t        var cubicExtrema = curve.cubicExtrema;\\n\\t        var cubicAt = curve.cubicAt;\\n\\t        var i;\\n\\t        var n = cubicExtrema(x0, x1, x2, x3, xDim);\\n\\t        min[0] = Infinity;\\n\\t        min[1] = Infinity;\\n\\t        max[0] = -Infinity;\\n\\t        max[1] = -Infinity;\\n\\n\\t        for (i = 0; i < n; i++) {\\n\\t            var x = cubicAt(x0, x1, x2, x3, xDim[i]);\\n\\t            min[0] = mathMin(x, min[0]);\\n\\t            max[0] = mathMax(x, max[0]);\\n\\t        }\\n\\t        n = cubicExtrema(y0, y1, y2, y3, yDim);\\n\\t        for (i = 0; i < n; i++) {\\n\\t            var y = cubicAt(y0, y1, y2, y3, yDim[i]);\\n\\t            min[1] = mathMin(y, min[1]);\\n\\t            max[1] = mathMax(y, max[1]);\\n\\t        }\\n\\n\\t        min[0] = mathMin(x0, min[0]);\\n\\t        max[0] = mathMax(x0, max[0]);\\n\\t        min[0] = mathMin(x3, min[0]);\\n\\t        max[0] = mathMax(x3, max[0]);\\n\\n\\t        min[1] = mathMin(y0, min[1]);\\n\\t        max[1] = mathMax(y0, max[1]);\\n\\t        min[1] = mathMin(y3, min[1]);\\n\\t        max[1] = mathMax(y3, max[1]);\\n\\t    };\\n\\n\\t    /**\\n\\t     * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\\n\\t     * @memberOf module:zrender/core/bbox\\n\\t     * @param {number} x0\\n\\t     * @param {number} y0\\n\\t     * @param {number} x1\\n\\t     * @param {number} y1\\n\\t     * @param {number} x2\\n\\t     * @param {number} y2\\n\\t     * @param {Array.<number>} min\\n\\t     * @param {Array.<number>} max\\n\\t     */\\n\\t    bbox.fromQuadratic = function(x0, y0, x1, y1, x2, y2, min, max) {\\n\\t        var quadraticExtremum = curve.quadraticExtremum;\\n\\t        var quadraticAt = curve.quadraticAt;\\n\\t        // Find extremities, where derivative in x dim or y dim is zero\\n\\t        var tx =\\n\\t            mathMax(\\n\\t                mathMin(quadraticExtremum(x0, x1, x2), 1), 0\\n\\t            );\\n\\t        var ty =\\n\\t            mathMax(\\n\\t                mathMin(quadraticExtremum(y0, y1, y2), 1), 0\\n\\t            );\\n\\n\\t        var x = quadraticAt(x0, x1, x2, tx);\\n\\t        var y = quadraticAt(y0, y1, y2, ty);\\n\\n\\t        min[0] = mathMin(x0, x2, x);\\n\\t        min[1] = mathMin(y0, y2, y);\\n\\t        max[0] = mathMax(x0, x2, x);\\n\\t        max[1] = mathMax(y0, y2, y);\\n\\t    };\\n\\n\\t    /**\\n\\t     * 从圆弧中计算出最小包围盒，写入`min`和`max`中\\n\\t     * @method\\n\\t     * @memberOf module:zrender/core/bbox\\n\\t     * @param {number} x\\n\\t     * @param {number} y\\n\\t     * @param {number} rx\\n\\t     * @param {number} ry\\n\\t     * @param {number} startAngle\\n\\t     * @param {number} endAngle\\n\\t     * @param {number} anticlockwise\\n\\t     * @param {Array.<number>} min\\n\\t     * @param {Array.<number>} max\\n\\t     */\\n\\t    bbox.fromArc = function (\\n\\t        x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max\\n\\t    ) {\\n\\t        var vec2Min = vec2.min;\\n\\t        var vec2Max = vec2.max;\\n\\n\\t        var diff = Math.abs(startAngle - endAngle);\\n\\n\\n\\t        if (diff % PI2 < 1e-4 && diff > 1e-4) {\\n\\t            // Is a circle\\n\\t            min[0] = x - rx;\\n\\t            min[1] = y - ry;\\n\\t            max[0] = x + rx;\\n\\t            max[1] = y + ry;\\n\\t            return;\\n\\t        }\\n\\n\\t        start[0] = mathCos(startAngle) * rx + x;\\n\\t        start[1] = mathSin(startAngle) * ry + y;\\n\\n\\t        end[0] = mathCos(endAngle) * rx + x;\\n\\t        end[1] = mathSin(endAngle) * ry + y;\\n\\n\\t        vec2Min(min, start, end);\\n\\t        vec2Max(max, start, end);\\n\\n\\t        // Thresh to [0, Math.PI * 2]\\n\\t        startAngle = startAngle % (PI2);\\n\\t        if (startAngle < 0) {\\n\\t            startAngle = startAngle + PI2;\\n\\t        }\\n\\t        endAngle = endAngle % (PI2);\\n\\t        if (endAngle < 0) {\\n\\t            endAngle = endAngle + PI2;\\n\\t        }\\n\\n\\t        if (startAngle > endAngle && !anticlockwise) {\\n\\t            endAngle += PI2;\\n\\t        }\\n\\t        else if (startAngle < endAngle && anticlockwise) {\\n\\t            startAngle += PI2;\\n\\t        }\\n\\t        if (anticlockwise) {\\n\\t            var tmp = endAngle;\\n\\t            endAngle = startAngle;\\n\\t            startAngle = tmp;\\n\\t        }\\n\\n\\t        // var number = 0;\\n\\t        // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\\n\\t        for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\\n\\t            if (angle > startAngle) {\\n\\t                extremity[0] = mathCos(angle) * rx + x;\\n\\t                extremity[1] = mathSin(angle) * ry + y;\\n\\n\\t                vec2Min(min, extremity, min);\\n\\t                vec2Max(max, extremity, max);\\n\\t            }\\n\\t        }\\n\\t    };\\n\\n\\t    module.exports = bbox;\\n\\n\\n\\n/***/ },\\n/* 39 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t'use strict';\\n\\n\\n\\t    var CMD = __webpack_require__(36).CMD;\\n\\t    var line = __webpack_require__(40);\\n\\t    var cubic = __webpack_require__(41);\\n\\t    var quadratic = __webpack_require__(42);\\n\\t    var arc = __webpack_require__(43);\\n\\t    var normalizeRadian = __webpack_require__(44).normalizeRadian;\\n\\t    var curve = __webpack_require__(37);\\n\\n\\t    var windingLine = __webpack_require__(45);\\n\\n\\t    var containStroke = line.containStroke;\\n\\n\\t    var PI2 = Math.PI * 2;\\n\\n\\t    var EPSILON = 1e-4;\\n\\n\\t    function isAroundEqual(a, b) {\\n\\t        return Math.abs(a - b) < EPSILON;\\n\\t    }\\n\\n\\t    // 临时数组\\n\\t    var roots = [-1, -1, -1];\\n\\t    var extrema = [-1, -1];\\n\\n\\t    function swapExtrema() {\\n\\t        var tmp = extrema[0];\\n\\t        extrema[0] = extrema[1];\\n\\t        extrema[1] = tmp;\\n\\t    }\\n\\n\\t    function windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\\n\\t        // Quick reject\\n\\t        if (\\n\\t            (y > y0 && y > y1 && y > y2 && y > y3)\\n\\t            || (y < y0 && y < y1 && y < y2 && y < y3)\\n\\t        ) {\\n\\t            return 0;\\n\\t        }\\n\\t        var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\\n\\t        if (nRoots === 0) {\\n\\t            return 0;\\n\\t        }\\n\\t        else {\\n\\t            var w = 0;\\n\\t            var nExtrema = -1;\\n\\t            var y0_, y1_;\\n\\t            for (var i = 0; i < nRoots; i++) {\\n\\t                var t = roots[i];\\n\\n\\t                // Avoid winding error when intersection point is the connect point of two line of polygon\\n\\t                var unit = (t === 0 || t === 1) ? 0.5 : 1;\\n\\n\\t                var x_ = curve.cubicAt(x0, x1, x2, x3, t);\\n\\t                if (x_ < x) { // Quick reject\\n\\t                    continue;\\n\\t                }\\n\\t                if (nExtrema < 0) {\\n\\t                    nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\\n\\t                    if (extrema[1] < extrema[0] && nExtrema > 1) {\\n\\t                        swapExtrema();\\n\\t                    }\\n\\t                    y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\\n\\t                    if (nExtrema > 1) {\\n\\t                        y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\\n\\t                    }\\n\\t                }\\n\\t                if (nExtrema == 2) {\\n\\t                    // 分成三段单调函数\\n\\t                    if (t < extrema[0]) {\\n\\t                        w += y0_ < y0 ? unit : -unit;\\n\\t                    }\\n\\t                    else if (t < extrema[1]) {\\n\\t                        w += y1_ < y0_ ? unit : -unit;\\n\\t                    }\\n\\t                    else {\\n\\t                        w += y3 < y1_ ? unit : -unit;\\n\\t                    }\\n\\t                }\\n\\t                else {\\n\\t                    // 分成两段单调函数\\n\\t                    if (t < extrema[0]) {\\n\\t                        w += y0_ < y0 ? unit : -unit;\\n\\t                    }\\n\\t                    else {\\n\\t                        w += y3 < y0_ ? unit : -unit;\\n\\t                    }\\n\\t                }\\n\\t            }\\n\\t            return w;\\n\\t        }\\n\\t    }\\n\\n\\t    function windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\\n\\t        // Quick reject\\n\\t        if (\\n\\t            (y > y0 && y > y1 && y > y2)\\n\\t            || (y < y0 && y < y1 && y < y2)\\n\\t        ) {\\n\\t            return 0;\\n\\t        }\\n\\t        var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\\n\\t        if (nRoots === 0) {\\n\\t            return 0;\\n\\t        }\\n\\t        else {\\n\\t            var t = curve.quadraticExtremum(y0, y1, y2);\\n\\t            if (t >= 0 && t <= 1) {\\n\\t                var w = 0;\\n\\t                var y_ = curve.quadraticAt(y0, y1, y2, t);\\n\\t                for (var i = 0; i < nRoots; i++) {\\n\\t                    // Remove one endpoint.\\n\\t                    var unit = (roots[i] === 0 || roots[i] === 1) ? 0.5 : 1;\\n\\n\\t                    var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\\n\\t                    if (x_ < x) {   // Quick reject\\n\\t                        continue;\\n\\t                    }\\n\\t                    if (roots[i] < t) {\\n\\t                        w += y_ < y0 ? unit : -unit;\\n\\t                    }\\n\\t                    else {\\n\\t                        w += y2 < y_ ? unit : -unit;\\n\\t                    }\\n\\t                }\\n\\t                return w;\\n\\t            }\\n\\t            else {\\n\\t                // Remove one endpoint.\\n\\t                var unit = (roots[0] === 0 || roots[0] === 1) ? 0.5 : 1;\\n\\n\\t                var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\\n\\t                if (x_ < x) {   // Quick reject\\n\\t                    return 0;\\n\\t                }\\n\\t                return y2 < y0 ? unit : -unit;\\n\\t            }\\n\\t        }\\n\\t    }\\n\\n\\t    // TODO\\n\\t    // Arc 旋转\\n\\t    function windingArc(\\n\\t        cx, cy, r, startAngle, endAngle, anticlockwise, x, y\\n\\t    ) {\\n\\t        y -= cy;\\n\\t        if (y > r || y < -r) {\\n\\t            return 0;\\n\\t        }\\n\\t        var tmp = Math.sqrt(r * r - y * y);\\n\\t        roots[0] = -tmp;\\n\\t        roots[1] = tmp;\\n\\n\\t        var diff = Math.abs(startAngle - endAngle);\\n\\t        if (diff < 1e-4) {\\n\\t            return 0;\\n\\t        }\\n\\t        if (diff % PI2 < 1e-4) {\\n\\t            // Is a circle\\n\\t            startAngle = 0;\\n\\t            endAngle = PI2;\\n\\t            var dir = anticlockwise ? 1 : -1;\\n\\t            if (x >= roots[0] + cx && x <= roots[1] + cx) {\\n\\t                return dir;\\n\\t            } else {\\n\\t                return 0;\\n\\t            }\\n\\t        }\\n\\n\\t        if (anticlockwise) {\\n\\t            var tmp = startAngle;\\n\\t            startAngle = normalizeRadian(endAngle);\\n\\t            endAngle = normalizeRadian(tmp);\\n\\t        }\\n\\t        else {\\n\\t            startAngle = normalizeRadian(startAngle);\\n\\t            endAngle = normalizeRadian(endAngle);\\n\\t        }\\n\\t        if (startAngle > endAngle) {\\n\\t            endAngle += PI2;\\n\\t        }\\n\\n\\t        var w = 0;\\n\\t        for (var i = 0; i < 2; i++) {\\n\\t            var x_ = roots[i];\\n\\t            if (x_ + cx > x) {\\n\\t                var angle = Math.atan2(y, x_);\\n\\t                var dir = anticlockwise ? 1 : -1;\\n\\t                if (angle < 0) {\\n\\t                    angle = PI2 + angle;\\n\\t                }\\n\\t                if (\\n\\t                    (angle >= startAngle && angle <= endAngle)\\n\\t                    || (angle + PI2 >= startAngle && angle + PI2 <= endAngle)\\n\\t                ) {\\n\\t                    if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\\n\\t                        dir = -dir;\\n\\t                    }\\n\\t                    w += dir;\\n\\t                }\\n\\t            }\\n\\t        }\\n\\t        return w;\\n\\t    }\\n\\n\\t    function containPath(data, lineWidth, isStroke, x, y) {\\n\\t        var w = 0;\\n\\t        var xi = 0;\\n\\t        var yi = 0;\\n\\t        var x0 = 0;\\n\\t        var y0 = 0;\\n\\n\\t        for (var i = 0; i < data.length;) {\\n\\t            var cmd = data[i++];\\n\\t            // Begin a new subpath\\n\\t            if (cmd === CMD.M && i > 1) {\\n\\t                // Close previous subpath\\n\\t                if (!isStroke) {\\n\\t                    w += windingLine(xi, yi, x0, y0, x, y);\\n\\t                }\\n\\t                // 如果被任何一个 subpath 包含\\n\\t                // if (w !== 0) {\\n\\t                //     return true;\\n\\t                // }\\n\\t            }\\n\\n\\t            if (i == 1) {\\n\\t                // 如果第一个命令是 L, C, Q\\n\\t                // 则 previous point 同绘制命令的第一个 point\\n\\t                //\\n\\t                // 第一个命令为 Arc 的情况下会在后面特殊处理\\n\\t                xi = data[i];\\n\\t                yi = data[i + 1];\\n\\n\\t                x0 = xi;\\n\\t                y0 = yi;\\n\\t            }\\n\\n\\t            switch (cmd) {\\n\\t                case CMD.M:\\n\\t                    // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\\n\\t                    // 在 closePath 的时候使用\\n\\t                    x0 = data[i++];\\n\\t                    y0 = data[i++];\\n\\t                    xi = x0;\\n\\t                    yi = y0;\\n\\t                    break;\\n\\t                case CMD.L:\\n\\t                    if (isStroke) {\\n\\t                        if (containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\\n\\t                            return true;\\n\\t                        }\\n\\t                    }\\n\\t                    else {\\n\\t                        // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\\n\\t                        w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\\n\\t                    }\\n\\t                    xi = data[i++];\\n\\t                    yi = data[i++];\\n\\t                    break;\\n\\t                case CMD.C:\\n\\t                    if (isStroke) {\\n\\t                        if (cubic.containStroke(xi, yi,\\n\\t                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\\n\\t                            lineWidth, x, y\\n\\t                        )) {\\n\\t                            return true;\\n\\t                        }\\n\\t                    }\\n\\t                    else {\\n\\t                        w += windingCubic(\\n\\t                            xi, yi,\\n\\t                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\\n\\t                            x, y\\n\\t                        ) || 0;\\n\\t                    }\\n\\t                    xi = data[i++];\\n\\t                    yi = data[i++];\\n\\t                    break;\\n\\t                case CMD.Q:\\n\\t                    if (isStroke) {\\n\\t                        if (quadratic.containStroke(xi, yi,\\n\\t                            data[i++], data[i++], data[i], data[i + 1],\\n\\t                            lineWidth, x, y\\n\\t                        )) {\\n\\t                            return true;\\n\\t                        }\\n\\t                    }\\n\\t                    else {\\n\\t                        w += windingQuadratic(\\n\\t                            xi, yi,\\n\\t                            data[i++], data[i++], data[i], data[i + 1],\\n\\t                            x, y\\n\\t                        ) || 0;\\n\\t                    }\\n\\t                    xi = data[i++];\\n\\t                    yi = data[i++];\\n\\t                    break;\\n\\t                case CMD.A:\\n\\t                    // TODO Arc 判断的开销比较大\\n\\t                    var cx = data[i++];\\n\\t                    var cy = data[i++];\\n\\t                    var rx = data[i++];\\n\\t                    var ry = data[i++];\\n\\t                    var theta = data[i++];\\n\\t                    var dTheta = data[i++];\\n\\t                    // TODO Arc 旋转\\n\\t                    var psi = data[i++];\\n\\t                    var anticlockwise = 1 - data[i++];\\n\\t                    var x1 = Math.cos(theta) * rx + cx;\\n\\t                    var y1 = Math.sin(theta) * ry + cy;\\n\\t                    // 不是直接使用 arc 命令\\n\\t                    if (i > 1) {\\n\\t                        w += windingLine(xi, yi, x1, y1, x, y);\\n\\t                    }\\n\\t                    else {\\n\\t                        // 第一个命令起点还未定义\\n\\t                        x0 = x1;\\n\\t                        y0 = y1;\\n\\t                    }\\n\\t                    // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\\n\\t                    var _x = (x - cx) * ry / rx + cx;\\n\\t                    if (isStroke) {\\n\\t                        if (arc.containStroke(\\n\\t                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\\n\\t                            lineWidth, _x, y\\n\\t                        )) {\\n\\t                            return true;\\n\\t                        }\\n\\t                    }\\n\\t                    else {\\n\\t                        w += windingArc(\\n\\t                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\\n\\t                            _x, y\\n\\t                        );\\n\\t                    }\\n\\t                    xi = Math.cos(theta + dTheta) * rx + cx;\\n\\t                    yi = Math.sin(theta + dTheta) * ry + cy;\\n\\t                    break;\\n\\t                case CMD.R:\\n\\t                    x0 = xi = data[i++];\\n\\t                    y0 = yi = data[i++];\\n\\t                    var width = data[i++];\\n\\t                    var height = data[i++];\\n\\t                    var x1 = x0 + width;\\n\\t                    var y1 = y0 + height;\\n\\t                    if (isStroke) {\\n\\t                        if (containStroke(x0, y0, x1, y0, lineWidth, x, y)\\n\\t                          || containStroke(x1, y0, x1, y1, lineWidth, x, y)\\n\\t                          || containStroke(x1, y1, x0, y1, lineWidth, x, y)\\n\\t                          || containStroke(x0, y1, x0, y0, lineWidth, x, y)\\n\\t                        ) {\\n\\t                            return true;\\n\\t                        }\\n\\t                    }\\n\\t                    else {\\n\\t                        // FIXME Clockwise ?\\n\\t                        w += windingLine(x1, y0, x1, y1, x, y);\\n\\t                        w += windingLine(x0, y1, x0, y0, x, y);\\n\\t                    }\\n\\t                    break;\\n\\t                case CMD.Z:\\n\\t                    if (isStroke) {\\n\\t                        if (containStroke(\\n\\t                            xi, yi, x0, y0, lineWidth, x, y\\n\\t                        )) {\\n\\t                            return true;\\n\\t                        }\\n\\t                    }\\n\\t                    else {\\n\\t                        // Close a subpath\\n\\t                        w += windingLine(xi, yi, x0, y0, x, y);\\n\\t                        // 如果被任何一个 subpath 包含\\n\\t                        // FIXME subpaths may overlap\\n\\t                        // if (w !== 0) {\\n\\t                        //     return true;\\n\\t                        // }\\n\\t                    }\\n\\t                    xi = x0;\\n\\t                    yi = y0;\\n\\t                    break;\\n\\t            }\\n\\t        }\\n\\t        if (!isStroke && !isAroundEqual(yi, y0)) {\\n\\t            w += windingLine(xi, yi, x0, y0, x, y) || 0;\\n\\t        }\\n\\t        return w !== 0;\\n\\t    }\\n\\n\\t    module.exports = {\\n\\t        contain: function (pathData, x, y) {\\n\\t            return containPath(pathData, 0, false, x, y);\\n\\t        },\\n\\n\\t        containStroke: function (pathData, lineWidth, x, y) {\\n\\t            return containPath(pathData, lineWidth, true, x, y);\\n\\t        }\\n\\t    };\\n\\n\\n/***/ },\\n/* 40 */\\n/***/ function(module, exports) {\\n\\n\\t\\n\\t    module.exports = {\\n\\t        /**\\n\\t         * 线段包含判断\\n\\t         * @param  {number}  x0\\n\\t         * @param  {number}  y0\\n\\t         * @param  {number}  x1\\n\\t         * @param  {number}  y1\\n\\t         * @param  {number}  lineWidth\\n\\t         * @param  {number}  x\\n\\t         * @param  {number}  y\\n\\t         * @return {boolean}\\n\\t         */\\n\\t        containStroke: function (x0, y0, x1, y1, lineWidth, x, y) {\\n\\t            if (lineWidth === 0) {\\n\\t                return false;\\n\\t            }\\n\\t            var _l = lineWidth;\\n\\t            var _a = 0;\\n\\t            var _b = x0;\\n\\t            // Quick reject\\n\\t            if (\\n\\t                (y > y0 + _l && y > y1 + _l)\\n\\t                || (y < y0 - _l && y < y1 - _l)\\n\\t                || (x > x0 + _l && x > x1 + _l)\\n\\t                || (x < x0 - _l && x < x1 - _l)\\n\\t            ) {\\n\\t                return false;\\n\\t            }\\n\\n\\t            if (x0 !== x1) {\\n\\t                _a = (y0 - y1) / (x0 - x1);\\n\\t                _b = (x0 * y1 - x1 * y0) / (x0 - x1) ;\\n\\t            }\\n\\t            else {\\n\\t                return Math.abs(x - x0) <= _l / 2;\\n\\t            }\\n\\t            var tmp = _a * x - y + _b;\\n\\t            var _s = tmp * tmp / (_a * _a + 1);\\n\\t            return _s <= _l / 2 * _l / 2;\\n\\t        }\\n\\t    };\\n\\n\\n/***/ },\\n/* 41 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var curve = __webpack_require__(37);\\n\\n\\t    module.exports = {\\n\\t        /**\\n\\t         * 三次贝塞尔曲线描边包含判断\\n\\t         * @param  {number}  x0\\n\\t         * @param  {number}  y0\\n\\t         * @param  {number}  x1\\n\\t         * @param  {number}  y1\\n\\t         * @param  {number}  x2\\n\\t         * @param  {number}  y2\\n\\t         * @param  {number}  x3\\n\\t         * @param  {number}  y3\\n\\t         * @param  {number}  lineWidth\\n\\t         * @param  {number}  x\\n\\t         * @param  {number}  y\\n\\t         * @return {boolean}\\n\\t         */\\n\\t        containStroke: function(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\\n\\t            if (lineWidth === 0) {\\n\\t                return false;\\n\\t            }\\n\\t            var _l = lineWidth;\\n\\t            // Quick reject\\n\\t            if (\\n\\t                (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l)\\n\\t                || (y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l)\\n\\t                || (x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l)\\n\\t                || (x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l)\\n\\t            ) {\\n\\t                return false;\\n\\t            }\\n\\t            var d = curve.cubicProjectPoint(\\n\\t                x0, y0, x1, y1, x2, y2, x3, y3,\\n\\t                x, y, null\\n\\t            );\\n\\t            return d <= _l / 2;\\n\\t        }\\n\\t    };\\n\\n\\n/***/ },\\n/* 42 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var curve = __webpack_require__(37);\\n\\n\\t    module.exports = {\\n\\t        /**\\n\\t         * 二次贝塞尔曲线描边包含判断\\n\\t         * @param  {number}  x0\\n\\t         * @param  {number}  y0\\n\\t         * @param  {number}  x1\\n\\t         * @param  {number}  y1\\n\\t         * @param  {number}  x2\\n\\t         * @param  {number}  y2\\n\\t         * @param  {number}  lineWidth\\n\\t         * @param  {number}  x\\n\\t         * @param  {number}  y\\n\\t         * @return {boolean}\\n\\t         */\\n\\t        containStroke: function (x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\\n\\t            if (lineWidth === 0) {\\n\\t                return false;\\n\\t            }\\n\\t            var _l = lineWidth;\\n\\t            // Quick reject\\n\\t            if (\\n\\t                (y > y0 + _l && y > y1 + _l && y > y2 + _l)\\n\\t                || (y < y0 - _l && y < y1 - _l && y < y2 - _l)\\n\\t                || (x > x0 + _l && x > x1 + _l && x > x2 + _l)\\n\\t                || (x < x0 - _l && x < x1 - _l && x < x2 - _l)\\n\\t            ) {\\n\\t                return false;\\n\\t            }\\n\\t            var d = curve.quadraticProjectPoint(\\n\\t                x0, y0, x1, y1, x2, y2,\\n\\t                x, y, null\\n\\t            );\\n\\t            return d <= _l / 2;\\n\\t        }\\n\\t    };\\n\\n\\n/***/ },\\n/* 43 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var normalizeRadian = __webpack_require__(44).normalizeRadian;\\n\\t    var PI2 = Math.PI * 2;\\n\\n\\t    module.exports = {\\n\\t        /**\\n\\t         * 圆弧描边包含判断\\n\\t         * @param  {number}  cx\\n\\t         * @param  {number}  cy\\n\\t         * @param  {number}  r\\n\\t         * @param  {number}  startAngle\\n\\t         * @param  {number}  endAngle\\n\\t         * @param  {boolean}  anticlockwise\\n\\t         * @param  {number} lineWidth\\n\\t         * @param  {number}  x\\n\\t         * @param  {number}  y\\n\\t         * @return {Boolean}\\n\\t         */\\n\\t        containStroke: function (\\n\\t            cx, cy, r, startAngle, endAngle, anticlockwise,\\n\\t            lineWidth, x, y\\n\\t        ) {\\n\\n\\t            if (lineWidth === 0) {\\n\\t                return false;\\n\\t            }\\n\\t            var _l = lineWidth;\\n\\n\\t            x -= cx;\\n\\t            y -= cy;\\n\\t            var d = Math.sqrt(x * x + y * y);\\n\\n\\t            if ((d - _l > r) || (d + _l < r)) {\\n\\t                return false;\\n\\t            }\\n\\t            if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\\n\\t                // Is a circle\\n\\t                return true;\\n\\t            }\\n\\t            if (anticlockwise) {\\n\\t                var tmp = startAngle;\\n\\t                startAngle = normalizeRadian(endAngle);\\n\\t                endAngle = normalizeRadian(tmp);\\n\\t            } else {\\n\\t                startAngle = normalizeRadian(startAngle);\\n\\t                endAngle = normalizeRadian(endAngle);\\n\\t            }\\n\\t            if (startAngle > endAngle) {\\n\\t                endAngle += PI2;\\n\\t            }\\n\\n\\t            var angle = Math.atan2(y, x);\\n\\t            if (angle < 0) {\\n\\t                angle += PI2;\\n\\t            }\\n\\t            return (angle >= startAngle && angle <= endAngle)\\n\\t                || (angle + PI2 >= startAngle && angle + PI2 <= endAngle);\\n\\t        }\\n\\t    };\\n\\n\\n/***/ },\\n/* 44 */\\n/***/ function(module, exports) {\\n\\n\\t\\n\\n\\t    var PI2 = Math.PI * 2;\\n\\t    module.exports = {\\n\\t        normalizeRadian: function(angle) {\\n\\t            angle %= PI2;\\n\\t            if (angle < 0) {\\n\\t                angle += PI2;\\n\\t            }\\n\\t            return angle;\\n\\t        }\\n\\t    };\\n\\n\\n/***/ },\\n/* 45 */\\n/***/ function(module, exports) {\\n\\n\\t\\n\\t    module.exports = function windingLine(x0, y0, x1, y1, x, y) {\\n\\t        if ((y > y0 && y > y1) || (y < y0 && y < y1)) {\\n\\t            return 0;\\n\\t        }\\n\\t        // Ignore horizontal line\\n\\t        if (y1 === y0) {\\n\\t            return 0;\\n\\t        }\\n\\t        var dir = y1 < y0 ? 1 : -1;\\n\\t        var t = (y - y0) / (y1 - y0);\\n\\n\\t        // Avoid winding error when intersection point is the connect point of two line of polygon\\n\\t        if (t === 1 || t === 0) {\\n\\t            dir = y1 < y0 ? 0.5 : -0.5;\\n\\t        }\\n\\n\\t        var x_ = t * (x1 - x0) + x0;\\n\\n\\t        return x_ > x ? dir : 0;\\n\\t    };\\n\\n\\n/***/ },\\n/* 46 */\\n/***/ function(module, exports) {\\n\\n\\t\\n\\n\\t    var Pattern = function (image, repeat) {\\n\\t        // Should do nothing more in this constructor. Because gradient can be\\n\\t        // declard by `color: {image: ...}`, where this constructor will not be called.\\n\\n\\t        this.image = image;\\n\\t        this.repeat = repeat;\\n\\n\\t        // Can be cloned\\n\\t        this.type = 'pattern';\\n\\t    };\\n\\n\\t    Pattern.prototype.getCanvasPattern = function (ctx) {\\n\\t        return ctx.createPattern(this.image, this.repeat || 'repeat');\\n\\t    };\\n\\n\\t    module.exports = Pattern;\\n\\n\\n/***/ },\\n/* 47 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var CMD = __webpack_require__(36).CMD;\\n\\t    var vec2 = __webpack_require__(10);\\n\\t    var v2ApplyTransform = vec2.applyTransform;\\n\\n\\t    var points = [[], [], []];\\n\\t    var mathSqrt = Math.sqrt;\\n\\t    var mathAtan2 = Math.atan2;\\n\\t    function transformPath(path, m) {\\n\\t        var data = path.data;\\n\\t        var cmd;\\n\\t        var nPoint;\\n\\t        var i;\\n\\t        var j;\\n\\t        var k;\\n\\t        var p;\\n\\n\\t        var M = CMD.M;\\n\\t        var C = CMD.C;\\n\\t        var L = CMD.L;\\n\\t        var R = CMD.R;\\n\\t        var A = CMD.A;\\n\\t        var Q = CMD.Q;\\n\\n\\t        for (i = 0, j = 0; i < data.length;) {\\n\\t            cmd = data[i++];\\n\\t            j = i;\\n\\t            nPoint = 0;\\n\\n\\t            switch (cmd) {\\n\\t                case M:\\n\\t                    nPoint = 1;\\n\\t                    break;\\n\\t                case L:\\n\\t                    nPoint = 1;\\n\\t                    break;\\n\\t                case C:\\n\\t                    nPoint = 3;\\n\\t                    break;\\n\\t                case Q:\\n\\t                    nPoint = 2;\\n\\t                    break;\\n\\t                case A:\\n\\t                    var x = m[4];\\n\\t                    var y = m[5];\\n\\t                    var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\\n\\t                    var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\\n\\t                    var angle = mathAtan2(-m[1] / sy, m[0] / sx);\\n\\t                    // cx\\n\\t                    data[i] *= sx;\\n\\t                    data[i++] += x;\\n\\t                    // cy\\n\\t                    data[i] *= sy;\\n\\t                    data[i++] += y;\\n\\t                    // Scale rx and ry\\n\\t                    // FIXME Assume psi is 0 here\\n\\t                    data[i++] *= sx;\\n\\t                    data[i++] *= sy;\\n\\n\\t                    // Start angle\\n\\t                    data[i++] += angle;\\n\\t                    // end angle\\n\\t                    data[i++] += angle;\\n\\t                    // FIXME psi\\n\\t                    i += 2;\\n\\t                    j = i;\\n\\t                    break;\\n\\t                case R:\\n\\t                    // x0, y0\\n\\t                    p[0] = data[i++];\\n\\t                    p[1] = data[i++];\\n\\t                    v2ApplyTransform(p, p, m);\\n\\t                    data[j++] = p[0];\\n\\t                    data[j++] = p[1];\\n\\t                    // x1, y1\\n\\t                    p[0] += data[i++];\\n\\t                    p[1] += data[i++];\\n\\t                    v2ApplyTransform(p, p, m);\\n\\t                    data[j++] = p[0];\\n\\t                    data[j++] = p[1];\\n\\t            }\\n\\n\\t            for (k = 0; k < nPoint; k++) {\\n\\t                var p = points[k];\\n\\t                p[0] = data[i++];\\n\\t                p[1] = data[i++];\\n\\n\\t                v2ApplyTransform(p, p, m);\\n\\t                // Write back\\n\\t                data[j++] = p[0];\\n\\t                data[j++] = p[1];\\n\\t            }\\n\\t        }\\n\\t    }\\n\\n\\t    module.exports = transformPath;\\n\\n\\n/***/ },\\n/* 48 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\\n\\t * @module zrender/graphic/Group\\n\\t * @example\\n\\t *     var Group = require('zrender/lib/container/Group');\\n\\t *     var Circle = require('zrender/lib/graphic/shape/Circle');\\n\\t *     var g = new Group();\\n\\t *     g.position[0] = 100;\\n\\t *     g.position[1] = 100;\\n\\t *     g.add(new Circle({\\n\\t *         style: {\\n\\t *             x: 100,\\n\\t *             y: 100,\\n\\t *             r: 20,\\n\\t *         }\\n\\t *     }));\\n\\t *     zr.add(g);\\n\\t */\\n\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var Element = __webpack_require__(23);\\n\\t    var BoundingRect = __webpack_require__(9);\\n\\n\\t    /**\\n\\t     * @alias module:zrender/graphic/Group\\n\\t     * @constructor\\n\\t     * @extends module:zrender/mixin/Transformable\\n\\t     * @extends module:zrender/mixin/Eventful\\n\\t     */\\n\\t    var Group = function (opts) {\\n\\n\\t        opts = opts || {};\\n\\n\\t        Element.call(this, opts);\\n\\n\\t        for (var key in opts) {\\n\\t            if (opts.hasOwnProperty(key)) {\\n\\t                this[key] = opts[key];\\n\\t            }\\n\\t        }\\n\\n\\t        this._children = [];\\n\\n\\t        this.__storage = null;\\n\\n\\t        this.__dirty = true;\\n\\t    };\\n\\n\\t    Group.prototype = {\\n\\n\\t        constructor: Group,\\n\\n\\t        isGroup: true,\\n\\n\\t        /**\\n\\t         * @type {string}\\n\\t         */\\n\\t        type: 'group',\\n\\n\\t        /**\\n\\t         * 所有子孙元素是否响应鼠标事件\\n\\t         * @name module:/zrender/container/Group#silent\\n\\t         * @type {boolean}\\n\\t         * @default false\\n\\t         */\\n\\t        silent: false,\\n\\n\\t        /**\\n\\t         * @return {Array.<module:zrender/Element>}\\n\\t         */\\n\\t        children: function () {\\n\\t            return this._children.slice();\\n\\t        },\\n\\n\\t        /**\\n\\t         * 获取指定 index 的儿子节点\\n\\t         * @param  {number} idx\\n\\t         * @return {module:zrender/Element}\\n\\t         */\\n\\t        childAt: function (idx) {\\n\\t            return this._children[idx];\\n\\t        },\\n\\n\\t        /**\\n\\t         * 获取指定名字的儿子节点\\n\\t         * @param  {string} name\\n\\t         * @return {module:zrender/Element}\\n\\t         */\\n\\t        childOfName: function (name) {\\n\\t            var children = this._children;\\n\\t            for (var i = 0; i < children.length; i++) {\\n\\t                if (children[i].name === name) {\\n\\t                    return children[i];\\n\\t                }\\n\\t             }\\n\\t        },\\n\\n\\t        /**\\n\\t         * @return {number}\\n\\t         */\\n\\t        childCount: function () {\\n\\t            return this._children.length;\\n\\t        },\\n\\n\\t        /**\\n\\t         * 添加子节点到最后\\n\\t         * @param {module:zrender/Element} child\\n\\t         */\\n\\t        add: function (child) {\\n\\t            if (child && child !== this && child.parent !== this) {\\n\\n\\t                this._children.push(child);\\n\\n\\t                this._doAdd(child);\\n\\t            }\\n\\n\\t            return this;\\n\\t        },\\n\\n\\t        /**\\n\\t         * 添加子节点在 nextSibling 之前\\n\\t         * @param {module:zrender/Element} child\\n\\t         * @param {module:zrender/Element} nextSibling\\n\\t         */\\n\\t        addBefore: function (child, nextSibling) {\\n\\t            if (child && child !== this && child.parent !== this\\n\\t                && nextSibling && nextSibling.parent === this) {\\n\\n\\t                var children = this._children;\\n\\t                var idx = children.indexOf(nextSibling);\\n\\n\\t                if (idx >= 0) {\\n\\t                    children.splice(idx, 0, child);\\n\\t                    this._doAdd(child);\\n\\t                }\\n\\t            }\\n\\n\\t            return this;\\n\\t        },\\n\\n\\t        _doAdd: function (child) {\\n\\t            if (child.parent) {\\n\\t                child.parent.remove(child);\\n\\t            }\\n\\n\\t            child.parent = this;\\n\\n\\t            var storage = this.__storage;\\n\\t            var zr = this.__zr;\\n\\t            if (storage && storage !== child.__storage) {\\n\\n\\t                storage.addToStorage(child);\\n\\n\\t                if (child instanceof Group) {\\n\\t                    child.addChildrenToStorage(storage);\\n\\t                }\\n\\t            }\\n\\n\\t            zr && zr.refresh();\\n\\t        },\\n\\n\\t        /**\\n\\t         * 移除子节点\\n\\t         * @param {module:zrender/Element} child\\n\\t         */\\n\\t        remove: function (child) {\\n\\t            var zr = this.__zr;\\n\\t            var storage = this.__storage;\\n\\t            var children = this._children;\\n\\n\\t            var idx = zrUtil.indexOf(children, child);\\n\\t            if (idx < 0) {\\n\\t                return this;\\n\\t            }\\n\\t            children.splice(idx, 1);\\n\\n\\t            child.parent = null;\\n\\n\\t            if (storage) {\\n\\n\\t                storage.delFromStorage(child);\\n\\n\\t                if (child instanceof Group) {\\n\\t                    child.delChildrenFromStorage(storage);\\n\\t                }\\n\\t            }\\n\\n\\t            zr && zr.refresh();\\n\\n\\t            return this;\\n\\t        },\\n\\n\\t        /**\\n\\t         * 移除所有子节点\\n\\t         */\\n\\t        removeAll: function () {\\n\\t            var children = this._children;\\n\\t            var storage = this.__storage;\\n\\t            var child;\\n\\t            var i;\\n\\t            for (i = 0; i < children.length; i++) {\\n\\t                child = children[i];\\n\\t                if (storage) {\\n\\t                    storage.delFromStorage(child);\\n\\t                    if (child instanceof Group) {\\n\\t                        child.delChildrenFromStorage(storage);\\n\\t                    }\\n\\t                }\\n\\t                child.parent = null;\\n\\t            }\\n\\t            children.length = 0;\\n\\n\\t            return this;\\n\\t        },\\n\\n\\t        /**\\n\\t         * 遍历所有子节点\\n\\t         * @param  {Function} cb\\n\\t         * @param  {}   context\\n\\t         */\\n\\t        eachChild: function (cb, context) {\\n\\t            var children = this._children;\\n\\t            for (var i = 0; i < children.length; i++) {\\n\\t                var child = children[i];\\n\\t                cb.call(context, child, i);\\n\\t            }\\n\\t            return this;\\n\\t        },\\n\\n\\t        /**\\n\\t         * 深度优先遍历所有子孙节点\\n\\t         * @param  {Function} cb\\n\\t         * @param  {}   context\\n\\t         */\\n\\t        traverse: function (cb, context) {\\n\\t            for (var i = 0; i < this._children.length; i++) {\\n\\t                var child = this._children[i];\\n\\t                cb.call(context, child);\\n\\n\\t                if (child.type === 'group') {\\n\\t                    child.traverse(cb, context);\\n\\t                }\\n\\t            }\\n\\t            return this;\\n\\t        },\\n\\n\\t        addChildrenToStorage: function (storage) {\\n\\t            for (var i = 0; i < this._children.length; i++) {\\n\\t                var child = this._children[i];\\n\\t                storage.addToStorage(child);\\n\\t                if (child instanceof Group) {\\n\\t                    child.addChildrenToStorage(storage);\\n\\t                }\\n\\t            }\\n\\t        },\\n\\n\\t        delChildrenFromStorage: function (storage) {\\n\\t            for (var i = 0; i < this._children.length; i++) {\\n\\t                var child = this._children[i];\\n\\t                storage.delFromStorage(child);\\n\\t                if (child instanceof Group) {\\n\\t                    child.delChildrenFromStorage(storage);\\n\\t                }\\n\\t            }\\n\\t        },\\n\\n\\t        dirty: function () {\\n\\t            this.__dirty = true;\\n\\t            this.__zr && this.__zr.refresh();\\n\\t            return this;\\n\\t        },\\n\\n\\t        /**\\n\\t         * @return {module:zrender/core/BoundingRect}\\n\\t         */\\n\\t        getBoundingRect: function (includeChildren) {\\n\\t            // TODO Caching\\n\\t            var rect = null;\\n\\t            var tmpRect = new BoundingRect(0, 0, 0, 0);\\n\\t            var children = includeChildren || this._children;\\n\\t            var tmpMat = [];\\n\\n\\t            for (var i = 0; i < children.length; i++) {\\n\\t                var child = children[i];\\n\\t                if (child.ignore || child.invisible) {\\n\\t                    continue;\\n\\t                }\\n\\n\\t                var childRect = child.getBoundingRect();\\n\\t                var transform = child.getLocalTransform(tmpMat);\\n\\t                // TODO\\n\\t                // The boundingRect cacluated by transforming original\\n\\t                // rect may be bigger than the actual bundingRect when rotation\\n\\t                // is used. (Consider a circle rotated aginst its center, where\\n\\t                // the actual boundingRect should be the same as that not be\\n\\t                // rotated.) But we can not find better approach to calculate\\n\\t                // actual boundingRect yet, considering performance.\\n\\t                if (transform) {\\n\\t                    tmpRect.copy(childRect);\\n\\t                    tmpRect.applyTransform(transform);\\n\\t                    rect = rect || tmpRect.clone();\\n\\t                    rect.union(tmpRect);\\n\\t                }\\n\\t                else {\\n\\t                    rect = rect || childRect.clone();\\n\\t                    rect.union(childRect);\\n\\t                }\\n\\t            }\\n\\t            return rect || tmpRect;\\n\\t        }\\n\\t    };\\n\\n\\t    zrUtil.inherits(Group, Element);\\n\\n\\t    module.exports = Group;\\n\\n\\n/***/ },\\n/* 49 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * Image element\\n\\t * @module zrender/graphic/Image\\n\\t */\\n\\n\\n\\n\\t    var Displayable = __webpack_require__(21);\\n\\t    var BoundingRect = __webpack_require__(9);\\n\\t    var zrUtil = __webpack_require__(4);\\n\\n\\t    var LRU = __webpack_require__(32);\\n\\t    var globalImageCache = new LRU(50);\\n\\t    /**\\n\\t     * @alias zrender/graphic/Image\\n\\t     * @extends module:zrender/graphic/Displayable\\n\\t     * @constructor\\n\\t     * @param {Object} opts\\n\\t     */\\n\\t    function ZImage(opts) {\\n\\t        Displayable.call(this, opts);\\n\\t    }\\n\\n\\t    ZImage.prototype = {\\n\\n\\t        constructor: ZImage,\\n\\n\\t        type: 'image',\\n\\n\\t        brush: function (ctx, prevEl) {\\n\\t            var style = this.style;\\n\\t            var src = style.image;\\n\\t            var image;\\n\\n\\t            // Must bind each time\\n\\t            style.bind(ctx, this, prevEl);\\n\\t            // style.image is a url string\\n\\t            if (typeof src === 'string') {\\n\\t                image = this._image;\\n\\t            }\\n\\t            // style.image is an HTMLImageElement or HTMLCanvasElement or Canvas\\n\\t            else {\\n\\t                image = src;\\n\\t            }\\n\\t            // FIXME Case create many images with src\\n\\t            if (!image && src) {\\n\\t                // Try get from global image cache\\n\\t                var cachedImgObj = globalImageCache.get(src);\\n\\t                if (!cachedImgObj) {\\n\\t                    // Create a new image\\n\\t                    image = new Image();\\n\\t                    image.onload = function () {\\n\\t                        image.onload = null;\\n\\t                        for (var i = 0; i < cachedImgObj.pending.length; i++) {\\n\\t                            cachedImgObj.pending[i].dirty();\\n\\t                        }\\n\\t                    };\\n\\t                    cachedImgObj = {\\n\\t                        image: image,\\n\\t                        pending: [this]\\n\\t                    };\\n\\t                    image.src = src;\\n\\t                    globalImageCache.put(src, cachedImgObj);\\n\\t                    this._image = image;\\n\\t                    return;\\n\\t                }\\n\\t                else {\\n\\t                    image = cachedImgObj.image;\\n\\t                    this._image = image;\\n\\t                    // Image is not complete finish, add to pending list\\n\\t                    if (!image.width || !image.height) {\\n\\t                        cachedImgObj.pending.push(this);\\n\\t                        return;\\n\\t                    }\\n\\t                }\\n\\t            }\\n\\n\\t            if (image) {\\n\\t                // 图片已经加载完成\\n\\t                // if (image.nodeName.toUpperCase() == 'IMG') {\\n\\t                //     if (!image.complete) {\\n\\t                //         return;\\n\\t                //     }\\n\\t                // }\\n\\t                // Else is canvas\\n\\n\\t                var x = style.x || 0;\\n\\t                var y = style.y || 0;\\n\\t                // 图片加载失败\\n\\t                if (!image.width || !image.height) {\\n\\t                    return;\\n\\t                }\\n\\t                var width = style.width;\\n\\t                var height = style.height;\\n\\t                var aspect = image.width / image.height;\\n\\t                if (width == null && height != null) {\\n\\t                    // Keep image/height ratio\\n\\t                    width = height * aspect;\\n\\t                }\\n\\t                else if (height == null && width != null) {\\n\\t                    height = width / aspect;\\n\\t                }\\n\\t                else if (width == null && height == null) {\\n\\t                    width = image.width;\\n\\t                    height = image.height;\\n\\t                }\\n\\n\\t                // 设置transform\\n\\t                this.setTransform(ctx);\\n\\n\\t                if (style.sWidth && style.sHeight) {\\n\\t                    var sx = style.sx || 0;\\n\\t                    var sy = style.sy || 0;\\n\\t                    ctx.drawImage(\\n\\t                        image,\\n\\t                        sx, sy, style.sWidth, style.sHeight,\\n\\t                        x, y, width, height\\n\\t                    );\\n\\t                }\\n\\t                else if (style.sx && style.sy) {\\n\\t                    var sx = style.sx;\\n\\t                    var sy = style.sy;\\n\\t                    var sWidth = width - sx;\\n\\t                    var sHeight = height - sy;\\n\\t                    ctx.drawImage(\\n\\t                        image,\\n\\t                        sx, sy, sWidth, sHeight,\\n\\t                        x, y, width, height\\n\\t                    );\\n\\t                }\\n\\t                else {\\n\\t                    ctx.drawImage(image, x, y, width, height);\\n\\t                }\\n\\n\\t                this.restoreTransform(ctx);\\n\\n\\t                // Draw rect text\\n\\t                if (style.text != null) {\\n\\t                    this.drawRectText(ctx, this.getBoundingRect());\\n\\t                }\\n\\n\\t            }\\n\\t        },\\n\\n\\t        getBoundingRect: function () {\\n\\t            var style = this.style;\\n\\t            if (! this._rect) {\\n\\t                this._rect = new BoundingRect(\\n\\t                    style.x || 0, style.y || 0, style.width || 0, style.height || 0\\n\\t                );\\n\\t            }\\n\\t            return this._rect;\\n\\t        }\\n\\t    };\\n\\n\\t    zrUtil.inherits(ZImage, Displayable);\\n\\n\\t    module.exports = ZImage;\\n\\n\\n/***/ },\\n/* 50 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * Text element\\n\\t * @module zrender/graphic/Text\\n\\t *\\n\\t * TODO Wrapping\\n\\t *\\n\\t * Text not support gradient\\n\\t */\\n\\n\\n\\n\\t    var Displayable = __webpack_require__(21);\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var textContain = __webpack_require__(8);\\n\\n\\t    /**\\n\\t     * @alias zrender/graphic/Text\\n\\t     * @extends module:zrender/graphic/Displayable\\n\\t     * @constructor\\n\\t     * @param {Object} opts\\n\\t     */\\n\\t    var Text = function (opts) {\\n\\t        Displayable.call(this, opts);\\n\\t    };\\n\\n\\t    Text.prototype = {\\n\\n\\t        constructor: Text,\\n\\n\\t        type: 'text',\\n\\n\\t        brush: function (ctx, prevEl) {\\n\\t            var style = this.style;\\n\\t            var x = style.x || 0;\\n\\t            var y = style.y || 0;\\n\\t            // Convert to string\\n\\t            var text = style.text;\\n\\n\\t            // Convert to string\\n\\t            text != null && (text += '');\\n\\n\\t            // Always bind style\\n\\t            style.bind(ctx, this, prevEl);\\n\\n\\t            if (text) {\\n\\n\\t                this.setTransform(ctx);\\n\\n\\t                var textBaseline;\\n\\t                var textAlign = style.textAlign;\\n\\t                var font = style.textFont || style.font;\\n\\t                if (style.textVerticalAlign) {\\n\\t                    var rect = textContain.getBoundingRect(\\n\\t                        text, font, style.textAlign, 'top'\\n\\t                    );\\n\\t                    // Ignore textBaseline\\n\\t                    textBaseline = 'middle';\\n\\t                    switch (style.textVerticalAlign) {\\n\\t                        case 'middle':\\n\\t                            y -= rect.height / 2 - rect.lineHeight / 2;\\n\\t                            break;\\n\\t                        case 'bottom':\\n\\t                            y -= rect.height - rect.lineHeight / 2;\\n\\t                            break;\\n\\t                        default:\\n\\t                            y += rect.lineHeight / 2;\\n\\t                    }\\n\\t                }\\n\\t                else {\\n\\t                    textBaseline = style.textBaseline;\\n\\t                }\\n\\n\\t                // TODO Invalid font\\n\\t                ctx.font = font || '12px sans-serif';\\n\\t                ctx.textAlign = textAlign || 'left';\\n\\t                // Use canvas default left textAlign. Giving invalid value will cause state not change\\n\\t                if (ctx.textAlign !== textAlign) {\\n\\t                    ctx.textAlign = 'left';\\n\\t                }\\n\\t                // FIXME in text contain default is top\\n\\t                ctx.textBaseline = textBaseline || 'alphabetic';\\n\\t                // Use canvas default alphabetic baseline\\n\\t                if (ctx.textBaseline !== textBaseline) {\\n\\t                    ctx.textBaseline = 'alphabetic';\\n\\t                }\\n\\n\\t                var lineHeight = textContain.measureText('国', ctx.font).width;\\n\\n\\t                var textLines = text.split('\\\\n');\\n\\t                for (var i = 0; i < textLines.length; i++) {\\n\\t                    // Fill after stroke so the outline will not cover the main part.\\n\\t                    style.hasStroke() && ctx.strokeText(textLines[i], x, y);\\n\\t                    style.hasFill() && ctx.fillText(textLines[i], x, y);\\n\\t                    y += lineHeight;\\n\\t                }\\n\\n\\t                this.restoreTransform(ctx);\\n\\t            }\\n\\t        },\\n\\n\\t        getBoundingRect: function () {\\n\\t            var style = this.style;\\n\\t            if (!this._rect) {\\n\\t                var textVerticalAlign = style.textVerticalAlign;\\n\\t                var rect = textContain.getBoundingRect(\\n\\t                    style.text + '', style.textFont || style.font, style.textAlign,\\n\\t                    textVerticalAlign ? 'top' : style.textBaseline\\n\\t                );\\n\\t                switch (textVerticalAlign) {\\n\\t                    case 'middle':\\n\\t                        rect.y -= rect.height / 2;\\n\\t                        break;\\n\\t                    case 'bottom':\\n\\t                        rect.y -= rect.height;\\n\\t                        break;\\n\\t                }\\n\\t                rect.x += style.x || 0;\\n\\t                rect.y += style.y || 0;\\n\\t                if (style.hasStroke()) {\\n\\t                    var w = style.lineWidth;\\n\\t                    rect.x -= w / 2;\\n\\t                    rect.y -= w / 2;\\n\\t                    rect.width += w;\\n\\t                    rect.height += w;\\n\\t                }\\n\\t                this._rect = rect;\\n\\t            }\\n\\n\\t            return this._rect;\\n\\t        }\\n\\t    };\\n\\n\\t    zrUtil.inherits(Text, Displayable);\\n\\n\\t    module.exports = Text;\\n\\n\\n/***/ },\\n/* 51 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t'use strict';\\n\\t/**\\n\\t * 圆形\\n\\t * @module zrender/shape/Circle\\n\\t */\\n\\n\\n\\n\\t    module.exports = __webpack_require__(20).extend({\\n\\n\\t        type: 'circle',\\n\\n\\t        shape: {\\n\\t            cx: 0,\\n\\t            cy: 0,\\n\\t            r: 0\\n\\t        },\\n\\n\\n\\t        buildPath : function (ctx, shape, inBundle) {\\n\\t            // Better stroking in ShapeBundle\\n\\t            // Always do it may have performence issue ( fill may be 2x more cost)\\n\\t            if (inBundle) {\\n\\t                ctx.moveTo(shape.cx + shape.r, shape.cy);\\n\\t            }\\n\\t            // else {\\n\\t            //     if (ctx.allocate && !ctx.data.length) {\\n\\t            //         ctx.allocate(ctx.CMD_MEM_SIZE.A);\\n\\t            //     }\\n\\t            // }\\n\\t            // Better stroking in ShapeBundle\\n\\t            // ctx.moveTo(shape.cx + shape.r, shape.cy);\\n\\t            ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\\n\\t        }\\n\\t    });\\n\\n\\n\\n/***/ },\\n/* 52 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * 扇形\\n\\t * @module zrender/graphic/shape/Sector\\n\\t */\\n\\n\\n\\n\\t    var env = __webpack_require__(2);\\n\\t    var Path = __webpack_require__(20);\\n\\n\\t    var shadowTemp = [\\n\\t        ['shadowBlur', 0],\\n\\t        ['shadowColor', '#000'],\\n\\t        ['shadowOffsetX', 0],\\n\\t        ['shadowOffsetY', 0]\\n\\t    ];\\n\\n\\t    module.exports = Path.extend({\\n\\n\\t        type: 'sector',\\n\\n\\t        shape: {\\n\\n\\t            cx: 0,\\n\\n\\t            cy: 0,\\n\\n\\t            r0: 0,\\n\\n\\t            r: 0,\\n\\n\\t            startAngle: 0,\\n\\n\\t            endAngle: Math.PI * 2,\\n\\n\\t            clockwise: true\\n\\t        },\\n\\n\\t        brush: (env.browser.ie && env.browser.version >= 11) // version: '11.0'\\n\\t            // Fix weird bug in some version of IE11 (like 11.0.9600.17801),\\n\\t            // where exception \\\"unexpected call to method or property access\\\"\\n\\t            // might be thrown when calling ctx.fill after a path whose area size\\n\\t            // is zero is drawn and ctx.clip() is called and shadowBlur is set.\\n\\t            // (e.g.,\\n\\t            //  ctx.moveTo(10, 10);\\n\\t            //  ctx.lineTo(20, 10);\\n\\t            //  ctx.closePath();\\n\\t            //  ctx.clip();\\n\\t            //  ctx.shadowBlur = 10;\\n\\t            //  ...\\n\\t            //  ctx.fill();\\n\\t            // )\\n\\t            ? function () {\\n\\t                var clipPaths = this.__clipPaths;\\n\\t                var style = this.style;\\n\\t                var modified;\\n\\n\\t                if (clipPaths) {\\n\\t                    for (var i = 0; i < clipPaths.length; i++) {\\n\\t                        var shape = clipPaths[i] && clipPaths[i].shape;\\n\\t                        if (shape && shape.startAngle === shape.endAngle) {\\n\\t                            for (var j = 0; j < shadowTemp.length; j++) {\\n\\t                                shadowTemp[j][2] = style[shadowTemp[j][0]];\\n\\t                                style[shadowTemp[j][0]] = shadowTemp[j][1];\\n\\t                            }\\n\\t                            modified = true;\\n\\t                            break;\\n\\t                        }\\n\\t                    }\\n\\t                }\\n\\n\\t                Path.prototype.brush.apply(this, arguments);\\n\\n\\t                if (modified) {\\n\\t                    for (var j = 0; j < shadowTemp.length; j++) {\\n\\t                        style[shadowTemp[j][0]] = shadowTemp[j][2];\\n\\t                    }\\n\\t                }\\n\\t            }\\n\\t            : Path.prototype.brush,\\n\\n\\t        buildPath: function (ctx, shape) {\\n\\n\\t            var x = shape.cx;\\n\\t            var y = shape.cy;\\n\\t            var r0 = Math.max(shape.r0 || 0, 0);\\n\\t            var r = Math.max(shape.r, 0);\\n\\t            var startAngle = shape.startAngle;\\n\\t            var endAngle = shape.endAngle;\\n\\t            var clockwise = shape.clockwise;\\n\\n\\t            var unitX = Math.cos(startAngle);\\n\\t            var unitY = Math.sin(startAngle);\\n\\n\\t            ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\\n\\n\\t            ctx.lineTo(unitX * r + x, unitY * r + y);\\n\\n\\t            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\\n\\n\\t            ctx.lineTo(\\n\\t                Math.cos(endAngle) * r0 + x,\\n\\t                Math.sin(endAngle) * r0 + y\\n\\t            );\\n\\n\\t            if (r0 !== 0) {\\n\\t                ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\\n\\t            }\\n\\n\\t            ctx.closePath();\\n\\t        }\\n\\t    });\\n\\n\\n\\n/***/ },\\n/* 53 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * 圆环\\n\\t * @module zrender/graphic/shape/Ring\\n\\t */\\n\\n\\n\\t    module.exports = __webpack_require__(20).extend({\\n\\n\\t        type: 'ring',\\n\\n\\t        shape: {\\n\\t            cx: 0,\\n\\t            cy: 0,\\n\\t            r: 0,\\n\\t            r0: 0\\n\\t        },\\n\\n\\t        buildPath: function (ctx, shape) {\\n\\t            var x = shape.cx;\\n\\t            var y = shape.cy;\\n\\t            var PI2 = Math.PI * 2;\\n\\t            ctx.moveTo(x + shape.r, y);\\n\\t            ctx.arc(x, y, shape.r, 0, PI2, false);\\n\\t            ctx.moveTo(x + shape.r0, y);\\n\\t            ctx.arc(x, y, shape.r0, 0, PI2, true);\\n\\t        }\\n\\t    });\\n\\n\\n\\n/***/ },\\n/* 54 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * 多边形\\n\\t * @module zrender/shape/Polygon\\n\\t */\\n\\n\\n\\t    var polyHelper = __webpack_require__(55);\\n\\n\\t    module.exports = __webpack_require__(20).extend({\\n\\t        \\n\\t        type: 'polygon',\\n\\n\\t        shape: {\\n\\t            points: null,\\n\\n\\t            smooth: false,\\n\\n\\t            smoothConstraint: null\\n\\t        },\\n\\n\\t        buildPath: function (ctx, shape) {\\n\\t            polyHelper.buildPath(ctx, shape, true);\\n\\t        }\\n\\t    });\\n\\n\\n/***/ },\\n/* 55 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var smoothSpline = __webpack_require__(56);\\n\\t    var smoothBezier = __webpack_require__(57);\\n\\n\\t    module.exports = {\\n\\t        buildPath: function (ctx, shape, closePath) {\\n\\t            var points = shape.points;\\n\\t            var smooth = shape.smooth;\\n\\t            if (points && points.length >= 2) {\\n\\t                if (smooth && smooth !== 'spline') {\\n\\t                    var controlPoints = smoothBezier(\\n\\t                        points, smooth, closePath, shape.smoothConstraint\\n\\t                    );\\n\\n\\t                    ctx.moveTo(points[0][0], points[0][1]);\\n\\t                    var len = points.length;\\n\\t                    for (var i = 0; i < (closePath ? len : len - 1); i++) {\\n\\t                        var cp1 = controlPoints[i * 2];\\n\\t                        var cp2 = controlPoints[i * 2 + 1];\\n\\t                        var p = points[(i + 1) % len];\\n\\t                        ctx.bezierCurveTo(\\n\\t                            cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]\\n\\t                        );\\n\\t                    }\\n\\t                }\\n\\t                else {\\n\\t                    if (smooth === 'spline') {\\n\\t                        points = smoothSpline(points, closePath);\\n\\t                    }\\n\\n\\t                    ctx.moveTo(points[0][0], points[0][1]);\\n\\t                    for (var i = 1, l = points.length; i < l; i++) {\\n\\t                        ctx.lineTo(points[i][0], points[i][1]);\\n\\t                    }\\n\\t                }\\n\\n\\t                closePath && ctx.closePath();\\n\\t            }\\n\\t        }\\n\\t    };\\n\\n\\n/***/ },\\n/* 56 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * Catmull-Rom spline 插值折线\\n\\t * @module zrender/shape/util/smoothSpline\\n\\t * @author pissang (https://www.github.com/pissang)\\n\\t *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\\n\\t *         errorrik (errorrik@gmail.com)\\n\\t */\\n\\n\\t    var vec2 = __webpack_require__(10);\\n\\n\\t    /**\\n\\t     * @inner\\n\\t     */\\n\\t    function interpolate(p0, p1, p2, p3, t, t2, t3) {\\n\\t        var v0 = (p2 - p0) * 0.5;\\n\\t        var v1 = (p3 - p1) * 0.5;\\n\\t        return (2 * (p1 - p2) + v0 + v1) * t3\\n\\t                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\\n\\t                + v0 * t + p1;\\n\\t    }\\n\\n\\t    /**\\n\\t     * @alias module:zrender/shape/util/smoothSpline\\n\\t     * @param {Array} points 线段顶点数组\\n\\t     * @param {boolean} isLoop\\n\\t     * @return {Array}\\n\\t     */\\n\\t    module.exports = function (points, isLoop) {\\n\\t        var len = points.length;\\n\\t        var ret = [];\\n\\n\\t        var distance = 0;\\n\\t        for (var i = 1; i < len; i++) {\\n\\t            distance += vec2.distance(points[i - 1], points[i]);\\n\\t        }\\n\\n\\t        var segs = distance / 2;\\n\\t        segs = segs < len ? len : segs;\\n\\t        for (var i = 0; i < segs; i++) {\\n\\t            var pos = i / (segs - 1) * (isLoop ? len : len - 1);\\n\\t            var idx = Math.floor(pos);\\n\\n\\t            var w = pos - idx;\\n\\n\\t            var p0;\\n\\t            var p1 = points[idx % len];\\n\\t            var p2;\\n\\t            var p3;\\n\\t            if (!isLoop) {\\n\\t                p0 = points[idx === 0 ? idx : idx - 1];\\n\\t                p2 = points[idx > len - 2 ? len - 1 : idx + 1];\\n\\t                p3 = points[idx > len - 3 ? len - 1 : idx + 2];\\n\\t            }\\n\\t            else {\\n\\t                p0 = points[(idx - 1 + len) % len];\\n\\t                p2 = points[(idx + 1) % len];\\n\\t                p3 = points[(idx + 2) % len];\\n\\t            }\\n\\n\\t            var w2 = w * w;\\n\\t            var w3 = w * w2;\\n\\n\\t            ret.push([\\n\\t                interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3),\\n\\t                interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)\\n\\t            ]);\\n\\t        }\\n\\t        return ret;\\n\\t    };\\n\\n\\n\\n/***/ },\\n/* 57 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * 贝塞尔平滑曲线\\n\\t * @module zrender/shape/util/smoothBezier\\n\\t * @author pissang (https://www.github.com/pissang)\\n\\t *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\\n\\t *         errorrik (errorrik@gmail.com)\\n\\t */\\n\\n\\n\\t    var vec2 = __webpack_require__(10);\\n\\t    var v2Min = vec2.min;\\n\\t    var v2Max = vec2.max;\\n\\t    var v2Scale = vec2.scale;\\n\\t    var v2Distance = vec2.distance;\\n\\t    var v2Add = vec2.add;\\n\\n\\t    /**\\n\\t     * 贝塞尔平滑曲线\\n\\t     * @alias module:zrender/shape/util/smoothBezier\\n\\t     * @param {Array} points 线段顶点数组\\n\\t     * @param {number} smooth 平滑等级, 0-1\\n\\t     * @param {boolean} isLoop\\n\\t     * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\\n\\t     *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\\n\\t     *                           整个折线的包围盒做一个并集用来约束控制点。\\n\\t     * @param {Array} 计算出来的控制点数组\\n\\t     */\\n\\t    module.exports = function (points, smooth, isLoop, constraint) {\\n\\t        var cps = [];\\n\\n\\t        var v = [];\\n\\t        var v1 = [];\\n\\t        var v2 = [];\\n\\t        var prevPoint;\\n\\t        var nextPoint;\\n\\n\\t        var min, max;\\n\\t        if (constraint) {\\n\\t            min = [Infinity, Infinity];\\n\\t            max = [-Infinity, -Infinity];\\n\\t            for (var i = 0, len = points.length; i < len; i++) {\\n\\t                v2Min(min, min, points[i]);\\n\\t                v2Max(max, max, points[i]);\\n\\t            }\\n\\t            // 与指定的包围盒做并集\\n\\t            v2Min(min, min, constraint[0]);\\n\\t            v2Max(max, max, constraint[1]);\\n\\t        }\\n\\n\\t        for (var i = 0, len = points.length; i < len; i++) {\\n\\t            var point = points[i];\\n\\n\\t            if (isLoop) {\\n\\t                prevPoint = points[i ? i - 1 : len - 1];\\n\\t                nextPoint = points[(i + 1) % len];\\n\\t            }\\n\\t            else {\\n\\t                if (i === 0 || i === len - 1) {\\n\\t                    cps.push(vec2.clone(points[i]));\\n\\t                    continue;\\n\\t                }\\n\\t                else {\\n\\t                    prevPoint = points[i - 1];\\n\\t                    nextPoint = points[i + 1];\\n\\t                }\\n\\t            }\\n\\n\\t            vec2.sub(v, nextPoint, prevPoint);\\n\\n\\t            // use degree to scale the handle length\\n\\t            v2Scale(v, v, smooth);\\n\\n\\t            var d0 = v2Distance(point, prevPoint);\\n\\t            var d1 = v2Distance(point, nextPoint);\\n\\t            var sum = d0 + d1;\\n\\t            if (sum !== 0) {\\n\\t                d0 /= sum;\\n\\t                d1 /= sum;\\n\\t            }\\n\\n\\t            v2Scale(v1, v, -d0);\\n\\t            v2Scale(v2, v, d1);\\n\\t            var cp0 = v2Add([], point, v1);\\n\\t            var cp1 = v2Add([], point, v2);\\n\\t            if (constraint) {\\n\\t                v2Max(cp0, cp0, min);\\n\\t                v2Min(cp0, cp0, max);\\n\\t                v2Max(cp1, cp1, min);\\n\\t                v2Min(cp1, cp1, max);\\n\\t            }\\n\\t            cps.push(cp0);\\n\\t            cps.push(cp1);\\n\\t        }\\n\\n\\t        if (isLoop) {\\n\\t            cps.push(cps.shift());\\n\\t        }\\n\\n\\t        return cps;\\n\\t    };\\n\\n\\n\\n/***/ },\\n/* 58 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * @module zrender/graphic/shape/Polyline\\n\\t */\\n\\n\\n\\t    var polyHelper = __webpack_require__(55);\\n\\n\\t    module.exports = __webpack_require__(20).extend({\\n\\t        \\n\\t        type: 'polyline',\\n\\n\\t        shape: {\\n\\t            points: null,\\n\\n\\t            smooth: false,\\n\\n\\t            smoothConstraint: null\\n\\t        },\\n\\n\\t        style: {\\n\\t            stroke: '#000',\\n\\n\\t            fill: null\\n\\t        },\\n\\n\\t        buildPath: function (ctx, shape) {\\n\\t            polyHelper.buildPath(ctx, shape, false);\\n\\t        }\\n\\t    });\\n\\n\\n/***/ },\\n/* 59 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * 矩形\\n\\t * @module zrender/graphic/shape/Rect\\n\\t */\\n\\n\\n\\t    var roundRectHelper = __webpack_require__(60);\\n\\n\\t    module.exports = __webpack_require__(20).extend({\\n\\n\\t        type: 'rect',\\n\\n\\t        shape: {\\n\\t            // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\\n\\t            // r缩写为1         相当于 [1, 1, 1, 1]\\n\\t            // r缩写为[1]       相当于 [1, 1, 1, 1]\\n\\t            // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\\n\\t            // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\\n\\t            r: 0,\\n\\n\\t            x: 0,\\n\\t            y: 0,\\n\\t            width: 0,\\n\\t            height: 0\\n\\t        },\\n\\n\\t        buildPath: function (ctx, shape) {\\n\\t            var x = shape.x;\\n\\t            var y = shape.y;\\n\\t            var width = shape.width;\\n\\t            var height = shape.height;\\n\\t            if (!shape.r) {\\n\\t                ctx.rect(x, y, width, height);\\n\\t            }\\n\\t            else {\\n\\t                roundRectHelper.buildPath(ctx, shape);\\n\\t            }\\n\\t            ctx.closePath();\\n\\t            return;\\n\\t        }\\n\\t    });\\n\\n\\n\\n/***/ },\\n/* 60 */\\n/***/ function(module, exports) {\\n\\n\\t\\n\\n\\t    module.exports = {\\n\\t        buildPath: function (ctx, shape) {\\n\\t            var x = shape.x;\\n\\t            var y = shape.y;\\n\\t            var width = shape.width;\\n\\t            var height = shape.height;\\n\\t            var r = shape.r;\\n\\t            var r1;\\n\\t            var r2;\\n\\t            var r3;\\n\\t            var r4;\\n\\n\\t            // Convert width and height to positive for better borderRadius\\n\\t            if (width < 0) {\\n\\t                x = x + width;\\n\\t                width = -width;\\n\\t            }\\n\\t            if (height < 0) {\\n\\t                y = y + height;\\n\\t                height = -height;\\n\\t            }\\n\\n\\t            if (typeof r === 'number') {\\n\\t                r1 = r2 = r3 = r4 = r;\\n\\t            }\\n\\t            else if (r instanceof Array) {\\n\\t                if (r.length === 1) {\\n\\t                    r1 = r2 = r3 = r4 = r[0];\\n\\t                }\\n\\t                else if (r.length === 2) {\\n\\t                    r1 = r3 = r[0];\\n\\t                    r2 = r4 = r[1];\\n\\t                }\\n\\t                else if (r.length === 3) {\\n\\t                    r1 = r[0];\\n\\t                    r2 = r4 = r[1];\\n\\t                    r3 = r[2];\\n\\t                }\\n\\t                else {\\n\\t                    r1 = r[0];\\n\\t                    r2 = r[1];\\n\\t                    r3 = r[2];\\n\\t                    r4 = r[3];\\n\\t                }\\n\\t            }\\n\\t            else {\\n\\t                r1 = r2 = r3 = r4 = 0;\\n\\t            }\\n\\n\\t            var total;\\n\\t            if (r1 + r2 > width) {\\n\\t                total = r1 + r2;\\n\\t                r1 *= width / total;\\n\\t                r2 *= width / total;\\n\\t            }\\n\\t            if (r3 + r4 > width) {\\n\\t                total = r3 + r4;\\n\\t                r3 *= width / total;\\n\\t                r4 *= width / total;\\n\\t            }\\n\\t            if (r2 + r3 > height) {\\n\\t                total = r2 + r3;\\n\\t                r2 *= height / total;\\n\\t                r3 *= height / total;\\n\\t            }\\n\\t            if (r1 + r4 > height) {\\n\\t                total = r1 + r4;\\n\\t                r1 *= height / total;\\n\\t                r4 *= height / total;\\n\\t            }\\n\\t            ctx.moveTo(x + r1, y);\\n\\t            ctx.lineTo(x + width - r2, y);\\n\\t            r2 !== 0 && ctx.quadraticCurveTo(\\n\\t                x + width, y, x + width, y + r2\\n\\t            );\\n\\t            ctx.lineTo(x + width, y + height - r3);\\n\\t            r3 !== 0 && ctx.quadraticCurveTo(\\n\\t                x + width, y + height, x + width - r3, y + height\\n\\t            );\\n\\t            ctx.lineTo(x + r4, y + height);\\n\\t            r4 !== 0 && ctx.quadraticCurveTo(\\n\\t                x, y + height, x, y + height - r4\\n\\t            );\\n\\t            ctx.lineTo(x, y + r1);\\n\\t            r1 !== 0 && ctx.quadraticCurveTo(x, y, x + r1, y);\\n\\t        }\\n\\t    };\\n\\n\\n/***/ },\\n/* 61 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * 直线\\n\\t * @module zrender/graphic/shape/Line\\n\\t */\\n\\n\\t    module.exports = __webpack_require__(20).extend({\\n\\n\\t        type: 'line',\\n\\n\\t        shape: {\\n\\t            // Start point\\n\\t            x1: 0,\\n\\t            y1: 0,\\n\\t            // End point\\n\\t            x2: 0,\\n\\t            y2: 0,\\n\\n\\t            percent: 1\\n\\t        },\\n\\n\\t        style: {\\n\\t            stroke: '#000',\\n\\t            fill: null\\n\\t        },\\n\\n\\t        buildPath: function (ctx, shape) {\\n\\t            var x1 = shape.x1;\\n\\t            var y1 = shape.y1;\\n\\t            var x2 = shape.x2;\\n\\t            var y2 = shape.y2;\\n\\t            var percent = shape.percent;\\n\\n\\t            if (percent === 0) {\\n\\t                return;\\n\\t            }\\n\\n\\t            ctx.moveTo(x1, y1);\\n\\n\\t            if (percent < 1) {\\n\\t                x2 = x1 * (1 - percent) + x2 * percent;\\n\\t                y2 = y1 * (1 - percent) + y2 * percent;\\n\\t            }\\n\\t            ctx.lineTo(x2, y2);\\n\\t        },\\n\\n\\t        /**\\n\\t         * Get point at percent\\n\\t         * @param  {number} percent\\n\\t         * @return {Array.<number>}\\n\\t         */\\n\\t        pointAt: function (p) {\\n\\t            var shape = this.shape;\\n\\t            return [\\n\\t                shape.x1 * (1 - p) + shape.x2 * p,\\n\\t                shape.y1 * (1 - p) + shape.y2 * p\\n\\t            ];\\n\\t        }\\n\\t    });\\n\\n\\n\\n/***/ },\\n/* 62 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t'use strict';\\n\\t/**\\n\\t * 贝塞尔曲线\\n\\t * @module zrender/shape/BezierCurve\\n\\t */\\n\\n\\n\\t    var curveTool = __webpack_require__(37);\\n\\t    var vec2 = __webpack_require__(10);\\n\\t    var quadraticSubdivide = curveTool.quadraticSubdivide;\\n\\t    var cubicSubdivide = curveTool.cubicSubdivide;\\n\\t    var quadraticAt = curveTool.quadraticAt;\\n\\t    var cubicAt = curveTool.cubicAt;\\n\\t    var quadraticDerivativeAt = curveTool.quadraticDerivativeAt;\\n\\t    var cubicDerivativeAt = curveTool.cubicDerivativeAt;\\n\\n\\t    var out = [];\\n\\n\\t    function someVectorAt(shape, t, isTangent) {\\n\\t        var cpx2 = shape.cpx2;\\n\\t        var cpy2 = shape.cpy2;\\n\\t        if (cpx2 === null || cpy2 === null) {\\n\\t            return [\\n\\t                (isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t),\\n\\t                (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)\\n\\t            ];\\n\\t        }\\n\\t        else {\\n\\t            return [\\n\\t                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t),\\n\\t                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)\\n\\t            ];\\n\\t        }\\n\\t    }\\n\\t    module.exports = __webpack_require__(20).extend({\\n\\n\\t        type: 'bezier-curve',\\n\\n\\t        shape: {\\n\\t            x1: 0,\\n\\t            y1: 0,\\n\\t            x2: 0,\\n\\t            y2: 0,\\n\\t            cpx1: 0,\\n\\t            cpy1: 0,\\n\\t            // cpx2: 0,\\n\\t            // cpy2: 0\\n\\n\\t            // Curve show percent, for animating\\n\\t            percent: 1\\n\\t        },\\n\\n\\t        style: {\\n\\t            stroke: '#000',\\n\\t            fill: null\\n\\t        },\\n\\n\\t        buildPath: function (ctx, shape) {\\n\\t            var x1 = shape.x1;\\n\\t            var y1 = shape.y1;\\n\\t            var x2 = shape.x2;\\n\\t            var y2 = shape.y2;\\n\\t            var cpx1 = shape.cpx1;\\n\\t            var cpy1 = shape.cpy1;\\n\\t            var cpx2 = shape.cpx2;\\n\\t            var cpy2 = shape.cpy2;\\n\\t            var percent = shape.percent;\\n\\t            if (percent === 0) {\\n\\t                return;\\n\\t            }\\n\\n\\t            ctx.moveTo(x1, y1);\\n\\n\\t            if (cpx2 == null || cpy2 == null) {\\n\\t                if (percent < 1) {\\n\\t                    quadraticSubdivide(\\n\\t                        x1, cpx1, x2, percent, out\\n\\t                    );\\n\\t                    cpx1 = out[1];\\n\\t                    x2 = out[2];\\n\\t                    quadraticSubdivide(\\n\\t                        y1, cpy1, y2, percent, out\\n\\t                    );\\n\\t                    cpy1 = out[1];\\n\\t                    y2 = out[2];\\n\\t                }\\n\\n\\t                ctx.quadraticCurveTo(\\n\\t                    cpx1, cpy1,\\n\\t                    x2, y2\\n\\t                );\\n\\t            }\\n\\t            else {\\n\\t                if (percent < 1) {\\n\\t                    cubicSubdivide(\\n\\t                        x1, cpx1, cpx2, x2, percent, out\\n\\t                    );\\n\\t                    cpx1 = out[1];\\n\\t                    cpx2 = out[2];\\n\\t                    x2 = out[3];\\n\\t                    cubicSubdivide(\\n\\t                        y1, cpy1, cpy2, y2, percent, out\\n\\t                    );\\n\\t                    cpy1 = out[1];\\n\\t                    cpy2 = out[2];\\n\\t                    y2 = out[3];\\n\\t                }\\n\\t                ctx.bezierCurveTo(\\n\\t                    cpx1, cpy1,\\n\\t                    cpx2, cpy2,\\n\\t                    x2, y2\\n\\t                );\\n\\t            }\\n\\t        },\\n\\n\\t        /**\\n\\t         * Get point at percent\\n\\t         * @param  {number} t\\n\\t         * @return {Array.<number>}\\n\\t         */\\n\\t        pointAt: function (t) {\\n\\t            return someVectorAt(this.shape, t, false);\\n\\t        },\\n\\n\\t        /**\\n\\t         * Get tangent at percent\\n\\t         * @param  {number} t\\n\\t         * @return {Array.<number>}\\n\\t         */\\n\\t        tangentAt: function (t) {\\n\\t            var p = someVectorAt(this.shape, t, true);\\n\\t            return vec2.normalize(p, p);\\n\\t        }\\n\\t    });\\n\\n\\n\\n/***/ },\\n/* 63 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * 圆弧\\n\\t * @module zrender/graphic/shape/Arc\\n\\t */\\n\\t \\n\\n\\t    module.exports = __webpack_require__(20).extend({\\n\\n\\t        type: 'arc',\\n\\n\\t        shape: {\\n\\n\\t            cx: 0,\\n\\n\\t            cy: 0,\\n\\n\\t            r: 0,\\n\\n\\t            startAngle: 0,\\n\\n\\t            endAngle: Math.PI * 2,\\n\\n\\t            clockwise: true\\n\\t        },\\n\\n\\t        style: {\\n\\n\\t            stroke: '#000',\\n\\n\\t            fill: null\\n\\t        },\\n\\n\\t        buildPath: function (ctx, shape) {\\n\\n\\t            var x = shape.cx;\\n\\t            var y = shape.cy;\\n\\t            var r = Math.max(shape.r, 0);\\n\\t            var startAngle = shape.startAngle;\\n\\t            var endAngle = shape.endAngle;\\n\\t            var clockwise = shape.clockwise;\\n\\n\\t            var unitX = Math.cos(startAngle);\\n\\t            var unitY = Math.sin(startAngle);\\n\\n\\t            ctx.moveTo(unitX * r + x, unitY * r + y);\\n\\t            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\\n\\t        }\\n\\t    });\\n\\n\\n/***/ },\\n/* 64 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t// CompoundPath to improve performance\\n\\n\\n\\t    var Path = __webpack_require__(20);\\n\\n\\t    module.exports = Path.extend({\\n\\n\\t        type: 'compound',\\n\\n\\t        shape: {\\n\\n\\t            paths: null\\n\\t        },\\n\\n\\t        _updatePathDirty: function () {\\n\\t            var dirtyPath = this.__dirtyPath;\\n\\t            var paths = this.shape.paths;\\n\\t            for (var i = 0; i < paths.length; i++) {\\n\\t                // Mark as dirty if any subpath is dirty\\n\\t                dirtyPath = dirtyPath || paths[i].__dirtyPath;\\n\\t            }\\n\\t            this.__dirtyPath = dirtyPath;\\n\\t            this.__dirty = this.__dirty || dirtyPath;\\n\\t        },\\n\\n\\t        beforeBrush: function () {\\n\\t            this._updatePathDirty();\\n\\t            var paths = this.shape.paths || [];\\n\\t            var scale = this.getGlobalScale();\\n\\t            // Update path scale\\n\\t            for (var i = 0; i < paths.length; i++) {\\n\\t                if (!paths[i].path) {\\n\\t                    paths[i].createPathProxy();\\n\\t                }\\n\\t                paths[i].path.setScale(scale[0], scale[1]);\\n\\t            }\\n\\t        },\\n\\n\\t        buildPath: function (ctx, shape) {\\n\\t            var paths = shape.paths || [];\\n\\t            for (var i = 0; i < paths.length; i++) {\\n\\t                paths[i].buildPath(ctx, paths[i].shape, true);\\n\\t            }\\n\\t        },\\n\\n\\t        afterBrush: function () {\\n\\t            var paths = this.shape.paths;\\n\\t            for (var i = 0; i < paths.length; i++) {\\n\\t                paths[i].__dirtyPath = false;\\n\\t            }\\n\\t        },\\n\\n\\t        getBoundingRect: function () {\\n\\t            this._updatePathDirty();\\n\\t            return Path.prototype.getBoundingRect.call(this);\\n\\t        }\\n\\t    });\\n\\n\\n/***/ },\\n/* 65 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t'use strict';\\n\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\n\\t    var Gradient = __webpack_require__(66);\\n\\n\\t    /**\\n\\t     * x, y, x2, y2 are all percent from 0 to 1\\n\\t     * @param {number} [x=0]\\n\\t     * @param {number} [y=0]\\n\\t     * @param {number} [x2=1]\\n\\t     * @param {number} [y2=0]\\n\\t     * @param {Array.<Object>} colorStops\\n\\t     * @param {boolean} [globalCoord=false]\\n\\t     */\\n\\t    var LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\\n\\t        // Should do nothing more in this constructor. Because gradient can be\\n\\t        // declard by `color: {type: 'linear', colorStops: ...}`, where\\n\\t        // this constructor will not be called.\\n\\n\\t        this.x = x == null ? 0 : x;\\n\\n\\t        this.y = y == null ? 0 : y;\\n\\n\\t        this.x2 = x2 == null ? 1 : x2;\\n\\n\\t        this.y2 = y2 == null ? 0 : y2;\\n\\n\\t        // Can be cloned\\n\\t        this.type = 'linear';\\n\\n\\t        // If use global coord\\n\\t        this.global = globalCoord || false;\\n\\n\\t        Gradient.call(this, colorStops);\\n\\t    };\\n\\n\\t    LinearGradient.prototype = {\\n\\n\\t        constructor: LinearGradient\\n\\t    };\\n\\n\\t    zrUtil.inherits(LinearGradient, Gradient);\\n\\n\\t    module.exports = LinearGradient;\\n\\n\\n/***/ },\\n/* 66 */\\n/***/ function(module, exports) {\\n\\n\\t\\n\\n\\t    /**\\n\\t     * @param {Array.<Object>} colorStops\\n\\t     */\\n\\t    var Gradient = function (colorStops) {\\n\\n\\t        this.colorStops = colorStops || [];\\n\\t    };\\n\\n\\t    Gradient.prototype = {\\n\\n\\t        constructor: Gradient,\\n\\n\\t        addColorStop: function (offset, color) {\\n\\t            this.colorStops.push({\\n\\n\\t                offset: offset,\\n\\n\\t                color: color\\n\\t            });\\n\\t        }\\n\\t    };\\n\\n\\t    module.exports = Gradient;\\n\\n\\n/***/ },\\n/* 67 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t'use strict';\\n\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\n\\t    var Gradient = __webpack_require__(66);\\n\\n\\t    /**\\n\\t     * x, y, r are all percent from 0 to 1\\n\\t     * @param {number} [x=0.5]\\n\\t     * @param {number} [y=0.5]\\n\\t     * @param {number} [r=0.5]\\n\\t     * @param {Array.<Object>} [colorStops]\\n\\t     * @param {boolean} [globalCoord=false]\\n\\t     */\\n\\t    var RadialGradient = function (x, y, r, colorStops, globalCoord) {\\n\\t        // Should do nothing more in this constructor. Because gradient can be\\n\\t        // declard by `color: {type: 'radial', colorStops: ...}`, where\\n\\t        // this constructor will not be called.\\n\\n\\t        this.x = x == null ? 0.5 : x;\\n\\n\\t        this.y = y == null ? 0.5 : y;\\n\\n\\t        this.r = r == null ? 0.5 : r;\\n\\n\\t        // Can be cloned\\n\\t        this.type = 'radial';\\n\\n\\t        // If use global coord\\n\\t        this.global = globalCoord || false;\\n\\n\\t        Gradient.call(this, colorStops);\\n\\t    };\\n\\n\\t    RadialGradient.prototype = {\\n\\n\\t        constructor: RadialGradient\\n\\t    };\\n\\n\\t    zrUtil.inherits(RadialGradient, Gradient);\\n\\n\\t    module.exports = RadialGradient;\\n\\n\\n/***/ },\\n/* 68 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\t    var getItemStyle = __webpack_require__(15)(\\n\\t        [\\n\\t            ['fill', 'color'],\\n\\t            ['stroke', 'borderColor'],\\n\\t            ['lineWidth', 'borderWidth'],\\n\\t            ['opacity'],\\n\\t            ['shadowBlur'],\\n\\t            ['shadowOffsetX'],\\n\\t            ['shadowOffsetY'],\\n\\t            ['shadowColor'],\\n\\t            ['textPosition'],\\n\\t            ['textAlign']\\n\\t        ]\\n\\t    );\\n\\t    module.exports = {\\n\\t        getItemStyle: function (excludes, includes) {\\n\\t            var style = getItemStyle.call(this, excludes, includes);\\n\\t            var lineDash = this.getBorderLineDash();\\n\\t            lineDash && (style.lineDash = lineDash);\\n\\t            return style;\\n\\t        },\\n\\n\\t        getBorderLineDash: function () {\\n\\t            var lineType = this.get('borderType');\\n\\t            return (lineType === 'solid' || lineType == null) ? null\\n\\t                : (lineType === 'dashed' ? [5, 5] : [1, 1]);\\n\\t        }\\n\\t    };\\n\\n\\n/***/ },\\n/* 69 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * Component model\\n\\t *\\n\\t * @module echarts/model/Component\\n\\t */\\n\\n\\n\\t    var Model = __webpack_require__(12);\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var arrayPush = Array.prototype.push;\\n\\t    var componentUtil = __webpack_require__(70);\\n\\t    var clazzUtil = __webpack_require__(13);\\n\\t    var layout = __webpack_require__(71);\\n\\n\\t    /**\\n\\t     * @alias module:echarts/model/Component\\n\\t     * @constructor\\n\\t     * @param {Object} option\\n\\t     * @param {module:echarts/model/Model} parentModel\\n\\t     * @param {module:echarts/model/Model} ecModel\\n\\t     */\\n\\t    var ComponentModel = Model.extend({\\n\\n\\t        type: 'component',\\n\\n\\t        /**\\n\\t         * @readOnly\\n\\t         * @type {string}\\n\\t         */\\n\\t        id: '',\\n\\n\\t        /**\\n\\t         * @readOnly\\n\\t         */\\n\\t        name: '',\\n\\n\\t        /**\\n\\t         * @readOnly\\n\\t         * @type {string}\\n\\t         */\\n\\t        mainType: '',\\n\\n\\t        /**\\n\\t         * @readOnly\\n\\t         * @type {string}\\n\\t         */\\n\\t        subType: '',\\n\\n\\t        /**\\n\\t         * @readOnly\\n\\t         * @type {number}\\n\\t         */\\n\\t        componentIndex: 0,\\n\\n\\t        /**\\n\\t         * @type {Object}\\n\\t         * @protected\\n\\t         */\\n\\t        defaultOption: null,\\n\\n\\t        /**\\n\\t         * @type {module:echarts/model/Global}\\n\\t         * @readOnly\\n\\t         */\\n\\t        ecModel: null,\\n\\n\\t        /**\\n\\t         * key: componentType\\n\\t         * value:  Component model list, can not be null.\\n\\t         * @type {Object.<string, Array.<module:echarts/model/Model>>}\\n\\t         * @readOnly\\n\\t         */\\n\\t        dependentModels: [],\\n\\n\\t        /**\\n\\t         * @type {string}\\n\\t         * @readOnly\\n\\t         */\\n\\t        uid: null,\\n\\n\\t        /**\\n\\t         * Support merge layout params.\\n\\t         * Only support 'box' now (left/right/top/bottom/width/height).\\n\\t         * @type {string|Object} Object can be {ignoreSize: true}\\n\\t         * @readOnly\\n\\t         */\\n\\t        layoutMode: null,\\n\\n\\t        $constructor: function (option, parentModel, ecModel, extraOpt) {\\n\\t            Model.call(this, option, parentModel, ecModel, extraOpt);\\n\\n\\t            this.uid = componentUtil.getUID('componentModel');\\n\\t        },\\n\\n\\n\\t        init: function (option, parentModel, ecModel, extraOpt) {\\n\\t            this.mergeDefaultAndTheme(option, ecModel);\\n\\t        },\\n\\n\\t        mergeDefaultAndTheme: function (option, ecModel) {\\n\\t            var layoutMode = this.layoutMode;\\n\\t            var inputPositionParams = layoutMode\\n\\t                ? layout.getLayoutParams(option) : {};\\n\\n\\t            var themeModel = ecModel.getTheme();\\n\\t            zrUtil.merge(option, themeModel.get(this.mainType));\\n\\t            zrUtil.merge(option, this.getDefaultOption());\\n\\n\\t            if (layoutMode) {\\n\\t                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\\n\\t            }\\n\\t        },\\n\\n\\t        mergeOption: function (option, extraOpt) {\\n\\t            zrUtil.merge(this.option, option, true);\\n\\n\\t            var layoutMode = this.layoutMode;\\n\\t            if (layoutMode) {\\n\\t                layout.mergeLayoutParam(this.option, option, layoutMode);\\n\\t            }\\n\\t        },\\n\\n\\t        // Hooker after init or mergeOption\\n\\t        optionUpdated: function (newCptOption, isInit) {},\\n\\n\\t        getDefaultOption: function () {\\n\\t            if (!clazzUtil.hasOwn(this, '__defaultOption')) {\\n\\t                var optList = [];\\n\\t                var Class = this.constructor;\\n\\t                while (Class) {\\n\\t                    var opt = Class.prototype.defaultOption;\\n\\t                    opt && optList.push(opt);\\n\\t                    Class = Class.superClass;\\n\\t                }\\n\\n\\t                var defaultOption = {};\\n\\t                for (var i = optList.length - 1; i >= 0; i--) {\\n\\t                    defaultOption = zrUtil.merge(defaultOption, optList[i], true);\\n\\t                }\\n\\t                clazzUtil.set(this, '__defaultOption', defaultOption);\\n\\t            }\\n\\t            return clazzUtil.get(this, '__defaultOption');\\n\\t        },\\n\\n\\t        getReferringComponents: function (mainType) {\\n\\t            return this.ecModel.queryComponents({\\n\\t                mainType: mainType,\\n\\t                index: this.get(mainType + 'Index', true),\\n\\t                id: this.get(mainType + 'Id', true)\\n\\t            });\\n\\t        }\\n\\n\\t    });\\n\\n\\t    // Reset ComponentModel.extend, add preConstruct.\\n\\t    // clazzUtil.enableClassExtend(\\n\\t    //     ComponentModel,\\n\\t    //     function (option, parentModel, ecModel, extraOpt) {\\n\\t    //         // Set dependentModels, componentIndex, name, id, mainType, subType.\\n\\t    //         zrUtil.extend(this, extraOpt);\\n\\n\\t    //         this.uid = componentUtil.getUID('componentModel');\\n\\n\\t    //         // this.setReadOnly([\\n\\t    //         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\\n\\t    //         //     'dependentModels', 'componentIndex'\\n\\t    //         // ]);\\n\\t    //     }\\n\\t    // );\\n\\n\\t    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\\n\\t    clazzUtil.enableClassManagement(\\n\\t        ComponentModel, {registerWhenExtend: true}\\n\\t    );\\n\\t    componentUtil.enableSubTypeDefaulter(ComponentModel);\\n\\n\\t    // Add capability of ComponentModel.topologicalTravel.\\n\\t    componentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\\n\\n\\t    function getDependencies(componentType) {\\n\\t        var deps = [];\\n\\t        zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\\n\\t            arrayPush.apply(deps, Clazz.prototype.dependencies || []);\\n\\t        });\\n\\t        // Ensure main type\\n\\t        return zrUtil.map(deps, function (type) {\\n\\t            return clazzUtil.parseClassType(type).main;\\n\\t        });\\n\\t    }\\n\\n\\t    zrUtil.mixin(ComponentModel, __webpack_require__(72));\\n\\n\\t    module.exports = ComponentModel;\\n\\n\\n/***/ },\\n/* 70 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var clazz = __webpack_require__(13);\\n\\n\\t    var parseClassType = clazz.parseClassType;\\n\\n\\t    var base = 0;\\n\\n\\t    var componentUtil = {};\\n\\n\\t    var DELIMITER = '_';\\n\\n\\t    /**\\n\\t     * @public\\n\\t     * @param {string} type\\n\\t     * @return {string}\\n\\t     */\\n\\t    componentUtil.getUID = function (type) {\\n\\t        // Considering the case of crossing js context,\\n\\t        // use Math.random to make id as unique as possible.\\n\\t        return [(type || ''), base++, Math.random()].join(DELIMITER);\\n\\t    };\\n\\n\\t    /**\\n\\t     * @inner\\n\\t     */\\n\\t    componentUtil.enableSubTypeDefaulter = function (entity) {\\n\\n\\t        var subTypeDefaulters = {};\\n\\n\\t        entity.registerSubTypeDefaulter = function (componentType, defaulter) {\\n\\t            componentType = parseClassType(componentType);\\n\\t            subTypeDefaulters[componentType.main] = defaulter;\\n\\t        };\\n\\n\\t        entity.determineSubType = function (componentType, option) {\\n\\t            var type = option.type;\\n\\t            if (!type) {\\n\\t                var componentTypeMain = parseClassType(componentType).main;\\n\\t                if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\\n\\t                    type = subTypeDefaulters[componentTypeMain](option);\\n\\t                }\\n\\t            }\\n\\t            return type;\\n\\t        };\\n\\n\\t        return entity;\\n\\t    };\\n\\n\\t    /**\\n\\t     * Topological travel on Activity Network (Activity On Vertices).\\n\\t     * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\\n\\t     *\\n\\t     * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\\n\\t     *\\n\\t     * If there is circle dependencey, Error will be thrown.\\n\\t     *\\n\\t     */\\n\\t    componentUtil.enableTopologicalTravel = function (entity, dependencyGetter) {\\n\\n\\t        /**\\n\\t         * @public\\n\\t         * @param {Array.<string>} targetNameList Target Component type list.\\n\\t         *                                           Can be ['aa', 'bb', 'aa.xx']\\n\\t         * @param {Array.<string>} fullNameList By which we can build dependency graph.\\n\\t         * @param {Function} callback Params: componentType, dependencies.\\n\\t         * @param {Object} context Scope of callback.\\n\\t         */\\n\\t        entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\\n\\t            if (!targetNameList.length) {\\n\\t                return;\\n\\t            }\\n\\n\\t            var result = makeDepndencyGraph(fullNameList);\\n\\t            var graph = result.graph;\\n\\t            var stack = result.noEntryList;\\n\\n\\t            var targetNameSet = {};\\n\\t            zrUtil.each(targetNameList, function (name) {\\n\\t                targetNameSet[name] = true;\\n\\t            });\\n\\n\\t            while (stack.length) {\\n\\t                var currComponentType = stack.pop();\\n\\t                var currVertex = graph[currComponentType];\\n\\t                var isInTargetNameSet = !!targetNameSet[currComponentType];\\n\\t                if (isInTargetNameSet) {\\n\\t                    callback.call(context, currComponentType, currVertex.originalDeps.slice());\\n\\t                    delete targetNameSet[currComponentType];\\n\\t                }\\n\\t                zrUtil.each(\\n\\t                    currVertex.successor,\\n\\t                    isInTargetNameSet ? removeEdgeAndAdd : removeEdge\\n\\t                );\\n\\t            }\\n\\n\\t            zrUtil.each(targetNameSet, function () {\\n\\t                throw new Error('Circle dependency may exists');\\n\\t            });\\n\\n\\t            function removeEdge(succComponentType) {\\n\\t                graph[succComponentType].entryCount--;\\n\\t                if (graph[succComponentType].entryCount === 0) {\\n\\t                    stack.push(succComponentType);\\n\\t                }\\n\\t            }\\n\\n\\t            // Consider this case: legend depends on series, and we call\\n\\t            // chart.setOption({series: [...]}), where only series is in option.\\n\\t            // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\\n\\t            // not be called, but only sereis.mergeOption is called. Thus legend\\n\\t            // have no chance to update its local record about series (like which\\n\\t            // name of series is available in legend).\\n\\t            function removeEdgeAndAdd(succComponentType) {\\n\\t                targetNameSet[succComponentType] = true;\\n\\t                removeEdge(succComponentType);\\n\\t            }\\n\\t        };\\n\\n\\t        /**\\n\\t         * DepndencyGraph: {Object}\\n\\t         * key: conponentType,\\n\\t         * value: {\\n\\t         *     successor: [conponentTypes...],\\n\\t         *     originalDeps: [conponentTypes...],\\n\\t         *     entryCount: {number}\\n\\t         * }\\n\\t         */\\n\\t        function makeDepndencyGraph(fullNameList) {\\n\\t            var graph = {};\\n\\t            var noEntryList = [];\\n\\n\\t            zrUtil.each(fullNameList, function (name) {\\n\\n\\t                var thisItem = createDependencyGraphItem(graph, name);\\n\\t                var originalDeps = thisItem.originalDeps = dependencyGetter(name);\\n\\n\\t                var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\\n\\t                thisItem.entryCount = availableDeps.length;\\n\\t                if (thisItem.entryCount === 0) {\\n\\t                    noEntryList.push(name);\\n\\t                }\\n\\n\\t                zrUtil.each(availableDeps, function (dependentName) {\\n\\t                    if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\\n\\t                        thisItem.predecessor.push(dependentName);\\n\\t                    }\\n\\t                    var thatItem = createDependencyGraphItem(graph, dependentName);\\n\\t                    if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\\n\\t                        thatItem.successor.push(name);\\n\\t                    }\\n\\t                });\\n\\t            });\\n\\n\\t            return {graph: graph, noEntryList: noEntryList};\\n\\t        }\\n\\n\\t        function createDependencyGraphItem(graph, name) {\\n\\t            if (!graph[name]) {\\n\\t                graph[name] = {predecessor: [], successor: []};\\n\\t            }\\n\\t            return graph[name];\\n\\t        }\\n\\n\\t        function getAvailableDependencies(originalDeps, fullNameList) {\\n\\t            var availableDeps = [];\\n\\t            zrUtil.each(originalDeps, function (dep) {\\n\\t                zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\\n\\t            });\\n\\t            return availableDeps;\\n\\t        }\\n\\t    };\\n\\n\\t    module.exports = componentUtil;\\n\\n\\n/***/ },\\n/* 71 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t'use strict';\\n\\t// Layout helpers for each component positioning\\n\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var BoundingRect = __webpack_require__(9);\\n\\t    var numberUtil = __webpack_require__(7);\\n\\t    var formatUtil = __webpack_require__(6);\\n\\t    var parsePercent = numberUtil.parsePercent;\\n\\t    var each = zrUtil.each;\\n\\n\\t    var layout = {};\\n\\n\\t    /**\\n\\t     * @public\\n\\t     */\\n\\t    var LOCATION_PARAMS = layout.LOCATION_PARAMS = [\\n\\t        'left', 'right', 'top', 'bottom', 'width', 'height'\\n\\t    ];\\n\\n\\t    /**\\n\\t     * @public\\n\\t     */\\n\\t    var HV_NAMES = layout.HV_NAMES = [\\n\\t        ['width', 'left', 'right'],\\n\\t        ['height', 'top', 'bottom']\\n\\t    ];\\n\\n\\t    function boxLayout(orient, group, gap, maxWidth, maxHeight) {\\n\\t        var x = 0;\\n\\t        var y = 0;\\n\\t        if (maxWidth == null) {\\n\\t            maxWidth = Infinity;\\n\\t        }\\n\\t        if (maxHeight == null) {\\n\\t            maxHeight = Infinity;\\n\\t        }\\n\\t        var currentLineMaxSize = 0;\\n\\t        group.eachChild(function (child, idx) {\\n\\t            var position = child.position;\\n\\t            var rect = child.getBoundingRect();\\n\\t            var nextChild = group.childAt(idx + 1);\\n\\t            var nextChildRect = nextChild && nextChild.getBoundingRect();\\n\\t            var nextX;\\n\\t            var nextY;\\n\\t            if (orient === 'horizontal') {\\n\\t                var moveX = rect.width + (nextChildRect ? (-nextChildRect.x + rect.x) : 0);\\n\\t                nextX = x + moveX;\\n\\t                // Wrap when width exceeds maxWidth or meet a `newline` group\\n\\t                if (nextX > maxWidth || child.newline) {\\n\\t                    x = 0;\\n\\t                    nextX = moveX;\\n\\t                    y += currentLineMaxSize + gap;\\n\\t                    currentLineMaxSize = rect.height;\\n\\t                }\\n\\t                else {\\n\\t                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\\n\\t                }\\n\\t            }\\n\\t            else {\\n\\t                var moveY = rect.height + (nextChildRect ? (-nextChildRect.y + rect.y) : 0);\\n\\t                nextY = y + moveY;\\n\\t                // Wrap when width exceeds maxHeight or meet a `newline` group\\n\\t                if (nextY > maxHeight || child.newline) {\\n\\t                    x += currentLineMaxSize + gap;\\n\\t                    y = 0;\\n\\t                    nextY = moveY;\\n\\t                    currentLineMaxSize = rect.width;\\n\\t                }\\n\\t                else {\\n\\t                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\\n\\t                }\\n\\t            }\\n\\n\\t            if (child.newline) {\\n\\t                return;\\n\\t            }\\n\\n\\t            position[0] = x;\\n\\t            position[1] = y;\\n\\n\\t            orient === 'horizontal'\\n\\t                ? (x = nextX + gap)\\n\\t                : (y = nextY + gap);\\n\\t        });\\n\\t    }\\n\\n\\t    /**\\n\\t     * VBox or HBox layouting\\n\\t     * @param {string} orient\\n\\t     * @param {module:zrender/container/Group} group\\n\\t     * @param {number} gap\\n\\t     * @param {number} [width=Infinity]\\n\\t     * @param {number} [height=Infinity]\\n\\t     */\\n\\t    layout.box = boxLayout;\\n\\n\\t    /**\\n\\t     * VBox layouting\\n\\t     * @param {module:zrender/container/Group} group\\n\\t     * @param {number} gap\\n\\t     * @param {number} [width=Infinity]\\n\\t     * @param {number} [height=Infinity]\\n\\t     */\\n\\t    layout.vbox = zrUtil.curry(boxLayout, 'vertical');\\n\\n\\t    /**\\n\\t     * HBox layouting\\n\\t     * @param {module:zrender/container/Group} group\\n\\t     * @param {number} gap\\n\\t     * @param {number} [width=Infinity]\\n\\t     * @param {number} [height=Infinity]\\n\\t     */\\n\\t    layout.hbox = zrUtil.curry(boxLayout, 'horizontal');\\n\\n\\t    /**\\n\\t     * If x or x2 is not specified or 'center' 'left' 'right',\\n\\t     * the width would be as long as possible.\\n\\t     * If y or y2 is not specified or 'middle' 'top' 'bottom',\\n\\t     * the height would be as long as possible.\\n\\t     *\\n\\t     * @param {Object} positionInfo\\n\\t     * @param {number|string} [positionInfo.x]\\n\\t     * @param {number|string} [positionInfo.y]\\n\\t     * @param {number|string} [positionInfo.x2]\\n\\t     * @param {number|string} [positionInfo.y2]\\n\\t     * @param {Object} containerRect\\n\\t     * @param {string|number} margin\\n\\t     * @return {Object} {width, height}\\n\\t     */\\n\\t    layout.getAvailableSize = function (positionInfo, containerRect, margin) {\\n\\t        var containerWidth = containerRect.width;\\n\\t        var containerHeight = containerRect.height;\\n\\n\\t        var x = parsePercent(positionInfo.x, containerWidth);\\n\\t        var y = parsePercent(positionInfo.y, containerHeight);\\n\\t        var x2 = parsePercent(positionInfo.x2, containerWidth);\\n\\t        var y2 = parsePercent(positionInfo.y2, containerHeight);\\n\\n\\t        (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\\n\\t        (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\\n\\t        (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\\n\\t        (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\\n\\n\\t        margin = formatUtil.normalizeCssArray(margin || 0);\\n\\n\\t        return {\\n\\t            width: Math.max(x2 - x - margin[1] - margin[3], 0),\\n\\t            height: Math.max(y2 - y - margin[0] - margin[2], 0)\\n\\t        };\\n\\t    };\\n\\n\\t    /**\\n\\t     * Parse position info.\\n\\t     *\\n\\t     * @param {Object} positionInfo\\n\\t     * @param {number|string} [positionInfo.left]\\n\\t     * @param {number|string} [positionInfo.top]\\n\\t     * @param {number|string} [positionInfo.right]\\n\\t     * @param {number|string} [positionInfo.bottom]\\n\\t     * @param {number|string} [positionInfo.width]\\n\\t     * @param {number|string} [positionInfo.height]\\n\\t     * @param {number|string} [positionInfo.aspect] Aspect is width / height\\n\\t     * @param {Object} containerRect\\n\\t     * @param {string|number} [margin]\\n\\t     *\\n\\t     * @return {module:zrender/core/BoundingRect}\\n\\t     */\\n\\t    layout.getLayoutRect = function (\\n\\t        positionInfo, containerRect, margin\\n\\t    ) {\\n\\t        margin = formatUtil.normalizeCssArray(margin || 0);\\n\\n\\t        var containerWidth = containerRect.width;\\n\\t        var containerHeight = containerRect.height;\\n\\n\\t        var left = parsePercent(positionInfo.left, containerWidth);\\n\\t        var top = parsePercent(positionInfo.top, containerHeight);\\n\\t        var right = parsePercent(positionInfo.right, containerWidth);\\n\\t        var bottom = parsePercent(positionInfo.bottom, containerHeight);\\n\\t        var width = parsePercent(positionInfo.width, containerWidth);\\n\\t        var height = parsePercent(positionInfo.height, containerHeight);\\n\\n\\t        var verticalMargin = margin[2] + margin[0];\\n\\t        var horizontalMargin = margin[1] + margin[3];\\n\\t        var aspect = positionInfo.aspect;\\n\\n\\t        // If width is not specified, calculate width from left and right\\n\\t        if (isNaN(width)) {\\n\\t            width = containerWidth - right - horizontalMargin - left;\\n\\t        }\\n\\t        if (isNaN(height)) {\\n\\t            height = containerHeight - bottom - verticalMargin - top;\\n\\t        }\\n\\n\\t        // If width and height are not given\\n\\t        // 1. Graph should not exceeds the container\\n\\t        // 2. Aspect must be keeped\\n\\t        // 3. Graph should take the space as more as possible\\n\\t        if (isNaN(width) && isNaN(height)) {\\n\\t            if (aspect > containerWidth / containerHeight) {\\n\\t                width = containerWidth * 0.8;\\n\\t            }\\n\\t            else {\\n\\t                height = containerHeight * 0.8;\\n\\t            }\\n\\t        }\\n\\n\\t        if (aspect != null) {\\n\\t            // Calculate width or height with given aspect\\n\\t            if (isNaN(width)) {\\n\\t                width = aspect * height;\\n\\t            }\\n\\t            if (isNaN(height)) {\\n\\t                height = width / aspect;\\n\\t            }\\n\\t        }\\n\\n\\t        // If left is not specified, calculate left from right and width\\n\\t        if (isNaN(left)) {\\n\\t            left = containerWidth - right - width - horizontalMargin;\\n\\t        }\\n\\t        if (isNaN(top)) {\\n\\t            top = containerHeight - bottom - height - verticalMargin;\\n\\t        }\\n\\n\\t        // Align left and top\\n\\t        switch (positionInfo.left || positionInfo.right) {\\n\\t            case 'center':\\n\\t                left = containerWidth / 2 - width / 2 - margin[3];\\n\\t                break;\\n\\t            case 'right':\\n\\t                left = containerWidth - width - horizontalMargin;\\n\\t                break;\\n\\t        }\\n\\t        switch (positionInfo.top || positionInfo.bottom) {\\n\\t            case 'middle':\\n\\t            case 'center':\\n\\t                top = containerHeight / 2 - height / 2 - margin[0];\\n\\t                break;\\n\\t            case 'bottom':\\n\\t                top = containerHeight - height - verticalMargin;\\n\\t                break;\\n\\t        }\\n\\t        // If something is wrong and left, top, width, height are calculated as NaN\\n\\t        left = left || 0;\\n\\t        top = top || 0;\\n\\t        if (isNaN(width)) {\\n\\t            // Width may be NaN if only one value is given except width\\n\\t            width = containerWidth - left - (right || 0);\\n\\t        }\\n\\t        if (isNaN(height)) {\\n\\t            // Height may be NaN if only one value is given except height\\n\\t            height = containerHeight - top - (bottom || 0);\\n\\t        }\\n\\n\\t        var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\\n\\t        rect.margin = margin;\\n\\t        return rect;\\n\\t    };\\n\\n\\n\\t    /**\\n\\t     * Position a zr element in viewport\\n\\t     *  Group position is specified by either\\n\\t     *  {left, top}, {right, bottom}\\n\\t     *  If all properties exists, right and bottom will be igonred.\\n\\t     *\\n\\t     * Logic:\\n\\t     *     1. Scale (against origin point in parent coord)\\n\\t     *     2. Rotate (against origin point in parent coord)\\n\\t     *     3. Traslate (with el.position by this method)\\n\\t     * So this method only fixes the last step 'Traslate', which does not affect\\n\\t     * scaling and rotating.\\n\\t     *\\n\\t     * If be called repeatly with the same input el, the same result will be gotten.\\n\\t     *\\n\\t     * @param {module:zrender/Element} el Should have `getBoundingRect` method.\\n\\t     * @param {Object} positionInfo\\n\\t     * @param {number|string} [positionInfo.left]\\n\\t     * @param {number|string} [positionInfo.top]\\n\\t     * @param {number|string} [positionInfo.right]\\n\\t     * @param {number|string} [positionInfo.bottom]\\n\\t     * @param {Object} containerRect\\n\\t     * @param {string|number} margin\\n\\t     * @param {Object} [opt]\\n\\t     * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\\n\\t     * @param {Array.<number>} [opt.boundingMode='all']\\n\\t     *        Specify how to calculate boundingRect when locating.\\n\\t     *        'all': Position the boundingRect that is transformed and uioned\\n\\t     *               both itself and its descendants.\\n\\t     *               This mode simplies confine the elements in the bounding\\n\\t     *               of their container (e.g., using 'right: 0').\\n\\t     *        'raw': Position the boundingRect that is not transformed and only itself.\\n\\t     *               This mode is useful when you want a element can overflow its\\n\\t     *               container. (Consider a rotated circle needs to be located in a corner.)\\n\\t     *               In this mode positionInfo.width/height can only be number.\\n\\t     */\\n\\t    layout.positionElement = function (el, positionInfo, containerRect, margin, opt) {\\n\\t        var h = !opt || !opt.hv || opt.hv[0];\\n\\t        var v = !opt || !opt.hv || opt.hv[1];\\n\\t        var boundingMode = opt && opt.boundingMode || 'all';\\n\\n\\t        if (!h && !v) {\\n\\t            return;\\n\\t        }\\n\\n\\t        var rect;\\n\\t        if (boundingMode === 'raw') {\\n\\t            rect = el.type === 'group'\\n\\t                ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0)\\n\\t                : el.getBoundingRect();\\n\\t        }\\n\\t        else {\\n\\t            rect = el.getBoundingRect();\\n\\t            if (el.needLocalTransform()) {\\n\\t                var transform = el.getLocalTransform();\\n\\t                // Notice: raw rect may be inner object of el,\\n\\t                // which should not be modified.\\n\\t                rect = rect.clone();\\n\\t                rect.applyTransform(transform);\\n\\t            }\\n\\t        }\\n\\n\\t        positionInfo = layout.getLayoutRect(\\n\\t            zrUtil.defaults(\\n\\t                {width: rect.width, height: rect.height},\\n\\t                positionInfo\\n\\t            ),\\n\\t            containerRect,\\n\\t            margin\\n\\t        );\\n\\n\\t        // Because 'tranlate' is the last step in transform\\n\\t        // (see zrender/core/Transformable#getLocalTransfrom),\\n\\t        // we can just only modify el.position to get final result.\\n\\t        var elPos = el.position;\\n\\t        var dx = h ? positionInfo.x - rect.x : 0;\\n\\t        var dy = v ? positionInfo.y - rect.y : 0;\\n\\n\\t        el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\\n\\t    };\\n\\n\\t    /**\\n\\t     * @param {Object} option Contains some of the properties in HV_NAMES.\\n\\t     * @param {number} hvIdx 0: horizontal; 1: vertical.\\n\\t     */\\n\\t    layout.sizeCalculable = function (option, hvIdx) {\\n\\t        return option[HV_NAMES[hvIdx][0]] != null\\n\\t            || (option[HV_NAMES[hvIdx][1]] != null && option[HV_NAMES[hvIdx][2]] != null);\\n\\t    };\\n\\n\\t    /**\\n\\t     * Consider Case:\\n\\t     * When defulat option has {left: 0, width: 100}, and we set {right: 0}\\n\\t     * through setOption or media query, using normal zrUtil.merge will cause\\n\\t     * {right: 0} does not take effect.\\n\\t     *\\n\\t     * @example\\n\\t     * ComponentModel.extend({\\n\\t     *     init: function () {\\n\\t     *         ...\\n\\t     *         var inputPositionParams = layout.getLayoutParams(option);\\n\\t     *         this.mergeOption(inputPositionParams);\\n\\t     *     },\\n\\t     *     mergeOption: function (newOption) {\\n\\t     *         newOption && zrUtil.merge(thisOption, newOption, true);\\n\\t     *         layout.mergeLayoutParam(thisOption, newOption);\\n\\t     *     }\\n\\t     * });\\n\\t     *\\n\\t     * @param {Object} targetOption\\n\\t     * @param {Object} newOption\\n\\t     * @param {Object|string} [opt]\\n\\t     * @param {boolean|Array.<boolean>} [opt.ignoreSize=false] Some component must has width and height.\\n\\t     */\\n\\t    layout.mergeLayoutParam = function (targetOption, newOption, opt) {\\n\\t        !zrUtil.isObject(opt) && (opt = {});\\n\\n\\t        var ignoreSize = opt.ignoreSize;\\n\\t        !zrUtil.isArray(ignoreSize) && (ignoreSize = [ignoreSize, ignoreSize]);\\n\\n\\t        var hResult = merge(HV_NAMES[0], 0);\\n\\t        var vResult = merge(HV_NAMES[1], 1);\\n\\n\\t        copy(HV_NAMES[0], targetOption, hResult);\\n\\t        copy(HV_NAMES[1], targetOption, vResult);\\n\\n\\t        function merge(names, hvIdx) {\\n\\t            var newParams = {};\\n\\t            var newValueCount = 0;\\n\\t            var merged = {};\\n\\t            var mergedValueCount = 0;\\n\\t            var enoughParamNumber = 2;\\n\\n\\t            each(names, function (name) {\\n\\t                merged[name] = targetOption[name];\\n\\t            });\\n\\t            each(names, function (name) {\\n\\t                // Consider case: newOption.width is null, which is\\n\\t                // set by user for removing width setting.\\n\\t                hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\\n\\t                hasValue(newParams, name) && newValueCount++;\\n\\t                hasValue(merged, name) && mergedValueCount++;\\n\\t            });\\n\\n\\t            if (ignoreSize[hvIdx]) {\\n\\t                // Only one of left/right is premitted to exist.\\n\\t                if (hasValue(newOption, names[1])) {\\n\\t                    merged[names[2]] = null;\\n\\t                }\\n\\t                else if (hasValue(newOption, names[2])) {\\n\\t                    merged[names[1]] = null;\\n\\t                }\\n\\t                return merged;\\n\\t            }\\n\\n\\t            // Case: newOption: {width: ..., right: ...},\\n\\t            // or targetOption: {right: ...} and newOption: {width: ...},\\n\\t            // There is no conflict when merged only has params count\\n\\t            // little than enoughParamNumber.\\n\\t            if (mergedValueCount === enoughParamNumber || !newValueCount) {\\n\\t                return merged;\\n\\t            }\\n\\t            // Case: newOption: {width: ..., right: ...},\\n\\t            // Than we can make sure user only want those two, and ignore\\n\\t            // all origin params in targetOption.\\n\\t            else if (newValueCount >= enoughParamNumber) {\\n\\t                return newParams;\\n\\t            }\\n\\t            else {\\n\\t                // Chose another param from targetOption by priority.\\n\\t                for (var i = 0; i < names.length; i++) {\\n\\t                    var name = names[i];\\n\\t                    if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\\n\\t                        newParams[name] = targetOption[name];\\n\\t                        break;\\n\\t                    }\\n\\t                }\\n\\t                return newParams;\\n\\t            }\\n\\t        }\\n\\n\\t        function hasProp(obj, name) {\\n\\t            return obj.hasOwnProperty(name);\\n\\t        }\\n\\n\\t        function hasValue(obj, name) {\\n\\t            return obj[name] != null && obj[name] !== 'auto';\\n\\t        }\\n\\n\\t        function copy(names, target, source) {\\n\\t            each(names, function (name) {\\n\\t                target[name] = source[name];\\n\\t            });\\n\\t        }\\n\\t    };\\n\\n\\t    /**\\n\\t     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\\n\\t     * @param {Object} source\\n\\t     * @return {Object} Result contains those props.\\n\\t     */\\n\\t    layout.getLayoutParams = function (source) {\\n\\t        return layout.copyLayoutParams({}, source);\\n\\t    };\\n\\n\\t    /**\\n\\t     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\\n\\t     * @param {Object} source\\n\\t     * @return {Object} Result contains those props.\\n\\t     */\\n\\t    layout.copyLayoutParams = function (target, source) {\\n\\t        source && target && each(LOCATION_PARAMS, function (name) {\\n\\t            source.hasOwnProperty(name) && (target[name] = source[name]);\\n\\t        });\\n\\t        return target;\\n\\t    };\\n\\n\\t    module.exports = layout;\\n\\n\\n\\n/***/ },\\n/* 72 */\\n/***/ function(module, exports) {\\n\\n\\t\\n\\n\\t    module.exports = {\\n\\t        getBoxLayoutParams: function () {\\n\\t            return {\\n\\t                left: this.get('left'),\\n\\t                top: this.get('top'),\\n\\t                right: this.get('right'),\\n\\t                bottom: this.get('bottom'),\\n\\t                width: this.get('width'),\\n\\t                height: this.get('height')\\n\\t            };\\n\\t        }\\n\\t    };\\n\\n\\n/***/ },\\n/* 73 */\\n/***/ function(module, exports) {\\n\\n\\t\\n\\t    var platform = '';\\n\\t    // Navigator not exists in node\\n\\t    if (typeof navigator !== 'undefined') {\\n\\t        platform = navigator.platform || '';\\n\\t    }\\n\\t    module.exports = {\\n\\t        // 全图默认背景\\n\\t        // backgroundColor: 'rgba(0,0,0,0)',\\n\\n\\t        // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\\n\\t        // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\\n\\t        // 浅色\\n\\t        // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\\n\\t        // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\\n\\t        // 深色\\n\\t        color: ['#c23531','#2f4554', '#61a0a8', '#d48265', '#91c7ae','#749f83',  '#ca8622', '#bda29a','#6e7074', '#546570', '#c4ccd3'],\\n\\n\\t        // 默认需要 Grid 配置项\\n\\t        // grid: {},\\n\\t        // 主题，主题\\n\\t        textStyle: {\\n\\t            // color: '#000',\\n\\t            // decoration: 'none',\\n\\t            // PENDING\\n\\t            fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\\n\\t            // fontFamily: 'Arial, Verdana, sans-serif',\\n\\t            fontSize: 12,\\n\\t            fontStyle: 'normal',\\n\\t            fontWeight: 'normal'\\n\\t        },\\n\\n\\t        // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\\n\\t        // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\\n\\t        // Default is source-over\\n\\t        blendMode: null,\\n\\n\\t        animation: 'auto',\\n\\t        animationDuration: 1000,\\n\\t        animationDurationUpdate: 300,\\n\\t        animationEasing: 'exponentialOut',\\n\\t        animationEasingUpdate: 'cubicOut',\\n\\n\\t        animationThreshold: 2000,\\n\\t        // Configuration for progressive/incremental rendering\\n\\t        progressiveThreshold: 3000,\\n\\t        progressive: 400,\\n\\n\\t        // Threshold of if use single hover layer to optimize.\\n\\t        // It is recommended that `hoverLayerThreshold` is equivalent to or less than\\n\\t        // `progressiveThreshold`, otherwise hover will cause restart of progressive,\\n\\t        // which is unexpected.\\n\\t        // see example <echarts/test/heatmap-large.html>.\\n\\t        hoverLayerThreshold: 3000,\\n\\n\\t        // See: module:echarts/scale/Time\\n\\t        useUTC: false\\n\\t    };\\n\\n\\n/***/ },\\n/* 74 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var classUtil = __webpack_require__(13);\\n\\t    var set = classUtil.set;\\n\\t    var get = classUtil.get;\\n\\n\\t    module.exports = {\\n\\t        clearColorPalette: function () {\\n\\t            set(this, 'colorIdx', 0);\\n\\t            set(this, 'colorNameMap', {});\\n\\t        },\\n\\n\\t        getColorFromPalette: function (name, scope) {\\n\\t            scope = scope || this;\\n\\t            var colorIdx = get(scope, 'colorIdx') || 0;\\n\\t            var colorNameMap = get(scope, 'colorNameMap') || set(scope, 'colorNameMap', {});\\n\\t            // Use `hasOwnProperty` to avoid conflict with Object.prototype.\\n\\t            if (colorNameMap.hasOwnProperty(name)) {\\n\\t                return colorNameMap[name];\\n\\t            }\\n\\t            var colorPalette = this.get('color', true) || [];\\n\\t            if (!colorPalette.length) {\\n\\t                return;\\n\\t            }\\n\\n\\t            var color = colorPalette[colorIdx];\\n\\t            if (name) {\\n\\t                colorNameMap[name] = color;\\n\\t            }\\n\\t            set(scope, 'colorIdx', (colorIdx + 1) % colorPalette.length);\\n\\n\\t            return color;\\n\\t        }\\n\\t    };\\n\\n\\n/***/ },\\n/* 75 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t'use strict';\\n\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\n\\t    var echartsAPIList = [\\n\\t        'getDom', 'getZr', 'getWidth', 'getHeight', 'getDevicePixelRatio', 'dispatchAction', 'isDisposed',\\n\\t        'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption',\\n\\t        'getViewOfComponentModel', 'getViewOfSeriesModel'\\n\\t    ];\\n\\t    // And `getCoordinateSystems` and `getComponentByElement` will be injected in echarts.js\\n\\n\\t    function ExtensionAPI(chartInstance) {\\n\\t        zrUtil.each(echartsAPIList, function (name) {\\n\\t            this[name] = zrUtil.bind(chartInstance[name], chartInstance);\\n\\t        }, this);\\n\\t    }\\n\\n\\t    module.exports = ExtensionAPI;\\n\\n\\n/***/ },\\n/* 76 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t'use strict';\\n\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\n\\t    var coordinateSystemCreators = {};\\n\\n\\t    function CoordinateSystemManager() {\\n\\n\\t        this._coordinateSystems = [];\\n\\t    }\\n\\n\\t    CoordinateSystemManager.prototype = {\\n\\n\\t        constructor: CoordinateSystemManager,\\n\\n\\t        create: function (ecModel, api) {\\n\\t            var coordinateSystems = [];\\n\\t            zrUtil.each(coordinateSystemCreators, function (creater, type) {\\n\\t                var list = creater.create(ecModel, api);\\n\\t                coordinateSystems = coordinateSystems.concat(list || []);\\n\\t            });\\n\\n\\t            this._coordinateSystems = coordinateSystems;\\n\\t        },\\n\\n\\t        update: function (ecModel, api) {\\n\\t            zrUtil.each(this._coordinateSystems, function (coordSys) {\\n\\t                // FIXME MUST have\\n\\t                coordSys.update && coordSys.update(ecModel, api);\\n\\t            });\\n\\t        },\\n\\n\\t        getCoordinateSystems: function () {\\n\\t            return this._coordinateSystems.slice();\\n\\t        }\\n\\t    };\\n\\n\\t    CoordinateSystemManager.register = function (type, coordinateSystemCreator) {\\n\\t        coordinateSystemCreators[type] = coordinateSystemCreator;\\n\\t    };\\n\\n\\t    CoordinateSystemManager.get = function (type) {\\n\\t        return coordinateSystemCreators[type];\\n\\t    };\\n\\n\\t    module.exports = CoordinateSystemManager;\\n\\n\\n/***/ },\\n/* 77 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * ECharts option manager\\n\\t *\\n\\t * @module {echarts/model/OptionManager}\\n\\t */\\n\\n\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var modelUtil = __webpack_require__(5);\\n\\t    var ComponentModel = __webpack_require__(69);\\n\\t    var each = zrUtil.each;\\n\\t    var clone = zrUtil.clone;\\n\\t    var map = zrUtil.map;\\n\\t    var merge = zrUtil.merge;\\n\\n\\t    var QUERY_REG = /^(min|max)?(.+)$/;\\n\\n\\t    /**\\n\\t     * TERM EXPLANATIONS:\\n\\t     *\\n\\t     * [option]:\\n\\t     *\\n\\t     *     An object that contains definitions of components. For example:\\n\\t     *     var option = {\\n\\t     *         title: {...},\\n\\t     *         legend: {...},\\n\\t     *         visualMap: {...},\\n\\t     *         series: [\\n\\t     *             {data: [...]},\\n\\t     *             {data: [...]},\\n\\t     *             ...\\n\\t     *         ]\\n\\t     *     };\\n\\t     *\\n\\t     * [rawOption]:\\n\\t     *\\n\\t     *     An object input to echarts.setOption. 'rawOption' may be an\\n\\t     *     'option', or may be an object contains multi-options. For example:\\n\\t     *     var option = {\\n\\t     *         baseOption: {\\n\\t     *             title: {...},\\n\\t     *             legend: {...},\\n\\t     *             series: [\\n\\t     *                 {data: [...]},\\n\\t     *                 {data: [...]},\\n\\t     *                 ...\\n\\t     *             ]\\n\\t     *         },\\n\\t     *         timeline: {...},\\n\\t     *         options: [\\n\\t     *             {title: {...}, series: {data: [...]}},\\n\\t     *             {title: {...}, series: {data: [...]}},\\n\\t     *             ...\\n\\t     *         ],\\n\\t     *         media: [\\n\\t     *             {\\n\\t     *                 query: {maxWidth: 320},\\n\\t     *                 option: {series: {x: 20}, visualMap: {show: false}}\\n\\t     *             },\\n\\t     *             {\\n\\t     *                 query: {minWidth: 320, maxWidth: 720},\\n\\t     *                 option: {series: {x: 500}, visualMap: {show: true}}\\n\\t     *             },\\n\\t     *             {\\n\\t     *                 option: {series: {x: 1200}, visualMap: {show: true}}\\n\\t     *             }\\n\\t     *         ]\\n\\t     *     };\\n\\t     *\\n\\t     * @alias module:echarts/model/OptionManager\\n\\t     * @param {module:echarts/ExtensionAPI} api\\n\\t     */\\n\\t    function OptionManager(api) {\\n\\n\\t        /**\\n\\t         * @private\\n\\t         * @type {module:echarts/ExtensionAPI}\\n\\t         */\\n\\t        this._api = api;\\n\\n\\t        /**\\n\\t         * @private\\n\\t         * @type {Array.<number>}\\n\\t         */\\n\\t        this._timelineOptions = [];\\n\\n\\t        /**\\n\\t         * @private\\n\\t         * @type {Array.<Object>}\\n\\t         */\\n\\t        this._mediaList = [];\\n\\n\\t        /**\\n\\t         * @private\\n\\t         * @type {Object}\\n\\t         */\\n\\t        this._mediaDefault;\\n\\n\\t        /**\\n\\t         * -1, means default.\\n\\t         * empty means no media.\\n\\t         * @private\\n\\t         * @type {Array.<number>}\\n\\t         */\\n\\t        this._currentMediaIndices = [];\\n\\n\\t        /**\\n\\t         * @private\\n\\t         * @type {Object}\\n\\t         */\\n\\t        this._optionBackup;\\n\\n\\t        /**\\n\\t         * @private\\n\\t         * @type {Object}\\n\\t         */\\n\\t        this._newBaseOption;\\n\\t    }\\n\\n\\t    // timeline.notMerge is not supported in ec3. Firstly there is rearly\\n\\t    // case that notMerge is needed. Secondly supporting 'notMerge' requires\\n\\t    // rawOption cloned and backuped when timeline changed, which does no\\n\\t    // good to performance. What's more, that both timeline and setOption\\n\\t    // method supply 'notMerge' brings complex and some problems.\\n\\t    // Consider this case:\\n\\t    // (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\\n\\t    // (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\\n\\n\\t    OptionManager.prototype = {\\n\\n\\t        constructor: OptionManager,\\n\\n\\t        /**\\n\\t         * @public\\n\\t         * @param {Object} rawOption Raw option.\\n\\t         * @param {module:echarts/model/Global} ecModel\\n\\t         * @param {Array.<Function>} optionPreprocessorFuncs\\n\\t         * @return {Object} Init option\\n\\t         */\\n\\t        setOption: function (rawOption, optionPreprocessorFuncs) {\\n\\t            rawOption = clone(rawOption, true);\\n\\n\\t            // FIXME\\n\\t            // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\\n\\n\\t            var oldOptionBackup = this._optionBackup;\\n\\t            var newParsedOption = parseRawOption.call(\\n\\t                this, rawOption, optionPreprocessorFuncs, !oldOptionBackup\\n\\t            );\\n\\t            this._newBaseOption = newParsedOption.baseOption;\\n\\n\\t            // For setOption at second time (using merge mode);\\n\\t            if (oldOptionBackup) {\\n\\t                // Only baseOption can be merged.\\n\\t                mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption);\\n\\n\\t                // For simplicity, timeline options and media options do not support merge,\\n\\t                // that is, if you `setOption` twice and both has timeline options, the latter\\n\\t                // timeline opitons will not be merged to the formers, but just substitude them.\\n\\t                if (newParsedOption.timelineOptions.length) {\\n\\t                    oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\\n\\t                }\\n\\t                if (newParsedOption.mediaList.length) {\\n\\t                    oldOptionBackup.mediaList = newParsedOption.mediaList;\\n\\t                }\\n\\t                if (newParsedOption.mediaDefault) {\\n\\t                    oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\\n\\t                }\\n\\t            }\\n\\t            else {\\n\\t                this._optionBackup = newParsedOption;\\n\\t            }\\n\\t        },\\n\\n\\t        /**\\n\\t         * @param {boolean} isRecreate\\n\\t         * @return {Object}\\n\\t         */\\n\\t        mountOption: function (isRecreate) {\\n\\t            var optionBackup = this._optionBackup;\\n\\n\\t            // TODO\\n\\t            // 如果没有reset功能则不clone。\\n\\n\\t            this._timelineOptions = map(optionBackup.timelineOptions, clone);\\n\\t            this._mediaList = map(optionBackup.mediaList, clone);\\n\\t            this._mediaDefault = clone(optionBackup.mediaDefault);\\n\\t            this._currentMediaIndices = [];\\n\\n\\t            return clone(isRecreate\\n\\t                // this._optionBackup.baseOption, which is created at the first `setOption`\\n\\t                // called, and is merged into every new option by inner method `mergeOption`\\n\\t                // each time `setOption` called, can be only used in `isRecreate`, because\\n\\t                // its reliability is under suspicion. In other cases option merge is\\n\\t                // performed by `model.mergeOption`.\\n\\t                ? optionBackup.baseOption : this._newBaseOption\\n\\t            );\\n\\t        },\\n\\n\\t        /**\\n\\t         * @param {module:echarts/model/Global} ecModel\\n\\t         * @return {Object}\\n\\t         */\\n\\t        getTimelineOption: function (ecModel) {\\n\\t            var option;\\n\\t            var timelineOptions = this._timelineOptions;\\n\\n\\t            if (timelineOptions.length) {\\n\\t                // getTimelineOption can only be called after ecModel inited,\\n\\t                // so we can get currentIndex from timelineModel.\\n\\t                var timelineModel = ecModel.getComponent('timeline');\\n\\t                if (timelineModel) {\\n\\t                    option = clone(\\n\\t                        timelineOptions[timelineModel.getCurrentIndex()],\\n\\t                        true\\n\\t                    );\\n\\t                }\\n\\t            }\\n\\n\\t            return option;\\n\\t        },\\n\\n\\t        /**\\n\\t         * @param {module:echarts/model/Global} ecModel\\n\\t         * @return {Array.<Object>}\\n\\t         */\\n\\t        getMediaOption: function (ecModel) {\\n\\t            var ecWidth = this._api.getWidth();\\n\\t            var ecHeight = this._api.getHeight();\\n\\t            var mediaList = this._mediaList;\\n\\t            var mediaDefault = this._mediaDefault;\\n\\t            var indices = [];\\n\\t            var result = [];\\n\\n\\t            // No media defined.\\n\\t            if (!mediaList.length && !mediaDefault) {\\n\\t                return result;\\n\\t            }\\n\\n\\t            // Multi media may be applied, the latter defined media has higher priority.\\n\\t            for (var i = 0, len = mediaList.length; i < len; i++) {\\n\\t                if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\\n\\t                    indices.push(i);\\n\\t                }\\n\\t            }\\n\\n\\t            // FIXME\\n\\t            // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\\n\\t            if (!indices.length && mediaDefault) {\\n\\t                indices = [-1];\\n\\t            }\\n\\n\\t            if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\\n\\t                result = map(indices, function (index) {\\n\\t                    return clone(\\n\\t                        index === -1 ? mediaDefault.option : mediaList[index].option\\n\\t                    );\\n\\t                });\\n\\t            }\\n\\t            // Otherwise return nothing.\\n\\n\\t            this._currentMediaIndices = indices;\\n\\n\\t            return result;\\n\\t        }\\n\\t    };\\n\\n\\t    function parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\\n\\t        var timelineOptions = [];\\n\\t        var mediaList = [];\\n\\t        var mediaDefault;\\n\\t        var baseOption;\\n\\n\\t        // Compatible with ec2.\\n\\t        var timelineOpt = rawOption.timeline;\\n\\n\\t        if (rawOption.baseOption) {\\n\\t            baseOption = rawOption.baseOption;\\n\\t        }\\n\\n\\t        // For timeline\\n\\t        if (timelineOpt || rawOption.options) {\\n\\t            baseOption = baseOption || {};\\n\\t            timelineOptions = (rawOption.options || []).slice();\\n\\t        }\\n\\n\\t        // For media query\\n\\t        if (rawOption.media) {\\n\\t            baseOption = baseOption || {};\\n\\t            var media = rawOption.media;\\n\\t            each(media, function (singleMedia) {\\n\\t                if (singleMedia && singleMedia.option) {\\n\\t                    if (singleMedia.query) {\\n\\t                        mediaList.push(singleMedia);\\n\\t                    }\\n\\t                    else if (!mediaDefault) {\\n\\t                        // Use the first media default.\\n\\t                        mediaDefault = singleMedia;\\n\\t                    }\\n\\t                }\\n\\t            });\\n\\t        }\\n\\n\\t        // For normal option\\n\\t        if (!baseOption) {\\n\\t            baseOption = rawOption;\\n\\t        }\\n\\n\\t        // Set timelineOpt to baseOption in ec3,\\n\\t        // which is convenient for merge option.\\n\\t        if (!baseOption.timeline) {\\n\\t            baseOption.timeline = timelineOpt;\\n\\t        }\\n\\n\\t        // Preprocess.\\n\\t        each([baseOption].concat(timelineOptions)\\n\\t            .concat(zrUtil.map(mediaList, function (media) {\\n\\t                return media.option;\\n\\t            })),\\n\\t            function (option) {\\n\\t                each(optionPreprocessorFuncs, function (preProcess) {\\n\\t                    preProcess(option, isNew);\\n\\t                });\\n\\t            }\\n\\t        );\\n\\n\\t        return {\\n\\t            baseOption: baseOption,\\n\\t            timelineOptions: timelineOptions,\\n\\t            mediaDefault: mediaDefault,\\n\\t            mediaList: mediaList\\n\\t        };\\n\\t    }\\n\\n\\t    /**\\n\\t     * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\\n\\t     * Support: width, height, aspectRatio\\n\\t     * Can use max or min as prefix.\\n\\t     */\\n\\t    function applyMediaQuery(query, ecWidth, ecHeight) {\\n\\t        var realMap = {\\n\\t            width: ecWidth,\\n\\t            height: ecHeight,\\n\\t            aspectratio: ecWidth / ecHeight // lowser case for convenientce.\\n\\t        };\\n\\n\\t        var applicatable = true;\\n\\n\\t        zrUtil.each(query, function (value, attr) {\\n\\t            var matched = attr.match(QUERY_REG);\\n\\n\\t            if (!matched || !matched[1] || !matched[2]) {\\n\\t                return;\\n\\t            }\\n\\n\\t            var operator = matched[1];\\n\\t            var realAttr = matched[2].toLowerCase();\\n\\n\\t            if (!compare(realMap[realAttr], value, operator)) {\\n\\t                applicatable = false;\\n\\t            }\\n\\t        });\\n\\n\\t        return applicatable;\\n\\t    }\\n\\n\\t    function compare(real, expect, operator) {\\n\\t        if (operator === 'min') {\\n\\t            return real >= expect;\\n\\t        }\\n\\t        else if (operator === 'max') {\\n\\t            return real <= expect;\\n\\t        }\\n\\t        else { // Equals\\n\\t            return real === expect;\\n\\t        }\\n\\t    }\\n\\n\\t    function indicesEquals(indices1, indices2) {\\n\\t        // indices is always order by asc and has only finite number.\\n\\t        return indices1.join(',') === indices2.join(',');\\n\\t    }\\n\\n\\t    /**\\n\\t     * Consider case:\\n\\t     * `chart.setOption(opt1);`\\n\\t     * Then user do some interaction like dataZoom, dataView changing.\\n\\t     * `chart.setOption(opt2);`\\n\\t     * Then user press 'reset button' in toolbox.\\n\\t     *\\n\\t     * After doing that all of the interaction effects should be reset, the\\n\\t     * chart should be the same as the result of invoke\\n\\t     * `chart.setOption(opt1); chart.setOption(opt2);`.\\n\\t     *\\n\\t     * Although it is not able ensure that\\n\\t     * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\\n\\t     * `chart.setOption(merge(opt1, opt2));` exactly,\\n\\t     * this might be the only simple way to implement that feature.\\n\\t     *\\n\\t     * MEMO: We've considered some other approaches:\\n\\t     * 1. Each model handle its self restoration but not uniform treatment.\\n\\t     *     (Too complex in logic and error-prone)\\n\\t     * 2. Use a shadow ecModel. (Performace expensive)\\n\\t     */\\n\\t    function mergeOption(oldOption, newOption) {\\n\\t        newOption = newOption || {};\\n\\n\\t        each(newOption, function (newCptOpt, mainType) {\\n\\t            if (newCptOpt == null) {\\n\\t                return;\\n\\t            }\\n\\n\\t            var oldCptOpt = oldOption[mainType];\\n\\n\\t            if (!ComponentModel.hasClass(mainType)) {\\n\\t                oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\\n\\t            }\\n\\t            else {\\n\\t                newCptOpt = modelUtil.normalizeToArray(newCptOpt);\\n\\t                oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\\n\\n\\t                var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\\n\\n\\t                oldOption[mainType] = map(mapResult, function (item) {\\n\\t                    return (item.option && item.exist)\\n\\t                        ? merge(item.exist, item.option, true)\\n\\t                        : (item.exist || item.option);\\n\\t                });\\n\\t            }\\n\\t        });\\n\\t    }\\n\\n\\t    module.exports = OptionManager;\\n\\n\\n/***/ },\\n/* 78 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t'use strict';\\n\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var formatUtil = __webpack_require__(6);\\n\\t    var classUtil = __webpack_require__(13);\\n\\t    var modelUtil = __webpack_require__(5);\\n\\t    var ComponentModel = __webpack_require__(69);\\n\\t    var colorPaletteMixin = __webpack_require__(74);\\n\\t    var env = __webpack_require__(2);\\n\\t    var layout = __webpack_require__(71);\\n\\n\\t    var set = classUtil.set;\\n\\t    var get = classUtil.get;\\n\\t    var encodeHTML = formatUtil.encodeHTML;\\n\\t    var addCommas = formatUtil.addCommas;\\n\\n\\t    var SeriesModel = ComponentModel.extend({\\n\\n\\t        type: 'series.__base__',\\n\\n\\t        /**\\n\\t         * @readOnly\\n\\t         */\\n\\t        seriesIndex: 0,\\n\\n\\t        // coodinateSystem will be injected in the echarts/CoordinateSystem\\n\\t        coordinateSystem: null,\\n\\n\\t        /**\\n\\t         * @type {Object}\\n\\t         * @protected\\n\\t         */\\n\\t        defaultOption: null,\\n\\n\\t        /**\\n\\t         * Data provided for legend\\n\\t         * @type {Function}\\n\\t         */\\n\\t        // PENDING\\n\\t        legendDataProvider: null,\\n\\n\\t        /**\\n\\t         * Access path of color for visual\\n\\t         */\\n\\t        visualColorAccessPath: 'itemStyle.normal.color',\\n\\n\\t        /**\\n\\t         * Support merge layout params.\\n\\t         * Only support 'box' now (left/right/top/bottom/width/height).\\n\\t         * @type {string|Object} Object can be {ignoreSize: true}\\n\\t         * @readOnly\\n\\t         */\\n\\t        layoutMode: null,\\n\\n\\t        init: function (option, parentModel, ecModel, extraOpt) {\\n\\n\\t            /**\\n\\t             * @type {number}\\n\\t             * @readOnly\\n\\t             */\\n\\t            this.seriesIndex = this.componentIndex;\\n\\n\\t            this.mergeDefaultAndTheme(option, ecModel);\\n\\n\\t            var data = this.getInitialData(option, ecModel);\\n\\t            if (true) {\\n\\t                zrUtil.assert(data, 'getInitialData returned invalid data.');\\n\\t            }\\n\\t            /**\\n\\t             * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\\n\\t             * @private\\n\\t             */\\n\\t            set(this, 'dataBeforeProcessed', data);\\n\\n\\t            // If we reverse the order (make data firstly, and then make\\n\\t            // dataBeforeProcessed by cloneShallow), cloneShallow will\\n\\t            // cause data.graph.data !== data when using\\n\\t            // module:echarts/data/Graph or module:echarts/data/Tree.\\n\\t            // See module:echarts/data/helper/linkList\\n\\t            this.restoreData();\\n\\t        },\\n\\n\\t        /**\\n\\t         * Util for merge default and theme to option\\n\\t         * @param  {Object} option\\n\\t         * @param  {module:echarts/model/Global} ecModel\\n\\t         */\\n\\t        mergeDefaultAndTheme: function (option, ecModel) {\\n\\t            var layoutMode = this.layoutMode;\\n\\t            var inputPositionParams = layoutMode\\n\\t                ? layout.getLayoutParams(option) : {};\\n\\n\\t            zrUtil.merge(\\n\\t                option,\\n\\t                ecModel.getTheme().get(this.subType)\\n\\t            );\\n\\t            zrUtil.merge(option, this.getDefaultOption());\\n\\n\\t            // Default label emphasis `position` and `show`\\n\\t            // FIXME Set label in mergeOption\\n\\t            modelUtil.defaultEmphasis(option.label, modelUtil.LABEL_OPTIONS);\\n\\n\\t            this.fillDataTextStyle(option.data);\\n\\n\\t            if (layoutMode) {\\n\\t                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\\n\\t            }\\n\\t        },\\n\\n\\t        mergeOption: function (newSeriesOption, ecModel) {\\n\\t            newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\\n\\t            this.fillDataTextStyle(newSeriesOption.data);\\n\\n\\t            var layoutMode = this.layoutMode;\\n\\t            if (layoutMode) {\\n\\t                layout.mergeLayoutParam(this.option, newSeriesOption, layoutMode);\\n\\t            }\\n\\n\\t            var data = this.getInitialData(newSeriesOption, ecModel);\\n\\t            // TODO Merge data?\\n\\t            if (data) {\\n\\t                set(this, 'data', data);\\n\\t                set(this, 'dataBeforeProcessed', data.cloneShallow());\\n\\t            }\\n\\t        },\\n\\n\\t        fillDataTextStyle: function (data) {\\n\\t            // Default data label emphasis `position` and `show`\\n\\t            // FIXME Tree structure data ?\\n\\t            // FIXME Performance ?\\n\\t            if (data) {\\n\\t                for (var i = 0; i < data.length; i++) {\\n\\t                    if (data[i] && data[i].label) {\\n\\t                        modelUtil.defaultEmphasis(data[i].label, modelUtil.LABEL_OPTIONS);\\n\\t                    }\\n\\t                }\\n\\t            }\\n\\t        },\\n\\n\\t        /**\\n\\t         * Init a data structure from data related option in series\\n\\t         * Must be overwritten\\n\\t         */\\n\\t        getInitialData: function () {},\\n\\n\\t        /**\\n\\t         * @param {string} [dataType]\\n\\t         * @return {module:echarts/data/List}\\n\\t         */\\n\\t        getData: function (dataType) {\\n\\t            var data = get(this, 'data');\\n\\t            return dataType == null ? data : data.getLinkedData(dataType);\\n\\t        },\\n\\n\\t        /**\\n\\t         * @param {module:echarts/data/List} data\\n\\t         */\\n\\t        setData: function (data) {\\n\\t            set(this, 'data', data);\\n\\t        },\\n\\n\\t        /**\\n\\t         * Get data before processed\\n\\t         * @return {module:echarts/data/List}\\n\\t         */\\n\\t        getRawData: function () {\\n\\t            return get(this, 'dataBeforeProcessed');\\n\\t        },\\n\\n\\t        /**\\n\\t         * Coord dimension to data dimension.\\n\\t         *\\n\\t         * By default the result is the same as dimensions of series data.\\n\\t         * But in some series data dimensions are different from coord dimensions (i.e.\\n\\t         * candlestick and boxplot). Override this method to handle those cases.\\n\\t         *\\n\\t         * Coord dimension to data dimension can be one-to-many\\n\\t         *\\n\\t         * @param {string} coordDim\\n\\t         * @return {Array.<string>} dimensions on the axis.\\n\\t         */\\n\\t        coordDimToDataDim: function (coordDim) {\\n\\t            return modelUtil.coordDimToDataDim(this.getData(), coordDim);\\n\\t        },\\n\\n\\t        /**\\n\\t         * Convert data dimension to coord dimension.\\n\\t         *\\n\\t         * @param {string|number} dataDim\\n\\t         * @return {string}\\n\\t         */\\n\\t        dataDimToCoordDim: function (dataDim) {\\n\\t            return modelUtil.dataDimToCoordDim(this.getData(), dataDim);\\n\\t        },\\n\\n\\t        /**\\n\\t         * Get base axis if has coordinate system and has axis.\\n\\t         * By default use coordSys.getBaseAxis();\\n\\t         * Can be overrided for some chart.\\n\\t         * @return {type} description\\n\\t         */\\n\\t        getBaseAxis: function () {\\n\\t            var coordSys = this.coordinateSystem;\\n\\t            return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\\n\\t        },\\n\\n\\t        // FIXME\\n\\t        /**\\n\\t         * Default tooltip formatter\\n\\t         *\\n\\t         * @param {number} dataIndex\\n\\t         * @param {boolean} [multipleSeries=false]\\n\\t         * @param {number} [dataType]\\n\\t         */\\n\\t        formatTooltip: function (dataIndex, multipleSeries, dataType) {\\n\\t            function formatArrayValue(value) {\\n\\t                var vertially = zrUtil.reduce(value, function (vertially, val, idx) {\\n\\t                    var dimItem = data.getDimensionInfo(idx);\\n\\t                    return vertially |= dimItem && dimItem.tooltip !== false && dimItem.tooltipName != null;\\n\\t                }, 0);\\n\\n\\t                var result = [];\\n\\t                var tooltipDims = modelUtil.otherDimToDataDim(data, 'tooltip');\\n\\n\\t                tooltipDims.length\\n\\t                    ? zrUtil.each(tooltipDims, function (dimIdx) {\\n\\t                        setEachItem(data.get(dimIdx, dataIndex), dimIdx);\\n\\t                    })\\n\\t                    // By default, all dims is used on tooltip.\\n\\t                    : zrUtil.each(value, setEachItem);\\n\\n\\t                function setEachItem(val, dimIdx) {\\n\\t                    var dimInfo = data.getDimensionInfo(dimIdx);\\n\\t                    // If `dimInfo.tooltip` is not set, show tooltip.\\n\\t                    if (!dimInfo || dimInfo.otherDims.tooltip === false) {\\n\\t                        return;\\n\\t                    }\\n\\t                    var dimType = dimInfo.type;\\n\\t                    var valStr = (vertially ? '- ' + (dimInfo.tooltipName || dimInfo.name) + ': ' : '')\\n\\t                        + (dimType === 'ordinal'\\n\\t                            ? val + ''\\n\\t                            : dimType === 'time'\\n\\t                            ? (multipleSeries ? '' : formatUtil.formatTime('yyyy/MM/dd hh:mm:ss', val))\\n\\t                            : addCommas(val)\\n\\t                        );\\n\\t                    valStr && result.push(encodeHTML(valStr));\\n\\t                }\\n\\n\\t                return (vertially ? '<br/>' : '') + result.join(vertially ? '<br/>' : ', ');\\n\\t            }\\n\\n\\t            var data = get(this, 'data');\\n\\n\\t            var value = this.getRawValue(dataIndex);\\n\\t            var formattedValue = zrUtil.isArray(value)\\n\\t                ? formatArrayValue(value) : encodeHTML(addCommas(value));\\n\\t            var name = data.getName(dataIndex);\\n\\n\\t            var color = data.getItemVisual(dataIndex, 'color');\\n\\t            if (zrUtil.isObject(color) && color.colorStops) {\\n\\t                color = (color.colorStops[0] || {}).color;\\n\\t            }\\n\\t            color = color || 'transparent';\\n\\n\\t            var colorEl = formatUtil.getTooltipMarker(color);\\n\\n\\t            var seriesName = this.name;\\n\\t            // FIXME\\n\\t            if (seriesName === '\\\\0-') {\\n\\t                // Not show '-'\\n\\t                seriesName = '';\\n\\t            }\\n\\t            seriesName = seriesName\\n\\t                ? encodeHTML(seriesName) + (!multipleSeries ? '<br/>' : ': ')\\n\\t                : '';\\n\\t            return !multipleSeries\\n\\t                ? seriesName + colorEl\\n\\t                    + (name\\n\\t                        ? encodeHTML(name) + ': ' + formattedValue\\n\\t                        : formattedValue\\n\\t                    )\\n\\t                : colorEl + seriesName + formattedValue;\\n\\t        },\\n\\n\\t        /**\\n\\t         * @return {boolean}\\n\\t         */\\n\\t        isAnimationEnabled: function () {\\n\\t            if (env.node) {\\n\\t                return false;\\n\\t            }\\n\\n\\t            var animationEnabled = this.getShallow('animation');\\n\\t            if (animationEnabled) {\\n\\t                if (this.getData().count() > this.getShallow('animationThreshold')) {\\n\\t                    animationEnabled = false;\\n\\t                }\\n\\t            }\\n\\t            return animationEnabled;\\n\\t        },\\n\\n\\t        restoreData: function () {\\n\\t            set(this, 'data', get(this, 'dataBeforeProcessed').cloneShallow());\\n\\t        },\\n\\n\\t        getColorFromPalette: function (name, scope) {\\n\\t            var ecModel = this.ecModel;\\n\\t            // PENDING\\n\\t            var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope);\\n\\t            if (!color) {\\n\\t                color = ecModel.getColorFromPalette(name, scope);\\n\\t            }\\n\\t            return color;\\n\\t        },\\n\\n\\t        /**\\n\\t         * Get data indices for show tooltip content. See tooltip.\\n\\t         * @abstract\\n\\t         * @param {Array.<string>|string} dim\\n\\t         * @param {Array.<number>} value\\n\\t         * @param {module:echarts/coord/single/SingleAxis} baseAxis\\n\\t         * @return {Object} {dataIndices, nestestValue}.\\n\\t         */\\n\\t        getAxisTooltipData: null,\\n\\n\\t        /**\\n\\t         * See tooltip.\\n\\t         * @abstract\\n\\t         * @param {number} dataIndex\\n\\t         * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\\n\\t         */\\n\\t        getTooltipPosition: null\\n\\t    });\\n\\n\\t    zrUtil.mixin(SeriesModel, modelUtil.dataFormatMixin);\\n\\t    zrUtil.mixin(SeriesModel, colorPaletteMixin);\\n\\n\\t    module.exports = SeriesModel;\\n\\n\\n/***/ },\\n/* 79 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var Group = __webpack_require__(48);\\n\\t    var componentUtil = __webpack_require__(70);\\n\\t    var clazzUtil = __webpack_require__(13);\\n\\n\\t    var Component = function () {\\n\\t        /**\\n\\t         * @type {module:zrender/container/Group}\\n\\t         * @readOnly\\n\\t         */\\n\\t        this.group = new Group();\\n\\n\\t        /**\\n\\t         * @type {string}\\n\\t         * @readOnly\\n\\t         */\\n\\t        this.uid = componentUtil.getUID('viewComponent');\\n\\t    };\\n\\n\\t    Component.prototype = {\\n\\n\\t        constructor: Component,\\n\\n\\t        init: function (ecModel, api) {},\\n\\n\\t        render: function (componentModel, ecModel, api, payload) {},\\n\\n\\t        dispose: function () {}\\n\\n\\t    };\\n\\n\\t    var componentProto = Component.prototype;\\n\\t    componentProto.updateView\\n\\t        = componentProto.updateLayout\\n\\t        = componentProto.updateVisual\\n\\t        = function (seriesModel, ecModel, api, payload) {\\n\\t            // Do nothing;\\n\\t        };\\n\\t    // Enable Component.extend.\\n\\t    clazzUtil.enableClassExtend(Component);\\n\\n\\t    // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\\n\\t    clazzUtil.enableClassManagement(Component, {registerWhenExtend: true});\\n\\n\\t    module.exports = Component;\\n\\n\\n/***/ },\\n/* 80 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var Group = __webpack_require__(48);\\n\\t    var componentUtil = __webpack_require__(70);\\n\\t    var clazzUtil = __webpack_require__(13);\\n\\t    var modelUtil = __webpack_require__(5);\\n\\t    var zrUtil = __webpack_require__(4);\\n\\n\\t    function Chart() {\\n\\n\\t        /**\\n\\t         * @type {module:zrender/container/Group}\\n\\t         * @readOnly\\n\\t         */\\n\\t        this.group = new Group();\\n\\n\\t        /**\\n\\t         * @type {string}\\n\\t         * @readOnly\\n\\t         */\\n\\t        this.uid = componentUtil.getUID('viewChart');\\n\\t    }\\n\\n\\t    Chart.prototype = {\\n\\n\\t        type: 'chart',\\n\\n\\t        /**\\n\\t         * Init the chart\\n\\t         * @param  {module:echarts/model/Global} ecModel\\n\\t         * @param  {module:echarts/ExtensionAPI} api\\n\\t         */\\n\\t        init: function (ecModel, api) {},\\n\\n\\t        /**\\n\\t         * Render the chart\\n\\t         * @param  {module:echarts/model/Series} seriesModel\\n\\t         * @param  {module:echarts/model/Global} ecModel\\n\\t         * @param  {module:echarts/ExtensionAPI} api\\n\\t         * @param  {Object} payload\\n\\t         */\\n\\t        render: function (seriesModel, ecModel, api, payload) {},\\n\\n\\t        /**\\n\\t         * Highlight series or specified data item\\n\\t         * @param  {module:echarts/model/Series} seriesModel\\n\\t         * @param  {module:echarts/model/Global} ecModel\\n\\t         * @param  {module:echarts/ExtensionAPI} api\\n\\t         * @param  {Object} payload\\n\\t         */\\n\\t        highlight: function (seriesModel, ecModel, api, payload) {\\n\\t            toggleHighlight(seriesModel.getData(), payload, 'emphasis');\\n\\t        },\\n\\n\\t        /**\\n\\t         * Downplay series or specified data item\\n\\t         * @param  {module:echarts/model/Series} seriesModel\\n\\t         * @param  {module:echarts/model/Global} ecModel\\n\\t         * @param  {module:echarts/ExtensionAPI} api\\n\\t         * @param  {Object} payload\\n\\t         */\\n\\t        downplay: function (seriesModel, ecModel, api, payload) {\\n\\t            toggleHighlight(seriesModel.getData(), payload, 'normal');\\n\\t        },\\n\\n\\t        /**\\n\\t         * Remove self\\n\\t         * @param  {module:echarts/model/Global} ecModel\\n\\t         * @param  {module:echarts/ExtensionAPI} api\\n\\t         */\\n\\t        remove: function (ecModel, api) {\\n\\t            this.group.removeAll();\\n\\t        },\\n\\n\\t        /**\\n\\t         * Dispose self\\n\\t         * @param  {module:echarts/model/Global} ecModel\\n\\t         * @param  {module:echarts/ExtensionAPI} api\\n\\t         */\\n\\t        dispose: function () {}\\n\\n\\t        /**\\n\\t         * The view contains the given point.\\n\\t         * @interface\\n\\t         * @param {Array.<number>} point\\n\\t         * @return {boolean}\\n\\t         */\\n\\t        // containPoint: function () {}\\n\\n\\t    };\\n\\n\\t    var chartProto = Chart.prototype;\\n\\t    chartProto.updateView\\n\\t        = chartProto.updateLayout\\n\\t        = chartProto.updateVisual\\n\\t        = function (seriesModel, ecModel, api, payload) {\\n\\t            this.render(seriesModel, ecModel, api, payload);\\n\\t        };\\n\\n\\t    /**\\n\\t     * Set state of single element\\n\\t     * @param  {module:zrender/Element} el\\n\\t     * @param  {string} state\\n\\t     */\\n\\t    function elSetState(el, state) {\\n\\t        if (el) {\\n\\t            el.trigger(state);\\n\\t            if (el.type === 'group') {\\n\\t                for (var i = 0; i < el.childCount(); i++) {\\n\\t                    elSetState(el.childAt(i), state);\\n\\t                }\\n\\t            }\\n\\t        }\\n\\t    }\\n\\t    /**\\n\\t     * @param  {module:echarts/data/List} data\\n\\t     * @param  {Object} payload\\n\\t     * @param  {string} state 'normal'|'emphasis'\\n\\t     * @inner\\n\\t     */\\n\\t    function toggleHighlight(data, payload, state) {\\n\\t        var dataIndex = modelUtil.queryDataIndex(data, payload);\\n\\n\\t        if (dataIndex != null) {\\n\\t            zrUtil.each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\\n\\t                elSetState(data.getItemGraphicEl(dataIdx), state);\\n\\t            });\\n\\t        }\\n\\t        else {\\n\\t            data.eachItemGraphicEl(function (el) {\\n\\t                elSetState(el, state);\\n\\t            });\\n\\t        }\\n\\t    }\\n\\n\\t    // Enable Chart.extend.\\n\\t    clazzUtil.enableClassExtend(Chart, ['dispose']);\\n\\n\\t    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\\n\\t    clazzUtil.enableClassManagement(Chart, {registerWhenExtend: true});\\n\\n\\t    module.exports = Chart;\\n\\n\\n/***/ },\\n/* 81 */\\n/***/ function(module, exports) {\\n\\n\\t\\n\\n\\t    var lib = {};\\n\\n\\t    var ORIGIN_METHOD = '\\\\0__throttleOriginMethod';\\n\\t    var RATE = '\\\\0__throttleRate';\\n\\t    var THROTTLE_TYPE = '\\\\0__throttleType';\\n\\n\\t    /**\\n\\t     * @public\\n\\t     * @param {(Function)} fn\\n\\t     * @param {number} [delay=0] Unit: ms.\\n\\t     * @param {boolean} [debounce=false]\\n\\t     *        true: If call interval less than `delay`, only the last call works.\\n\\t     *        false: If call interval less than `delay, call works on fixed rate.\\n\\t     * @return {(Function)} throttled fn.\\n\\t     */\\n\\t    lib.throttle = function (fn, delay, debounce) {\\n\\n\\t        var currCall;\\n\\t        var lastCall = 0;\\n\\t        var lastExec = 0;\\n\\t        var timer = null;\\n\\t        var diff;\\n\\t        var scope;\\n\\t        var args;\\n\\t        var debounceNextCall;\\n\\n\\t        delay = delay || 0;\\n\\n\\t        function exec() {\\n\\t            lastExec = (new Date()).getTime();\\n\\t            timer = null;\\n\\t            fn.apply(scope, args || []);\\n\\t        }\\n\\n\\t        var cb = function () {\\n\\t            currCall = (new Date()).getTime();\\n\\t            scope = this;\\n\\t            args = arguments;\\n\\t            var thisDelay = debounceNextCall || delay;\\n\\t            var thisDebounce = debounceNextCall || debounce;\\n\\t            debounceNextCall = null;\\n\\t            diff = currCall - (thisDebounce ? lastCall : lastExec) - thisDelay;\\n\\n\\t            clearTimeout(timer);\\n\\n\\t            if (thisDebounce) {\\n\\t                timer = setTimeout(exec, thisDelay);\\n\\t            }\\n\\t            else {\\n\\t                if (diff >= 0) {\\n\\t                    exec();\\n\\t                }\\n\\t                else {\\n\\t                    timer = setTimeout(exec, -diff);\\n\\t                }\\n\\t            }\\n\\n\\t            lastCall = currCall;\\n\\t        };\\n\\n\\t        /**\\n\\t         * Clear throttle.\\n\\t         * @public\\n\\t         */\\n\\t        cb.clear = function () {\\n\\t            if (timer) {\\n\\t                clearTimeout(timer);\\n\\t                timer = null;\\n\\t            }\\n\\t        };\\n\\n\\t        /**\\n\\t         * Enable debounce once.\\n\\t         */\\n\\t        cb.debounceNextCall = function (debounceDelay) {\\n\\t            debounceNextCall = debounceDelay;\\n\\t        };\\n\\n\\t        return cb;\\n\\t    };\\n\\n\\t    /**\\n\\t     * Create throttle method or update throttle rate.\\n\\t     *\\n\\t     * @example\\n\\t     * ComponentView.prototype.render = function () {\\n\\t     *     ...\\n\\t     *     throttle.createOrUpdate(\\n\\t     *         this,\\n\\t     *         '_dispatchAction',\\n\\t     *         this.model.get('throttle'),\\n\\t     *         'fixRate'\\n\\t     *     );\\n\\t     * };\\n\\t     * ComponentView.prototype.remove = function () {\\n\\t     *     throttle.clear(this, '_dispatchAction');\\n\\t     * };\\n\\t     * ComponentView.prototype.dispose = function () {\\n\\t     *     throttle.clear(this, '_dispatchAction');\\n\\t     * };\\n\\t     *\\n\\t     * @public\\n\\t     * @param {Object} obj\\n\\t     * @param {string} fnAttr\\n\\t     * @param {number} [rate]\\n\\t     * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\\n\\t     * @return {Function} throttled function.\\n\\t     */\\n\\t    lib.createOrUpdate = function (obj, fnAttr, rate, throttleType) {\\n\\t        var fn = obj[fnAttr];\\n\\n\\t        if (!fn) {\\n\\t            return;\\n\\t        }\\n\\n\\t        var originFn = fn[ORIGIN_METHOD] || fn;\\n\\t        var lastThrottleType = fn[THROTTLE_TYPE];\\n\\t        var lastRate = fn[RATE];\\n\\n\\t        if (lastRate !== rate || lastThrottleType !== throttleType) {\\n\\t            if (rate == null || !throttleType) {\\n\\t                return (obj[fnAttr] = originFn);\\n\\t            }\\n\\n\\t            fn = obj[fnAttr] = lib.throttle(\\n\\t                originFn, rate, throttleType === 'debounce'\\n\\t            );\\n\\t            fn[ORIGIN_METHOD] = originFn;\\n\\t            fn[THROTTLE_TYPE] = throttleType;\\n\\t            fn[RATE] = rate;\\n\\t        }\\n\\n\\t        return fn;\\n\\t    };\\n\\n\\t    /**\\n\\t     * Clear throttle. Example see throttle.createOrUpdate.\\n\\t     *\\n\\t     * @public\\n\\t     * @param {Object} obj\\n\\t     * @param {string} fnAttr\\n\\t     */\\n\\t    lib.clear = function (obj, fnAttr) {\\n\\t        var fn = obj[fnAttr];\\n\\t        if (fn && fn[ORIGIN_METHOD]) {\\n\\t            obj[fnAttr] = fn[ORIGIN_METHOD];\\n\\t        }\\n\\t    };\\n\\n\\t    module.exports = lib;\\n\\n\\n\\n/***/ },\\n/* 82 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/*!\\n\\t * ZRender, a high performance 2d drawing library.\\n\\t *\\n\\t * Copyright (c) 2013, Baidu Inc.\\n\\t * All rights reserved.\\n\\t *\\n\\t * LICENSE\\n\\t * https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\\n\\t */\\n\\t// Global defines\\n\\n\\t    var guid = __webpack_require__(24);\\n\\t    var env = __webpack_require__(2);\\n\\t    var zrUtil = __webpack_require__(4);\\n\\n\\t    var Handler = __webpack_require__(83);\\n\\t    var Storage = __webpack_require__(85);\\n\\t    var Animation = __webpack_require__(87);\\n\\t    var HandlerProxy = __webpack_require__(90);\\n\\n\\t    var useVML = !env.canvasSupported;\\n\\n\\t    var painterCtors = {\\n\\t        canvas: __webpack_require__(92)\\n\\t    };\\n\\n\\t    var instances = {};    // ZRender实例map索引\\n\\n\\t    var zrender = {};\\n\\n\\t    /**\\n\\t     * @type {string}\\n\\t     */\\n\\t    zrender.version = '3.5.2';\\n\\n\\t    /**\\n\\t     * Initializing a zrender instance\\n\\t     * @param {HTMLElement} dom\\n\\t     * @param {Object} opts\\n\\t     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\\n\\t     * @param {number} [opts.devicePixelRatio]\\n\\t     * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\\n\\t     * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\\n\\t     * @return {module:zrender/ZRender}\\n\\t     */\\n\\t    zrender.init = function(dom, opts) {\\n\\t        var zr = new ZRender(guid(), dom, opts);\\n\\t        instances[zr.id] = zr;\\n\\t        return zr;\\n\\t    };\\n\\n\\t    /**\\n\\t     * Dispose zrender instance\\n\\t     * @param {module:zrender/ZRender} zr\\n\\t     */\\n\\t    zrender.dispose = function (zr) {\\n\\t        if (zr) {\\n\\t            zr.dispose();\\n\\t        }\\n\\t        else {\\n\\t            for (var key in instances) {\\n\\t                if (instances.hasOwnProperty(key)) {\\n\\t                    instances[key].dispose();\\n\\t                }\\n\\t            }\\n\\t            instances = {};\\n\\t        }\\n\\n\\t        return zrender;\\n\\t    };\\n\\n\\t    /**\\n\\t     * Get zrender instance by id\\n\\t     * @param {string} id zrender instance id\\n\\t     * @return {module:zrender/ZRender}\\n\\t     */\\n\\t    zrender.getInstance = function (id) {\\n\\t        return instances[id];\\n\\t    };\\n\\n\\t    zrender.registerPainter = function (name, Ctor) {\\n\\t        painterCtors[name] = Ctor;\\n\\t    };\\n\\n\\t    function delInstance(id) {\\n\\t        delete instances[id];\\n\\t    }\\n\\n\\t    /**\\n\\t     * @module zrender/ZRender\\n\\t     */\\n\\t    /**\\n\\t     * @constructor\\n\\t     * @alias module:zrender/ZRender\\n\\t     * @param {string} id\\n\\t     * @param {HTMLDomElement} dom\\n\\t     * @param {Object} opts\\n\\t     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\\n\\t     * @param {number} [opts.devicePixelRatio]\\n\\t     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\\n\\t     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\\n\\t     */\\n\\t    var ZRender = function(id, dom, opts) {\\n\\n\\t        opts = opts || {};\\n\\n\\t        /**\\n\\t         * @type {HTMLDomElement}\\n\\t         */\\n\\t        this.dom = dom;\\n\\n\\t        /**\\n\\t         * @type {string}\\n\\t         */\\n\\t        this.id = id;\\n\\n\\t        var self = this;\\n\\t        var storage = new Storage();\\n\\n\\t        var rendererType = opts.renderer;\\n\\t        // TODO WebGL\\n\\t        if (useVML) {\\n\\t            if (!painterCtors.vml) {\\n\\t                throw new Error('You need to require \\\\'zrender/vml/vml\\\\' to support IE8');\\n\\t            }\\n\\t            rendererType = 'vml';\\n\\t        }\\n\\t        else if (!rendererType || !painterCtors[rendererType]) {\\n\\t            rendererType = 'canvas';\\n\\t        }\\n\\t        var painter = new painterCtors[rendererType](dom, storage, opts);\\n\\n\\t        this.storage = storage;\\n\\t        this.painter = painter;\\n\\n\\t        var handerProxy = !env.node ? new HandlerProxy(painter.getViewportRoot()) : null;\\n\\t        this.handler = new Handler(storage, painter, handerProxy, painter.root);\\n\\n\\t        /**\\n\\t         * @type {module:zrender/animation/Animation}\\n\\t         */\\n\\t        this.animation = new Animation({\\n\\t            stage: {\\n\\t                update: zrUtil.bind(this.flush, this)\\n\\t            }\\n\\t        });\\n\\t        this.animation.start();\\n\\n\\t        /**\\n\\t         * @type {boolean}\\n\\t         * @private\\n\\t         */\\n\\t        this._needsRefresh;\\n\\n\\t        // 修改 storage.delFromStorage, 每次删除元素之前删除动画\\n\\t        // FIXME 有点ugly\\n\\t        var oldDelFromStorage = storage.delFromStorage;\\n\\t        var oldAddToStorage = storage.addToStorage;\\n\\n\\t        storage.delFromStorage = function (el) {\\n\\t            oldDelFromStorage.call(storage, el);\\n\\n\\t            el && el.removeSelfFromZr(self);\\n\\t        };\\n\\n\\t        storage.addToStorage = function (el) {\\n\\t            oldAddToStorage.call(storage, el);\\n\\n\\t            el.addSelfToZr(self);\\n\\t        };\\n\\t    };\\n\\n\\t    ZRender.prototype = {\\n\\n\\t        constructor: ZRender,\\n\\t        /**\\n\\t         * 获取实例唯一标识\\n\\t         * @return {string}\\n\\t         */\\n\\t        getId: function () {\\n\\t            return this.id;\\n\\t        },\\n\\n\\t        /**\\n\\t         * 添加元素\\n\\t         * @param  {module:zrender/Element} el\\n\\t         */\\n\\t        add: function (el) {\\n\\t            this.storage.addRoot(el);\\n\\t            this._needsRefresh = true;\\n\\t        },\\n\\n\\t        /**\\n\\t         * 删除元素\\n\\t         * @param  {module:zrender/Element} el\\n\\t         */\\n\\t        remove: function (el) {\\n\\t            this.storage.delRoot(el);\\n\\t            this._needsRefresh = true;\\n\\t        },\\n\\n\\t        /**\\n\\t         * Change configuration of layer\\n\\t         * @param {string} zLevel\\n\\t         * @param {Object} config\\n\\t         * @param {string} [config.clearColor=0] Clear color\\n\\t         * @param {string} [config.motionBlur=false] If enable motion blur\\n\\t         * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\\n\\t        */\\n\\t        configLayer: function (zLevel, config) {\\n\\t            this.painter.configLayer(zLevel, config);\\n\\t            this._needsRefresh = true;\\n\\t        },\\n\\n\\t        /**\\n\\t         * Repaint the canvas immediately\\n\\t         */\\n\\t        refreshImmediately: function () {\\n\\t            // Clear needsRefresh ahead to avoid something wrong happens in refresh\\n\\t            // Or it will cause zrender refreshes again and again.\\n\\t            this._needsRefresh = false;\\n\\t            this.painter.refresh();\\n\\t            /**\\n\\t             * Avoid trigger zr.refresh in Element#beforeUpdate hook\\n\\t             */\\n\\t            this._needsRefresh = false;\\n\\t        },\\n\\n\\t        /**\\n\\t         * Mark and repaint the canvas in the next frame of browser\\n\\t         */\\n\\t        refresh: function() {\\n\\t            this._needsRefresh = true;\\n\\t        },\\n\\n\\t        /**\\n\\t         * Perform all refresh\\n\\t         */\\n\\t        flush: function () {\\n\\t            if (this._needsRefresh) {\\n\\t                this.refreshImmediately();\\n\\t            }\\n\\t            if (this._needsRefreshHover) {\\n\\t                this.refreshHoverImmediately();\\n\\t            }\\n\\t        },\\n\\n\\t        /**\\n\\t         * Add element to hover layer\\n\\t         * @param  {module:zrender/Element} el\\n\\t         * @param {Object} style\\n\\t         */\\n\\t        addHover: function (el, style) {\\n\\t            if (this.painter.addHover) {\\n\\t                this.painter.addHover(el, style);\\n\\t                this.refreshHover();\\n\\t            }\\n\\t        },\\n\\n\\t        /**\\n\\t         * Add element from hover layer\\n\\t         * @param  {module:zrender/Element} el\\n\\t         */\\n\\t        removeHover: function (el) {\\n\\t            if (this.painter.removeHover) {\\n\\t                this.painter.removeHover(el);\\n\\t                this.refreshHover();\\n\\t            }\\n\\t        },\\n\\n\\t        /**\\n\\t         * Clear all hover elements in hover layer\\n\\t         * @param  {module:zrender/Element} el\\n\\t         */\\n\\t        clearHover: function () {\\n\\t            if (this.painter.clearHover) {\\n\\t                this.painter.clearHover();\\n\\t                this.refreshHover();\\n\\t            }\\n\\t        },\\n\\n\\t        /**\\n\\t         * Refresh hover in next frame\\n\\t         */\\n\\t        refreshHover: function () {\\n\\t            this._needsRefreshHover = true;\\n\\t        },\\n\\n\\t        /**\\n\\t         * Refresh hover immediately\\n\\t         */\\n\\t        refreshHoverImmediately: function () {\\n\\t            this._needsRefreshHover = false;\\n\\t            this.painter.refreshHover && this.painter.refreshHover();\\n\\t        },\\n\\n\\t        /**\\n\\t         * Resize the canvas.\\n\\t         * Should be invoked when container size is changed\\n\\t         * @param {Object} [opts]\\n\\t         * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\\n\\t         * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\\n\\t         */\\n\\t        resize: function(opts) {\\n\\t            opts = opts || {};\\n\\t            this.painter.resize(opts.width, opts.height);\\n\\t            this.handler.resize();\\n\\t        },\\n\\n\\t        /**\\n\\t         * Stop and clear all animation immediately\\n\\t         */\\n\\t        clearAnimation: function () {\\n\\t            this.animation.clear();\\n\\t        },\\n\\n\\t        /**\\n\\t         * Get container width\\n\\t         */\\n\\t        getWidth: function() {\\n\\t            return this.painter.getWidth();\\n\\t        },\\n\\n\\t        /**\\n\\t         * Get container height\\n\\t         */\\n\\t        getHeight: function() {\\n\\t            return this.painter.getHeight();\\n\\t        },\\n\\n\\t        /**\\n\\t         * Export the canvas as Base64 URL\\n\\t         * @param {string} type\\n\\t         * @param {string} [backgroundColor='#fff']\\n\\t         * @return {string} Base64 URL\\n\\t         */\\n\\t        // toDataURL: function(type, backgroundColor) {\\n\\t        //     return this.painter.getRenderedCanvas({\\n\\t        //         backgroundColor: backgroundColor\\n\\t        //     }).toDataURL(type);\\n\\t        // },\\n\\n\\t        /**\\n\\t         * Converting a path to image.\\n\\t         * It has much better performance of drawing image rather than drawing a vector path.\\n\\t         * @param {module:zrender/graphic/Path} e\\n\\t         * @param {number} width\\n\\t         * @param {number} height\\n\\t         */\\n\\t        pathToImage: function(e, dpr) {\\n\\t            return this.painter.pathToImage(e, dpr);\\n\\t        },\\n\\n\\t        /**\\n\\t         * Set default cursor\\n\\t         * @param {string} [cursorStyle='default'] 例如 crosshair\\n\\t         */\\n\\t        setCursorStyle: function (cursorStyle) {\\n\\t            this.handler.setCursorStyle(cursorStyle);\\n\\t        },\\n\\n\\t        /**\\n\\t         * Find hovered element\\n\\t         * @param {number} x\\n\\t         * @param {number} y\\n\\t         * @return {Object} {target, topTarget}\\n\\t         */\\n\\t        findHover: function (x, y) {\\n\\t            return this.handler.findHover(x, y);\\n\\t        },\\n\\n\\t        /**\\n\\t         * Bind event\\n\\t         *\\n\\t         * @param {string} eventName Event name\\n\\t         * @param {Function} eventHandler Handler function\\n\\t         * @param {Object} [context] Context object\\n\\t         */\\n\\t        on: function(eventName, eventHandler, context) {\\n\\t            this.handler.on(eventName, eventHandler, context);\\n\\t        },\\n\\n\\t        /**\\n\\t         * Unbind event\\n\\t         * @param {string} eventName Event name\\n\\t         * @param {Function} [eventHandler] Handler function\\n\\t         */\\n\\t        off: function(eventName, eventHandler) {\\n\\t            this.handler.off(eventName, eventHandler);\\n\\t        },\\n\\n\\t        /**\\n\\t         * Trigger event manually\\n\\t         *\\n\\t         * @param {string} eventName Event name\\n\\t         * @param {event=} event Event object\\n\\t         */\\n\\t        trigger: function (eventName, event) {\\n\\t            this.handler.trigger(eventName, event);\\n\\t        },\\n\\n\\n\\t        /**\\n\\t         * Clear all objects and the canvas.\\n\\t         */\\n\\t        clear: function () {\\n\\t            this.storage.delRoot();\\n\\t            this.painter.clear();\\n\\t        },\\n\\n\\t        /**\\n\\t         * Dispose self.\\n\\t         */\\n\\t        dispose: function () {\\n\\t            this.animation.stop();\\n\\n\\t            this.clear();\\n\\t            this.storage.dispose();\\n\\t            this.painter.dispose();\\n\\t            this.handler.dispose();\\n\\n\\t            this.animation =\\n\\t            this.storage =\\n\\t            this.painter =\\n\\t            this.handler = null;\\n\\n\\t            delInstance(this.id);\\n\\t        }\\n\\t    };\\n\\n\\t    module.exports = zrender;\\n\\n\\n\\n/***/ },\\n/* 83 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t'use strict';\\n\\t/**\\n\\t * Handler\\n\\t * @module zrender/Handler\\n\\t * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\\n\\t *         errorrik (errorrik@gmail.com)\\n\\t *         pissang (shenyi.914@gmail.com)\\n\\t */\\n\\n\\n\\t    var util = __webpack_require__(4);\\n\\t    var Draggable = __webpack_require__(84);\\n\\n\\t    var Eventful = __webpack_require__(25);\\n\\n\\t    var SILENT = 'silent';\\n\\n\\t    function makeEventPacket(eveType, targetInfo, event) {\\n\\t        return {\\n\\t            type: eveType,\\n\\t            event: event,\\n\\t            // target can only be an element that is not silent.\\n\\t            target: targetInfo.target,\\n\\t            // topTarget can be a silent element.\\n\\t            topTarget: targetInfo.topTarget,\\n\\t            cancelBubble: false,\\n\\t            offsetX: event.zrX,\\n\\t            offsetY: event.zrY,\\n\\t            gestureEvent: event.gestureEvent,\\n\\t            pinchX: event.pinchX,\\n\\t            pinchY: event.pinchY,\\n\\t            pinchScale: event.pinchScale,\\n\\t            wheelDelta: event.zrDelta,\\n\\t            zrByTouch: event.zrByTouch\\n\\t        };\\n\\t    }\\n\\n\\t    function EmptyProxy () {}\\n\\t    EmptyProxy.prototype.dispose = function () {};\\n\\n\\t    var handlerNames = [\\n\\t        'click', 'dblclick', 'mousewheel', 'mouseout',\\n\\t        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\\n\\t    ];\\n\\t    /**\\n\\t     * @alias module:zrender/Handler\\n\\t     * @constructor\\n\\t     * @extends module:zrender/mixin/Eventful\\n\\t     * @param {module:zrender/Storage} storage Storage instance.\\n\\t     * @param {module:zrender/Painter} painter Painter instance.\\n\\t     * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\\n\\t     * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\\n\\t     */\\n\\t    var Handler = function(storage, painter, proxy, painterRoot) {\\n\\t        Eventful.call(this);\\n\\n\\t        this.storage = storage;\\n\\n\\t        this.painter = painter;\\n\\n\\t        this.painterRoot = painterRoot;\\n\\n\\t        proxy = proxy || new EmptyProxy();\\n\\n\\t        /**\\n\\t         * Proxy of event. can be Dom, WebGLSurface, etc.\\n\\t         */\\n\\t        this.proxy = proxy;\\n\\n\\t        // Attach handler\\n\\t        proxy.handler = this;\\n\\n\\t        /**\\n\\t         * {target, topTarget}\\n\\t         * @private\\n\\t         * @type {Object}\\n\\t         */\\n\\t        this._hovered = {};\\n\\n\\t        /**\\n\\t         * @private\\n\\t         * @type {Date}\\n\\t         */\\n\\t        this._lastTouchMoment;\\n\\n\\t        /**\\n\\t         * @private\\n\\t         * @type {number}\\n\\t         */\\n\\t        this._lastX;\\n\\n\\t        /**\\n\\t         * @private\\n\\t         * @type {number}\\n\\t         */\\n\\t        this._lastY;\\n\\n\\n\\t        Draggable.call(this);\\n\\n\\t        util.each(handlerNames, function (name) {\\n\\t            proxy.on && proxy.on(name, this[name], this);\\n\\t        }, this);\\n\\t    };\\n\\n\\t    Handler.prototype = {\\n\\n\\t        constructor: Handler,\\n\\n\\t        mousemove: function (event) {\\n\\t            var x = event.zrX;\\n\\t            var y = event.zrY;\\n\\n\\t            var lastHovered = this._hovered;\\n\\t            var hovered = this._hovered = this.findHover(x, y);\\n\\t            var hoveredTarget = hovered.target;\\n\\t            var lastHoveredTarget = lastHovered.target;\\n\\n\\t            var proxy = this.proxy;\\n\\t            proxy.setCursor && proxy.setCursor(hoveredTarget ? hoveredTarget.cursor : 'default');\\n\\n\\t            // Mouse out on previous hovered element\\n\\t            if (lastHoveredTarget && hoveredTarget !== lastHoveredTarget && lastHoveredTarget.__zr) {\\n\\t                this.dispatchToElement(lastHovered, 'mouseout', event);\\n\\t            }\\n\\n\\t            // Mouse moving on one element\\n\\t            this.dispatchToElement(hovered, 'mousemove', event);\\n\\n\\t            // Mouse over on a new element\\n\\t            if (hoveredTarget && hoveredTarget !== lastHoveredTarget) {\\n\\t                this.dispatchToElement(hovered, 'mouseover', event);\\n\\t            }\\n\\t        },\\n\\n\\t        mouseout: function (event) {\\n\\t            this.dispatchToElement(this._hovered, 'mouseout', event);\\n\\n\\t            // There might be some doms created by upper layer application\\n\\t            // at the same level of painter.getViewportRoot() (e.g., tooltip\\n\\t            // dom created by echarts), where 'globalout' event should not\\n\\t            // be triggered when mouse enters these doms. (But 'mouseout'\\n\\t            // should be triggered at the original hovered element as usual).\\n\\t            var element = event.toElement || event.relatedTarget;\\n\\t            var innerDom;\\n\\t            do {\\n\\t                element = element && element.parentNode;\\n\\t            }\\n\\t            while (element && element.nodeType != 9 && !(\\n\\t                innerDom = element === this.painterRoot\\n\\t            ));\\n\\n\\t            !innerDom && this.trigger('globalout', {event: event});\\n\\t        },\\n\\n\\t        /**\\n\\t         * Resize\\n\\t         */\\n\\t        resize: function (event) {\\n\\t            this._hovered = {};\\n\\t        },\\n\\n\\t        /**\\n\\t         * Dispatch event\\n\\t         * @param {string} eventName\\n\\t         * @param {event=} eventArgs\\n\\t         */\\n\\t        dispatch: function (eventName, eventArgs) {\\n\\t            var handler = this[eventName];\\n\\t            handler && handler.call(this, eventArgs);\\n\\t        },\\n\\n\\t        /**\\n\\t         * Dispose\\n\\t         */\\n\\t        dispose: function () {\\n\\n\\t            this.proxy.dispose();\\n\\n\\t            this.storage =\\n\\t            this.proxy =\\n\\t            this.painter = null;\\n\\t        },\\n\\n\\t        /**\\n\\t         * 设置默认的cursor style\\n\\t         * @param {string} [cursorStyle='default'] 例如 crosshair\\n\\t         */\\n\\t        setCursorStyle: function (cursorStyle) {\\n\\t            var proxy = this.proxy;\\n\\t            proxy.setCursor && proxy.setCursor(cursorStyle);\\n\\t        },\\n\\n\\t        /**\\n\\t         * 事件分发代理\\n\\t         *\\n\\t         * @private\\n\\t         * @param {Object} targetInfo {target, topTarget} 目标图形元素\\n\\t         * @param {string} eventName 事件名称\\n\\t         * @param {Object} event 事件对象\\n\\t         */\\n\\t        dispatchToElement: function (targetInfo, eventName, event) {\\n\\t            targetInfo = targetInfo || {};\\n\\t            var eventHandler = 'on' + eventName;\\n\\t            var eventPacket = makeEventPacket(eventName, targetInfo, event);\\n\\n\\t            var el = targetInfo.target;\\n\\t            while (el) {\\n\\t                el[eventHandler]\\n\\t                    && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\\n\\n\\t                el.trigger(eventName, eventPacket);\\n\\n\\t                el = el.parent;\\n\\n\\t                if (eventPacket.cancelBubble) {\\n\\t                    break;\\n\\t                }\\n\\t            }\\n\\n\\t            if (!eventPacket.cancelBubble) {\\n\\t                // 冒泡到顶级 zrender 对象\\n\\t                this.trigger(eventName, eventPacket);\\n\\t                // 分发事件到用户自定义层\\n\\t                // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\\n\\t                this.painter && this.painter.eachOtherLayer(function (layer) {\\n\\t                    if (typeof(layer[eventHandler]) == 'function') {\\n\\t                        layer[eventHandler].call(layer, eventPacket);\\n\\t                    }\\n\\t                    if (layer.trigger) {\\n\\t                        layer.trigger(eventName, eventPacket);\\n\\t                    }\\n\\t                });\\n\\t            }\\n\\t        },\\n\\n\\t        /**\\n\\t         * @private\\n\\t         * @param {number} x\\n\\t         * @param {number} y\\n\\t         * @param {module:zrender/graphic/Displayable} exclude\\n\\t         * @return {model:zrender/Element}\\n\\t         * @method\\n\\t         */\\n\\t        findHover: function(x, y, exclude) {\\n\\t            var list = this.storage.getDisplayList();\\n\\t            var out = {};\\n\\n\\t            for (var i = list.length - 1; i >= 0 ; i--) {\\n\\t                var hoverCheckResult;\\n\\t                if (list[i] !== exclude\\n\\t                    // getDisplayList may include ignored item in VML mode\\n\\t                    && !list[i].ignore\\n\\t                    && (hoverCheckResult = isHover(list[i], x, y))\\n\\t                ) {\\n\\t                    !out.topTarget && (out.topTarget = list[i]);\\n\\t                    if (hoverCheckResult !== SILENT) {\\n\\t                        out.target = list[i];\\n\\t                        break;\\n\\t                    }\\n\\t                }\\n\\t            }\\n\\n\\t            return out;\\n\\t        }\\n\\t    };\\n\\n\\t    // Common handlers\\n\\t    util.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\\n\\t        Handler.prototype[name] = function (event) {\\n\\t            // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\\n\\t            var hovered = this.findHover(event.zrX, event.zrY);\\n\\t            var hoveredTarget = hovered.target;\\n\\n\\t            if (name === 'mousedown') {\\n\\t                this._downel = hoveredTarget;\\n\\t                // In case click triggered before mouseup\\n\\t                this._upel = hoveredTarget;\\n\\t            }\\n\\t            else if (name === 'mosueup') {\\n\\t                this._upel = hoveredTarget;\\n\\t            }\\n\\t            else if (name === 'click') {\\n\\t                if (this._downel !== this._upel) {\\n\\t                    return;\\n\\t                }\\n\\t            }\\n\\n\\t            this.dispatchToElement(hovered, name, event);\\n\\t        };\\n\\t    });\\n\\n\\t    function isHover(displayable, x, y) {\\n\\t        if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\\n\\t            var el = displayable;\\n\\t            var isSilent;\\n\\t            while (el) {\\n\\t                // If clipped by ancestor.\\n\\t                // FIXME: If clipPath has neither stroke nor fill,\\n\\t                // el.clipPath.contain(x, y) will always return false.\\n\\t                if (el.clipPath && !el.clipPath.contain(x, y))  {\\n\\t                    return false;\\n\\t                }\\n\\t                if (el.silent) {\\n\\t                    isSilent = true;\\n\\t                }\\n\\t                el = el.parent;\\n\\t            }\\n\\t            return isSilent ? SILENT : true;\\n\\t        }\\n\\n\\t        return false;\\n\\t    }\\n\\n\\t    util.mixin(Handler, Eventful);\\n\\t    util.mixin(Handler, Draggable);\\n\\n\\t    module.exports = Handler;\\n\\n\\n\\n/***/ },\\n/* 84 */\\n/***/ function(module, exports) {\\n\\n\\t// TODO Draggable for group\\n\\t// FIXME Draggable on element which has parent rotation or scale\\n\\n\\t    function Draggable() {\\n\\n\\t        this.on('mousedown', this._dragStart, this);\\n\\t        this.on('mousemove', this._drag, this);\\n\\t        this.on('mouseup', this._dragEnd, this);\\n\\t        this.on('globalout', this._dragEnd, this);\\n\\t        // this._dropTarget = null;\\n\\t        // this._draggingTarget = null;\\n\\n\\t        // this._x = 0;\\n\\t        // this._y = 0;\\n\\t    }\\n\\n\\t    Draggable.prototype = {\\n\\n\\t        constructor: Draggable,\\n\\n\\t        _dragStart: function (e) {\\n\\t            var draggingTarget = e.target;\\n\\t            if (draggingTarget && draggingTarget.draggable) {\\n\\t                this._draggingTarget = draggingTarget;\\n\\t                draggingTarget.dragging = true;\\n\\t                this._x = e.offsetX;\\n\\t                this._y = e.offsetY;\\n\\n\\t                this.dispatchToElement(param(draggingTarget, e), 'dragstart', e.event);\\n\\t            }\\n\\t        },\\n\\n\\t        _drag: function (e) {\\n\\t            var draggingTarget = this._draggingTarget;\\n\\t            if (draggingTarget) {\\n\\n\\t                var x = e.offsetX;\\n\\t                var y = e.offsetY;\\n\\n\\t                var dx = x - this._x;\\n\\t                var dy = y - this._y;\\n\\t                this._x = x;\\n\\t                this._y = y;\\n\\n\\t                draggingTarget.drift(dx, dy, e);\\n\\t                this.dispatchToElement(param(draggingTarget, e), 'drag', e.event);\\n\\n\\t                var dropTarget = this.findHover(x, y, draggingTarget).target;\\n\\t                var lastDropTarget = this._dropTarget;\\n\\t                this._dropTarget = dropTarget;\\n\\n\\t                if (draggingTarget !== dropTarget) {\\n\\t                    if (lastDropTarget && dropTarget !== lastDropTarget) {\\n\\t                        this.dispatchToElement(param(lastDropTarget, e), 'dragleave', e.event);\\n\\t                    }\\n\\t                    if (dropTarget && dropTarget !== lastDropTarget) {\\n\\t                        this.dispatchToElement(param(dropTarget, e), 'dragenter', e.event);\\n\\t                    }\\n\\t                }\\n\\t            }\\n\\t        },\\n\\n\\t        _dragEnd: function (e) {\\n\\t            var draggingTarget = this._draggingTarget;\\n\\n\\t            if (draggingTarget) {\\n\\t                draggingTarget.dragging = false;\\n\\t            }\\n\\n\\t            this.dispatchToElement(param(draggingTarget, e), 'dragend', e.event);\\n\\n\\t            if (this._dropTarget) {\\n\\t                this.dispatchToElement(param(this._dropTarget, e), 'drop', e.event);\\n\\t            }\\n\\n\\t            this._draggingTarget = null;\\n\\t            this._dropTarget = null;\\n\\t        }\\n\\n\\t    };\\n\\n\\t    function param(target, e) {\\n\\t        return {target: target, topTarget: e && e.topTarget};\\n\\t    }\\n\\n\\t    module.exports = Draggable;\\n\\n\\n/***/ },\\n/* 85 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t'use strict';\\n\\t/**\\n\\t * Storage内容仓库模块\\n\\t * @module zrender/Storage\\n\\t * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\\n\\t * @author errorrik (errorrik@gmail.com)\\n\\t * @author pissang (https://github.com/pissang/)\\n\\t */\\n\\n\\n\\t    var util = __webpack_require__(4);\\n\\t    var env = __webpack_require__(2);\\n\\n\\t    var Group = __webpack_require__(48);\\n\\n\\t    // Use timsort because in most case elements are partially sorted\\n\\t    // https://jsfiddle.net/pissang/jr4x7mdm/8/\\n\\t    var timsort = __webpack_require__(86);\\n\\n\\t    function shapeCompareFunc(a, b) {\\n\\t        if (a.zlevel === b.zlevel) {\\n\\t            if (a.z === b.z) {\\n\\t                // if (a.z2 === b.z2) {\\n\\t                //     // FIXME Slow has renderidx compare\\n\\t                //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\\n\\t                //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\\n\\t                //     return a.__renderidx - b.__renderidx;\\n\\t                // }\\n\\t                return a.z2 - b.z2;\\n\\t            }\\n\\t            return a.z - b.z;\\n\\t        }\\n\\t        return a.zlevel - b.zlevel;\\n\\t    }\\n\\t    /**\\n\\t     * 内容仓库 (M)\\n\\t     * @alias module:zrender/Storage\\n\\t     * @constructor\\n\\t     */\\n\\t    var Storage = function () {\\n\\t        this._roots = [];\\n\\n\\t        this._displayList = [];\\n\\n\\t        this._displayListLen = 0;\\n\\t    };\\n\\n\\t    Storage.prototype = {\\n\\n\\t        constructor: Storage,\\n\\n\\t        /**\\n\\t         * @param  {Function} cb\\n\\t         *\\n\\t         */\\n\\t        traverse: function (cb, context) {\\n\\t            for (var i = 0; i < this._roots.length; i++) {\\n\\t                this._roots[i].traverse(cb, context);\\n\\t            }\\n\\t        },\\n\\n\\t        /**\\n\\t         * 返回所有图形的绘制队列\\n\\t         * @param {boolean} [update=false] 是否在返回前更新该数组\\n\\t         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\\n\\t         *\\n\\t         * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\\n\\t         * @return {Array.<module:zrender/graphic/Displayable>}\\n\\t         */\\n\\t        getDisplayList: function (update, includeIgnore) {\\n\\t            includeIgnore = includeIgnore || false;\\n\\t            if (update) {\\n\\t                this.updateDisplayList(includeIgnore);\\n\\t            }\\n\\t            return this._displayList;\\n\\t        },\\n\\n\\t        /**\\n\\t         * 更新图形的绘制队列。\\n\\t         * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\\n\\t         * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\\n\\t         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\\n\\t         */\\n\\t        updateDisplayList: function (includeIgnore) {\\n\\t            this._displayListLen = 0;\\n\\t            var roots = this._roots;\\n\\t            var displayList = this._displayList;\\n\\t            for (var i = 0, len = roots.length; i < len; i++) {\\n\\t                this._updateAndAddDisplayable(roots[i], null, includeIgnore);\\n\\t            }\\n\\t            displayList.length = this._displayListLen;\\n\\n\\t            // for (var i = 0, len = displayList.length; i < len; i++) {\\n\\t            //     displayList[i].__renderidx = i;\\n\\t            // }\\n\\n\\t            // displayList.sort(shapeCompareFunc);\\n\\t            env.canvasSupported && timsort(displayList, shapeCompareFunc);\\n\\t        },\\n\\n\\t        _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\\n\\n\\t            if (el.ignore && !includeIgnore) {\\n\\t                return;\\n\\t            }\\n\\n\\t            el.beforeUpdate();\\n\\n\\t            if (el.__dirty) {\\n\\n\\t                el.update();\\n\\n\\t            }\\n\\n\\t            el.afterUpdate();\\n\\n\\t            var userSetClipPath = el.clipPath;\\n\\t            if (userSetClipPath) {\\n\\n\\t                // FIXME 效率影响\\n\\t                if (clipPaths) {\\n\\t                    clipPaths = clipPaths.slice();\\n\\t                }\\n\\t                else {\\n\\t                    clipPaths = [];\\n\\t                }\\n\\n\\t                var currentClipPath = userSetClipPath;\\n\\t                var parentClipPath = el;\\n\\t                // Recursively add clip path\\n\\t                while (currentClipPath) {\\n\\t                    // clipPath 的变换是基于使用这个 clipPath 的元素\\n\\t                    currentClipPath.parent = parentClipPath;\\n\\t                    currentClipPath.updateTransform();\\n\\n\\t                    clipPaths.push(currentClipPath);\\n\\n\\t                    parentClipPath = currentClipPath;\\n\\t                    currentClipPath = currentClipPath.clipPath;\\n\\t                }\\n\\t            }\\n\\n\\t            if (el.isGroup) {\\n\\t                var children = el._children;\\n\\n\\t                for (var i = 0; i < children.length; i++) {\\n\\t                    var child = children[i];\\n\\n\\t                    // Force to mark as dirty if group is dirty\\n\\t                    // FIXME __dirtyPath ?\\n\\t                    if (el.__dirty) {\\n\\t                        child.__dirty = true;\\n\\t                    }\\n\\n\\t                    this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\\n\\t                }\\n\\n\\t                // Mark group clean here\\n\\t                el.__dirty = false;\\n\\n\\t            }\\n\\t            else {\\n\\t                el.__clipPaths = clipPaths;\\n\\n\\t                this._displayList[this._displayListLen++] = el;\\n\\t            }\\n\\t        },\\n\\n\\t        /**\\n\\t         * 添加图形(Shape)或者组(Group)到根节点\\n\\t         * @param {module:zrender/Element} el\\n\\t         */\\n\\t        addRoot: function (el) {\\n\\t            if (el.__storage === this) {\\n\\t                return;\\n\\t            }\\n\\n\\t            if (el instanceof Group) {\\n\\t                el.addChildrenToStorage(this);\\n\\t            }\\n\\n\\t            this.addToStorage(el);\\n\\t            this._roots.push(el);\\n\\t        },\\n\\n\\t        /**\\n\\t         * 删除指定的图形(Shape)或者组(Group)\\n\\t         * @param {string|Array.<string>} [el] 如果为空清空整个Storage\\n\\t         */\\n\\t        delRoot: function (el) {\\n\\t            if (el == null) {\\n\\t                // 不指定el清空\\n\\t                for (var i = 0; i < this._roots.length; i++) {\\n\\t                    var root = this._roots[i];\\n\\t                    if (root instanceof Group) {\\n\\t                        root.delChildrenFromStorage(this);\\n\\t                    }\\n\\t                }\\n\\n\\t                this._roots = [];\\n\\t                this._displayList = [];\\n\\t                this._displayListLen = 0;\\n\\n\\t                return;\\n\\t            }\\n\\n\\t            if (el instanceof Array) {\\n\\t                for (var i = 0, l = el.length; i < l; i++) {\\n\\t                    this.delRoot(el[i]);\\n\\t                }\\n\\t                return;\\n\\t            }\\n\\n\\n\\t            var idx = util.indexOf(this._roots, el);\\n\\t            if (idx >= 0) {\\n\\t                this.delFromStorage(el);\\n\\t                this._roots.splice(idx, 1);\\n\\t                if (el instanceof Group) {\\n\\t                    el.delChildrenFromStorage(this);\\n\\t                }\\n\\t            }\\n\\t        },\\n\\n\\t        addToStorage: function (el) {\\n\\t            el.__storage = this;\\n\\t            el.dirty(false);\\n\\n\\t            return this;\\n\\t        },\\n\\n\\t        delFromStorage: function (el) {\\n\\t            if (el) {\\n\\t                el.__storage = null;\\n\\t            }\\n\\n\\t            return this;\\n\\t        },\\n\\n\\t        /**\\n\\t         * 清空并且释放Storage\\n\\t         */\\n\\t        dispose: function () {\\n\\t            this._renderList =\\n\\t            this._roots = null;\\n\\t        },\\n\\n\\t        displayableSortFunc: shapeCompareFunc\\n\\t    };\\n\\n\\t    module.exports = Storage;\\n\\n\\n\\n/***/ },\\n/* 86 */\\n/***/ function(module, exports) {\\n\\n\\t// https://github.com/mziccard/node-timsort\\n\\n\\t    var DEFAULT_MIN_MERGE = 32;\\n\\n\\t    var DEFAULT_MIN_GALLOPING = 7;\\n\\n\\t    var DEFAULT_TMP_STORAGE_LENGTH = 256;\\n\\n\\t    function minRunLength(n) {\\n\\t        var r = 0;\\n\\n\\t        while (n >= DEFAULT_MIN_MERGE) {\\n\\t            r |= n & 1;\\n\\t            n >>= 1;\\n\\t        }\\n\\n\\t        return n + r;\\n\\t    }\\n\\n\\t    function makeAscendingRun(array, lo, hi, compare) {\\n\\t        var runHi = lo + 1;\\n\\n\\t        if (runHi === hi) {\\n\\t            return 1;\\n\\t        }\\n\\n\\t        if (compare(array[runHi++], array[lo]) < 0) {\\n\\t            while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\\n\\t                runHi++;\\n\\t            }\\n\\n\\t            reverseRun(array, lo, runHi);\\n\\t        }\\n\\t        else {\\n\\t            while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\\n\\t                runHi++;\\n\\t            }\\n\\t        }\\n\\n\\t        return runHi - lo;\\n\\t    }\\n\\n\\t    function reverseRun(array, lo, hi) {\\n\\t        hi--;\\n\\n\\t        while (lo < hi) {\\n\\t            var t = array[lo];\\n\\t            array[lo++] = array[hi];\\n\\t            array[hi--] = t;\\n\\t        }\\n\\t    }\\n\\n\\t    function binaryInsertionSort(array, lo, hi, start, compare) {\\n\\t        if (start === lo) {\\n\\t            start++;\\n\\t        }\\n\\n\\t        for (; start < hi; start++) {\\n\\t            var pivot = array[start];\\n\\n\\t            var left = lo;\\n\\t            var right = start;\\n\\t            var mid;\\n\\n\\t            while (left < right) {\\n\\t                mid = left + right >>> 1;\\n\\n\\t                if (compare(pivot, array[mid]) < 0) {\\n\\t                    right = mid;\\n\\t                }\\n\\t                else {\\n\\t                    left = mid + 1;\\n\\t                }\\n\\t            }\\n\\n\\t            var n = start - left;\\n\\n\\t            switch (n) {\\n\\t                case 3:\\n\\t                    array[left + 3] = array[left + 2];\\n\\n\\t                case 2:\\n\\t                    array[left + 2] = array[left + 1];\\n\\n\\t                case 1:\\n\\t                    array[left + 1] = array[left];\\n\\t                    break;\\n\\t                default:\\n\\t                    while (n > 0) {\\n\\t                        array[left + n] = array[left + n - 1];\\n\\t                        n--;\\n\\t                    }\\n\\t            }\\n\\n\\t            array[left] = pivot;\\n\\t        }\\n\\t    }\\n\\n\\t    function gallopLeft(value, array, start, length, hint, compare) {\\n\\t        var lastOffset = 0;\\n\\t        var maxOffset = 0;\\n\\t        var offset = 1;\\n\\n\\t        if (compare(value, array[start + hint]) > 0) {\\n\\t            maxOffset = length - hint;\\n\\n\\t            while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\\n\\t                lastOffset = offset;\\n\\t                offset = (offset << 1) + 1;\\n\\n\\t                if (offset <= 0) {\\n\\t                    offset = maxOffset;\\n\\t                }\\n\\t            }\\n\\n\\t            if (offset > maxOffset) {\\n\\t                offset = maxOffset;\\n\\t            }\\n\\n\\t            lastOffset += hint;\\n\\t            offset += hint;\\n\\t        }\\n\\t        else {\\n\\t            maxOffset = hint + 1;\\n\\t            while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\\n\\t                lastOffset = offset;\\n\\t                offset = (offset << 1) + 1;\\n\\n\\t                if (offset <= 0) {\\n\\t                    offset = maxOffset;\\n\\t                }\\n\\t            }\\n\\t            if (offset > maxOffset) {\\n\\t                offset = maxOffset;\\n\\t            }\\n\\n\\t            var tmp = lastOffset;\\n\\t            lastOffset = hint - offset;\\n\\t            offset = hint - tmp;\\n\\t        }\\n\\n\\t        lastOffset++;\\n\\t        while (lastOffset < offset) {\\n\\t            var m = lastOffset + (offset - lastOffset >>> 1);\\n\\n\\t            if (compare(value, array[start + m]) > 0) {\\n\\t                lastOffset = m + 1;\\n\\t            }\\n\\t            else {\\n\\t                offset = m;\\n\\t            }\\n\\t        }\\n\\t        return offset;\\n\\t    }\\n\\n\\t    function gallopRight(value, array, start, length, hint, compare) {\\n\\t        var lastOffset = 0;\\n\\t        var maxOffset = 0;\\n\\t        var offset = 1;\\n\\n\\t        if (compare(value, array[start + hint]) < 0) {\\n\\t            maxOffset = hint + 1;\\n\\n\\t            while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\\n\\t                lastOffset = offset;\\n\\t                offset = (offset << 1) + 1;\\n\\n\\t                if (offset <= 0) {\\n\\t                    offset = maxOffset;\\n\\t                }\\n\\t            }\\n\\n\\t            if (offset > maxOffset) {\\n\\t                offset = maxOffset;\\n\\t            }\\n\\n\\t            var tmp = lastOffset;\\n\\t            lastOffset = hint - offset;\\n\\t            offset = hint - tmp;\\n\\t        }\\n\\t        else {\\n\\t            maxOffset = length - hint;\\n\\n\\t            while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\\n\\t                lastOffset = offset;\\n\\t                offset = (offset << 1) + 1;\\n\\n\\t                if (offset <= 0) {\\n\\t                    offset = maxOffset;\\n\\t                }\\n\\t            }\\n\\n\\t            if (offset > maxOffset) {\\n\\t                offset = maxOffset;\\n\\t            }\\n\\n\\t            lastOffset += hint;\\n\\t            offset += hint;\\n\\t        }\\n\\n\\t        lastOffset++;\\n\\n\\t        while (lastOffset < offset) {\\n\\t            var m = lastOffset + (offset - lastOffset >>> 1);\\n\\n\\t            if (compare(value, array[start + m]) < 0) {\\n\\t                offset = m;\\n\\t            }\\n\\t            else {\\n\\t                lastOffset = m + 1;\\n\\t            }\\n\\t        }\\n\\n\\t        return offset;\\n\\t    }\\n\\n\\t    function TimSort(array, compare) {\\n\\t        var minGallop = DEFAULT_MIN_GALLOPING;\\n\\t        var length = 0;\\n\\t        var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\\n\\t        var stackLength = 0;\\n\\t        var runStart;\\n\\t        var runLength;\\n\\t        var stackSize = 0;\\n\\n\\t        length = array.length;\\n\\n\\t        if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\\n\\t            tmpStorageLength = length >>> 1;\\n\\t        }\\n\\n\\t        var tmp = [];\\n\\n\\t        stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\\n\\n\\t        runStart = [];\\n\\t        runLength = [];\\n\\n\\t        function pushRun(_runStart, _runLength) {\\n\\t            runStart[stackSize] = _runStart;\\n\\t            runLength[stackSize] = _runLength;\\n\\t            stackSize += 1;\\n\\t        }\\n\\n\\t        function mergeRuns() {\\n\\t            while (stackSize > 1) {\\n\\t                var n = stackSize - 2;\\n\\n\\t                if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\\n\\t                    if (runLength[n - 1] < runLength[n + 1]) {\\n\\t                        n--;\\n\\t                    }\\n\\t                }\\n\\t                else if (runLength[n] > runLength[n + 1]) {\\n\\t                    break;\\n\\t                }\\n\\t                mergeAt(n);\\n\\t            }\\n\\t        }\\n\\n\\t        function forceMergeRuns() {\\n\\t            while (stackSize > 1) {\\n\\t                var n = stackSize - 2;\\n\\n\\t                if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\\n\\t                    n--;\\n\\t                }\\n\\n\\t                mergeAt(n);\\n\\t            }\\n\\t        }\\n\\n\\t        function mergeAt(i) {\\n\\t            var start1 = runStart[i];\\n\\t            var length1 = runLength[i];\\n\\t            var start2 = runStart[i + 1];\\n\\t            var length2 = runLength[i + 1];\\n\\n\\t            runLength[i] = length1 + length2;\\n\\n\\t            if (i === stackSize - 3) {\\n\\t                runStart[i + 1] = runStart[i + 2];\\n\\t                runLength[i + 1] = runLength[i + 2];\\n\\t            }\\n\\n\\t            stackSize--;\\n\\n\\t            var k = gallopRight(array[start2], array, start1, length1, 0, compare);\\n\\t            start1 += k;\\n\\t            length1 -= k;\\n\\n\\t            if (length1 === 0) {\\n\\t                return;\\n\\t            }\\n\\n\\t            length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\\n\\n\\t            if (length2 === 0) {\\n\\t                return;\\n\\t            }\\n\\n\\t            if (length1 <= length2) {\\n\\t                mergeLow(start1, length1, start2, length2);\\n\\t            }\\n\\t            else {\\n\\t                mergeHigh(start1, length1, start2, length2);\\n\\t            }\\n\\t        }\\n\\n\\t        function mergeLow(start1, length1, start2, length2) {\\n\\t            var i = 0;\\n\\n\\t            for (i = 0; i < length1; i++) {\\n\\t                tmp[i] = array[start1 + i];\\n\\t            }\\n\\n\\t            var cursor1 = 0;\\n\\t            var cursor2 = start2;\\n\\t            var dest = start1;\\n\\n\\t            array[dest++] = array[cursor2++];\\n\\n\\t            if (--length2 === 0) {\\n\\t                for (i = 0; i < length1; i++) {\\n\\t                    array[dest + i] = tmp[cursor1 + i];\\n\\t                }\\n\\t                return;\\n\\t            }\\n\\n\\t            if (length1 === 1) {\\n\\t                for (i = 0; i < length2; i++) {\\n\\t                    array[dest + i] = array[cursor2 + i];\\n\\t                }\\n\\t                array[dest + length2] = tmp[cursor1];\\n\\t                return;\\n\\t            }\\n\\n\\t            var _minGallop = minGallop;\\n\\t            var count1, count2, exit;\\n\\n\\t            while (1) {\\n\\t                count1 = 0;\\n\\t                count2 = 0;\\n\\t                exit = false;\\n\\n\\t                do {\\n\\t                    if (compare(array[cursor2], tmp[cursor1]) < 0) {\\n\\t                        array[dest++] = array[cursor2++];\\n\\t                        count2++;\\n\\t                        count1 = 0;\\n\\n\\t                        if (--length2 === 0) {\\n\\t                            exit = true;\\n\\t                            break;\\n\\t                        }\\n\\t                    }\\n\\t                    else {\\n\\t                        array[dest++] = tmp[cursor1++];\\n\\t                        count1++;\\n\\t                        count2 = 0;\\n\\t                        if (--length1 === 1) {\\n\\t                            exit = true;\\n\\t                            break;\\n\\t                        }\\n\\t                    }\\n\\t                } while ((count1 | count2) < _minGallop);\\n\\n\\t                if (exit) {\\n\\t                    break;\\n\\t                }\\n\\n\\t                do {\\n\\t                    count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\\n\\n\\t                    if (count1 !== 0) {\\n\\t                        for (i = 0; i < count1; i++) {\\n\\t                            array[dest + i] = tmp[cursor1 + i];\\n\\t                        }\\n\\n\\t                        dest += count1;\\n\\t                        cursor1 += count1;\\n\\t                        length1 -= count1;\\n\\t                        if (length1 <= 1) {\\n\\t                            exit = true;\\n\\t                            break;\\n\\t                        }\\n\\t                    }\\n\\n\\t                    array[dest++] = array[cursor2++];\\n\\n\\t                    if (--length2 === 0) {\\n\\t                        exit = true;\\n\\t                        break;\\n\\t                    }\\n\\n\\t                    count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\\n\\n\\t                    if (count2 !== 0) {\\n\\t                        for (i = 0; i < count2; i++) {\\n\\t                            array[dest + i] = array[cursor2 + i];\\n\\t                        }\\n\\n\\t                        dest += count2;\\n\\t                        cursor2 += count2;\\n\\t                        length2 -= count2;\\n\\n\\t                        if (length2 === 0) {\\n\\t                            exit = true;\\n\\t                            break;\\n\\t                        }\\n\\t                    }\\n\\t                    array[dest++] = tmp[cursor1++];\\n\\n\\t                    if (--length1 === 1) {\\n\\t                        exit = true;\\n\\t                        break;\\n\\t                    }\\n\\n\\t                    _minGallop--;\\n\\t                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\\n\\n\\t                if (exit) {\\n\\t                    break;\\n\\t                }\\n\\n\\t                if (_minGallop < 0) {\\n\\t                    _minGallop = 0;\\n\\t                }\\n\\n\\t                _minGallop += 2;\\n\\t            }\\n\\n\\t            minGallop = _minGallop;\\n\\n\\t            minGallop < 1 && (minGallop = 1);\\n\\n\\t            if (length1 === 1) {\\n\\t                for (i = 0; i < length2; i++) {\\n\\t                    array[dest + i] = array[cursor2 + i];\\n\\t                }\\n\\t                array[dest + length2] = tmp[cursor1];\\n\\t            }\\n\\t            else if (length1 === 0) {\\n\\t                throw new Error();\\n\\t                // throw new Error('mergeLow preconditions were not respected');\\n\\t            }\\n\\t            else {\\n\\t                for (i = 0; i < length1; i++) {\\n\\t                    array[dest + i] = tmp[cursor1 + i];\\n\\t                }\\n\\t            }\\n\\t        }\\n\\n\\t        function mergeHigh (start1, length1, start2, length2) {\\n\\t            var i = 0;\\n\\n\\t            for (i = 0; i < length2; i++) {\\n\\t                tmp[i] = array[start2 + i];\\n\\t            }\\n\\n\\t            var cursor1 = start1 + length1 - 1;\\n\\t            var cursor2 = length2 - 1;\\n\\t            var dest = start2 + length2 - 1;\\n\\t            var customCursor = 0;\\n\\t            var customDest = 0;\\n\\n\\t            array[dest--] = array[cursor1--];\\n\\n\\t            if (--length1 === 0) {\\n\\t                customCursor = dest - (length2 - 1);\\n\\n\\t                for (i = 0; i < length2; i++) {\\n\\t                    array[customCursor + i] = tmp[i];\\n\\t                }\\n\\n\\t                return;\\n\\t            }\\n\\n\\t            if (length2 === 1) {\\n\\t                dest -= length1;\\n\\t                cursor1 -= length1;\\n\\t                customDest = dest + 1;\\n\\t                customCursor = cursor1 + 1;\\n\\n\\t                for (i = length1 - 1; i >= 0; i--) {\\n\\t                    array[customDest + i] = array[customCursor + i];\\n\\t                }\\n\\n\\t                array[dest] = tmp[cursor2];\\n\\t                return;\\n\\t            }\\n\\n\\t            var _minGallop = minGallop;\\n\\n\\t            while (true) {\\n\\t                var count1 = 0;\\n\\t                var count2 = 0;\\n\\t                var exit = false;\\n\\n\\t                do {\\n\\t                    if (compare(tmp[cursor2], array[cursor1]) < 0) {\\n\\t                        array[dest--] = array[cursor1--];\\n\\t                        count1++;\\n\\t                        count2 = 0;\\n\\t                        if (--length1 === 0) {\\n\\t                            exit = true;\\n\\t                            break;\\n\\t                        }\\n\\t                    }\\n\\t                    else {\\n\\t                        array[dest--] = tmp[cursor2--];\\n\\t                        count2++;\\n\\t                        count1 = 0;\\n\\t                        if (--length2 === 1) {\\n\\t                            exit = true;\\n\\t                            break;\\n\\t                        }\\n\\t                    }\\n\\t                } while ((count1 | count2) < _minGallop);\\n\\n\\t                if (exit) {\\n\\t                    break;\\n\\t                }\\n\\n\\t                do {\\n\\t                    count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\\n\\n\\t                    if (count1 !== 0) {\\n\\t                        dest -= count1;\\n\\t                        cursor1 -= count1;\\n\\t                        length1 -= count1;\\n\\t                        customDest = dest + 1;\\n\\t                        customCursor = cursor1 + 1;\\n\\n\\t                        for (i = count1 - 1; i >= 0; i--) {\\n\\t                            array[customDest + i] = array[customCursor + i];\\n\\t                        }\\n\\n\\t                        if (length1 === 0) {\\n\\t                            exit = true;\\n\\t                            break;\\n\\t                        }\\n\\t                    }\\n\\n\\t                    array[dest--] = tmp[cursor2--];\\n\\n\\t                    if (--length2 === 1) {\\n\\t                        exit = true;\\n\\t                        break;\\n\\t                    }\\n\\n\\t                    count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\\n\\n\\t                    if (count2 !== 0) {\\n\\t                        dest -= count2;\\n\\t                        cursor2 -= count2;\\n\\t                        length2 -= count2;\\n\\t                        customDest = dest + 1;\\n\\t                        customCursor = cursor2 + 1;\\n\\n\\t                        for (i = 0; i < count2; i++) {\\n\\t                            array[customDest + i] = tmp[customCursor + i];\\n\\t                        }\\n\\n\\t                        if (length2 <= 1) {\\n\\t                            exit = true;\\n\\t                            break;\\n\\t                        }\\n\\t                    }\\n\\n\\t                    array[dest--] = array[cursor1--];\\n\\n\\t                    if (--length1 === 0) {\\n\\t                        exit = true;\\n\\t                        break;\\n\\t                    }\\n\\n\\t                    _minGallop--;\\n\\t                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\\n\\n\\t                if (exit) {\\n\\t                    break;\\n\\t                }\\n\\n\\t                if (_minGallop < 0) {\\n\\t                    _minGallop = 0;\\n\\t                }\\n\\n\\t                _minGallop += 2;\\n\\t            }\\n\\n\\t            minGallop = _minGallop;\\n\\n\\t            if (minGallop < 1) {\\n\\t                minGallop = 1;\\n\\t            }\\n\\n\\t            if (length2 === 1) {\\n\\t                dest -= length1;\\n\\t                cursor1 -= length1;\\n\\t                customDest = dest + 1;\\n\\t                customCursor = cursor1 + 1;\\n\\n\\t                for (i = length1 - 1; i >= 0; i--) {\\n\\t                    array[customDest + i] = array[customCursor + i];\\n\\t                }\\n\\n\\t                array[dest] = tmp[cursor2];\\n\\t            }\\n\\t            else if (length2 === 0) {\\n\\t                throw new Error();\\n\\t                // throw new Error('mergeHigh preconditions were not respected');\\n\\t            }\\n\\t            else {\\n\\t                customCursor = dest - (length2 - 1);\\n\\t                for (i = 0; i < length2; i++) {\\n\\t                    array[customCursor + i] = tmp[i];\\n\\t                }\\n\\t            }\\n\\t        }\\n\\n\\t        this.mergeRuns = mergeRuns;\\n\\t        this.forceMergeRuns = forceMergeRuns;\\n\\t        this.pushRun = pushRun;\\n\\t    }\\n\\n\\t    function sort(array, compare, lo, hi) {\\n\\t        if (!lo) {\\n\\t            lo = 0;\\n\\t        }\\n\\t        if (!hi) {\\n\\t            hi = array.length;\\n\\t        }\\n\\n\\t        var remaining = hi - lo;\\n\\n\\t        if (remaining < 2) {\\n\\t            return;\\n\\t        }\\n\\n\\t        var runLength = 0;\\n\\n\\t        if (remaining < DEFAULT_MIN_MERGE) {\\n\\t            runLength = makeAscendingRun(array, lo, hi, compare);\\n\\t            binaryInsertionSort(array, lo, hi, lo + runLength, compare);\\n\\t            return;\\n\\t        }\\n\\n\\t        var ts = new TimSort(array, compare);\\n\\n\\t        var minRun = minRunLength(remaining);\\n\\n\\t        do {\\n\\t            runLength = makeAscendingRun(array, lo, hi, compare);\\n\\t            if (runLength < minRun) {\\n\\t                var force = remaining;\\n\\t                if (force > minRun) {\\n\\t                    force = minRun;\\n\\t                }\\n\\n\\t                binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\\n\\t                runLength = force;\\n\\t            }\\n\\n\\t            ts.pushRun(lo, runLength);\\n\\t            ts.mergeRuns();\\n\\n\\t            remaining -= runLength;\\n\\t            lo += runLength;\\n\\t        } while (remaining !== 0);\\n\\n\\t        ts.forceMergeRuns();\\n\\t    }\\n\\n\\t    module.exports = sort;\\n\\n\\n/***/ },\\n/* 87 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t'use strict';\\n\\t/**\\n\\t * 动画主类, 调度和管理所有动画控制器\\n\\t *\\n\\t * @module zrender/animation/Animation\\n\\t * @author pissang(https://github.com/pissang)\\n\\t */\\n\\t// TODO Additive animation\\n\\t// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\\n\\t// https://developer.apple.com/videos/wwdc2014/#236\\n\\n\\n\\t    var util = __webpack_require__(4);\\n\\t    var Dispatcher = __webpack_require__(88).Dispatcher;\\n\\n\\t    var requestAnimationFrame = __webpack_require__(89);\\n\\n\\t    var Animator = __webpack_require__(28);\\n\\t    /**\\n\\t     * @typedef {Object} IZRenderStage\\n\\t     * @property {Function} update\\n\\t     */\\n\\n\\t    /**\\n\\t     * @alias module:zrender/animation/Animation\\n\\t     * @constructor\\n\\t     * @param {Object} [options]\\n\\t     * @param {Function} [options.onframe]\\n\\t     * @param {IZRenderStage} [options.stage]\\n\\t     * @example\\n\\t     *     var animation = new Animation();\\n\\t     *     var obj = {\\n\\t     *         x: 100,\\n\\t     *         y: 100\\n\\t     *     };\\n\\t     *     animation.animate(node.position)\\n\\t     *         .when(1000, {\\n\\t     *             x: 500,\\n\\t     *             y: 500\\n\\t     *         })\\n\\t     *         .when(2000, {\\n\\t     *             x: 100,\\n\\t     *             y: 100\\n\\t     *         })\\n\\t     *         .start('spline');\\n\\t     */\\n\\t    var Animation = function (options) {\\n\\n\\t        options = options || {};\\n\\n\\t        this.stage = options.stage || {};\\n\\n\\t        this.onframe = options.onframe || function() {};\\n\\n\\t        // private properties\\n\\t        this._clips = [];\\n\\n\\t        this._running = false;\\n\\n\\t        this._time;\\n\\n\\t        this._pausedTime;\\n\\n\\t        this._pauseStart;\\n\\n\\t        this._paused = false;\\n\\n\\t        Dispatcher.call(this);\\n\\t    };\\n\\n\\t    Animation.prototype = {\\n\\n\\t        constructor: Animation,\\n\\t        /**\\n\\t         * 添加 clip\\n\\t         * @param {module:zrender/animation/Clip} clip\\n\\t         */\\n\\t        addClip: function (clip) {\\n\\t            this._clips.push(clip);\\n\\t        },\\n\\t        /**\\n\\t         * 添加 animator\\n\\t         * @param {module:zrender/animation/Animator} animator\\n\\t         */\\n\\t        addAnimator: function (animator) {\\n\\t            animator.animation = this;\\n\\t            var clips = animator.getClips();\\n\\t            for (var i = 0; i < clips.length; i++) {\\n\\t                this.addClip(clips[i]);\\n\\t            }\\n\\t        },\\n\\t        /**\\n\\t         * 删除动画片段\\n\\t         * @param {module:zrender/animation/Clip} clip\\n\\t         */\\n\\t        removeClip: function(clip) {\\n\\t            var idx = util.indexOf(this._clips, clip);\\n\\t            if (idx >= 0) {\\n\\t                this._clips.splice(idx, 1);\\n\\t            }\\n\\t        },\\n\\n\\t        /**\\n\\t         * 删除动画片段\\n\\t         * @param {module:zrender/animation/Animator} animator\\n\\t         */\\n\\t        removeAnimator: function (animator) {\\n\\t            var clips = animator.getClips();\\n\\t            for (var i = 0; i < clips.length; i++) {\\n\\t                this.removeClip(clips[i]);\\n\\t            }\\n\\t            animator.animation = null;\\n\\t        },\\n\\n\\t        _update: function() {\\n\\n\\t            var time = new Date().getTime() - this._pausedTime;\\n\\t            var delta = time - this._time;\\n\\t            var clips = this._clips;\\n\\t            var len = clips.length;\\n\\n\\t            var deferredEvents = [];\\n\\t            var deferredClips = [];\\n\\t            for (var i = 0; i < len; i++) {\\n\\t                var clip = clips[i];\\n\\t                var e = clip.step(time, delta);\\n\\t                // Throw out the events need to be called after\\n\\t                // stage.update, like destroy\\n\\t                if (e) {\\n\\t                    deferredEvents.push(e);\\n\\t                    deferredClips.push(clip);\\n\\t                }\\n\\t            }\\n\\n\\t            // Remove the finished clip\\n\\t            for (var i = 0; i < len;) {\\n\\t                if (clips[i]._needsRemove) {\\n\\t                    clips[i] = clips[len - 1];\\n\\t                    clips.pop();\\n\\t                    len--;\\n\\t                }\\n\\t                else {\\n\\t                    i++;\\n\\t                }\\n\\t            }\\n\\n\\t            len = deferredEvents.length;\\n\\t            for (var i = 0; i < len; i++) {\\n\\t                deferredClips[i].fire(deferredEvents[i]);\\n\\t            }\\n\\n\\t            this._time = time;\\n\\n\\t            this.onframe(delta);\\n\\n\\t            this.trigger('frame', delta);\\n\\n\\t            if (this.stage.update) {\\n\\t                this.stage.update();\\n\\t            }\\n\\t        },\\n\\n\\t        _startLoop: function () {\\n\\t            var self = this;\\n\\n\\t            this._running = true;\\n\\n\\t            function step() {\\n\\t                if (self._running) {\\n\\n\\t                    requestAnimationFrame(step);\\n\\n\\t                    !self._paused && self._update();\\n\\t                }\\n\\t            }\\n\\n\\t            requestAnimationFrame(step);\\n\\t        },\\n\\n\\t        /**\\n\\t         * 开始运行动画\\n\\t         */\\n\\t        start: function () {\\n\\n\\t            this._time = new Date().getTime();\\n\\t            this._pausedTime = 0;\\n\\n\\t            this._startLoop();\\n\\t        },\\n\\t        /**\\n\\t         * 停止运行动画\\n\\t         */\\n\\t        stop: function () {\\n\\t            this._running = false;\\n\\t        },\\n\\n\\t        /**\\n\\t         * Pause\\n\\t         */\\n\\t        pause: function () {\\n\\t            if (!this._paused) {\\n\\t                this._pauseStart = new Date().getTime();\\n\\t                this._paused = true;\\n\\t            }\\n\\t        },\\n\\n\\t        /**\\n\\t         * Resume\\n\\t         */\\n\\t        resume: function () {\\n\\t            if (this._paused) {\\n\\t                this._pausedTime += (new Date().getTime()) - this._pauseStart;\\n\\t                this._paused = false;\\n\\t            }\\n\\t        },\\n\\n\\t        /**\\n\\t         * 清除所有动画片段\\n\\t         */\\n\\t        clear: function () {\\n\\t            this._clips = [];\\n\\t        },\\n\\t        /**\\n\\t         * 对一个目标创建一个animator对象，可以指定目标中的属性使用动画\\n\\t         * @param  {Object} target\\n\\t         * @param  {Object} options\\n\\t         * @param  {boolean} [options.loop=false] 是否循环播放动画\\n\\t         * @param  {Function} [options.getter=null]\\n\\t         *         如果指定getter函数，会通过getter函数取属性值\\n\\t         * @param  {Function} [options.setter=null]\\n\\t         *         如果指定setter函数，会通过setter函数设置属性值\\n\\t         * @return {module:zrender/animation/Animation~Animator}\\n\\t         */\\n\\t        // TODO Gap\\n\\t        animate: function (target, options) {\\n\\t            options = options || {};\\n\\n\\t            var animator = new Animator(\\n\\t                target,\\n\\t                options.loop,\\n\\t                options.getter,\\n\\t                options.setter\\n\\t            );\\n\\n\\t            this.addAnimator(animator);\\n\\n\\t            return animator;\\n\\t        }\\n\\t    };\\n\\n\\t    util.mixin(Animation, Dispatcher);\\n\\n\\t    module.exports = Animation;\\n\\n\\n\\n/***/ },\\n/* 88 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t'use strict';\\n\\t/**\\n\\t * 事件辅助类\\n\\t * @module zrender/core/event\\n\\t * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\\n\\t */\\n\\n\\n\\t    var Eventful = __webpack_require__(25);\\n\\t    var env = __webpack_require__(2);\\n\\n\\t    var isDomLevel2 = (typeof window !== 'undefined') && !!window.addEventListener;\\n\\n\\t    function getBoundingClientRect(el) {\\n\\t        // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\\n\\t        return el.getBoundingClientRect ? el.getBoundingClientRect() : {left: 0, top: 0};\\n\\t    }\\n\\n\\t    // `calculate` is optional, default false\\n\\t    function clientToLocal(el, e, out, calculate) {\\n\\t        out = out || {};\\n\\n\\t        // According to the W3C Working Draft, offsetX and offsetY should be relative\\n\\t        // to the padding edge of the target element. The only browser using this convention\\n\\t        // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\\n\\t        // not support the properties.\\n\\t        // (see http://www.jacklmoore.com/notes/mouse-position/)\\n\\t        // In zr painter.dom, padding edge equals to border edge.\\n\\n\\t        // FIXME\\n\\t        // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\\n\\t        // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\\n\\t        // is too complex. So css-transfrom dont support in this case temporarily.\\n\\t        if (calculate || !env.canvasSupported) {\\n\\t            defaultGetZrXY(el, e, out);\\n\\t        }\\n\\t        // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\\n\\t        // ancestor element, so we should make sure el is positioned (e.g., not position:static).\\n\\t        // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\\n\\t        // zoom-factor, overflow / opacity layers, transforms ...)\\n\\t        // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\\n\\t        // <https://bugs.jquery.com/ticket/8523#comment:14>\\n\\t        // BTW3, In ff, offsetX/offsetY is always 0.\\n\\t        else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\\n\\t            out.zrX = e.layerX;\\n\\t            out.zrY = e.layerY;\\n\\t        }\\n\\t        // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\\n\\t        else if (e.offsetX != null) {\\n\\t            out.zrX = e.offsetX;\\n\\t            out.zrY = e.offsetY;\\n\\t        }\\n\\t        // For some other device, e.g., IOS safari.\\n\\t        else {\\n\\t            defaultGetZrXY(el, e, out);\\n\\t        }\\n\\n\\t        return out;\\n\\t    }\\n\\n\\t    function defaultGetZrXY(el, e, out) {\\n\\t        // This well-known method below does not support css transform.\\n\\t        var box = getBoundingClientRect(el);\\n\\t        out.zrX = e.clientX - box.left;\\n\\t        out.zrY = e.clientY - box.top;\\n\\t    }\\n\\n\\t    /**\\n\\t     * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\\n\\t     * `calculate` is optional, default false.\\n\\t     */\\n\\t    function normalizeEvent(el, e, calculate) {\\n\\n\\t        e = e || window.event;\\n\\n\\t        if (e.zrX != null) {\\n\\t            return e;\\n\\t        }\\n\\n\\t        var eventType = e.type;\\n\\t        var isTouch = eventType && eventType.indexOf('touch') >= 0;\\n\\n\\t        if (!isTouch) {\\n\\t            clientToLocal(el, e, e, calculate);\\n\\t            e.zrDelta = (e.wheelDelta) ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\\n\\t        }\\n\\t        else {\\n\\t            var touch = eventType != 'touchend'\\n\\t                ? e.targetTouches[0]\\n\\t                : e.changedTouches[0];\\n\\t            touch && clientToLocal(el, touch, e, calculate);\\n\\t        }\\n\\n\\t        return e;\\n\\t    }\\n\\n\\t    function addEventListener(el, name, handler) {\\n\\t        if (isDomLevel2) {\\n\\t            el.addEventListener(name, handler);\\n\\t        }\\n\\t        else {\\n\\t            el.attachEvent('on' + name, handler);\\n\\t        }\\n\\t    }\\n\\n\\t    function removeEventListener(el, name, handler) {\\n\\t        if (isDomLevel2) {\\n\\t            el.removeEventListener(name, handler);\\n\\t        }\\n\\t        else {\\n\\t            el.detachEvent('on' + name, handler);\\n\\t        }\\n\\t    }\\n\\n\\t    /**\\n\\t     * preventDefault and stopPropagation.\\n\\t     * Notice: do not do that in zrender. Upper application\\n\\t     * do that if necessary.\\n\\t     *\\n\\t     * @memberOf module:zrender/core/event\\n\\t     * @method\\n\\t     * @param {Event} e : event对象\\n\\t     */\\n\\t    var stop = isDomLevel2\\n\\t        ? function (e) {\\n\\t            e.preventDefault();\\n\\t            e.stopPropagation();\\n\\t            e.cancelBubble = true;\\n\\t        }\\n\\t        : function (e) {\\n\\t            e.returnValue = false;\\n\\t            e.cancelBubble = true;\\n\\t        };\\n\\n\\t    module.exports = {\\n\\t        clientToLocal: clientToLocal,\\n\\t        normalizeEvent: normalizeEvent,\\n\\t        addEventListener: addEventListener,\\n\\t        removeEventListener: removeEventListener,\\n\\n\\t        stop: stop,\\n\\t        // 做向上兼容\\n\\t        Dispatcher: Eventful\\n\\t    };\\n\\n\\n\\n/***/ },\\n/* 89 */\\n/***/ function(module, exports) {\\n\\n\\t\\n\\n\\t    module.exports = (typeof window !== 'undefined' &&\\n\\t                ((window.requestAnimationFrame && window.requestAnimationFrame.bind(window))\\n\\t                // https://github.com/ecomfe/zrender/issues/189#issuecomment-224919809\\n\\t                || (window.msRequestAnimationFrame && window.msRequestAnimationFrame.bind(window))\\n\\t                || window.mozRequestAnimationFrame\\n\\t                || window.webkitRequestAnimationFrame)\\n\\t            )\\n\\t            || function (func) {\\n\\t                setTimeout(func, 16);\\n\\t            };\\n\\n\\n\\n/***/ },\\n/* 90 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var eventTool = __webpack_require__(88);\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var Eventful = __webpack_require__(25);\\n\\t    var env = __webpack_require__(2);\\n\\t    var GestureMgr = __webpack_require__(91);\\n\\n\\t    var addEventListener = eventTool.addEventListener;\\n\\t    var removeEventListener = eventTool.removeEventListener;\\n\\t    var normalizeEvent = eventTool.normalizeEvent;\\n\\n\\t    var TOUCH_CLICK_DELAY = 300;\\n\\n\\t    var mouseHandlerNames = [\\n\\t        'click', 'dblclick', 'mousewheel', 'mouseout',\\n\\t        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\\n\\t    ];\\n\\n\\t    var touchHandlerNames = [\\n\\t        'touchstart', 'touchend', 'touchmove'\\n\\t    ];\\n\\n\\t    var pointerEventNames = {\\n\\t        pointerdown: 1, pointerup: 1, pointermove: 1, pointerout: 1\\n\\t    };\\n\\n\\t    var pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\\n\\t        var nm = name.replace('mouse', 'pointer');\\n\\t        return pointerEventNames[nm] ? nm : name;\\n\\t    });\\n\\n\\t    function eventNameFix(name) {\\n\\t        return (name === 'mousewheel' && env.browser.firefox) ? 'DOMMouseScroll' : name;\\n\\t    }\\n\\n\\t    function processGesture(proxy, event, stage) {\\n\\t        var gestureMgr = proxy._gestureMgr;\\n\\n\\t        stage === 'start' && gestureMgr.clear();\\n\\n\\t        var gestureInfo = gestureMgr.recognize(\\n\\t            event,\\n\\t            proxy.handler.findHover(event.zrX, event.zrY, null).target,\\n\\t            proxy.dom\\n\\t        );\\n\\n\\t        stage === 'end' && gestureMgr.clear();\\n\\n\\t        // Do not do any preventDefault here. Upper application do that if necessary.\\n\\t        if (gestureInfo) {\\n\\t            var type = gestureInfo.type;\\n\\t            event.gestureEvent = type;\\n\\n\\t            proxy.handler.dispatchToElement({target: gestureInfo.target}, type, gestureInfo.event);\\n\\t        }\\n\\t    }\\n\\n\\t    // function onMSGestureChange(proxy, event) {\\n\\t    //     if (event.translationX || event.translationY) {\\n\\t    //         // mousemove is carried by MSGesture to reduce the sensitivity.\\n\\t    //         proxy.handler.dispatchToElement(event.target, 'mousemove', event);\\n\\t    //     }\\n\\t    //     if (event.scale !== 1) {\\n\\t    //         event.pinchX = event.offsetX;\\n\\t    //         event.pinchY = event.offsetY;\\n\\t    //         event.pinchScale = event.scale;\\n\\t    //         proxy.handler.dispatchToElement(event.target, 'pinch', event);\\n\\t    //     }\\n\\t    // }\\n\\n\\t    /**\\n\\t     * Prevent mouse event from being dispatched after Touch Events action\\n\\t     * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\\n\\t     * 1. Mobile browsers dispatch mouse events 300ms after touchend.\\n\\t     * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\\n\\t     * Result: Blocking Mouse Events for 700ms.\\n\\t     */\\n\\t    function setTouchTimer(instance) {\\n\\t        instance._touching = true;\\n\\t        clearTimeout(instance._touchTimer);\\n\\t        instance._touchTimer = setTimeout(function () {\\n\\t            instance._touching = false;\\n\\t        }, 700);\\n\\t    }\\n\\n\\n\\t    var domHandlers = {\\n\\t        /**\\n\\t         * Mouse move handler\\n\\t         * @inner\\n\\t         * @param {Event} event\\n\\t         */\\n\\t        mousemove: function (event) {\\n\\t            event = normalizeEvent(this.dom, event);\\n\\n\\t            this.trigger('mousemove', event);\\n\\t        },\\n\\n\\t        /**\\n\\t         * Mouse out handler\\n\\t         * @inner\\n\\t         * @param {Event} event\\n\\t         */\\n\\t        mouseout: function (event) {\\n\\t            event = normalizeEvent(this.dom, event);\\n\\n\\t            var element = event.toElement || event.relatedTarget;\\n\\t            if (element != this.dom) {\\n\\t                while (element && element.nodeType != 9) {\\n\\t                    // 忽略包含在root中的dom引起的mouseOut\\n\\t                    if (element === this.dom) {\\n\\t                        return;\\n\\t                    }\\n\\n\\t                    element = element.parentNode;\\n\\t                }\\n\\t            }\\n\\n\\t            this.trigger('mouseout', event);\\n\\t        },\\n\\n\\t        /**\\n\\t         * Touch开始响应函数\\n\\t         * @inner\\n\\t         * @param {Event} event\\n\\t         */\\n\\t        touchstart: function (event) {\\n\\t            // Default mouse behaviour should not be disabled here.\\n\\t            // For example, page may needs to be slided.\\n\\t            event = normalizeEvent(this.dom, event);\\n\\n\\t            // Mark touch, which is useful in distinguish touch and\\n\\t            // mouse event in upper applicatoin.\\n\\t            event.zrByTouch = true;\\n\\n\\t            this._lastTouchMoment = new Date();\\n\\n\\t            processGesture(this, event, 'start');\\n\\n\\t            // In touch device, trigger `mousemove`(`mouseover`) should\\n\\t            // be triggered, and must before `mousedown` triggered.\\n\\t            domHandlers.mousemove.call(this, event);\\n\\n\\t            domHandlers.mousedown.call(this, event);\\n\\n\\t            setTouchTimer(this);\\n\\t        },\\n\\n\\t        /**\\n\\t         * Touch移动响应函数\\n\\t         * @inner\\n\\t         * @param {Event} event\\n\\t         */\\n\\t        touchmove: function (event) {\\n\\n\\t            event = normalizeEvent(this.dom, event);\\n\\n\\t            // Mark touch, which is useful in distinguish touch and\\n\\t            // mouse event in upper applicatoin.\\n\\t            event.zrByTouch = true;\\n\\n\\t            processGesture(this, event, 'change');\\n\\n\\t            // Mouse move should always be triggered no matter whether\\n\\t            // there is gestrue event, because mouse move and pinch may\\n\\t            // be used at the same time.\\n\\t            domHandlers.mousemove.call(this, event);\\n\\n\\t            setTouchTimer(this);\\n\\t        },\\n\\n\\t        /**\\n\\t         * Touch结束响应函数\\n\\t         * @inner\\n\\t         * @param {Event} event\\n\\t         */\\n\\t        touchend: function (event) {\\n\\n\\t            event = normalizeEvent(this.dom, event);\\n\\n\\t            // Mark touch, which is useful in distinguish touch and\\n\\t            // mouse event in upper applicatoin.\\n\\t            event.zrByTouch = true;\\n\\n\\t            processGesture(this, event, 'end');\\n\\n\\t            domHandlers.mouseup.call(this, event);\\n\\n\\t            // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\\n\\t            // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\\n\\t            // we can conveniently implement \\\"hover style\\\" in both PC and touch device just\\n\\t            // by listening to `mouseover` to add \\\"hover style\\\" and listening to `mouseout`\\n\\t            // to remove \\\"hover style\\\" on an element, without any additional code for\\n\\t            // compatibility. (`mouseout` will not be triggered in `touchend`, so \\\"hover\\n\\t            // style\\\" will remain for user view)\\n\\n\\t            // click event should always be triggered no matter whether\\n\\t            // there is gestrue event. System click can not be prevented.\\n\\t            if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\\n\\t                domHandlers.click.call(this, event);\\n\\t            }\\n\\n\\t            setTouchTimer(this);\\n\\t        },\\n\\n\\t        pointerdown: function (event) {\\n\\t            domHandlers.mousedown.call(this, event);\\n\\n\\t            // if (useMSGuesture(this, event)) {\\n\\t            //     this._msGesture.addPointer(event.pointerId);\\n\\t            // }\\n\\t        },\\n\\n\\t        pointermove: function (event) {\\n\\t            // FIXME\\n\\t            // pointermove is so sensitive that it always triggered when\\n\\t            // tap(click) on touch screen, which affect some judgement in\\n\\t            // upper application. So, we dont support mousemove on MS touch\\n\\t            // device yet.\\n\\t            if (!isPointerFromTouch(event)) {\\n\\t                domHandlers.mousemove.call(this, event);\\n\\t            }\\n\\t        },\\n\\n\\t        pointerup: function (event) {\\n\\t            domHandlers.mouseup.call(this, event);\\n\\t        },\\n\\n\\t        pointerout: function (event) {\\n\\t            // pointerout will be triggered when tap on touch screen\\n\\t            // (IE11+/Edge on MS Surface) after click event triggered,\\n\\t            // which is inconsistent with the mousout behavior we defined\\n\\t            // in touchend. So we unify them.\\n\\t            // (check domHandlers.touchend for detailed explanation)\\n\\t            if (!isPointerFromTouch(event)) {\\n\\t                domHandlers.mouseout.call(this, event);\\n\\t            }\\n\\t        }\\n\\t    };\\n\\n\\t    function isPointerFromTouch(event) {\\n\\t        var pointerType = event.pointerType;\\n\\t        return pointerType === 'pen' || pointerType === 'touch';\\n\\t    }\\n\\n\\t    // function useMSGuesture(handlerProxy, event) {\\n\\t    //     return isPointerFromTouch(event) && !!handlerProxy._msGesture;\\n\\t    // }\\n\\n\\t    // Common handlers\\n\\t    zrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\\n\\t        domHandlers[name] = function (event) {\\n\\t            event = normalizeEvent(this.dom, event);\\n\\t            this.trigger(name, event);\\n\\t        };\\n\\t    });\\n\\n\\t    /**\\n\\t     * 为控制类实例初始化dom 事件处理函数\\n\\t     *\\n\\t     * @inner\\n\\t     * @param {module:zrender/Handler} instance 控制类实例\\n\\t     */\\n\\t    function initDomHandler(instance) {\\n\\t        zrUtil.each(touchHandlerNames, function (name) {\\n\\t            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\\n\\t        });\\n\\n\\t        zrUtil.each(pointerHandlerNames, function (name) {\\n\\t            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\\n\\t        });\\n\\n\\t        zrUtil.each(mouseHandlerNames, function (name) {\\n\\t            instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\\n\\t        });\\n\\n\\t        function makeMouseHandler(fn, instance) {\\n\\t            return function () {\\n\\t                if (instance._touching) {\\n\\t                    return;\\n\\t                }\\n\\t                return fn.apply(instance, arguments);\\n\\t            };\\n\\t        }\\n\\t    }\\n\\n\\n\\t    function HandlerDomProxy(dom) {\\n\\t        Eventful.call(this);\\n\\n\\t        this.dom = dom;\\n\\n\\t        /**\\n\\t         * @private\\n\\t         * @type {boolean}\\n\\t         */\\n\\t        this._touching = false;\\n\\n\\t        /**\\n\\t         * @private\\n\\t         * @type {number}\\n\\t         */\\n\\t        this._touchTimer;\\n\\n\\t        /**\\n\\t         * @private\\n\\t         * @type {module:zrender/core/GestureMgr}\\n\\t         */\\n\\t        this._gestureMgr = new GestureMgr();\\n\\n\\t        this._handlers = {};\\n\\n\\t        initDomHandler(this);\\n\\n\\t        if (env.pointerEventsSupported) { // Only IE11+/Edge\\n\\t            // 1. On devices that both enable touch and mouse (e.g., MS Surface and lenovo X240),\\n\\t            // IE11+/Edge do not trigger touch event, but trigger pointer event and mouse event\\n\\t            // at the same time.\\n\\t            // 2. On MS Surface, it probablely only trigger mousedown but no mouseup when tap on\\n\\t            // screen, which do not occurs in pointer event.\\n\\t            // So we use pointer event to both detect touch gesture and mouse behavior.\\n\\t            mountHandlers(pointerHandlerNames, this);\\n\\n\\t            // FIXME\\n\\t            // Note: MS Gesture require CSS touch-action set. But touch-action is not reliable,\\n\\t            // which does not prevent defuault behavior occasionally (which may cause view port\\n\\t            // zoomed in but use can not zoom it back). And event.preventDefault() does not work.\\n\\t            // So we have to not to use MSGesture and not to support touchmove and pinch on MS\\n\\t            // touch screen. And we only support click behavior on MS touch screen now.\\n\\n\\t            // MS Gesture Event is only supported on IE11+/Edge and on Windows 8+.\\n\\t            // We dont support touch on IE on win7.\\n\\t            // See <https://msdn.microsoft.com/en-us/library/dn433243(v=vs.85).aspx>\\n\\t            // if (typeof MSGesture === 'function') {\\n\\t            //     (this._msGesture = new MSGesture()).target = dom; // jshint ignore:line\\n\\t            //     dom.addEventListener('MSGestureChange', onMSGestureChange);\\n\\t            // }\\n\\t        }\\n\\t        else {\\n\\t            if (env.touchEventsSupported) {\\n\\t                mountHandlers(touchHandlerNames, this);\\n\\t                // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\\n\\t                // addEventListener(root, 'mouseout', this._mouseoutHandler);\\n\\t            }\\n\\n\\t            // 1. Considering some devices that both enable touch and mouse event (like on MS Surface\\n\\t            // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\\n\\t            // mouse event can not be handle in those devices.\\n\\t            // 2. On MS Surface, Chrome will trigger both touch event and mouse event. How to prevent\\n\\t            // mouseevent after touch event triggered, see `setTouchTimer`.\\n\\t            mountHandlers(mouseHandlerNames, this);\\n\\t        }\\n\\n\\t        function mountHandlers(handlerNames, instance) {\\n\\t            zrUtil.each(handlerNames, function (name) {\\n\\t                addEventListener(dom, eventNameFix(name), instance._handlers[name]);\\n\\t            }, instance);\\n\\t        }\\n\\t    }\\n\\n\\t    var handlerDomProxyProto = HandlerDomProxy.prototype;\\n\\t    handlerDomProxyProto.dispose = function () {\\n\\t        var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\\n\\n\\t        for (var i = 0; i < handlerNames.length; i++) {\\n\\t            var name = handlerNames[i];\\n\\t            removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\\n\\t        }\\n\\t    };\\n\\n\\t    handlerDomProxyProto.setCursor = function (cursorStyle) {\\n\\t        this.dom.style.cursor = cursorStyle || 'default';\\n\\t    };\\n\\n\\t    zrUtil.mixin(HandlerDomProxy, Eventful);\\n\\n\\t    module.exports = HandlerDomProxy;\\n\\n\\n/***/ },\\n/* 91 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t'use strict';\\n\\t/**\\n\\t * Only implements needed gestures for mobile.\\n\\t */\\n\\n\\n\\t    var eventUtil = __webpack_require__(88);\\n\\n\\t    var GestureMgr = function () {\\n\\n\\t        /**\\n\\t         * @private\\n\\t         * @type {Array.<Object>}\\n\\t         */\\n\\t        this._track = [];\\n\\t    };\\n\\n\\t    GestureMgr.prototype = {\\n\\n\\t        constructor: GestureMgr,\\n\\n\\t        recognize: function (event, target, root) {\\n\\t            this._doTrack(event, target, root);\\n\\t            return this._recognize(event);\\n\\t        },\\n\\n\\t        clear: function () {\\n\\t            this._track.length = 0;\\n\\t            return this;\\n\\t        },\\n\\n\\t        _doTrack: function (event, target, root) {\\n\\t            var touches = event.touches;\\n\\n\\t            if (!touches) {\\n\\t                return;\\n\\t            }\\n\\n\\t            var trackItem = {\\n\\t                points: [],\\n\\t                touches: [],\\n\\t                target: target,\\n\\t                event: event\\n\\t            };\\n\\n\\t            for (var i = 0, len = touches.length; i < len; i++) {\\n\\t                var touch = touches[i];\\n\\t                var pos = eventUtil.clientToLocal(root, touch, {});\\n\\t                trackItem.points.push([pos.zrX, pos.zrY]);\\n\\t                trackItem.touches.push(touch);\\n\\t            }\\n\\n\\t            this._track.push(trackItem);\\n\\t        },\\n\\n\\t        _recognize: function (event) {\\n\\t            for (var eventName in recognizers) {\\n\\t                if (recognizers.hasOwnProperty(eventName)) {\\n\\t                    var gestureInfo = recognizers[eventName](this._track, event);\\n\\t                    if (gestureInfo) {\\n\\t                        return gestureInfo;\\n\\t                    }\\n\\t                }\\n\\t            }\\n\\t        }\\n\\t    };\\n\\n\\t    function dist(pointPair) {\\n\\t        var dx = pointPair[1][0] - pointPair[0][0];\\n\\t        var dy = pointPair[1][1] - pointPair[0][1];\\n\\n\\t        return Math.sqrt(dx * dx + dy * dy);\\n\\t    }\\n\\n\\t    function center(pointPair) {\\n\\t        return [\\n\\t            (pointPair[0][0] + pointPair[1][0]) / 2,\\n\\t            (pointPair[0][1] + pointPair[1][1]) / 2\\n\\t        ];\\n\\t    }\\n\\n\\t    var recognizers = {\\n\\n\\t        pinch: function (track, event) {\\n\\t            var trackLen = track.length;\\n\\n\\t            if (!trackLen) {\\n\\t                return;\\n\\t            }\\n\\n\\t            var pinchEnd = (track[trackLen - 1] || {}).points;\\n\\t            var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\\n\\n\\t            if (pinchPre\\n\\t                && pinchPre.length > 1\\n\\t                && pinchEnd\\n\\t                && pinchEnd.length > 1\\n\\t            ) {\\n\\t                var pinchScale = dist(pinchEnd) / dist(pinchPre);\\n\\t                !isFinite(pinchScale) && (pinchScale = 1);\\n\\n\\t                event.pinchScale = pinchScale;\\n\\n\\t                var pinchCenter = center(pinchEnd);\\n\\t                event.pinchX = pinchCenter[0];\\n\\t                event.pinchY = pinchCenter[1];\\n\\n\\t                return {\\n\\t                    type: 'pinch',\\n\\t                    target: track[0].target,\\n\\t                    event: event\\n\\t                };\\n\\t            }\\n\\t        }\\n\\n\\t        // Only pinch currently.\\n\\t    };\\n\\n\\t    module.exports = GestureMgr;\\n\\n\\n\\n/***/ },\\n/* 92 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t'use strict';\\n\\t/**\\n\\t * Default canvas painter\\n\\t * @module zrender/Painter\\n\\t * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\\n\\t *         errorrik (errorrik@gmail.com)\\n\\t *         pissang (https://www.github.com/pissang)\\n\\t */\\n\\t \\n\\n\\t    var config = __webpack_require__(34);\\n\\t    var util = __webpack_require__(4);\\n\\t    var log = __webpack_require__(33);\\n\\t    var BoundingRect = __webpack_require__(9);\\n\\t    var timsort = __webpack_require__(86);\\n\\n\\t    var Layer = __webpack_require__(93);\\n\\n\\t    var requestAnimationFrame = __webpack_require__(89);\\n\\n\\t    // PENDIGN\\n\\t    // Layer exceeds MAX_PROGRESSIVE_LAYER_NUMBER may have some problem when flush directly second time.\\n\\t    //\\n\\t    // Maximum progressive layer. When exceeding this number. All elements will be drawed in the last layer.\\n\\t    var MAX_PROGRESSIVE_LAYER_NUMBER = 5;\\n\\n\\t    function parseInt10(val) {\\n\\t        return parseInt(val, 10);\\n\\t    }\\n\\n\\t    function isLayerValid(layer) {\\n\\t        if (!layer) {\\n\\t            return false;\\n\\t        }\\n\\n\\t        if (layer.__builtin__) {\\n\\t            return true;\\n\\t        }\\n\\n\\t        if (typeof(layer.resize) !== 'function'\\n\\t            || typeof(layer.refresh) !== 'function'\\n\\t        ) {\\n\\t            return false;\\n\\t        }\\n\\n\\t        return true;\\n\\t    }\\n\\n\\t    function preProcessLayer(layer) {\\n\\t        layer.__unusedCount++;\\n\\t    }\\n\\n\\t    function postProcessLayer(layer) {\\n\\t        if (layer.__unusedCount == 1) {\\n\\t            layer.clear();\\n\\t        }\\n\\t    }\\n\\n\\t    var tmpRect = new BoundingRect(0, 0, 0, 0);\\n\\t    var viewRect = new BoundingRect(0, 0, 0, 0);\\n\\t    function isDisplayableCulled(el, width, height) {\\n\\t        tmpRect.copy(el.getBoundingRect());\\n\\t        if (el.transform) {\\n\\t            tmpRect.applyTransform(el.transform);\\n\\t        }\\n\\t        viewRect.width = width;\\n\\t        viewRect.height = height;\\n\\t        return !tmpRect.intersect(viewRect);\\n\\t    }\\n\\n\\t    function isClipPathChanged(clipPaths, prevClipPaths) {\\n\\t        if (clipPaths == prevClipPaths) { // Can both be null or undefined\\n\\t            return false;\\n\\t        }\\n\\n\\t        if (!clipPaths || !prevClipPaths || (clipPaths.length !== prevClipPaths.length)) {\\n\\t            return true;\\n\\t        }\\n\\t        for (var i = 0; i < clipPaths.length; i++) {\\n\\t            if (clipPaths[i] !== prevClipPaths[i]) {\\n\\t                return true;\\n\\t            }\\n\\t        }\\n\\t    }\\n\\n\\t    function doClip(clipPaths, ctx) {\\n\\t        for (var i = 0; i < clipPaths.length; i++) {\\n\\t            var clipPath = clipPaths[i];\\n\\n\\t            clipPath.setTransform(ctx);\\n\\t            ctx.beginPath();\\n\\t            clipPath.buildPath(ctx, clipPath.shape);\\n\\t            ctx.clip();\\n\\t            // Transform back\\n\\t            clipPath.restoreTransform(ctx);\\n\\t        }\\n\\t    }\\n\\n\\t    function createRoot(width, height) {\\n\\t        var domRoot = document.createElement('div');\\n\\n\\t        // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\\n\\t        domRoot.style.cssText = [\\n\\t            'position:relative',\\n\\t            'overflow:hidden',\\n\\t            'width:' + width + 'px',\\n\\t            'height:' + height + 'px',\\n\\t            'padding:0',\\n\\t            'margin:0',\\n\\t            'border-width:0'\\n\\t        ].join(';') + ';';\\n\\n\\t        return domRoot;\\n\\t    }\\n\\n\\t    /**\\n\\t     * @alias module:zrender/Painter\\n\\t     * @constructor\\n\\t     * @param {HTMLElement} root 绘图容器\\n\\t     * @param {module:zrender/Storage} storage\\n\\t     * @param {Ojbect} opts\\n\\t     */\\n\\t    var Painter = function (root, storage, opts) {\\n\\t        // In node environment using node-canvas\\n\\t        var singleCanvas = !root.nodeName // In node ?\\n\\t            || root.nodeName.toUpperCase() === 'CANVAS';\\n\\n\\t        this._opts = opts = util.extend({}, opts || {});\\n\\n\\t        /**\\n\\t         * @type {number}\\n\\t         */\\n\\t        this.dpr = opts.devicePixelRatio || config.devicePixelRatio;\\n\\t        /**\\n\\t         * @type {boolean}\\n\\t         * @private\\n\\t         */\\n\\t        this._singleCanvas = singleCanvas;\\n\\t        /**\\n\\t         * 绘图容器\\n\\t         * @type {HTMLElement}\\n\\t         */\\n\\t        this.root = root;\\n\\n\\t        var rootStyle = root.style;\\n\\n\\t        if (rootStyle) {\\n\\t            rootStyle['-webkit-tap-highlight-color'] = 'transparent';\\n\\t            rootStyle['-webkit-user-select'] =\\n\\t            rootStyle['user-select'] =\\n\\t            rootStyle['-webkit-touch-callout'] = 'none';\\n\\n\\t            root.innerHTML = '';\\n\\t        }\\n\\n\\t        /**\\n\\t         * @type {module:zrender/Storage}\\n\\t         */\\n\\t        this.storage = storage;\\n\\n\\t        /**\\n\\t         * @type {Array.<number>}\\n\\t         * @private\\n\\t         */\\n\\t        var zlevelList = this._zlevelList = [];\\n\\n\\t        /**\\n\\t         * @type {Object.<string, module:zrender/Layer>}\\n\\t         * @private\\n\\t         */\\n\\t        var layers = this._layers = {};\\n\\n\\t        /**\\n\\t         * @type {Object.<string, Object>}\\n\\t         * @type {private}\\n\\t         */\\n\\t        this._layerConfig = {};\\n\\n\\t        if (!singleCanvas) {\\n\\t            this._width = this._getSize(0);\\n\\t            this._height = this._getSize(1);\\n\\n\\t            var domRoot = this._domRoot = createRoot(\\n\\t                this._width, this._height\\n\\t            );\\n\\t            root.appendChild(domRoot);\\n\\t        }\\n\\t        else {\\n\\t            if (opts.width != null) {\\n\\t                root.width = opts.width;\\n\\t            }\\n\\t            if (opts.height != null) {\\n\\t                root.height = opts.height;\\n\\t            }\\n\\t            // Use canvas width and height directly\\n\\t            var width = root.width;\\n\\t            var height = root.height;\\n\\t            this._width = width;\\n\\t            this._height = height;\\n\\n\\t            // Create layer if only one given canvas\\n\\t            // Device pixel ratio is fixed to 1 because given canvas has its specified width and height\\n\\t            var mainLayer = new Layer(root, this, 1);\\n\\t            mainLayer.initContext();\\n\\t            // FIXME Use canvas width and height\\n\\t            // mainLayer.resize(width, height);\\n\\t            layers[0] = mainLayer;\\n\\t            zlevelList.push(0);\\n\\n\\t            this._domRoot = root;\\n\\t        }\\n\\n\\t        // Layers for progressive rendering\\n\\t        this._progressiveLayers = [];\\n\\n\\t        /**\\n\\t         * @type {module:zrender/Layer}\\n\\t         * @private\\n\\t         */\\n\\t        this._hoverlayer;\\n\\n\\t        this._hoverElements = [];\\n\\t    };\\n\\n\\t    Painter.prototype = {\\n\\n\\t        constructor: Painter,\\n\\n\\t        /**\\n\\t         * If painter use a single canvas\\n\\t         * @return {boolean}\\n\\t         */\\n\\t        isSingleCanvas: function () {\\n\\t            return this._singleCanvas;\\n\\t        },\\n\\t        /**\\n\\t         * @return {HTMLDivElement}\\n\\t         */\\n\\t        getViewportRoot: function () {\\n\\t            return this._domRoot;\\n\\t        },\\n\\n\\t        /**\\n\\t         * 刷新\\n\\t         * @param {boolean} [paintAll=false] 强制绘制所有displayable\\n\\t         */\\n\\t        refresh: function (paintAll) {\\n\\n\\t            var list = this.storage.getDisplayList(true);\\n\\n\\t            var zlevelList = this._zlevelList;\\n\\n\\t            this._paintList(list, paintAll);\\n\\n\\t            // Paint custum layers\\n\\t            for (var i = 0; i < zlevelList.length; i++) {\\n\\t                var z = zlevelList[i];\\n\\t                var layer = this._layers[z];\\n\\t                if (!layer.__builtin__ && layer.refresh) {\\n\\t                    layer.refresh();\\n\\t                }\\n\\t            }\\n\\n\\t            this.refreshHover();\\n\\n\\t            if (this._progressiveLayers.length) {\\n\\t                this._startProgessive();\\n\\t            }\\n\\n\\t            return this;\\n\\t        },\\n\\n\\t        addHover: function (el, hoverStyle) {\\n\\t            if (el.__hoverMir) {\\n\\t                return;\\n\\t            }\\n\\t            var elMirror = new el.constructor({\\n\\t                style: el.style,\\n\\t                shape: el.shape\\n\\t            });\\n\\t            elMirror.__from = el;\\n\\t            el.__hoverMir = elMirror;\\n\\t            elMirror.setStyle(hoverStyle);\\n\\t            this._hoverElements.push(elMirror);\\n\\t        },\\n\\n\\t        removeHover: function (el) {\\n\\t            var elMirror = el.__hoverMir;\\n\\t            var hoverElements = this._hoverElements;\\n\\t            var idx = util.indexOf(hoverElements, elMirror);\\n\\t            if (idx >= 0) {\\n\\t                hoverElements.splice(idx, 1);\\n\\t            }\\n\\t            el.__hoverMir = null;\\n\\t        },\\n\\n\\t        clearHover: function (el) {\\n\\t            var hoverElements = this._hoverElements;\\n\\t            for (var i = 0; i < hoverElements.length; i++) {\\n\\t                var from = hoverElements[i].__from;\\n\\t                if (from) {\\n\\t                    from.__hoverMir = null;\\n\\t                }\\n\\t            }\\n\\t            hoverElements.length = 0;\\n\\t        },\\n\\n\\t        refreshHover: function () {\\n\\t            var hoverElements = this._hoverElements;\\n\\t            var len = hoverElements.length;\\n\\t            var hoverLayer = this._hoverlayer;\\n\\t            hoverLayer && hoverLayer.clear();\\n\\n\\t            if (!len) {\\n\\t                return;\\n\\t            }\\n\\t            timsort(hoverElements, this.storage.displayableSortFunc);\\n\\n\\t            // Use a extream large zlevel\\n\\t            // FIXME?\\n\\t            if (!hoverLayer) {\\n\\t                hoverLayer = this._hoverlayer = this.getLayer(1e5);\\n\\t            }\\n\\n\\t            var scope = {};\\n\\t            hoverLayer.ctx.save();\\n\\t            for (var i = 0; i < len;) {\\n\\t                var el = hoverElements[i];\\n\\t                var originalEl = el.__from;\\n\\t                // Original el is removed\\n\\t                // PENDING\\n\\t                if (!(originalEl && originalEl.__zr)) {\\n\\t                    hoverElements.splice(i, 1);\\n\\t                    originalEl.__hoverMir = null;\\n\\t                    len--;\\n\\t                    continue;\\n\\t                }\\n\\t                i++;\\n\\n\\t                // Use transform\\n\\t                // FIXME style and shape ?\\n\\t                if (!originalEl.invisible) {\\n\\t                    el.transform = originalEl.transform;\\n\\t                    el.invTransform = originalEl.invTransform;\\n\\t                    el.__clipPaths = originalEl.__clipPaths;\\n\\t                    // el.\\n\\t                    this._doPaintEl(el, hoverLayer, true, scope);\\n\\t                }\\n\\t            }\\n\\t            hoverLayer.ctx.restore();\\n\\t        },\\n\\n\\t        _startProgessive: function () {\\n\\t            var self = this;\\n\\n\\t            if (!self._furtherProgressive) {\\n\\t                return;\\n\\t            }\\n\\n\\t            // Use a token to stop progress steps triggered by\\n\\t            // previous zr.refresh calling.\\n\\t            var token = self._progressiveToken = +new Date();\\n\\n\\t            self._progress++;\\n\\t            requestAnimationFrame(step);\\n\\n\\t            function step() {\\n\\t                // In case refreshed or disposed\\n\\t                if (token === self._progressiveToken && self.storage) {\\n\\n\\t                    self._doPaintList(self.storage.getDisplayList());\\n\\n\\t                    if (self._furtherProgressive) {\\n\\t                        self._progress++;\\n\\t                        requestAnimationFrame(step);\\n\\t                    }\\n\\t                    else {\\n\\t                        self._progressiveToken = -1;\\n\\t                    }\\n\\t                }\\n\\t            }\\n\\t        },\\n\\n\\t        _clearProgressive: function () {\\n\\t            this._progressiveToken = -1;\\n\\t            this._progress = 0;\\n\\t            util.each(this._progressiveLayers, function (layer) {\\n\\t                layer.__dirty && layer.clear();\\n\\t            });\\n\\t        },\\n\\n\\t        _paintList: function (list, paintAll) {\\n\\n\\t            if (paintAll == null) {\\n\\t                paintAll = false;\\n\\t            }\\n\\n\\t            this._updateLayerStatus(list);\\n\\n\\t            this._clearProgressive();\\n\\n\\t            this.eachBuiltinLayer(preProcessLayer);\\n\\n\\t            this._doPaintList(list, paintAll);\\n\\n\\t            this.eachBuiltinLayer(postProcessLayer);\\n\\t        },\\n\\n\\t        _doPaintList: function (list, paintAll) {\\n\\t            var currentLayer;\\n\\t            var currentZLevel;\\n\\t            var ctx;\\n\\n\\t            // var invTransform = [];\\n\\t            var scope;\\n\\n\\t            var progressiveLayerIdx = 0;\\n\\t            var currentProgressiveLayer;\\n\\n\\t            var width = this._width;\\n\\t            var height = this._height;\\n\\t            var layerProgress;\\n\\t            var frame = this._progress;\\n\\t            function flushProgressiveLayer(layer) {\\n\\t                var dpr = ctx.dpr || 1;\\n\\t                ctx.save();\\n\\t                ctx.globalAlpha = 1;\\n\\t                ctx.shadowBlur = 0;\\n\\t                // Avoid layer don't clear in next progressive frame\\n\\t                currentLayer.__dirty = true;\\n\\t                ctx.setTransform(1, 0, 0, 1, 0, 0);\\n\\t                ctx.drawImage(layer.dom, 0, 0, width * dpr, height * dpr);\\n\\t                ctx.restore();\\n\\t            }\\n\\n\\t            for (var i = 0, l = list.length; i < l; i++) {\\n\\t                var el = list[i];\\n\\t                var elZLevel = this._singleCanvas ? 0 : el.zlevel;\\n\\n\\t                var elFrame = el.__frame;\\n\\n\\t                // Flush at current context\\n\\t                // PENDING\\n\\t                if (elFrame < 0 && currentProgressiveLayer) {\\n\\t                    flushProgressiveLayer(currentProgressiveLayer);\\n\\t                    currentProgressiveLayer = null;\\n\\t                }\\n\\n\\t                // Change draw layer\\n\\t                if (currentZLevel !== elZLevel) {\\n\\t                    if (ctx) {\\n\\t                        ctx.restore();\\n\\t                    }\\n\\n\\t                    // Reset scope\\n\\t                    scope = {};\\n\\n\\t                    // Only 0 zlevel if only has one canvas\\n\\t                    currentZLevel = elZLevel;\\n\\t                    currentLayer = this.getLayer(currentZLevel);\\n\\n\\t                    if (!currentLayer.__builtin__) {\\n\\t                        log(\\n\\t                            'ZLevel ' + currentZLevel\\n\\t                            + ' has been used by unkown layer ' + currentLayer.id\\n\\t                        );\\n\\t                    }\\n\\n\\t                    ctx = currentLayer.ctx;\\n\\t                    ctx.save();\\n\\n\\t                    // Reset the count\\n\\t                    currentLayer.__unusedCount = 0;\\n\\n\\t                    if (currentLayer.__dirty || paintAll) {\\n\\t                        currentLayer.clear();\\n\\t                    }\\n\\t                }\\n\\n\\t                if (!(currentLayer.__dirty || paintAll)) {\\n\\t                    continue;\\n\\t                }\\n\\n\\t                if (elFrame >= 0) {\\n\\t                    // Progressive layer changed\\n\\t                    if (!currentProgressiveLayer) {\\n\\t                        currentProgressiveLayer = this._progressiveLayers[\\n\\t                            Math.min(progressiveLayerIdx++, MAX_PROGRESSIVE_LAYER_NUMBER - 1)\\n\\t                        ];\\n\\n\\t                        currentProgressiveLayer.ctx.save();\\n\\t                        currentProgressiveLayer.renderScope = {};\\n\\n\\t                        if (currentProgressiveLayer\\n\\t                            && (currentProgressiveLayer.__progress > currentProgressiveLayer.__maxProgress)\\n\\t                        ) {\\n\\t                            // flushProgressiveLayer(currentProgressiveLayer);\\n\\t                            // Quick jump all progressive elements\\n\\t                            // All progressive element are not dirty, jump over and flush directly\\n\\t                            i = currentProgressiveLayer.__nextIdxNotProg - 1;\\n\\t                            // currentProgressiveLayer = null;\\n\\t                            continue;\\n\\t                        }\\n\\n\\t                        layerProgress = currentProgressiveLayer.__progress;\\n\\n\\t                        if (!currentProgressiveLayer.__dirty) {\\n\\t                            // Keep rendering\\n\\t                            frame = layerProgress;\\n\\t                        }\\n\\n\\t                        currentProgressiveLayer.__progress = frame + 1;\\n\\t                    }\\n\\n\\t                    if (elFrame === frame) {\\n\\t                        this._doPaintEl(el, currentProgressiveLayer, true, currentProgressiveLayer.renderScope);\\n\\t                    }\\n\\t                }\\n\\t                else {\\n\\t                    this._doPaintEl(el, currentLayer, paintAll, scope);\\n\\t                }\\n\\n\\t                el.__dirty = false;\\n\\t            }\\n\\n\\t            if (currentProgressiveLayer) {\\n\\t                flushProgressiveLayer(currentProgressiveLayer);\\n\\t            }\\n\\n\\t            // Restore the lastLayer ctx\\n\\t            ctx && ctx.restore();\\n\\t            // If still has clipping state\\n\\t            // if (scope.prevElClipPaths) {\\n\\t            //     ctx.restore();\\n\\t            // }\\n\\n\\t            this._furtherProgressive = false;\\n\\t            util.each(this._progressiveLayers, function (layer) {\\n\\t                if (layer.__maxProgress >= layer.__progress) {\\n\\t                    this._furtherProgressive = true;\\n\\t                }\\n\\t            }, this);\\n\\t        },\\n\\n\\t        _doPaintEl: function (el, currentLayer, forcePaint, scope) {\\n\\t            var ctx = currentLayer.ctx;\\n\\t            var m = el.transform;\\n\\t            if (\\n\\t                (currentLayer.__dirty || forcePaint)\\n\\t                // Ignore invisible element\\n\\t                && !el.invisible\\n\\t                // Ignore transparent element\\n\\t                && el.style.opacity !== 0\\n\\t                // Ignore scale 0 element, in some environment like node-canvas\\n\\t                // Draw a scale 0 element can cause all following draw wrong\\n\\t                // And setTransform with scale 0 will cause set back transform failed.\\n\\t                && !(m && !m[0] && !m[3])\\n\\t                // Ignore culled element\\n\\t                && !(el.culling && isDisplayableCulled(el, this._width, this._height))\\n\\t            ) {\\n\\n\\t                var clipPaths = el.__clipPaths;\\n\\n\\t                // Optimize when clipping on group with several elements\\n\\t                if (scope.prevClipLayer !== currentLayer\\n\\t                    || isClipPathChanged(clipPaths, scope.prevElClipPaths)\\n\\t                ) {\\n\\t                    // If has previous clipping state, restore from it\\n\\t                    if (scope.prevElClipPaths) {\\n\\t                        scope.prevClipLayer.ctx.restore();\\n\\t                        scope.prevClipLayer = scope.prevElClipPaths = null;\\n\\n\\t                        // Reset prevEl since context has been restored\\n\\t                        scope.prevEl = null;\\n\\t                    }\\n\\t                    // New clipping state\\n\\t                    if (clipPaths) {\\n\\t                        ctx.save();\\n\\t                        doClip(clipPaths, ctx);\\n\\t                        scope.prevClipLayer = currentLayer;\\n\\t                        scope.prevElClipPaths = clipPaths;\\n\\t                    }\\n\\t                }\\n\\t                el.beforeBrush && el.beforeBrush(ctx);\\n\\n\\t                el.brush(ctx, scope.prevEl || null);\\n\\t                scope.prevEl = el;\\n\\n\\t                el.afterBrush && el.afterBrush(ctx);\\n\\t            }\\n\\t        },\\n\\n\\t        /**\\n\\t         * 获取 zlevel 所在层，如果不存在则会创建一个新的层\\n\\t         * @param {number} zlevel\\n\\t         * @return {module:zrender/Layer}\\n\\t         */\\n\\t        getLayer: function (zlevel) {\\n\\t            if (this._singleCanvas) {\\n\\t                return this._layers[0];\\n\\t            }\\n\\n\\t            var layer = this._layers[zlevel];\\n\\t            if (!layer) {\\n\\t                // Create a new layer\\n\\t                layer = new Layer('zr_' + zlevel, this, this.dpr);\\n\\t                layer.__builtin__ = true;\\n\\n\\t                if (this._layerConfig[zlevel]) {\\n\\t                    util.merge(layer, this._layerConfig[zlevel], true);\\n\\t                }\\n\\n\\t                this.insertLayer(zlevel, layer);\\n\\n\\t                // Context is created after dom inserted to document\\n\\t                // Or excanvas will get 0px clientWidth and clientHeight\\n\\t                layer.initContext();\\n\\t            }\\n\\n\\t            return layer;\\n\\t        },\\n\\n\\t        insertLayer: function (zlevel, layer) {\\n\\n\\t            var layersMap = this._layers;\\n\\t            var zlevelList = this._zlevelList;\\n\\t            var len = zlevelList.length;\\n\\t            var prevLayer = null;\\n\\t            var i = -1;\\n\\t            var domRoot = this._domRoot;\\n\\n\\t            if (layersMap[zlevel]) {\\n\\t                log('ZLevel ' + zlevel + ' has been used already');\\n\\t                return;\\n\\t            }\\n\\t            // Check if is a valid layer\\n\\t            if (!isLayerValid(layer)) {\\n\\t                log('Layer of zlevel ' + zlevel + ' is not valid');\\n\\t                return;\\n\\t            }\\n\\n\\t            if (len > 0 && zlevel > zlevelList[0]) {\\n\\t                for (i = 0; i < len - 1; i++) {\\n\\t                    if (\\n\\t                        zlevelList[i] < zlevel\\n\\t                        && zlevelList[i + 1] > zlevel\\n\\t                    ) {\\n\\t                        break;\\n\\t                    }\\n\\t                }\\n\\t                prevLayer = layersMap[zlevelList[i]];\\n\\t            }\\n\\t            zlevelList.splice(i + 1, 0, zlevel);\\n\\n\\t            layersMap[zlevel] = layer;\\n\\n\\t            // Vitual layer will not directly show on the screen.\\n\\t            // (It can be a WebGL layer and assigned to a ZImage element)\\n\\t            // But it still under management of zrender.\\n\\t            if (!layer.virtual) {\\n\\t                if (prevLayer) {\\n\\t                    var prevDom = prevLayer.dom;\\n\\t                    if (prevDom.nextSibling) {\\n\\t                        domRoot.insertBefore(\\n\\t                            layer.dom,\\n\\t                            prevDom.nextSibling\\n\\t                        );\\n\\t                    }\\n\\t                    else {\\n\\t                        domRoot.appendChild(layer.dom);\\n\\t                    }\\n\\t                }\\n\\t                else {\\n\\t                    if (domRoot.firstChild) {\\n\\t                        domRoot.insertBefore(layer.dom, domRoot.firstChild);\\n\\t                    }\\n\\t                    else {\\n\\t                        domRoot.appendChild(layer.dom);\\n\\t                    }\\n\\t                }\\n\\t            }\\n\\t        },\\n\\n\\t        // Iterate each layer\\n\\t        eachLayer: function (cb, context) {\\n\\t            var zlevelList = this._zlevelList;\\n\\t            var z;\\n\\t            var i;\\n\\t            for (i = 0; i < zlevelList.length; i++) {\\n\\t                z = zlevelList[i];\\n\\t                cb.call(context, this._layers[z], z);\\n\\t            }\\n\\t        },\\n\\n\\t        // Iterate each buildin layer\\n\\t        eachBuiltinLayer: function (cb, context) {\\n\\t            var zlevelList = this._zlevelList;\\n\\t            var layer;\\n\\t            var z;\\n\\t            var i;\\n\\t            for (i = 0; i < zlevelList.length; i++) {\\n\\t                z = zlevelList[i];\\n\\t                layer = this._layers[z];\\n\\t                if (layer.__builtin__) {\\n\\t                    cb.call(context, layer, z);\\n\\t                }\\n\\t            }\\n\\t        },\\n\\n\\t        // Iterate each other layer except buildin layer\\n\\t        eachOtherLayer: function (cb, context) {\\n\\t            var zlevelList = this._zlevelList;\\n\\t            var layer;\\n\\t            var z;\\n\\t            var i;\\n\\t            for (i = 0; i < zlevelList.length; i++) {\\n\\t                z = zlevelList[i];\\n\\t                layer = this._layers[z];\\n\\t                if (!layer.__builtin__) {\\n\\t                    cb.call(context, layer, z);\\n\\t                }\\n\\t            }\\n\\t        },\\n\\n\\t        /**\\n\\t         * 获取所有已创建的层\\n\\t         * @param {Array.<module:zrender/Layer>} [prevLayer]\\n\\t         */\\n\\t        getLayers: function () {\\n\\t            return this._layers;\\n\\t        },\\n\\n\\t        _updateLayerStatus: function (list) {\\n\\n\\t            var layers = this._layers;\\n\\t            var progressiveLayers = this._progressiveLayers;\\n\\n\\t            var elCountsLastFrame = {};\\n\\t            var progressiveElCountsLastFrame = {};\\n\\n\\t            this.eachBuiltinLayer(function (layer, z) {\\n\\t                elCountsLastFrame[z] = layer.elCount;\\n\\t                layer.elCount = 0;\\n\\t                layer.__dirty = false;\\n\\t            });\\n\\n\\t            util.each(progressiveLayers, function (layer, idx) {\\n\\t                progressiveElCountsLastFrame[idx] = layer.elCount;\\n\\t                layer.elCount = 0;\\n\\t                layer.__dirty = false;\\n\\t            });\\n\\n\\t            var progressiveLayerCount = 0;\\n\\t            var currentProgressiveLayer;\\n\\t            var lastProgressiveKey;\\n\\t            var frameCount = 0;\\n\\t            for (var i = 0, l = list.length; i < l; i++) {\\n\\t                var el = list[i];\\n\\t                var zlevel = this._singleCanvas ? 0 : el.zlevel;\\n\\t                var layer = layers[zlevel];\\n\\t                var elProgress = el.progressive;\\n\\t                if (layer) {\\n\\t                    layer.elCount++;\\n\\t                    layer.__dirty = layer.__dirty || el.__dirty;\\n\\t                }\\n\\n\\t                /////// Update progressive\\n\\t                if (elProgress >= 0) {\\n\\t                    // Fix wrong progressive sequence problem.\\n\\t                    if (lastProgressiveKey !== elProgress) {\\n\\t                        lastProgressiveKey = elProgress;\\n\\t                        frameCount++;\\n\\t                    }\\n\\t                    var elFrame = el.__frame = frameCount - 1;\\n\\t                    if (!currentProgressiveLayer) {\\n\\t                        var idx = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER - 1);\\n\\t                        currentProgressiveLayer = progressiveLayers[idx];\\n\\t                        if (!currentProgressiveLayer) {\\n\\t                            currentProgressiveLayer = progressiveLayers[idx] = new Layer(\\n\\t                                'progressive', this, this.dpr\\n\\t                            );\\n\\t                            currentProgressiveLayer.initContext();\\n\\t                        }\\n\\t                        currentProgressiveLayer.__maxProgress = 0;\\n\\t                    }\\n\\t                    currentProgressiveLayer.__dirty = currentProgressiveLayer.__dirty || el.__dirty;\\n\\t                    currentProgressiveLayer.elCount++;\\n\\n\\t                    currentProgressiveLayer.__maxProgress = Math.max(\\n\\t                        currentProgressiveLayer.__maxProgress, elFrame\\n\\t                    );\\n\\n\\t                    if (currentProgressiveLayer.__maxProgress >= currentProgressiveLayer.__progress) {\\n\\t                        // Should keep rendering this  layer because progressive rendering is not finished yet\\n\\t                        layer.__dirty = true;\\n\\t                    }\\n\\t                }\\n\\t                else {\\n\\t                    el.__frame = -1;\\n\\n\\t                    if (currentProgressiveLayer) {\\n\\t                        currentProgressiveLayer.__nextIdxNotProg = i;\\n\\t                        progressiveLayerCount++;\\n\\t                        currentProgressiveLayer = null;\\n\\t                    }\\n\\t                }\\n\\t            }\\n\\n\\t            if (currentProgressiveLayer) {\\n\\t                progressiveLayerCount++;\\n\\t                currentProgressiveLayer.__nextIdxNotProg = i;\\n\\t            }\\n\\n\\t            // 层中的元素数量有发生变化\\n\\t            this.eachBuiltinLayer(function (layer, z) {\\n\\t                if (elCountsLastFrame[z] !== layer.elCount) {\\n\\t                    layer.__dirty = true;\\n\\t                }\\n\\t            });\\n\\n\\t            progressiveLayers.length = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER);\\n\\t            util.each(progressiveLayers, function (layer, idx) {\\n\\t                if (progressiveElCountsLastFrame[idx] !== layer.elCount) {\\n\\t                    el.__dirty = true;\\n\\t                }\\n\\t                if (layer.__dirty) {\\n\\t                    layer.__progress = 0;\\n\\t                }\\n\\t            });\\n\\t        },\\n\\n\\t        /**\\n\\t         * 清除hover层外所有内容\\n\\t         */\\n\\t        clear: function () {\\n\\t            this.eachBuiltinLayer(this._clearLayer);\\n\\t            return this;\\n\\t        },\\n\\n\\t        _clearLayer: function (layer) {\\n\\t            layer.clear();\\n\\t        },\\n\\n\\t        /**\\n\\t         * 修改指定zlevel的绘制参数\\n\\t         *\\n\\t         * @param {string} zlevel\\n\\t         * @param {Object} config 配置对象\\n\\t         * @param {string} [config.clearColor=0] 每次清空画布的颜色\\n\\t         * @param {string} [config.motionBlur=false] 是否开启动态模糊\\n\\t         * @param {number} [config.lastFrameAlpha=0.7]\\n\\t         *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\\n\\t         */\\n\\t        configLayer: function (zlevel, config) {\\n\\t            if (config) {\\n\\t                var layerConfig = this._layerConfig;\\n\\t                if (!layerConfig[zlevel]) {\\n\\t                    layerConfig[zlevel] = config;\\n\\t                }\\n\\t                else {\\n\\t                    util.merge(layerConfig[zlevel], config, true);\\n\\t                }\\n\\n\\t                var layer = this._layers[zlevel];\\n\\n\\t                if (layer) {\\n\\t                    util.merge(layer, layerConfig[zlevel], true);\\n\\t                }\\n\\t            }\\n\\t        },\\n\\n\\t        /**\\n\\t         * 删除指定层\\n\\t         * @param {number} zlevel 层所在的zlevel\\n\\t         */\\n\\t        delLayer: function (zlevel) {\\n\\t            var layers = this._layers;\\n\\t            var zlevelList = this._zlevelList;\\n\\t            var layer = layers[zlevel];\\n\\t            if (!layer) {\\n\\t                return;\\n\\t            }\\n\\t            layer.dom.parentNode.removeChild(layer.dom);\\n\\t            delete layers[zlevel];\\n\\n\\t            zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\\n\\t        },\\n\\n\\t        /**\\n\\t         * 区域大小变化后重绘\\n\\t         */\\n\\t        resize: function (width, height) {\\n\\t            var domRoot = this._domRoot;\\n\\t            // FIXME Why ?\\n\\t            domRoot.style.display = 'none';\\n\\n\\t            // Save input w/h\\n\\t            var opts = this._opts;\\n\\t            width != null && (opts.width = width);\\n\\t            height != null && (opts.height = height);\\n\\n\\t            width = this._getSize(0);\\n\\t            height = this._getSize(1);\\n\\n\\t            domRoot.style.display = '';\\n\\n\\t            // 优化没有实际改变的resize\\n\\t            if (this._width != width || height != this._height) {\\n\\t                domRoot.style.width = width + 'px';\\n\\t                domRoot.style.height = height + 'px';\\n\\n\\t                for (var id in this._layers) {\\n\\t                    if (this._layers.hasOwnProperty(id)) {\\n\\t                        this._layers[id].resize(width, height);\\n\\t                    }\\n\\t                }\\n\\t                util.each(this._progressiveLayers, function (layer) {\\n\\t                    layer.resize(width, height);\\n\\t                });\\n\\n\\t                this.refresh(true);\\n\\t            }\\n\\n\\t            this._width = width;\\n\\t            this._height = height;\\n\\n\\t            return this;\\n\\t        },\\n\\n\\t        /**\\n\\t         * 清除单独的一个层\\n\\t         * @param {number} zlevel\\n\\t         */\\n\\t        clearLayer: function (zlevel) {\\n\\t            var layer = this._layers[zlevel];\\n\\t            if (layer) {\\n\\t                layer.clear();\\n\\t            }\\n\\t        },\\n\\n\\t        /**\\n\\t         * 释放\\n\\t         */\\n\\t        dispose: function () {\\n\\t            this.root.innerHTML = '';\\n\\n\\t            this.root =\\n\\t            this.storage =\\n\\n\\t            this._domRoot =\\n\\t            this._layers = null;\\n\\t        },\\n\\n\\t        /**\\n\\t         * Get canvas which has all thing rendered\\n\\t         * @param {Object} opts\\n\\t         * @param {string} [opts.backgroundColor]\\n\\t         */\\n\\t        getRenderedCanvas: function (opts) {\\n\\t            opts = opts || {};\\n\\t            if (this._singleCanvas) {\\n\\t                return this._layers[0].dom;\\n\\t            }\\n\\n\\t            var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\\n\\t            imageLayer.initContext();\\n\\n\\t            imageLayer.clearColor = opts.backgroundColor;\\n\\t            imageLayer.clear();\\n\\n\\t            var displayList = this.storage.getDisplayList(true);\\n\\n\\t            var scope = {};\\n\\t            var zlevel;\\n\\n\\t            var self = this;\\n\\t            function findAndDrawOtherLayer(smaller, larger) {\\n\\t                var zlevelList = self._zlevelList;\\n\\t                if (smaller == null) {\\n\\t                    smaller = -Infinity;\\n\\t                }\\n\\t                var intermediateLayer;\\n\\t                for (var i = 0; i < zlevelList.length; i++) {\\n\\t                    var z = zlevelList[i];\\n\\t                    var layer = self._layers[z];\\n\\t                    if (!layer.__builtin__ && z > smaller && z < larger) {\\n\\t                        intermediateLayer = layer;\\n\\t                        break;\\n\\t                    }\\n\\t                }\\n\\t                if (intermediateLayer && intermediateLayer.renderToCanvas) {\\n\\t                    imageLayer.ctx.save();\\n\\t                    intermediateLayer.renderToCanvas(imageLayer.ctx);\\n\\t                    imageLayer.ctx.restore();\\n\\t                }\\n\\t            }\\n\\t            for (var i = 0; i < displayList.length; i++) {\\n\\t                var el = displayList[i];\\n\\n\\t                if (el.zlevel !== zlevel) {\\n\\t                    findAndDrawOtherLayer(zlevel, el.zlevel);\\n\\t                    zlevel = el.zlevel;\\n\\t                }\\n\\t                this._doPaintEl(el, imageLayer, true, scope);\\n\\t            }\\n\\n\\t            findAndDrawOtherLayer(zlevel, Infinity);\\n\\n\\t            return imageLayer.dom;\\n\\t        },\\n\\t        /**\\n\\t         * 获取绘图区域宽度\\n\\t         */\\n\\t        getWidth: function () {\\n\\t            return this._width;\\n\\t        },\\n\\n\\t        /**\\n\\t         * 获取绘图区域高度\\n\\t         */\\n\\t        getHeight: function () {\\n\\t            return this._height;\\n\\t        },\\n\\n\\t        _getSize: function (whIdx) {\\n\\t            var opts = this._opts;\\n\\t            var wh = ['width', 'height'][whIdx];\\n\\t            var cwh = ['clientWidth', 'clientHeight'][whIdx];\\n\\t            var plt = ['paddingLeft', 'paddingTop'][whIdx];\\n\\t            var prb = ['paddingRight', 'paddingBottom'][whIdx];\\n\\n\\t            if (opts[wh] != null && opts[wh] !== 'auto') {\\n\\t                return parseFloat(opts[wh]);\\n\\t            }\\n\\n\\t            var root = this.root;\\n\\t            var stl = document.defaultView.getComputedStyle(root);\\n\\n\\t            return (\\n\\t                (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh]))\\n\\t                - (parseInt10(stl[plt]) || 0)\\n\\t                - (parseInt10(stl[prb]) || 0)\\n\\t            ) | 0;\\n\\t        },\\n\\n\\t        pathToImage: function (path, dpr) {\\n\\t            dpr = dpr || this.dpr;\\n\\n\\t            var canvas = document.createElement('canvas');\\n\\t            var ctx = canvas.getContext('2d');\\n\\t            var rect = path.getBoundingRect();\\n\\t            var style = path.style;\\n\\t            var shadowBlurSize = style.shadowBlur;\\n\\t            var shadowOffsetX = style.shadowOffsetX;\\n\\t            var shadowOffsetY = style.shadowOffsetY;\\n\\t            var lineWidth = style.hasStroke() ? style.lineWidth : 0;\\n\\n\\t            var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\\n\\t            var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\\n\\t            var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\\n\\t            var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\\n\\t            var width = rect.width + leftMargin + rightMargin;\\n\\t            var height = rect.height + topMargin + bottomMargin;\\n\\n\\t            canvas.width = width * dpr;\\n\\t            canvas.height = height * dpr;\\n\\n\\t            ctx.scale(dpr, dpr);\\n\\t            ctx.clearRect(0, 0, width, height);\\n\\t            ctx.dpr = dpr;\\n\\n\\t            var pathTransform = {\\n\\t                position: path.position,\\n\\t                rotation: path.rotation,\\n\\t                scale: path.scale\\n\\t            };\\n\\t            path.position = [leftMargin - rect.x, topMargin - rect.y];\\n\\t            path.rotation = 0;\\n\\t            path.scale = [1, 1];\\n\\t            path.updateTransform();\\n\\t            if (path) {\\n\\t                path.brush(ctx);\\n\\t            }\\n\\n\\t            var ImageShape = __webpack_require__(49);\\n\\t            var imgShape = new ImageShape({\\n\\t                style: {\\n\\t                    x: 0,\\n\\t                    y: 0,\\n\\t                    image: canvas\\n\\t                }\\n\\t            });\\n\\n\\t            if (pathTransform.position != null) {\\n\\t                imgShape.position = path.position = pathTransform.position;\\n\\t            }\\n\\n\\t            if (pathTransform.rotation != null) {\\n\\t                imgShape.rotation = path.rotation = pathTransform.rotation;\\n\\t            }\\n\\n\\t            if (pathTransform.scale != null) {\\n\\t                imgShape.scale = path.scale = pathTransform.scale;\\n\\t            }\\n\\n\\t            return imgShape;\\n\\t        }\\n\\t    };\\n\\n\\t    module.exports = Painter;\\n\\n\\n\\n/***/ },\\n/* 93 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * @module zrender/Layer\\n\\t * @author pissang(https://www.github.com/pissang)\\n\\t */\\n\\n\\n\\t    var util = __webpack_require__(4);\\n\\t    var config = __webpack_require__(34);\\n\\t    var Style = __webpack_require__(22);\\n\\t    var Pattern = __webpack_require__(46);\\n\\n\\t    function returnFalse() {\\n\\t        return false;\\n\\t    }\\n\\n\\t    /**\\n\\t     * 创建dom\\n\\t     *\\n\\t     * @inner\\n\\t     * @param {string} id dom id 待用\\n\\t     * @param {string} type dom type，such as canvas, div etc.\\n\\t     * @param {Painter} painter painter instance\\n\\t     * @param {number} number\\n\\t     */\\n\\t    function createDom(id, type, painter, dpr) {\\n\\t        var newDom = document.createElement(type);\\n\\t        var width = painter.getWidth();\\n\\t        var height = painter.getHeight();\\n\\n\\t        var newDomStyle = newDom.style;\\n\\t        // 没append呢，请原谅我这样写，清晰~\\n\\t        newDomStyle.position = 'absolute';\\n\\t        newDomStyle.left = 0;\\n\\t        newDomStyle.top = 0;\\n\\t        newDomStyle.width = width + 'px';\\n\\t        newDomStyle.height = height + 'px';\\n\\t        newDom.width = width * dpr;\\n\\t        newDom.height = height * dpr;\\n\\n\\t        // id不作为索引用，避免可能造成的重名，定义为私有属性\\n\\t        newDom.setAttribute('data-zr-dom-id', id);\\n\\t        return newDom;\\n\\t    }\\n\\n\\t    /**\\n\\t     * @alias module:zrender/Layer\\n\\t     * @constructor\\n\\t     * @extends module:zrender/mixin/Transformable\\n\\t     * @param {string} id\\n\\t     * @param {module:zrender/Painter} painter\\n\\t     * @param {number} [dpr]\\n\\t     */\\n\\t    var Layer = function(id, painter, dpr) {\\n\\t        var dom;\\n\\t        dpr = dpr || config.devicePixelRatio;\\n\\t        if (typeof id === 'string') {\\n\\t            dom = createDom(id, 'canvas', painter, dpr);\\n\\t        }\\n\\t        // Not using isDom because in node it will return false\\n\\t        else if (util.isObject(id)) {\\n\\t            dom = id;\\n\\t            id = dom.id;\\n\\t        }\\n\\t        this.id = id;\\n\\t        this.dom = dom;\\n\\n\\t        var domStyle = dom.style;\\n\\t        if (domStyle) { // Not in node\\n\\t            dom.onselectstart = returnFalse; // 避免页面选中的尴尬\\n\\t            domStyle['-webkit-user-select'] = 'none';\\n\\t            domStyle['user-select'] = 'none';\\n\\t            domStyle['-webkit-touch-callout'] = 'none';\\n\\t            domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\\n\\t            domStyle['padding'] = 0;\\n\\t            domStyle['margin'] = 0;\\n\\t            domStyle['border-width'] = 0;\\n\\t        }\\n\\n\\t        this.domBack = null;\\n\\t        this.ctxBack = null;\\n\\n\\t        this.painter = painter;\\n\\n\\t        this.config = null;\\n\\n\\t        // Configs\\n\\t        /**\\n\\t         * 每次清空画布的颜色\\n\\t         * @type {string}\\n\\t         * @default 0\\n\\t         */\\n\\t        this.clearColor = 0;\\n\\t        /**\\n\\t         * 是否开启动态模糊\\n\\t         * @type {boolean}\\n\\t         * @default false\\n\\t         */\\n\\t        this.motionBlur = false;\\n\\t        /**\\n\\t         * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\\n\\t         * @type {number}\\n\\t         * @default 0.7\\n\\t         */\\n\\t        this.lastFrameAlpha = 0.7;\\n\\n\\t        /**\\n\\t         * Layer dpr\\n\\t         * @type {number}\\n\\t         */\\n\\t        this.dpr = dpr;\\n\\t    };\\n\\n\\t    Layer.prototype = {\\n\\n\\t        constructor: Layer,\\n\\n\\t        elCount: 0,\\n\\n\\t        __dirty: true,\\n\\n\\t        initContext: function () {\\n\\t            this.ctx = this.dom.getContext('2d');\\n\\n\\t            this.ctx.dpr = this.dpr;\\n\\t        },\\n\\n\\t        createBackBuffer: function () {\\n\\t            var dpr = this.dpr;\\n\\n\\t            this.domBack = createDom('back-' + this.id, 'canvas', this.painter, dpr);\\n\\t            this.ctxBack = this.domBack.getContext('2d');\\n\\n\\t            if (dpr != 1) {\\n\\t                this.ctxBack.scale(dpr, dpr);\\n\\t            }\\n\\t        },\\n\\n\\t        /**\\n\\t         * @param  {number} width\\n\\t         * @param  {number} height\\n\\t         */\\n\\t        resize: function (width, height) {\\n\\t            var dpr = this.dpr;\\n\\n\\t            var dom = this.dom;\\n\\t            var domStyle = dom.style;\\n\\t            var domBack = this.domBack;\\n\\n\\t            domStyle.width = width + 'px';\\n\\t            domStyle.height = height + 'px';\\n\\n\\t            dom.width = width * dpr;\\n\\t            dom.height = height * dpr;\\n\\n\\t            if (domBack) {\\n\\t                domBack.width = width * dpr;\\n\\t                domBack.height = height * dpr;\\n\\n\\t                if (dpr != 1) {\\n\\t                    this.ctxBack.scale(dpr, dpr);\\n\\t                }\\n\\t            }\\n\\t        },\\n\\n\\t        /**\\n\\t         * 清空该层画布\\n\\t         * @param {boolean} clearAll Clear all with out motion blur\\n\\t         */\\n\\t        clear: function (clearAll) {\\n\\t            var dom = this.dom;\\n\\t            var ctx = this.ctx;\\n\\t            var width = dom.width;\\n\\t            var height = dom.height;\\n\\n\\t            var clearColor = this.clearColor;\\n\\t            var haveMotionBLur = this.motionBlur && !clearAll;\\n\\t            var lastFrameAlpha = this.lastFrameAlpha;\\n\\n\\t            var dpr = this.dpr;\\n\\n\\t            if (haveMotionBLur) {\\n\\t                if (!this.domBack) {\\n\\t                    this.createBackBuffer();\\n\\t                }\\n\\n\\t                this.ctxBack.globalCompositeOperation = 'copy';\\n\\t                this.ctxBack.drawImage(\\n\\t                    dom, 0, 0,\\n\\t                    width / dpr,\\n\\t                    height / dpr\\n\\t                );\\n\\t            }\\n\\n\\t            ctx.clearRect(0, 0, width, height);\\n\\t            if (clearColor) {\\n\\t                var clearColorGradientOrPattern;\\n\\t                // Gradient\\n\\t                if (clearColor.colorStops) {\\n\\t                    // Cache canvas gradient\\n\\t                    clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\\n\\t                        x: 0,\\n\\t                        y: 0,\\n\\t                        width: width,\\n\\t                        height: height\\n\\t                    });\\n\\n\\t                    clearColor.__canvasGradient = clearColorGradientOrPattern;\\n\\t                }\\n\\t                // Pattern\\n\\t                else if (clearColor.image) {\\n\\t                    clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\\n\\t                }\\n\\t                ctx.save();\\n\\t                ctx.fillStyle = clearColorGradientOrPattern || clearColor;\\n\\t                ctx.fillRect(0, 0, width, height);\\n\\t                ctx.restore();\\n\\t            }\\n\\n\\t            if (haveMotionBLur) {\\n\\t                var domBack = this.domBack;\\n\\t                ctx.save();\\n\\t                ctx.globalAlpha = lastFrameAlpha;\\n\\t                ctx.drawImage(domBack, 0, 0, width, height);\\n\\t                ctx.restore();\\n\\t            }\\n\\t        }\\n\\t    };\\n\\n\\t    module.exports = Layer;\\n\\n\\n/***/ },\\n/* 94 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\t    var Gradient = __webpack_require__(66);\\n\\t    module.exports = function (ecModel) {\\n\\t        function encodeColor(seriesModel) {\\n\\t            var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.normal.color').split('.');\\n\\t            var data = seriesModel.getData();\\n\\t            var color = seriesModel.get(colorAccessPath) // Set in itemStyle\\n\\t                || seriesModel.getColorFromPalette(seriesModel.get('name'));  // Default color\\n\\n\\t            // FIXME Set color function or use the platte color\\n\\t            data.setVisual('color', color);\\n\\n\\t            // Only visible series has each data be visual encoded\\n\\t            if (!ecModel.isSeriesFiltered(seriesModel)) {\\n\\t                if (typeof color === 'function' && !(color instanceof Gradient)) {\\n\\t                    data.each(function (idx) {\\n\\t                        data.setItemVisual(\\n\\t                            idx, 'color', color(seriesModel.getDataParams(idx))\\n\\t                        );\\n\\t                    });\\n\\t                }\\n\\n\\t                // itemStyle in each data item\\n\\t                data.each(function (idx) {\\n\\t                    var itemModel = data.getItemModel(idx);\\n\\t                    var color = itemModel.get(colorAccessPath, true);\\n\\t                    if (color != null) {\\n\\t                        data.setItemVisual(idx, 'color', color);\\n\\t                    }\\n\\t                });\\n\\t            }\\n\\t        }\\n\\t        ecModel.eachRawSeries(encodeColor);\\n\\t    };\\n\\n\\n/***/ },\\n/* 95 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t// Compatitable with 2.0\\n\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var compatStyle = __webpack_require__(96);\\n\\n\\t    function get(opt, path) {\\n\\t        path = path.split(',');\\n\\t        var obj = opt;\\n\\t        for (var i = 0; i < path.length; i++) {\\n\\t            obj = obj && obj[path[i]];\\n\\t            if (obj == null) {\\n\\t                break;\\n\\t            }\\n\\t        }\\n\\t        return obj;\\n\\t    }\\n\\n\\t    function set(opt, path, val, overwrite) {\\n\\t        path = path.split(',');\\n\\t        var obj = opt;\\n\\t        var key;\\n\\t        for (var i = 0; i < path.length - 1; i++) {\\n\\t            key = path[i];\\n\\t            if (obj[key] == null) {\\n\\t                obj[key] = {};\\n\\t            }\\n\\t            obj = obj[key];\\n\\t        }\\n\\t        if (overwrite || obj[path[i]] == null) {\\n\\t            obj[path[i]] = val;\\n\\t        }\\n\\t    }\\n\\n\\t    function compatLayoutProperties(option) {\\n\\t        each(LAYOUT_PROPERTIES, function (prop) {\\n\\t            if (prop[0] in option && !(prop[1] in option)) {\\n\\t                option[prop[1]] = option[prop[0]];\\n\\t            }\\n\\t        });\\n\\t    }\\n\\n\\t    var LAYOUT_PROPERTIES = [\\n\\t        ['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']\\n\\t    ];\\n\\n\\t    var COMPATITABLE_COMPONENTS = [\\n\\t        'grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'\\n\\t    ];\\n\\n\\t    var COMPATITABLE_SERIES = [\\n\\t        'bar', 'boxplot', 'candlestick', 'chord', 'effectScatter',\\n\\t        'funnel', 'gauge', 'lines', 'graph', 'heatmap', 'line', 'map', 'parallel',\\n\\t        'pie', 'radar', 'sankey', 'scatter', 'treemap'\\n\\t    ];\\n\\n\\t    var each = zrUtil.each;\\n\\n\\t    module.exports = function (option) {\\n\\t        each(option.series, function (seriesOpt) {\\n\\t            if (!zrUtil.isObject(seriesOpt)) {\\n\\t                return;\\n\\t            }\\n\\n\\t            var seriesType = seriesOpt.type;\\n\\n\\t            compatStyle(seriesOpt);\\n\\n\\t            if (seriesType === 'pie' || seriesType === 'gauge') {\\n\\t                if (seriesOpt.clockWise != null) {\\n\\t                    seriesOpt.clockwise = seriesOpt.clockWise;\\n\\t                }\\n\\t            }\\n\\t            if (seriesType === 'gauge') {\\n\\t                var pointerColor = get(seriesOpt, 'pointer.color');\\n\\t                pointerColor != null\\n\\t                    && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\\n\\t            }\\n\\n\\t            for (var i = 0; i < COMPATITABLE_SERIES.length; i++) {\\n\\t                if (COMPATITABLE_SERIES[i] === seriesOpt.type) {\\n\\t                    compatLayoutProperties(seriesOpt);\\n\\t                    break;\\n\\t                }\\n\\t            }\\n\\t        });\\n\\n\\t        // dataRange has changed to visualMap\\n\\t        if (option.dataRange) {\\n\\t            option.visualMap = option.dataRange;\\n\\t        }\\n\\n\\t        each(COMPATITABLE_COMPONENTS, function (componentName) {\\n\\t            var options = option[componentName];\\n\\t            if (options) {\\n\\t                if (!zrUtil.isArray(options)) {\\n\\t                    options = [options];\\n\\t                }\\n\\t                each(options, function (option) {\\n\\t                    compatLayoutProperties(option);\\n\\t                });\\n\\t            }\\n\\t        });\\n\\t    };\\n\\n\\n/***/ },\\n/* 96 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\n\\t    var POSSIBLE_STYLES = [\\n\\t        'areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle',\\n\\t        'chordStyle', 'label', 'labelLine'\\n\\t    ];\\n\\n\\t    function compatItemStyle(opt) {\\n\\t        var itemStyleOpt = opt && opt.itemStyle;\\n\\t        if (itemStyleOpt) {\\n\\t            zrUtil.each(POSSIBLE_STYLES, function (styleName) {\\n\\t                var normalItemStyleOpt = itemStyleOpt.normal;\\n\\t                var emphasisItemStyleOpt = itemStyleOpt.emphasis;\\n\\t                if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\\n\\t                    opt[styleName] = opt[styleName] || {};\\n\\t                    if (!opt[styleName].normal) {\\n\\t                        opt[styleName].normal = normalItemStyleOpt[styleName];\\n\\t                    }\\n\\t                    else {\\n\\t                        zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\\n\\t                    }\\n\\t                    normalItemStyleOpt[styleName] = null;\\n\\t                }\\n\\t                if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\\n\\t                    opt[styleName] = opt[styleName] || {};\\n\\t                    if (!opt[styleName].emphasis) {\\n\\t                        opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\\n\\t                    }\\n\\t                    else {\\n\\t                        zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\\n\\t                    }\\n\\t                    emphasisItemStyleOpt[styleName] = null;\\n\\t                }\\n\\t            });\\n\\t        }\\n\\t    }\\n\\n\\t    module.exports = function (seriesOpt) {\\n\\t        if (!seriesOpt) {\\n\\t            return;\\n\\t        }\\n\\t        compatItemStyle(seriesOpt);\\n\\t        compatItemStyle(seriesOpt.markPoint);\\n\\t        compatItemStyle(seriesOpt.markLine);\\n\\t        var data = seriesOpt.data;\\n\\t        if (data) {\\n\\t            for (var i = 0; i < data.length; i++) {\\n\\t                compatItemStyle(data[i]);\\n\\t            }\\n\\t            // mark point data\\n\\t            var markPoint = seriesOpt.markPoint;\\n\\t            if (markPoint && markPoint.data) {\\n\\t                var mpData = markPoint.data;\\n\\t                for (var i = 0; i < mpData.length; i++) {\\n\\t                    compatItemStyle(mpData[i]);\\n\\t                }\\n\\t            }\\n\\t            // mark line data\\n\\t            var markLine = seriesOpt.markLine;\\n\\t            if (markLine && markLine.data) {\\n\\t                var mlData = markLine.data;\\n\\t                for (var i = 0; i < mlData.length; i++) {\\n\\t                    if (zrUtil.isArray(mlData[i])) {\\n\\t                        compatItemStyle(mlData[i][0]);\\n\\t                        compatItemStyle(mlData[i][1]);\\n\\t                    }\\n\\t                    else {\\n\\t                        compatItemStyle(mlData[i]);\\n\\t                    }\\n\\t                }\\n\\t            }\\n\\t        }\\n\\t    };\\n\\n\\n/***/ },\\n/* 97 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var graphic = __webpack_require__(18);\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var PI = Math.PI;\\n\\t    /**\\n\\t     * @param {module:echarts/ExtensionAPI} api\\n\\t     * @param {Object} [opts]\\n\\t     * @param {string} [opts.text]\\n\\t     * @param {string} [opts.color]\\n\\t     * @param {string} [opts.textColor]\\n\\t     * @return {module:zrender/Element}\\n\\t     */\\n\\t    module.exports = function (api, opts) {\\n\\t        opts = opts || {};\\n\\t        zrUtil.defaults(opts, {\\n\\t            text: 'loading',\\n\\t            color: '#c23531',\\n\\t            textColor: '#000',\\n\\t            maskColor: 'rgba(255, 255, 255, 0.8)',\\n\\t            zlevel: 0\\n\\t        });\\n\\t        var mask = new graphic.Rect({\\n\\t            style: {\\n\\t                fill: opts.maskColor\\n\\t            },\\n\\t            zlevel: opts.zlevel,\\n\\t            z: 10000\\n\\t        });\\n\\t        var arc = new graphic.Arc({\\n\\t            shape: {\\n\\t                startAngle: -PI / 2,\\n\\t                endAngle: -PI / 2 + 0.1,\\n\\t                r: 10\\n\\t            },\\n\\t            style: {\\n\\t                stroke: opts.color,\\n\\t                lineCap: 'round',\\n\\t                lineWidth: 5\\n\\t            },\\n\\t            zlevel: opts.zlevel,\\n\\t            z: 10001\\n\\t        });\\n\\t        var labelRect = new graphic.Rect({\\n\\t            style: {\\n\\t                fill: 'none',\\n\\t                text: opts.text,\\n\\t                textPosition: 'right',\\n\\t                textDistance: 10,\\n\\t                textFill: opts.textColor\\n\\t            },\\n\\t            zlevel: opts.zlevel,\\n\\t            z: 10001\\n\\t        });\\n\\n\\t        arc.animateShape(true)\\n\\t            .when(1000, {\\n\\t                endAngle: PI * 3 / 2\\n\\t            })\\n\\t            .start('circularInOut');\\n\\t        arc.animateShape(true)\\n\\t            .when(1000, {\\n\\t                startAngle: PI * 3 / 2\\n\\t            })\\n\\t            .delay(300)\\n\\t            .start('circularInOut');\\n\\n\\t        var group = new graphic.Group();\\n\\t        group.add(arc);\\n\\t        group.add(labelRect);\\n\\t        group.add(mask);\\n\\t        // Inject resize\\n\\t        group.resize = function () {\\n\\t            var cx = api.getWidth() / 2;\\n\\t            var cy = api.getHeight() / 2;\\n\\t            arc.setShape({\\n\\t                cx: cx,\\n\\t                cy: cy\\n\\t            });\\n\\t            var r = arc.shape.r;\\n\\t            labelRect.setShape({\\n\\t                x: cx - r,\\n\\t                y: cy - r,\\n\\t                width: r * 2,\\n\\t                height: r * 2\\n\\t            });\\n\\n\\t            mask.setShape({\\n\\t                x: 0,\\n\\t                y: 0,\\n\\t                width: api.getWidth(),\\n\\t                height: api.getHeight()\\n\\t            });\\n\\t        };\\n\\t        group.resize();\\n\\t        return group;\\n\\t    };\\n\\n\\n/***/ },\\n/* 98 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/* WEBPACK VAR INJECTION */(function(global) {/**\\n\\t * List for data storage\\n\\t * @module echarts/data/List\\n\\t */\\n\\n\\n\\t    var UNDEFINED = 'undefined';\\n\\t    var globalObj = typeof window === 'undefined' ? global : window;\\n\\t    var Float64Array = typeof globalObj.Float64Array === UNDEFINED\\n\\t        ? Array : globalObj.Float64Array;\\n\\t    var Int32Array = typeof globalObj.Int32Array === UNDEFINED\\n\\t        ? Array : globalObj.Int32Array;\\n\\n\\t    var dataCtors = {\\n\\t        'float': Float64Array,\\n\\t        'int': Int32Array,\\n\\t        // Ordinal data type can be string or int\\n\\t        'ordinal': Array,\\n\\t        'number': Array,\\n\\t        'time': Array\\n\\t    };\\n\\n\\t    var Model = __webpack_require__(12);\\n\\t    var DataDiffer = __webpack_require__(99);\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var modelUtil = __webpack_require__(5);\\n\\t    var isObject = zrUtil.isObject;\\n\\n\\t    var TRANSFERABLE_PROPERTIES = [\\n\\t        'stackedOn', 'hasItemOption', '_nameList', '_idList', '_rawData'\\n\\t    ];\\n\\n\\t    function transferProperties(a, b) {\\n\\t        zrUtil.each(TRANSFERABLE_PROPERTIES.concat(b.__wrappedMethods || []), function (propName) {\\n\\t            if (b.hasOwnProperty(propName)) {\\n\\t                a[propName] = b[propName];\\n\\t            }\\n\\t        });\\n\\n\\t        a.__wrappedMethods = b.__wrappedMethods;\\n\\t    }\\n\\n\\t    function DefaultDataProvider(dataArray) {\\n\\t        this._array = dataArray || [];\\n\\t    }\\n\\n\\t    DefaultDataProvider.prototype.pure = false;\\n\\n\\t    DefaultDataProvider.prototype.count = function () {\\n\\t        return this._array.length;\\n\\t    };\\n\\t    DefaultDataProvider.prototype.getItem = function (idx) {\\n\\t        return this._array[idx];\\n\\t    };\\n\\n\\t    /**\\n\\t     * @constructor\\n\\t     * @alias module:echarts/data/List\\n\\t     *\\n\\t     * @param {Array.<string|Object>} dimensions\\n\\t     *      For example, ['someDimName', {name: 'someDimName', type: 'someDimType'}, ...].\\n\\t     *      Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\\n\\t     * @param {module:echarts/model/Model} hostModel\\n\\t     */\\n\\t    var List = function (dimensions, hostModel) {\\n\\n\\t        dimensions = dimensions || ['x', 'y'];\\n\\n\\t        var dimensionInfos = {};\\n\\t        var dimensionNames = [];\\n\\t        for (var i = 0; i < dimensions.length; i++) {\\n\\t            var dimensionName;\\n\\t            var dimensionInfo = {};\\n\\t            if (typeof dimensions[i] === 'string') {\\n\\t                dimensionName = dimensions[i];\\n\\t                dimensionInfo = {\\n\\t                    name: dimensionName,\\n\\t                    coordDim: dimensionName,\\n\\t                    coordDimIndex: 0,\\n\\t                    stackable: false,\\n\\t                    // Type can be 'float', 'int', 'number'\\n\\t                    // Default is number, Precision of float may not enough\\n\\t                    type: 'number'\\n\\t                };\\n\\t            }\\n\\t            else {\\n\\t                dimensionInfo = dimensions[i];\\n\\t                dimensionName = dimensionInfo.name;\\n\\t                dimensionInfo.type = dimensionInfo.type || 'number';\\n\\t                if (!dimensionInfo.coordDim) {\\n\\t                    dimensionInfo.coordDim = dimensionName;\\n\\t                    dimensionInfo.coordDimIndex = 0;\\n\\t                }\\n\\t            }\\n\\t            dimensionInfo.otherDims = dimensionInfo.otherDims || {};\\n\\t            dimensionNames.push(dimensionName);\\n\\t            dimensionInfos[dimensionName] = dimensionInfo;\\n\\t        }\\n\\n\\t        /**\\n\\t         * @readOnly\\n\\t         * @type {Array.<string>}\\n\\t         */\\n\\t        this.dimensions = dimensionNames;\\n\\n\\t        /**\\n\\t         * Infomation of each data dimension, like data type.\\n\\t         * @type {Object}\\n\\t         */\\n\\t        this._dimensionInfos = dimensionInfos;\\n\\n\\t        /**\\n\\t         * @type {module:echarts/model/Model}\\n\\t         */\\n\\t        this.hostModel = hostModel;\\n\\n\\t        /**\\n\\t         * @type {module:echarts/model/Model}\\n\\t         */\\n\\t        this.dataType;\\n\\n\\t        /**\\n\\t         * Indices stores the indices of data subset after filtered.\\n\\t         * This data subset will be used in chart.\\n\\t         * @type {Array.<number>}\\n\\t         * @readOnly\\n\\t         */\\n\\t        this.indices = [];\\n\\n\\t        /**\\n\\t         * Data storage\\n\\t         * @type {Object.<key, TypedArray|Array>}\\n\\t         * @private\\n\\t         */\\n\\t        this._storage = {};\\n\\n\\t        /**\\n\\t         * @type {Array.<string>}\\n\\t         */\\n\\t        this._nameList = [];\\n\\t        /**\\n\\t         * @type {Array.<string>}\\n\\t         */\\n\\t        this._idList = [];\\n\\n\\t        /**\\n\\t         * Models of data option is stored sparse for optimizing memory cost\\n\\t         * @type {Array.<module:echarts/model/Model>}\\n\\t         * @private\\n\\t         */\\n\\t        this._optionModels = [];\\n\\n\\t        /**\\n\\t         * @param {module:echarts/data/List}\\n\\t         */\\n\\t        this.stackedOn = null;\\n\\n\\t        /**\\n\\t         * Global visual properties after visual coding\\n\\t         * @type {Object}\\n\\t         * @private\\n\\t         */\\n\\t        this._visual = {};\\n\\n\\t        /**\\n\\t         * Globel layout properties.\\n\\t         * @type {Object}\\n\\t         * @private\\n\\t         */\\n\\t        this._layout = {};\\n\\n\\t        /**\\n\\t         * Item visual properties after visual coding\\n\\t         * @type {Array.<Object>}\\n\\t         * @private\\n\\t         */\\n\\t        this._itemVisuals = [];\\n\\n\\t        /**\\n\\t         * Item layout properties after layout\\n\\t         * @type {Array.<Object>}\\n\\t         * @private\\n\\t         */\\n\\t        this._itemLayouts = [];\\n\\n\\t        /**\\n\\t         * Graphic elemnents\\n\\t         * @type {Array.<module:zrender/Element>}\\n\\t         * @private\\n\\t         */\\n\\t        this._graphicEls = [];\\n\\n\\t        /**\\n\\t         * @type {Array.<Array|Object>}\\n\\t         * @private\\n\\t         */\\n\\t        this._rawData;\\n\\n\\t        /**\\n\\t         * @type {Object}\\n\\t         * @private\\n\\t         */\\n\\t        this._extent;\\n\\t    };\\n\\n\\t    var listProto = List.prototype;\\n\\n\\t    listProto.type = 'list';\\n\\n\\t    /**\\n\\t     * If each data item has it's own option\\n\\t     * @type {boolean}\\n\\t     */\\n\\t    listProto.hasItemOption = true;\\n\\n\\t    /**\\n\\t     * Get dimension name\\n\\t     * @param {string|number} dim\\n\\t     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\\n\\t     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\\n\\t     * @return {string} Concrete dim name.\\n\\t     */\\n\\t    listProto.getDimension = function (dim) {\\n\\t        if (!isNaN(dim)) {\\n\\t            dim = this.dimensions[dim] || dim;\\n\\t        }\\n\\t        return dim;\\n\\t    };\\n\\n\\t    /**\\n\\t     * Get type and stackable info of particular dimension\\n\\t     * @param {string|number} dim\\n\\t     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\\n\\t     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\\n\\t     */\\n\\t    listProto.getDimensionInfo = function (dim) {\\n\\t        return zrUtil.clone(this._dimensionInfos[this.getDimension(dim)]);\\n\\t    };\\n\\n\\t    /**\\n\\t     * Initialize from data\\n\\t     * @param {Array.<Object|number|Array>} data\\n\\t     * @param {Array.<string>} [nameList]\\n\\t     * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\\n\\t     */\\n\\t    listProto.initData = function (data, nameList, dimValueGetter) {\\n\\t        data = data || [];\\n\\n\\t        var isDataArray = zrUtil.isArray(data);\\n\\t        if (isDataArray) {\\n\\t            data = new DefaultDataProvider(data);\\n\\t        }\\n\\t        if (true) {\\n\\t            if (!isDataArray && (typeof data.getItem != 'function' || typeof data.count != 'function')) {\\n\\t                throw new Error('Inavlid data provider.');\\n\\t            }\\n\\t        }\\n\\n\\t        this._rawData = data;\\n\\n\\t        // Clear\\n\\t        var storage = this._storage = {};\\n\\t        var indices = this.indices = [];\\n\\n\\t        var dimensions = this.dimensions;\\n\\t        var dimensionInfoMap = this._dimensionInfos;\\n\\n\\t        var size = data.count();\\n\\n\\t        var idList = [];\\n\\t        var nameRepeatCount = {};\\n\\t        var nameDimIdx;\\n\\n\\t        nameList = nameList || [];\\n\\n\\t        // Init storage\\n\\t        for (var i = 0; i < dimensions.length; i++) {\\n\\t            var dimInfo = dimensionInfoMap[dimensions[i]];\\n\\t            dimInfo.otherDims.itemName === 0 && (nameDimIdx = i);\\n\\t            var DataCtor = dataCtors[dimInfo.type];\\n\\t            storage[dimensions[i]] = new DataCtor(size);\\n\\t        }\\n\\n\\t        var self = this;\\n\\t        if (!dimValueGetter) {\\n\\t            self.hasItemOption = false;\\n\\t        }\\n\\t        // Default dim value getter\\n\\t        dimValueGetter = dimValueGetter || function (dataItem, dimName, dataIndex, dimIndex) {\\n\\t            var value = modelUtil.getDataItemValue(dataItem);\\n\\t            // If any dataItem is like { value: 10 }\\n\\t            if (modelUtil.isDataItemOption(dataItem)) {\\n\\t                self.hasItemOption = true;\\n\\t            }\\n\\t            return modelUtil.converDataValue(\\n\\t                (value instanceof Array)\\n\\t                    ? value[dimIndex]\\n\\t                    // If value is a single number or something else not array.\\n\\t                    : value,\\n\\t                dimensionInfoMap[dimName]\\n\\t            );\\n\\t        };\\n\\n\\t        for (var i = 0; i < size; i++) {\\n\\t            // NOTICE: Try not to write things into dataItem\\n\\t            var dataItem = data.getItem(i);\\n\\t            // Each data item is value\\n\\t            // [1, 2]\\n\\t            // 2\\n\\t            // Bar chart, line chart which uses category axis\\n\\t            // only gives the 'y' value. 'x' value is the indices of cateogry\\n\\t            // Use a tempValue to normalize the value to be a (x, y) value\\n\\n\\t            // Store the data by dimensions\\n\\t            for (var k = 0; k < dimensions.length; k++) {\\n\\t                var dim = dimensions[k];\\n\\t                var dimStorage = storage[dim];\\n\\t                // PENDING NULL is empty or zero\\n\\t                dimStorage[i] = dimValueGetter(dataItem, dim, i, k);\\n\\t            }\\n\\n\\t            indices.push(i);\\n\\t        }\\n\\n\\t        // Use the name in option and create id\\n\\t        for (var i = 0; i < size; i++) {\\n\\t            var dataItem = data.getItem(i);\\n\\t            if (!nameList[i] && dataItem) {\\n\\t                if (dataItem.name != null) {\\n\\t                    nameList[i] = dataItem.name;\\n\\t                }\\n\\t                else if (nameDimIdx != null) {\\n\\t                    nameList[i] = storage[dimensions[nameDimIdx]][i];\\n\\t                }\\n\\t            }\\n\\t            var name = nameList[i] || '';\\n\\t            // Try using the id in option\\n\\t            var id = dataItem && dataItem.id;\\n\\n\\t            if (!id && name) {\\n\\t                // Use name as id and add counter to avoid same name\\n\\t                nameRepeatCount[name] = nameRepeatCount[name] || 0;\\n\\t                id = name;\\n\\t                if (nameRepeatCount[name] > 0) {\\n\\t                    id += '__ec__' + nameRepeatCount[name];\\n\\t                }\\n\\t                nameRepeatCount[name]++;\\n\\t            }\\n\\t            id && (idList[i] = id);\\n\\t        }\\n\\n\\t        this._nameList = nameList;\\n\\t        this._idList = idList;\\n\\t    };\\n\\n\\t    /**\\n\\t     * @return {number}\\n\\t     */\\n\\t    listProto.count = function () {\\n\\t        return this.indices.length;\\n\\t    };\\n\\n\\t    /**\\n\\t     * Get value. Return NaN if idx is out of range.\\n\\t     * @param {string} dim Dim must be concrete name.\\n\\t     * @param {number} idx\\n\\t     * @param {boolean} stack\\n\\t     * @return {number}\\n\\t     */\\n\\t    listProto.get = function (dim, idx, stack) {\\n\\t        var storage = this._storage;\\n\\t        var dataIndex = this.indices[idx];\\n\\n\\t        // If value not exists\\n\\t        if (dataIndex == null || !storage[dim]) {\\n\\t            return NaN;\\n\\t        }\\n\\n\\t        var value = storage[dim][dataIndex];\\n\\t        // FIXME ordinal data type is not stackable\\n\\t        if (stack) {\\n\\t            var dimensionInfo = this._dimensionInfos[dim];\\n\\t            if (dimensionInfo && dimensionInfo.stackable) {\\n\\t                var stackedOn = this.stackedOn;\\n\\t                while (stackedOn) {\\n\\t                    // Get no stacked data of stacked on\\n\\t                    var stackedValue = stackedOn.get(dim, idx);\\n\\t                    // Considering positive stack, negative stack and empty data\\n\\t                    if ((value >= 0 && stackedValue > 0)  // Positive stack\\n\\t                        || (value <= 0 && stackedValue < 0) // Negative stack\\n\\t                    ) {\\n\\t                        value += stackedValue;\\n\\t                    }\\n\\t                    stackedOn = stackedOn.stackedOn;\\n\\t                }\\n\\t            }\\n\\t        }\\n\\t        return value;\\n\\t    };\\n\\n\\t    /**\\n\\t     * Get value for multi dimensions.\\n\\t     * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\\n\\t     * @param {number} idx\\n\\t     * @param {boolean} stack\\n\\t     * @return {number}\\n\\t     */\\n\\t    listProto.getValues = function (dimensions, idx, stack) {\\n\\t        var values = [];\\n\\n\\t        if (!zrUtil.isArray(dimensions)) {\\n\\t            stack = idx;\\n\\t            idx = dimensions;\\n\\t            dimensions = this.dimensions;\\n\\t        }\\n\\n\\t        for (var i = 0, len = dimensions.length; i < len; i++) {\\n\\t            values.push(this.get(dimensions[i], idx, stack));\\n\\t        }\\n\\n\\t        return values;\\n\\t    };\\n\\n\\t    /**\\n\\t     * If value is NaN. Inlcuding '-'\\n\\t     * @param {string} dim\\n\\t     * @param {number} idx\\n\\t     * @return {number}\\n\\t     */\\n\\t    listProto.hasValue = function (idx) {\\n\\t        var dimensions = this.dimensions;\\n\\t        var dimensionInfos = this._dimensionInfos;\\n\\t        for (var i = 0, len = dimensions.length; i < len; i++) {\\n\\t            if (\\n\\t                // Ordinal type can be string or number\\n\\t                dimensionInfos[dimensions[i]].type !== 'ordinal'\\n\\t                && isNaN(this.get(dimensions[i], idx))\\n\\t            ) {\\n\\t                return false;\\n\\t            }\\n\\t        }\\n\\t        return true;\\n\\t    };\\n\\n\\t    /**\\n\\t     * Get extent of data in one dimension\\n\\t     * @param {string} dim\\n\\t     * @param {boolean} stack\\n\\t     * @param {Function} filter\\n\\t     */\\n\\t    listProto.getDataExtent = function (dim, stack, filter) {\\n\\t        dim = this.getDimension(dim);\\n\\t        var dimData = this._storage[dim];\\n\\t        var dimInfo = this.getDimensionInfo(dim);\\n\\t        stack = (dimInfo && dimInfo.stackable) && stack;\\n\\t        var dimExtent = (this._extent || (this._extent = {}))[dim + (!!stack)];\\n\\t        var value;\\n\\t        if (dimExtent) {\\n\\t            return dimExtent;\\n\\t        }\\n\\t        // var dimInfo = this._dimensionInfos[dim];\\n\\t        if (dimData) {\\n\\t            var min = Infinity;\\n\\t            var max = -Infinity;\\n\\t            // var isOrdinal = dimInfo.type === 'ordinal';\\n\\t            for (var i = 0, len = this.count(); i < len; i++) {\\n\\t                value = this.get(dim, i, stack);\\n\\t                // FIXME\\n\\t                // if (isOrdinal && typeof value === 'string') {\\n\\t                //     value = zrUtil.indexOf(dimData, value);\\n\\t                // }\\n\\t                if (!filter || filter(value, dim, i)) {\\n\\t                    value < min && (min = value);\\n\\t                    value > max && (max = value);\\n\\t                }\\n\\t            }\\n\\t            return (this._extent[dim + !!stack] = [min, max]);\\n\\t        }\\n\\t        else {\\n\\t            return [Infinity, -Infinity];\\n\\t        }\\n\\t    };\\n\\n\\t    /**\\n\\t     * Get sum of data in one dimension\\n\\t     * @param {string} dim\\n\\t     * @param {boolean} stack\\n\\t     */\\n\\t    listProto.getSum = function (dim, stack) {\\n\\t        var dimData = this._storage[dim];\\n\\t        var sum = 0;\\n\\t        if (dimData) {\\n\\t            for (var i = 0, len = this.count(); i < len; i++) {\\n\\t                var value = this.get(dim, i, stack);\\n\\t                if (!isNaN(value)) {\\n\\t                    sum += value;\\n\\t                }\\n\\t            }\\n\\t        }\\n\\t        return sum;\\n\\t    };\\n\\n\\t    /**\\n\\t     * Retreive the index with given value\\n\\t     * @param {number} idx\\n\\t     * @param {number} value\\n\\t     * @return {number}\\n\\t     */\\n\\t    // FIXME Precision of float value\\n\\t    listProto.indexOf = function (dim, value) {\\n\\t        var storage = this._storage;\\n\\t        var dimData = storage[dim];\\n\\t        var indices = this.indices;\\n\\n\\t        if (dimData) {\\n\\t            for (var i = 0, len = indices.length; i < len; i++) {\\n\\t                var rawIndex = indices[i];\\n\\t                if (dimData[rawIndex] === value) {\\n\\t                    return i;\\n\\t                }\\n\\t            }\\n\\t        }\\n\\t        return -1;\\n\\t    };\\n\\n\\t    /**\\n\\t     * Retreive the index with given name\\n\\t     * @param {number} idx\\n\\t     * @param {number} name\\n\\t     * @return {number}\\n\\t     */\\n\\t    listProto.indexOfName = function (name) {\\n\\t        var indices = this.indices;\\n\\t        var nameList = this._nameList;\\n\\n\\t        for (var i = 0, len = indices.length; i < len; i++) {\\n\\t            var rawIndex = indices[i];\\n\\t            if (nameList[rawIndex] === name) {\\n\\t                return i;\\n\\t            }\\n\\t        }\\n\\n\\t        return -1;\\n\\t    };\\n\\n\\t    /**\\n\\t     * Retreive the index with given raw data index\\n\\t     * @param {number} idx\\n\\t     * @param {number} name\\n\\t     * @return {number}\\n\\t     */\\n\\t    listProto.indexOfRawIndex = function (rawIndex) {\\n\\t        // Indices are ascending\\n\\t        var indices = this.indices;\\n\\n\\t        // If rawIndex === dataIndex\\n\\t        var rawDataIndex = indices[rawIndex];\\n\\t        if (rawDataIndex != null && rawDataIndex === rawIndex) {\\n\\t            return rawIndex;\\n\\t        }\\n\\n\\t        var left = 0;\\n\\t        var right = indices.length - 1;\\n\\t        while (left <= right) {\\n\\t            var mid = (left + right) / 2 | 0;\\n\\t            if (indices[mid] < rawIndex) {\\n\\t                left = mid + 1;\\n\\t            }\\n\\t            else if (indices[mid] > rawIndex) {\\n\\t                right = mid - 1;\\n\\t            }\\n\\t            else {\\n\\t                return mid;\\n\\t            }\\n\\t        }\\n\\t        return -1;\\n\\t    };\\n\\n\\t    /**\\n\\t     * Retreive the index of nearest value\\n\\t     * @param {string} dim\\n\\t     * @param {number} value\\n\\t     * @param {boolean} stack If given value is after stacked\\n\\t     * @param {number} [maxDistance=Infinity]\\n\\t     * @return {Array.<number>} Considere multiple points has the same value.\\n\\t     */\\n\\t    listProto.indicesOfNearest = function (dim, value, stack, maxDistance) {\\n\\t        var storage = this._storage;\\n\\t        var dimData = storage[dim];\\n\\t        var nearestIndices = [];\\n\\n\\t        if (!dimData) {\\n\\t            return nearestIndices;\\n\\t        }\\n\\n\\t        if (maxDistance == null) {\\n\\t            maxDistance = Infinity;\\n\\t        }\\n\\n\\t        var minDist = Number.MAX_VALUE;\\n\\t        var minDiff = -1;\\n\\t        for (var i = 0, len = this.count(); i < len; i++) {\\n\\t            var diff = value - this.get(dim, i, stack);\\n\\t            var dist = Math.abs(diff);\\n\\t            if (diff <= maxDistance && dist <= minDist) {\\n\\t                // For the case of two data are same on xAxis, which has sequence data.\\n\\t                // Show the nearest index\\n\\t                // https://github.com/ecomfe/echarts/issues/2869\\n\\t                if (dist < minDist || (diff >= 0 && minDiff < 0)) {\\n\\t                    minDist = dist;\\n\\t                    minDiff = diff;\\n\\t                    nearestIndices.length = 0;\\n\\t                }\\n\\t                nearestIndices.push(i);\\n\\t            }\\n\\t        }\\n\\t        return nearestIndices;\\n\\t    };\\n\\n\\t    /**\\n\\t     * Get raw data index\\n\\t     * @param {number} idx\\n\\t     * @return {number}\\n\\t     */\\n\\t    listProto.getRawIndex = function (idx) {\\n\\t        var rawIdx = this.indices[idx];\\n\\t        return rawIdx == null ? -1 : rawIdx;\\n\\t    };\\n\\n\\t    /**\\n\\t     * Get raw data item\\n\\t     * @param {number} idx\\n\\t     * @return {number}\\n\\t     */\\n\\t    listProto.getRawDataItem = function (idx) {\\n\\t        return this._rawData.getItem(this.getRawIndex(idx));\\n\\t    };\\n\\n\\t    /**\\n\\t     * @param {number} idx\\n\\t     * @param {boolean} [notDefaultIdx=false]\\n\\t     * @return {string}\\n\\t     */\\n\\t    listProto.getName = function (idx) {\\n\\t        return this._nameList[this.indices[idx]] || '';\\n\\t    };\\n\\n\\t    /**\\n\\t     * @param {number} idx\\n\\t     * @param {boolean} [notDefaultIdx=false]\\n\\t     * @return {string}\\n\\t     */\\n\\t    listProto.getId = function (idx) {\\n\\t        return this._idList[this.indices[idx]] || (this.getRawIndex(idx) + '');\\n\\t    };\\n\\n\\n\\t    function normalizeDimensions(dimensions) {\\n\\t        if (!zrUtil.isArray(dimensions)) {\\n\\t            dimensions = [dimensions];\\n\\t        }\\n\\t        return dimensions;\\n\\t    }\\n\\n\\t    /**\\n\\t     * Data iteration\\n\\t     * @param {string|Array.<string>}\\n\\t     * @param {Function} cb\\n\\t     * @param {boolean} [stack=false]\\n\\t     * @param {*} [context=this]\\n\\t     *\\n\\t     * @example\\n\\t     *  list.each('x', function (x, idx) {});\\n\\t     *  list.each(['x', 'y'], function (x, y, idx) {});\\n\\t     *  list.each(function (idx) {})\\n\\t     */\\n\\t    listProto.each = function (dims, cb, stack, context) {\\n\\t        if (typeof dims === 'function') {\\n\\t            context = stack;\\n\\t            stack = cb;\\n\\t            cb = dims;\\n\\t            dims = [];\\n\\t        }\\n\\n\\t        dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\\n\\n\\t        var value = [];\\n\\t        var dimSize = dims.length;\\n\\t        var indices = this.indices;\\n\\n\\t        context = context || this;\\n\\n\\t        for (var i = 0; i < indices.length; i++) {\\n\\t            // Simple optimization\\n\\t            switch (dimSize) {\\n\\t                case 0:\\n\\t                    cb.call(context, i);\\n\\t                    break;\\n\\t                case 1:\\n\\t                    cb.call(context, this.get(dims[0], i, stack), i);\\n\\t                    break;\\n\\t                case 2:\\n\\t                    cb.call(context, this.get(dims[0], i, stack), this.get(dims[1], i, stack), i);\\n\\t                    break;\\n\\t                default:\\n\\t                    for (var k = 0; k < dimSize; k++) {\\n\\t                        value[k] = this.get(dims[k], i, stack);\\n\\t                    }\\n\\t                    // Index\\n\\t                    value[k] = i;\\n\\t                    cb.apply(context, value);\\n\\t            }\\n\\t        }\\n\\t    };\\n\\n\\t    /**\\n\\t     * Data filter\\n\\t     * @param {string|Array.<string>}\\n\\t     * @param {Function} cb\\n\\t     * @param {boolean} [stack=false]\\n\\t     * @param {*} [context=this]\\n\\t     */\\n\\t    listProto.filterSelf = function (dimensions, cb, stack, context) {\\n\\t        if (typeof dimensions === 'function') {\\n\\t            context = stack;\\n\\t            stack = cb;\\n\\t            cb = dimensions;\\n\\t            dimensions = [];\\n\\t        }\\n\\n\\t        dimensions = zrUtil.map(\\n\\t            normalizeDimensions(dimensions), this.getDimension, this\\n\\t        );\\n\\n\\t        var newIndices = [];\\n\\t        var value = [];\\n\\t        var dimSize = dimensions.length;\\n\\t        var indices = this.indices;\\n\\n\\t        context = context || this;\\n\\n\\t        for (var i = 0; i < indices.length; i++) {\\n\\t            var keep;\\n\\t            // Simple optimization\\n\\t            if (!dimSize) {\\n\\t                keep = cb.call(context, i);\\n\\t            }\\n\\t            else if (dimSize === 1) {\\n\\t                keep = cb.call(\\n\\t                    context, this.get(dimensions[0], i, stack), i\\n\\t                );\\n\\t            }\\n\\t            else {\\n\\t                for (var k = 0; k < dimSize; k++) {\\n\\t                    value[k] = this.get(dimensions[k], i, stack);\\n\\t                }\\n\\t                value[k] = i;\\n\\t                keep = cb.apply(context, value);\\n\\t            }\\n\\t            if (keep) {\\n\\t                newIndices.push(indices[i]);\\n\\t            }\\n\\t        }\\n\\n\\t        this.indices = newIndices;\\n\\n\\t        // Reset data extent\\n\\t        this._extent = {};\\n\\n\\t        return this;\\n\\t    };\\n\\n\\t    /**\\n\\t     * Data mapping to a plain array\\n\\t     * @param {string|Array.<string>} [dimensions]\\n\\t     * @param {Function} cb\\n\\t     * @param {boolean} [stack=false]\\n\\t     * @param {*} [context=this]\\n\\t     * @return {Array}\\n\\t     */\\n\\t    listProto.mapArray = function (dimensions, cb, stack, context) {\\n\\t        if (typeof dimensions === 'function') {\\n\\t            context = stack;\\n\\t            stack = cb;\\n\\t            cb = dimensions;\\n\\t            dimensions = [];\\n\\t        }\\n\\n\\t        var result = [];\\n\\t        this.each(dimensions, function () {\\n\\t            result.push(cb && cb.apply(this, arguments));\\n\\t        }, stack, context);\\n\\t        return result;\\n\\t    };\\n\\n\\t    function cloneListForMapAndSample(original, excludeDimensions) {\\n\\t        var allDimensions = original.dimensions;\\n\\t        var list = new List(\\n\\t            zrUtil.map(allDimensions, original.getDimensionInfo, original),\\n\\t            original.hostModel\\n\\t        );\\n\\t        // FIXME If needs stackedOn, value may already been stacked\\n\\t        transferProperties(list, original);\\n\\n\\t        var storage = list._storage = {};\\n\\t        var originalStorage = original._storage;\\n\\t        // Init storage\\n\\t        for (var i = 0; i < allDimensions.length; i++) {\\n\\t            var dim = allDimensions[i];\\n\\t            var dimStore = originalStorage[dim];\\n\\t            if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\\n\\t                storage[dim] = new dimStore.constructor(\\n\\t                    originalStorage[dim].length\\n\\t                );\\n\\t            }\\n\\t            else {\\n\\t                // Direct reference for other dimensions\\n\\t                storage[dim] = originalStorage[dim];\\n\\t            }\\n\\t        }\\n\\t        return list;\\n\\t    }\\n\\n\\t    /**\\n\\t     * Data mapping to a new List with given dimensions\\n\\t     * @param {string|Array.<string>} dimensions\\n\\t     * @param {Function} cb\\n\\t     * @param {boolean} [stack=false]\\n\\t     * @param {*} [context=this]\\n\\t     * @return {Array}\\n\\t     */\\n\\t    listProto.map = function (dimensions, cb, stack, context) {\\n\\t        dimensions = zrUtil.map(\\n\\t            normalizeDimensions(dimensions), this.getDimension, this\\n\\t        );\\n\\n\\t        var list = cloneListForMapAndSample(this, dimensions);\\n\\t        // Following properties are all immutable.\\n\\t        // So we can reference to the same value\\n\\t        var indices = list.indices = this.indices;\\n\\n\\t        var storage = list._storage;\\n\\n\\t        var tmpRetValue = [];\\n\\t        this.each(dimensions, function () {\\n\\t            var idx = arguments[arguments.length - 1];\\n\\t            var retValue = cb && cb.apply(this, arguments);\\n\\t            if (retValue != null) {\\n\\t                // a number\\n\\t                if (typeof retValue === 'number') {\\n\\t                    tmpRetValue[0] = retValue;\\n\\t                    retValue = tmpRetValue;\\n\\t                }\\n\\t                for (var i = 0; i < retValue.length; i++) {\\n\\t                    var dim = dimensions[i];\\n\\t                    var dimStore = storage[dim];\\n\\t                    var rawIdx = indices[idx];\\n\\t                    if (dimStore) {\\n\\t                        dimStore[rawIdx] = retValue[i];\\n\\t                    }\\n\\t                }\\n\\t            }\\n\\t        }, stack, context);\\n\\n\\t        return list;\\n\\t    };\\n\\n\\t    /**\\n\\t     * Large data down sampling on given dimension\\n\\t     * @param {string} dimension\\n\\t     * @param {number} rate\\n\\t     * @param {Function} sampleValue\\n\\t     * @param {Function} sampleIndex Sample index for name and id\\n\\t     */\\n\\t    listProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\\n\\t        var list = cloneListForMapAndSample(this, [dimension]);\\n\\t        var storage = this._storage;\\n\\t        var targetStorage = list._storage;\\n\\n\\t        var originalIndices = this.indices;\\n\\t        var indices = list.indices = [];\\n\\n\\t        var frameValues = [];\\n\\t        var frameIndices = [];\\n\\t        var frameSize = Math.floor(1 / rate);\\n\\n\\t        var dimStore = targetStorage[dimension];\\n\\t        var len = this.count();\\n\\t        // Copy data from original data\\n\\t        for (var i = 0; i < storage[dimension].length; i++) {\\n\\t            targetStorage[dimension][i] = storage[dimension][i];\\n\\t        }\\n\\t        for (var i = 0; i < len; i += frameSize) {\\n\\t            // Last frame\\n\\t            if (frameSize > len - i) {\\n\\t                frameSize = len - i;\\n\\t                frameValues.length = frameSize;\\n\\t            }\\n\\t            for (var k = 0; k < frameSize; k++) {\\n\\t                var idx = originalIndices[i + k];\\n\\t                frameValues[k] = dimStore[idx];\\n\\t                frameIndices[k] = idx;\\n\\t            }\\n\\t            var value = sampleValue(frameValues);\\n\\t            var idx = frameIndices[sampleIndex(frameValues, value) || 0];\\n\\t            // Only write value on the filtered data\\n\\t            dimStore[idx] = value;\\n\\t            indices.push(idx);\\n\\t        }\\n\\n\\t        return list;\\n\\t    };\\n\\n\\t    /**\\n\\t     * Get model of one data item.\\n\\t     *\\n\\t     * @param {number} idx\\n\\t     */\\n\\t    // FIXME Model proxy ?\\n\\t    listProto.getItemModel = function (idx) {\\n\\t        var hostModel = this.hostModel;\\n\\t        idx = this.indices[idx];\\n\\t        return new Model(this._rawData.getItem(idx), hostModel, hostModel && hostModel.ecModel);\\n\\t    };\\n\\n\\t    /**\\n\\t     * Create a data differ\\n\\t     * @param {module:echarts/data/List} otherList\\n\\t     * @return {module:echarts/data/DataDiffer}\\n\\t     */\\n\\t    listProto.diff = function (otherList) {\\n\\t        var idList = this._idList;\\n\\t        var otherIdList = otherList && otherList._idList;\\n\\t        var val;\\n\\t        // Use prefix to avoid index to be the same as otherIdList[idx],\\n\\t        // which will cause weird udpate animation.\\n\\t        var prefix = 'e\\\\0\\\\0';\\n\\n\\t        return new DataDiffer(\\n\\t            otherList ? otherList.indices : [],\\n\\t            this.indices,\\n\\t            function (idx) {\\n\\t                return (val = otherIdList[idx]) != null ? val : prefix + idx;\\n\\t            },\\n\\t            function (idx) {\\n\\t                return (val = idList[idx]) != null ? val : prefix + idx;\\n\\t            }\\n\\t        );\\n\\t    };\\n\\t    /**\\n\\t     * Get visual property.\\n\\t     * @param {string} key\\n\\t     */\\n\\t    listProto.getVisual = function (key) {\\n\\t        var visual = this._visual;\\n\\t        return visual && visual[key];\\n\\t    };\\n\\n\\t    /**\\n\\t     * Set visual property\\n\\t     * @param {string|Object} key\\n\\t     * @param {*} [value]\\n\\t     *\\n\\t     * @example\\n\\t     *  setVisual('color', color);\\n\\t     *  setVisual({\\n\\t     *      'color': color\\n\\t     *  });\\n\\t     */\\n\\t    listProto.setVisual = function (key, val) {\\n\\t        if (isObject(key)) {\\n\\t            for (var name in key) {\\n\\t                if (key.hasOwnProperty(name)) {\\n\\t                    this.setVisual(name, key[name]);\\n\\t                }\\n\\t            }\\n\\t            return;\\n\\t        }\\n\\t        this._visual = this._visual || {};\\n\\t        this._visual[key] = val;\\n\\t    };\\n\\n\\t    /**\\n\\t     * Set layout property.\\n\\t     * @param {string} key\\n\\t     * @param {*} [val]\\n\\t     */\\n\\t    listProto.setLayout = function (key, val) {\\n\\t        if (isObject(key)) {\\n\\t            for (var name in key) {\\n\\t                if (key.hasOwnProperty(name)) {\\n\\t                    this.setLayout(name, key[name]);\\n\\t                }\\n\\t            }\\n\\t            return;\\n\\t        }\\n\\t        this._layout[key] = val;\\n\\t    };\\n\\n\\t    /**\\n\\t     * Get layout property.\\n\\t     * @param  {string} key.\\n\\t     * @return {*}\\n\\t     */\\n\\t    listProto.getLayout = function (key) {\\n\\t        return this._layout[key];\\n\\t    };\\n\\n\\t    /**\\n\\t     * Get layout of single data item\\n\\t     * @param {number} idx\\n\\t     */\\n\\t    listProto.getItemLayout = function (idx) {\\n\\t        return this._itemLayouts[idx];\\n\\t    };\\n\\n\\t    /**\\n\\t     * Set layout of single data item\\n\\t     * @param {number} idx\\n\\t     * @param {Object} layout\\n\\t     * @param {boolean=} [merge=false]\\n\\t     */\\n\\t    listProto.setItemLayout = function (idx, layout, merge) {\\n\\t        this._itemLayouts[idx] = merge\\n\\t            ? zrUtil.extend(this._itemLayouts[idx] || {}, layout)\\n\\t            : layout;\\n\\t    };\\n\\n\\t    /**\\n\\t     * Clear all layout of single data item\\n\\t     */\\n\\t    listProto.clearItemLayouts = function () {\\n\\t        this._itemLayouts.length = 0;\\n\\t    };\\n\\n\\t    /**\\n\\t     * Get visual property of single data item\\n\\t     * @param {number} idx\\n\\t     * @param {string} key\\n\\t     * @param {boolean} [ignoreParent=false]\\n\\t     */\\n\\t    listProto.getItemVisual = function (idx, key, ignoreParent) {\\n\\t        var itemVisual = this._itemVisuals[idx];\\n\\t        var val = itemVisual && itemVisual[key];\\n\\t        if (val == null && !ignoreParent) {\\n\\t            // Use global visual property\\n\\t            return this.getVisual(key);\\n\\t        }\\n\\t        return val;\\n\\t    };\\n\\n\\t    /**\\n\\t     * Set visual property of single data item\\n\\t     *\\n\\t     * @param {number} idx\\n\\t     * @param {string|Object} key\\n\\t     * @param {*} [value]\\n\\t     *\\n\\t     * @example\\n\\t     *  setItemVisual(0, 'color', color);\\n\\t     *  setItemVisual(0, {\\n\\t     *      'color': color\\n\\t     *  });\\n\\t     */\\n\\t    listProto.setItemVisual = function (idx, key, value) {\\n\\t        var itemVisual = this._itemVisuals[idx] || {};\\n\\t        this._itemVisuals[idx] = itemVisual;\\n\\n\\t        if (isObject(key)) {\\n\\t            for (var name in key) {\\n\\t                if (key.hasOwnProperty(name)) {\\n\\t                    itemVisual[name] = key[name];\\n\\t                }\\n\\t            }\\n\\t            return;\\n\\t        }\\n\\t        itemVisual[key] = value;\\n\\t    };\\n\\n\\t    /**\\n\\t     * Clear itemVisuals and list visual.\\n\\t     */\\n\\t    listProto.clearAllVisual = function () {\\n\\t        this._visual = {};\\n\\t        this._itemVisuals = [];\\n\\t    };\\n\\n\\t    var setItemDataAndSeriesIndex = function (child) {\\n\\t        child.seriesIndex = this.seriesIndex;\\n\\t        child.dataIndex = this.dataIndex;\\n\\t        child.dataType = this.dataType;\\n\\t    };\\n\\t    /**\\n\\t     * Set graphic element relative to data. It can be set as null\\n\\t     * @param {number} idx\\n\\t     * @param {module:zrender/Element} [el]\\n\\t     */\\n\\t    listProto.setItemGraphicEl = function (idx, el) {\\n\\t        var hostModel = this.hostModel;\\n\\n\\t        if (el) {\\n\\t            // Add data index and series index for indexing the data by element\\n\\t            // Useful in tooltip\\n\\t            el.dataIndex = idx;\\n\\t            el.dataType = this.dataType;\\n\\t            el.seriesIndex = hostModel && hostModel.seriesIndex;\\n\\t            if (el.type === 'group') {\\n\\t                el.traverse(setItemDataAndSeriesIndex, el);\\n\\t            }\\n\\t        }\\n\\n\\t        this._graphicEls[idx] = el;\\n\\t    };\\n\\n\\t    /**\\n\\t     * @param {number} idx\\n\\t     * @return {module:zrender/Element}\\n\\t     */\\n\\t    listProto.getItemGraphicEl = function (idx) {\\n\\t        return this._graphicEls[idx];\\n\\t    };\\n\\n\\t    /**\\n\\t     * @param {Function} cb\\n\\t     * @param {*} context\\n\\t     */\\n\\t    listProto.eachItemGraphicEl = function (cb, context) {\\n\\t        zrUtil.each(this._graphicEls, function (el, idx) {\\n\\t            if (el) {\\n\\t                cb && cb.call(context, el, idx);\\n\\t            }\\n\\t        });\\n\\t    };\\n\\n\\t    /**\\n\\t     * Shallow clone a new list except visual and layout properties, and graph elements.\\n\\t     * New list only change the indices.\\n\\t     */\\n\\t    listProto.cloneShallow = function () {\\n\\t        var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\\n\\t        var list = new List(dimensionInfoList, this.hostModel);\\n\\n\\t        // FIXME\\n\\t        list._storage = this._storage;\\n\\n\\t        transferProperties(list, this);\\n\\n\\n\\t        // Clone will not change the data extent and indices\\n\\t        list.indices = this.indices.slice();\\n\\n\\t        if (this._extent) {\\n\\t            list._extent = zrUtil.extend({}, this._extent);\\n\\t        }\\n\\n\\t        return list;\\n\\t    };\\n\\n\\t    /**\\n\\t     * Wrap some method to add more feature\\n\\t     * @param {string} methodName\\n\\t     * @param {Function} injectFunction\\n\\t     */\\n\\t    listProto.wrapMethod = function (methodName, injectFunction) {\\n\\t        var originalMethod = this[methodName];\\n\\t        if (typeof originalMethod !== 'function') {\\n\\t            return;\\n\\t        }\\n\\t        this.__wrappedMethods = this.__wrappedMethods || [];\\n\\t        this.__wrappedMethods.push(methodName);\\n\\t        this[methodName] = function () {\\n\\t            var res = originalMethod.apply(this, arguments);\\n\\t            return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\\n\\t        };\\n\\t    };\\n\\n\\t    // Methods that create a new list based on this list should be listed here.\\n\\t    // Notice that those method should `RETURN` the new list.\\n\\t    listProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map'];\\n\\t    // Methods that change indices of this list should be listed here.\\n\\t    listProto.CHANGABLE_METHODS = ['filterSelf'];\\n\\n\\t    module.exports = List;\\n\\n\\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\\n\\n/***/ },\\n/* 99 */\\n/***/ function(module, exports) {\\n\\n\\t'use strict';\\n\\n\\n\\t    function defaultKeyGetter(item) {\\n\\t        return item;\\n\\t    }\\n\\n\\t    function DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter) {\\n\\t        this._old = oldArr;\\n\\t        this._new = newArr;\\n\\n\\t        this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\\n\\t        this._newKeyGetter = newKeyGetter || defaultKeyGetter;\\n\\t    }\\n\\n\\t    DataDiffer.prototype = {\\n\\n\\t        constructor: DataDiffer,\\n\\n\\t        /**\\n\\t         * Callback function when add a data\\n\\t         */\\n\\t        add: function (func) {\\n\\t            this._add = func;\\n\\t            return this;\\n\\t        },\\n\\n\\t        /**\\n\\t         * Callback function when update a data\\n\\t         */\\n\\t        update: function (func) {\\n\\t            this._update = func;\\n\\t            return this;\\n\\t        },\\n\\n\\t        /**\\n\\t         * Callback function when remove a data\\n\\t         */\\n\\t        remove: function (func) {\\n\\t            this._remove = func;\\n\\t            return this;\\n\\t        },\\n\\n\\t        execute: function () {\\n\\t            var oldArr = this._old;\\n\\t            var newArr = this._new;\\n\\t            var oldKeyGetter = this._oldKeyGetter;\\n\\t            var newKeyGetter = this._newKeyGetter;\\n\\n\\t            var oldDataIndexMap = {};\\n\\t            var newDataIndexMap = {};\\n\\t            var oldDataKeyArr = [];\\n\\t            var newDataKeyArr = [];\\n\\t            var i;\\n\\n\\t            initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, oldKeyGetter);\\n\\t            initIndexMap(newArr, newDataIndexMap, newDataKeyArr, newKeyGetter);\\n\\n\\t            // Travel by inverted order to make sure order consistency\\n\\t            // when duplicate keys exists (consider newDataIndex.pop() below).\\n\\t            // For performance consideration, these code below do not look neat.\\n\\t            for (i = 0; i < oldArr.length; i++) {\\n\\t                var key = oldDataKeyArr[i];\\n\\t                var idx = newDataIndexMap[key];\\n\\n\\t                // idx can never be empty array here. see 'set null' logic below.\\n\\t                if (idx != null) {\\n\\t                    // Consider there is duplicate key (for example, use dataItem.name as key).\\n\\t                    // We should make sure every item in newArr and oldArr can be visited.\\n\\t                    var len = idx.length;\\n\\t                    if (len) {\\n\\t                        len === 1 && (newDataIndexMap[key] = null);\\n\\t                        idx = idx.unshift();\\n\\t                    }\\n\\t                    else {\\n\\t                        newDataIndexMap[key] = null;\\n\\t                    }\\n\\t                    this._update && this._update(idx, i);\\n\\t                }\\n\\t                else {\\n\\t                    this._remove && this._remove(i);\\n\\t                }\\n\\t            }\\n\\n\\t            for (var i = 0; i < newDataKeyArr.length; i++) {\\n\\t                var key = newDataKeyArr[i];\\n\\t                if (newDataIndexMap.hasOwnProperty(key)) {\\n\\t                    var idx = newDataIndexMap[key];\\n\\t                    if (idx == null) {\\n\\t                        continue;\\n\\t                    }\\n\\t                    // idx can never be empty array here. see 'set null' logic above.\\n\\t                    if (!idx.length) {\\n\\t                        this._add && this._add(idx);\\n\\t                    }\\n\\t                    else {\\n\\t                        for (var j = 0, len = idx.length; j < len; j++) {\\n\\t                            this._add && this._add(idx[j]);\\n\\t                        }\\n\\t                    }\\n\\t                }\\n\\t            }\\n\\t        }\\n\\t    };\\n\\n\\t    function initIndexMap(arr, map, keyArr, keyGetter) {\\n\\t        for (var i = 0; i < arr.length; i++) {\\n\\t            // Add prefix to avoid conflict with Object.prototype.\\n\\t            var key = '_ec_' + keyGetter(arr[i], i);\\n\\t            var existence = map[key];\\n\\t            if (existence == null) {\\n\\t                keyArr.push(key);\\n\\t                map[key] = i;\\n\\t            }\\n\\t            else {\\n\\t                if (!existence.length) {\\n\\t                    map[key] = existence = [existence];\\n\\t                }\\n\\t                existence.push(i);\\n\\t            }\\n\\t        }\\n\\t    }\\n\\n\\t    module.exports = DataDiffer;\\n\\n\\n/***/ },\\n/* 100 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var numberUtil = __webpack_require__(7);\\n\\t    var linearMap = numberUtil.linearMap;\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var axisHelper = __webpack_require__(101);\\n\\n\\t    function fixExtentWithBands(extent, nTick) {\\n\\t        var size = extent[1] - extent[0];\\n\\t        var len = nTick;\\n\\t        var margin = size / len / 2;\\n\\t        extent[0] += margin;\\n\\t        extent[1] -= margin;\\n\\t    }\\n\\n\\t    var normalizedExtent = [0, 1];\\n\\t    /**\\n\\t     * @name module:echarts/coord/CartesianAxis\\n\\t     * @constructor\\n\\t     */\\n\\t    var Axis = function (dim, scale, extent) {\\n\\n\\t        /**\\n\\t         * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'\\n\\t         * @type {string}\\n\\t         */\\n\\t        this.dim = dim;\\n\\n\\t        /**\\n\\t         * Axis scale\\n\\t         * @type {module:echarts/coord/scale/*}\\n\\t         */\\n\\t        this.scale = scale;\\n\\n\\t        /**\\n\\t         * @type {Array.<number>}\\n\\t         * @private\\n\\t         */\\n\\t        this._extent = extent || [0, 0];\\n\\n\\t        /**\\n\\t         * @type {boolean}\\n\\t         */\\n\\t        this.inverse = false;\\n\\n\\t        /**\\n\\t         * Usually true when axis has a ordinal scale\\n\\t         * @type {boolean}\\n\\t         */\\n\\t        this.onBand = false;\\n\\n\\t        /**\\n\\t         * @private\\n\\t         * @type {number}\\n\\t         */\\n\\t        this._labelInterval;\\n\\t    };\\n\\n\\t    Axis.prototype = {\\n\\n\\t        constructor: Axis,\\n\\n\\t        /**\\n\\t         * If axis extent contain given coord\\n\\t         * @param {number} coord\\n\\t         * @return {boolean}\\n\\t         */\\n\\t        contain: function (coord) {\\n\\t            var extent = this._extent;\\n\\t            var min = Math.min(extent[0], extent[1]);\\n\\t            var max = Math.max(extent[0], extent[1]);\\n\\t            return coord >= min && coord <= max;\\n\\t        },\\n\\n\\t        /**\\n\\t         * If axis extent contain given data\\n\\t         * @param {number} data\\n\\t         * @return {boolean}\\n\\t         */\\n\\t        containData: function (data) {\\n\\t            return this.contain(this.dataToCoord(data));\\n\\t        },\\n\\n\\t        /**\\n\\t         * Get coord extent.\\n\\t         * @return {Array.<number>}\\n\\t         */\\n\\t        getExtent: function () {\\n\\t            return this._extent.slice();\\n\\t        },\\n\\n\\t        /**\\n\\t         * Get precision used for formatting\\n\\t         * @param {Array.<number>} [dataExtent]\\n\\t         * @return {number}\\n\\t         */\\n\\t        getPixelPrecision: function (dataExtent) {\\n\\t            return numberUtil.getPixelPrecision(\\n\\t                dataExtent || this.scale.getExtent(),\\n\\t                this._extent\\n\\t            );\\n\\t        },\\n\\n\\t        /**\\n\\t         * Set coord extent\\n\\t         * @param {number} start\\n\\t         * @param {number} end\\n\\t         */\\n\\t        setExtent: function (start, end) {\\n\\t            var extent = this._extent;\\n\\t            extent[0] = start;\\n\\t            extent[1] = end;\\n\\t        },\\n\\n\\t        /**\\n\\t         * Convert data to coord. Data is the rank if it has a ordinal scale\\n\\t         * @param {number} data\\n\\t         * @param  {boolean} clamp\\n\\t         * @return {number}\\n\\t         */\\n\\t        dataToCoord: function (data, clamp) {\\n\\t            var extent = this._extent;\\n\\t            var scale = this.scale;\\n\\t            data = scale.normalize(data);\\n\\n\\t            if (this.onBand && scale.type === 'ordinal') {\\n\\t                extent = extent.slice();\\n\\t                fixExtentWithBands(extent, scale.count());\\n\\t            }\\n\\n\\t            return linearMap(data, normalizedExtent, extent, clamp);\\n\\t        },\\n\\n\\t        /**\\n\\t         * Convert coord to data. Data is the rank if it has a ordinal scale\\n\\t         * @param {number} coord\\n\\t         * @param  {boolean} clamp\\n\\t         * @return {number}\\n\\t         */\\n\\t        coordToData: function (coord, clamp) {\\n\\t            var extent = this._extent;\\n\\t            var scale = this.scale;\\n\\n\\t            if (this.onBand && scale.type === 'ordinal') {\\n\\t                extent = extent.slice();\\n\\t                fixExtentWithBands(extent, scale.count());\\n\\t            }\\n\\n\\t            var t = linearMap(coord, extent, normalizedExtent, clamp);\\n\\n\\t            return this.scale.scale(t);\\n\\t        },\\n\\n\\t        /**\\n\\t         * Convert pixel point to data in axis\\n\\t         * @param {Array.<number>} point\\n\\t         * @param  {boolean} clamp\\n\\t         * @return {number} data\\n\\t         */\\n\\t        pointToData: function (point, clamp) {\\n\\t            // Should be implemented in derived class if necessary.\\n\\t        },\\n\\n\\t        /**\\n\\t         * @return {Array.<number>}\\n\\t         */\\n\\t        getTicksCoords: function (alignWithLabel) {\\n\\t            if (this.onBand && !alignWithLabel) {\\n\\t                var bands = this.getBands();\\n\\t                var coords = [];\\n\\t                for (var i = 0; i < bands.length; i++) {\\n\\t                    coords.push(bands[i][0]);\\n\\t                }\\n\\t                if (bands[i - 1]) {\\n\\t                    coords.push(bands[i - 1][1]);\\n\\t                }\\n\\t                return coords;\\n\\t            }\\n\\t            else {\\n\\t                return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\\n\\t            }\\n\\t        },\\n\\n\\t        /**\\n\\t         * Coords of labels are on the ticks or on the middle of bands\\n\\t         * @return {Array.<number>}\\n\\t         */\\n\\t        getLabelsCoords: function () {\\n\\t            return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\\n\\t        },\\n\\n\\t        /**\\n\\t         * Get bands.\\n\\t         *\\n\\t         * If axis has labels [1, 2, 3, 4]. Bands on the axis are\\n\\t         * |---1---|---2---|---3---|---4---|.\\n\\t         *\\n\\t         * @return {Array}\\n\\t         */\\n\\t         // FIXME Situation when labels is on ticks\\n\\t        getBands: function () {\\n\\t            var extent = this.getExtent();\\n\\t            var bands = [];\\n\\t            var len = this.scale.count();\\n\\t            var start = extent[0];\\n\\t            var end = extent[1];\\n\\t            var span = end - start;\\n\\n\\t            for (var i = 0; i < len; i++) {\\n\\t                bands.push([\\n\\t                    span * i / len + start,\\n\\t                    span * (i + 1) / len + start\\n\\t                ]);\\n\\t            }\\n\\t            return bands;\\n\\t        },\\n\\n\\t        /**\\n\\t         * Get width of band\\n\\t         * @return {number}\\n\\t         */\\n\\t        getBandWidth: function () {\\n\\t            var axisExtent = this._extent;\\n\\t            var dataExtent = this.scale.getExtent();\\n\\n\\t            var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0);\\n\\t            // Fix #2728, avoid NaN when only one data.\\n\\t            len === 0 && (len = 1);\\n\\n\\t            var size = Math.abs(axisExtent[1] - axisExtent[0]);\\n\\n\\t            return Math.abs(size) / len;\\n\\t        },\\n\\n\\t        /**\\n\\t         * Get interval of the axis label.\\n\\t         * @return {number}\\n\\t         */\\n\\t        getLabelInterval: function () {\\n\\t            var labelInterval = this._labelInterval;\\n\\t            if (!labelInterval) {\\n\\t                var axisModel = this.model;\\n\\t                var labelModel = axisModel.getModel('axisLabel');\\n\\t                var interval = labelModel.get('interval');\\n\\t                if (!(this.type === 'category' && interval === 'auto')) {\\n\\t                    labelInterval = interval === 'auto' ? 0 : interval;\\n\\t                }\\n\\t                else if (this.isHorizontal){\\n\\t                    labelInterval = axisHelper.getAxisLabelInterval(\\n\\t                        zrUtil.map(this.scale.getTicks(), this.dataToCoord, this),\\n\\t                        axisModel.getFormattedLabels(),\\n\\t                        labelModel.getModel('textStyle').getFont(),\\n\\t                        this.isHorizontal()\\n\\t                    );\\n\\t                }\\n\\t                this._labelInterval = labelInterval;\\n\\t            }\\n\\t            return labelInterval;\\n\\t        }\\n\\n\\t    };\\n\\n\\t    module.exports = Axis;\\n\\n\\n/***/ },\\n/* 101 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var OrdinalScale = __webpack_require__(102);\\n\\t    var IntervalScale = __webpack_require__(104);\\n\\t    __webpack_require__(106);\\n\\t    __webpack_require__(107);\\n\\t    var Scale = __webpack_require__(103);\\n\\n\\t    var numberUtil = __webpack_require__(7);\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var textContain = __webpack_require__(8);\\n\\t    var axisHelper = {};\\n\\n\\t    /**\\n\\t     * Get axis scale extent before niced.\\n\\t     * Item of returned array can only be number (including Infinity and NaN).\\n\\t     */\\n\\t    axisHelper.getScaleExtent = function (scale, model) {\\n\\t        var scaleType = scale.type;\\n\\n\\t        var min = model.getMin();\\n\\t        var max = model.getMax();\\n\\t        var fixMin = min != null;\\n\\t        var fixMax = max != null;\\n\\t        var originalExtent = scale.getExtent();\\n\\n\\t        var axisDataLen;\\n\\t        var boundaryGap;\\n\\t        var span;\\n\\t        if (scaleType === 'ordinal') {\\n\\t            axisDataLen = (model.get('data') || []).length;\\n\\t        }\\n\\t        else {\\n\\t            boundaryGap = model.get('boundaryGap');\\n\\t            if (!zrUtil.isArray(boundaryGap)) {\\n\\t                boundaryGap = [boundaryGap || 0, boundaryGap || 0];\\n\\t            }\\n\\t            if (typeof boundaryGap[0] === 'boolean') {\\n\\t                if (true) {\\n\\t                    console.warn('Boolean type for boundaryGap is only '\\n\\t                        + 'allowed for ordinal axis. Please use string in '\\n\\t                        + 'percentage instead, e.g., \\\"20%\\\". Currently, '\\n\\t                        + 'boundaryGap is set to be 0.');\\n\\t                }\\n\\t                boundaryGap = [0, 0];\\n\\t            }\\n\\t            boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\\n\\t            boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\\n\\t            span = (originalExtent[1] - originalExtent[0])\\n\\t                || Math.abs(originalExtent[0]);\\n\\t        }\\n\\n\\t        // Notice: When min/max is not set (that is, when there are null/undefined,\\n\\t        // which is the most common case), these cases should be ensured:\\n\\t        // (1) For 'ordinal', show all axis.data.\\n\\t        // (2) For others:\\n\\t        //      + `boundaryGap` is applied (if min/max set, boundaryGap is\\n\\t        //      disabled).\\n\\t        //      + If `needCrossZero`, min/max should be zero, otherwise, min/max should\\n\\t        //      be the result that originalExtent enlarged by boundaryGap.\\n\\t        // (3) If no data, it should be ensured that `scale.setBlank` is set.\\n\\n\\t        // FIXME\\n\\t        // (1) When min/max is 'dataMin' or 'dataMax', should boundaryGap be able to used?\\n\\t        // (2) When `needCrossZero` and all data is positive/negative, should it be ensured\\n\\t        // that the results processed by boundaryGap are positive/negative?\\n\\n\\t        if (min == null) {\\n\\t            min = scaleType === 'ordinal'\\n\\t                ? (axisDataLen ? 0 : NaN)\\n\\t                : originalExtent[0] - boundaryGap[0] * span;\\n\\t        }\\n\\t        if (max == null) {\\n\\t            max = scaleType === 'ordinal'\\n\\t                ? (axisDataLen ? axisDataLen - 1 : NaN)\\n\\t                : originalExtent[1] + boundaryGap[1] * span;\\n\\t        }\\n\\n\\t        if (min === 'dataMin') {\\n\\t            min = originalExtent[0];\\n\\t        }\\n\\t        if (max === 'dataMax') {\\n\\t            max = originalExtent[1];\\n\\t        }\\n\\n\\t        (min == null || !isFinite(min)) && (min = NaN);\\n\\t        (max == null || !isFinite(max)) && (max = NaN);\\n\\n\\t        scale.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max));\\n\\n\\t        // Evaluate if axis needs cross zero\\n\\t        if (model.getNeedCrossZero()) {\\n\\t            // Axis is over zero and min is not set\\n\\t            if (min > 0 && max > 0 && !fixMin) {\\n\\t                min = 0;\\n\\t            }\\n\\t            // Axis is under zero and max is not set\\n\\t            if (min < 0 && max < 0 && !fixMax) {\\n\\t                max = 0;\\n\\t            }\\n\\t        }\\n\\n\\t        return [min, max];\\n\\t    };\\n\\n\\t    axisHelper.niceScaleExtent = function (scale, model) {\\n\\t        var extent = axisHelper.getScaleExtent(scale, model);\\n\\t        var fixMin = model.getMin() != null;\\n\\t        var fixMax = model.getMax() != null;\\n\\t        var splitNumber = model.get('splitNumber');\\n\\n\\t        if (scale.type === 'log') {\\n\\t            scale.base = model.get('logBase');\\n\\t        }\\n\\n\\t        scale.setExtent(extent[0], extent[1]);\\n\\t        scale.niceExtent({\\n\\t            splitNumber: splitNumber,\\n\\t            fixMin: fixMin,\\n\\t            fixMax: fixMax,\\n\\t            minInterval: scale.type === 'interval' ? model.get('minInterval') : null\\n\\t        });\\n\\n\\t        // If some one specified the min, max. And the default calculated interval\\n\\t        // is not good enough. He can specify the interval. It is often appeared\\n\\t        // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\\n\\t        // to be 60.\\n\\t        // FIXME\\n\\t        var interval = model.get('interval');\\n\\t        if (interval != null) {\\n\\t            scale.setInterval && scale.setInterval(interval);\\n\\t        }\\n\\t    };\\n\\n\\t    /**\\n\\t     * @param {module:echarts/model/Model} model\\n\\t     * @param {string} [axisType] Default retrieve from model.type\\n\\t     * @return {module:echarts/scale/*}\\n\\t     */\\n\\t    axisHelper.createScaleByModel = function(model, axisType) {\\n\\t        axisType = axisType || model.get('type');\\n\\t        if (axisType) {\\n\\t            switch (axisType) {\\n\\t                // Buildin scale\\n\\t                case 'category':\\n\\t                    return new OrdinalScale(\\n\\t                        model.getCategories(), [Infinity, -Infinity]\\n\\t                    );\\n\\t                case 'value':\\n\\t                    return new IntervalScale();\\n\\t                // Extended scale, like time and log\\n\\t                default:\\n\\t                    return (Scale.getClass(axisType) || IntervalScale).create(model);\\n\\t            }\\n\\t        }\\n\\t    };\\n\\n\\t    /**\\n\\t     * Check if the axis corss 0\\n\\t     */\\n\\t    axisHelper.ifAxisCrossZero = function (axis) {\\n\\t        var dataExtent = axis.scale.getExtent();\\n\\t        var min = dataExtent[0];\\n\\t        var max = dataExtent[1];\\n\\t        return !((min > 0 && max > 0) || (min < 0 && max < 0));\\n\\t    };\\n\\n\\t    /**\\n\\t     * @param {Array.<number>} tickCoords In axis self coordinate.\\n\\t     * @param {Array.<string>} labels\\n\\t     * @param {string} font\\n\\t     * @param {boolean} isAxisHorizontal\\n\\t     * @return {number}\\n\\t     */\\n\\t    axisHelper.getAxisLabelInterval = function (tickCoords, labels, font, isAxisHorizontal) {\\n\\t        // FIXME\\n\\t        // 不同角的axis和label，不只是horizontal和vertical.\\n\\n\\t        var textSpaceTakenRect;\\n\\t        var autoLabelInterval = 0;\\n\\t        var accumulatedLabelInterval = 0;\\n\\n\\t        var step = 1;\\n\\t        if (labels.length > 40) {\\n\\t            // Simple optimization for large amount of labels\\n\\t            step = Math.floor(labels.length / 40);\\n\\t        }\\n\\n\\t        for (var i = 0; i < tickCoords.length; i += step) {\\n\\t            var tickCoord = tickCoords[i];\\n\\t            var rect = textContain.getBoundingRect(\\n\\t                labels[i], font, 'center', 'top'\\n\\t            );\\n\\t            rect[isAxisHorizontal ? 'x' : 'y'] += tickCoord;\\n\\t            // FIXME Magic number 1.5\\n\\t            rect[isAxisHorizontal ? 'width' : 'height'] *= 1.3;\\n\\t            if (!textSpaceTakenRect) {\\n\\t                textSpaceTakenRect = rect.clone();\\n\\t            }\\n\\t            // There is no space for current label;\\n\\t            else if (textSpaceTakenRect.intersect(rect)) {\\n\\t                accumulatedLabelInterval++;\\n\\t                autoLabelInterval = Math.max(autoLabelInterval, accumulatedLabelInterval);\\n\\t            }\\n\\t            else {\\n\\t                textSpaceTakenRect.union(rect);\\n\\t                // Reset\\n\\t                accumulatedLabelInterval = 0;\\n\\t            }\\n\\t        }\\n\\t        if (autoLabelInterval === 0 && step > 1) {\\n\\t            return step;\\n\\t        }\\n\\t        return (autoLabelInterval + 1) * step - 1;\\n\\t    };\\n\\n\\t    /**\\n\\t     * @param {Object} axis\\n\\t     * @param {Function} labelFormatter\\n\\t     * @return {Array.<string>}\\n\\t     */\\n\\t    axisHelper.getFormattedLabels = function (axis, labelFormatter) {\\n\\t        var scale = axis.scale;\\n\\t        var labels = scale.getTicksLabels();\\n\\t        var ticks = scale.getTicks();\\n\\t        if (typeof labelFormatter === 'string') {\\n\\t            labelFormatter = (function (tpl) {\\n\\t                return function (val) {\\n\\t                    return tpl.replace('{value}', val != null ? val : '');\\n\\t                };\\n\\t            })(labelFormatter);\\n\\t            // Consider empty array\\n\\t            return zrUtil.map(labels, labelFormatter);\\n\\t        }\\n\\t        else if (typeof labelFormatter === 'function') {\\n\\t            return zrUtil.map(ticks, function (tick, idx) {\\n\\t                return labelFormatter(\\n\\t                    axisHelper.getAxisRawValue(axis, tick),\\n\\t                    idx\\n\\t                );\\n\\t            }, this);\\n\\t        }\\n\\t        else {\\n\\t            return labels;\\n\\t        }\\n\\t    };\\n\\n\\t    axisHelper.getAxisRawValue = function (axis, value) {\\n\\t        // In category axis with data zoom, tick is not the original\\n\\t        // index of axis.data. So tick should not be exposed to user\\n\\t        // in category axis.\\n\\t        return axis.type === 'category' ? axis.scale.getLabel(value) : value;\\n\\t    };\\n\\n\\t    module.exports = axisHelper;\\n\\n\\n/***/ },\\n/* 102 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * Linear continuous scale\\n\\t * @module echarts/coord/scale/Ordinal\\n\\t *\\n\\t * http://en.wikipedia.org/wiki/Level_of_measurement\\n\\t */\\n\\n\\t// FIXME only one data\\n\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var Scale = __webpack_require__(103);\\n\\n\\t    var scaleProto = Scale.prototype;\\n\\n\\t    var OrdinalScale = Scale.extend({\\n\\n\\t        type: 'ordinal',\\n\\n\\t        init: function (data, extent) {\\n\\t            this._data = data;\\n\\t            this._extent = extent || [0, data.length - 1];\\n\\t        },\\n\\n\\t        parse: function (val) {\\n\\t            return typeof val === 'string'\\n\\t                ? zrUtil.indexOf(this._data, val)\\n\\t                // val might be float.\\n\\t                : Math.round(val);\\n\\t        },\\n\\n\\t        contain: function (rank) {\\n\\t            rank = this.parse(rank);\\n\\t            return scaleProto.contain.call(this, rank)\\n\\t                && this._data[rank] != null;\\n\\t        },\\n\\n\\t        /**\\n\\t         * Normalize given rank or name to linear [0, 1]\\n\\t         * @param {number|string} [val]\\n\\t         * @return {number}\\n\\t         */\\n\\t        normalize: function (val) {\\n\\t            return scaleProto.normalize.call(this, this.parse(val));\\n\\t        },\\n\\n\\t        scale: function (val) {\\n\\t            return Math.round(scaleProto.scale.call(this, val));\\n\\t        },\\n\\n\\t        /**\\n\\t         * @return {Array}\\n\\t         */\\n\\t        getTicks: function () {\\n\\t            var ticks = [];\\n\\t            var extent = this._extent;\\n\\t            var rank = extent[0];\\n\\n\\t            while (rank <= extent[1]) {\\n\\t                ticks.push(rank);\\n\\t                rank++;\\n\\t            }\\n\\n\\t            return ticks;\\n\\t        },\\n\\n\\t        /**\\n\\t         * Get item on rank n\\n\\t         * @param {number} n\\n\\t         * @return {string}\\n\\t         */\\n\\t        getLabel: function (n) {\\n\\t            return this._data[n];\\n\\t        },\\n\\n\\t        /**\\n\\t         * @return {number}\\n\\t         */\\n\\t        count: function () {\\n\\t            return this._extent[1] - this._extent[0] + 1;\\n\\t        },\\n\\n\\t        /**\\n\\t         * @override\\n\\t         */\\n\\t        unionExtentFromData: function (data, dim) {\\n\\t            this.unionExtent(data.getDataExtent(dim, false));\\n\\t        },\\n\\n\\t        niceTicks: zrUtil.noop,\\n\\t        niceExtent: zrUtil.noop\\n\\t    });\\n\\n\\t    /**\\n\\t     * @return {module:echarts/scale/Time}\\n\\t     */\\n\\t    OrdinalScale.create = function () {\\n\\t        return new OrdinalScale();\\n\\t    };\\n\\n\\t    module.exports = OrdinalScale;\\n\\n\\n/***/ },\\n/* 103 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * // Scale class management\\n\\t * @module echarts/scale/Scale\\n\\t */\\n\\n\\n\\t    var clazzUtil = __webpack_require__(13);\\n\\n\\t    /**\\n\\t     * @param {Object} [setting]\\n\\t     */\\n\\t    function Scale(setting) {\\n\\t        this._setting = setting || {};\\n\\n\\t        /**\\n\\t         * Extent\\n\\t         * @type {Array.<number>}\\n\\t         * @protected\\n\\t         */\\n\\t        this._extent = [Infinity, -Infinity];\\n\\n\\t        /**\\n\\t         * Step is calculated in adjustExtent\\n\\t         * @type {Array.<number>}\\n\\t         * @protected\\n\\t         */\\n\\t        this._interval = 0;\\n\\n\\t        this.init && this.init.apply(this, arguments);\\n\\t    }\\n\\n\\t    var scaleProto = Scale.prototype;\\n\\n\\t    /**\\n\\t     * Parse input val to valid inner number.\\n\\t     * @param {*} val\\n\\t     * @return {number}\\n\\t     */\\n\\t    scaleProto.parse = function (val) {\\n\\t        // Notice: This would be a trap here, If the implementation\\n\\t        // of this method depends on extent, and this method is used\\n\\t        // before extent set (like in dataZoom), it would be wrong.\\n\\t        // Nevertheless, parse does not depend on extent generally.\\n\\t        return val;\\n\\t    };\\n\\n\\t    scaleProto.getSetting = function (name) {\\n\\t        return this._setting[name];\\n\\t    };\\n\\n\\t    scaleProto.contain = function (val) {\\n\\t        var extent = this._extent;\\n\\t        return val >= extent[0] && val <= extent[1];\\n\\t    };\\n\\n\\t    /**\\n\\t     * Normalize value to linear [0, 1], return 0.5 if extent span is 0\\n\\t     * @param {number} val\\n\\t     * @return {number}\\n\\t     */\\n\\t    scaleProto.normalize = function (val) {\\n\\t        var extent = this._extent;\\n\\t        if (extent[1] === extent[0]) {\\n\\t            return 0.5;\\n\\t        }\\n\\t        return (val - extent[0]) / (extent[1] - extent[0]);\\n\\t    };\\n\\n\\t    /**\\n\\t     * Scale normalized value\\n\\t     * @param {number} val\\n\\t     * @return {number}\\n\\t     */\\n\\t    scaleProto.scale = function (val) {\\n\\t        var extent = this._extent;\\n\\t        return val * (extent[1] - extent[0]) + extent[0];\\n\\t    };\\n\\n\\t    /**\\n\\t     * Set extent from data\\n\\t     * @param {Array.<number>} other\\n\\t     */\\n\\t    scaleProto.unionExtent = function (other) {\\n\\t        var extent = this._extent;\\n\\t        other[0] < extent[0] && (extent[0] = other[0]);\\n\\t        other[1] > extent[1] && (extent[1] = other[1]);\\n\\t        // not setExtent because in log axis it may transformed to power\\n\\t        // this.setExtent(extent[0], extent[1]);\\n\\t    };\\n\\n\\t    /**\\n\\t     * Set extent from data\\n\\t     * @param {module:echarts/data/List} data\\n\\t     * @param {string} dim\\n\\t     */\\n\\t    scaleProto.unionExtentFromData = function (data, dim) {\\n\\t        this.unionExtent(data.getDataExtent(dim, true));\\n\\t    };\\n\\n\\t    /**\\n\\t     * Get extent\\n\\t     * @return {Array.<number>}\\n\\t     */\\n\\t    scaleProto.getExtent = function () {\\n\\t        return this._extent.slice();\\n\\t    };\\n\\n\\t    /**\\n\\t     * Set extent\\n\\t     * @param {number} start\\n\\t     * @param {number} end\\n\\t     */\\n\\t    scaleProto.setExtent = function (start, end) {\\n\\t        var thisExtent = this._extent;\\n\\t        if (!isNaN(start)) {\\n\\t            thisExtent[0] = start;\\n\\t        }\\n\\t        if (!isNaN(end)) {\\n\\t            thisExtent[1] = end;\\n\\t        }\\n\\t    };\\n\\n\\t    /**\\n\\t     * @return {Array.<string>}\\n\\t     */\\n\\t    scaleProto.getTicksLabels = function () {\\n\\t        var labels = [];\\n\\t        var ticks = this.getTicks();\\n\\t        for (var i = 0; i < ticks.length; i++) {\\n\\t            labels.push(this.getLabel(ticks[i]));\\n\\t        }\\n\\t        return labels;\\n\\t    };\\n\\n\\t    /**\\n\\t     * When axis extent depends on data and no data exists,\\n\\t     * axis ticks should not be drawn, which is named 'blank'.\\n\\t     */\\n\\t    scaleProto.isBlank = function () {\\n\\t        return this._isBlank;\\n\\t    },\\n\\n\\t    /**\\n\\t     * When axis extent depends on data and no data exists,\\n\\t     * axis ticks should not be drawn, which is named 'blank'.\\n\\t     */\\n\\t    scaleProto.setBlank = function (isBlank) {\\n\\t        this._isBlank = isBlank;\\n\\t    };\\n\\n\\n\\t    clazzUtil.enableClassExtend(Scale);\\n\\t    clazzUtil.enableClassManagement(Scale, {\\n\\t        registerWhenExtend: true\\n\\t    });\\n\\n\\t    module.exports = Scale;\\n\\n\\n/***/ },\\n/* 104 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * Interval scale\\n\\t * @module echarts/scale/Interval\\n\\t */\\n\\n\\n\\n\\t    var numberUtil = __webpack_require__(7);\\n\\t    var formatUtil = __webpack_require__(6);\\n\\t    var Scale = __webpack_require__(103);\\n\\t    var helper = __webpack_require__(105);\\n\\n\\t    var roundNumber = numberUtil.round;\\n\\n\\t    /**\\n\\t     * @alias module:echarts/coord/scale/Interval\\n\\t     * @constructor\\n\\t     */\\n\\t    var IntervalScale = Scale.extend({\\n\\n\\t        type: 'interval',\\n\\n\\t        _interval: 0,\\n\\n\\t        _intervalPrecision: 2,\\n\\n\\t        setExtent: function (start, end) {\\n\\t            var thisExtent = this._extent;\\n\\t            //start,end may be a Number like '25',so...\\n\\t            if (!isNaN(start)) {\\n\\t                thisExtent[0] = parseFloat(start);\\n\\t            }\\n\\t            if (!isNaN(end)) {\\n\\t                thisExtent[1] = parseFloat(end);\\n\\t            }\\n\\t        },\\n\\n\\t        unionExtent: function (other) {\\n\\t            var extent = this._extent;\\n\\t            other[0] < extent[0] && (extent[0] = other[0]);\\n\\t            other[1] > extent[1] && (extent[1] = other[1]);\\n\\n\\t            // unionExtent may called by it's sub classes\\n\\t            IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\\n\\t        },\\n\\t        /**\\n\\t         * Get interval\\n\\t         */\\n\\t        getInterval: function () {\\n\\t            return this._interval;\\n\\t        },\\n\\n\\t        /**\\n\\t         * Set interval\\n\\t         */\\n\\t        setInterval: function (interval) {\\n\\t            this._interval = interval;\\n\\t            // Dropped auto calculated niceExtent and use user setted extent\\n\\t            // We assume user wan't to set both interval, min, max to get a better result\\n\\t            this._niceExtent = this._extent.slice();\\n\\n\\t            this._intervalPrecision = helper.getIntervalPrecision(interval);\\n\\t        },\\n\\n\\t        /**\\n\\t         * @return {Array.<number>}\\n\\t         */\\n\\t        getTicks: function () {\\n\\t            return helper.intervalScaleGetTicks(\\n\\t                this._interval, this._extent, this._niceExtent, this._intervalPrecision\\n\\t            );\\n\\t        },\\n\\n\\t        /**\\n\\t         * @return {Array.<string>}\\n\\t         */\\n\\t        getTicksLabels: function () {\\n\\t            var labels = [];\\n\\t            var ticks = this.getTicks();\\n\\t            for (var i = 0; i < ticks.length; i++) {\\n\\t                labels.push(this.getLabel(ticks[i]));\\n\\t            }\\n\\t            return labels;\\n\\t        },\\n\\n\\t        /**\\n\\t         * @param {number} data\\n\\t         * @param {Object} [opt]\\n\\t         * @param {number|string} [opt.precision] If 'auto', use nice presision.\\n\\t         * @param {boolean} [opt.pad] returns 1.50 but not 1.5 if precision is 2.\\n\\t         * @return {string}\\n\\t         */\\n\\t        getLabel: function (data, opt) {\\n\\t            if (data == null) {\\n\\t                return '';\\n\\t            }\\n\\n\\t            var precision = opt && opt.precision;\\n\\n\\t            if (precision == null) {\\n\\t                precision = numberUtil.getPrecisionSafe(data) || 0;\\n\\t            }\\n\\t            else if (precision === 'auto') {\\n\\t                // Should be more precise then tick.\\n\\t                precision = this._intervalPrecision;\\n\\t            }\\n\\n\\t            // (1) If `precision` is set, 12.005 should be display as '12.00500'.\\n\\t            // (2) Use roundNumber (toFixed) to avoid scientific notation like '3.5e-7'.\\n\\t            data = roundNumber(data, precision, true);\\n\\n\\t            return formatUtil.addCommas(data);\\n\\t        },\\n\\n\\t        /**\\n\\t         * Update interval and extent of intervals for nice ticks\\n\\t         *\\n\\t         * @param {number} [splitNumber = 5] Desired number of ticks\\n\\t         * @param {number} [minInterval]\\n\\t         */\\n\\t        niceTicks: function (splitNumber, minInterval) {\\n\\t            splitNumber = splitNumber || 5;\\n\\t            var extent = this._extent;\\n\\t            var span = extent[1] - extent[0];\\n\\t            if (!isFinite(span)) {\\n\\t                return;\\n\\t            }\\n\\t            // User may set axis min 0 and data are all negative\\n\\t            // FIXME If it needs to reverse ?\\n\\t            if (span < 0) {\\n\\t                span = -span;\\n\\t                extent.reverse();\\n\\t            }\\n\\n\\t            var result = helper.intervalScaleNiceTicks(extent, splitNumber, minInterval);\\n\\n\\t            this._intervalPrecision = result.intervalPrecision;\\n\\t            this._interval = result.interval;\\n\\t            this._niceExtent = result.niceTickExtent;\\n\\t        },\\n\\n\\t        /**\\n\\t         * Nice extent.\\n\\t         * @param {Object} opt\\n\\t         * @param {number} [opt.splitNumber = 5] Given approx tick number\\n\\t         * @param {boolean} [opt.fixMin=false]\\n\\t         * @param {boolean} [opt.fixMax=false]\\n\\t         * @param {boolean} [opt.minInterval=false]\\n\\t         */\\n\\t        niceExtent: function (opt) {\\n\\t            var extent = this._extent;\\n\\t            // If extent start and end are same, expand them\\n\\t            if (extent[0] === extent[1]) {\\n\\t                if (extent[0] !== 0) {\\n\\t                    // Expand extent\\n\\t                    var expandSize = extent[0];\\n\\t                    // In the fowllowing case\\n\\t                    //      Axis has been fixed max 100\\n\\t                    //      Plus data are all 100 and axis extent are [100, 100].\\n\\t                    // Extend to the both side will cause expanded max is larger than fixed max.\\n\\t                    // So only expand to the smaller side.\\n\\t                    if (!opt.fixMax) {\\n\\t                        extent[1] += expandSize / 2;\\n\\t                        extent[0] -= expandSize / 2;\\n\\t                    }\\n\\t                    else {\\n\\t                        extent[0] -= expandSize / 2;\\n\\t                    }\\n\\t                }\\n\\t                else {\\n\\t                    extent[1] = 1;\\n\\t                }\\n\\t            }\\n\\t            var span = extent[1] - extent[0];\\n\\t            // If there are no data and extent are [Infinity, -Infinity]\\n\\t            if (!isFinite(span)) {\\n\\t                extent[0] = 0;\\n\\t                extent[1] = 1;\\n\\t            }\\n\\n\\t            this.niceTicks(opt.splitNumber, opt.minInterval);\\n\\n\\t            // var extent = this._extent;\\n\\t            var interval = this._interval;\\n\\n\\t            if (!opt.fixMin) {\\n\\t                extent[0] = roundNumber(Math.floor(extent[0] / interval) * interval);\\n\\t            }\\n\\t            if (!opt.fixMax) {\\n\\t                extent[1] = roundNumber(Math.ceil(extent[1] / interval) * interval);\\n\\t            }\\n\\t        }\\n\\t    });\\n\\n\\t    /**\\n\\t     * @return {module:echarts/scale/Time}\\n\\t     */\\n\\t    IntervalScale.create = function () {\\n\\t        return new IntervalScale();\\n\\t    };\\n\\n\\t    module.exports = IntervalScale;\\n\\n\\n\\n/***/ },\\n/* 105 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * For testable.\\n\\t */\\n\\n\\n\\t    var numberUtil = __webpack_require__(7);\\n\\n\\t    var roundNumber = numberUtil.round;\\n\\n\\t    var helper = {};\\n\\n\\t    /**\\n\\t     * @param {Array.<number>} extent Both extent[0] and extent[1] should be valid number.\\n\\t     *                                Should be extent[0] < extent[1].\\n\\t     * @param {number} splitNumber splitNumber should be >= 1.\\n\\t     * @param {number} [minInterval]\\n\\t     * @return {Object} {interval, intervalPrecision, niceTickExtent}\\n\\t     */\\n\\t    helper.intervalScaleNiceTicks = function (extent, splitNumber, minInterval) {\\n\\t        var result = {};\\n\\t        var span = extent[1] - extent[0];\\n\\n\\t        var interval = result.interval = numberUtil.nice(span / splitNumber, true);\\n\\t        if (minInterval != null && interval < minInterval) {\\n\\t            interval = result.interval = minInterval;\\n\\t        }\\n\\t        // Tow more digital for tick.\\n\\t        var precision = result.intervalPrecision = helper.getIntervalPrecision(interval);\\n\\t        // Niced extent inside original extent\\n\\t        var niceTickExtent = result.niceTickExtent = [\\n\\t            roundNumber(Math.ceil(extent[0] / interval) * interval, precision),\\n\\t            roundNumber(Math.floor(extent[1] / interval) * interval, precision)\\n\\t        ];\\n\\n\\t        helper.fixExtent(niceTickExtent, extent);\\n\\n\\t        return result;\\n\\t    };\\n\\n\\t    /**\\n\\t     * @param {number} interval\\n\\t     * @return {number} interval precision\\n\\t     */\\n\\t    helper.getIntervalPrecision = function (interval) {\\n\\t        // Tow more digital for tick.\\n\\t        return numberUtil.getPrecisionSafe(interval) + 2;\\n\\t    };\\n\\n\\t    function clamp(niceTickExtent, idx, extent) {\\n\\t        niceTickExtent[idx] = Math.max(Math.min(niceTickExtent[idx], extent[1]), extent[0]);\\n\\t    }\\n\\n\\t    // In some cases (e.g., splitNumber is 1), niceTickExtent may be out of extent.\\n\\t    helper.fixExtent = function (niceTickExtent, extent) {\\n\\t        !isFinite(niceTickExtent[0]) && (niceTickExtent[0] = extent[0]);\\n\\t        !isFinite(niceTickExtent[1]) && (niceTickExtent[1] = extent[1]);\\n\\t        clamp(niceTickExtent, 0, extent);\\n\\t        clamp(niceTickExtent, 1, extent);\\n\\t        if (niceTickExtent[0] > niceTickExtent[1]) {\\n\\t            niceTickExtent[0] = niceTickExtent[1];\\n\\t        }\\n\\t    };\\n\\n\\t    helper.intervalScaleGetTicks = function (interval, extent, niceTickExtent, intervalPrecision) {\\n\\t        var ticks = [];\\n\\n\\t        // If interval is 0, return [];\\n\\t        if (!interval) {\\n\\t            return ticks;\\n\\t        }\\n\\n\\t        // Consider this case: using dataZoom toolbox, zoom and zoom.\\n\\t        var safeLimit = 10000;\\n\\n\\t        if (extent[0] < niceTickExtent[0]) {\\n\\t            ticks.push(extent[0]);\\n\\t        }\\n\\t        var tick = niceTickExtent[0];\\n\\n\\t        while (tick <= niceTickExtent[1]) {\\n\\t            ticks.push(tick);\\n\\t            // Avoid rounding error\\n\\t            tick = roundNumber(tick + interval, intervalPrecision);\\n\\t            if (tick === ticks[ticks.length - 1]) {\\n\\t                // Consider out of safe float point, e.g.,\\n\\t                // -3711126.9907707 + 2e-10 === -3711126.9907707\\n\\t                break;\\n\\t            }\\n\\t            if (ticks.length > safeLimit) {\\n\\t                return [];\\n\\t            }\\n\\t        }\\n\\t        // Consider this case: the last item of ticks is smaller\\n\\t        // than niceTickExtent[1] and niceTickExtent[1] === extent[1].\\n\\t        if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceTickExtent[1])) {\\n\\t            ticks.push(extent[1]);\\n\\t        }\\n\\n\\t        return ticks;\\n\\t    };\\n\\n\\t    module.exports = helper;\\n\\n\\n/***/ },\\n/* 106 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * Interval scale\\n\\t * @module echarts/coord/scale/Time\\n\\t */\\n\\n\\n\\n\\t    // [About UTC and local time zone]:\\n\\t    // In most cases, `number.parseDate` will treat input data string as local time\\n\\t    // (except time zone is specified in time string). And `format.formateTime` returns\\n\\t    // local time by default. option.useUTC is false by default. This design have\\n\\t    // concidered these common case:\\n\\t    // (1) Time that is persistent in server is in UTC, but it is needed to be diplayed\\n\\t    // in local time by default.\\n\\t    // (2) By default, the input data string (e.g., '2011-01-02') should be displayed\\n\\t    // as its original time, without any time difference.\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var numberUtil = __webpack_require__(7);\\n\\t    var formatUtil = __webpack_require__(6);\\n\\t    var scaleHelper = __webpack_require__(105);\\n\\n\\t    var IntervalScale = __webpack_require__(104);\\n\\n\\t    var intervalScaleProto = IntervalScale.prototype;\\n\\n\\t    var mathCeil = Math.ceil;\\n\\t    var mathFloor = Math.floor;\\n\\t    var ONE_SECOND = 1000;\\n\\t    var ONE_MINUTE = ONE_SECOND * 60;\\n\\t    var ONE_HOUR = ONE_MINUTE * 60;\\n\\t    var ONE_DAY = ONE_HOUR * 24;\\n\\n\\t    // FIXME 公用？\\n\\t    var bisect = function (a, x, lo, hi) {\\n\\t        while (lo < hi) {\\n\\t            var mid = lo + hi >>> 1;\\n\\t            if (a[mid][2] < x) {\\n\\t                lo = mid + 1;\\n\\t            }\\n\\t            else {\\n\\t                hi  = mid;\\n\\t            }\\n\\t        }\\n\\t        return lo;\\n\\t    };\\n\\n\\t    /**\\n\\t     * @alias module:echarts/coord/scale/Time\\n\\t     * @constructor\\n\\t     */\\n\\t    var TimeScale = IntervalScale.extend({\\n\\t        type: 'time',\\n\\n\\t        /**\\n\\t         * @override\\n\\t         */\\n\\t        getLabel: function (val) {\\n\\t            var stepLvl = this._stepLvl;\\n\\n\\t            var date = new Date(val);\\n\\n\\t            return formatUtil.formatTime(stepLvl[0], date, this.getSetting('useUTC'));\\n\\t        },\\n\\n\\t        /**\\n\\t         * @override\\n\\t         */\\n\\t        niceExtent: function (opt) {\\n\\t            var extent = this._extent;\\n\\t            // If extent start and end are same, expand them\\n\\t            if (extent[0] === extent[1]) {\\n\\t                // Expand extent\\n\\t                extent[0] -= ONE_DAY;\\n\\t                extent[1] += ONE_DAY;\\n\\t            }\\n\\t            // If there are no data and extent are [Infinity, -Infinity]\\n\\t            if (extent[1] === -Infinity && extent[0] === Infinity) {\\n\\t                var d = new Date();\\n\\t                extent[1] = new Date(d.getFullYear(), d.getMonth(), d.getDate());\\n\\t                extent[0] = extent[1] - ONE_DAY;\\n\\t            }\\n\\n\\t            this.niceTicks(opt.splitNumber);\\n\\n\\t            // var extent = this._extent;\\n\\t            var interval = this._interval;\\n\\n\\t            if (!opt.fixMin) {\\n\\t                extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\\n\\t            }\\n\\t            if (!opt.fixMax) {\\n\\t                extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\\n\\t            }\\n\\t        },\\n\\n\\t        /**\\n\\t         * @override\\n\\t         */\\n\\t        niceTicks: function (approxTickNum) {\\n\\t            var timezoneOffset = this.getSetting('useUTC')\\n\\t                ? 0 : numberUtil.getTimezoneOffset() * 60 * 1000;\\n\\t            approxTickNum = approxTickNum || 10;\\n\\n\\t            var extent = this._extent;\\n\\t            var span = extent[1] - extent[0];\\n\\t            var approxInterval = span / approxTickNum;\\n\\t            var scaleLevelsLen = scaleLevels.length;\\n\\t            var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\\n\\n\\t            var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\\n\\t            var interval = level[2];\\n\\t            // Same with interval scale if span is much larger than 1 year\\n\\t            if (level[0] === 'year') {\\n\\t                var yearSpan = span / interval;\\n\\n\\t                // From \\\"Nice Numbers for Graph Labels\\\" of Graphic Gems\\n\\t                // var niceYearSpan = numberUtil.nice(yearSpan, false);\\n\\t                var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\\n\\n\\t                interval *= yearStep;\\n\\t            }\\n\\n\\t            var niceExtent = [\\n\\t                Math.round(mathCeil((extent[0] - timezoneOffset) / interval) * interval + timezoneOffset),\\n\\t                Math.round(mathFloor((extent[1] - timezoneOffset)/ interval) * interval + timezoneOffset)\\n\\t            ];\\n\\n\\t            scaleHelper.fixExtent(niceExtent, extent);\\n\\n\\t            this._stepLvl = level;\\n\\t            // Interval will be used in getTicks\\n\\t            this._interval = interval;\\n\\t            this._niceExtent = niceExtent;\\n\\t        },\\n\\n\\t        parse: function (val) {\\n\\t            // val might be float.\\n\\t            return +numberUtil.parseDate(val);\\n\\t        }\\n\\t    });\\n\\n\\t    zrUtil.each(['contain', 'normalize'], function (methodName) {\\n\\t        TimeScale.prototype[methodName] = function (val) {\\n\\t            return intervalScaleProto[methodName].call(this, this.parse(val));\\n\\t        };\\n\\t    });\\n\\n\\t    // Steps from d3\\n\\t    var scaleLevels = [\\n\\t        // Format       step    interval\\n\\t        ['hh:mm:ss',    1,      ONE_SECOND],           // 1s\\n\\t        ['hh:mm:ss',    5,      ONE_SECOND * 5],       // 5s\\n\\t        ['hh:mm:ss',    10,     ONE_SECOND * 10],      // 10s\\n\\t        ['hh:mm:ss',    15,     ONE_SECOND * 15],      // 15s\\n\\t        ['hh:mm:ss',    30,     ONE_SECOND * 30],      // 30s\\n\\t        ['hh:mm\\\\nMM-dd',1,      ONE_MINUTE],          // 1m\\n\\t        ['hh:mm\\\\nMM-dd',5,      ONE_MINUTE * 5],      // 5m\\n\\t        ['hh:mm\\\\nMM-dd',10,     ONE_MINUTE * 10],     // 10m\\n\\t        ['hh:mm\\\\nMM-dd',15,     ONE_MINUTE * 15],     // 15m\\n\\t        ['hh:mm\\\\nMM-dd',30,     ONE_MINUTE * 30],     // 30m\\n\\t        ['hh:mm\\\\nMM-dd',1,      ONE_HOUR],        // 1h\\n\\t        ['hh:mm\\\\nMM-dd',2,      ONE_HOUR * 2],    // 2h\\n\\t        ['hh:mm\\\\nMM-dd',6,      ONE_HOUR * 6],    // 6h\\n\\t        ['hh:mm\\\\nMM-dd',12,     ONE_HOUR * 12],   // 12h\\n\\t        ['MM-dd\\\\nyyyy', 1,      ONE_DAY],   // 1d\\n\\t        ['week',        7,      ONE_DAY * 7],        // 7d\\n\\t        ['month',       1,      ONE_DAY * 31],       // 1M\\n\\t        ['quarter',     3,      ONE_DAY * 380 / 4],  // 3M\\n\\t        ['half-year',   6,      ONE_DAY * 380 / 2],  // 6M\\n\\t        ['year',        1,      ONE_DAY * 380]       // 1Y\\n\\t    ];\\n\\n\\t    /**\\n\\t     * @param {module:echarts/model/Model}\\n\\t     * @return {module:echarts/scale/Time}\\n\\t     */\\n\\t    TimeScale.create = function (model) {\\n\\t        return new TimeScale({useUTC: model.ecModel.get('useUTC')});\\n\\t    };\\n\\n\\t    module.exports = TimeScale;\\n\\n\\n/***/ },\\n/* 107 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * Log scale\\n\\t * @module echarts/scale/Log\\n\\t */\\n\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var Scale = __webpack_require__(103);\\n\\t    var numberUtil = __webpack_require__(7);\\n\\n\\t    // Use some method of IntervalScale\\n\\t    var IntervalScale = __webpack_require__(104);\\n\\n\\t    var scaleProto = Scale.prototype;\\n\\t    var intervalScaleProto = IntervalScale.prototype;\\n\\n\\t    var getPrecisionSafe = numberUtil.getPrecisionSafe;\\n\\t    var roundingErrorFix = numberUtil.round;\\n\\n\\t    var mathFloor = Math.floor;\\n\\t    var mathCeil = Math.ceil;\\n\\t    var mathPow = Math.pow;\\n\\n\\t    var mathLog = Math.log;\\n\\n\\t    var LogScale = Scale.extend({\\n\\n\\t        type: 'log',\\n\\n\\t        base: 10,\\n\\n\\t        $constructor: function () {\\n\\t            Scale.apply(this, arguments);\\n\\t            this._originalScale = new IntervalScale();\\n\\t        },\\n\\n\\t        /**\\n\\t         * @return {Array.<number>}\\n\\t         */\\n\\t        getTicks: function () {\\n\\t            var originalScale = this._originalScale;\\n\\t            var extent = this._extent;\\n\\t            var originalExtent = originalScale.getExtent();\\n\\n\\t            return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\\n\\t                var powVal = numberUtil.round(mathPow(this.base, val));\\n\\n\\t                // Fix #4158\\n\\t                powVal = (val === extent[0] && originalScale.__fixMin)\\n\\t                    ? fixRoundingError(powVal, originalExtent[0])\\n\\t                    : powVal;\\n\\t                powVal = (val === extent[1] && originalScale.__fixMax)\\n\\t                    ? fixRoundingError(powVal, originalExtent[1])\\n\\t                    : powVal;\\n\\n\\t                return powVal;\\n\\t            }, this);\\n\\t        },\\n\\n\\t        /**\\n\\t         * @param {number} val\\n\\t         * @return {string}\\n\\t         */\\n\\t        getLabel: intervalScaleProto.getLabel,\\n\\n\\t        /**\\n\\t         * @param  {number} val\\n\\t         * @return {number}\\n\\t         */\\n\\t        scale: function (val) {\\n\\t            val = scaleProto.scale.call(this, val);\\n\\t            return mathPow(this.base, val);\\n\\t        },\\n\\n\\t        /**\\n\\t         * @param {number} start\\n\\t         * @param {number} end\\n\\t         */\\n\\t        setExtent: function (start, end) {\\n\\t            var base = this.base;\\n\\t            start = mathLog(start) / mathLog(base);\\n\\t            end = mathLog(end) / mathLog(base);\\n\\t            intervalScaleProto.setExtent.call(this, start, end);\\n\\t        },\\n\\n\\t        /**\\n\\t         * @return {number} end\\n\\t         */\\n\\t        getExtent: function () {\\n\\t            var base = this.base;\\n\\t            var extent = scaleProto.getExtent.call(this);\\n\\t            extent[0] = mathPow(base, extent[0]);\\n\\t            extent[1] = mathPow(base, extent[1]);\\n\\n\\t            // Fix #4158\\n\\t            var originalScale = this._originalScale;\\n\\t            var originalExtent = originalScale.getExtent();\\n\\t            originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\\n\\t            originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\\n\\n\\t            return extent;\\n\\t        },\\n\\n\\t        /**\\n\\t         * @param  {Array.<number>} extent\\n\\t         */\\n\\t        unionExtent: function (extent) {\\n\\t            this._originalScale.unionExtent(extent);\\n\\n\\t            var base = this.base;\\n\\t            extent[0] = mathLog(extent[0]) / mathLog(base);\\n\\t            extent[1] = mathLog(extent[1]) / mathLog(base);\\n\\t            scaleProto.unionExtent.call(this, extent);\\n\\t        },\\n\\n\\t        /**\\n\\t         * @override\\n\\t         */\\n\\t        unionExtentFromData: function (data, dim) {\\n\\t            this.unionExtent(data.getDataExtent(dim, true, function (val) {\\n\\t                return val > 0;\\n\\t            }));\\n\\t        },\\n\\n\\t        /**\\n\\t         * Update interval and extent of intervals for nice ticks\\n\\t         * @param  {number} [approxTickNum = 10] Given approx tick number\\n\\t         */\\n\\t        niceTicks: function (approxTickNum) {\\n\\t            approxTickNum = approxTickNum || 10;\\n\\t            var extent = this._extent;\\n\\t            var span = extent[1] - extent[0];\\n\\t            if (span === Infinity || span <= 0) {\\n\\t                return;\\n\\t            }\\n\\n\\t            var interval = numberUtil.quantity(span);\\n\\t            var err = approxTickNum / span * interval;\\n\\n\\t            // Filter ticks to get closer to the desired count.\\n\\t            if (err <= 0.5) {\\n\\t                interval *= 10;\\n\\t            }\\n\\n\\t            // Interval should be integer\\n\\t            while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\\n\\t                interval *= 10;\\n\\t            }\\n\\n\\t            var niceExtent = [\\n\\t                numberUtil.round(mathCeil(extent[0] / interval) * interval),\\n\\t                numberUtil.round(mathFloor(extent[1] / interval) * interval)\\n\\t            ];\\n\\n\\t            this._interval = interval;\\n\\t            this._niceExtent = niceExtent;\\n\\t        },\\n\\n\\t        /**\\n\\t         * Nice extent.\\n\\t         * @override\\n\\t         */\\n\\t        niceExtent: function (opt) {\\n\\t            intervalScaleProto.niceExtent.call(this, opt);\\n\\n\\t            var originalScale = this._originalScale;\\n\\t            originalScale.__fixMin = opt.fixMin;\\n\\t            originalScale.__fixMax = opt.fixMax;\\n\\t        }\\n\\n\\t    });\\n\\n\\t    zrUtil.each(['contain', 'normalize'], function (methodName) {\\n\\t        LogScale.prototype[methodName] = function (val) {\\n\\t            val = mathLog(val) / mathLog(this.base);\\n\\t            return scaleProto[methodName].call(this, val);\\n\\t        };\\n\\t    });\\n\\n\\t    LogScale.create = function () {\\n\\t        return new LogScale();\\n\\t    };\\n\\n\\t    function fixRoundingError(val, originalVal) {\\n\\t        return roundingErrorFix(val, getPrecisionSafe(originalVal));\\n\\t    }\\n\\n\\t    module.exports = LogScale;\\n\\n\\n/***/ },\\n/* 108 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var createListFromArray = __webpack_require__(109);\\n\\t    var symbolUtil = __webpack_require__(111);\\n\\t    var axisHelper = __webpack_require__(101);\\n\\t    var axisModelCommonMixin = __webpack_require__(112);\\n\\t    var Model = __webpack_require__(12);\\n\\t    var util = __webpack_require__(4);\\n\\n\\t    module.exports = {\\n\\t        /**\\n\\t         * Create a muti dimension List structure from seriesModel.\\n\\t         * @param  {module:echarts/model/Model} seriesModel\\n\\t         * @return {module:echarts/data/List} list\\n\\t         */\\n\\t        createList: function (seriesModel) {\\n\\t            var data = seriesModel.get('data');\\n\\t            return createListFromArray(data, seriesModel, seriesModel.ecModel);\\n\\t        },\\n\\n\\t        /**\\n\\t         * @see {module:echarts/data/helper/completeDimensions}\\n\\t         */\\n\\t        completeDimensions: __webpack_require__(110),\\n\\n\\t        /**\\n\\t         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\\n\\t         * @see http://echarts.baidu.com/option.html#series-scatter.symbol\\n\\t         * @param {string} symbolDesc\\n\\t         * @param {number} x\\n\\t         * @param {number} y\\n\\t         * @param {number} w\\n\\t         * @param {number} h\\n\\t         * @param {string} color\\n\\t         */\\n\\t        createSymbol: symbolUtil.createSymbol,\\n\\n\\t        /**\\n\\t         * Create scale\\n\\t         * @param {Array.<number>} dataExtent\\n\\t         * @param {Object|module:echarts/Model} option\\n\\t         */\\n\\t        createScale: function (dataExtent, option) {\\n\\t            var axisModel = option;\\n\\t            if (!(option instanceof Model)) {\\n\\t                axisModel = new Model(option);\\n\\t                util.mixin(axisModel, axisModelCommonMixin);\\n\\t            }\\n\\n\\t            var scale = axisHelper.createScaleByModel(axisModel);\\n\\t            scale.setExtent(dataExtent[0], dataExtent[1]);\\n\\n\\t            axisHelper.niceScaleExtent(scale, axisModel);\\n\\t            return scale;\\n\\t        },\\n\\n\\t        /**\\n\\t         * Mixin common methods to axis model,\\n\\t         *\\n\\t         * Inlcude methods\\n\\t         * `getFormattedLabels() => Array.<string>`\\n\\t         * `getCategories() => Array.<string>`\\n\\t         * `getMin(origin: boolean) => number`\\n\\t         * `getMax(origin: boolean) => number`\\n\\t         * `getNeedCrossZero() => boolean`\\n\\t         * `setRange(start: number, end: number)`\\n\\t         * `resetRange()`\\n\\t         */\\n\\t        mixinAxisModelCommonMethods: function (Model) {\\n\\t            util.mixin(Model, axisModelCommonMixin);\\n\\t        }\\n\\t    };\\n\\n\\n/***/ },\\n/* 109 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t'use strict';\\n\\n\\n\\t    var List = __webpack_require__(98);\\n\\t    var completeDimensions = __webpack_require__(110);\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var modelUtil = __webpack_require__(5);\\n\\t    var CoordinateSystem = __webpack_require__(76);\\n\\t    var getDataItemValue = modelUtil.getDataItemValue;\\n\\t    var converDataValue = modelUtil.converDataValue;\\n\\n\\t    function firstDataNotNull(data) {\\n\\t        var i = 0;\\n\\t        while (i < data.length && data[i] == null) {\\n\\t            i++;\\n\\t        }\\n\\t        return data[i];\\n\\t    }\\n\\t    function ifNeedCompleteOrdinalData(data) {\\n\\t        var sampleItem = firstDataNotNull(data);\\n\\t        return sampleItem != null\\n\\t            && !zrUtil.isArray(getDataItemValue(sampleItem));\\n\\t    }\\n\\n\\t    /**\\n\\t     * Helper function to create a list from option data\\n\\t     */\\n\\t    function createListFromArray(data, seriesModel, ecModel) {\\n\\t        // If data is undefined\\n\\t        data = data || [];\\n\\n\\t        if (true) {\\n\\t            if (!zrUtil.isArray(data)) {\\n\\t                throw new Error('Invalid data.');\\n\\t            }\\n\\t        }\\n\\n\\t        var coordSysName = seriesModel.get('coordinateSystem');\\n\\t        var creator = creators[coordSysName];\\n\\t        var registeredCoordSys = CoordinateSystem.get(coordSysName);\\n\\t        var completeDimOpt = {\\n\\t            encodeDef: seriesModel.get('encode'),\\n\\t            dimsDef: seriesModel.get('dimensions')\\n\\t        };\\n\\n\\t        // FIXME\\n\\t        var axesInfo = creator && creator(data, seriesModel, ecModel, completeDimOpt);\\n\\t        var dimensions = axesInfo && axesInfo.dimensions;\\n\\t        if (!dimensions) {\\n\\t            // Get dimensions from registered coordinate system\\n\\t            dimensions = (registeredCoordSys && (\\n\\t                registeredCoordSys.getDimensionsInfo\\n\\t                    ? registeredCoordSys.getDimensionsInfo()\\n\\t                    : registeredCoordSys.dimensions.slice()\\n\\t            )) || ['x', 'y'];\\n\\t            dimensions = completeDimensions(dimensions, data, completeDimOpt);\\n\\t        }\\n\\n\\t        var categoryIndex = axesInfo ? axesInfo.categoryIndex : -1;\\n\\n\\t        var list = new List(dimensions, seriesModel);\\n\\n\\t        var nameList = createNameList(axesInfo, data);\\n\\n\\t        var categories = {};\\n\\t        var dimValueGetter = (categoryIndex >= 0 && ifNeedCompleteOrdinalData(data))\\n\\t            ? function (itemOpt, dimName, dataIndex, dimIndex) {\\n\\t                // If any dataItem is like { value: 10 }\\n\\t                if (modelUtil.isDataItemOption(itemOpt)) {\\n\\t                    list.hasItemOption = true;\\n\\t                }\\n\\n\\t                // Use dataIndex as ordinal value in categoryAxis\\n\\t                return dimIndex === categoryIndex\\n\\t                    ? dataIndex\\n\\t                    : converDataValue(getDataItemValue(itemOpt), dimensions[dimIndex]);\\n\\t            }\\n\\t            : function (itemOpt, dimName, dataIndex, dimIndex) {\\n\\t                var value = getDataItemValue(itemOpt);\\n\\t                var val = converDataValue(value && value[dimIndex], dimensions[dimIndex]);\\n\\t                // If any dataItem is like { value: 10 }\\n\\t                if (modelUtil.isDataItemOption(itemOpt)) {\\n\\t                    list.hasItemOption = true;\\n\\t                }\\n\\n\\t                var categoryAxesModels = axesInfo && axesInfo.categoryAxesModels;\\n\\t                if (categoryAxesModels && categoryAxesModels[dimName]) {\\n\\t                    // If given value is a category string\\n\\t                    if (typeof val === 'string') {\\n\\t                        // Lazy get categories\\n\\t                        categories[dimName] = categories[dimName]\\n\\t                            || categoryAxesModels[dimName].getCategories();\\n\\t                        val = zrUtil.indexOf(categories[dimName], val);\\n\\t                        if (val < 0 && !isNaN(val)) {\\n\\t                            // In case some one write '1', '2' istead of 1, 2\\n\\t                            val = +val;\\n\\t                        }\\n\\t                    }\\n\\t                }\\n\\t                return val;\\n\\t            };\\n\\n\\t        list.hasItemOption = false;\\n\\t        list.initData(data, nameList, dimValueGetter);\\n\\n\\t        return list;\\n\\t    }\\n\\n\\t    function isStackable(axisType) {\\n\\t        return axisType !== 'category' && axisType !== 'time';\\n\\t    }\\n\\n\\t    function getDimTypeByAxis(axisType) {\\n\\t        return axisType === 'category'\\n\\t            ? 'ordinal'\\n\\t            : axisType === 'time'\\n\\t            ? 'time'\\n\\t            : 'float';\\n\\t    }\\n\\n\\t    /**\\n\\t     * Creaters for each coord system.\\n\\t     */\\n\\t    var creators = {\\n\\n\\t        cartesian2d: function (data, seriesModel, ecModel, completeDimOpt) {\\n\\n\\t            var axesModels = zrUtil.map(['xAxis', 'yAxis'], function (name) {\\n\\t                return ecModel.queryComponents({\\n\\t                    mainType: name,\\n\\t                    index: seriesModel.get(name + 'Index'),\\n\\t                    id: seriesModel.get(name + 'Id')\\n\\t                })[0];\\n\\t            });\\n\\t            var xAxisModel = axesModels[0];\\n\\t            var yAxisModel = axesModels[1];\\n\\n\\t            if (true) {\\n\\t                if (!xAxisModel) {\\n\\t                    throw new Error('xAxis \\\"' + zrUtil.retrieve(\\n\\t                        seriesModel.get('xAxisIndex'),\\n\\t                        seriesModel.get('xAxisId'),\\n\\t                        0\\n\\t                    ) + '\\\" not found');\\n\\t                }\\n\\t                if (!yAxisModel) {\\n\\t                    throw new Error('yAxis \\\"' + zrUtil.retrieve(\\n\\t                        seriesModel.get('xAxisIndex'),\\n\\t                        seriesModel.get('yAxisId'),\\n\\t                        0\\n\\t                    ) + '\\\" not found');\\n\\t                }\\n\\t            }\\n\\n\\t            var xAxisType = xAxisModel.get('type');\\n\\t            var yAxisType = yAxisModel.get('type');\\n\\n\\t            var dimensions = [\\n\\t                {\\n\\t                    name: 'x',\\n\\t                    type: getDimTypeByAxis(xAxisType),\\n\\t                    stackable: isStackable(xAxisType)\\n\\t                },\\n\\t                {\\n\\t                    name: 'y',\\n\\t                    // If two category axes\\n\\t                    type: getDimTypeByAxis(yAxisType),\\n\\t                    stackable: isStackable(yAxisType)\\n\\t                }\\n\\t            ];\\n\\n\\t            var isXAxisCateogry = xAxisType === 'category';\\n\\t            var isYAxisCategory = yAxisType === 'category';\\n\\n\\t            dimensions = completeDimensions(dimensions, data, completeDimOpt);\\n\\n\\t            var categoryAxesModels = {};\\n\\t            if (isXAxisCateogry) {\\n\\t                categoryAxesModels.x = xAxisModel;\\n\\t            }\\n\\t            if (isYAxisCategory) {\\n\\t                categoryAxesModels.y = yAxisModel;\\n\\t            }\\n\\t            return {\\n\\t                dimensions: dimensions,\\n\\t                categoryIndex: isXAxisCateogry ? 0 : (isYAxisCategory ? 1 : -1),\\n\\t                categoryAxesModels: categoryAxesModels\\n\\t            };\\n\\t        },\\n\\n\\t        singleAxis: function (data, seriesModel, ecModel, completeDimOpt) {\\n\\n\\t            var singleAxisModel = ecModel.queryComponents({\\n\\t                mainType: 'singleAxis',\\n\\t                index: seriesModel.get('singleAxisIndex'),\\n\\t                id: seriesModel.get('singleAxisId')\\n\\t            })[0];\\n\\n\\t            if (true) {\\n\\t                if (!singleAxisModel) {\\n\\t                    throw new Error('singleAxis should be specified.');\\n\\t                }\\n\\t            }\\n\\n\\t            var singleAxisType = singleAxisModel.get('type');\\n\\t            var isCategory = singleAxisType === 'category';\\n\\n\\t            var dimensions = [{\\n\\t                name: 'single',\\n\\t                type: getDimTypeByAxis(singleAxisType),\\n\\t                stackable: isStackable(singleAxisType)\\n\\t            }];\\n\\n\\t            dimensions = completeDimensions(dimensions, data, completeDimOpt);\\n\\n\\t            var categoryAxesModels = {};\\n\\t            if (isCategory) {\\n\\t                categoryAxesModels.single = singleAxisModel;\\n\\t            }\\n\\n\\t            return {\\n\\t                dimensions: dimensions,\\n\\t                categoryIndex: isCategory ? 0 : -1,\\n\\t                categoryAxesModels: categoryAxesModels\\n\\t            };\\n\\t        },\\n\\n\\t        polar: function (data, seriesModel, ecModel, completeDimOpt) {\\n\\t            var polarModel = ecModel.queryComponents({\\n\\t                mainType: 'polar',\\n\\t                index: seriesModel.get('polarIndex'),\\n\\t                id: seriesModel.get('polarId')\\n\\t            })[0];\\n\\n\\t            var angleAxisModel = polarModel.findAxisModel('angleAxis');\\n\\t            var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\\n\\n\\t            if (true) {\\n\\t                if (!angleAxisModel) {\\n\\t                    throw new Error('angleAxis option not found');\\n\\t                }\\n\\t                if (!radiusAxisModel) {\\n\\t                    throw new Error('radiusAxis option not found');\\n\\t                }\\n\\t            }\\n\\n\\t            var radiusAxisType = radiusAxisModel.get('type');\\n\\t            var angleAxisType = angleAxisModel.get('type');\\n\\n\\t            var dimensions = [\\n\\t                {\\n\\t                    name: 'radius',\\n\\t                    type: getDimTypeByAxis(radiusAxisType),\\n\\t                    stackable: isStackable(radiusAxisType)\\n\\t                },\\n\\t                {\\n\\t                    name: 'angle',\\n\\t                    type: getDimTypeByAxis(angleAxisType),\\n\\t                    stackable: isStackable(angleAxisType)\\n\\t                }\\n\\t            ];\\n\\t            var isAngleAxisCateogry = angleAxisType === 'category';\\n\\t            var isRadiusAxisCateogry = radiusAxisType === 'category';\\n\\n\\t            dimensions = completeDimensions(dimensions, data, completeDimOpt);\\n\\n\\t            var categoryAxesModels = {};\\n\\t            if (isRadiusAxisCateogry) {\\n\\t                categoryAxesModels.radius = radiusAxisModel;\\n\\t            }\\n\\t            if (isAngleAxisCateogry) {\\n\\t                categoryAxesModels.angle = angleAxisModel;\\n\\t            }\\n\\t            return {\\n\\t                dimensions: dimensions,\\n\\t                categoryIndex: isAngleAxisCateogry ? 1 : (isRadiusAxisCateogry ? 0 : -1),\\n\\t                categoryAxesModels: categoryAxesModels\\n\\t            };\\n\\t        },\\n\\n\\t        geo: function (data, seriesModel, ecModel, completeDimOpt) {\\n\\t            // TODO Region\\n\\t            // 多个散点图系列在同一个地区的时候\\n\\t            return {\\n\\t                dimensions: completeDimensions([\\n\\t                    {name: 'lng'},\\n\\t                    {name: 'lat'}\\n\\t                ], data, completeDimOpt)\\n\\t            };\\n\\t        }\\n\\t    };\\n\\n\\t    function createNameList(result, data) {\\n\\t        var nameList = [];\\n\\n\\t        var categoryDim = result && result.dimensions[result.categoryIndex];\\n\\t        var categoryAxisModel;\\n\\t        if (categoryDim) {\\n\\t            categoryAxisModel = result.categoryAxesModels[categoryDim.name];\\n\\t        }\\n\\n\\t        if (categoryAxisModel) {\\n\\t            // FIXME Two category axis\\n\\t            var categories = categoryAxisModel.getCategories();\\n\\t            if (categories) {\\n\\t                var dataLen = data.length;\\n\\t                // Ordered data is given explicitly like\\n\\t                // [[3, 0.2], [1, 0.3], [2, 0.15]]\\n\\t                // or given scatter data,\\n\\t                // pick the category\\n\\t                if (zrUtil.isArray(data[0]) && data[0].length > 1) {\\n\\t                    nameList = [];\\n\\t                    for (var i = 0; i < dataLen; i++) {\\n\\t                        nameList[i] = categories[data[i][result.categoryIndex || 0]];\\n\\t                    }\\n\\t                }\\n\\t                else {\\n\\t                    nameList = categories.slice(0);\\n\\t                }\\n\\t            }\\n\\t        }\\n\\n\\t        return nameList;\\n\\t    }\\n\\n\\t    module.exports = createListFromArray;\\n\\n\\n\\n/***/ },\\n/* 110 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * Complete dimensions by data (guess dimension).\\n\\t */\\n\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var modelUtil = __webpack_require__(5);\\n\\t    var each = zrUtil.each;\\n\\t    var isString = zrUtil.isString;\\n\\t    var defaults = zrUtil.defaults;\\n\\t    var normalizeToArray = modelUtil.normalizeToArray;\\n\\n\\t    var OTHER_DIMS = {tooltip: 1, label: 1, itemName: 1};\\n\\n\\t    /**\\n\\t     * Complete the dimensions array, by user defined `dimension` and `encode`,\\n\\t     * and guessing from the data structure.\\n\\t     * If no 'value' dimension specified, the first no-named dimension will be\\n\\t     * named as 'value'.\\n\\t     *\\n\\t     * @param {Array.<string>} sysDims Necessary dimensions, like ['x', 'y'], which\\n\\t     *      provides not only dim template, but also default order.\\n\\t     *      `name` of each item provides default coord name.\\n\\t     *      [{dimsDef: []}, ...] can be specified to give names.\\n\\t     * @param {Array} data Data list. [[1, 2, 3], [2, 3, 4]].\\n\\t     * @param {Object} [opt]\\n\\t     * @param {Array.<Object|string>} [opt.dimsDef] option.series.dimensions User defined dimensions\\n\\t     *      For example: ['asdf', {name, type}, ...].\\n\\t     * @param {Object} [opt.encodeDef] option.series.encode {x: 2, y: [3, 1], tooltip: [1, 2], label: 3}\\n\\t     * @param {string} [opt.extraPrefix] Prefix of name when filling the left dimensions.\\n\\t     * @param {string} [opt.extraFromZero] If specified, extra dim names will be:\\n\\t     *                      extraPrefix + 0, extraPrefix + extraBaseIndex + 1 ...\\n\\t     *                      If not specified, extra dim names will be:\\n\\t     *                      extraPrefix, extraPrefix + 0, extraPrefix + 1 ...\\n\\t     * @param {number} [opt.dimCount] If not specified, guess by the first data item.\\n\\t     * @return {Array.<Object>} [{\\n\\t     *      name: string mandatory,\\n\\t     *      coordDim: string mandatory,\\n\\t     *      coordDimIndex: number mandatory,\\n\\t     *      type: string optional,\\n\\t     *      tooltipName: string optional,\\n\\t     *      otherDims: {\\n\\t     *          tooltip: number optional,\\n\\t     *          label: number optional\\n\\t     *      },\\n\\t     *      isExtraCoord: boolean true or undefined.\\n\\t     *      other props ...\\n\\t     * }]\\n\\t     */\\n\\t    function completeDimensions(sysDims, data, opt) {\\n\\t        data = data || [];\\n\\t        opt = opt || {};\\n\\t        sysDims = (sysDims || []).slice();\\n\\t        var dimsDef = (opt.dimsDef || []).slice();\\n\\t        var encodeDef = zrUtil.createHashMap(opt.encodeDef);\\n\\t        var dataDimNameMap = zrUtil.createHashMap();\\n\\t        var coordDimNameMap = zrUtil.createHashMap();\\n\\t        // var valueCandidate;\\n\\t        var result = [];\\n\\n\\t        var dimCount = opt.dimCount;\\n\\t        if (dimCount == null) {\\n\\t            var value0 = retrieveValue(data[0]);\\n\\t            dimCount = Math.max(\\n\\t                zrUtil.isArray(value0) && value0.length || 1,\\n\\t                sysDims.length,\\n\\t                dimsDef.length\\n\\t            );\\n\\t            each(sysDims, function (sysDimItem) {\\n\\t                var sysDimItemDimsDef = sysDimItem.dimsDef;\\n\\t                sysDimItemDimsDef && (dimCount = Math.max(dimCount, sysDimItemDimsDef.length));\\n\\t            });\\n\\t        }\\n\\n\\t        // Apply user defined dims (`name` and `type`) and init result.\\n\\t        for (var i = 0; i < dimCount; i++) {\\n\\t            var dimDefItem = isString(dimsDef[i]) ? {name: dimsDef[i]} : (dimsDef[i] || {});\\n\\t            var userDimName = dimDefItem.name;\\n\\t            var resultItem = result[i] = {otherDims: {}};\\n\\t            // Name will be applied later for avoiding duplication.\\n\\t            if (userDimName != null && dataDimNameMap.get(userDimName) == null) {\\n\\t                // Only if `series.dimensions` is defined in option, tooltipName\\n\\t                // will be set, and dimension will be diplayed vertically in\\n\\t                // tooltip by default.\\n\\t                resultItem.name = resultItem.tooltipName = userDimName;\\n\\t                dataDimNameMap.set(userDimName, i);\\n\\t            }\\n\\t            dimDefItem.type != null && (resultItem.type = dimDefItem.type);\\n\\t        }\\n\\n\\t        // Set `coordDim` and `coordDimIndex` by `encodeDef` and normalize `encodeDef`.\\n\\t        encodeDef.each(function (dataDims, coordDim) {\\n\\t            dataDims = encodeDef.set(coordDim, normalizeToArray(dataDims).slice());\\n\\t            each(dataDims, function (resultDimIdx, coordDimIndex) {\\n\\t                // The input resultDimIdx can be dim name or index.\\n\\t                isString(resultDimIdx) && (resultDimIdx = dataDimNameMap.get(resultDimIdx));\\n\\t                if (resultDimIdx != null && resultDimIdx < dimCount) {\\n\\t                    dataDims[coordDimIndex] = resultDimIdx;\\n\\t                    applyDim(result[resultDimIdx], coordDim, coordDimIndex);\\n\\t                }\\n\\t            });\\n\\t        });\\n\\n\\t        // Apply templetes and default order from `sysDims`.\\n\\t        var availDimIdx = 0;\\n\\t        each(sysDims, function (sysDimItem, sysDimIndex) {\\n\\t            var coordDim;\\n\\t            var sysDimItem;\\n\\t            var sysDimItemDimsDef;\\n\\t            var sysDimItemOtherDims;\\n\\t            if (isString(sysDimItem)) {\\n\\t                coordDim = sysDimItem;\\n\\t                sysDimItem = {};\\n\\t            }\\n\\t            else {\\n\\t                coordDim = sysDimItem.name;\\n\\t                sysDimItem = zrUtil.clone(sysDimItem);\\n\\t                // `coordDimIndex` should not be set directly.\\n\\t                sysDimItemDimsDef = sysDimItem.dimsDef;\\n\\t                sysDimItemOtherDims = sysDimItem.otherDims;\\n\\t                sysDimItem.name = sysDimItem.coordDim = sysDimItem.coordDimIndex\\n\\t                    = sysDimItem.dimsDef = sysDimItem.otherDims = null;\\n\\t            }\\n\\n\\t            var dataDims = normalizeToArray(encodeDef.get(coordDim));\\n\\t            // dimensions provides default dim sequences.\\n\\t            if (!dataDims.length) {\\n\\t                for (var i = 0; i < (sysDimItemDimsDef && sysDimItemDimsDef.length || 1); i++) {\\n\\t                    while (availDimIdx < result.length && result[availDimIdx].coordDim != null) {\\n\\t                        availDimIdx++;\\n\\t                    }\\n\\t                    availDimIdx < result.length && dataDims.push(availDimIdx++);\\n\\t                }\\n\\t            }\\n\\t            // Apply templates.\\n\\t            each(dataDims, function (resultDimIdx, coordDimIndex) {\\n\\t                var resultItem = result[resultDimIdx];\\n\\t                applyDim(defaults(resultItem, sysDimItem), coordDim, coordDimIndex);\\n\\t                if (resultItem.name == null && sysDimItemDimsDef) {\\n\\t                    resultItem.name = resultItem.tooltipName = sysDimItemDimsDef[coordDimIndex];\\n\\t                }\\n\\t                sysDimItemOtherDims && defaults(resultItem.otherDims, sysDimItemOtherDims);\\n\\t            });\\n\\t        });\\n\\n\\t        // Make sure the first extra dim is 'value'.\\n\\t        var extra = opt.extraPrefix || 'value';\\n\\n\\t        // Set dim `name` and other `coordDim` and other props.\\n\\t        for (var resultDimIdx = 0; resultDimIdx < dimCount; resultDimIdx++) {\\n\\t            var resultItem = result[resultDimIdx] = result[resultDimIdx] || {};\\n\\t            var coordDim = resultItem.coordDim;\\n\\n\\t            coordDim == null && (\\n\\t                resultItem.coordDim = genName(extra, coordDimNameMap, opt.extraFromZero),\\n\\t                resultItem.coordDimIndex = 0,\\n\\t                resultItem.isExtraCoord = true\\n\\t            );\\n\\n\\t            resultItem.name == null && (resultItem.name = genName(\\n\\t                resultItem.coordDim,\\n\\t                dataDimNameMap\\n\\t            ));\\n\\n\\t            resultItem.type == null && guessOrdinal(data, resultDimIdx)\\n\\t                && (resultItem.type = 'ordinal');\\n\\t        }\\n\\n\\t        return result;\\n\\n\\t        function applyDim(resultItem, coordDim, coordDimIndex) {\\n\\t            if (OTHER_DIMS[coordDim]) {\\n\\t                resultItem.otherDims[coordDim] = coordDimIndex;\\n\\t            }\\n\\t            else {\\n\\t                resultItem.coordDim = coordDim;\\n\\t                resultItem.coordDimIndex = coordDimIndex;\\n\\t                coordDimNameMap.set(coordDim, true);\\n\\t            }\\n\\t        }\\n\\n\\t        function genName(name, map, fromZero) {\\n\\t            if (fromZero || map.get(name) != null) {\\n\\t                var i = 0;\\n\\t                while (map.get(name + i) != null) {\\n\\t                    i++;\\n\\t                }\\n\\t                name += i;\\n\\t            }\\n\\t            map.set(name, true);\\n\\t            return name;\\n\\t        }\\n\\t    }\\n\\n\\t    // The rule should not be complex, otherwise user might not\\n\\t    // be able to known where the data is wrong.\\n\\t    var guessOrdinal = completeDimensions.guessOrdinal = function (data, dimIndex) {\\n\\t        for (var i = 0, len = data.length; i < len; i++) {\\n\\t            var value = retrieveValue(data[i]);\\n\\n\\t            if (!zrUtil.isArray(value)) {\\n\\t                return false;\\n\\t            }\\n\\n\\t            var value = value[dimIndex];\\n\\t            // Consider usage convenience, '1', '2' will be treated as \\\"number\\\".\\n\\t            if (value != null && isFinite(value)) {\\n\\t                return false;\\n\\t            }\\n\\t            else if (isString(value) && value !== '-') {\\n\\t                return true;\\n\\t            }\\n\\t        }\\n\\t        return false;\\n\\t    };\\n\\n\\t    function retrieveValue(o) {\\n\\t        return zrUtil.isArray(o) ? o : zrUtil.isObject(o) ? o.value: o;\\n\\t    }\\n\\n\\t    module.exports = completeDimensions;\\n\\n\\n\\n/***/ },\\n/* 111 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t'use strict';\\n\\t// Symbol factory\\n\\n\\n\\t    var graphic = __webpack_require__(18);\\n\\t    var BoundingRect = __webpack_require__(9);\\n\\n\\t    /**\\n\\t     * Triangle shape\\n\\t     * @inner\\n\\t     */\\n\\t    var Triangle = graphic.extendShape({\\n\\t        type: 'triangle',\\n\\t        shape: {\\n\\t            cx: 0,\\n\\t            cy: 0,\\n\\t            width: 0,\\n\\t            height: 0\\n\\t        },\\n\\t        buildPath: function (path, shape) {\\n\\t            var cx = shape.cx;\\n\\t            var cy = shape.cy;\\n\\t            var width = shape.width / 2;\\n\\t            var height = shape.height / 2;\\n\\t            path.moveTo(cx, cy - height);\\n\\t            path.lineTo(cx + width, cy + height);\\n\\t            path.lineTo(cx - width, cy + height);\\n\\t            path.closePath();\\n\\t        }\\n\\t    });\\n\\t    /**\\n\\t     * Diamond shape\\n\\t     * @inner\\n\\t     */\\n\\t    var Diamond = graphic.extendShape({\\n\\t        type: 'diamond',\\n\\t        shape: {\\n\\t            cx: 0,\\n\\t            cy: 0,\\n\\t            width: 0,\\n\\t            height: 0\\n\\t        },\\n\\t        buildPath: function (path, shape) {\\n\\t            var cx = shape.cx;\\n\\t            var cy = shape.cy;\\n\\t            var width = shape.width / 2;\\n\\t            var height = shape.height / 2;\\n\\t            path.moveTo(cx, cy - height);\\n\\t            path.lineTo(cx + width, cy);\\n\\t            path.lineTo(cx, cy + height);\\n\\t            path.lineTo(cx - width, cy);\\n\\t            path.closePath();\\n\\t        }\\n\\t    });\\n\\n\\t    /**\\n\\t     * Pin shape\\n\\t     * @inner\\n\\t     */\\n\\t    var Pin = graphic.extendShape({\\n\\t        type: 'pin',\\n\\t        shape: {\\n\\t            // x, y on the cusp\\n\\t            x: 0,\\n\\t            y: 0,\\n\\t            width: 0,\\n\\t            height: 0\\n\\t        },\\n\\n\\t        buildPath: function (path, shape) {\\n\\t            var x = shape.x;\\n\\t            var y = shape.y;\\n\\t            var w = shape.width / 5 * 3;\\n\\t            // Height must be larger than width\\n\\t            var h = Math.max(w, shape.height);\\n\\t            var r = w / 2;\\n\\n\\t            // Dist on y with tangent point and circle center\\n\\t            var dy = r * r / (h - r);\\n\\t            var cy = y - h + r + dy;\\n\\t            var angle = Math.asin(dy / r);\\n\\t            // Dist on x with tangent point and circle center\\n\\t            var dx = Math.cos(angle) * r;\\n\\n\\t            var tanX = Math.sin(angle);\\n\\t            var tanY = Math.cos(angle);\\n\\n\\t            path.arc(\\n\\t                x, cy, r,\\n\\t                Math.PI - angle,\\n\\t                Math.PI * 2 + angle\\n\\t            );\\n\\n\\t            var cpLen = r * 0.6;\\n\\t            var cpLen2 = r * 0.7;\\n\\t            path.bezierCurveTo(\\n\\t                x + dx - tanX * cpLen, cy + dy + tanY * cpLen,\\n\\t                x, y - cpLen2,\\n\\t                x, y\\n\\t            );\\n\\t            path.bezierCurveTo(\\n\\t                x, y - cpLen2,\\n\\t                x - dx + tanX * cpLen, cy + dy + tanY * cpLen,\\n\\t                x - dx, cy + dy\\n\\t            );\\n\\t            path.closePath();\\n\\t        }\\n\\t    });\\n\\n\\t    /**\\n\\t     * Arrow shape\\n\\t     * @inner\\n\\t     */\\n\\t    var Arrow = graphic.extendShape({\\n\\n\\t        type: 'arrow',\\n\\n\\t        shape: {\\n\\t            x: 0,\\n\\t            y: 0,\\n\\t            width: 0,\\n\\t            height: 0\\n\\t        },\\n\\n\\t        buildPath: function (ctx, shape) {\\n\\t            var height = shape.height;\\n\\t            var width = shape.width;\\n\\t            var x = shape.x;\\n\\t            var y = shape.y;\\n\\t            var dx = width / 3 * 2;\\n\\t            ctx.moveTo(x, y);\\n\\t            ctx.lineTo(x + dx, y + height);\\n\\t            ctx.lineTo(x, y + height / 4 * 3);\\n\\t            ctx.lineTo(x - dx, y + height);\\n\\t            ctx.lineTo(x, y);\\n\\t            ctx.closePath();\\n\\t        }\\n\\t    });\\n\\n\\t    /**\\n\\t     * Map of path contructors\\n\\t     * @type {Object.<string, module:zrender/graphic/Path>}\\n\\t     */\\n\\t    var symbolCtors = {\\n\\t        line: graphic.Line,\\n\\n\\t        rect: graphic.Rect,\\n\\n\\t        roundRect: graphic.Rect,\\n\\n\\t        square: graphic.Rect,\\n\\n\\t        circle: graphic.Circle,\\n\\n\\t        diamond: Diamond,\\n\\n\\t        pin: Pin,\\n\\n\\t        arrow: Arrow,\\n\\n\\t        triangle: Triangle\\n\\t    };\\n\\n\\t    var symbolShapeMakers = {\\n\\n\\t        line: function (x, y, w, h, shape) {\\n\\t            // FIXME\\n\\t            shape.x1 = x;\\n\\t            shape.y1 = y + h / 2;\\n\\t            shape.x2 = x + w;\\n\\t            shape.y2 = y + h / 2;\\n\\t        },\\n\\n\\t        rect: function (x, y, w, h, shape) {\\n\\t            shape.x = x;\\n\\t            shape.y = y;\\n\\t            shape.width = w;\\n\\t            shape.height = h;\\n\\t        },\\n\\n\\t        roundRect: function (x, y, w, h, shape) {\\n\\t            shape.x = x;\\n\\t            shape.y = y;\\n\\t            shape.width = w;\\n\\t            shape.height = h;\\n\\t            shape.r = Math.min(w, h) / 4;\\n\\t        },\\n\\n\\t        square: function (x, y, w, h, shape) {\\n\\t            var size = Math.min(w, h);\\n\\t            shape.x = x;\\n\\t            shape.y = y;\\n\\t            shape.width = size;\\n\\t            shape.height = size;\\n\\t        },\\n\\n\\t        circle: function (x, y, w, h, shape) {\\n\\t            // Put circle in the center of square\\n\\t            shape.cx = x + w / 2;\\n\\t            shape.cy = y + h / 2;\\n\\t            shape.r = Math.min(w, h) / 2;\\n\\t        },\\n\\n\\t        diamond: function (x, y, w, h, shape) {\\n\\t            shape.cx = x + w / 2;\\n\\t            shape.cy = y + h / 2;\\n\\t            shape.width = w;\\n\\t            shape.height = h;\\n\\t        },\\n\\n\\t        pin: function (x, y, w, h, shape) {\\n\\t            shape.x = x + w / 2;\\n\\t            shape.y = y + h / 2;\\n\\t            shape.width = w;\\n\\t            shape.height = h;\\n\\t        },\\n\\n\\t        arrow: function (x, y, w, h, shape) {\\n\\t            shape.x = x + w / 2;\\n\\t            shape.y = y + h / 2;\\n\\t            shape.width = w;\\n\\t            shape.height = h;\\n\\t        },\\n\\n\\t        triangle: function (x, y, w, h, shape) {\\n\\t            shape.cx = x + w / 2;\\n\\t            shape.cy = y + h / 2;\\n\\t            shape.width = w;\\n\\t            shape.height = h;\\n\\t        }\\n\\t    };\\n\\n\\t    var symbolBuildProxies = {};\\n\\t    for (var name in symbolCtors) {\\n\\t        if (symbolCtors.hasOwnProperty(name)) {\\n\\t            symbolBuildProxies[name] = new symbolCtors[name]();\\n\\t        }\\n\\t    }\\n\\n\\t    var Symbol = graphic.extendShape({\\n\\n\\t        type: 'symbol',\\n\\n\\t        shape: {\\n\\t            symbolType: '',\\n\\t            x: 0,\\n\\t            y: 0,\\n\\t            width: 0,\\n\\t            height: 0\\n\\t        },\\n\\n\\t        beforeBrush: function () {\\n\\t            var style = this.style;\\n\\t            var shape = this.shape;\\n\\t            // FIXME\\n\\t            if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\\n\\t                style.textPosition = ['50%', '40%'];\\n\\t                style.textAlign = 'center';\\n\\t                style.textVerticalAlign = 'middle';\\n\\t            }\\n\\t        },\\n\\n\\t        buildPath: function (ctx, shape, inBundle) {\\n\\t            var symbolType = shape.symbolType;\\n\\t            var proxySymbol = symbolBuildProxies[symbolType];\\n\\t            if (shape.symbolType !== 'none') {\\n\\t                if (!proxySymbol) {\\n\\t                    // Default rect\\n\\t                    symbolType = 'rect';\\n\\t                    proxySymbol = symbolBuildProxies[symbolType];\\n\\t                }\\n\\t                symbolShapeMakers[symbolType](\\n\\t                    shape.x, shape.y, shape.width, shape.height, proxySymbol.shape\\n\\t                );\\n\\t                proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\\n\\t            }\\n\\t        }\\n\\t    });\\n\\n\\t    // Provide setColor helper method to avoid determine if set the fill or stroke outside\\n\\t    var symbolPathSetColor = function (color) {\\n\\t        if (this.type !== 'image') {\\n\\t            var symbolStyle = this.style;\\n\\t            var symbolShape = this.shape;\\n\\t            if (symbolShape && symbolShape.symbolType === 'line') {\\n\\t                symbolStyle.stroke = color;\\n\\t            }\\n\\t            else if (this.__isEmptyBrush) {\\n\\t                symbolStyle.stroke = color;\\n\\t                symbolStyle.fill = '#fff';\\n\\t            }\\n\\t            else {\\n\\t                // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\\n\\t                symbolStyle.fill && (symbolStyle.fill = color);\\n\\t                symbolStyle.stroke && (symbolStyle.stroke = color);\\n\\t            }\\n\\t            this.dirty(false);\\n\\t        }\\n\\t    };\\n\\n\\t    var symbolUtil = {\\n\\t        /**\\n\\t         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\\n\\t         * @param {string} symbolType\\n\\t         * @param {number} x\\n\\t         * @param {number} y\\n\\t         * @param {number} w\\n\\t         * @param {number} h\\n\\t         * @param {string} color\\n\\t         */\\n\\t        createSymbol: function (symbolType, x, y, w, h, color) {\\n\\t            // TODO Support image object, DynamicImage.\\n\\n\\t            var isEmpty = symbolType.indexOf('empty') === 0;\\n\\t            if (isEmpty) {\\n\\t                symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\\n\\t            }\\n\\t            var symbolPath;\\n\\n\\t            if (symbolType.indexOf('image://') === 0) {\\n\\t                symbolPath = new graphic.Image({\\n\\t                    style: {\\n\\t                        image: symbolType.slice(8),\\n\\t                        x: x,\\n\\t                        y: y,\\n\\t                        width: w,\\n\\t                        height: h\\n\\t                    }\\n\\t                });\\n\\t            }\\n\\t            else if (symbolType.indexOf('path://') === 0) {\\n\\t                symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h));\\n\\t            }\\n\\t            else {\\n\\t                symbolPath = new Symbol({\\n\\t                    shape: {\\n\\t                        symbolType: symbolType,\\n\\t                        x: x,\\n\\t                        y: y,\\n\\t                        width: w,\\n\\t                        height: h\\n\\t                    }\\n\\t                });\\n\\t            }\\n\\n\\t            symbolPath.__isEmptyBrush = isEmpty;\\n\\n\\t            symbolPath.setColor = symbolPathSetColor;\\n\\n\\t            symbolPath.setColor(color);\\n\\n\\t            return symbolPath;\\n\\t        }\\n\\t    };\\n\\n\\t    module.exports = symbolUtil;\\n\\n\\n/***/ },\\n/* 112 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var axisHelper = __webpack_require__(101);\\n\\n\\t    function getName(obj) {\\n\\t        if (zrUtil.isObject(obj) && obj.value != null) {\\n\\t            return obj.value;\\n\\t        }\\n\\t        else {\\n\\t            return obj + '';\\n\\t        }\\n\\t    }\\n\\n\\t    module.exports = {\\n\\n\\t        /**\\n\\t         * Format labels\\n\\t         * @return {Array.<string>}\\n\\t         */\\n\\t        getFormattedLabels: function () {\\n\\t            return axisHelper.getFormattedLabels(\\n\\t                this.axis,\\n\\t                this.get('axisLabel.formatter')\\n\\t            );\\n\\t        },\\n\\n\\t        /**\\n\\t         * Get categories\\n\\t         */\\n\\t        getCategories: function () {\\n\\t            return this.get('type') === 'category'\\n\\t                && zrUtil.map(this.get('data'), getName);\\n\\t        },\\n\\n\\t        /**\\n\\t         * @param {boolean} origin\\n\\t         * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\\n\\t         */\\n\\t        getMin: function (origin) {\\n\\t            var option = this.option;\\n\\t            var min = (!origin && option.rangeStart != null)\\n\\t                ? option.rangeStart : option.min;\\n\\n\\t            if (this.axis && min != null && min !== 'dataMin' && !zrUtil.eqNaN(min)) {\\n\\t                min = this.axis.scale.parse(min);\\n\\t            }\\n\\t            return min;\\n\\t        },\\n\\n\\t        /**\\n\\t         * @param {boolean} origin\\n\\t         * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\\n\\t         */\\n\\t        getMax: function (origin) {\\n\\t            var option = this.option;\\n\\t            var max = (!origin && option.rangeEnd != null)\\n\\t                ? option.rangeEnd : option.max;\\n\\n\\t            if (this.axis && max != null && max !== 'dataMax' && !zrUtil.eqNaN(max)) {\\n\\t                max = this.axis.scale.parse(max);\\n\\t            }\\n\\t            return max;\\n\\t        },\\n\\n\\t        /**\\n\\t         * @return {boolean}\\n\\t         */\\n\\t        getNeedCrossZero: function () {\\n\\t            var option = this.option;\\n\\t            return (option.rangeStart != null || option.rangeEnd != null)\\n\\t                ? false : !option.scale;\\n\\t        },\\n\\n\\t        /**\\n\\t         * Should be implemented by each axis model if necessary.\\n\\t         * @return {module:echarts/model/Component} coordinate system model\\n\\t         */\\n\\t        getCoordSysModel: zrUtil.noop,\\n\\n\\t        /**\\n\\t         * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\\n\\t         * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\\n\\t         */\\n\\t        setRange: function (rangeStart, rangeEnd) {\\n\\t            this.option.rangeStart = rangeStart;\\n\\t            this.option.rangeEnd = rangeEnd;\\n\\t        },\\n\\n\\t        /**\\n\\t         * Reset range\\n\\t         */\\n\\t        resetRange: function () {\\n\\t            // rangeStart and rangeEnd is readonly.\\n\\t            this.option.rangeStart = this.option.rangeEnd = null;\\n\\t        }\\n\\t    };\\n\\n\\n/***/ },\\n/* 113 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var echarts = __webpack_require__(1);\\n\\t    var PRIORITY = echarts.PRIORITY;\\n\\n\\t    __webpack_require__(114);\\n\\t    __webpack_require__(115);\\n\\n\\t    echarts.registerVisual(zrUtil.curry(\\n\\t        __webpack_require__(121), 'line', 'circle', 'line'\\n\\t    ));\\n\\t    echarts.registerLayout(zrUtil.curry(\\n\\t        __webpack_require__(122), 'line'\\n\\t    ));\\n\\n\\t    // Down sample after filter\\n\\t    echarts.registerProcessor(PRIORITY.PROCESSOR.STATISTIC, zrUtil.curry(\\n\\t        __webpack_require__(123), 'line'\\n\\t    ));\\n\\n\\t    // In case developer forget to include grid component\\n\\t    __webpack_require__(124);\\n\\n\\n/***/ },\\n/* 114 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t'use strict';\\n\\n\\n\\t    var createListFromArray = __webpack_require__(109);\\n\\t    var SeriesModel = __webpack_require__(78);\\n\\n\\t    module.exports = SeriesModel.extend({\\n\\n\\t        type: 'series.line',\\n\\n\\t        dependencies: ['grid', 'polar'],\\n\\n\\t        getInitialData: function (option, ecModel) {\\n\\t            if (true) {\\n\\t                var coordSys = option.coordinateSystem;\\n\\t                if (coordSys !== 'polar' && coordSys !== 'cartesian2d') {\\n\\t                    throw new Error('Line not support coordinateSystem besides cartesian and polar');\\n\\t                }\\n\\t            }\\n\\t            return createListFromArray(option.data, this, ecModel);\\n\\t        },\\n\\n\\t        defaultOption: {\\n\\t            zlevel: 0,                  // 一级层叠\\n\\t            z: 2,                       // 二级层叠\\n\\t            coordinateSystem: 'cartesian2d',\\n\\t            legendHoverLink: true,\\n\\n\\t            hoverAnimation: true,\\n\\t            // stack: null\\n\\t            // xAxisIndex: 0,\\n\\t            // yAxisIndex: 0,\\n\\n\\t            // polarIndex: 0,\\n\\n\\t            // If clip the overflow value\\n\\t            clipOverflow: true,\\n\\t            // cursor: null,\\n\\n\\t            label: {\\n\\t                normal: {\\n\\t                    position: 'top'\\n\\t                }\\n\\t            },\\n\\t            // itemStyle: {\\n\\t            //     normal: {},\\n\\t            //     emphasis: {}\\n\\t            // },\\n\\t            lineStyle: {\\n\\t                normal: {\\n\\t                    width: 2,\\n\\t                    type: 'solid'\\n\\t                }\\n\\t            },\\n\\t            // areaStyle: {},\\n\\t            // false, 'start', 'end', 'middle'\\n\\t            step: false,\\n\\n\\t            // Disabled if step is true\\n\\t            smooth: false,\\n\\t            smoothMonotone: null,\\n\\t            // 拐点图形类型\\n\\t            symbol: 'emptyCircle',\\n\\t            // 拐点图形大小\\n\\t            symbolSize: 4,\\n\\t            // 拐点图形旋转控制\\n\\t            symbolRotate: null,\\n\\n\\t            // 是否显示 symbol, 只有在 tooltip hover 的时候显示\\n\\t            showSymbol: true,\\n\\t            // 标志图形默认只有主轴显示（随主轴标签间隔隐藏策略）\\n\\t            showAllSymbol: false,\\n\\n\\t            // 是否连接断点\\n\\t            connectNulls: false,\\n\\n\\t            // 数据过滤，'average', 'max', 'min', 'sum'\\n\\t            sampling: 'none',\\n\\n\\t            animationEasing: 'linear',\\n\\n\\t            // Disable progressive\\n\\t            progressive: 0,\\n\\t            hoverLayerThreshold: Infinity\\n\\t        }\\n\\t    });\\n\\n\\n/***/ },\\n/* 115 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t'use strict';\\n\\t// FIXME step not support polar\\n\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var SymbolDraw = __webpack_require__(116);\\n\\t    var Symbol = __webpack_require__(117);\\n\\t    var lineAnimationDiff = __webpack_require__(119);\\n\\t    var graphic = __webpack_require__(18);\\n\\t    var modelUtil = __webpack_require__(5);\\n\\t    var polyHelper = __webpack_require__(120);\\n\\t    var ChartView = __webpack_require__(80);\\n\\n\\t    function isPointsSame(points1, points2) {\\n\\t        if (points1.length !== points2.length) {\\n\\t            return;\\n\\t        }\\n\\t        for (var i = 0; i < points1.length; i++) {\\n\\t            var p1 = points1[i];\\n\\t            var p2 = points2[i];\\n\\t            if (p1[0] !== p2[0] || p1[1] !== p2[1]) {\\n\\t                return;\\n\\t            }\\n\\t        }\\n\\t        return true;\\n\\t    }\\n\\n\\t    function getSmooth(smooth) {\\n\\t        return typeof (smooth) === 'number' ? smooth : (smooth ? 0.3 : 0);\\n\\t    }\\n\\n\\t    function getAxisExtentWithGap(axis) {\\n\\t        var extent = axis.getGlobalExtent();\\n\\t        if (axis.onBand) {\\n\\t            // Remove extra 1px to avoid line miter in clipped edge\\n\\t            var halfBandWidth = axis.getBandWidth() / 2 - 1;\\n\\t            var dir = extent[1] > extent[0] ? 1 : -1;\\n\\t            extent[0] += dir * halfBandWidth;\\n\\t            extent[1] -= dir * halfBandWidth;\\n\\t        }\\n\\t        return extent;\\n\\t    }\\n\\n\\t    function sign(val) {\\n\\t        return val >= 0 ? 1 : -1;\\n\\t    }\\n\\t    /**\\n\\t     * @param {module:echarts/coord/cartesian/Cartesian2D|module:echarts/coord/polar/Polar} coordSys\\n\\t     * @param {module:echarts/data/List} data\\n\\t     * @param {Array.<Array.<number>>} points\\n\\t     * @private\\n\\t     */\\n\\t    function getStackedOnPoints(coordSys, data) {\\n\\t        var baseAxis = coordSys.getBaseAxis();\\n\\t        var valueAxis = coordSys.getOtherAxis(baseAxis);\\n\\t        var valueStart = baseAxis.onZero\\n\\t            ? 0 : valueAxis.scale.getExtent()[0];\\n\\n\\t        var valueDim = valueAxis.dim;\\n\\n\\t        var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\\n\\n\\t        return data.mapArray([valueDim], function (val, idx) {\\n\\t            var stackedOnSameSign;\\n\\t            var stackedOn = data.stackedOn;\\n\\t            // Find first stacked value with same sign\\n\\t            while (stackedOn &&\\n\\t                sign(stackedOn.get(valueDim, idx)) === sign(val)\\n\\t            ) {\\n\\t                stackedOnSameSign = stackedOn;\\n\\t                break;\\n\\t            }\\n\\t            var stackedData = [];\\n\\t            stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\\n\\t            stackedData[1 - baseDataOffset] = stackedOnSameSign\\n\\t                ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\\n\\n\\t            return coordSys.dataToPoint(stackedData);\\n\\t        }, true);\\n\\t    }\\n\\n\\t    function createGridClipShape(cartesian, hasAnimation, seriesModel) {\\n\\t        var xExtent = getAxisExtentWithGap(cartesian.getAxis('x'));\\n\\t        var yExtent = getAxisExtentWithGap(cartesian.getAxis('y'));\\n\\t        var isHorizontal = cartesian.getBaseAxis().isHorizontal();\\n\\n\\t        var x = Math.min(xExtent[0], xExtent[1]);\\n\\t        var y = Math.min(yExtent[0], yExtent[1]);\\n\\t        var width = Math.max(xExtent[0], xExtent[1]) - x;\\n\\t        var height = Math.max(yExtent[0], yExtent[1]) - y;\\n\\t        var lineWidth = seriesModel.get('lineStyle.normal.width') || 2;\\n\\t        // Expand clip shape to avoid clipping when line value exceeds axis\\n\\t        var expandSize = seriesModel.get('clipOverflow') ? lineWidth / 2 : Math.max(width, height);\\n\\t        if (isHorizontal) {\\n\\t            y -= expandSize;\\n\\t            height += expandSize * 2;\\n\\t        }\\n\\t        else {\\n\\t            x -= expandSize;\\n\\t            width += expandSize * 2;\\n\\t        }\\n\\n\\t        var clipPath = new graphic.Rect({\\n\\t            shape: {\\n\\t                x: x,\\n\\t                y: y,\\n\\t                width: width,\\n\\t                height: height\\n\\t            }\\n\\t        });\\n\\n\\t        if (hasAnimation) {\\n\\t            clipPath.shape[isHorizontal ? 'width' : 'height'] = 0;\\n\\t            graphic.initProps(clipPath, {\\n\\t                shape: {\\n\\t                    width: width,\\n\\t                    height: height\\n\\t                }\\n\\t            }, seriesModel);\\n\\t        }\\n\\n\\t        return clipPath;\\n\\t    }\\n\\n\\t    function createPolarClipShape(polar, hasAnimation, seriesModel) {\\n\\t        var angleAxis = polar.getAngleAxis();\\n\\t        var radiusAxis = polar.getRadiusAxis();\\n\\n\\t        var radiusExtent = radiusAxis.getExtent();\\n\\t        var angleExtent = angleAxis.getExtent();\\n\\n\\t        var RADIAN = Math.PI / 180;\\n\\n\\t        var clipPath = new graphic.Sector({\\n\\t            shape: {\\n\\t                cx: polar.cx,\\n\\t                cy: polar.cy,\\n\\t                r0: radiusExtent[0],\\n\\t                r: radiusExtent[1],\\n\\t                startAngle: -angleExtent[0] * RADIAN,\\n\\t                endAngle: -angleExtent[1] * RADIAN,\\n\\t                clockwise: angleAxis.inverse\\n\\t            }\\n\\t        });\\n\\n\\t        if (hasAnimation) {\\n\\t            clipPath.shape.endAngle = -angleExtent[0] * RADIAN;\\n\\t            graphic.initProps(clipPath, {\\n\\t                shape: {\\n\\t                    endAngle: -angleExtent[1] * RADIAN\\n\\t                }\\n\\t            }, seriesModel);\\n\\t        }\\n\\n\\t        return clipPath;\\n\\t    }\\n\\n\\t    function createClipShape(coordSys, hasAnimation, seriesModel) {\\n\\t        return coordSys.type === 'polar'\\n\\t            ? createPolarClipShape(coordSys, hasAnimation, seriesModel)\\n\\t            : createGridClipShape(coordSys, hasAnimation, seriesModel);\\n\\t    }\\n\\n\\t    function turnPointsIntoStep(points, coordSys, stepTurnAt) {\\n\\t        var baseAxis = coordSys.getBaseAxis();\\n\\t        var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\\n\\n\\t        var stepPoints = [];\\n\\t        for (var i = 0; i < points.length - 1; i++) {\\n\\t            var nextPt = points[i + 1];\\n\\t            var pt = points[i];\\n\\t            stepPoints.push(pt);\\n\\n\\t            var stepPt = [];\\n\\t            switch (stepTurnAt) {\\n\\t                case 'end':\\n\\t                    stepPt[baseIndex] = nextPt[baseIndex];\\n\\t                    stepPt[1 - baseIndex] = pt[1 - baseIndex];\\n\\t                    // default is start\\n\\t                    stepPoints.push(stepPt);\\n\\t                    break;\\n\\t                case 'middle':\\n\\t                    // default is start\\n\\t                    var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\\n\\t                    var stepPt2 = [];\\n\\t                    stepPt[baseIndex] = stepPt2[baseIndex] = middle;\\n\\t                    stepPt[1 - baseIndex] = pt[1 - baseIndex];\\n\\t                    stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\\n\\t                    stepPoints.push(stepPt);\\n\\t                    stepPoints.push(stepPt2);\\n\\t                    break;\\n\\t                default:\\n\\t                    stepPt[baseIndex] = pt[baseIndex];\\n\\t                    stepPt[1 - baseIndex] = nextPt[1 - baseIndex];\\n\\t                    // default is start\\n\\t                    stepPoints.push(stepPt);\\n\\t            }\\n\\t        }\\n\\t        // Last points\\n\\t        points[i] && stepPoints.push(points[i]);\\n\\t        return stepPoints;\\n\\t    }\\n\\n\\t    function getVisualGradient(data, coordSys) {\\n\\t        var visualMetaList = data.getVisual('visualMeta');\\n\\t        if (!visualMetaList || !visualMetaList.length || !data.count()) {\\n\\t            // When data.count() is 0, gradient range can not be calculated.\\n\\t            return;\\n\\t        }\\n\\n\\t        var visualMeta;\\n\\t        for (var i = visualMetaList.length - 1; i >= 0; i--) {\\n\\t            // Can only be x or y\\n\\t            if (visualMetaList[i].dimension < 2) {\\n\\t                visualMeta = visualMetaList[i];\\n\\t                break;\\n\\t            }\\n\\t        }\\n\\t        if (!visualMeta || coordSys.type !== 'cartesian2d') {\\n\\t            if (true) {\\n\\t                console.warn('Visual map on line style only support x or y dimension.');\\n\\t            }\\n\\t            return;\\n\\t        }\\n\\n\\t        // If the area to be rendered is bigger than area defined by LinearGradient,\\n\\t        // the canvas spec prescribes that the color of the first stop and the last\\n\\t        // stop should be used. But if two stops are added at offset 0, in effect\\n\\t        // browsers use the color of the second stop to render area outside\\n\\t        // LinearGradient. So we can only infinitesimally extend area defined in\\n\\t        // LinearGradient to render `outerColors`.\\n\\n\\t        var dimension = visualMeta.dimension;\\n\\t        var dimName = data.dimensions[dimension];\\n\\t        var axis = coordSys.getAxis(dimName);\\n\\n\\t        // dataToCoor mapping may not be linear, but must be monotonic.\\n\\t        var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\\n\\t            return {\\n\\t                coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\\n\\t                color: stop.color\\n\\t            };\\n\\t        });\\n\\t        var stopLen = colorStops.length;\\n\\t        var outerColors = visualMeta.outerColors.slice();\\n\\n\\t        if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\\n\\t            colorStops.reverse();\\n\\t            outerColors.reverse();\\n\\t        }\\n\\n\\t        var tinyExtent = 10; // Arbitrary value: 10px\\n\\t        var minCoord = colorStops[0].coord - tinyExtent;\\n\\t        var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;\\n\\t        var coordSpan = maxCoord - minCoord;\\n\\n\\t        if (coordSpan < 1e-3) {\\n\\t            return 'transparent';\\n\\t        }\\n\\n\\t        zrUtil.each(colorStops, function (stop) {\\n\\t            stop.offset = (stop.coord - minCoord) / coordSpan;\\n\\t        });\\n\\t        colorStops.push({\\n\\t            offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,\\n\\t            color: outerColors[1] || 'transparent'\\n\\t        });\\n\\t        colorStops.unshift({ // notice colorStops.length have been changed.\\n\\t            offset: stopLen ? colorStops[0].offset : 0.5,\\n\\t            color: outerColors[0] || 'transparent'\\n\\t        });\\n\\n\\t        // zrUtil.each(colorStops, function (colorStop) {\\n\\t        //     // Make sure each offset has rounded px to avoid not sharp edge\\n\\t        //     colorStop.offset = (Math.round(colorStop.offset * (end - start) + start) - start) / (end - start);\\n\\t        // });\\n\\n\\t        var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);\\n\\t        gradient[dimName] = minCoord;\\n\\t        gradient[dimName + '2'] = maxCoord;\\n\\n\\t        return gradient;\\n\\t    }\\n\\n\\t    module.exports = ChartView.extend({\\n\\n\\t        type: 'line',\\n\\n\\t        init: function () {\\n\\t            var lineGroup = new graphic.Group();\\n\\n\\t            var symbolDraw = new SymbolDraw();\\n\\t            this.group.add(symbolDraw.group);\\n\\n\\t            this._symbolDraw = symbolDraw;\\n\\t            this._lineGroup = lineGroup;\\n\\t        },\\n\\n\\t        render: function (seriesModel, ecModel, api) {\\n\\t            var coordSys = seriesModel.coordinateSystem;\\n\\t            var group = this.group;\\n\\t            var data = seriesModel.getData();\\n\\t            var lineStyleModel = seriesModel.getModel('lineStyle.normal');\\n\\t            var areaStyleModel = seriesModel.getModel('areaStyle.normal');\\n\\n\\t            var points = data.mapArray(data.getItemLayout, true);\\n\\n\\t            var isCoordSysPolar = coordSys.type === 'polar';\\n\\t            var prevCoordSys = this._coordSys;\\n\\n\\t            var symbolDraw = this._symbolDraw;\\n\\t            var polyline = this._polyline;\\n\\t            var polygon = this._polygon;\\n\\n\\t            var lineGroup = this._lineGroup;\\n\\n\\t            var hasAnimation = seriesModel.get('animation');\\n\\n\\t            var isAreaChart = !areaStyleModel.isEmpty();\\n\\t            var stackedOnPoints = getStackedOnPoints(coordSys, data);\\n\\n\\t            var showSymbol = seriesModel.get('showSymbol');\\n\\n\\t            var isSymbolIgnore = showSymbol && !isCoordSysPolar && !seriesModel.get('showAllSymbol')\\n\\t                && this._getSymbolIgnoreFunc(data, coordSys);\\n\\n\\t            // Remove temporary symbols\\n\\t            var oldData = this._data;\\n\\t            oldData && oldData.eachItemGraphicEl(function (el, idx) {\\n\\t                if (el.__temp) {\\n\\t                    group.remove(el);\\n\\t                    oldData.setItemGraphicEl(idx, null);\\n\\t                }\\n\\t            });\\n\\n\\t            // Remove previous created symbols if showSymbol changed to false\\n\\t            if (!showSymbol) {\\n\\t                symbolDraw.remove();\\n\\t            }\\n\\n\\t            group.add(lineGroup);\\n\\n\\t            // FIXME step not support polar\\n\\t            var step = !isCoordSysPolar && seriesModel.get('step');\\n\\t            // Initialization animation or coordinate system changed\\n\\t            if (\\n\\t                !(polyline && prevCoordSys.type === coordSys.type && step === this._step)\\n\\t            ) {\\n\\t                showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\\n\\n\\t                if (step) {\\n\\t                    // TODO If stacked series is not step\\n\\t                    points = turnPointsIntoStep(points, coordSys, step);\\n\\t                    stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\\n\\t                }\\n\\n\\t                polyline = this._newPolyline(points, coordSys, hasAnimation);\\n\\t                if (isAreaChart) {\\n\\t                    polygon = this._newPolygon(\\n\\t                        points, stackedOnPoints,\\n\\t                        coordSys, hasAnimation\\n\\t                    );\\n\\t                }\\n\\t                lineGroup.setClipPath(createClipShape(coordSys, true, seriesModel));\\n\\t            }\\n\\t            else {\\n\\t                if (isAreaChart && !polygon) {\\n\\t                    // If areaStyle is added\\n\\t                    polygon = this._newPolygon(\\n\\t                        points, stackedOnPoints,\\n\\t                        coordSys, hasAnimation\\n\\t                    );\\n\\t                }\\n\\t                else if (polygon && !isAreaChart) {\\n\\t                    // If areaStyle is removed\\n\\t                    lineGroup.remove(polygon);\\n\\t                    polygon = this._polygon = null;\\n\\t                }\\n\\n\\t                // Update clipPath\\n\\t                lineGroup.setClipPath(createClipShape(coordSys, false, seriesModel));\\n\\n\\t                // Always update, or it is wrong in the case turning on legend\\n\\t                // because points are not changed\\n\\t                showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\\n\\n\\t                // Stop symbol animation and sync with line points\\n\\t                // FIXME performance?\\n\\t                data.eachItemGraphicEl(function (el) {\\n\\t                    el.stopAnimation(true);\\n\\t                });\\n\\n\\t                // In the case data zoom triggerred refreshing frequently\\n\\t                // Data may not change if line has a category axis. So it should animate nothing\\n\\t                if (!isPointsSame(this._stackedOnPoints, stackedOnPoints)\\n\\t                    || !isPointsSame(this._points, points)\\n\\t                ) {\\n\\t                    if (hasAnimation) {\\n\\t                        this._updateAnimation(\\n\\t                            data, stackedOnPoints, coordSys, api, step\\n\\t                        );\\n\\t                    }\\n\\t                    else {\\n\\t                        // Not do it in update with animation\\n\\t                        if (step) {\\n\\t                            // TODO If stacked series is not step\\n\\t                            points = turnPointsIntoStep(points, coordSys, step);\\n\\t                            stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\\n\\t                        }\\n\\n\\t                        polyline.setShape({\\n\\t                            points: points\\n\\t                        });\\n\\t                        polygon && polygon.setShape({\\n\\t                            points: points,\\n\\t                            stackedOnPoints: stackedOnPoints\\n\\t                        });\\n\\t                    }\\n\\t                }\\n\\t            }\\n\\n\\t            var visualColor = getVisualGradient(data, coordSys) || data.getVisual('color');\\n\\n\\t            polyline.useStyle(zrUtil.defaults(\\n\\t                // Use color in lineStyle first\\n\\t                lineStyleModel.getLineStyle(),\\n\\t                {\\n\\t                    fill: 'none',\\n\\t                    stroke: visualColor,\\n\\t                    lineJoin: 'bevel'\\n\\t                }\\n\\t            ));\\n\\n\\t            var smooth = seriesModel.get('smooth');\\n\\t            smooth = getSmooth(seriesModel.get('smooth'));\\n\\t            polyline.setShape({\\n\\t                smooth: smooth,\\n\\t                smoothMonotone: seriesModel.get('smoothMonotone'),\\n\\t                connectNulls: seriesModel.get('connectNulls')\\n\\t            });\\n\\n\\t            if (polygon) {\\n\\t                var stackedOn = data.stackedOn;\\n\\t                var stackedOnSmooth = 0;\\n\\n\\t                polygon.useStyle(zrUtil.defaults(\\n\\t                    areaStyleModel.getAreaStyle(),\\n\\t                    {\\n\\t                        fill: visualColor,\\n\\t                        opacity: 0.7,\\n\\t                        lineJoin: 'bevel'\\n\\t                    }\\n\\t                ));\\n\\n\\t                if (stackedOn) {\\n\\t                    var stackedOnSeries = stackedOn.hostModel;\\n\\t                    stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\\n\\t                }\\n\\n\\t                polygon.setShape({\\n\\t                    smooth: smooth,\\n\\t                    stackedOnSmooth: stackedOnSmooth,\\n\\t                    smoothMonotone: seriesModel.get('smoothMonotone'),\\n\\t                    connectNulls: seriesModel.get('connectNulls')\\n\\t                });\\n\\t            }\\n\\n\\t            this._data = data;\\n\\t            // Save the coordinate system for transition animation when data changed\\n\\t            this._coordSys = coordSys;\\n\\t            this._stackedOnPoints = stackedOnPoints;\\n\\t            this._points = points;\\n\\t            this._step = step;\\n\\t        },\\n\\n\\t        dispose: function () {},\\n\\n\\t        highlight: function (seriesModel, ecModel, api, payload) {\\n\\t            var data = seriesModel.getData();\\n\\t            var dataIndex = modelUtil.queryDataIndex(data, payload);\\n\\n\\t            if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\\n\\t                var symbol = data.getItemGraphicEl(dataIndex);\\n\\t                if (!symbol) {\\n\\t                    // Create a temporary symbol if it is not exists\\n\\t                    var pt = data.getItemLayout(dataIndex);\\n\\t                    if (!pt) {\\n\\t                        // Null data\\n\\t                        return;\\n\\t                    }\\n\\t                    symbol = new Symbol(data, dataIndex);\\n\\t                    symbol.position = pt;\\n\\t                    symbol.setZ(\\n\\t                        seriesModel.get('zlevel'),\\n\\t                        seriesModel.get('z')\\n\\t                    );\\n\\t                    symbol.ignore = isNaN(pt[0]) || isNaN(pt[1]);\\n\\t                    symbol.__temp = true;\\n\\t                    data.setItemGraphicEl(dataIndex, symbol);\\n\\n\\t                    // Stop scale animation\\n\\t                    symbol.stopSymbolAnimation(true);\\n\\n\\t                    this.group.add(symbol);\\n\\t                }\\n\\t                symbol.highlight();\\n\\t            }\\n\\t            else {\\n\\t                // Highlight whole series\\n\\t                ChartView.prototype.highlight.call(\\n\\t                    this, seriesModel, ecModel, api, payload\\n\\t                );\\n\\t            }\\n\\t        },\\n\\n\\t        downplay: function (seriesModel, ecModel, api, payload) {\\n\\t            var data = seriesModel.getData();\\n\\t            var dataIndex = modelUtil.queryDataIndex(data, payload);\\n\\t            if (dataIndex != null && dataIndex >= 0) {\\n\\t                var symbol = data.getItemGraphicEl(dataIndex);\\n\\t                if (symbol) {\\n\\t                    if (symbol.__temp) {\\n\\t                        data.setItemGraphicEl(dataIndex, null);\\n\\t                        this.group.remove(symbol);\\n\\t                    }\\n\\t                    else {\\n\\t                        symbol.downplay();\\n\\t                    }\\n\\t                }\\n\\t            }\\n\\t            else {\\n\\t                // FIXME\\n\\t                // can not downplay completely.\\n\\t                // Downplay whole series\\n\\t                ChartView.prototype.downplay.call(\\n\\t                    this, seriesModel, ecModel, api, payload\\n\\t                );\\n\\t            }\\n\\t        },\\n\\n\\t        /**\\n\\t         * @param {module:zrender/container/Group} group\\n\\t         * @param {Array.<Array.<number>>} points\\n\\t         * @private\\n\\t         */\\n\\t        _newPolyline: function (points) {\\n\\t            var polyline = this._polyline;\\n\\t            // Remove previous created polyline\\n\\t            if (polyline) {\\n\\t                this._lineGroup.remove(polyline);\\n\\t            }\\n\\n\\t            polyline = new polyHelper.Polyline({\\n\\t                shape: {\\n\\t                    points: points\\n\\t                },\\n\\t                silent: true,\\n\\t                z2: 10\\n\\t            });\\n\\n\\t            this._lineGroup.add(polyline);\\n\\n\\t            this._polyline = polyline;\\n\\n\\t            return polyline;\\n\\t        },\\n\\n\\t        /**\\n\\t         * @param {module:zrender/container/Group} group\\n\\t         * @param {Array.<Array.<number>>} stackedOnPoints\\n\\t         * @param {Array.<Array.<number>>} points\\n\\t         * @private\\n\\t         */\\n\\t        _newPolygon: function (points, stackedOnPoints) {\\n\\t            var polygon = this._polygon;\\n\\t            // Remove previous created polygon\\n\\t            if (polygon) {\\n\\t                this._lineGroup.remove(polygon);\\n\\t            }\\n\\n\\t            polygon = new polyHelper.Polygon({\\n\\t                shape: {\\n\\t                    points: points,\\n\\t                    stackedOnPoints: stackedOnPoints\\n\\t                },\\n\\t                silent: true\\n\\t            });\\n\\n\\t            this._lineGroup.add(polygon);\\n\\n\\t            this._polygon = polygon;\\n\\t            return polygon;\\n\\t        },\\n\\t        /**\\n\\t         * @private\\n\\t         */\\n\\t        _getSymbolIgnoreFunc: function (data, coordSys) {\\n\\t            var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\\n\\t            // `getLabelInterval` is provided by echarts/component/axis\\n\\t            if (categoryAxis && categoryAxis.isLabelIgnored) {\\n\\t                return zrUtil.bind(categoryAxis.isLabelIgnored, categoryAxis);\\n\\t            }\\n\\t        },\\n\\n\\t        /**\\n\\t         * @private\\n\\t         */\\n\\t        // FIXME Two value axis\\n\\t        _updateAnimation: function (data, stackedOnPoints, coordSys, api, step) {\\n\\t            var polyline = this._polyline;\\n\\t            var polygon = this._polygon;\\n\\t            var seriesModel = data.hostModel;\\n\\n\\t            var diff = lineAnimationDiff(\\n\\t                this._data, data,\\n\\t                this._stackedOnPoints, stackedOnPoints,\\n\\t                this._coordSys, coordSys\\n\\t            );\\n\\n\\t            var current = diff.current;\\n\\t            var stackedOnCurrent = diff.stackedOnCurrent;\\n\\t            var next = diff.next;\\n\\t            var stackedOnNext = diff.stackedOnNext;\\n\\t            if (step) {\\n\\t                // TODO If stacked series is not step\\n\\t                current = turnPointsIntoStep(diff.current, coordSys, step);\\n\\t                stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\\n\\t                next = turnPointsIntoStep(diff.next, coordSys, step);\\n\\t                stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\\n\\t            }\\n\\t            // `diff.current` is subset of `current` (which should be ensured by\\n\\t            // turnPointsIntoStep), so points in `__points` can be updated when\\n\\t            // points in `current` are update during animation.\\n\\t            polyline.shape.__points = diff.current;\\n\\t            polyline.shape.points = current;\\n\\n\\t            graphic.updateProps(polyline, {\\n\\t                shape: {\\n\\t                    points: next\\n\\t                }\\n\\t            }, seriesModel);\\n\\n\\t            if (polygon) {\\n\\t                polygon.setShape({\\n\\t                    points: current,\\n\\t                    stackedOnPoints: stackedOnCurrent\\n\\t                });\\n\\t                graphic.updateProps(polygon, {\\n\\t                    shape: {\\n\\t                        points: next,\\n\\t                        stackedOnPoints: stackedOnNext\\n\\t                    }\\n\\t                }, seriesModel);\\n\\t            }\\n\\n\\t            var updatedDataInfo = [];\\n\\t            var diffStatus = diff.status;\\n\\n\\t            for (var i = 0; i < diffStatus.length; i++) {\\n\\t                var cmd = diffStatus[i].cmd;\\n\\t                if (cmd === '=') {\\n\\t                    var el = data.getItemGraphicEl(diffStatus[i].idx1);\\n\\t                    if (el) {\\n\\t                        updatedDataInfo.push({\\n\\t                            el: el,\\n\\t                            ptIdx: i    // Index of points\\n\\t                        });\\n\\t                    }\\n\\t                }\\n\\t            }\\n\\n\\t            if (polyline.animators && polyline.animators.length) {\\n\\t                polyline.animators[0].during(function () {\\n\\t                    for (var i = 0; i < updatedDataInfo.length; i++) {\\n\\t                        var el = updatedDataInfo[i].el;\\n\\t                        el.attr('position', polyline.shape.__points[updatedDataInfo[i].ptIdx]);\\n\\t                    }\\n\\t                });\\n\\t            }\\n\\t        },\\n\\n\\t        remove: function (ecModel) {\\n\\t            var group = this.group;\\n\\t            var oldData = this._data;\\n\\t            this._lineGroup.removeAll();\\n\\t            this._symbolDraw.remove(true);\\n\\t            // Remove temporary created elements when highlighting\\n\\t            oldData && oldData.eachItemGraphicEl(function (el, idx) {\\n\\t                if (el.__temp) {\\n\\t                    group.remove(el);\\n\\t                    oldData.setItemGraphicEl(idx, null);\\n\\t                }\\n\\t            });\\n\\n\\t            this._polyline =\\n\\t            this._polygon =\\n\\t            this._coordSys =\\n\\t            this._points =\\n\\t            this._stackedOnPoints =\\n\\t            this._data = null;\\n\\t        }\\n\\t    });\\n\\n\\n/***/ },\\n/* 116 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * @module echarts/chart/helper/SymbolDraw\\n\\t */\\n\\n\\n\\t    var graphic = __webpack_require__(18);\\n\\t    var Symbol = __webpack_require__(117);\\n\\n\\t    /**\\n\\t     * @constructor\\n\\t     * @alias module:echarts/chart/helper/SymbolDraw\\n\\t     * @param {module:zrender/graphic/Group} [symbolCtor]\\n\\t     */\\n\\t    function SymbolDraw(symbolCtor) {\\n\\t        this.group = new graphic.Group();\\n\\n\\t        this._symbolCtor = symbolCtor || Symbol;\\n\\t    }\\n\\n\\t    var symbolDrawProto = SymbolDraw.prototype;\\n\\n\\t    function symbolNeedsDraw(data, idx, isIgnore) {\\n\\t        var point = data.getItemLayout(idx);\\n\\t        // Is an object\\n\\t        // if (point && point.hasOwnProperty('point')) {\\n\\t        //     point = point.point;\\n\\t        // }\\n\\t        return point && !isNaN(point[0]) && !isNaN(point[1]) && !(isIgnore && isIgnore(idx))\\n\\t                    && data.getItemVisual(idx, 'symbol') !== 'none';\\n\\t    }\\n\\t    /**\\n\\t     * Update symbols draw by new data\\n\\t     * @param {module:echarts/data/List} data\\n\\t     * @param {Array.<boolean>} [isIgnore]\\n\\t     */\\n\\t    symbolDrawProto.updateData = function (data, isIgnore) {\\n\\t        var group = this.group;\\n\\t        var seriesModel = data.hostModel;\\n\\t        var oldData = this._data;\\n\\n\\t        var SymbolCtor = this._symbolCtor;\\n\\n\\t        var seriesScope = {\\n\\t            itemStyle: seriesModel.getModel('itemStyle.normal').getItemStyle(['color']),\\n\\t            hoverItemStyle: seriesModel.getModel('itemStyle.emphasis').getItemStyle(),\\n\\t            symbolRotate: seriesModel.get('symbolRotate'),\\n\\t            symbolOffset: seriesModel.get('symbolOffset'),\\n\\t            hoverAnimation: seriesModel.get('hoverAnimation'),\\n\\n\\t            labelModel: seriesModel.getModel('label.normal'),\\n\\t            hoverLabelModel: seriesModel.getModel('label.emphasis'),\\n\\t            cursorStyle: seriesModel.get('cursor')\\n\\t        };\\n\\n\\t        data.diff(oldData)\\n\\t            .add(function (newIdx) {\\n\\t                var point = data.getItemLayout(newIdx);\\n\\t                if (symbolNeedsDraw(data, newIdx, isIgnore)) {\\n\\t                    var symbolEl = new SymbolCtor(data, newIdx, seriesScope);\\n\\t                    symbolEl.attr('position', point);\\n\\t                    data.setItemGraphicEl(newIdx, symbolEl);\\n\\t                    group.add(symbolEl);\\n\\t                }\\n\\t            })\\n\\t            .update(function (newIdx, oldIdx) {\\n\\t                var symbolEl = oldData.getItemGraphicEl(oldIdx);\\n\\t                var point = data.getItemLayout(newIdx);\\n\\t                if (!symbolNeedsDraw(data, newIdx, isIgnore)) {\\n\\t                    group.remove(symbolEl);\\n\\t                    return;\\n\\t                }\\n\\t                if (!symbolEl) {\\n\\t                    symbolEl = new SymbolCtor(data, newIdx);\\n\\t                    symbolEl.attr('position', point);\\n\\t                }\\n\\t                else {\\n\\t                    symbolEl.updateData(data, newIdx, seriesScope);\\n\\t                    graphic.updateProps(symbolEl, {\\n\\t                        position: point\\n\\t                    }, seriesModel);\\n\\t                }\\n\\n\\t                // Add back\\n\\t                group.add(symbolEl);\\n\\n\\t                data.setItemGraphicEl(newIdx, symbolEl);\\n\\t            })\\n\\t            .remove(function (oldIdx) {\\n\\t                var el = oldData.getItemGraphicEl(oldIdx);\\n\\t                el && el.fadeOut(function () {\\n\\t                    group.remove(el);\\n\\t                });\\n\\t            })\\n\\t            .execute();\\n\\n\\t        this._data = data;\\n\\t    };\\n\\n\\t    symbolDrawProto.updateLayout = function () {\\n\\t        var data = this._data;\\n\\t        if (data) {\\n\\t            // Not use animation\\n\\t            data.eachItemGraphicEl(function (el, idx) {\\n\\t                var point = data.getItemLayout(idx);\\n\\t                el.attr('position', point);\\n\\t            });\\n\\t        }\\n\\t    };\\n\\n\\t    symbolDrawProto.remove = function (enableAnimation) {\\n\\t        var group = this.group;\\n\\t        var data = this._data;\\n\\t        if (data) {\\n\\t            if (enableAnimation) {\\n\\t                data.eachItemGraphicEl(function (el) {\\n\\t                    el.fadeOut(function () {\\n\\t                        group.remove(el);\\n\\t                    });\\n\\t                });\\n\\t            }\\n\\t            else {\\n\\t                group.removeAll();\\n\\t            }\\n\\t        }\\n\\t    };\\n\\n\\t    module.exports = SymbolDraw;\\n\\n\\n/***/ },\\n/* 117 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * @module echarts/chart/helper/Symbol\\n\\t */\\n\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var symbolUtil = __webpack_require__(111);\\n\\t    var graphic = __webpack_require__(18);\\n\\t    var numberUtil = __webpack_require__(7);\\n\\t    var labelHelper = __webpack_require__(118);\\n\\n\\t    function getSymbolSize(data, idx) {\\n\\t        var symbolSize = data.getItemVisual(idx, 'symbolSize');\\n\\t        return symbolSize instanceof Array\\n\\t            ? symbolSize.slice()\\n\\t            : [+symbolSize, +symbolSize];\\n\\t    }\\n\\n\\t    function getScale(symbolSize) {\\n\\t        return [symbolSize[0] / 2, symbolSize[1] / 2];\\n\\t    }\\n\\n\\t    /**\\n\\t     * @constructor\\n\\t     * @alias {module:echarts/chart/helper/Symbol}\\n\\t     * @param {module:echarts/data/List} data\\n\\t     * @param {number} idx\\n\\t     * @extends {module:zrender/graphic/Group}\\n\\t     */\\n\\t    function Symbol(data, idx, seriesScope) {\\n\\t        graphic.Group.call(this);\\n\\n\\t        this.updateData(data, idx, seriesScope);\\n\\t    }\\n\\n\\t    var symbolProto = Symbol.prototype;\\n\\n\\t    function driftSymbol(dx, dy) {\\n\\t        this.parent.drift(dx, dy);\\n\\t    }\\n\\n\\t    symbolProto._createSymbol = function (symbolType, data, idx, symbolSize) {\\n\\t        // Remove paths created before\\n\\t        this.removeAll();\\n\\n\\t        var seriesModel = data.hostModel;\\n\\t        var color = data.getItemVisual(idx, 'color');\\n\\n\\t        // var symbolPath = symbolUtil.createSymbol(\\n\\t        //     symbolType, -0.5, -0.5, 1, 1, color\\n\\t        // );\\n\\t        // If width/height are set too small (e.g., set to 1) on ios10\\n\\t        // and macOS Sierra, a circle stroke become a rect, no matter what\\n\\t        // the scale is set. So we set width/height as 2. See #4150.\\n\\t        var symbolPath = symbolUtil.createSymbol(\\n\\t            symbolType, -1, -1, 2, 2, color\\n\\t        );\\n\\n\\t        symbolPath.attr({\\n\\t            z2: 100,\\n\\t            culling: true,\\n\\t            scale: [0, 0]\\n\\t        });\\n\\t        // Rewrite drift method\\n\\t        symbolPath.drift = driftSymbol;\\n\\n\\t        graphic.initProps(symbolPath, {\\n\\t            scale: getScale(symbolSize)\\n\\t        }, seriesModel, idx);\\n\\t        this._symbolType = symbolType;\\n\\n\\t        this.add(symbolPath);\\n\\t    };\\n\\n\\t    /**\\n\\t     * Stop animation\\n\\t     * @param {boolean} toLastFrame\\n\\t     */\\n\\t    symbolProto.stopSymbolAnimation = function (toLastFrame) {\\n\\t        this.childAt(0).stopAnimation(toLastFrame);\\n\\t    };\\n\\n\\t    /**\\n\\t     * Get symbol path element\\n\\t     */\\n\\t    symbolProto.getSymbolPath = function () {\\n\\t        return this.childAt(0);\\n\\t    };\\n\\n\\t    /**\\n\\t     * Get scale(aka, current symbol size).\\n\\t     * Including the change caused by animation\\n\\t     */\\n\\t    symbolProto.getScale = function () {\\n\\t        return this.childAt(0).scale;\\n\\t    };\\n\\n\\t    /**\\n\\t     * Highlight symbol\\n\\t     */\\n\\t    symbolProto.highlight = function () {\\n\\t        this.childAt(0).trigger('emphasis');\\n\\t    };\\n\\n\\t    /**\\n\\t     * Downplay symbol\\n\\t     */\\n\\t    symbolProto.downplay = function () {\\n\\t        this.childAt(0).trigger('normal');\\n\\t    };\\n\\n\\t    /**\\n\\t     * @param {number} zlevel\\n\\t     * @param {number} z\\n\\t     */\\n\\t    symbolProto.setZ = function (zlevel, z) {\\n\\t        var symbolPath = this.childAt(0);\\n\\t        symbolPath.zlevel = zlevel;\\n\\t        symbolPath.z = z;\\n\\t    };\\n\\n\\t    symbolProto.setDraggable = function (draggable) {\\n\\t        var symbolPath = this.childAt(0);\\n\\t        symbolPath.draggable = draggable;\\n\\t        symbolPath.cursor = draggable ? 'move' : 'pointer';\\n\\t    };\\n\\n\\t    /**\\n\\t     * Update symbol properties\\n\\t     * @param  {module:echarts/data/List} data\\n\\t     * @param  {number} idx\\n\\t     */\\n\\t    symbolProto.updateData = function (data, idx, seriesScope) {\\n\\t        this.silent = false;\\n\\n\\t        var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\\n\\t        var seriesModel = data.hostModel;\\n\\t        var symbolSize = getSymbolSize(data, idx);\\n\\n\\t        if (symbolType !== this._symbolType) {\\n\\t            this._createSymbol(symbolType, data, idx, symbolSize);\\n\\t        }\\n\\t        else {\\n\\t            var symbolPath = this.childAt(0);\\n\\t            symbolPath.silent = false;\\n\\t            graphic.updateProps(symbolPath, {\\n\\t                scale: getScale(symbolSize)\\n\\t            }, seriesModel, idx);\\n\\t        }\\n\\t        this._updateCommon(data, idx, symbolSize, seriesScope);\\n\\t        this._seriesModel = seriesModel;\\n\\t    };\\n\\n\\t    // Update common properties\\n\\t    var normalStyleAccessPath = ['itemStyle', 'normal'];\\n\\t    var emphasisStyleAccessPath = ['itemStyle', 'emphasis'];\\n\\t    var normalLabelAccessPath = ['label', 'normal'];\\n\\t    var emphasisLabelAccessPath = ['label', 'emphasis'];\\n\\n\\t    symbolProto._updateCommon = function (data, idx, symbolSize, seriesScope) {\\n\\t        var symbolPath = this.childAt(0);\\n\\t        var seriesModel = data.hostModel;\\n\\t        var color = data.getItemVisual(idx, 'color');\\n\\n\\t        // Reset style\\n\\t        if (symbolPath.type !== 'image') {\\n\\t            symbolPath.useStyle({\\n\\t                strokeNoScale: true\\n\\t            });\\n\\t        }\\n\\n\\t        seriesScope = seriesScope || null;\\n\\n\\t        var itemStyle = seriesScope && seriesScope.itemStyle;\\n\\t        var hoverItemStyle = seriesScope && seriesScope.hoverItemStyle;\\n\\t        var symbolRotate = seriesScope && seriesScope.symbolRotate;\\n\\t        var symbolOffset = seriesScope && seriesScope.symbolOffset;\\n\\t        var labelModel = seriesScope && seriesScope.labelModel;\\n\\t        var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel;\\n\\t        var hoverAnimation = seriesScope && seriesScope.hoverAnimation;\\n\\t        var cursorStyle = seriesScope && seriesScope.cursorStyle;\\n\\n\\t        if (!seriesScope || data.hasItemOption) {\\n\\t            var itemModel = data.getItemModel(idx);\\n\\n\\t            // Color must be excluded.\\n\\t            // Because symbol provide setColor individually to set fill and stroke\\n\\t            itemStyle = itemModel.getModel(normalStyleAccessPath).getItemStyle(['color']);\\n\\t            hoverItemStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\\n\\n\\t            symbolRotate = itemModel.getShallow('symbolRotate');\\n\\t            symbolOffset = itemModel.getShallow('symbolOffset');\\n\\n\\t            labelModel = itemModel.getModel(normalLabelAccessPath);\\n\\t            hoverLabelModel = itemModel.getModel(emphasisLabelAccessPath);\\n\\t            hoverAnimation = itemModel.getShallow('hoverAnimation');\\n\\t            cursorStyle = itemModel.getShallow('cursor');\\n\\t        }\\n\\t        else {\\n\\t            hoverItemStyle = zrUtil.extend({}, hoverItemStyle);\\n\\t        }\\n\\n\\t        var elStyle = symbolPath.style;\\n\\n\\t        symbolPath.attr('rotation', (symbolRotate || 0) * Math.PI / 180 || 0);\\n\\n\\t        if (symbolOffset) {\\n\\t            symbolPath.attr('position', [\\n\\t                numberUtil.parsePercent(symbolOffset[0], symbolSize[0]),\\n\\t                numberUtil.parsePercent(symbolOffset[1], symbolSize[1])\\n\\t            ]);\\n\\t        }\\n\\n\\t        cursorStyle && symbolPath.attr('cursor', cursorStyle);\\n\\n\\t        // PENDING setColor before setStyle!!!\\n\\t        symbolPath.setColor(color);\\n\\n\\t        symbolPath.setStyle(itemStyle);\\n\\n\\t        var opacity = data.getItemVisual(idx, 'opacity');\\n\\t        if (opacity != null) {\\n\\t            elStyle.opacity = opacity;\\n\\t        }\\n\\n\\t        var valueDim = labelHelper.findLabelValueDim(data);\\n\\t        labelHelper.setTextToStyle(\\n\\t            data, idx, valueDim, elStyle, seriesModel, labelModel, color\\n\\t        );\\n\\t        labelHelper.setTextToStyle(\\n\\t            data, idx, valueDim, hoverItemStyle, seriesModel, hoverLabelModel, color\\n\\t        );\\n\\n\\t        symbolPath.off('mouseover')\\n\\t            .off('mouseout')\\n\\t            .off('emphasis')\\n\\t            .off('normal');\\n\\n\\t        symbolPath.hoverStyle = hoverItemStyle;\\n\\n\\t        graphic.setHoverStyle(symbolPath);\\n\\n\\t        var scale = getScale(symbolSize);\\n\\n\\t        if (hoverAnimation && seriesModel.isAnimationEnabled()) {\\n\\t            var onEmphasis = function() {\\n\\t                var ratio = scale[1] / scale[0];\\n\\t                this.animateTo({\\n\\t                    scale: [\\n\\t                        Math.max(scale[0] * 1.1, scale[0] + 3),\\n\\t                        Math.max(scale[1] * 1.1, scale[1] + 3 * ratio)\\n\\t                    ]\\n\\t                }, 400, 'elasticOut');\\n\\t            };\\n\\t            var onNormal = function() {\\n\\t                this.animateTo({\\n\\t                    scale: scale\\n\\t                }, 400, 'elasticOut');\\n\\t            };\\n\\t            symbolPath.on('mouseover', onEmphasis)\\n\\t                .on('mouseout', onNormal)\\n\\t                .on('emphasis', onEmphasis)\\n\\t                .on('normal', onNormal);\\n\\t        }\\n\\t    };\\n\\n\\t    symbolProto.fadeOut = function (cb) {\\n\\t        var symbolPath = this.childAt(0);\\n\\t        // Avoid mistaken hover when fading out\\n\\t        this.silent = symbolPath.silent = true;\\n\\t        // Not show text when animating\\n\\t        symbolPath.style.text = '';\\n\\t        graphic.updateProps(symbolPath, {\\n\\t            scale: [0, 0]\\n\\t        }, this._seriesModel, this.dataIndex, cb);\\n\\t    };\\n\\n\\t    zrUtil.inherits(Symbol, graphic.Group);\\n\\n\\t    module.exports = Symbol;\\n\\n\\n/***/ },\\n/* 118 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * @module echarts/chart/helper/Symbol\\n\\t */\\n\\n\\n\\t    var graphic = __webpack_require__(18);\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var modelUtil = __webpack_require__(5);\\n\\n\\t    var helper = {};\\n\\n\\t    helper.findLabelValueDim = function (data) {\\n\\t        var valueDim;\\n\\t        var labelDims = modelUtil.otherDimToDataDim(data, 'label');\\n\\n\\t        if (labelDims.length) {\\n\\t            valueDim = labelDims[0];\\n\\t        }\\n\\t        else {\\n\\t            // Get last value dim\\n\\t            var dimensions = data.dimensions.slice();\\n\\t            var dataType;\\n\\t            while (dimensions.length && (\\n\\t                valueDim = dimensions.pop(),\\n\\t                dataType = data.getDimensionInfo(valueDim).type,\\n\\t                dataType === 'ordinal' || dataType === 'time'\\n\\t            )) {} // jshint ignore:line\\n\\t        }\\n\\n\\t        return valueDim;\\n\\t    };\\n\\n\\t    helper.setTextToStyle = function (\\n\\t        data, dataIndex, valueDim, elStyle, seriesModel, labelModel, color\\n\\t    ) {\\n\\t        if (valueDim != null && labelModel.getShallow('show')) {\\n\\t            graphic.setText(elStyle, labelModel, color);\\n\\t            elStyle.text = zrUtil.retrieve(\\n\\t                seriesModel.getFormattedLabel(dataIndex, 'normal'),\\n\\t                data.get(valueDim, dataIndex)\\n\\t            );\\n\\t        }\\n\\t        else {\\n\\t            elStyle.text = '';\\n\\t        }\\n\\t    };\\n\\n\\t    module.exports = helper;\\n\\n\\n/***/ },\\n/* 119 */\\n/***/ function(module, exports) {\\n\\n\\t\\n\\n\\t    // var arrayDiff = require('zrender/lib/core/arrayDiff');\\n\\t    // 'zrender/core/arrayDiff' has been used before, but it did\\n\\t    // not do well in performance when roam with fixed dataZoom window.\\n\\n\\t    function sign(val) {\\n\\t        return val >= 0 ? 1 : -1;\\n\\t    }\\n\\n\\t    function getStackedOnPoint(coordSys, data, idx) {\\n\\t        var baseAxis = coordSys.getBaseAxis();\\n\\t        var valueAxis = coordSys.getOtherAxis(baseAxis);\\n\\t        var valueStart = baseAxis.onZero\\n\\t            ? 0 : valueAxis.scale.getExtent()[0];\\n\\n\\t        var valueDim = valueAxis.dim;\\n\\t        var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\\n\\n\\t        var stackedOnSameSign;\\n\\t        var stackedOn = data.stackedOn;\\n\\t        var val = data.get(valueDim, idx);\\n\\t        // Find first stacked value with same sign\\n\\t        while (stackedOn &&\\n\\t            sign(stackedOn.get(valueDim, idx)) === sign(val)\\n\\t        ) {\\n\\t            stackedOnSameSign = stackedOn;\\n\\t            break;\\n\\t        }\\n\\t        var stackedData = [];\\n\\t        stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\\n\\t        stackedData[1 - baseDataOffset] = stackedOnSameSign\\n\\t            ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\\n\\n\\t        return coordSys.dataToPoint(stackedData);\\n\\t    }\\n\\n\\t    // function convertToIntId(newIdList, oldIdList) {\\n\\t    //     // Generate int id instead of string id.\\n\\t    //     // Compare string maybe slow in score function of arrDiff\\n\\n\\t    //     // Assume id in idList are all unique\\n\\t    //     var idIndicesMap = {};\\n\\t    //     var idx = 0;\\n\\t    //     for (var i = 0; i < newIdList.length; i++) {\\n\\t    //         idIndicesMap[newIdList[i]] = idx;\\n\\t    //         newIdList[i] = idx++;\\n\\t    //     }\\n\\t    //     for (var i = 0; i < oldIdList.length; i++) {\\n\\t    //         var oldId = oldIdList[i];\\n\\t    //         // Same with newIdList\\n\\t    //         if (idIndicesMap[oldId]) {\\n\\t    //             oldIdList[i] = idIndicesMap[oldId];\\n\\t    //         }\\n\\t    //         else {\\n\\t    //             oldIdList[i] = idx++;\\n\\t    //         }\\n\\t    //     }\\n\\t    // }\\n\\n\\t    function diffData(oldData, newData) {\\n\\t        var diffResult = [];\\n\\n\\t        newData.diff(oldData)\\n\\t            .add(function (idx) {\\n\\t                diffResult.push({cmd: '+', idx: idx});\\n\\t            })\\n\\t            .update(function (newIdx, oldIdx) {\\n\\t                diffResult.push({cmd: '=', idx: oldIdx, idx1: newIdx});\\n\\t            })\\n\\t            .remove(function (idx) {\\n\\t                diffResult.push({cmd: '-', idx: idx});\\n\\t            })\\n\\t            .execute();\\n\\n\\t        return diffResult;\\n\\t    }\\n\\n\\t    module.exports = function (\\n\\t        oldData, newData,\\n\\t        oldStackedOnPoints, newStackedOnPoints,\\n\\t        oldCoordSys, newCoordSys\\n\\t    ) {\\n\\t        var diff = diffData(oldData, newData);\\n\\n\\t        // var newIdList = newData.mapArray(newData.getId);\\n\\t        // var oldIdList = oldData.mapArray(oldData.getId);\\n\\n\\t        // convertToIntId(newIdList, oldIdList);\\n\\n\\t        // // FIXME One data ?\\n\\t        // diff = arrayDiff(oldIdList, newIdList);\\n\\n\\t        var currPoints = [];\\n\\t        var nextPoints = [];\\n\\t        // Points for stacking base line\\n\\t        var currStackedPoints = [];\\n\\t        var nextStackedPoints = [];\\n\\n\\t        var status = [];\\n\\t        var sortedIndices = [];\\n\\t        var rawIndices = [];\\n\\t        var dims = newCoordSys.dimensions;\\n\\t        for (var i = 0; i < diff.length; i++) {\\n\\t            var diffItem = diff[i];\\n\\t            var pointAdded = true;\\n\\n\\t            // FIXME, animation is not so perfect when dataZoom window moves fast\\n\\t            // Which is in case remvoing or add more than one data in the tail or head\\n\\t            switch (diffItem.cmd) {\\n\\t                case '=':\\n\\t                    var currentPt = oldData.getItemLayout(diffItem.idx);\\n\\t                    var nextPt = newData.getItemLayout(diffItem.idx1);\\n\\t                    // If previous data is NaN, use next point directly\\n\\t                    if (isNaN(currentPt[0]) || isNaN(currentPt[1])) {\\n\\t                        currentPt = nextPt.slice();\\n\\t                    }\\n\\t                    currPoints.push(currentPt);\\n\\t                    nextPoints.push(nextPt);\\n\\n\\t                    currStackedPoints.push(oldStackedOnPoints[diffItem.idx]);\\n\\t                    nextStackedPoints.push(newStackedOnPoints[diffItem.idx1]);\\n\\n\\t                    rawIndices.push(newData.getRawIndex(diffItem.idx1));\\n\\t                    break;\\n\\t                case '+':\\n\\t                    var idx = diffItem.idx;\\n\\t                    currPoints.push(\\n\\t                        oldCoordSys.dataToPoint([\\n\\t                            newData.get(dims[0], idx, true), newData.get(dims[1], idx, true)\\n\\t                        ])\\n\\t                    );\\n\\n\\t                    nextPoints.push(newData.getItemLayout(idx).slice());\\n\\n\\t                    currStackedPoints.push(\\n\\t                        getStackedOnPoint(oldCoordSys, newData, idx)\\n\\t                    );\\n\\t                    nextStackedPoints.push(newStackedOnPoints[idx]);\\n\\n\\t                    rawIndices.push(newData.getRawIndex(idx));\\n\\t                    break;\\n\\t                case '-':\\n\\t                    var idx = diffItem.idx;\\n\\t                    var rawIndex = oldData.getRawIndex(idx);\\n\\t                    // Data is replaced. In the case of dynamic data queue\\n\\t                    // FIXME FIXME FIXME\\n\\t                    if (rawIndex !== idx) {\\n\\t                        currPoints.push(oldData.getItemLayout(idx));\\n\\t                        nextPoints.push(newCoordSys.dataToPoint([\\n\\t                            oldData.get(dims[0], idx, true), oldData.get(dims[1], idx, true)\\n\\t                        ]));\\n\\n\\t                        currStackedPoints.push(oldStackedOnPoints[idx]);\\n\\t                        nextStackedPoints.push(\\n\\t                            getStackedOnPoint(\\n\\t                                newCoordSys, oldData, idx\\n\\t                            )\\n\\t                        );\\n\\n\\t                        rawIndices.push(rawIndex);\\n\\t                    }\\n\\t                    else {\\n\\t                        pointAdded = false;\\n\\t                    }\\n\\t            }\\n\\n\\t            // Original indices\\n\\t            if (pointAdded) {\\n\\t                status.push(diffItem);\\n\\t                sortedIndices.push(sortedIndices.length);\\n\\t            }\\n\\t        }\\n\\n\\t        // Diff result may be crossed if all items are changed\\n\\t        // Sort by data index\\n\\t        sortedIndices.sort(function (a, b) {\\n\\t            return rawIndices[a] - rawIndices[b];\\n\\t        });\\n\\n\\t        var sortedCurrPoints = [];\\n\\t        var sortedNextPoints = [];\\n\\n\\t        var sortedCurrStackedPoints = [];\\n\\t        var sortedNextStackedPoints = [];\\n\\n\\t        var sortedStatus = [];\\n\\t        for (var i = 0; i < sortedIndices.length; i++) {\\n\\t            var idx = sortedIndices[i];\\n\\t            sortedCurrPoints[i] = currPoints[idx];\\n\\t            sortedNextPoints[i] = nextPoints[idx];\\n\\n\\t            sortedCurrStackedPoints[i] = currStackedPoints[idx];\\n\\t            sortedNextStackedPoints[i] = nextStackedPoints[idx];\\n\\n\\t            sortedStatus[i] = status[idx];\\n\\t        }\\n\\n\\t        return {\\n\\t            current: sortedCurrPoints,\\n\\t            next: sortedNextPoints,\\n\\n\\t            stackedOnCurrent: sortedCurrStackedPoints,\\n\\t            stackedOnNext: sortedNextStackedPoints,\\n\\n\\t            status: sortedStatus\\n\\t        };\\n\\t    };\\n\\n\\n/***/ },\\n/* 120 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t// Poly path support NaN point\\n\\n\\n\\t    var Path = __webpack_require__(20);\\n\\t    var vec2 = __webpack_require__(10);\\n\\n\\t    var vec2Min = vec2.min;\\n\\t    var vec2Max = vec2.max;\\n\\n\\t    var scaleAndAdd = vec2.scaleAndAdd;\\n\\t    var v2Copy = vec2.copy;\\n\\n\\t    // Temporary variable\\n\\t    var v = [];\\n\\t    var cp0 = [];\\n\\t    var cp1 = [];\\n\\n\\t    function isPointNull(p) {\\n\\t        return isNaN(p[0]) || isNaN(p[1]);\\n\\t    }\\n\\n\\t    function drawSegment(\\n\\t        ctx, points, start, segLen, allLen,\\n\\t        dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls\\n\\t    ) {\\n\\t        var prevIdx = 0;\\n\\t        var idx = start;\\n\\t        for (var k = 0; k < segLen; k++) {\\n\\t            var p = points[idx];\\n\\t            if (idx >= allLen || idx < 0) {\\n\\t                break;\\n\\t            }\\n\\t            if (isPointNull(p)) {\\n\\t                if (connectNulls) {\\n\\t                    idx += dir;\\n\\t                    continue;\\n\\t                }\\n\\t                break;\\n\\t            }\\n\\n\\t            if (idx === start) {\\n\\t                ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\\n\\t                v2Copy(cp0, p);\\n\\t            }\\n\\t            else {\\n\\t                if (smooth > 0) {\\n\\t                    var nextIdx = idx + dir;\\n\\t                    var nextP = points[nextIdx];\\n\\t                    if (connectNulls) {\\n\\t                        // Find next point not null\\n\\t                        while (nextP && isPointNull(points[nextIdx])) {\\n\\t                            nextIdx += dir;\\n\\t                            nextP = points[nextIdx];\\n\\t                        }\\n\\t                    }\\n\\n\\t                    var ratioNextSeg = 0.5;\\n\\t                    var prevP = points[prevIdx];\\n\\t                    var nextP = points[nextIdx];\\n\\t                    // Last point\\n\\t                    if (!nextP || isPointNull(nextP)) {\\n\\t                        v2Copy(cp1, p);\\n\\t                    }\\n\\t                    else {\\n\\t                        // If next data is null in not connect case\\n\\t                        if (isPointNull(nextP) && !connectNulls) {\\n\\t                            nextP = p;\\n\\t                        }\\n\\n\\t                        vec2.sub(v, nextP, prevP);\\n\\n\\t                        var lenPrevSeg;\\n\\t                        var lenNextSeg;\\n\\t                        if (smoothMonotone === 'x' || smoothMonotone === 'y') {\\n\\t                            var dim = smoothMonotone === 'x' ? 0 : 1;\\n\\t                            lenPrevSeg = Math.abs(p[dim] - prevP[dim]);\\n\\t                            lenNextSeg = Math.abs(p[dim] - nextP[dim]);\\n\\t                        }\\n\\t                        else {\\n\\t                            lenPrevSeg = vec2.dist(p, prevP);\\n\\t                            lenNextSeg = vec2.dist(p, nextP);\\n\\t                        }\\n\\n\\t                        // Use ratio of seg length\\n\\t                        ratioNextSeg = lenNextSeg / (lenNextSeg + lenPrevSeg);\\n\\n\\t                        scaleAndAdd(cp1, p, v, -smooth * (1 - ratioNextSeg));\\n\\t                    }\\n\\t                    // Smooth constraint\\n\\t                    vec2Min(cp0, cp0, smoothMax);\\n\\t                    vec2Max(cp0, cp0, smoothMin);\\n\\t                    vec2Min(cp1, cp1, smoothMax);\\n\\t                    vec2Max(cp1, cp1, smoothMin);\\n\\n\\t                    ctx.bezierCurveTo(\\n\\t                        cp0[0], cp0[1],\\n\\t                        cp1[0], cp1[1],\\n\\t                        p[0], p[1]\\n\\t                    );\\n\\t                    // cp0 of next segment\\n\\t                    scaleAndAdd(cp0, p, v, smooth * ratioNextSeg);\\n\\t                }\\n\\t                else {\\n\\t                    ctx.lineTo(p[0], p[1]);\\n\\t                }\\n\\t            }\\n\\n\\t            prevIdx = idx;\\n\\t            idx += dir;\\n\\t        }\\n\\n\\t        return k;\\n\\t    }\\n\\n\\t    function getBoundingBox(points, smoothConstraint) {\\n\\t        var ptMin = [Infinity, Infinity];\\n\\t        var ptMax = [-Infinity, -Infinity];\\n\\t        if (smoothConstraint) {\\n\\t            for (var i = 0; i < points.length; i++) {\\n\\t                var pt = points[i];\\n\\t                if (pt[0] < ptMin[0]) { ptMin[0] = pt[0]; }\\n\\t                if (pt[1] < ptMin[1]) { ptMin[1] = pt[1]; }\\n\\t                if (pt[0] > ptMax[0]) { ptMax[0] = pt[0]; }\\n\\t                if (pt[1] > ptMax[1]) { ptMax[1] = pt[1]; }\\n\\t            }\\n\\t        }\\n\\t        return {\\n\\t            min: smoothConstraint ? ptMin : ptMax,\\n\\t            max: smoothConstraint ? ptMax : ptMin\\n\\t        };\\n\\t    }\\n\\n\\t    module.exports = {\\n\\n\\t        Polyline: Path.extend({\\n\\n\\t            type: 'ec-polyline',\\n\\n\\t            shape: {\\n\\t                points: [],\\n\\n\\t                smooth: 0,\\n\\n\\t                smoothConstraint: true,\\n\\n\\t                smoothMonotone: null,\\n\\n\\t                connectNulls: false\\n\\t            },\\n\\n\\t            style: {\\n\\t                fill: null,\\n\\n\\t                stroke: '#000'\\n\\t            },\\n\\n\\t            buildPath: function (ctx, shape) {\\n\\t                var points = shape.points;\\n\\n\\t                var i = 0;\\n\\t                var len = points.length;\\n\\n\\t                var result = getBoundingBox(points, shape.smoothConstraint);\\n\\n\\t                if (shape.connectNulls) {\\n\\t                    // Must remove first and last null values avoid draw error in polygon\\n\\t                    for (; len > 0; len--) {\\n\\t                        if (!isPointNull(points[len - 1])) {\\n\\t                            break;\\n\\t                        }\\n\\t                    }\\n\\t                    for (; i < len; i++) {\\n\\t                        if (!isPointNull(points[i])) {\\n\\t                            break;\\n\\t                        }\\n\\t                    }\\n\\t                }\\n\\t                while (i < len) {\\n\\t                    i += drawSegment(\\n\\t                        ctx, points, i, len, len,\\n\\t                        1, result.min, result.max, shape.smooth,\\n\\t                        shape.smoothMonotone, shape.connectNulls\\n\\t                    ) + 1;\\n\\t                }\\n\\t            }\\n\\t        }),\\n\\n\\t        Polygon: Path.extend({\\n\\n\\t            type: 'ec-polygon',\\n\\n\\t            shape: {\\n\\t                points: [],\\n\\n\\t                // Offset between stacked base points and points\\n\\t                stackedOnPoints: [],\\n\\n\\t                smooth: 0,\\n\\n\\t                stackedOnSmooth: 0,\\n\\n\\t                smoothConstraint: true,\\n\\n\\t                smoothMonotone: null,\\n\\n\\t                connectNulls: false\\n\\t            },\\n\\n\\t            buildPath: function (ctx, shape) {\\n\\t                var points = shape.points;\\n\\t                var stackedOnPoints = shape.stackedOnPoints;\\n\\n\\t                var i = 0;\\n\\t                var len = points.length;\\n\\t                var smoothMonotone = shape.smoothMonotone;\\n\\t                var bbox = getBoundingBox(points, shape.smoothConstraint);\\n\\t                var stackedOnBBox = getBoundingBox(stackedOnPoints, shape.smoothConstraint);\\n\\n\\t                if (shape.connectNulls) {\\n\\t                    // Must remove first and last null values avoid draw error in polygon\\n\\t                    for (; len > 0; len--) {\\n\\t                        if (!isPointNull(points[len - 1])) {\\n\\t                            break;\\n\\t                        }\\n\\t                    }\\n\\t                    for (; i < len; i++) {\\n\\t                        if (!isPointNull(points[i])) {\\n\\t                            break;\\n\\t                        }\\n\\t                    }\\n\\t                }\\n\\t                while (i < len) {\\n\\t                    var k = drawSegment(\\n\\t                        ctx, points, i, len, len,\\n\\t                        1, bbox.min, bbox.max, shape.smooth,\\n\\t                        smoothMonotone, shape.connectNulls\\n\\t                    );\\n\\t                    drawSegment(\\n\\t                        ctx, stackedOnPoints, i + k - 1, k, len,\\n\\t                        -1, stackedOnBBox.min, stackedOnBBox.max, shape.stackedOnSmooth,\\n\\t                        smoothMonotone, shape.connectNulls\\n\\t                    );\\n\\t                    i += k + 1;\\n\\n\\t                    ctx.closePath();\\n\\t                }\\n\\t            }\\n\\t        })\\n\\t    };\\n\\n\\n/***/ },\\n/* 121 */\\n/***/ function(module, exports) {\\n\\n\\t\\n\\n\\t    module.exports = function (seriesType, defaultSymbolType, legendSymbol, ecModel, api) {\\n\\n\\t        // Encoding visual for all series include which is filtered for legend drawing\\n\\t        ecModel.eachRawSeriesByType(seriesType, function (seriesModel) {\\n\\t            var data = seriesModel.getData();\\n\\n\\t            var symbolType = seriesModel.get('symbol') || defaultSymbolType;\\n\\t            var symbolSize = seriesModel.get('symbolSize');\\n\\n\\t            data.setVisual({\\n\\t                legendSymbol: legendSymbol || symbolType,\\n\\t                symbol: symbolType,\\n\\t                symbolSize: symbolSize\\n\\t            });\\n\\n\\t            // Only visible series has each data be visual encoded\\n\\t            if (!ecModel.isSeriesFiltered(seriesModel)) {\\n\\t                if (typeof symbolSize === 'function') {\\n\\t                    data.each(function (idx) {\\n\\t                        var rawValue = seriesModel.getRawValue(idx);\\n\\t                        // FIXME\\n\\t                        var params = seriesModel.getDataParams(idx);\\n\\t                        data.setItemVisual(idx, 'symbolSize', symbolSize(rawValue, params));\\n\\t                    });\\n\\t                }\\n\\t                data.each(function (idx) {\\n\\t                    var itemModel = data.getItemModel(idx);\\n\\t                    var itemSymbolType = itemModel.getShallow('symbol', true);\\n\\t                    var itemSymbolSize = itemModel.getShallow('symbolSize', true);\\n\\t                    // If has item symbol\\n\\t                    if (itemSymbolType != null) {\\n\\t                        data.setItemVisual(idx, 'symbol', itemSymbolType);\\n\\t                    }\\n\\t                    if (itemSymbolSize != null) {\\n\\t                        // PENDING Transform symbolSize ?\\n\\t                        data.setItemVisual(idx, 'symbolSize', itemSymbolSize);\\n\\t                    }\\n\\t                });\\n\\t            }\\n\\t        });\\n\\t    };\\n\\n\\n/***/ },\\n/* 122 */\\n/***/ function(module, exports) {\\n\\n\\t\\n\\n\\t    module.exports = function (seriesType, ecModel) {\\n\\t        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\\n\\t            var data = seriesModel.getData();\\n\\t            var coordSys = seriesModel.coordinateSystem;\\n\\n\\t            if (!coordSys) {\\n\\t                return;\\n\\t            }\\n\\n\\t            var dims = [];\\n\\t            var coordDims = coordSys.dimensions;\\n\\t            for (var i = 0; i < coordDims.length; i++) {\\n\\t                dims.push(seriesModel.coordDimToDataDim(coordSys.dimensions[i])[0]);\\n\\t            }\\n\\n\\t            if (dims.length === 1) {\\n\\t                data.each(dims[0], function (x, idx) {\\n\\t                    // Also {Array.<number>}, not undefined to avoid if...else... statement\\n\\t                    data.setItemLayout(idx, isNaN(x) ? [NaN, NaN] : coordSys.dataToPoint(x));\\n\\t                });\\n\\t            }\\n\\t            else if (dims.length === 2) {\\n\\t                data.each(dims, function (x, y, idx) {\\n\\t                    // Also {Array.<number>}, not undefined to avoid if...else... statement\\n\\t                    data.setItemLayout(\\n\\t                        idx, (isNaN(x) || isNaN(y)) ? [NaN, NaN] : coordSys.dataToPoint([x, y])\\n\\t                    );\\n\\t                }, true);\\n\\t            }\\n\\t        });\\n\\t    };\\n\\n\\n\\n/***/ },\\n/* 123 */\\n/***/ function(module, exports) {\\n\\n\\t\\n\\t    var samplers = {\\n\\t        average: function (frame) {\\n\\t            var sum = 0;\\n\\t            var count = 0;\\n\\t            for (var i = 0; i < frame.length; i++) {\\n\\t                if (!isNaN(frame[i])) {\\n\\t                    sum += frame[i];\\n\\t                    count++;\\n\\t                }\\n\\t            }\\n\\t            // Return NaN if count is 0\\n\\t            return count === 0 ? NaN : sum / count;\\n\\t        },\\n\\t        sum: function (frame) {\\n\\t            var sum = 0;\\n\\t            for (var i = 0; i < frame.length; i++) {\\n\\t                // Ignore NaN\\n\\t                sum += frame[i] || 0;\\n\\t            }\\n\\t            return sum;\\n\\t        },\\n\\t        max: function (frame) {\\n\\t            var max = -Infinity;\\n\\t            for (var i = 0; i < frame.length; i++) {\\n\\t                frame[i] > max && (max = frame[i]);\\n\\t            }\\n\\t            return max;\\n\\t        },\\n\\t        min: function (frame) {\\n\\t            var min = Infinity;\\n\\t            for (var i = 0; i < frame.length; i++) {\\n\\t                frame[i] < min && (min = frame[i]);\\n\\t            }\\n\\t            return min;\\n\\t        },\\n\\t        // TODO\\n\\t        // Median\\n\\t        nearest: function (frame) {\\n\\t            return frame[0];\\n\\t        }\\n\\t    };\\n\\n\\t    var indexSampler = function (frame, value) {\\n\\t        return Math.round(frame.length / 2);\\n\\t    };\\n\\t    module.exports = function (seriesType, ecModel, api) {\\n\\t        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\\n\\t            var data = seriesModel.getData();\\n\\t            var sampling = seriesModel.get('sampling');\\n\\t            var coordSys = seriesModel.coordinateSystem;\\n\\t            // Only cartesian2d support down sampling\\n\\t            if (coordSys.type === 'cartesian2d' && sampling) {\\n\\t                var baseAxis = coordSys.getBaseAxis();\\n\\t                var valueAxis = coordSys.getOtherAxis(baseAxis);\\n\\t                var extent = baseAxis.getExtent();\\n\\t                // Coordinste system has been resized\\n\\t                var size = extent[1] - extent[0];\\n\\t                var rate = Math.round(data.count() / size);\\n\\t                if (rate > 1) {\\n\\t                    var sampler;\\n\\t                    if (typeof sampling === 'string') {\\n\\t                        sampler = samplers[sampling];\\n\\t                    }\\n\\t                    else if (typeof sampling === 'function') {\\n\\t                        sampler = sampling;\\n\\t                    }\\n\\t                    if (sampler) {\\n\\t                        data = data.downSample(\\n\\t                            valueAxis.dim, 1 / rate, sampler, indexSampler\\n\\t                        );\\n\\t                        seriesModel.setData(data);\\n\\t                    }\\n\\t                }\\n\\t            }\\n\\t        }, this);\\n\\t    };\\n\\n\\n/***/ },\\n/* 124 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t'use strict';\\n\\n\\n\\t    var graphic = __webpack_require__(18);\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var echarts = __webpack_require__(1);\\n\\n\\t    __webpack_require__(125);\\n\\n\\t    __webpack_require__(133);\\n\\n\\t    // Grid view\\n\\t    echarts.extendComponentView({\\n\\n\\t        type: 'grid',\\n\\n\\t        render: function (gridModel, ecModel) {\\n\\t            this.group.removeAll();\\n\\t            if (gridModel.get('show')) {\\n\\t                this.group.add(new graphic.Rect({\\n\\t                    shape: gridModel.coordinateSystem.getRect(),\\n\\t                    style: zrUtil.defaults({\\n\\t                        fill: gridModel.get('backgroundColor')\\n\\t                    }, gridModel.getItemStyle()),\\n\\t                    silent: true,\\n\\t                    z2: -1\\n\\t                }));\\n\\t            }\\n\\t        }\\n\\n\\t    });\\n\\n\\t    echarts.registerPreprocessor(function (option) {\\n\\t        // Only create grid when need\\n\\t        if (option.xAxis && option.yAxis && !option.grid) {\\n\\t            option.grid = {};\\n\\t        }\\n\\t    });\\n\\n\\n/***/ },\\n/* 125 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * Grid is a region which contains at most 4 cartesian systems\\n\\t *\\n\\t * TODO Default cartesian\\n\\t */\\n\\tvar factory = exports;\\n\\n\\t    var layout = __webpack_require__(71);\\n\\t    var axisHelper = __webpack_require__(101);\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var Cartesian2D = __webpack_require__(126);\\n\\t    var Axis2D = __webpack_require__(128);\\n\\n\\t    var each = zrUtil.each;\\n\\n\\t    var ifAxisCrossZero = axisHelper.ifAxisCrossZero;\\n\\t    var niceScaleExtent = axisHelper.niceScaleExtent;\\n\\n\\t    // 依赖 GridModel, AxisModel 做预处理\\n\\t    __webpack_require__(129);\\n\\n\\t    /**\\n\\t     * Check if the axis is used in the specified grid\\n\\t     * @inner\\n\\t     */\\n\\t    function isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\\n\\t        return axisModel.getCoordSysModel() === gridModel;\\n\\t    }\\n\\n\\t    function getLabelUnionRect(axis) {\\n\\t        var axisModel = axis.model;\\n\\t        var labels = axisModel.getFormattedLabels();\\n\\t        var textStyleModel = axisModel.getModel('axisLabel.textStyle');\\n\\t        var rect;\\n\\t        var step = 1;\\n\\t        var labelCount = labels.length;\\n\\t        if (labelCount > 40) {\\n\\t            // Simple optimization for large amount of labels\\n\\t            step = Math.ceil(labelCount / 40);\\n\\t        }\\n\\t        for (var i = 0; i < labelCount; i += step) {\\n\\t            if (!axis.isLabelIgnored(i)) {\\n\\t                var singleRect = textStyleModel.getTextRect(labels[i]);\\n\\t                // FIXME consider label rotate\\n\\t                rect ? rect.union(singleRect) : (rect = singleRect);\\n\\t            }\\n\\t        }\\n\\t        return rect;\\n\\t    }\\n\\n\\t    function Grid(gridModel, ecModel, api) {\\n\\t        /**\\n\\t         * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\\n\\t         * @private\\n\\t         */\\n\\t        this._coordsMap = {};\\n\\n\\t        /**\\n\\t         * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\\n\\t         * @private\\n\\t         */\\n\\t        this._coordsList = [];\\n\\n\\t        /**\\n\\t         * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}\\n\\t         * @private\\n\\t         */\\n\\t        this._axesMap = {};\\n\\n\\t        /**\\n\\t         * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\\n\\t         * @private\\n\\t         */\\n\\t        this._axesList = [];\\n\\n\\t        this._initCartesian(gridModel, ecModel, api);\\n\\n\\t        this.model = gridModel;\\n\\t    }\\n\\n\\t    var gridProto = Grid.prototype;\\n\\n\\t    gridProto.type = 'grid';\\n\\n\\t    gridProto.axisPointerEnabled = true;\\n\\n\\t    gridProto.getRect = function () {\\n\\t        return this._rect;\\n\\t    };\\n\\n\\t    gridProto.update = function (ecModel, api) {\\n\\n\\t        var axesMap = this._axesMap;\\n\\n\\t        this._updateScale(ecModel, this.model);\\n\\n\\t        function ifAxisCanNotOnZero(otherAxisDim) {\\n\\t            var axes = axesMap[otherAxisDim];\\n\\t            for (var idx in axes) {\\n\\t                if (axes.hasOwnProperty(idx)) {\\n\\t                    var axis = axes[idx];\\n\\t                    if (axis && (\\n\\t                        axis.type === 'category' || axis.type === 'time' || !ifAxisCrossZero(axis)\\n\\t                    )) {\\n\\t                        return true;\\n\\t                    }\\n\\t                }\\n\\t            }\\n\\t            return false;\\n\\t        }\\n\\n\\t        each(axesMap.x, function (xAxis) {\\n\\t            niceScaleExtent(xAxis.scale, xAxis.model);\\n\\t        });\\n\\t        each(axesMap.y, function (yAxis) {\\n\\t            niceScaleExtent(yAxis.scale, yAxis.model);\\n\\t        });\\n\\t        // Fix configuration\\n\\t        each(axesMap.x, function (xAxis) {\\n\\t            // onZero can not be enabled in these two situations\\n\\t            // 1. When any other axis is a category axis\\n\\t            // 2. When any other axis not across 0 point\\n\\t            if (ifAxisCanNotOnZero('y')) {\\n\\t                xAxis.onZero = false;\\n\\t            }\\n\\t        });\\n\\t        each(axesMap.y, function (yAxis) {\\n\\t            if (ifAxisCanNotOnZero('x')) {\\n\\t                yAxis.onZero = false;\\n\\t            }\\n\\t        });\\n\\n\\t        // Resize again if containLabel is enabled\\n\\t        // FIXME It may cause getting wrong grid size in data processing stage\\n\\t        this.resize(this.model, api);\\n\\t    };\\n\\n\\t    /**\\n\\t     * Resize the grid\\n\\t     * @param {module:echarts/coord/cartesian/GridModel} gridModel\\n\\t     * @param {module:echarts/ExtensionAPI} api\\n\\t     */\\n\\t    gridProto.resize = function (gridModel, api, ignoreContainLabel) {\\n\\n\\t        var gridRect = layout.getLayoutRect(\\n\\t            gridModel.getBoxLayoutParams(), {\\n\\t                width: api.getWidth(),\\n\\t                height: api.getHeight()\\n\\t            });\\n\\n\\t        this._rect = gridRect;\\n\\n\\t        var axesList = this._axesList;\\n\\n\\t        adjustAxes();\\n\\n\\t        // Minus label size\\n\\t        if (!ignoreContainLabel && gridModel.get('containLabel')) {\\n\\t            each(axesList, function (axis) {\\n\\t                if (!axis.model.get('axisLabel.inside')) {\\n\\t                    var labelUnionRect = getLabelUnionRect(axis);\\n\\t                    if (labelUnionRect) {\\n\\t                        var dim = axis.isHorizontal() ? 'height' : 'width';\\n\\t                        var margin = axis.model.get('axisLabel.margin');\\n\\t                        gridRect[dim] -= labelUnionRect[dim] + margin;\\n\\t                        if (axis.position === 'top') {\\n\\t                            gridRect.y += labelUnionRect.height + margin;\\n\\t                        }\\n\\t                        else if (axis.position === 'left')  {\\n\\t                            gridRect.x += labelUnionRect.width + margin;\\n\\t                        }\\n\\t                    }\\n\\t                }\\n\\t            });\\n\\n\\t            adjustAxes();\\n\\t        }\\n\\n\\t        function adjustAxes() {\\n\\t            each(axesList, function (axis) {\\n\\t                var isHorizontal = axis.isHorizontal();\\n\\t                var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\\n\\t                var idx = axis.inverse ? 1 : 0;\\n\\t                axis.setExtent(extent[idx], extent[1 - idx]);\\n\\t                updateAxisTransfrom(axis, isHorizontal ? gridRect.x : gridRect.y);\\n\\t            });\\n\\t        }\\n\\t    };\\n\\n\\t    /**\\n\\t     * @param {string} axisType\\n\\t     * @param {ndumber} [axisIndex]\\n\\t     */\\n\\t    gridProto.getAxis = function (axisType, axisIndex) {\\n\\t        var axesMapOnDim = this._axesMap[axisType];\\n\\t        if (axesMapOnDim != null) {\\n\\t            if (axisIndex == null) {\\n\\t                // Find first axis\\n\\t                for (var name in axesMapOnDim) {\\n\\t                    if (axesMapOnDim.hasOwnProperty(name)) {\\n\\t                        return axesMapOnDim[name];\\n\\t                    }\\n\\t                }\\n\\t            }\\n\\t            return axesMapOnDim[axisIndex];\\n\\t        }\\n\\t    };\\n\\n\\t    /**\\n\\t     * @return {Array.<module:echarts/coord/Axis>}\\n\\t     */\\n\\t    gridProto.getAxes = function () {\\n\\t        return this._axesList.slice();\\n\\t    };\\n\\n\\t    /**\\n\\t     * Usage:\\n\\t     *      grid.getCartesian(xAxisIndex, yAxisIndex);\\n\\t     *      grid.getCartesian(xAxisIndex);\\n\\t     *      grid.getCartesian(null, yAxisIndex);\\n\\t     *      grid.getCartesian({xAxisIndex: ..., yAxisIndex: ...});\\n\\t     *\\n\\t     * @param {number|Object} [xAxisIndex]\\n\\t     * @param {number} [yAxisIndex]\\n\\t     */\\n\\t    gridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\\n\\t        if (xAxisIndex != null && yAxisIndex != null) {\\n\\t            var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\\n\\t            return this._coordsMap[key];\\n\\t        }\\n\\n\\t        if (zrUtil.isObject(xAxisIndex)) {\\n\\t            yAxisIndex = xAxisIndex.yAxisIndex;\\n\\t            xAxisIndex = xAxisIndex.xAxisIndex;\\n\\t        }\\n\\t        // When only xAxisIndex or yAxisIndex given, find its first cartesian.\\n\\t        for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\\n\\t            if (coordList[i].getAxis('x').index === xAxisIndex\\n\\t                || coordList[i].getAxis('y').index === yAxisIndex\\n\\t            ) {\\n\\t                return coordList[i];\\n\\t            }\\n\\t        }\\n\\t    };\\n\\n\\t    gridProto.getCartesians = function () {\\n\\t        return this._coordsList.slice();\\n\\t    };\\n\\n\\t    /**\\n\\t     * @implements\\n\\t     * see {module:echarts/CoodinateSystem}\\n\\t     */\\n\\t    gridProto.convertToPixel = function (ecModel, finder, value) {\\n\\t        var target = this._findConvertTarget(ecModel, finder);\\n\\n\\t        return target.cartesian\\n\\t            ? target.cartesian.dataToPoint(value)\\n\\t            : target.axis\\n\\t            ? target.axis.toGlobalCoord(target.axis.dataToCoord(value))\\n\\t            : null;\\n\\t    };\\n\\n\\t    /**\\n\\t     * @implements\\n\\t     * see {module:echarts/CoodinateSystem}\\n\\t     */\\n\\t    gridProto.convertFromPixel = function (ecModel, finder, value) {\\n\\t        var target = this._findConvertTarget(ecModel, finder);\\n\\n\\t        return target.cartesian\\n\\t            ? target.cartesian.pointToData(value)\\n\\t            : target.axis\\n\\t            ? target.axis.coordToData(target.axis.toLocalCoord(value))\\n\\t            : null;\\n\\t    };\\n\\n\\t    /**\\n\\t     * @inner\\n\\t     */\\n\\t    gridProto._findConvertTarget = function (ecModel, finder) {\\n\\t        var seriesModel = finder.seriesModel;\\n\\t        var xAxisModel = finder.xAxisModel\\n\\t            || (seriesModel && seriesModel.getReferringComponents('xAxis')[0]);\\n\\t        var yAxisModel = finder.yAxisModel\\n\\t            || (seriesModel && seriesModel.getReferringComponents('yAxis')[0]);\\n\\t        var gridModel = finder.gridModel;\\n\\t        var coordsList = this._coordsList;\\n\\t        var cartesian;\\n\\t        var axis;\\n\\n\\t        if (seriesModel) {\\n\\t            cartesian = seriesModel.coordinateSystem;\\n\\t            zrUtil.indexOf(coordsList, cartesian) < 0 && (cartesian = null);\\n\\t        }\\n\\t        else if (xAxisModel && yAxisModel) {\\n\\t            cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\\n\\t        }\\n\\t        else if (xAxisModel) {\\n\\t            axis = this.getAxis('x', xAxisModel.componentIndex);\\n\\t        }\\n\\t        else if (yAxisModel) {\\n\\t            axis = this.getAxis('y', yAxisModel.componentIndex);\\n\\t        }\\n\\t        // Lowest priority.\\n\\t        else if (gridModel) {\\n\\t            var grid = gridModel.coordinateSystem;\\n\\t            if (grid === this) {\\n\\t                cartesian = this._coordsList[0];\\n\\t            }\\n\\t        }\\n\\n\\t        return {cartesian: cartesian, axis: axis};\\n\\t    };\\n\\n\\t    /**\\n\\t     * @implements\\n\\t     * see {module:echarts/CoodinateSystem}\\n\\t     */\\n\\t    gridProto.containPoint = function (point) {\\n\\t        var coord = this._coordsList[0];\\n\\t        if (coord) {\\n\\t            return coord.containPoint(point);\\n\\t        }\\n\\t    };\\n\\n\\t    /**\\n\\t     * Initialize cartesian coordinate systems\\n\\t     * @private\\n\\t     */\\n\\t    gridProto._initCartesian = function (gridModel, ecModel, api) {\\n\\t        var axisPositionUsed = {\\n\\t            left: false,\\n\\t            right: false,\\n\\t            top: false,\\n\\t            bottom: false\\n\\t        };\\n\\n\\t        var axesMap = {\\n\\t            x: {},\\n\\t            y: {}\\n\\t        };\\n\\t        var axesCount = {\\n\\t            x: 0,\\n\\t            y: 0\\n\\t        };\\n\\n\\t        /// Create axis\\n\\t        ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\\n\\t        ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\\n\\n\\t        if (!axesCount.x || !axesCount.y) {\\n\\t            // Roll back when there no either x or y axis\\n\\t            this._axesMap = {};\\n\\t            this._axesList = [];\\n\\t            return;\\n\\t        }\\n\\n\\t        this._axesMap = axesMap;\\n\\n\\t        /// Create cartesian2d\\n\\t        each(axesMap.x, function (xAxis, xAxisIndex) {\\n\\t            each(axesMap.y, function (yAxis, yAxisIndex) {\\n\\t                var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\\n\\t                var cartesian = new Cartesian2D(key);\\n\\n\\t                cartesian.grid = this;\\n\\t                cartesian.model = gridModel;\\n\\n\\t                this._coordsMap[key] = cartesian;\\n\\t                this._coordsList.push(cartesian);\\n\\n\\t                cartesian.addAxis(xAxis);\\n\\t                cartesian.addAxis(yAxis);\\n\\t            }, this);\\n\\t        }, this);\\n\\n\\t        function createAxisCreator(axisType) {\\n\\t            return function (axisModel, idx) {\\n\\t                if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\\n\\t                    return;\\n\\t                }\\n\\n\\t                var axisPosition = axisModel.get('position');\\n\\t                if (axisType === 'x') {\\n\\t                    // Fix position\\n\\t                    if (axisPosition !== 'top' && axisPosition !== 'bottom') {\\n\\t                        // Default bottom of X\\n\\t                        axisPosition = 'bottom';\\n\\t                        if (axisPositionUsed[axisPosition]) {\\n\\t                            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';\\n\\t                        }\\n\\t                    }\\n\\t                }\\n\\t                else {\\n\\t                    // Fix position\\n\\t                    if (axisPosition !== 'left' && axisPosition !== 'right') {\\n\\t                        // Default left of Y\\n\\t                        axisPosition = 'left';\\n\\t                        if (axisPositionUsed[axisPosition]) {\\n\\t                            axisPosition = axisPosition === 'left' ? 'right' : 'left';\\n\\t                        }\\n\\t                    }\\n\\t                }\\n\\t                axisPositionUsed[axisPosition] = true;\\n\\n\\t                var axis = new Axis2D(\\n\\t                    axisType, axisHelper.createScaleByModel(axisModel),\\n\\t                    [0, 0],\\n\\t                    axisModel.get('type'),\\n\\t                    axisPosition\\n\\t                );\\n\\n\\t                var isCategory = axis.type === 'category';\\n\\t                axis.onBand = isCategory && axisModel.get('boundaryGap');\\n\\t                axis.inverse = axisModel.get('inverse');\\n\\n\\t                axis.onZero = axisModel.get('axisLine.onZero');\\n\\n\\t                // Inject axis into axisModel\\n\\t                axisModel.axis = axis;\\n\\n\\t                // Inject axisModel into axis\\n\\t                axis.model = axisModel;\\n\\n\\t                // Inject grid info axis\\n\\t                axis.grid = this;\\n\\n\\t                // Index of axis, can be used as key\\n\\t                axis.index = idx;\\n\\n\\t                this._axesList.push(axis);\\n\\n\\t                axesMap[axisType][idx] = axis;\\n\\t                axesCount[axisType]++;\\n\\t            };\\n\\t        }\\n\\t    };\\n\\n\\t    /**\\n\\t     * Update cartesian properties from series\\n\\t     * @param  {module:echarts/model/Option} option\\n\\t     * @private\\n\\t     */\\n\\t    gridProto._updateScale = function (ecModel, gridModel) {\\n\\t        // Reset scale\\n\\t        zrUtil.each(this._axesList, function (axis) {\\n\\t            axis.scale.setExtent(Infinity, -Infinity);\\n\\t        });\\n\\t        ecModel.eachSeries(function (seriesModel) {\\n\\t            if (isCartesian2D(seriesModel)) {\\n\\t                var axesModels = findAxesModels(seriesModel, ecModel);\\n\\t                var xAxisModel = axesModels[0];\\n\\t                var yAxisModel = axesModels[1];\\n\\n\\t                if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel)\\n\\t                    || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)\\n\\t                 ) {\\n\\t                    return;\\n\\t                }\\n\\n\\t                var cartesian = this.getCartesian(\\n\\t                    xAxisModel.componentIndex, yAxisModel.componentIndex\\n\\t                );\\n\\t                var data = seriesModel.getData();\\n\\t                var xAxis = cartesian.getAxis('x');\\n\\t                var yAxis = cartesian.getAxis('y');\\n\\n\\t                if (data.type === 'list') {\\n\\t                    unionExtent(data, xAxis, seriesModel);\\n\\t                    unionExtent(data, yAxis, seriesModel);\\n\\t                }\\n\\t            }\\n\\t        }, this);\\n\\n\\t        function unionExtent(data, axis, seriesModel) {\\n\\t            each(seriesModel.coordDimToDataDim(axis.dim), function (dim) {\\n\\t                axis.scale.unionExtentFromData(data, dim);\\n\\t            });\\n\\t        }\\n\\t    };\\n\\n\\t    /**\\n\\t     * @param {string} [dim] 'x' or 'y' or 'auto' or null/undefined\\n\\t     * @return {Object} {baseAxes: [], otherAxes: []}\\n\\t     */\\n\\t    gridProto.getTooltipAxes = function (dim) {\\n\\t        var baseAxes = [];\\n\\t        var otherAxes = [];\\n\\n\\t        each(this.getCartesians(), function (cartesian) {\\n\\t            var baseAxis = (dim != null && dim !== 'auto')\\n\\t                ? cartesian.getAxis(dim) : cartesian.getBaseAxis();\\n\\t            var otherAxis = cartesian.getOtherAxis(baseAxis);\\n\\t            zrUtil.indexOf(baseAxes, baseAxis) < 0 && baseAxes.push(baseAxis);\\n\\t            zrUtil.indexOf(otherAxes, otherAxis) < 0 && otherAxes.push(otherAxis);\\n\\t        });\\n\\n\\t        return {baseAxes: baseAxes, otherAxes: otherAxes};\\n\\t    };\\n\\n\\t    /**\\n\\t     * @inner\\n\\t     */\\n\\t    function updateAxisTransfrom(axis, coordBase) {\\n\\t        var axisExtent = axis.getExtent();\\n\\t        var axisExtentSum = axisExtent[0] + axisExtent[1];\\n\\n\\t        // Fast transform\\n\\t        axis.toGlobalCoord = axis.dim === 'x'\\n\\t            ? function (coord) {\\n\\t                return coord + coordBase;\\n\\t            }\\n\\t            : function (coord) {\\n\\t                return axisExtentSum - coord + coordBase;\\n\\t            };\\n\\t        axis.toLocalCoord = axis.dim === 'x'\\n\\t            ? function (coord) {\\n\\t                return coord - coordBase;\\n\\t            }\\n\\t            : function (coord) {\\n\\t                return axisExtentSum - coord + coordBase;\\n\\t            };\\n\\t    }\\n\\n\\t    var axesTypes = ['xAxis', 'yAxis'];\\n\\t    /**\\n\\t     * @inner\\n\\t     */\\n\\t    function findAxesModels(seriesModel, ecModel) {\\n\\t        return zrUtil.map(axesTypes, function (axisType) {\\n\\t            var axisModel = seriesModel.getReferringComponents(axisType)[0];\\n\\n\\t            if (true) {\\n\\t                if (!axisModel) {\\n\\t                    throw new Error(axisType + ' \\\"' + zrUtil.retrieve(\\n\\t                        seriesModel.get(axisType + 'Index'),\\n\\t                        seriesModel.get(axisType + 'Id'),\\n\\t                        0\\n\\t                    ) + '\\\" not found');\\n\\t                }\\n\\t            }\\n\\t            return axisModel;\\n\\t        });\\n\\t    }\\n\\n\\t    /**\\n\\t     * @inner\\n\\t     */\\n\\t    function isCartesian2D(seriesModel) {\\n\\t        return seriesModel.get('coordinateSystem') === 'cartesian2d';\\n\\t    }\\n\\n\\t    Grid.create = function (ecModel, api) {\\n\\t        var grids = [];\\n\\t        ecModel.eachComponent('grid', function (gridModel, idx) {\\n\\t            var grid = new Grid(gridModel, ecModel, api);\\n\\t            grid.name = 'grid_' + idx;\\n\\t            // dataSampling requires axis extent, so resize\\n\\t            // should be performed in create stage.\\n\\t            grid.resize(gridModel, api, true);\\n\\n\\t            gridModel.coordinateSystem = grid;\\n\\n\\t            grids.push(grid);\\n\\t        });\\n\\n\\t        // Inject the coordinateSystems into seriesModel\\n\\t        ecModel.eachSeries(function (seriesModel) {\\n\\t            if (!isCartesian2D(seriesModel)) {\\n\\t                return;\\n\\t            }\\n\\n\\t            var axesModels = findAxesModels(seriesModel, ecModel);\\n\\t            var xAxisModel = axesModels[0];\\n\\t            var yAxisModel = axesModels[1];\\n\\n\\t            var gridModel = xAxisModel.getCoordSysModel();\\n\\n\\t            if (true) {\\n\\t                if (!gridModel) {\\n\\t                    throw new Error(\\n\\t                        'Grid \\\"' + zrUtil.retrieve(\\n\\t                            xAxisModel.get('gridIndex'),\\n\\t                            xAxisModel.get('gridId'),\\n\\t                            0\\n\\t                        ) + '\\\" not found'\\n\\t                    );\\n\\t                }\\n\\t                if (xAxisModel.getCoordSysModel() !== yAxisModel.getCoordSysModel()) {\\n\\t                    throw new Error('xAxis and yAxis must use the same grid');\\n\\t                }\\n\\t            }\\n\\n\\t            var grid = gridModel.coordinateSystem;\\n\\n\\t            seriesModel.coordinateSystem = grid.getCartesian(\\n\\t                xAxisModel.componentIndex, yAxisModel.componentIndex\\n\\t            );\\n\\t        });\\n\\n\\t        return grids;\\n\\t    };\\n\\n\\t    // For deciding which dimensions to use when creating list data\\n\\t    Grid.dimensions = Grid.prototype.dimensions = Cartesian2D.prototype.dimensions;\\n\\n\\t    __webpack_require__(76).register('cartesian2d', Grid);\\n\\n\\t    module.exports = Grid;\\n\\n\\n/***/ },\\n/* 126 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t'use strict';\\n\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var Cartesian = __webpack_require__(127);\\n\\n\\t    function Cartesian2D(name) {\\n\\n\\t        Cartesian.call(this, name);\\n\\t    }\\n\\n\\t    Cartesian2D.prototype = {\\n\\n\\t        constructor: Cartesian2D,\\n\\n\\t        type: 'cartesian2d',\\n\\n\\t        /**\\n\\t         * @type {Array.<string>}\\n\\t         * @readOnly\\n\\t         */\\n\\t        dimensions: ['x', 'y'],\\n\\n\\t        /**\\n\\t         * Base axis will be used on stacking.\\n\\t         *\\n\\t         * @return {module:echarts/coord/cartesian/Axis2D}\\n\\t         */\\n\\t        getBaseAxis: function () {\\n\\t            return this.getAxesByScale('ordinal')[0]\\n\\t                || this.getAxesByScale('time')[0]\\n\\t                || this.getAxis('x');\\n\\t        },\\n\\n\\t        /**\\n\\t         * If contain point\\n\\t         * @param {Array.<number>} point\\n\\t         * @return {boolean}\\n\\t         */\\n\\t        containPoint: function (point) {\\n\\t            var axisX = this.getAxis('x');\\n\\t            var axisY = this.getAxis('y');\\n\\t            return axisX.contain(axisX.toLocalCoord(point[0]))\\n\\t                && axisY.contain(axisY.toLocalCoord(point[1]));\\n\\t        },\\n\\n\\t        /**\\n\\t         * If contain data\\n\\t         * @param {Array.<number>} data\\n\\t         * @return {boolean}\\n\\t         */\\n\\t        containData: function (data) {\\n\\t            return this.getAxis('x').containData(data[0])\\n\\t                && this.getAxis('y').containData(data[1]);\\n\\t        },\\n\\n\\t        /**\\n\\t         * Convert series data to an array of points\\n\\t         * @param {module:echarts/data/List} data\\n\\t         * @param {boolean} stack\\n\\t         * @return {Array}\\n\\t         *  Return array of points. For example:\\n\\t         *  `[[10, 10], [20, 20], [30, 30]]`\\n\\t         */\\n\\t        dataToPoints: function (data, stack) {\\n\\t            return data.mapArray(['x', 'y'], function (x, y) {\\n\\t                return this.dataToPoint([x, y]);\\n\\t            }, stack, this);\\n\\t        },\\n\\n\\t        /**\\n\\t         * @param {Array.<number>} data\\n\\t         * @param {boolean} [clamp=false]\\n\\t         * @return {Array.<number>}\\n\\t         */\\n\\t        dataToPoint: function (data, clamp) {\\n\\t            var xAxis = this.getAxis('x');\\n\\t            var yAxis = this.getAxis('y');\\n\\t            return [\\n\\t                xAxis.toGlobalCoord(xAxis.dataToCoord(data[0], clamp)),\\n\\t                yAxis.toGlobalCoord(yAxis.dataToCoord(data[1], clamp))\\n\\t            ];\\n\\t        },\\n\\n\\t        /**\\n\\t         * @param {Array.<number>} point\\n\\t         * @param {boolean} [clamp=false]\\n\\t         * @return {Array.<number>}\\n\\t         */\\n\\t        pointToData: function (point, clamp) {\\n\\t            var xAxis = this.getAxis('x');\\n\\t            var yAxis = this.getAxis('y');\\n\\t            return [\\n\\t                xAxis.coordToData(xAxis.toLocalCoord(point[0]), clamp),\\n\\t                yAxis.coordToData(yAxis.toLocalCoord(point[1]), clamp)\\n\\t            ];\\n\\t        },\\n\\n\\t        /**\\n\\t         * Get other axis\\n\\t         * @param {module:echarts/coord/cartesian/Axis2D} axis\\n\\t         */\\n\\t        getOtherAxis: function (axis) {\\n\\t            return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\\n\\t        }\\n\\n\\t    };\\n\\n\\t    zrUtil.inherits(Cartesian2D, Cartesian);\\n\\n\\t    module.exports = Cartesian2D;\\n\\n\\n/***/ },\\n/* 127 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t'use strict';\\n\\t/**\\n\\t * Cartesian coordinate system\\n\\t * @module  echarts/coord/Cartesian\\n\\t *\\n\\t */\\n\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\n\\t    function dimAxisMapper(dim) {\\n\\t        return this._axes[dim];\\n\\t    }\\n\\n\\t    /**\\n\\t     * @alias module:echarts/coord/Cartesian\\n\\t     * @constructor\\n\\t     */\\n\\t    var Cartesian = function (name) {\\n\\t        this._axes = {};\\n\\n\\t        this._dimList = [];\\n\\n\\t        /**\\n\\t         * @type {string}\\n\\t         */\\n\\t        this.name = name || '';\\n\\t    };\\n\\n\\t    Cartesian.prototype = {\\n\\n\\t        constructor: Cartesian,\\n\\n\\t        type: 'cartesian',\\n\\n\\t        /**\\n\\t         * Get axis\\n\\t         * @param  {number|string} dim\\n\\t         * @return {module:echarts/coord/Cartesian~Axis}\\n\\t         */\\n\\t        getAxis: function (dim) {\\n\\t            return this._axes[dim];\\n\\t        },\\n\\n\\t        /**\\n\\t         * Get axes list\\n\\t         * @return {Array.<module:echarts/coord/Cartesian~Axis>}\\n\\t         */\\n\\t        getAxes: function () {\\n\\t            return zrUtil.map(this._dimList, dimAxisMapper, this);\\n\\t        },\\n\\n\\t        /**\\n\\t         * Get axes list by given scale type\\n\\t         */\\n\\t        getAxesByScale: function (scaleType) {\\n\\t            scaleType = scaleType.toLowerCase();\\n\\t            return zrUtil.filter(\\n\\t                this.getAxes(),\\n\\t                function (axis) {\\n\\t                    return axis.scale.type === scaleType;\\n\\t                }\\n\\t            );\\n\\t        },\\n\\n\\t        /**\\n\\t         * Add axis\\n\\t         * @param {module:echarts/coord/Cartesian.Axis}\\n\\t         */\\n\\t        addAxis: function (axis) {\\n\\t            var dim = axis.dim;\\n\\n\\t            this._axes[dim] = axis;\\n\\n\\t            this._dimList.push(dim);\\n\\t        },\\n\\n\\t        /**\\n\\t         * Convert data to coord in nd space\\n\\t         * @param {Array.<number>|Object.<string, number>} val\\n\\t         * @return {Array.<number>|Object.<string, number>}\\n\\t         */\\n\\t        dataToCoord: function (val) {\\n\\t            return this._dataCoordConvert(val, 'dataToCoord');\\n\\t        },\\n\\n\\t        /**\\n\\t         * Convert coord in nd space to data\\n\\t         * @param  {Array.<number>|Object.<string, number>} val\\n\\t         * @return {Array.<number>|Object.<string, number>}\\n\\t         */\\n\\t        coordToData: function (val) {\\n\\t            return this._dataCoordConvert(val, 'coordToData');\\n\\t        },\\n\\n\\t        _dataCoordConvert: function (input, method) {\\n\\t            var dimList = this._dimList;\\n\\n\\t            var output = input instanceof Array ? [] : {};\\n\\n\\t            for (var i = 0; i < dimList.length; i++) {\\n\\t                var dim = dimList[i];\\n\\t                var axis = this._axes[dim];\\n\\n\\t                output[dim] = axis[method](input[dim]);\\n\\t            }\\n\\n\\t            return output;\\n\\t        }\\n\\t    };\\n\\n\\t    module.exports = Cartesian;\\n\\n\\n/***/ },\\n/* 128 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var Axis = __webpack_require__(100);\\n\\n\\t    /**\\n\\t     * Extend axis 2d\\n\\t     * @constructor module:echarts/coord/cartesian/Axis2D\\n\\t     * @extends {module:echarts/coord/cartesian/Axis}\\n\\t     * @param {string} dim\\n\\t     * @param {*} scale\\n\\t     * @param {Array.<number>} coordExtent\\n\\t     * @param {string} axisType\\n\\t     * @param {string} position\\n\\t     */\\n\\t    var Axis2D = function (dim, scale, coordExtent, axisType, position) {\\n\\t        Axis.call(this, dim, scale, coordExtent);\\n\\t        /**\\n\\t         * Axis type\\n\\t         *  - 'category'\\n\\t         *  - 'value'\\n\\t         *  - 'time'\\n\\t         *  - 'log'\\n\\t         * @type {string}\\n\\t         */\\n\\t        this.type = axisType || 'value';\\n\\n\\t        /**\\n\\t         * Axis position\\n\\t         *  - 'top'\\n\\t         *  - 'bottom'\\n\\t         *  - 'left'\\n\\t         *  - 'right'\\n\\t         */\\n\\t        this.position = position || 'bottom';\\n\\t    };\\n\\n\\t    Axis2D.prototype = {\\n\\n\\t        constructor: Axis2D,\\n\\n\\t        /**\\n\\t         * Index of axis, can be used as key\\n\\t         */\\n\\t        index: 0,\\n\\t        /**\\n\\t         * If axis is on the zero position of the other axis\\n\\t         * @type {boolean}\\n\\t         */\\n\\t        onZero: false,\\n\\n\\t        /**\\n\\t         * Axis model\\n\\t         * @param {module:echarts/coord/cartesian/AxisModel}\\n\\t         */\\n\\t        model: null,\\n\\n\\t        isHorizontal: function () {\\n\\t            var position = this.position;\\n\\t            return position === 'top' || position === 'bottom';\\n\\t        },\\n\\n\\t        /**\\n\\t         * Each item cooresponds to this.getExtent(), which\\n\\t         * means globalExtent[0] may greater than globalExtent[1],\\n\\t         * unless `asc` is input.\\n\\t         *\\n\\t         * @param {boolean} [asc]\\n\\t         * @return {Array.<number>}\\n\\t         */\\n\\t        getGlobalExtent: function (asc) {\\n\\t            var ret = this.getExtent();\\n\\t            ret[0] = this.toGlobalCoord(ret[0]);\\n\\t            ret[1] = this.toGlobalCoord(ret[1]);\\n\\t            asc && ret[0] > ret[1] && ret.reverse();\\n\\t            return ret;\\n\\t        },\\n\\n\\t        getOtherAxis: function () {\\n\\t            this.grid.getOtherAxis();\\n\\t        },\\n\\n\\t        /**\\n\\t         * If label is ignored.\\n\\t         * Automatically used when axis is category and label can not be all shown\\n\\t         * @param  {number}  idx\\n\\t         * @return {boolean}\\n\\t         */\\n\\t        isLabelIgnored: function (idx) {\\n\\t            if (this.type === 'category') {\\n\\t                var labelInterval = this.getLabelInterval();\\n\\t                return ((typeof labelInterval === 'function')\\n\\t                    && !labelInterval(idx, this.scale.getLabel(idx)))\\n\\t                    || idx % (labelInterval + 1);\\n\\t            }\\n\\t        },\\n\\n\\t        /**\\n\\t         * @override\\n\\t         */\\n\\t        pointToData: function (point, clamp) {\\n\\t            return this.coordToData(this.toLocalCoord(point[this.dim === 'x' ? 0 : 1]), clamp);\\n\\t        },\\n\\n\\t        /**\\n\\t         * Transform global coord to local coord,\\n\\t         * i.e. var localCoord = axis.toLocalCoord(80);\\n\\t         * designate by module:echarts/coord/cartesian/Grid.\\n\\t         * @type {Function}\\n\\t         */\\n\\t        toLocalCoord: null,\\n\\n\\t        /**\\n\\t         * Transform global coord to local coord,\\n\\t         * i.e. var globalCoord = axis.toLocalCoord(40);\\n\\t         * designate by module:echarts/coord/cartesian/Grid.\\n\\t         * @type {Function}\\n\\t         */\\n\\t        toGlobalCoord: null\\n\\n\\t    };\\n\\t    zrUtil.inherits(Axis2D, Axis);\\n\\n\\t    module.exports = Axis2D;\\n\\n\\n/***/ },\\n/* 129 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t'use strict';\\n\\t// Grid 是在有直角坐标系的时候必须要存在的\\n\\t// 所以这里也要被 Cartesian2D 依赖\\n\\n\\n\\t    __webpack_require__(130);\\n\\n\\t    var ComponentModel = __webpack_require__(69);\\n\\n\\t    module.exports = ComponentModel.extend({\\n\\n\\t        type: 'grid',\\n\\n\\t        dependencies: ['xAxis', 'yAxis'],\\n\\n\\t        layoutMode: 'box',\\n\\n\\t        /**\\n\\t         * @type {module:echarts/coord/cartesian/Grid}\\n\\t         */\\n\\t        coordinateSystem: null,\\n\\n\\t        defaultOption: {\\n\\t            show: false,\\n\\t            zlevel: 0,\\n\\t            z: 0,\\n\\t            left: '10%',\\n\\t            top: 60,\\n\\t            right: '10%',\\n\\t            bottom: 60,\\n\\t            // If grid size contain label\\n\\t            containLabel: false,\\n\\t            // width: {totalWidth} - left - right,\\n\\t            // height: {totalHeight} - top - bottom,\\n\\t            backgroundColor: 'rgba(0,0,0,0)',\\n\\t            borderWidth: 1,\\n\\t            borderColor: '#ccc'\\n\\t        }\\n\\t    });\\n\\n\\n/***/ },\\n/* 130 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t'use strict';\\n\\n\\n\\t    var ComponentModel = __webpack_require__(69);\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var axisModelCreator = __webpack_require__(131);\\n\\n\\t    var AxisModel = ComponentModel.extend({\\n\\n\\t        type: 'cartesian2dAxis',\\n\\n\\t        /**\\n\\t         * @type {module:echarts/coord/cartesian/Axis2D}\\n\\t         */\\n\\t        axis: null,\\n\\n\\t        /**\\n\\t         * @override\\n\\t         */\\n\\t        init: function () {\\n\\t            AxisModel.superApply(this, 'init', arguments);\\n\\t            this.resetRange();\\n\\t        },\\n\\n\\t        /**\\n\\t         * @override\\n\\t         */\\n\\t        mergeOption: function () {\\n\\t            AxisModel.superApply(this, 'mergeOption', arguments);\\n\\t            this.resetRange();\\n\\t        },\\n\\n\\t        /**\\n\\t         * @override\\n\\t         */\\n\\t        restoreData: function () {\\n\\t            AxisModel.superApply(this, 'restoreData', arguments);\\n\\t            this.resetRange();\\n\\t        },\\n\\n\\t        /**\\n\\t         * @override\\n\\t         * @return {module:echarts/model/Component}\\n\\t         */\\n\\t        getCoordSysModel: function () {\\n\\t            return this.ecModel.queryComponents({\\n\\t                mainType: 'grid',\\n\\t                index: this.option.gridIndex,\\n\\t                id: this.option.gridId\\n\\t            })[0];\\n\\t        }\\n\\n\\t    });\\n\\n\\t    function getAxisType(axisDim, option) {\\n\\t        // Default axis with data is category axis\\n\\t        return option.type || (option.data ? 'category' : 'value');\\n\\t    }\\n\\n\\t    zrUtil.merge(AxisModel.prototype, __webpack_require__(112));\\n\\n\\t    var extraOption = {\\n\\t        // gridIndex: 0,\\n\\t        // gridId: '',\\n\\n\\t        // Offset is for multiple axis on the same position\\n\\t        offset: 0\\n\\t    };\\n\\n\\t    axisModelCreator('x', AxisModel, getAxisType, extraOption);\\n\\t    axisModelCreator('y', AxisModel, getAxisType, extraOption);\\n\\n\\t    module.exports = AxisModel;\\n\\n\\n/***/ },\\n/* 131 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var axisDefault = __webpack_require__(132);\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var ComponentModel = __webpack_require__(69);\\n\\t    var layout = __webpack_require__(71);\\n\\n\\t    // FIXME axisType is fixed ?\\n\\t    var AXIS_TYPES = ['value', 'category', 'time', 'log'];\\n\\n\\t    /**\\n\\t     * Generate sub axis model class\\n\\t     * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\\n\\t     * @param {module:echarts/model/Component} BaseAxisModelClass\\n\\t     * @param {Function} axisTypeDefaulter\\n\\t     * @param {Object} [extraDefaultOption]\\n\\t     */\\n\\t    module.exports = function (axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\\n\\n\\t        zrUtil.each(AXIS_TYPES, function (axisType) {\\n\\n\\t            BaseAxisModelClass.extend({\\n\\n\\t                type: axisName + 'Axis.' + axisType,\\n\\n\\t                mergeDefaultAndTheme: function (option, ecModel) {\\n\\t                    var layoutMode = this.layoutMode;\\n\\t                    var inputPositionParams = layoutMode\\n\\t                        ? layout.getLayoutParams(option) : {};\\n\\n\\t                    var themeModel = ecModel.getTheme();\\n\\t                    zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\\n\\t                    zrUtil.merge(option, this.getDefaultOption());\\n\\n\\t                    option.type = axisTypeDefaulter(axisName, option);\\n\\n\\t                    if (layoutMode) {\\n\\t                        layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\\n\\t                    }\\n\\t                },\\n\\n\\t                defaultOption: zrUtil.mergeAll(\\n\\t                    [\\n\\t                        {},\\n\\t                        axisDefault[axisType + 'Axis'],\\n\\t                        extraDefaultOption\\n\\t                    ],\\n\\t                    true\\n\\t                )\\n\\t            });\\n\\t        });\\n\\n\\t        ComponentModel.registerSubTypeDefaulter(\\n\\t            axisName + 'Axis',\\n\\t            zrUtil.curry(axisTypeDefaulter, axisName)\\n\\t        );\\n\\t    };\\n\\n\\n/***/ },\\n/* 132 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\n\\t    var defaultOption = {\\n\\t        show: true,\\n\\t        zlevel: 0,                  // 一级层叠\\n\\t        z: 0,                       // 二级层叠\\n\\t        // 反向坐标轴\\n\\t        inverse: false,\\n\\n\\t        // 坐标轴名字，默认为空\\n\\t        name: '',\\n\\t        // 坐标轴名字位置，支持'start' | 'middle' | 'end'\\n\\t        nameLocation: 'end',\\n\\t        // 坐标轴名字旋转，degree。\\n\\t        nameRotate: null, // Adapt to axis rotate, when nameLocation is 'middle'.\\n\\t        nameTruncate: {\\n\\t            maxWidth: null,\\n\\t            ellipsis: '...',\\n\\t            placeholder: '.'\\n\\t        },\\n\\t        // 坐标轴文字样式，默认取全局样式\\n\\t        nameTextStyle: {},\\n\\t        // 文字与轴线距离\\n\\t        nameGap: 15,\\n\\n\\t        silent: false, // Default false to support tooltip.\\n\\t        triggerEvent: false, // Default false to avoid legacy user event listener fail.\\n\\n\\t        tooltip: {\\n\\t            show: false\\n\\t        },\\n\\n\\t        axisPointer: {},\\n\\n\\t        // 坐标轴线\\n\\t        axisLine: {\\n\\t            // 默认显示，属性show控制显示与否\\n\\t            show: true,\\n\\t            onZero: true,\\n\\t            // 属性lineStyle控制线条样式\\n\\t            lineStyle: {\\n\\t                color: '#333',\\n\\t                width: 1,\\n\\t                type: 'solid'\\n\\t            }\\n\\t        },\\n\\t        // 坐标轴小标记\\n\\t        axisTick: {\\n\\t            // 属性show控制显示与否，默认显示\\n\\t            show: true,\\n\\t            // 控制小标记是否在grid里\\n\\t            inside: false,\\n\\t            // 属性length控制线长\\n\\t            length: 5,\\n\\t            // 属性lineStyle控制线条样式\\n\\t            lineStyle: {\\n\\t                width: 1\\n\\t            }\\n\\t        },\\n\\t        // 坐标轴文本标签，详见axis.axisLabel\\n\\t        axisLabel: {\\n\\t            show: true,\\n\\t            // 控制文本标签是否在grid里\\n\\t            inside: false,\\n\\t            rotate: 0,\\n\\t            showMinLabel: null, // true | false | null (auto)\\n\\t            showMaxLabel: null, // true | false | null (auto)\\n\\t            margin: 8,\\n\\t            // formatter: null,\\n\\t            // 其余属性默认使用全局文本样式，详见TEXTSTYLE\\n\\t            textStyle: {\\n\\t                fontSize: 12\\n\\t            }\\n\\t        },\\n\\t        // 分隔线\\n\\t        splitLine: {\\n\\t            // 默认显示，属性show控制显示与否\\n\\t            show: true,\\n\\t            // 属性lineStyle（详见lineStyle）控制线条样式\\n\\t            lineStyle: {\\n\\t                color: ['#ccc'],\\n\\t                width: 1,\\n\\t                type: 'solid'\\n\\t            }\\n\\t        },\\n\\t        // 分隔区域\\n\\t        splitArea: {\\n\\t            // 默认不显示，属性show控制显示与否\\n\\t            show: false,\\n\\t            // 属性areaStyle（详见areaStyle）控制区域样式\\n\\t            areaStyle: {\\n\\t                color: ['rgba(250,250,250,0.3)','rgba(200,200,200,0.3)']\\n\\t            }\\n\\t        }\\n\\t    };\\n\\n\\t    var categoryAxis = zrUtil.merge({\\n\\t        // 类目起始和结束两端空白策略\\n\\t        boundaryGap: true,\\n\\t        // splitArea: {\\n\\t            // show: false\\n\\t        // },\\n\\t        splitLine: {\\n\\t            show: false\\n\\t        },\\n\\t        // 坐标轴小标记\\n\\t        axisTick: {\\n\\t            // If tick is align with label when boundaryGap is true\\n\\t            alignWithLabel: false,\\n\\t            interval: 'auto'\\n\\t        },\\n\\t        // 坐标轴文本标签，详见axis.axisLabel\\n\\t        axisLabel: {\\n\\t            interval: 'auto'\\n\\t        }\\n\\t    }, defaultOption);\\n\\n\\t    var valueAxis = zrUtil.merge({\\n\\t        // 数值起始和结束两端空白策略\\n\\t        boundaryGap: [0, 0],\\n\\t        // 最小值, 设置成 'dataMin' 则从数据中计算最小值\\n\\t        // min: null,\\n\\t        // 最大值，设置成 'dataMax' 则从数据中计算最大值\\n\\t        // max: null,\\n\\t        // Readonly prop, specifies start value of the range when using data zoom.\\n\\t        // rangeStart: null\\n\\t        // Readonly prop, specifies end value of the range when using data zoom.\\n\\t        // rangeEnd: null\\n\\t        // 脱离0值比例，放大聚焦到最终_min，_max区间\\n\\t        // scale: false,\\n\\t        // 分割段数，默认为5\\n\\t        splitNumber: 5\\n\\t        // Minimum interval\\n\\t        // minInterval: null\\n\\t    }, defaultOption);\\n\\n\\t    // FIXME\\n\\t    var timeAxis = zrUtil.defaults({\\n\\t        scale: true,\\n\\t        min: 'dataMin',\\n\\t        max: 'dataMax'\\n\\t    }, valueAxis);\\n\\n\\t    var logAxis = zrUtil.defaults({\\n\\t        scale: true,\\n\\t        logBase: 10\\n\\t    }, valueAxis);\\n\\n\\t    module.exports = {\\n\\t        categoryAxis: categoryAxis,\\n\\t        valueAxis: valueAxis,\\n\\t        timeAxis: timeAxis,\\n\\t        logAxis: logAxis\\n\\t    };\\n\\n\\n/***/ },\\n/* 133 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t'use strict';\\n\\t// TODO boundaryGap\\n\\n\\n\\t    __webpack_require__(130);\\n\\n\\t    __webpack_require__(134);\\n\\n\\n/***/ },\\n/* 134 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var graphic = __webpack_require__(18);\\n\\t    var AxisBuilder = __webpack_require__(135);\\n\\t    var AxisView = __webpack_require__(136);\\n\\t    var cartesianAxisHelper = __webpack_require__(138);\\n\\t    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick;\\n\\t    var getInterval = AxisBuilder.getInterval;\\n\\n\\t    var axisBuilderAttrs = [\\n\\t        'axisLine', 'axisLabel', 'axisTick', 'axisName'\\n\\t    ];\\n\\t    var selfBuilderAttrs = [\\n\\t        'splitArea', 'splitLine'\\n\\t    ];\\n\\n\\t    // function getAlignWithLabel(model, axisModel) {\\n\\t    //     var alignWithLabel = model.get('alignWithLabel');\\n\\t    //     if (alignWithLabel === 'auto') {\\n\\t    //         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\\n\\t    //     }\\n\\t    //     return alignWithLabel;\\n\\t    // }\\n\\n\\t    var CartesianAxisView = AxisView.extend({\\n\\n\\t        type: 'cartesianAxis',\\n\\n\\t        axisPointerClass: 'CartesianAxisPointer',\\n\\n\\t        /**\\n\\t         * @override\\n\\t         */\\n\\t        render: function (axisModel, ecModel, api, payload) {\\n\\n\\t            this.group.removeAll();\\n\\n\\t            var oldAxisGroup = this._axisGroup;\\n\\t            this._axisGroup = new graphic.Group();\\n\\n\\t            this.group.add(this._axisGroup);\\n\\n\\t            if (!axisModel.get('show')) {\\n\\t                return;\\n\\t            }\\n\\n\\t            var gridModel = axisModel.getCoordSysModel();\\n\\n\\t            var layout = cartesianAxisHelper.layout(gridModel, axisModel);\\n\\n\\t            var axisBuilder = new AxisBuilder(axisModel, layout);\\n\\n\\t            zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\\n\\n\\t            this._axisGroup.add(axisBuilder.getGroup());\\n\\n\\t            zrUtil.each(selfBuilderAttrs, function (name) {\\n\\t                if (axisModel.get(name + '.show')) {\\n\\t                    this['_' + name](axisModel, gridModel, layout.labelInterval);\\n\\t                }\\n\\t            }, this);\\n\\n\\t            graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\\n\\n\\t            CartesianAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\\n\\t        },\\n\\n\\t        /**\\n\\t         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\\n\\t         * @param {module:echarts/coord/cartesian/GridModel} gridModel\\n\\t         * @param {number|Function} labelInterval\\n\\t         * @private\\n\\t         */\\n\\t        _splitLine: function (axisModel, gridModel, labelInterval) {\\n\\t            var axis = axisModel.axis;\\n\\n\\t            if (axis.scale.isBlank()) {\\n\\t                return;\\n\\t            }\\n\\n\\t            var splitLineModel = axisModel.getModel('splitLine');\\n\\t            var lineStyleModel = splitLineModel.getModel('lineStyle');\\n\\t            var lineColors = lineStyleModel.get('color');\\n\\n\\t            var lineInterval = getInterval(splitLineModel, labelInterval);\\n\\n\\t            lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\\n\\n\\t            var gridRect = gridModel.coordinateSystem.getRect();\\n\\t            var isHorizontal = axis.isHorizontal();\\n\\n\\t            var lineCount = 0;\\n\\n\\t            var ticksCoords = axis.getTicksCoords(\\n\\t                // splitLineModel.get('alignWithLabel')\\n\\t            );\\n\\t            var ticks = axis.scale.getTicks();\\n\\n\\t            var p1 = [];\\n\\t            var p2 = [];\\n\\t            // Simple optimization\\n\\t            // Batching the lines if color are the same\\n\\t            var lineStyle = lineStyleModel.getLineStyle();\\n\\t            for (var i = 0; i < ticksCoords.length; i++) {\\n\\t                if (ifIgnoreOnTick(axis, i, lineInterval)) {\\n\\t                    continue;\\n\\t                }\\n\\n\\t                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\\n\\n\\t                if (isHorizontal) {\\n\\t                    p1[0] = tickCoord;\\n\\t                    p1[1] = gridRect.y;\\n\\t                    p2[0] = tickCoord;\\n\\t                    p2[1] = gridRect.y + gridRect.height;\\n\\t                }\\n\\t                else {\\n\\t                    p1[0] = gridRect.x;\\n\\t                    p1[1] = tickCoord;\\n\\t                    p2[0] = gridRect.x + gridRect.width;\\n\\t                    p2[1] = tickCoord;\\n\\t                }\\n\\n\\t                var colorIndex = (lineCount++) % lineColors.length;\\n\\t                this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({\\n\\t                    anid: 'line_' + ticks[i],\\n\\n\\t                    shape: {\\n\\t                        x1: p1[0],\\n\\t                        y1: p1[1],\\n\\t                        x2: p2[0],\\n\\t                        y2: p2[1]\\n\\t                    },\\n\\t                    style: zrUtil.defaults({\\n\\t                        stroke: lineColors[colorIndex]\\n\\t                    }, lineStyle),\\n\\t                    silent: true\\n\\t                })));\\n\\t            }\\n\\t        },\\n\\n\\t        /**\\n\\t         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\\n\\t         * @param {module:echarts/coord/cartesian/GridModel} gridModel\\n\\t         * @param {number|Function} labelInterval\\n\\t         * @private\\n\\t         */\\n\\t        _splitArea: function (axisModel, gridModel, labelInterval) {\\n\\t            var axis = axisModel.axis;\\n\\n\\t            if (axis.scale.isBlank()) {\\n\\t                return;\\n\\t            }\\n\\n\\t            var splitAreaModel = axisModel.getModel('splitArea');\\n\\t            var areaStyleModel = splitAreaModel.getModel('areaStyle');\\n\\t            var areaColors = areaStyleModel.get('color');\\n\\n\\t            var gridRect = gridModel.coordinateSystem.getRect();\\n\\n\\t            var ticksCoords = axis.getTicksCoords(\\n\\t                // splitAreaModel.get('alignWithLabel')\\n\\t            );\\n\\t            var ticks = axis.scale.getTicks();\\n\\n\\t            var prevX = axis.toGlobalCoord(ticksCoords[0]);\\n\\t            var prevY = axis.toGlobalCoord(ticksCoords[0]);\\n\\n\\t            var count = 0;\\n\\n\\t            var areaInterval = getInterval(splitAreaModel, labelInterval);\\n\\n\\t            var areaStyle = areaStyleModel.getAreaStyle();\\n\\t            areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\\n\\n\\t            for (var i = 1; i < ticksCoords.length; i++) {\\n\\t                if (ifIgnoreOnTick(axis, i, areaInterval)) {\\n\\t                    continue;\\n\\t                }\\n\\n\\t                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\\n\\n\\t                var x;\\n\\t                var y;\\n\\t                var width;\\n\\t                var height;\\n\\t                if (axis.isHorizontal()) {\\n\\t                    x = prevX;\\n\\t                    y = gridRect.y;\\n\\t                    width = tickCoord - x;\\n\\t                    height = gridRect.height;\\n\\t                }\\n\\t                else {\\n\\t                    x = gridRect.x;\\n\\t                    y = prevY;\\n\\t                    width = gridRect.width;\\n\\t                    height = tickCoord - y;\\n\\t                }\\n\\n\\t                var colorIndex = (count++) % areaColors.length;\\n\\t                this._axisGroup.add(new graphic.Rect({\\n\\t                    anid: 'area_' + ticks[i],\\n\\n\\t                    shape: {\\n\\t                        x: x,\\n\\t                        y: y,\\n\\t                        width: width,\\n\\t                        height: height\\n\\t                    },\\n\\t                    style: zrUtil.defaults({\\n\\t                        fill: areaColors[colorIndex]\\n\\t                    }, areaStyle),\\n\\t                    silent: true\\n\\t                }));\\n\\n\\t                prevX = x + width;\\n\\t                prevY = y + height;\\n\\t            }\\n\\t        }\\n\\t    });\\n\\n\\t    CartesianAxisView.extend({\\n\\t        type: 'xAxis'\\n\\t    });\\n\\t    CartesianAxisView.extend({\\n\\t        type: 'yAxis'\\n\\t    });\\n\\n\\n\\n/***/ },\\n/* 135 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var formatUtil = __webpack_require__(6);\\n\\t    var graphic = __webpack_require__(18);\\n\\t    var Model = __webpack_require__(12);\\n\\t    var numberUtil = __webpack_require__(7);\\n\\t    var remRadian = numberUtil.remRadian;\\n\\t    var isRadianAroundZero = numberUtil.isRadianAroundZero;\\n\\t    var vec2 = __webpack_require__(10);\\n\\t    var matrix = __webpack_require__(11);\\n\\t    var v2ApplyTransform = vec2.applyTransform;\\n\\t    var retrieve = zrUtil.retrieve;\\n\\n\\t    var PI = Math.PI;\\n\\n\\t    function makeAxisEventDataBase(axisModel) {\\n\\t        var eventData = {\\n\\t            componentType: axisModel.mainType\\n\\t        };\\n\\t        eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\\n\\t        return eventData;\\n\\t    }\\n\\n\\t    /**\\n\\t     * A final axis is translated and rotated from a \\\"standard axis\\\".\\n\\t     * So opt.position and opt.rotation is required.\\n\\t     *\\n\\t     * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\\n\\t     * for example: (0, 0) ------------> (0, 50)\\n\\t     *\\n\\t     * nameDirection or tickDirection or labelDirection is 1 means tick\\n\\t     * or label is below the standard axis, whereas is -1 means above\\n\\t     * the standard axis. labelOffset means offset between label and axis,\\n\\t     * which is useful when 'onZero', where axisLabel is in the grid and\\n\\t     * label in outside grid.\\n\\t     *\\n\\t     * Tips: like always,\\n\\t     * positive rotation represents anticlockwise, and negative rotation\\n\\t     * represents clockwise.\\n\\t     * The direction of position coordinate is the same as the direction\\n\\t     * of screen coordinate.\\n\\t     *\\n\\t     * Do not need to consider axis 'inverse', which is auto processed by\\n\\t     * axis extent.\\n\\t     *\\n\\t     * @param {module:zrender/container/Group} group\\n\\t     * @param {Object} axisModel\\n\\t     * @param {Object} opt Standard axis parameters.\\n\\t     * @param {Array.<number>} opt.position [x, y]\\n\\t     * @param {number} opt.rotation by radian\\n\\t     * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle'.\\n\\t     * @param {number} [opt.tickDirection=1] 1 or -1\\n\\t     * @param {number} [opt.labelDirection=1] 1 or -1\\n\\t     * @param {number} [opt.labelOffset=0] Usefull when onZero.\\n\\t     * @param {string} [opt.axisLabelShow] default get from axisModel.\\n\\t     * @param {string} [opt.axisName] default get from axisModel.\\n\\t     * @param {number} [opt.axisNameAvailableWidth]\\n\\t     * @param {number} [opt.labelRotate] by degree, default get from axisModel.\\n\\t     * @param {number} [opt.labelInterval] Default label interval when label\\n\\t     *                                     interval from model is null or 'auto'.\\n\\t     * @param {number} [opt.strokeContainThreshold] Default label interval when label\\n\\t     * @param {number} [opt.nameTruncateMaxWidth]\\n\\t     */\\n\\t    var AxisBuilder = function (axisModel, opt) {\\n\\n\\t        /**\\n\\t         * @readOnly\\n\\t         */\\n\\t        this.opt = opt;\\n\\n\\t        /**\\n\\t         * @readOnly\\n\\t         */\\n\\t        this.axisModel = axisModel;\\n\\n\\t        // Default value\\n\\t        zrUtil.defaults(\\n\\t            opt,\\n\\t            {\\n\\t                labelOffset: 0,\\n\\t                nameDirection: 1,\\n\\t                tickDirection: 1,\\n\\t                labelDirection: 1,\\n\\t                silent: true\\n\\t            }\\n\\t        );\\n\\n\\t        /**\\n\\t         * @readOnly\\n\\t         */\\n\\t        this.group = new graphic.Group();\\n\\n\\t        // FIXME Not use a seperate text group?\\n\\t        var dumbGroup = new graphic.Group({\\n\\t            position: opt.position.slice(),\\n\\t            rotation: opt.rotation\\n\\t        });\\n\\n\\t        // this.group.add(dumbGroup);\\n\\t        // this._dumbGroup = dumbGroup;\\n\\n\\t        dumbGroup.updateTransform();\\n\\t        this._transform = dumbGroup.transform;\\n\\n\\t        this._dumbGroup = dumbGroup;\\n\\t    };\\n\\n\\t    AxisBuilder.prototype = {\\n\\n\\t        constructor: AxisBuilder,\\n\\n\\t        hasBuilder: function (name) {\\n\\t            return !!builders[name];\\n\\t        },\\n\\n\\t        add: function (name) {\\n\\t            builders[name].call(this);\\n\\t        },\\n\\n\\t        getGroup: function () {\\n\\t            return this.group;\\n\\t        }\\n\\n\\t    };\\n\\n\\t    var builders = {\\n\\n\\t        /**\\n\\t         * @private\\n\\t         */\\n\\t        axisLine: function () {\\n\\t            var opt = this.opt;\\n\\t            var axisModel = this.axisModel;\\n\\n\\t            if (!axisModel.get('axisLine.show')) {\\n\\t                return;\\n\\t            }\\n\\n\\t            var extent = this.axisModel.axis.getExtent();\\n\\n\\t            var matrix = this._transform;\\n\\t            var pt1 = [extent[0], 0];\\n\\t            var pt2 = [extent[1], 0];\\n\\t            if (matrix) {\\n\\t                v2ApplyTransform(pt1, pt1, matrix);\\n\\t                v2ApplyTransform(pt2, pt2, matrix);\\n\\t            }\\n\\n\\t            this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\\n\\n\\t                // Id for animation\\n\\t                anid: 'line',\\n\\n\\t                shape: {\\n\\t                    x1: pt1[0],\\n\\t                    y1: pt1[1],\\n\\t                    x2: pt2[0],\\n\\t                    y2: pt2[1]\\n\\t                },\\n\\t                style: zrUtil.extend(\\n\\t                    {lineCap: 'round'},\\n\\t                    axisModel.getModel('axisLine.lineStyle').getLineStyle()\\n\\t                ),\\n\\t                strokeContainThreshold: opt.strokeContainThreshold || 5,\\n\\t                silent: true,\\n\\t                z2: 1\\n\\t            })));\\n\\t        },\\n\\n\\t        /**\\n\\t         * @private\\n\\t         */\\n\\t        axisTick: function () {\\n\\t            var axisModel = this.axisModel;\\n\\t            var axis = axisModel.axis;\\n\\n\\t            if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {\\n\\t                return;\\n\\t            }\\n\\n\\t            var tickModel = axisModel.getModel('axisTick');\\n\\t            var opt = this.opt;\\n\\n\\t            var lineStyleModel = tickModel.getModel('lineStyle');\\n\\t            var tickLen = tickModel.get('length');\\n\\n\\t            var tickInterval = getInterval(tickModel, opt.labelInterval);\\n\\t            var ticksCoords = axis.getTicksCoords(tickModel.get('alignWithLabel'));\\n\\t            var ticks = axis.scale.getTicks();\\n\\n\\t            var pt1 = [];\\n\\t            var pt2 = [];\\n\\t            var matrix = this._transform;\\n\\n\\t            for (var i = 0; i < ticksCoords.length; i++) {\\n\\t                // Only ordinal scale support tick interval\\n\\t                if (ifIgnoreOnTick(axis, i, tickInterval)) {\\n\\t                     continue;\\n\\t                }\\n\\n\\t                var tickCoord = ticksCoords[i];\\n\\n\\t                pt1[0] = tickCoord;\\n\\t                pt1[1] = 0;\\n\\t                pt2[0] = tickCoord;\\n\\t                pt2[1] = opt.tickDirection * tickLen;\\n\\n\\t                if (matrix) {\\n\\t                    v2ApplyTransform(pt1, pt1, matrix);\\n\\t                    v2ApplyTransform(pt2, pt2, matrix);\\n\\t                }\\n\\t                // Tick line, Not use group transform to have better line draw\\n\\t                this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\\n\\n\\t                    // Id for animation\\n\\t                    anid: 'tick_' + ticks[i],\\n\\n\\t                    shape: {\\n\\t                        x1: pt1[0],\\n\\t                        y1: pt1[1],\\n\\t                        x2: pt2[0],\\n\\t                        y2: pt2[1]\\n\\t                    },\\n\\t                    style: zrUtil.defaults(\\n\\t                        lineStyleModel.getLineStyle(),\\n\\t                        {\\n\\t                            stroke: axisModel.get('axisLine.lineStyle.color')\\n\\t                        }\\n\\t                    ),\\n\\t                    z2: 2,\\n\\t                    silent: true\\n\\t                })));\\n\\t            }\\n\\t        },\\n\\n\\t        /**\\n\\t         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\\n\\t         * @param {module:echarts/coord/cartesian/GridModel} gridModel\\n\\t         * @private\\n\\t         */\\n\\t        axisLabel: function () {\\n\\t            var opt = this.opt;\\n\\t            var axisModel = this.axisModel;\\n\\t            var axis = axisModel.axis;\\n\\t            var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\\n\\n\\t            if (!show || axis.scale.isBlank()) {\\n\\t                return;\\n\\t            }\\n\\n\\t            var labelModel = axisModel.getModel('axisLabel');\\n\\t            var textStyleModel = labelModel.getModel('textStyle');\\n\\t            var labelMargin = labelModel.get('margin');\\n\\t            var ticks = axis.scale.getTicks();\\n\\t            var labels = axisModel.getFormattedLabels();\\n\\n\\t            // Special label rotate.\\n\\t            var labelRotation = (\\n\\t                retrieve(opt.labelRotate, labelModel.get('rotate')) || 0\\n\\t            ) * PI / 180;\\n\\n\\t            var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\\n\\t            var categoryData = axisModel.get('data');\\n\\n\\t            var textEls = [];\\n\\t            var silent = isSilent(axisModel);\\n\\t            var triggerEvent = axisModel.get('triggerEvent');\\n\\n\\t            zrUtil.each(ticks, function (tickVal, index) {\\n\\t                if (ifIgnoreOnTick(axis, index, opt.labelInterval)) {\\n\\t                     return;\\n\\t                }\\n\\n\\t                var itemTextStyleModel = textStyleModel;\\n\\t                if (categoryData && categoryData[tickVal] && categoryData[tickVal].textStyle) {\\n\\t                    itemTextStyleModel = new Model(\\n\\t                        categoryData[tickVal].textStyle, textStyleModel, axisModel.ecModel\\n\\t                    );\\n\\t                }\\n\\t                var textColor = itemTextStyleModel.getTextColor()\\n\\t                    || axisModel.get('axisLine.lineStyle.color');\\n\\n\\t                var tickCoord = axis.dataToCoord(tickVal);\\n\\t                var pos = [\\n\\t                    tickCoord,\\n\\t                    opt.labelOffset + opt.labelDirection * labelMargin\\n\\t                ];\\n\\t                var labelStr = axis.scale.getLabel(tickVal);\\n\\n\\t                var textEl = new graphic.Text({\\n\\n\\t                    // Id for animation\\n\\t                    anid: 'label_' + tickVal,\\n\\n\\t                    style: {\\n\\t                        text: labels[index],\\n\\t                        textAlign: itemTextStyleModel.get('align', true) || labelLayout.textAlign,\\n\\t                        textVerticalAlign: itemTextStyleModel.get('baseline', true) || labelLayout.textVerticalAlign,\\n\\t                        textFont: itemTextStyleModel.getFont(),\\n\\t                        fill: typeof textColor === 'function'\\n\\t                            ? textColor(\\n\\t                                // (1) In category axis with data zoom, tick is not the original\\n\\t                                // index of axis.data. So tick should not be exposed to user\\n\\t                                // in category axis.\\n\\t                                // (2) Compatible with previous version, which always returns labelStr.\\n\\t                                // But in interval scale labelStr is like '223,445', which maked\\n\\t                                // user repalce ','. So we modify it to return original val but remain\\n\\t                                // it as 'string' to avoid error in replacing.\\n\\t                                axis.type === 'category' ? labelStr : axis.type === 'value' ? tickVal + '' : tickVal,\\n\\t                                index\\n\\t                            )\\n\\t                            : textColor\\n\\t                    },\\n\\t                    position: pos,\\n\\t                    rotation: labelLayout.rotation,\\n\\t                    silent: silent,\\n\\t                    z2: 10\\n\\t                });\\n\\n\\t                // Pack data for mouse event\\n\\t                if (triggerEvent) {\\n\\t                    textEl.eventData = makeAxisEventDataBase(axisModel);\\n\\t                    textEl.eventData.targetType = 'axisLabel';\\n\\t                    textEl.eventData.value = labelStr;\\n\\t                }\\n\\n\\t                // FIXME\\n\\t                this._dumbGroup.add(textEl);\\n\\t                textEl.updateTransform();\\n\\n\\t                textEls.push(textEl);\\n\\t                this.group.add(textEl);\\n\\n\\t                textEl.decomposeTransform();\\n\\n\\t            }, this);\\n\\n\\t            fixMinMaxLabelShow(axisModel, textEls);\\n\\t        },\\n\\n\\t        /**\\n\\t         * @private\\n\\t         */\\n\\t        axisName: function () {\\n\\t            var opt = this.opt;\\n\\t            var axisModel = this.axisModel;\\n\\t            var name = retrieve(opt.axisName, axisModel.get('name'));\\n\\n\\t            if (!name) {\\n\\t                return;\\n\\t            }\\n\\n\\t            var nameLocation = axisModel.get('nameLocation');\\n\\t            var nameDirection = opt.nameDirection;\\n\\t            var textStyleModel = axisModel.getModel('nameTextStyle');\\n\\t            var gap = axisModel.get('nameGap') || 0;\\n\\n\\t            var extent = this.axisModel.axis.getExtent();\\n\\t            var gapSignal = extent[0] > extent[1] ? -1 : 1;\\n\\t            var pos = [\\n\\t                nameLocation === 'start'\\n\\t                    ? extent[0] - gapSignal * gap\\n\\t                    : nameLocation === 'end'\\n\\t                    ? extent[1] + gapSignal * gap\\n\\t                    : (extent[0] + extent[1]) / 2, // 'middle'\\n\\t                // Reuse labelOffset.\\n\\t                nameLocation === 'middle' ? opt.labelOffset + nameDirection * gap : 0\\n\\t            ];\\n\\n\\t            var labelLayout;\\n\\n\\t            var nameRotation = axisModel.get('nameRotate');\\n\\t            if (nameRotation != null) {\\n\\t                nameRotation = nameRotation * PI / 180; // To radian.\\n\\t            }\\n\\n\\t            var axisNameAvailableWidth;\\n\\n\\t            if (nameLocation === 'middle') {\\n\\t                labelLayout = innerTextLayout(\\n\\t                    opt.rotation,\\n\\t                    nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\\n\\t                    nameDirection\\n\\t                );\\n\\t            }\\n\\t            else {\\n\\t                labelLayout = endTextLayout(\\n\\t                    opt, nameLocation, nameRotation || 0, extent\\n\\t                );\\n\\n\\t                axisNameAvailableWidth = opt.axisNameAvailableWidth;\\n\\t                if (axisNameAvailableWidth != null) {\\n\\t                    axisNameAvailableWidth = Math.abs(\\n\\t                        axisNameAvailableWidth / Math.sin(labelLayout.rotation)\\n\\t                    );\\n\\t                    !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\\n\\t                }\\n\\t            }\\n\\n\\t            var textFont = textStyleModel.getFont();\\n\\n\\t            var truncateOpt = axisModel.get('nameTruncate', true) || {};\\n\\t            var ellipsis = truncateOpt.ellipsis;\\n\\t            var maxWidth = retrieve(\\n\\t                opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth\\n\\t            );\\n\\t            var truncatedText = (ellipsis != null && maxWidth != null)\\n\\t                ? formatUtil.truncateText(\\n\\t                    name, maxWidth, textFont, ellipsis,\\n\\t                    {minChar: 2, placeholder: truncateOpt.placeholder}\\n\\t                )\\n\\t                : name;\\n\\n\\t            var tooltipOpt = axisModel.get('tooltip', true);\\n\\n\\t            var mainType = axisModel.mainType;\\n\\t            var formatterParams = {\\n\\t                componentType: mainType,\\n\\t                name: name,\\n\\t                $vars: ['name']\\n\\t            };\\n\\t            formatterParams[mainType + 'Index'] = axisModel.componentIndex;\\n\\n\\t            var textEl = new graphic.Text({\\n\\n\\t                // Id for animation\\n\\t                anid: 'name',\\n\\n\\t                __fullText: name,\\n\\t                __truncatedText: truncatedText,\\n\\n\\t                style: {\\n\\t                    text: truncatedText,\\n\\t                    textFont: textFont,\\n\\t                    fill: textStyleModel.getTextColor()\\n\\t                        || axisModel.get('axisLine.lineStyle.color'),\\n\\t                    textAlign: labelLayout.textAlign,\\n\\t                    textVerticalAlign: labelLayout.textVerticalAlign\\n\\t                },\\n\\t                position: pos,\\n\\t                rotation: labelLayout.rotation,\\n\\t                silent: isSilent(axisModel),\\n\\t                z2: 1,\\n\\t                tooltip: (tooltipOpt && tooltipOpt.show)\\n\\t                    ? zrUtil.extend({\\n\\t                        content: name,\\n\\t                        formatter: function () {\\n\\t                            return name;\\n\\t                        },\\n\\t                        formatterParams: formatterParams\\n\\t                    }, tooltipOpt)\\n\\t                    : null\\n\\t            });\\n\\n\\t            if (axisModel.get('triggerEvent')) {\\n\\t                textEl.eventData = makeAxisEventDataBase(axisModel);\\n\\t                textEl.eventData.targetType = 'axisName';\\n\\t                textEl.eventData.name = name;\\n\\t            }\\n\\n\\t            // FIXME\\n\\t            this._dumbGroup.add(textEl);\\n\\t            textEl.updateTransform();\\n\\n\\t            this.group.add(textEl);\\n\\n\\t            textEl.decomposeTransform();\\n\\t        }\\n\\n\\t    };\\n\\n\\t    /**\\n\\t     * @public\\n\\t     * @static\\n\\t     * @param {Object} opt\\n\\t     * @param {number} axisRotation in radian\\n\\t     * @param {number} textRotation in radian\\n\\t     * @param {number} direction\\n\\t     * @return {Object} {\\n\\t     *  rotation, // according to axis\\n\\t     *  textAlign,\\n\\t     *  textVerticalAlign\\n\\t     * }\\n\\t     */\\n\\t    var innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\\n\\t        var rotationDiff = remRadian(textRotation - axisRotation);\\n\\t        var textAlign;\\n\\t        var textVerticalAlign;\\n\\n\\t        if (isRadianAroundZero(rotationDiff)) { // Label is parallel with axis line.\\n\\t            textVerticalAlign = direction > 0 ? 'top' : 'bottom';\\n\\t            textAlign = 'center';\\n\\t        }\\n\\t        else if (isRadianAroundZero(rotationDiff - PI)) { // Label is inverse parallel with axis line.\\n\\t            textVerticalAlign = direction > 0 ? 'bottom' : 'top';\\n\\t            textAlign = 'center';\\n\\t        }\\n\\t        else {\\n\\t            textVerticalAlign = 'middle';\\n\\n\\t            if (rotationDiff > 0 && rotationDiff < PI) {\\n\\t                textAlign = direction > 0 ? 'right' : 'left';\\n\\t            }\\n\\t            else {\\n\\t                textAlign = direction > 0 ? 'left' : 'right';\\n\\t            }\\n\\t        }\\n\\n\\t        return {\\n\\t            rotation: rotationDiff,\\n\\t            textAlign: textAlign,\\n\\t            textVerticalAlign: textVerticalAlign\\n\\t        };\\n\\t    };\\n\\n\\t    function endTextLayout(opt, textPosition, textRotate, extent) {\\n\\t        var rotationDiff = remRadian(textRotate - opt.rotation);\\n\\t        var textAlign;\\n\\t        var textVerticalAlign;\\n\\t        var inverse = extent[0] > extent[1];\\n\\t        var onLeft = (textPosition === 'start' && !inverse)\\n\\t            || (textPosition !== 'start' && inverse);\\n\\n\\t        if (isRadianAroundZero(rotationDiff - PI / 2)) {\\n\\t            textVerticalAlign = onLeft ? 'bottom' : 'top';\\n\\t            textAlign = 'center';\\n\\t        }\\n\\t        else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\\n\\t            textVerticalAlign = onLeft ? 'top' : 'bottom';\\n\\t            textAlign = 'center';\\n\\t        }\\n\\t        else {\\n\\t            textVerticalAlign = 'middle';\\n\\t            if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\\n\\t                textAlign = onLeft ? 'left' : 'right';\\n\\t            }\\n\\t            else {\\n\\t                textAlign = onLeft ? 'right' : 'left';\\n\\t            }\\n\\t        }\\n\\n\\t        return {\\n\\t            rotation: rotationDiff,\\n\\t            textAlign: textAlign,\\n\\t            textVerticalAlign: textVerticalAlign\\n\\t        };\\n\\t    }\\n\\n\\t    function isSilent(axisModel) {\\n\\t        var tooltipOpt = axisModel.get('tooltip');\\n\\t        return axisModel.get('silent')\\n\\t            // Consider mouse cursor, add these restrictions.\\n\\t            || !(\\n\\t                axisModel.get('triggerEvent') || (tooltipOpt && tooltipOpt.show)\\n\\t            );\\n\\t    }\\n\\n\\t    function fixMinMaxLabelShow(axisModel, textEls) {\\n\\t        // If min or max are user set, we need to check\\n\\t        // If the tick on min(max) are overlap on their neighbour tick\\n\\t        // If they are overlapped, we need to hide the min(max) tick label\\n\\t        var showMinLabel = axisModel.get('axisLabel.showMinLabel');\\n\\t        var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\\n\\t        var firstLabel = textEls[0];\\n\\t        var nextLabel = textEls[1];\\n\\t        var lastLabel = textEls[textEls.length - 1];\\n\\t        var prevLabel = textEls[textEls.length - 2];\\n\\n\\t        if (showMinLabel === false) {\\n\\t            firstLabel.ignore = true;\\n\\t        }\\n\\t        else if (axisModel.getMin() != null && isTwoLabelOverlapped(firstLabel, nextLabel)) {\\n\\t            showMinLabel ? (nextLabel.ignore = true) : (firstLabel.ignore = true);\\n\\t        }\\n\\n\\t        if (showMaxLabel === false) {\\n\\t            lastLabel.ignore = true;\\n\\t        }\\n\\t        else if (axisModel.getMax() != null && isTwoLabelOverlapped(prevLabel, lastLabel)) {\\n\\t            showMaxLabel ? (prevLabel.ignore = true) : (lastLabel.ignore = true);\\n\\t        }\\n\\t    }\\n\\n\\t    function isTwoLabelOverlapped(current, next, labelLayout) {\\n\\t        // current and next has the same rotation.\\n\\t        var firstRect = current && current.getBoundingRect().clone();\\n\\t        var nextRect = next && next.getBoundingRect().clone();\\n\\n\\t        if (!firstRect || !nextRect) {\\n\\t            return;\\n\\t        }\\n\\n\\t        // When checking intersect of two rotated labels, we use mRotationBack\\n\\t        // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\\n\\t        var mRotationBack = matrix.identity([]);\\n\\t        matrix.rotate(mRotationBack, mRotationBack, -current.rotation);\\n\\n\\t        firstRect.applyTransform(matrix.mul([], mRotationBack, current.getLocalTransform()));\\n\\t        nextRect.applyTransform(matrix.mul([], mRotationBack, next.getLocalTransform()));\\n\\n\\t        return firstRect.intersect(nextRect);\\n\\t    }\\n\\n\\n\\t    /**\\n\\t     * @static\\n\\t     */\\n\\t    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick = function (axis, i, interval) {\\n\\t        var rawTick;\\n\\t        var scale = axis.scale;\\n\\t        return scale.type === 'ordinal'\\n\\t            && (\\n\\t                typeof interval === 'function'\\n\\t                    ? (\\n\\t                        rawTick = scale.getTicks()[i],\\n\\t                        !interval(rawTick, scale.getLabel(rawTick))\\n\\t                    )\\n\\t                    : i % (interval + 1)\\n\\t            );\\n\\t    };\\n\\n\\t    /**\\n\\t     * @static\\n\\t     */\\n\\t    var getInterval = AxisBuilder.getInterval = function (model, labelInterval) {\\n\\t        var interval = model.get('interval');\\n\\t        if (interval == null || interval == 'auto') {\\n\\t            interval = labelInterval;\\n\\t        }\\n\\t        return interval;\\n\\t    };\\n\\n\\t    module.exports = AxisBuilder;\\n\\n\\n\\n/***/ },\\n/* 136 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var axisPointerModelHelper = __webpack_require__(137);\\n\\n\\t    /**\\n\\t     * Base class of AxisView.\\n\\t     */\\n\\t    var AxisView = __webpack_require__(1).extendComponentView({\\n\\n\\t        type: 'axis',\\n\\n\\t        /**\\n\\t         * @private\\n\\t         */\\n\\t        _axisPointer: null,\\n\\n\\t        /**\\n\\t         * @protected\\n\\t         * @type {string}\\n\\t         */\\n\\t        axisPointerClass: null,\\n\\n\\t        /**\\n\\t         * @override\\n\\t         */\\n\\t        render: function (axisModel, ecModel, api, payload) {\\n\\t            // FIXME\\n\\t            // This process should proformed after coordinate systems updated\\n\\t            // (axis scale updated), and should be performed each time update.\\n\\t            // So put it here temporarily, although it is not appropriate to\\n\\t            // put a model-writing procedure in `view`.\\n\\t            this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\\n\\n\\t            AxisView.superApply(this, 'render', arguments);\\n\\n\\t            updateAxisPointer(this, axisModel, ecModel, api, payload, true);\\n\\t        },\\n\\n\\t        /**\\n\\t         * Action handler.\\n\\t         * @public\\n\\t         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\\n\\t         * @param {module:echarts/model/Global} ecModel\\n\\t         * @param {module:echarts/ExtensionAPI} api\\n\\t         * @param {Object} payload\\n\\t         */\\n\\t        updateAxisPointer: function (axisModel, ecModel, api, payload, force) {\\n\\t            updateAxisPointer(this, axisModel, ecModel, api, payload, false);\\n\\t        },\\n\\n\\t        /**\\n\\t         * @override\\n\\t         */\\n\\t        remove: function (ecModel, api) {\\n\\t            var axisPointer = this._axisPointer;\\n\\t            axisPointer && axisPointer.remove(api);\\n\\t            AxisView.superApply(this, 'remove', arguments);\\n\\t        },\\n\\n\\t        /**\\n\\t         * @override\\n\\t         */\\n\\t        dispose: function (ecModel, api) {\\n\\t            disposeAxisPointer(this, api);\\n\\t            AxisView.superApply(this, 'dispose', arguments);\\n\\t        }\\n\\n\\t    });\\n\\n\\t    function updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\\n\\t        var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\\n\\t        if (!Clazz) {\\n\\t            return;\\n\\t        }\\n\\t        var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\\n\\t        axisPointerModel\\n\\t            ? (axisView._axisPointer || (axisView._axisPointer = new Clazz()))\\n\\t                .render(axisModel, axisPointerModel, api, forceRender)\\n\\t            : disposeAxisPointer(axisView, api);\\n\\t    }\\n\\n\\t    function disposeAxisPointer(axisView, ecModel, api) {\\n\\t        var axisPointer = axisView._axisPointer;\\n\\t        axisPointer && axisPointer.dispose(ecModel, api);\\n\\t        axisView._axisPointer = null;\\n\\t    }\\n\\n\\t    var axisPointerClazz = [];\\n\\n\\t    AxisView.registerAxisPointerClass = function (type, clazz) {\\n\\t        if (true) {\\n\\t            if (axisPointerClazz[type]) {\\n\\t                throw new Error('axisPointer ' + type + ' exists');\\n\\t            }\\n\\t        }\\n\\t        axisPointerClazz[type] = clazz;\\n\\t    };\\n\\n\\t    AxisView.getAxisPointerClass = function (type) {\\n\\t        return type && axisPointerClazz[type];\\n\\t    };\\n\\n\\t    module.exports = AxisView;\\n\\n\\n/***/ },\\n/* 137 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var Model = __webpack_require__(12);\\n\\t    var each = zrUtil.each;\\n\\t    var curry = zrUtil.curry;\\n\\n\\t    var helper = {};\\n\\n\\t    // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\\n\\t    // allAxesInfo should be updated when setOption performed.\\n\\t    helper.collect = function (ecModel, api) {\\n\\t        var result = {\\n\\t            /**\\n\\t             * key: makeKey(axis.model)\\n\\t             * value: {\\n\\t             *      axis,\\n\\t             *      coordSys,\\n\\t             *      axisPointerModel,\\n\\t             *      triggerTooltip,\\n\\t             *      involveSeries,\\n\\t             *      snap,\\n\\t             *      seriesModels,\\n\\t             *      seriesDataCount\\n\\t             * }\\n\\t             */\\n\\t            axesInfo: {},\\n\\t            seriesInvolved: false,\\n\\t            /**\\n\\t             * key: makeKey(coordSys.model)\\n\\t             * value: Object: key makeKey(axis.model), value: axisInfo\\n\\t             */\\n\\t            coordSysAxesInfo: {},\\n\\t            coordSysMap: {}\\n\\t        };\\n\\n\\t        collectAxesInfo(result, ecModel, api);\\n\\n\\t        // Check seriesInvolved for performance, in case too many series in some chart.\\n\\t        result.seriesInvolved && collectSeriesInfo(result, ecModel);\\n\\n\\t        return result;\\n\\t    };\\n\\n\\t    function collectAxesInfo(result, ecModel, api) {\\n\\t        var globalTooltipModel = ecModel.getComponent('tooltip');\\n\\t        var globalAxisPointerModel = ecModel.getComponent('axisPointer');\\n\\t        // links can only be set on global.\\n\\t        var linksOption = globalAxisPointerModel.get('link', true) || [];\\n\\t        var linkGroups = [];\\n\\n\\t        // Collect axes info.\\n\\t        each(api.getCoordinateSystems(), function (coordSys) {\\n\\t            // Some coordinate system do not support axes, like geo.\\n\\t            if (!coordSys.axisPointerEnabled) {\\n\\t                return;\\n\\t            }\\n\\n\\t            var coordSysKey = makeKey(coordSys.model);\\n\\t            var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\\n\\t            result.coordSysMap[coordSysKey] = coordSys;\\n\\n\\t            // Set tooltip (like 'cross') is a convienent way to show axisPointer\\n\\t            // for user. So we enable seting tooltip on coordSys model.\\n\\t            var coordSysModel = coordSys.model;\\n\\t            var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\\n\\n\\t            each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null));\\n\\n\\t            // If axis tooltip used, choose tooltip axis for each coordSys.\\n\\t            // Notice this case: coordSys is `grid` but not `cartesian2D` here.\\n\\t            if (coordSys.getTooltipAxes\\n\\t                && globalTooltipModel\\n\\t                // If tooltip.showContent is set as false, tooltip will not\\n\\t                // show but axisPointer will show as normal.\\n\\t                && baseTooltipModel.get('show')\\n\\t            ) {\\n\\t                // Compatible with previous logic. But series.tooltip.trigger: 'axis'\\n\\t                // or series.data[n].tooltip.trigger: 'axis' are not support any more.\\n\\t                var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\\n\\t                var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\\n\\t                var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\\n\\t                if (triggerAxis || cross) {\\n\\t                    each(tooltipAxes.baseAxes, curry(\\n\\t                        saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis\\n\\t                    ));\\n\\t                }\\n\\t                if (cross) {\\n\\t                    each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\\n\\t                }\\n\\t            }\\n\\n\\t            // fromTooltip: true | false | 'cross'\\n\\t            // triggerTooltip: true | false | null\\n\\t            function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\\n\\t                var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\\n\\n\\t                var axisPointerShow = axisPointerModel.get('show');\\n\\t                if (!axisPointerShow || (\\n\\t                    axisPointerShow === 'auto'\\n\\t                    && !fromTooltip\\n\\t                    && !isHandleTrigger(axisPointerModel)\\n\\t                )) {\\n\\t                    return;\\n\\t                }\\n\\n\\t                if (triggerTooltip == null) {\\n\\t                    triggerTooltip = axisPointerModel.get('triggerTooltip');\\n\\t                }\\n\\n\\t                axisPointerModel = fromTooltip\\n\\t                    ? makeAxisPointerModel(\\n\\t                        axis, baseTooltipModel, globalAxisPointerModel, ecModel,\\n\\t                        fromTooltip, triggerTooltip\\n\\t                    )\\n\\t                    : axisPointerModel;\\n\\n\\t                var snap = axisPointerModel.get('snap');\\n\\t                var key = makeKey(axis.model);\\n\\t                var involveSeries = triggerTooltip || snap || axis.type === 'category';\\n\\n\\t                // If result.axesInfo[key] exist, override it (tooltip has higher priority).\\n\\t                var axisInfo = result.axesInfo[key] = {\\n\\t                    key: key,\\n\\t                    axis: axis,\\n\\t                    coordSys: coordSys,\\n\\t                    axisPointerModel: axisPointerModel,\\n\\t                    triggerTooltip: triggerTooltip,\\n\\t                    involveSeries: involveSeries,\\n\\t                    snap: snap,\\n\\t                    useHandle: isHandleTrigger(axisPointerModel),\\n\\t                    seriesModels: []\\n\\t                };\\n\\t                axesInfoInCoordSys[key] = axisInfo;\\n\\t                result.seriesInvolved |= involveSeries;\\n\\n\\t                var groupIndex = getLinkGroupIndex(linksOption, axis);\\n\\t                if (groupIndex != null) {\\n\\t                    var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {axesInfo: {}});\\n\\t                    linkGroup.axesInfo[key] = axisInfo;\\n\\t                    linkGroup.mapper = linksOption[groupIndex].mapper;\\n\\t                    axisInfo.linkGroup = linkGroup;\\n\\t                }\\n\\t            }\\n\\t        });\\n\\t    }\\n\\n\\t    function makeAxisPointerModel(\\n\\t        axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip\\n\\t    ) {\\n\\t        var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\\n\\t        var volatileOption = {};\\n\\n\\t        each(\\n\\t            [\\n\\t                'type', 'snap', 'lineStyle', 'shadowStyle', 'label',\\n\\t                'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'\\n\\t            ],\\n\\t            function (field) {\\n\\t                volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\\n\\t            }\\n\\t        );\\n\\n\\t        // category axis do not auto snap, otherwise some tick that do not\\n\\t        // has value can not be hovered. value/time/log axis default snap if\\n\\t        // triggered from tooltip and trigger tooltip.\\n\\t        volatileOption.snap = axis.type !== 'category' && !!triggerTooltip;\\n\\n\\t        // Compatibel with previous behavior, tooltip axis do not show label by default.\\n\\t        // Only these properties can be overrided from tooltip to axisPointer.\\n\\t        if (tooltipAxisPointerModel.get('type') === 'cross') {\\n\\t            volatileOption.type = 'line';\\n\\t        }\\n\\t        var labelOption = volatileOption.label || (volatileOption.label = {});\\n\\t        // Follow the convention, do not show label when triggered by tooltip by default.\\n\\t        labelOption.show == null && (labelOption.show = false);\\n\\n\\t        if (fromTooltip === 'cross') {\\n\\t            // When 'cross', both axes show labels.\\n\\t            labelOption.show = true;\\n\\t            // If triggerTooltip, this is a base axis, which should better not use cross style\\n\\t            // (cross style is dashed by default)\\n\\t            if (!triggerTooltip) {\\n\\t                var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\\n\\t                crossStyle && zrUtil.defaults(\\n\\t                    labelOption.textStyle || (labelOption.textStyle = {}),\\n\\t                    crossStyle.textStyle\\n\\t                );\\n\\t            }\\n\\t        }\\n\\n\\t        return axis.model.getModel(\\n\\t            'axisPointer',\\n\\t            new Model(volatileOption, globalAxisPointerModel, ecModel)\\n\\t        );\\n\\t    }\\n\\n\\t    function collectSeriesInfo(result, ecModel) {\\n\\t        // Prepare data for axis trigger\\n\\t        ecModel.eachSeries(function (seriesModel) {\\n\\n\\t            // Notice this case: this coordSys is `cartesian2D` but not `grid`.\\n\\t            var coordSys = seriesModel.coordinateSystem;\\n\\t            var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\\n\\t            var seriesTooltipShow = seriesModel.get('tooltip.show', true);\\n\\t            if (!coordSys\\n\\t                || seriesTooltipTrigger === 'none'\\n\\t                || seriesTooltipTrigger === false\\n\\t                || seriesTooltipTrigger === 'item'\\n\\t                || seriesTooltipShow === false\\n\\t                || seriesModel.get('axisPointer.show', true) === false\\n\\t            ) {\\n\\t                return;\\n\\t            }\\n\\n\\t            each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\\n\\t                var axis = axisInfo.axis;\\n\\t                if (coordSys.getAxis(axis.dim) === axis) {\\n\\t                    axisInfo.seriesModels.push(seriesModel);\\n\\t                    axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\\n\\t                    axisInfo.seriesDataCount += seriesModel.getData().count();\\n\\t                }\\n\\t            });\\n\\n\\t        }, this);\\n\\t    }\\n\\n\\t    /**\\n\\t     * For example:\\n\\t     * {\\n\\t     *     axisPointer: {\\n\\t     *         links: [{\\n\\t     *             xAxisIndex: [2, 4],\\n\\t     *             yAxisIndex: 'all'\\n\\t     *         }, {\\n\\t     *             xAxisId: ['a5', 'a7'],\\n\\t     *             xAxisName: 'xxx'\\n\\t     *         }]\\n\\t     *     }\\n\\t     * }\\n\\t     */\\n\\t    function getLinkGroupIndex(linksOption, axis) {\\n\\t        var axisModel = axis.model;\\n\\t        var dim = axis.dim;\\n\\t        for (var i = 0; i < linksOption.length; i++) {\\n\\t            var linkOption = linksOption[i] || {};\\n\\t            if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id)\\n\\t                || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex)\\n\\t                || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)\\n\\t            ) {\\n\\t                return i;\\n\\t            }\\n\\t        }\\n\\t    }\\n\\n\\t    function checkPropInLink(linkPropValue, axisPropValue) {\\n\\t        return linkPropValue === 'all'\\n\\t            || (zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0)\\n\\t            || linkPropValue === axisPropValue;\\n\\t    }\\n\\n\\t    helper.fixValue = function (axisModel) {\\n\\t        var axisInfo = helper.getAxisInfo(axisModel);\\n\\t        if (!axisInfo) {\\n\\t            return;\\n\\t        }\\n\\n\\t        var axisPointerModel = axisInfo.axisPointerModel;\\n\\t        var scale = axisInfo.axis.scale;\\n\\t        var option = axisPointerModel.option;\\n\\t        var status = axisPointerModel.get('status');\\n\\t        var value = axisPointerModel.get('value');\\n\\n\\t        // Parse init value for category and time axis.\\n\\t        if (value != null) {\\n\\t            value = scale.parse(value);\\n\\t        }\\n\\n\\t        var useHandle = isHandleTrigger(axisPointerModel);\\n\\t        // If `handle` used, `axisPointer` will always be displayed, so value\\n\\t        // and status should be initialized.\\n\\t        if (status == null) {\\n\\t            option.status = useHandle ? 'show' : 'hide';\\n\\t        }\\n\\n\\t        var extent = scale.getExtent().slice();\\n\\t        extent[0] > extent[1] && extent.reverse();\\n\\n\\t        if (// Pick a value on axis when initializing.\\n\\t            value == null\\n\\t            // If both `handle` and `dataZoom` are used, value may be out of axis extent,\\n\\t            // where we should re-pick a value to keep `handle` displaying normally.\\n\\t            || value > extent[1]\\n\\t        ) {\\n\\t            // Make handle displayed on the end of the axis when init, which looks better.\\n\\t            value = extent[1];\\n\\t        }\\n\\t        if (value < extent[0]) {\\n\\t            value = extent[0];\\n\\t        }\\n\\n\\t        option.value = value;\\n\\n\\t        if (useHandle) {\\n\\t            option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\\n\\t        }\\n\\t    };\\n\\n\\t    helper.getAxisInfo = function (axisModel) {\\n\\t        var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\\n\\t        return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\\n\\t    };\\n\\n\\t    helper.getAxisPointerModel = function (axisModel) {\\n\\t        var axisInfo = helper.getAxisInfo(axisModel);\\n\\t        return axisInfo && axisInfo.axisPointerModel;\\n\\t    };\\n\\n\\t    function isHandleTrigger(axisPointerModel) {\\n\\t        return !!axisPointerModel.get('handle.show');\\n\\t    }\\n\\n\\t    /**\\n\\t     * @param {module:echarts/model/Model} model\\n\\t     * @return {string} unique key\\n\\t     */\\n\\t    var makeKey = helper.makeKey = function (model) {\\n\\t        return model.type + '||' + model.id;\\n\\t    };\\n\\n\\t    module.exports = helper;\\n\\n\\n\\n/***/ },\\n/* 138 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\n\\t    var helper = {};\\n\\n\\t    /**\\n\\t     * @param {Object} opt {labelInside}\\n\\t     * @return {Object} {\\n\\t     *  position, rotation, labelDirection, labelOffset,\\n\\t     *  tickDirection, labelRotate, labelInterval, z2\\n\\t     * }\\n\\t     */\\n\\t    helper.layout = function (gridModel, axisModel, opt) {\\n\\t        opt = opt || {};\\n\\t        var grid = gridModel.coordinateSystem;\\n\\t        var axis = axisModel.axis;\\n\\t        var layout = {};\\n\\n\\t        var rawAxisPosition = axis.position;\\n\\t        var axisPosition = axis.onZero ? 'onZero' : rawAxisPosition;\\n\\t        var axisDim = axis.dim;\\n\\n\\t        // [left, right, top, bottom]\\n\\t        var rect = grid.getRect();\\n\\t        var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\\n\\n\\t        var axisOffset = axisModel.get('offset') || 0;\\n\\n\\t        var posMap = {\\n\\t            x: { top: rectBound[2] - axisOffset, bottom: rectBound[3] + axisOffset },\\n\\t            y: { left: rectBound[0] - axisOffset, right: rectBound[1] + axisOffset }\\n\\t        };\\n\\n\\t        posMap.x.onZero = Math.max(Math.min(getZero('y'), posMap.x.bottom), posMap.x.top);\\n\\t        posMap.y.onZero = Math.max(Math.min(getZero('x'), posMap.y.right), posMap.y.left);\\n\\n\\t        function getZero(dim, val) {\\n\\t            var theAxis = grid.getAxis(dim);\\n\\t            return theAxis.toGlobalCoord(theAxis.dataToCoord(0));\\n\\t        }\\n\\n\\t        // Axis position\\n\\t        layout.position = [\\n\\t            axisDim === 'y' ? posMap.y[axisPosition] : rectBound[0],\\n\\t            axisDim === 'x' ? posMap.x[axisPosition] : rectBound[3]\\n\\t        ];\\n\\n\\t        // Axis rotation\\n\\t        layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1);\\n\\n\\t        // Tick and label direction, x y is axisDim\\n\\t        var dirMap = {top: -1, bottom: 1, left: -1, right: 1};\\n\\n\\t        layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\\n\\t        layout.labelOffset = axis.onZero ? posMap[axisDim][rawAxisPosition] - posMap[axisDim].onZero : 0;\\n\\n\\t        if (axisModel.get('axisTick.inside')) {\\n\\t            layout.tickDirection = -layout.tickDirection;\\n\\t        }\\n\\t        if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\\n\\t            layout.labelDirection = -layout.labelDirection;\\n\\t        }\\n\\n\\t        // Special label rotation\\n\\t        var labelRotate = axisModel.get('axisLabel.rotate');\\n\\t        layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate;\\n\\n\\t        // label interval when auto mode.\\n\\t        layout.labelInterval = axis.getLabelInterval();\\n\\n\\t        // Over splitLine and splitArea\\n\\t        layout.z2 = 1;\\n\\n\\t        return layout;\\n\\t    };\\n\\n\\t    module.exports = helper;\\n\\n\\n\\n/***/ },\\n/* 139 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\n\\t    __webpack_require__(125);\\n\\n\\t    __webpack_require__(140);\\n\\t    __webpack_require__(142);\\n\\n\\t    var barLayoutGrid = __webpack_require__(145);\\n\\t    var echarts = __webpack_require__(1);\\n\\n\\t    echarts.registerLayout(zrUtil.curry(barLayoutGrid, 'bar'));\\n\\n\\t    // Visual coding for legend\\n\\t    echarts.registerVisual(function (ecModel) {\\n\\t        ecModel.eachSeriesByType('bar', function (seriesModel) {\\n\\t            var data = seriesModel.getData();\\n\\t            data.setVisual('legendSymbol', 'roundRect');\\n\\t        });\\n\\t    });\\n\\n\\t    // In case developer forget to include grid component\\n\\t    __webpack_require__(124);\\n\\n\\n/***/ },\\n/* 140 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    module.exports = __webpack_require__(141).extend({\\n\\n\\t        type: 'series.bar',\\n\\n\\t        dependencies: ['grid', 'polar'],\\n\\n\\t        brushSelector: 'rect'\\n\\t    });\\n\\n\\n/***/ },\\n/* 141 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t'use strict';\\n\\n\\n\\t    var SeriesModel = __webpack_require__(78);\\n\\t    var createListFromArray = __webpack_require__(109);\\n\\n\\t    module.exports = SeriesModel.extend({\\n\\n\\t        type: 'series.__base_bar__',\\n\\n\\t        getInitialData: function (option, ecModel) {\\n\\t            return createListFromArray(option.data, this, ecModel);\\n\\t        },\\n\\n\\t        getMarkerPosition: function (value) {\\n\\t            var coordSys = this.coordinateSystem;\\n\\t            if (coordSys) {\\n\\t                // PENDING if clamp ?\\n\\t                var pt = coordSys.dataToPoint(value, true);\\n\\t                var data = this.getData();\\n\\t                var offset = data.getLayout('offset');\\n\\t                var size = data.getLayout('size');\\n\\t                var offsetIndex = coordSys.getBaseAxis().isHorizontal() ? 0 : 1;\\n\\t                pt[offsetIndex] += offset + size / 2;\\n\\t                return pt;\\n\\t            }\\n\\t            return [NaN, NaN];\\n\\t        },\\n\\n\\t        defaultOption: {\\n\\t            zlevel: 0,                  // 一级层叠\\n\\t            z: 2,                       // 二级层叠\\n\\t            coordinateSystem: 'cartesian2d',\\n\\t            legendHoverLink: true,\\n\\t            // stack: null\\n\\n\\t            // Cartesian coordinate system\\n\\t            // xAxisIndex: 0,\\n\\t            // yAxisIndex: 0,\\n\\n\\t            // 最小高度改为0\\n\\t            barMinHeight: 0,\\n\\t            // 最小角度为0，仅对极坐标系下的柱状图有效\\n\\t            barMinAngle: 0,\\n\\t            // cursor: null,\\n\\n\\t            // barMaxWidth: null,\\n\\t            // 默认自适应\\n\\t            // barWidth: null,\\n\\t            // 柱间距离，默认为柱形宽度的30%，可设固定值\\n\\t            // barGap: '30%',\\n\\t            // 类目间柱形距离，默认为类目间距的20%，可设固定值\\n\\t            // barCategoryGap: '20%',\\n\\t            // label: {\\n\\t            //     normal: {\\n\\t            //         show: false\\n\\t            //     }\\n\\t            // },\\n\\t            itemStyle: {\\n\\t                normal: {\\n\\t                    // color: '各异'\\n\\t                },\\n\\t                emphasis: {}\\n\\t            }\\n\\t        }\\n\\t    });\\n\\n\\n/***/ },\\n/* 142 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t'use strict';\\n\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var graphic = __webpack_require__(18);\\n\\t    var helper = __webpack_require__(143);\\n\\n\\t    var BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'normal', 'barBorderWidth'];\\n\\n\\t    // FIXME\\n\\t    // Just for compatible with ec2.\\n\\t    zrUtil.extend(__webpack_require__(12).prototype, __webpack_require__(144));\\n\\n\\t    var BarView = __webpack_require__(1).extendChartView({\\n\\n\\t        type: 'bar',\\n\\n\\t        render: function (seriesModel, ecModel, api) {\\n\\t            var coordinateSystemType = seriesModel.get('coordinateSystem');\\n\\n\\t            if (coordinateSystemType === 'cartesian2d'\\n\\t                || coordinateSystemType === 'polar'\\n\\t            ) {\\n\\t                this._render(seriesModel, ecModel, api);\\n\\t            }\\n\\t            else if (true) {\\n\\t                console.warn('Only cartesian2d and polar supported for bar.');\\n\\t            }\\n\\n\\t            return this.group;\\n\\t        },\\n\\n\\t        dispose: zrUtil.noop,\\n\\n\\t        _render: function (seriesModel, ecModel, api) {\\n\\t            var group = this.group;\\n\\t            var data = seriesModel.getData();\\n\\t            var oldData = this._data;\\n\\n\\t            var coord = seriesModel.coordinateSystem;\\n\\t            var baseAxis = coord.getBaseAxis();\\n\\t            var isHorizontalOrRadial;\\n\\n\\t            if (coord.type === 'cartesian2d') {\\n\\t                isHorizontalOrRadial = baseAxis.isHorizontal();\\n\\t            }\\n\\t            else if (coord.type === 'polar') {\\n\\t                isHorizontalOrRadial = baseAxis.dim === 'angle';\\n\\t            }\\n\\n\\t            var animationModel = seriesModel.isAnimationEnabled() ? seriesModel : null;\\n\\n\\t            data.diff(oldData)\\n\\t                .add(function (dataIndex) {\\n\\t                    if (!data.hasValue(dataIndex)) {\\n\\t                        return;\\n\\t                    }\\n\\n\\t                    var itemModel = data.getItemModel(dataIndex);\\n\\t                    var layout = getLayout[coord.type](data, dataIndex, itemModel);\\n\\t                    var el = elementCreator[coord.type](\\n\\t                        data, dataIndex, itemModel, layout, isHorizontalOrRadial, animationModel\\n\\t                    );\\n\\t                    data.setItemGraphicEl(dataIndex, el);\\n\\t                    group.add(el);\\n\\n\\t                    updateStyle(\\n\\t                        el, data, dataIndex, itemModel, layout,\\n\\t                        seriesModel, isHorizontalOrRadial, coord.type === 'polar'\\n\\t                    );\\n\\t                })\\n\\t                .update(function (newIndex, oldIndex) {\\n\\t                    var el = oldData.getItemGraphicEl(oldIndex);\\n\\n\\t                    if (!data.hasValue(newIndex)) {\\n\\t                        group.remove(el);\\n\\t                        return;\\n\\t                    }\\n\\n\\t                    var itemModel = data.getItemModel(newIndex);\\n\\t                    var layout = getLayout[coord.type](data, newIndex, itemModel);\\n\\n\\t                    if (el) {\\n\\t                        graphic.updateProps(el, {shape: layout}, animationModel, newIndex);\\n\\t                    }\\n\\t                    else {\\n\\t                        el = elementCreator[coord.type](\\n\\t                            data, newIndex, itemModel, layout, isHorizontalOrRadial, animationModel, true\\n\\t                        );\\n\\t                    }\\n\\n\\t                    data.setItemGraphicEl(newIndex, el);\\n\\t                    // Add back\\n\\t                    group.add(el);\\n\\n\\t                    updateStyle(\\n\\t                        el, data, newIndex, itemModel, layout,\\n\\t                        seriesModel, isHorizontalOrRadial, coord.type === 'polar'\\n\\t                    );\\n\\t                })\\n\\t                .remove(function (dataIndex) {\\n\\t                    var el = oldData.getItemGraphicEl(dataIndex);\\n\\t                    if (coord.type === 'cartesian2d') {\\n\\t                        el && removeRect(dataIndex, animationModel, el);\\n\\t                    }\\n\\t                    else {\\n\\t                        el && removeSector(dataIndex, animationModel, el);\\n\\t                    }\\n\\t                })\\n\\t                .execute();\\n\\n\\t            this._data = data;\\n\\t        },\\n\\n\\t        remove: function (ecModel, api) {\\n\\t            var group = this.group;\\n\\t            var data = this._data;\\n\\t            if (ecModel.get('animation')) {\\n\\t                if (data) {\\n\\t                    data.eachItemGraphicEl(function (el) {\\n\\t                        if (el.type === 'sector') {\\n\\t                            removeSector(el.dataIndex, ecModel, el);\\n\\t                        }\\n\\t                        else {\\n\\t                            removeRect(el.dataIndex, ecModel, el);\\n\\t                        }\\n\\t                    });\\n\\t                }\\n\\t            }\\n\\t            else {\\n\\t                group.removeAll();\\n\\t            }\\n\\t        }\\n\\t    });\\n\\n\\t    var elementCreator = {\\n\\n\\t        cartesian2d: function (\\n\\t            data, dataIndex, itemModel, layout, isHorizontal,\\n\\t            animationModel, isUpdate\\n\\t        ) {\\n\\t            var rect = new graphic.Rect({shape: zrUtil.extend({}, layout)});\\n\\n\\t            // Animation\\n\\t            if (animationModel) {\\n\\t                var rectShape = rect.shape;\\n\\t                var animateProperty = isHorizontal ? 'height' : 'width';\\n\\t                var animateTarget = {};\\n\\t                rectShape[animateProperty] = 0;\\n\\t                animateTarget[animateProperty] = layout[animateProperty];\\n\\t                graphic[isUpdate ? 'updateProps' : 'initProps'](rect, {\\n\\t                    shape: animateTarget\\n\\t                }, animationModel, dataIndex);\\n\\t            }\\n\\n\\t            return rect;\\n\\t        },\\n\\n\\t        polar: function (\\n\\t            data, dataIndex, itemModel, layout, isRadial,\\n\\t            animationModel, isUpdate\\n\\t        ) {\\n\\t            var sector = new graphic.Sector({shape: zrUtil.extend({}, layout)});\\n\\n\\t            // Animation\\n\\t            if (animationModel) {\\n\\t                var sectorShape = sector.shape;\\n\\t                var animateProperty = isRadial ? 'r' : 'endAngle';\\n\\t                var animateTarget = {};\\n\\t                sectorShape[animateProperty] = isRadial ? 0 : layout.startAngle;\\n\\t                animateTarget[animateProperty] = layout[animateProperty];\\n\\t                graphic[isUpdate ? 'updateProps' : 'initProps'](sector, {\\n\\t                    shape: animateTarget\\n\\t                }, animationModel, dataIndex);\\n\\t            }\\n\\n\\t            return sector;\\n\\t        }\\n\\t    };\\n\\n\\t    function removeRect(dataIndex, animationModel, el) {\\n\\t        // Not show text when animating\\n\\t        el.style.text = '';\\n\\t        graphic.updateProps(el, {\\n\\t            shape: {\\n\\t                width: 0\\n\\t            }\\n\\t        }, animationModel, dataIndex, function () {\\n\\t            el.parent && el.parent.remove(el);\\n\\t        });\\n\\t    }\\n\\n\\t    function removeSector(dataIndex, animationModel, el) {\\n\\t        // Not show text when animating\\n\\t        el.style.text = '';\\n\\t        graphic.updateProps(el, {\\n\\t            shape: {\\n\\t                r: el.shape.r0\\n\\t            }\\n\\t        }, animationModel, dataIndex, function () {\\n\\t            el.parent && el.parent.remove(el);\\n\\t        });\\n\\t    }\\n\\n\\t    var getLayout = {\\n\\t        cartesian2d: function (data, dataIndex, itemModel) {\\n\\t            var layout = data.getItemLayout(dataIndex);\\n\\t            var fixedLineWidth = getLineWidth(itemModel, layout);\\n\\n\\t            // fix layout with lineWidth\\n\\t            var signX = layout.width > 0 ? 1 : -1;\\n\\t            var signY = layout.height > 0 ? 1 : -1;\\n\\t            return {\\n\\t                x: layout.x + signX * fixedLineWidth / 2,\\n\\t                y: layout.y + signY * fixedLineWidth / 2,\\n\\t                width: layout.width - signX * fixedLineWidth,\\n\\t                height: layout.height - signY * fixedLineWidth\\n\\t            };\\n\\t        },\\n\\n\\t        polar: function (data, dataIndex, itemModel) {\\n\\t            var layout = data.getItemLayout(dataIndex);\\n\\t            return {\\n\\t                cx: layout.cx,\\n\\t                cy: layout.cy,\\n\\t                r0: layout.r0,\\n\\t                r: layout.r,\\n\\t                startAngle: layout.startAngle,\\n\\t                endAngle: layout.endAngle\\n\\t            };\\n\\t        }\\n\\t    };\\n\\n\\t    function updateStyle(\\n\\t        el, data, dataIndex, itemModel, layout, seriesModel, isHorizontal, isPolar\\n\\t    ) {\\n\\t        var color = data.getItemVisual(dataIndex, 'color');\\n\\t        var opacity = data.getItemVisual(dataIndex, 'opacity');\\n\\t        var itemStyleModel = itemModel.getModel('itemStyle.normal');\\n\\t        var hoverStyle = itemModel.getModel('itemStyle.emphasis').getBarItemStyle();\\n\\n\\t        if (!isPolar) {\\n\\t            el.setShape('r', itemStyleModel.get('barBorderRadius') || 0);\\n\\t        }\\n\\n\\t        el.useStyle(zrUtil.defaults(\\n\\t            {\\n\\t                fill: color,\\n\\t                opacity: opacity\\n\\t            },\\n\\t            itemStyleModel.getBarItemStyle()\\n\\t        ));\\n\\n\\t        var cursorStyle = itemModel.getShallow('cursor');\\n\\t        cursorStyle && el.attr('cursor', cursorStyle);\\n\\n\\t        var labelPositionOutside = isHorizontal\\n\\t            ? (layout.height > 0 ? 'bottom' : 'top')\\n\\t            : (layout.width > 0 ? 'left' : 'right');\\n\\n\\t        if (!isPolar) {\\n\\t            helper.setLabel(\\n\\t                el.style, hoverStyle, itemModel, color,\\n\\t                seriesModel, dataIndex, labelPositionOutside\\n\\t            );\\n\\t        }\\n\\n\\t        graphic.setHoverStyle(el, hoverStyle);\\n\\t    }\\n\\n\\t    // In case width or height are too small.\\n\\t    function getLineWidth(itemModel, rawLayout) {\\n\\t        var lineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0;\\n\\t        return Math.min(lineWidth, Math.abs(rawLayout.width), Math.abs(rawLayout.height));\\n\\t    }\\n\\n\\t    module.exports = BarView;\\n\\n\\n/***/ },\\n/* 143 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var graphic = __webpack_require__(18);\\n\\n\\t    var helper = {};\\n\\n\\t    helper.setLabel = function (\\n\\t        normalStyle, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside\\n\\t    ) {\\n\\t        var labelModel = itemModel.getModel('label.normal');\\n\\t        var hoverLabelModel = itemModel.getModel('label.emphasis');\\n\\n\\t        if (labelModel.get('show')) {\\n\\t            setLabel(\\n\\t                normalStyle, labelModel, color,\\n\\t                zrUtil.retrieve(\\n\\t                    seriesModel.getFormattedLabel(dataIndex, 'normal'),\\n\\t                    seriesModel.getRawValue(dataIndex)\\n\\t                ),\\n\\t                labelPositionOutside\\n\\t            );\\n\\t        }\\n\\t        else {\\n\\t            normalStyle.text = '';\\n\\t        }\\n\\n\\t        if (hoverLabelModel.get('show')) {\\n\\t            setLabel(\\n\\t                hoverStyle, hoverLabelModel, color,\\n\\t                zrUtil.retrieve(\\n\\t                    seriesModel.getFormattedLabel(dataIndex, 'emphasis'),\\n\\t                    seriesModel.getRawValue(dataIndex)\\n\\t                ),\\n\\t                labelPositionOutside\\n\\t            );\\n\\t        }\\n\\t        else {\\n\\t            hoverStyle.text = '';\\n\\t        }\\n\\t    };\\n\\n\\t    function setLabel(style, model, color, labelText, labelPositionOutside) {\\n\\t        graphic.setText(style, model, color);\\n\\t        style.text = labelText;\\n\\t        if (style.textPosition === 'outside') {\\n\\t            style.textPosition = labelPositionOutside;\\n\\t        }\\n\\t    }\\n\\n\\t    module.exports = helper;\\n\\n\\n/***/ },\\n/* 144 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\n\\t    var getBarItemStyle = __webpack_require__(15)(\\n\\t        [\\n\\t            ['fill', 'color'],\\n\\t            ['stroke', 'borderColor'],\\n\\t            ['lineWidth', 'borderWidth'],\\n\\t            // Compatitable with 2\\n\\t            ['stroke', 'barBorderColor'],\\n\\t            ['lineWidth', 'barBorderWidth'],\\n\\t            ['opacity'],\\n\\t            ['shadowBlur'],\\n\\t            ['shadowOffsetX'],\\n\\t            ['shadowOffsetY'],\\n\\t            ['shadowColor']\\n\\t        ]\\n\\t    );\\n\\t    module.exports = {\\n\\t        getBarItemStyle: function (excludes) {\\n\\t            var style = getBarItemStyle.call(this, excludes);\\n\\t            if (this.getBorderLineDash) {\\n\\t                var lineDash = this.getBorderLineDash();\\n\\t                lineDash && (style.lineDash = lineDash);\\n\\t            }\\n\\t            return style;\\n\\t        }\\n\\t    };\\n\\n\\n/***/ },\\n/* 145 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t'use strict';\\n\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var numberUtil = __webpack_require__(7);\\n\\t    var parsePercent = numberUtil.parsePercent;\\n\\n\\t    var STACK_PREFIX = '__ec_stack_';\\n\\n\\t    function getSeriesStackId(seriesModel) {\\n\\t        return seriesModel.get('stack') || STACK_PREFIX + seriesModel.seriesIndex;\\n\\t    }\\n\\n\\t    function getAxisKey(axis) {\\n\\t        return axis.dim + axis.index;\\n\\t    }\\n\\n\\t    /**\\n\\t     * @param {Object} opt\\n\\t     * @param {module:echarts/coord/Axis} opt.axis Only support category axis currently.\\n\\t     * @param {number} opt.count Positive interger.\\n\\t     * @param {number} [opt.barWidth]\\n\\t     * @param {number} [opt.barMaxWidth]\\n\\t     * @param {number} [opt.barGap]\\n\\t     * @param {number} [opt.barCategoryGap]\\n\\t     * @return {Object} {width, offset, offsetCenter} If axis.type is not 'category', return undefined.\\n\\t     */\\n\\t    function getLayoutOnAxis(opt, api) {\\n\\t        var params = [];\\n\\t        var baseAxis = opt.axis;\\n\\t        var axisKey = 'axis0';\\n\\n\\t        if (baseAxis.type !== 'category') {\\n\\t            return;\\n\\t        }\\n\\t        var bandWidth = baseAxis.getBandWidth();\\n\\n\\t        for (var i = 0; i < opt.count || 0; i++) {\\n\\t            params.push(zrUtil.defaults({\\n\\t                bandWidth: bandWidth,\\n\\t                axisKey: axisKey,\\n\\t                stackId: STACK_PREFIX + i\\n\\t            }, opt));\\n\\t        }\\n\\t        var widthAndOffsets = doCalBarWidthAndOffset(params, api);\\n\\n\\t        var result = [];\\n\\t        for (var i = 0; i < opt.count; i++) {\\n\\t            var item = widthAndOffsets[axisKey][STACK_PREFIX + i];\\n\\t            item.offsetCenter = item.offset + item.width / 2;\\n\\t            result.push(item);\\n\\t        }\\n\\n\\t        return result;\\n\\t    }\\n\\n\\t    function calBarWidthAndOffset(barSeries, api) {\\n\\t        var seriesInfoList = zrUtil.map(barSeries, function (seriesModel) {\\n\\t            var data = seriesModel.getData();\\n\\t            var cartesian = seriesModel.coordinateSystem;\\n\\t            var baseAxis = cartesian.getBaseAxis();\\n\\t            var axisExtent = baseAxis.getExtent();\\n\\t            var bandWidth = baseAxis.type === 'category'\\n\\t                ? baseAxis.getBandWidth()\\n\\t                : (Math.abs(axisExtent[1] - axisExtent[0]) / data.count());\\n\\n\\t            var barWidth = parsePercent(\\n\\t                seriesModel.get('barWidth'), bandWidth\\n\\t            );\\n\\t            var barMaxWidth = parsePercent(\\n\\t                seriesModel.get('barMaxWidth'), bandWidth\\n\\t            );\\n\\t            var barGap = seriesModel.get('barGap');\\n\\t            var barCategoryGap = seriesModel.get('barCategoryGap');\\n\\n\\t            return {\\n\\t                bandWidth: bandWidth,\\n\\t                barWidth: barWidth,\\n\\t                barMaxWidth: barMaxWidth,\\n\\t                barGap: barGap,\\n\\t                barCategoryGap: barCategoryGap,\\n\\t                axisKey: getAxisKey(baseAxis),\\n\\t                stackId: getSeriesStackId(seriesModel)\\n\\t            };\\n\\t        });\\n\\n\\t        return doCalBarWidthAndOffset(seriesInfoList, api);\\n\\t    }\\n\\n\\t    function doCalBarWidthAndOffset(seriesInfoList, api) {\\n\\t        // Columns info on each category axis. Key is cartesian name\\n\\t        var columnsMap = {};\\n\\n\\t        zrUtil.each(seriesInfoList, function (seriesInfo, idx) {\\n\\t            var axisKey = seriesInfo.axisKey;\\n\\t            var bandWidth = seriesInfo.bandWidth;\\n\\t            var columnsOnAxis = columnsMap[axisKey] || {\\n\\t                bandWidth: bandWidth,\\n\\t                remainedWidth: bandWidth,\\n\\t                autoWidthCount: 0,\\n\\t                categoryGap: '20%',\\n\\t                gap: '30%',\\n\\t                stacks: {}\\n\\t            };\\n\\t            var stacks = columnsOnAxis.stacks;\\n\\t            columnsMap[axisKey] = columnsOnAxis;\\n\\n\\t            var stackId = seriesInfo.stackId;\\n\\n\\t            if (!stacks[stackId]) {\\n\\t                columnsOnAxis.autoWidthCount++;\\n\\t            }\\n\\t            stacks[stackId] = stacks[stackId] || {\\n\\t                width: 0,\\n\\t                maxWidth: 0\\n\\t            };\\n\\n\\t            // Caution: In a single coordinate system, these barGrid attributes\\n\\t            // will be shared by series. Consider that they have default values,\\n\\t            // only the attributes set on the last series will work.\\n\\t            // Do not change this fact unless there will be a break change.\\n\\n\\t            // TODO\\n\\t            var barWidth = seriesInfo.barWidth;\\n\\t            if (barWidth && !stacks[stackId].width) {\\n\\t                barWidth = Math.min(columnsOnAxis.remainedWidth, barWidth);\\n\\t                stacks[stackId].width = barWidth;\\n\\t                columnsOnAxis.remainedWidth -= barWidth;\\n\\t            }\\n\\n\\t            var barMaxWidth = seriesInfo.barMaxWidth;\\n\\t            barMaxWidth && (stacks[stackId].maxWidth = barMaxWidth);\\n\\t            var barGap = seriesInfo.barGap;\\n\\t            (barGap != null) && (columnsOnAxis.gap = barGap);\\n\\t            var barCategoryGap = seriesInfo.barCategoryGap;\\n\\t            (barCategoryGap != null) && (columnsOnAxis.categoryGap = barCategoryGap);\\n\\t        });\\n\\n\\t        var result = {};\\n\\n\\t        zrUtil.each(columnsMap, function (columnsOnAxis, coordSysName) {\\n\\n\\t            result[coordSysName] = {};\\n\\n\\t            var stacks = columnsOnAxis.stacks;\\n\\t            var bandWidth = columnsOnAxis.bandWidth;\\n\\t            var categoryGap = parsePercent(columnsOnAxis.categoryGap, bandWidth);\\n\\t            var barGapPercent = parsePercent(columnsOnAxis.gap, 1);\\n\\n\\t            var remainedWidth = columnsOnAxis.remainedWidth;\\n\\t            var autoWidthCount = columnsOnAxis.autoWidthCount;\\n\\t            var autoWidth = (remainedWidth - categoryGap)\\n\\t                / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\\n\\t            autoWidth = Math.max(autoWidth, 0);\\n\\n\\t            // Find if any auto calculated bar exceeded maxBarWidth\\n\\t            zrUtil.each(stacks, function (column, stack) {\\n\\t                var maxWidth = column.maxWidth;\\n\\t                if (maxWidth && maxWidth < autoWidth) {\\n\\t                    maxWidth = Math.min(maxWidth, remainedWidth);\\n\\t                    if (column.width) {\\n\\t                        maxWidth = Math.min(maxWidth, column.width);\\n\\t                    }\\n\\t                    remainedWidth -= maxWidth;\\n\\t                    column.width = maxWidth;\\n\\t                    autoWidthCount--;\\n\\t                }\\n\\t            });\\n\\n\\t            // Recalculate width again\\n\\t            autoWidth = (remainedWidth - categoryGap)\\n\\t                / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\\n\\t            autoWidth = Math.max(autoWidth, 0);\\n\\n\\t            var widthSum = 0;\\n\\t            var lastColumn;\\n\\t            zrUtil.each(stacks, function (column, idx) {\\n\\t                if (!column.width) {\\n\\t                    column.width = autoWidth;\\n\\t                }\\n\\t                lastColumn = column;\\n\\t                widthSum += column.width * (1 + barGapPercent);\\n\\t            });\\n\\t            if (lastColumn) {\\n\\t                widthSum -= lastColumn.width * barGapPercent;\\n\\t            }\\n\\n\\t            var offset = -widthSum / 2;\\n\\t            zrUtil.each(stacks, function (column, stackId) {\\n\\t                result[coordSysName][stackId] = result[coordSysName][stackId] || {\\n\\t                    offset: offset,\\n\\t                    width: column.width\\n\\t                };\\n\\n\\t                offset += column.width * (1 + barGapPercent);\\n\\t            });\\n\\t        });\\n\\n\\t        return result;\\n\\t    }\\n\\n\\t    /**\\n\\t     * @param {string} seriesType\\n\\t     * @param {module:echarts/model/Global} ecModel\\n\\t     * @param {module:echarts/ExtensionAPI} api\\n\\t     */\\n\\t    function barLayoutGrid(seriesType, ecModel, api) {\\n\\n\\t        var barWidthAndOffset = calBarWidthAndOffset(\\n\\t            zrUtil.filter(\\n\\t                ecModel.getSeriesByType(seriesType),\\n\\t                function (seriesModel) {\\n\\t                    return !ecModel.isSeriesFiltered(seriesModel)\\n\\t                        && seriesModel.coordinateSystem\\n\\t                        && seriesModel.coordinateSystem.type === 'cartesian2d';\\n\\t                }\\n\\t            )\\n\\t        );\\n\\n\\t        var lastStackCoords = {};\\n\\t        var lastStackCoordsOrigin = {};\\n\\n\\t        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\\n\\n\\t            // Check series coordinate, do layout for cartesian2d only\\n\\t            if (seriesModel.coordinateSystem.type !== 'cartesian2d') {\\n\\t                return;\\n\\t            }\\n\\n\\t            var data = seriesModel.getData();\\n\\t            var cartesian = seriesModel.coordinateSystem;\\n\\t            var baseAxis = cartesian.getBaseAxis();\\n\\n\\t            var stackId = getSeriesStackId(seriesModel);\\n\\t            var columnLayoutInfo = barWidthAndOffset[getAxisKey(baseAxis)][stackId];\\n\\t            var columnOffset = columnLayoutInfo.offset;\\n\\t            var columnWidth = columnLayoutInfo.width;\\n\\t            var valueAxis = cartesian.getOtherAxis(baseAxis);\\n\\n\\t            var barMinHeight = seriesModel.get('barMinHeight') || 0;\\n\\n\\t            var valueAxisStart = baseAxis.onZero\\n\\t                ? valueAxis.toGlobalCoord(valueAxis.dataToCoord(0))\\n\\t                : valueAxis.getGlobalExtent()[0];\\n\\n\\t            var coords = cartesian.dataToPoints(data, true);\\n\\t            lastStackCoords[stackId] = lastStackCoords[stackId] || [];\\n\\t            lastStackCoordsOrigin[stackId] = lastStackCoordsOrigin[stackId] || []; // Fix #4243\\n\\n\\t            data.setLayout({\\n\\t                offset: columnOffset,\\n\\t                size: columnWidth\\n\\t            });\\n\\n\\t            data.each(valueAxis.dim, function (value, idx) {\\n\\t                if (isNaN(value)) {\\n\\t                    return;\\n\\t                }\\n\\n\\t                if (!lastStackCoords[stackId][idx]) {\\n\\t                    lastStackCoords[stackId][idx] = {\\n\\t                        p: valueAxisStart, // Positive stack\\n\\t                        n: valueAxisStart  // Negative stack\\n\\t                    };\\n\\t                    lastStackCoordsOrigin[stackId][idx] = {\\n\\t                        p: valueAxisStart, // Positive stack\\n\\t                        n: valueAxisStart  // Negative stack\\n\\t                    };\\n\\t                }\\n\\t                var sign = value >= 0 ? 'p' : 'n';\\n\\t                var coord = coords[idx];\\n\\t                var lastCoord = lastStackCoords[stackId][idx][sign];\\n\\t                var lastCoordOrigin = lastStackCoordsOrigin[stackId][idx][sign];\\n\\t                var x;\\n\\t                var y;\\n\\t                var width;\\n\\t                var height;\\n\\n\\t                if (valueAxis.isHorizontal()) {\\n\\t                    x = lastCoord;\\n\\t                    y = coord[1] + columnOffset;\\n\\t                    width = coord[0] - lastCoordOrigin;\\n\\t                    height = columnWidth;\\n\\n\\t                    lastStackCoordsOrigin[stackId][idx][sign] += width;\\n\\t                    if (Math.abs(width) < barMinHeight) {\\n\\t                        width = (width < 0 ? -1 : 1) * barMinHeight;\\n\\t                    }\\n\\t                    lastStackCoords[stackId][idx][sign] += width;\\n\\t                }\\n\\t                else {\\n\\t                    x = coord[0] + columnOffset;\\n\\t                    y = lastCoord;\\n\\t                    width = columnWidth;\\n\\t                    height = coord[1] - lastCoordOrigin;\\n\\n\\t                    lastStackCoordsOrigin[stackId][idx][sign] += height;\\n\\t                    if (Math.abs(height) < barMinHeight) {\\n\\t                        // Include zero to has a positive bar\\n\\t                        height = (height <= 0 ? -1 : 1) * barMinHeight;\\n\\t                    }\\n\\t                    lastStackCoords[stackId][idx][sign] += height;\\n\\t                }\\n\\n\\t                data.setItemLayout(idx, {\\n\\t                    x: x,\\n\\t                    y: y,\\n\\t                    width: width,\\n\\t                    height: height\\n\\t                });\\n\\t            }, true);\\n\\n\\t        }, this);\\n\\t    }\\n\\n\\t    barLayoutGrid.getLayoutOnAxis = getLayoutOnAxis;\\n\\n\\t    module.exports = barLayoutGrid;\\n\\n\\n/***/ },\\n/* 146 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var echarts = __webpack_require__(1);\\n\\n\\t    __webpack_require__(147);\\n\\t    __webpack_require__(149);\\n\\n\\t    __webpack_require__(150)('pie', [{\\n\\t        type: 'pieToggleSelect',\\n\\t        event: 'pieselectchanged',\\n\\t        method: 'toggleSelected'\\n\\t    }, {\\n\\t        type: 'pieSelect',\\n\\t        event: 'pieselected',\\n\\t        method: 'select'\\n\\t    }, {\\n\\t        type: 'pieUnSelect',\\n\\t        event: 'pieunselected',\\n\\t        method: 'unSelect'\\n\\t    }]);\\n\\n\\t    echarts.registerVisual(zrUtil.curry(__webpack_require__(151), 'pie'));\\n\\n\\t    echarts.registerLayout(zrUtil.curry(\\n\\t        __webpack_require__(152), 'pie'\\n\\t    ));\\n\\n\\t    echarts.registerProcessor(zrUtil.curry(__webpack_require__(154), 'pie'));\\n\\n\\n/***/ },\\n/* 147 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t'use strict';\\n\\n\\n\\t    var List = __webpack_require__(98);\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var modelUtil = __webpack_require__(5);\\n\\t    var numberUtil = __webpack_require__(7);\\n\\t    var completeDimensions = __webpack_require__(110);\\n\\n\\t    var dataSelectableMixin = __webpack_require__(148);\\n\\n\\t    var PieSeries = __webpack_require__(1).extendSeriesModel({\\n\\n\\t        type: 'series.pie',\\n\\n\\t        // Overwrite\\n\\t        init: function (option) {\\n\\t            PieSeries.superApply(this, 'init', arguments);\\n\\n\\t            // Enable legend selection for each data item\\n\\t            // Use a function instead of direct access because data reference may changed\\n\\t            this.legendDataProvider = function () {\\n\\t                return this.getRawData();\\n\\t            };\\n\\n\\t            this.updateSelectedMap(option.data);\\n\\n\\t            this._defaultLabelLine(option);\\n\\t        },\\n\\n\\t        // Overwrite\\n\\t        mergeOption: function (newOption) {\\n\\t            PieSeries.superCall(this, 'mergeOption', newOption);\\n\\t            this.updateSelectedMap(this.option.data);\\n\\t        },\\n\\n\\t        getInitialData: function (option, ecModel) {\\n\\t            var dimensions = completeDimensions(['value'], option.data);\\n\\t            var list = new List(dimensions, this);\\n\\t            list.initData(option.data);\\n\\t            return list;\\n\\t        },\\n\\n\\t        // Overwrite\\n\\t        getDataParams: function (dataIndex) {\\n\\t            var data = this.getData();\\n\\t            var params = PieSeries.superCall(this, 'getDataParams', dataIndex);\\n\\t            // FIXME toFixed?\\n\\n\\t            var valueList = [];\\n\\t            data.each('value', function (value) {\\n\\t                valueList.push(value);\\n\\t            });\\n\\n\\t            params.percent = numberUtil.getPercentWithPrecision(\\n\\t                valueList,\\n\\t                dataIndex,\\n\\t                data.hostModel.get('percentPrecision')\\n\\t            );\\n\\n\\t            params.$vars.push('percent');\\n\\t            return params;\\n\\t        },\\n\\n\\t        _defaultLabelLine: function (option) {\\n\\t            // Extend labelLine emphasis\\n\\t            modelUtil.defaultEmphasis(option.labelLine, ['show']);\\n\\n\\t            var labelLineNormalOpt = option.labelLine.normal;\\n\\t            var labelLineEmphasisOpt = option.labelLine.emphasis;\\n\\t            // Not show label line if `label.normal.show = false`\\n\\t            labelLineNormalOpt.show = labelLineNormalOpt.show\\n\\t                && option.label.normal.show;\\n\\t            labelLineEmphasisOpt.show = labelLineEmphasisOpt.show\\n\\t                && option.label.emphasis.show;\\n\\t        },\\n\\n\\t        defaultOption: {\\n\\t            zlevel: 0,\\n\\t            z: 2,\\n\\t            legendHoverLink: true,\\n\\n\\t            hoverAnimation: true,\\n\\t            // 默认全局居中\\n\\t            center: ['50%', '50%'],\\n\\t            radius: [0, '75%'],\\n\\t            // 默认顺时针\\n\\t            clockwise: true,\\n\\t            startAngle: 90,\\n\\t            // 最小角度改为0\\n\\t            minAngle: 0,\\n\\t            // 选中是扇区偏移量\\n\\t            selectedOffset: 10,\\n\\n\\t            // If use strategy to avoid label overlapping\\n\\t            avoidLabelOverlap: true,\\n\\t            // 选择模式，默认关闭，可选single，multiple\\n\\t            // selectedMode: false,\\n\\t            // 南丁格尔玫瑰图模式，'radius'（半径） | 'area'（面积）\\n\\t            // roseType: null,\\n\\n\\t            percentPrecision: 2,\\n\\n\\t            // If still show when all data zero.\\n\\t            stillShowZeroSum: true,\\n\\n\\t            // cursor: null,\\n\\n\\t            label: {\\n\\t                normal: {\\n\\t                    // If rotate around circle\\n\\t                    rotate: false,\\n\\t                    show: true,\\n\\t                    // 'outer', 'inside', 'center'\\n\\t                    position: 'outer'\\n\\t                    // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\\n\\t                    // textStyle: null      // 默认使用全局文本样式，详见TEXTSTYLE\\n\\t                    // distance: 当position为inner时有效，为label位置到圆心的距离与圆半径(环状图为内外半径和)的比例系数\\n\\t                },\\n\\t                emphasis: {}\\n\\t            },\\n\\t            // Enabled when label.normal.position is 'outer'\\n\\t            labelLine: {\\n\\t                normal: {\\n\\t                    show: true,\\n\\t                    // 引导线两段中的第一段长度\\n\\t                    length: 15,\\n\\t                    // 引导线两段中的第二段长度\\n\\t                    length2: 15,\\n\\t                    smooth: false,\\n\\t                    lineStyle: {\\n\\t                        // color: 各异,\\n\\t                        width: 1,\\n\\t                        type: 'solid'\\n\\t                    }\\n\\t                }\\n\\t            },\\n\\t            itemStyle: {\\n\\t                normal: {\\n\\t                    borderWidth: 1\\n\\t                },\\n\\t                emphasis: {}\\n\\t            },\\n\\n\\t            // Animation type canbe expansion, scale\\n\\t            animationType: 'expansion',\\n\\n\\t            animationEasing: 'cubicOut',\\n\\n\\t            data: []\\n\\t        }\\n\\t    });\\n\\n\\t    zrUtil.mixin(PieSeries, dataSelectableMixin);\\n\\n\\t    module.exports = PieSeries;\\n\\n\\n/***/ },\\n/* 148 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * Data selectable mixin for chart series.\\n\\t * To eanble data select, option of series must have `selectedMode`.\\n\\t * And each data item will use `selected` to toggle itself selected status\\n\\t *\\n\\t * @module echarts/chart/helper/DataSelectable\\n\\t */\\n\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\n\\t    module.exports = {\\n\\n\\t        updateSelectedMap: function (targetList) {\\n\\t            this._selectTargetMap = zrUtil.reduce(targetList || [], function (targetMap, target) {\\n\\t                targetMap.set(target.name, target);\\n\\t                return targetMap;\\n\\t            }, zrUtil.createHashMap());\\n\\t        },\\n\\t        /**\\n\\t         * @param {string} name\\n\\t         */\\n\\t        // PENGING If selectedMode is null ?\\n\\t        select: function (name) {\\n\\t            var targetMap = this._selectTargetMap;\\n\\t            var target = targetMap.get(name);\\n\\t            var selectedMode = this.get('selectedMode');\\n\\t            if (selectedMode === 'single') {\\n\\t                targetMap.each(function (target) {\\n\\t                    target.selected = false;\\n\\t                });\\n\\t            }\\n\\t            target && (target.selected = true);\\n\\t        },\\n\\n\\t        /**\\n\\t         * @param {string} name\\n\\t         */\\n\\t        unSelect: function (name) {\\n\\t            var target = this._selectTargetMap.get(name);\\n\\t            // var selectedMode = this.get('selectedMode');\\n\\t            // selectedMode !== 'single' && target && (target.selected = false);\\n\\t            target && (target.selected = false);\\n\\t        },\\n\\n\\t        /**\\n\\t         * @param {string} name\\n\\t         */\\n\\t        toggleSelected: function (name) {\\n\\t            var target = this._selectTargetMap.get(name);\\n\\t            if (target != null) {\\n\\t                this[target.selected ? 'unSelect' : 'select'](name);\\n\\t                return target.selected;\\n\\t            }\\n\\t        },\\n\\n\\t        /**\\n\\t         * @param {string} name\\n\\t         */\\n\\t        isSelected: function (name) {\\n\\t            var target = this._selectTargetMap.get(name);\\n\\t            return target && target.selected;\\n\\t        }\\n\\t    };\\n\\n\\n/***/ },\\n/* 149 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var graphic = __webpack_require__(18);\\n\\t    var zrUtil = __webpack_require__(4);\\n\\n\\t    /**\\n\\t     * @param {module:echarts/model/Series} seriesModel\\n\\t     * @param {boolean} hasAnimation\\n\\t     * @inner\\n\\t     */\\n\\t    function updateDataSelected(uid, seriesModel, hasAnimation, api) {\\n\\t        var data = seriesModel.getData();\\n\\t        var dataIndex = this.dataIndex;\\n\\t        var name = data.getName(dataIndex);\\n\\t        var selectedOffset = seriesModel.get('selectedOffset');\\n\\n\\t        api.dispatchAction({\\n\\t            type: 'pieToggleSelect',\\n\\t            from: uid,\\n\\t            name: name,\\n\\t            seriesId: seriesModel.id\\n\\t        });\\n\\n\\t        data.each(function (idx) {\\n\\t            toggleItemSelected(\\n\\t                data.getItemGraphicEl(idx),\\n\\t                data.getItemLayout(idx),\\n\\t                seriesModel.isSelected(data.getName(idx)),\\n\\t                selectedOffset,\\n\\t                hasAnimation\\n\\t            );\\n\\t        });\\n\\t    }\\n\\n\\t    /**\\n\\t     * @param {module:zrender/graphic/Sector} el\\n\\t     * @param {Object} layout\\n\\t     * @param {boolean} isSelected\\n\\t     * @param {number} selectedOffset\\n\\t     * @param {boolean} hasAnimation\\n\\t     * @inner\\n\\t     */\\n\\t    function toggleItemSelected(el, layout, isSelected, selectedOffset, hasAnimation) {\\n\\t        var midAngle = (layout.startAngle + layout.endAngle) / 2;\\n\\n\\t        var dx = Math.cos(midAngle);\\n\\t        var dy = Math.sin(midAngle);\\n\\n\\t        var offset = isSelected ? selectedOffset : 0;\\n\\t        var position = [dx * offset, dy * offset];\\n\\n\\t        hasAnimation\\n\\t            // animateTo will stop revious animation like update transition\\n\\t            ? el.animate()\\n\\t                .when(200, {\\n\\t                    position: position\\n\\t                })\\n\\t                .start('bounceOut')\\n\\t            : el.attr('position', position);\\n\\t    }\\n\\n\\t    /**\\n\\t     * Piece of pie including Sector, Label, LabelLine\\n\\t     * @constructor\\n\\t     * @extends {module:zrender/graphic/Group}\\n\\t     */\\n\\t    function PiePiece(data, idx) {\\n\\n\\t        graphic.Group.call(this);\\n\\n\\t        var sector = new graphic.Sector({\\n\\t            z2: 2\\n\\t        });\\n\\t        var polyline = new graphic.Polyline();\\n\\t        var text = new graphic.Text();\\n\\t        this.add(sector);\\n\\t        this.add(polyline);\\n\\t        this.add(text);\\n\\n\\t        this.updateData(data, idx, true);\\n\\n\\t        // Hover to change label and labelLine\\n\\t        function onEmphasis() {\\n\\t            polyline.ignore = polyline.hoverIgnore;\\n\\t            text.ignore = text.hoverIgnore;\\n\\t        }\\n\\t        function onNormal() {\\n\\t            polyline.ignore = polyline.normalIgnore;\\n\\t            text.ignore = text.normalIgnore;\\n\\t        }\\n\\t        this.on('emphasis', onEmphasis)\\n\\t            .on('normal', onNormal)\\n\\t            .on('mouseover', onEmphasis)\\n\\t            .on('mouseout', onNormal);\\n\\t    }\\n\\n\\t    var piePieceProto = PiePiece.prototype;\\n\\n\\t    function getLabelStyle(data, idx, state, labelModel, labelPosition) {\\n\\t        var textStyleModel = labelModel.getModel('textStyle');\\n\\t        var isLabelInside = labelPosition === 'inside' || labelPosition === 'inner';\\n\\t        return {\\n\\t            fill: textStyleModel.getTextColor()\\n\\t                || (isLabelInside ? '#fff' : data.getItemVisual(idx, 'color')),\\n\\t            opacity: data.getItemVisual(idx, 'opacity'),\\n\\t            textFont: textStyleModel.getFont(),\\n\\t            text: zrUtil.retrieve(\\n\\t                data.hostModel.getFormattedLabel(idx, state), data.getName(idx)\\n\\t            )\\n\\t        };\\n\\t    }\\n\\n\\t    piePieceProto.updateData = function (data, idx, firstCreate) {\\n\\n\\t        var sector = this.childAt(0);\\n\\n\\t        var seriesModel = data.hostModel;\\n\\t        var itemModel = data.getItemModel(idx);\\n\\t        var layout = data.getItemLayout(idx);\\n\\t        var sectorShape = zrUtil.extend({}, layout);\\n\\t        sectorShape.label = null;\\n\\n\\t        if (firstCreate) {\\n\\t            sector.setShape(sectorShape);\\n\\n\\t            var animationType = seriesModel.getShallow('animationType');\\n\\t            if (animationType === 'scale') {\\n\\t                sector.shape.r = layout.r0;\\n\\t                graphic.initProps(sector, {\\n\\t                    shape: {\\n\\t                        r: layout.r\\n\\t                    }\\n\\t                }, seriesModel, idx);\\n\\t            }\\n\\t            // Expansion\\n\\t            else {\\n\\t                sector.shape.endAngle = layout.startAngle;\\n\\t                graphic.updateProps(sector, {\\n\\t                    shape: {\\n\\t                        endAngle: layout.endAngle\\n\\t                    }\\n\\t                }, seriesModel, idx);\\n\\t            }\\n\\n\\t        }\\n\\t        else {\\n\\t            graphic.updateProps(sector, {\\n\\t                shape: sectorShape\\n\\t            }, seriesModel, idx);\\n\\t        }\\n\\n\\t        // Update common style\\n\\t        var itemStyleModel = itemModel.getModel('itemStyle');\\n\\t        var visualColor = data.getItemVisual(idx, 'color');\\n\\n\\t        sector.useStyle(\\n\\t            zrUtil.defaults(\\n\\t                {\\n\\t                    lineJoin: 'bevel',\\n\\t                    fill: visualColor\\n\\t                },\\n\\t                itemStyleModel.getModel('normal').getItemStyle()\\n\\t            )\\n\\t        );\\n\\t        sector.hoverStyle = itemStyleModel.getModel('emphasis').getItemStyle();\\n\\n\\t        var cursorStyle = itemModel.getShallow('cursor');\\n\\t        cursorStyle && sector.attr('cursor', cursorStyle);\\n\\n\\t        // Toggle selected\\n\\t        toggleItemSelected(\\n\\t            this,\\n\\t            data.getItemLayout(idx),\\n\\t            itemModel.get('selected'),\\n\\t            seriesModel.get('selectedOffset'),\\n\\t            seriesModel.get('animation')\\n\\t        );\\n\\n\\t        function onEmphasis() {\\n\\t            // Sector may has animation of updating data. Force to move to the last frame\\n\\t            // Or it may stopped on the wrong shape\\n\\t            sector.stopAnimation(true);\\n\\t            sector.animateTo({\\n\\t                shape: {\\n\\t                    r: layout.r + 10\\n\\t                }\\n\\t            }, 300, 'elasticOut');\\n\\t        }\\n\\t        function onNormal() {\\n\\t            sector.stopAnimation(true);\\n\\t            sector.animateTo({\\n\\t                shape: {\\n\\t                    r: layout.r\\n\\t                }\\n\\t            }, 300, 'elasticOut');\\n\\t        }\\n\\t        sector.off('mouseover').off('mouseout').off('emphasis').off('normal');\\n\\t        if (itemModel.get('hoverAnimation') && seriesModel.isAnimationEnabled()) {\\n\\t            sector\\n\\t                .on('mouseover', onEmphasis)\\n\\t                .on('mouseout', onNormal)\\n\\t                .on('emphasis', onEmphasis)\\n\\t                .on('normal', onNormal);\\n\\t        }\\n\\n\\t        this._updateLabel(data, idx);\\n\\n\\t        graphic.setHoverStyle(this);\\n\\t    };\\n\\n\\t    piePieceProto._updateLabel = function (data, idx) {\\n\\n\\t        var labelLine = this.childAt(1);\\n\\t        var labelText = this.childAt(2);\\n\\n\\t        var seriesModel = data.hostModel;\\n\\t        var itemModel = data.getItemModel(idx);\\n\\t        var layout = data.getItemLayout(idx);\\n\\t        var labelLayout = layout.label;\\n\\t        var visualColor = data.getItemVisual(idx, 'color');\\n\\n\\t        graphic.updateProps(labelLine, {\\n\\t            shape: {\\n\\t                points: labelLayout.linePoints || [\\n\\t                    [labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y]\\n\\t                ]\\n\\t            }\\n\\t        }, seriesModel, idx);\\n\\n\\t        graphic.updateProps(labelText, {\\n\\t            style: {\\n\\t                x: labelLayout.x,\\n\\t                y: labelLayout.y\\n\\t            }\\n\\t        }, seriesModel, idx);\\n\\t        labelText.attr({\\n\\t            style: {\\n\\t                textVerticalAlign: labelLayout.verticalAlign,\\n\\t                textAlign: labelLayout.textAlign,\\n\\t                textFont: labelLayout.font\\n\\t            },\\n\\t            rotation: labelLayout.rotation,\\n\\t            origin: [labelLayout.x, labelLayout.y],\\n\\t            z2: 10\\n\\t        });\\n\\n\\t        var labelModel = itemModel.getModel('label.normal');\\n\\t        var labelHoverModel = itemModel.getModel('label.emphasis');\\n\\t        var labelLineModel = itemModel.getModel('labelLine.normal');\\n\\t        var labelLineHoverModel = itemModel.getModel('labelLine.emphasis');\\n\\t        var labelPosition = labelModel.get('position') || labelHoverModel.get('position');\\n\\n\\t        labelText.setStyle(getLabelStyle(data, idx, 'normal', labelModel, labelPosition));\\n\\n\\t        labelText.ignore = labelText.normalIgnore = !labelModel.get('show');\\n\\t        labelText.hoverIgnore = !labelHoverModel.get('show');\\n\\n\\t        labelLine.ignore = labelLine.normalIgnore = !labelLineModel.get('show');\\n\\t        labelLine.hoverIgnore = !labelLineHoverModel.get('show');\\n\\n\\t        // Default use item visual color\\n\\t        labelLine.setStyle({\\n\\t            stroke: visualColor,\\n\\t            opacity: data.getItemVisual(idx, 'opacity')\\n\\t        });\\n\\t        labelLine.setStyle(labelLineModel.getModel('lineStyle').getLineStyle());\\n\\n\\t        labelText.hoverStyle = getLabelStyle(data, idx, 'emphasis', labelHoverModel, labelPosition);\\n\\t        labelLine.hoverStyle = labelLineHoverModel.getModel('lineStyle').getLineStyle();\\n\\n\\t        var smooth = labelLineModel.get('smooth');\\n\\t        if (smooth && smooth === true) {\\n\\t            smooth = 0.4;\\n\\t        }\\n\\t        labelLine.setShape({\\n\\t            smooth: smooth\\n\\t        });\\n\\t    };\\n\\n\\t    zrUtil.inherits(PiePiece, graphic.Group);\\n\\n\\n\\t    // Pie view\\n\\t    var Pie = __webpack_require__(80).extend({\\n\\n\\t        type: 'pie',\\n\\n\\t        init: function () {\\n\\t            var sectorGroup = new graphic.Group();\\n\\t            this._sectorGroup = sectorGroup;\\n\\t        },\\n\\n\\t        render: function (seriesModel, ecModel, api, payload) {\\n\\t            if (payload && (payload.from === this.uid)) {\\n\\t                return;\\n\\t            }\\n\\n\\t            var data = seriesModel.getData();\\n\\t            var oldData = this._data;\\n\\t            var group = this.group;\\n\\n\\t            var hasAnimation = ecModel.get('animation');\\n\\t            var isFirstRender = !oldData;\\n\\t            var animationType = seriesModel.get('animationType');\\n\\n\\t            var onSectorClick = zrUtil.curry(\\n\\t                updateDataSelected, this.uid, seriesModel, hasAnimation, api\\n\\t            );\\n\\n\\t            var selectedMode = seriesModel.get('selectedMode');\\n\\n\\t            data.diff(oldData)\\n\\t                .add(function (idx) {\\n\\t                    var piePiece = new PiePiece(data, idx);\\n\\t                    // Default expansion animation\\n\\t                    if (isFirstRender && animationType !== 'scale') {\\n\\t                        piePiece.eachChild(function (child) {\\n\\t                            child.stopAnimation(true);\\n\\t                        });\\n\\t                    }\\n\\n\\t                    selectedMode && piePiece.on('click', onSectorClick);\\n\\n\\t                    data.setItemGraphicEl(idx, piePiece);\\n\\n\\t                    group.add(piePiece);\\n\\t                })\\n\\t                .update(function (newIdx, oldIdx) {\\n\\t                    var piePiece = oldData.getItemGraphicEl(oldIdx);\\n\\n\\t                    piePiece.updateData(data, newIdx);\\n\\n\\t                    piePiece.off('click');\\n\\t                    selectedMode && piePiece.on('click', onSectorClick);\\n\\t                    group.add(piePiece);\\n\\t                    data.setItemGraphicEl(newIdx, piePiece);\\n\\t                })\\n\\t                .remove(function (idx) {\\n\\t                    var piePiece = oldData.getItemGraphicEl(idx);\\n\\t                    group.remove(piePiece);\\n\\t                })\\n\\t                .execute();\\n\\n\\t            if (\\n\\t                hasAnimation && isFirstRender && data.count() > 0\\n\\t                // Default expansion animation\\n\\t                && animationType !== 'scale'\\n\\t            ) {\\n\\t                var shape = data.getItemLayout(0);\\n\\t                var r = Math.max(api.getWidth(), api.getHeight()) / 2;\\n\\n\\t                var removeClipPath = zrUtil.bind(group.removeClipPath, group);\\n\\t                group.setClipPath(this._createClipPath(\\n\\t                    shape.cx, shape.cy, r, shape.startAngle, shape.clockwise, removeClipPath, seriesModel\\n\\t                ));\\n\\t            }\\n\\n\\t            this._data = data;\\n\\t        },\\n\\n\\t        dispose: function () {},\\n\\n\\t        _createClipPath: function (\\n\\t            cx, cy, r, startAngle, clockwise, cb, seriesModel\\n\\t        ) {\\n\\t            var clipPath = new graphic.Sector({\\n\\t                shape: {\\n\\t                    cx: cx,\\n\\t                    cy: cy,\\n\\t                    r0: 0,\\n\\t                    r: r,\\n\\t                    startAngle: startAngle,\\n\\t                    endAngle: startAngle,\\n\\t                    clockwise: clockwise\\n\\t                }\\n\\t            });\\n\\n\\t            graphic.initProps(clipPath, {\\n\\t                shape: {\\n\\t                    endAngle: startAngle + (clockwise ? 1 : -1) * Math.PI * 2\\n\\t                }\\n\\t            }, seriesModel, cb);\\n\\n\\t            return clipPath;\\n\\t        },\\n\\n\\t        /**\\n\\t         * @implement\\n\\t         */\\n\\t        containPoint: function (point, seriesModel) {\\n\\t            var data = seriesModel.getData();\\n\\t            var itemLayout = data.getItemLayout(0);\\n\\t            if (itemLayout) {\\n\\t                var dx = point[0] - itemLayout.cx;\\n\\t                var dy = point[1] - itemLayout.cy;\\n\\t                var radius = Math.sqrt(dx * dx + dy * dy);\\n\\t                return radius <= itemLayout.r && radius >= itemLayout.r0;\\n\\t            }\\n\\t        }\\n\\n\\t    });\\n\\n\\t    module.exports = Pie;\\n\\n\\n/***/ },\\n/* 150 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\t    var echarts = __webpack_require__(1);\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    module.exports = function (seriesType, actionInfos) {\\n\\t        zrUtil.each(actionInfos, function (actionInfo) {\\n\\t            actionInfo.update = 'updateView';\\n\\t            /**\\n\\t             * @payload\\n\\t             * @property {string} seriesName\\n\\t             * @property {string} name\\n\\t             */\\n\\t            echarts.registerAction(actionInfo, function (payload, ecModel) {\\n\\t                var selected = {};\\n\\t                ecModel.eachComponent(\\n\\t                    {mainType: 'series', subType: seriesType, query: payload},\\n\\t                    function (seriesModel) {\\n\\t                        if (seriesModel[actionInfo.method]) {\\n\\t                            seriesModel[actionInfo.method](payload.name);\\n\\t                        }\\n\\t                        var data = seriesModel.getData();\\n\\t                        // Create selected map\\n\\t                        data.each(function (idx) {\\n\\t                            var name = data.getName(idx);\\n\\t                            selected[name] = seriesModel.isSelected(name) || false;\\n\\t                        });\\n\\t                    }\\n\\t                );\\n\\t                return {\\n\\t                    name: payload.name,\\n\\t                    selected: selected\\n\\t                };\\n\\t            });\\n\\t        });\\n\\t    };\\n\\n\\n/***/ },\\n/* 151 */\\n/***/ function(module, exports) {\\n\\n\\t// Pick color from palette for each data item.\\n\\t// Applicable for charts that require applying color palette\\n\\t// in data level (like pie, funnel, chord).\\n\\n\\n\\t    module.exports = function (seriesType, ecModel) {\\n\\t        // Pie and funnel may use diferrent scope\\n\\t        var paletteScope = {};\\n\\t        ecModel.eachRawSeriesByType(seriesType, function (seriesModel) {\\n\\t            var dataAll = seriesModel.getRawData();\\n\\t            var idxMap = {};\\n\\t            if (!ecModel.isSeriesFiltered(seriesModel)) {\\n\\t                var data = seriesModel.getData();\\n\\t                data.each(function (idx) {\\n\\t                    var rawIdx = data.getRawIndex(idx);\\n\\t                    idxMap[rawIdx] = idx;\\n\\t                });\\n\\t                dataAll.each(function (rawIdx) {\\n\\t                    var filteredIdx = idxMap[rawIdx];\\n\\n\\t                    // If series.itemStyle.normal.color is a function. itemVisual may be encoded\\n\\t                    var singleDataColor = filteredIdx != null\\n\\t                        && data.getItemVisual(filteredIdx, 'color', true);\\n\\n\\t                    if (!singleDataColor) {\\n\\t                        // FIXME Performance\\n\\t                        var itemModel = dataAll.getItemModel(rawIdx);\\n\\t                        var color = itemModel.get('itemStyle.normal.color')\\n\\t                            || seriesModel.getColorFromPalette(dataAll.getName(rawIdx), paletteScope);\\n\\t                        // Legend may use the visual info in data before processed\\n\\t                        dataAll.setItemVisual(rawIdx, 'color', color);\\n\\n\\t                        // Data is not filtered\\n\\t                        if (filteredIdx != null) {\\n\\t                            data.setItemVisual(filteredIdx, 'color', color);\\n\\t                        }\\n\\t                    }\\n\\t                    else {\\n\\t                        // Set data all color for legend\\n\\t                        dataAll.setItemVisual(rawIdx, 'color', singleDataColor);\\n\\t                    }\\n\\t                });\\n\\t            }\\n\\t        });\\n\\t    };\\n\\n\\n/***/ },\\n/* 152 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var numberUtil = __webpack_require__(7);\\n\\t    var parsePercent = numberUtil.parsePercent;\\n\\t    var labelLayout = __webpack_require__(153);\\n\\t    var zrUtil = __webpack_require__(4);\\n\\n\\t    var PI2 = Math.PI * 2;\\n\\t    var RADIAN = Math.PI / 180;\\n\\n\\t    module.exports = function (seriesType, ecModel, api, payload) {\\n\\t        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\\n\\t            var center = seriesModel.get('center');\\n\\t            var radius = seriesModel.get('radius');\\n\\n\\t            if (!zrUtil.isArray(radius)) {\\n\\t                radius = [0, radius];\\n\\t            }\\n\\t            if (!zrUtil.isArray(center)) {\\n\\t                center = [center, center];\\n\\t            }\\n\\n\\t            var width = api.getWidth();\\n\\t            var height = api.getHeight();\\n\\t            var size = Math.min(width, height);\\n\\t            var cx = parsePercent(center[0], width);\\n\\t            var cy = parsePercent(center[1], height);\\n\\t            var r0 = parsePercent(radius[0], size / 2);\\n\\t            var r = parsePercent(radius[1], size / 2);\\n\\n\\t            var data = seriesModel.getData();\\n\\n\\t            var startAngle = -seriesModel.get('startAngle') * RADIAN;\\n\\n\\t            var minAngle = seriesModel.get('minAngle') * RADIAN;\\n\\n\\t            var validDataCount = 0;\\n\\t            data.each('value', function (value) {\\n\\t                !isNaN(value) && validDataCount++;\\n\\t            });\\n\\n\\t            var sum = data.getSum('value');\\n\\t            // Sum may be 0\\n\\t            var unitRadian = Math.PI / (sum || validDataCount) * 2;\\n\\n\\t            var clockwise = seriesModel.get('clockwise');\\n\\n\\t            var roseType = seriesModel.get('roseType');\\n\\t            var stillShowZeroSum = seriesModel.get('stillShowZeroSum');\\n\\n\\t            // [0...max]\\n\\t            var extent = data.getDataExtent('value');\\n\\t            extent[0] = 0;\\n\\n\\t            // In the case some sector angle is smaller than minAngle\\n\\t            var restAngle = PI2;\\n\\t            var valueSumLargerThanMinAngle = 0;\\n\\n\\t            var currentAngle = startAngle;\\n\\t            var dir = clockwise ? 1 : -1;\\n\\n\\t            data.each('value', function (value, idx) {\\n\\t                var angle;\\n\\t                if (isNaN(value)) {\\n\\t                    data.setItemLayout(idx, {\\n\\t                        angle: NaN,\\n\\t                        startAngle: NaN,\\n\\t                        endAngle: NaN,\\n\\t                        clockwise: clockwise,\\n\\t                        cx: cx,\\n\\t                        cy: cy,\\n\\t                        r0: r0,\\n\\t                        r: roseType\\n\\t                            ? NaN\\n\\t                            : r\\n\\t                    });\\n\\t                    return;\\n\\t                }\\n\\n\\t                // FIXME 兼容 2.0 但是 roseType 是 area 的时候才是这样？\\n\\t                if (roseType !== 'area') {\\n\\t                    angle = (sum === 0 && stillShowZeroSum)\\n\\t                        ? unitRadian : (value * unitRadian);\\n\\t                }\\n\\t                else {\\n\\t                    angle = PI2 / validDataCount;\\n\\t                }\\n\\n\\t                if (angle < minAngle) {\\n\\t                    angle = minAngle;\\n\\t                    restAngle -= minAngle;\\n\\t                }\\n\\t                else {\\n\\t                    valueSumLargerThanMinAngle += value;\\n\\t                }\\n\\n\\t                var endAngle = currentAngle + dir * angle;\\n\\t                data.setItemLayout(idx, {\\n\\t                    angle: angle,\\n\\t                    startAngle: currentAngle,\\n\\t                    endAngle: endAngle,\\n\\t                    clockwise: clockwise,\\n\\t                    cx: cx,\\n\\t                    cy: cy,\\n\\t                    r0: r0,\\n\\t                    r: roseType\\n\\t                        ? numberUtil.linearMap(value, extent, [r0, r])\\n\\t                        : r\\n\\t                });\\n\\n\\t                currentAngle = endAngle;\\n\\t            }, true);\\n\\n\\t            // Some sector is constrained by minAngle\\n\\t            // Rest sectors needs recalculate angle\\n\\t            if (restAngle < PI2 && validDataCount) {\\n\\t                // Average the angle if rest angle is not enough after all angles is\\n\\t                // Constrained by minAngle\\n\\t                if (restAngle <= 1e-3) {\\n\\t                    var angle = PI2 / validDataCount;\\n\\t                    data.each('value', function (value, idx) {\\n\\t                        if (!isNaN(value)) {\\n\\t                            var layout = data.getItemLayout(idx);\\n\\t                            layout.angle = angle;\\n\\t                            layout.startAngle = startAngle + dir * idx * angle;\\n\\t                            layout.endAngle = startAngle + dir * (idx + 1) * angle;\\n\\t                        }\\n\\t                    });\\n\\t                }\\n\\t                else {\\n\\t                    unitRadian = restAngle / valueSumLargerThanMinAngle;\\n\\t                    currentAngle = startAngle;\\n\\t                    data.each('value', function (value, idx) {\\n\\t                        if (!isNaN(value)) {\\n\\t                            var layout = data.getItemLayout(idx);\\n\\t                            var angle = layout.angle === minAngle\\n\\t                                ? minAngle : value * unitRadian;\\n\\t                            layout.startAngle = currentAngle;\\n\\t                            layout.endAngle = currentAngle + dir * angle;\\n\\t                            currentAngle += dir * angle;\\n\\t                        }\\n\\t                    });\\n\\t                }\\n\\t            }\\n\\n\\t            labelLayout(seriesModel, r, width, height);\\n\\t        });\\n\\t    };\\n\\n\\n/***/ },\\n/* 153 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t'use strict';\\n\\t// FIXME emphasis label position is not same with normal label position\\n\\n\\n\\t    var textContain = __webpack_require__(8);\\n\\n\\t    function adjustSingleSide(list, cx, cy, r, dir, viewWidth, viewHeight) {\\n\\t        list.sort(function (a, b) {\\n\\t            return a.y - b.y;\\n\\t        });\\n\\n\\t        // 压\\n\\t        function shiftDown(start, end, delta, dir) {\\n\\t            for (var j = start; j < end; j++) {\\n\\t                list[j].y += delta;\\n\\t                if (j > start\\n\\t                    && j + 1 < end\\n\\t                    && list[j + 1].y > list[j].y + list[j].height\\n\\t                ) {\\n\\t                    shiftUp(j, delta / 2);\\n\\t                    return;\\n\\t                }\\n\\t            }\\n\\n\\t            shiftUp(end - 1, delta / 2);\\n\\t        }\\n\\n\\t        // 弹\\n\\t        function shiftUp(end, delta) {\\n\\t            for (var j = end; j >= 0; j--) {\\n\\t                list[j].y -= delta;\\n\\t                if (j > 0\\n\\t                    && list[j].y > list[j - 1].y + list[j - 1].height\\n\\t                ) {\\n\\t                    break;\\n\\t                }\\n\\t            }\\n\\t        }\\n\\n\\t        function changeX(list, isDownList, cx, cy, r, dir) {\\n\\t            var lastDeltaX = dir > 0\\n\\t                ? isDownList                // 右侧\\n\\t                    ? Number.MAX_VALUE      // 下\\n\\t                    : 0                     // 上\\n\\t                : isDownList                // 左侧\\n\\t                    ? Number.MAX_VALUE      // 下\\n\\t                    : 0;                    // 上\\n\\n\\t            for (var i = 0, l = list.length; i < l; i++) {\\n\\t                // Not change x for center label\\n\\t                if (list[i].position === 'center') {\\n\\t                    continue;\\n\\t                }\\n\\t                var deltaY = Math.abs(list[i].y - cy);\\n\\t                var length = list[i].len;\\n\\t                var length2 = list[i].len2;\\n\\t                var deltaX = (deltaY < r + length)\\n\\t                    ? Math.sqrt(\\n\\t                          (r + length + length2) * (r + length + length2)\\n\\t                          - deltaY * deltaY\\n\\t                      )\\n\\t                    : Math.abs(list[i].x - cx);\\n\\t                if (isDownList && deltaX >= lastDeltaX) {\\n\\t                    // 右下，左下\\n\\t                    deltaX = lastDeltaX - 10;\\n\\t                }\\n\\t                if (!isDownList && deltaX <= lastDeltaX) {\\n\\t                    // 右上，左上\\n\\t                    deltaX = lastDeltaX + 10;\\n\\t                }\\n\\n\\t                list[i].x = cx + deltaX * dir;\\n\\t                lastDeltaX = deltaX;\\n\\t            }\\n\\t        }\\n\\n\\t        var lastY = 0;\\n\\t        var delta;\\n\\t        var len = list.length;\\n\\t        var upList = [];\\n\\t        var downList = [];\\n\\t        for (var i = 0; i < len; i++) {\\n\\t            delta = list[i].y - lastY;\\n\\t            if (delta < 0) {\\n\\t                shiftDown(i, len, -delta, dir);\\n\\t            }\\n\\t            lastY = list[i].y + list[i].height;\\n\\t        }\\n\\t        if (viewHeight - lastY < 0) {\\n\\t            shiftUp(len - 1, lastY - viewHeight);\\n\\t        }\\n\\t        for (var i = 0; i < len; i++) {\\n\\t            if (list[i].y >= cy) {\\n\\t                downList.push(list[i]);\\n\\t            }\\n\\t            else {\\n\\t                upList.push(list[i]);\\n\\t            }\\n\\t        }\\n\\t        changeX(upList, false, cx, cy, r, dir);\\n\\t        changeX(downList, true, cx, cy, r, dir);\\n\\t    }\\n\\n\\t    function avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight) {\\n\\t        var leftList = [];\\n\\t        var rightList = [];\\n\\t        for (var i = 0; i < labelLayoutList.length; i++) {\\n\\t            if (labelLayoutList[i].x < cx) {\\n\\t                leftList.push(labelLayoutList[i]);\\n\\t            }\\n\\t            else {\\n\\t                rightList.push(labelLayoutList[i]);\\n\\t            }\\n\\t        }\\n\\n\\t        adjustSingleSide(rightList, cx, cy, r, 1, viewWidth, viewHeight);\\n\\t        adjustSingleSide(leftList, cx, cy, r, -1, viewWidth, viewHeight);\\n\\n\\t        for (var i = 0; i < labelLayoutList.length; i++) {\\n\\t            var linePoints = labelLayoutList[i].linePoints;\\n\\t            if (linePoints) {\\n\\t                var dist = linePoints[1][0] - linePoints[2][0];\\n\\t                if (labelLayoutList[i].x < cx) {\\n\\t                    linePoints[2][0] = labelLayoutList[i].x + 3;\\n\\t                }\\n\\t                else {\\n\\t                    linePoints[2][0] = labelLayoutList[i].x - 3;\\n\\t                }\\n\\t                linePoints[1][1] = linePoints[2][1] = labelLayoutList[i].y;\\n\\t                linePoints[1][0] = linePoints[2][0] + dist;\\n\\t            }\\n\\t        }\\n\\t    }\\n\\n\\t    module.exports = function (seriesModel, r, viewWidth, viewHeight) {\\n\\t        var data = seriesModel.getData();\\n\\t        var labelLayoutList = [];\\n\\t        var cx;\\n\\t        var cy;\\n\\t        var hasLabelRotate = false;\\n\\n\\t        data.each(function (idx) {\\n\\t            var layout = data.getItemLayout(idx);\\n\\n\\t            var itemModel = data.getItemModel(idx);\\n\\t            var labelModel = itemModel.getModel('label.normal');\\n\\t            // Use position in normal or emphasis\\n\\t            var labelPosition = labelModel.get('position') || itemModel.get('label.emphasis.position');\\n\\n\\t            var labelLineModel = itemModel.getModel('labelLine.normal');\\n\\t            var labelLineLen = labelLineModel.get('length');\\n\\t            var labelLineLen2 = labelLineModel.get('length2');\\n\\n\\t            var midAngle = (layout.startAngle + layout.endAngle) / 2;\\n\\t            var dx = Math.cos(midAngle);\\n\\t            var dy = Math.sin(midAngle);\\n\\n\\t            var textX;\\n\\t            var textY;\\n\\t            var linePoints;\\n\\t            var textAlign;\\n\\n\\t            cx = layout.cx;\\n\\t            cy = layout.cy;\\n\\n\\t            var isLabelInside = labelPosition === 'inside' || labelPosition === 'inner';\\n\\t            if (labelPosition === 'center') {\\n\\t                textX = layout.cx;\\n\\t                textY = layout.cy;\\n\\t                textAlign = 'center';\\n\\t            }\\n\\t            else {\\n\\t                var x1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dx : layout.r * dx) + cx;\\n\\t                var y1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dy : layout.r * dy) + cy;\\n\\n\\t                textX = x1 + dx * 3;\\n\\t                textY = y1 + dy * 3;\\n\\n\\t                if (!isLabelInside) {\\n\\t                    // For roseType\\n\\t                    var x2 = x1 + dx * (labelLineLen + r - layout.r);\\n\\t                    var y2 = y1 + dy * (labelLineLen + r - layout.r);\\n\\t                    var x3 = x2 + ((dx < 0 ? -1 : 1) * labelLineLen2);\\n\\t                    var y3 = y2;\\n\\n\\t                    textX = x3 + (dx < 0 ? -5 : 5);\\n\\t                    textY = y3;\\n\\t                    linePoints = [[x1, y1], [x2, y2], [x3, y3]];\\n\\t                }\\n\\n\\t                textAlign = isLabelInside ? 'center' : (dx > 0 ? 'left' : 'right');\\n\\t            }\\n\\t            var font = labelModel.getModel('textStyle').getFont();\\n\\n\\t            var labelRotate = labelModel.get('rotate')\\n\\t                ? (dx < 0 ? -midAngle + Math.PI : -midAngle) : 0;\\n\\t            var text = seriesModel.getFormattedLabel(idx, 'normal')\\n\\t                        || data.getName(idx);\\n\\t            var textRect = textContain.getBoundingRect(\\n\\t                text, font, textAlign, 'top'\\n\\t            );\\n\\t            hasLabelRotate = !!labelRotate;\\n\\t            layout.label = {\\n\\t                x: textX,\\n\\t                y: textY,\\n\\t                position: labelPosition,\\n\\t                height: textRect.height,\\n\\t                len: labelLineLen,\\n\\t                len2: labelLineLen2,\\n\\t                linePoints: linePoints,\\n\\t                textAlign: textAlign,\\n\\t                verticalAlign: 'middle',\\n\\t                font: font,\\n\\t                rotation: labelRotate\\n\\t            };\\n\\n\\t            // Not layout the inside label\\n\\t            if (!isLabelInside) {\\n\\t                labelLayoutList.push(layout.label);\\n\\t            }\\n\\t        });\\n\\t        if (!hasLabelRotate && seriesModel.get('avoidLabelOverlap')) {\\n\\t            avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight);\\n\\t        }\\n\\t    };\\n\\n\\n/***/ },\\n/* 154 */\\n/***/ function(module, exports) {\\n\\n\\t\\n\\t    module.exports = function (seriesType, ecModel) {\\n\\t        var legendModels = ecModel.findComponents({\\n\\t            mainType: 'legend'\\n\\t        });\\n\\t        if (!legendModels || !legendModels.length) {\\n\\t            return;\\n\\t        }\\n\\t        ecModel.eachSeriesByType(seriesType, function (series) {\\n\\t            var data = series.getData();\\n\\t            data.filterSelf(function (idx) {\\n\\t                var name = data.getName(idx);\\n\\t                // If in any legend component the status is not selected.\\n\\t                for (var i = 0; i < legendModels.length; i++) {\\n\\t                    if (!legendModels[i].isSelected(name)) {\\n\\t                        return false;\\n\\t                    }\\n\\t                }\\n\\t                return true;\\n\\t            }, this);\\n\\t        }, this);\\n\\t    };\\n\\n\\n/***/ },\\n/* 155 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var echarts = __webpack_require__(1);\\n\\n\\t    __webpack_require__(156);\\n\\t    __webpack_require__(157);\\n\\n\\t    echarts.registerVisual(zrUtil.curry(\\n\\t        __webpack_require__(121), 'scatter', 'circle', null\\n\\t    ));\\n\\t    echarts.registerLayout(zrUtil.curry(\\n\\t        __webpack_require__(122), 'scatter'\\n\\t    ));\\n\\n\\t    // In case developer forget to include grid component\\n\\t    __webpack_require__(124);\\n\\n\\n/***/ },\\n/* 156 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t'use strict';\\n\\n\\n\\t    var createListFromArray = __webpack_require__(109);\\n\\t    var SeriesModel = __webpack_require__(78);\\n\\n\\t    module.exports = SeriesModel.extend({\\n\\n\\t        type: 'series.scatter',\\n\\n\\t        dependencies: ['grid', 'polar', 'geo', 'singleAxis', 'calendar'],\\n\\n\\t        getInitialData: function (option, ecModel) {\\n\\t            return createListFromArray(option.data, this, ecModel);\\n\\t        },\\n\\n\\t        brushSelector: 'point',\\n\\n\\t        defaultOption: {\\n\\t            coordinateSystem: 'cartesian2d',\\n\\t            zlevel: 0,\\n\\t            z: 2,\\n\\t            legendHoverLink: true,\\n\\n\\t            hoverAnimation: true,\\n\\t            // Cartesian coordinate system\\n\\t            // xAxisIndex: 0,\\n\\t            // yAxisIndex: 0,\\n\\n\\t            // Polar coordinate system\\n\\t            // polarIndex: 0,\\n\\n\\t            // Geo coordinate system\\n\\t            // geoIndex: 0,\\n\\n\\t            // symbol: null,        // 图形类型\\n\\t            symbolSize: 10,          // 图形大小，半宽（半径）参数，当图形为方向或菱形则总宽度为symbolSize * 2\\n\\t            // symbolRotate: null,  // 图形旋转控制\\n\\n\\t            large: false,\\n\\t            // Available when large is true\\n\\t            largeThreshold: 2000,\\n\\t            // cursor: null,\\n\\n\\t            // label: {\\n\\t                // normal: {\\n\\t                    // show: false\\n\\t                    // distance: 5,\\n\\t                    // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\\n\\t                    // position: 默认自适应，水平布局为'top'，垂直布局为'right'，可选为\\n\\t                    //           'inside'|'left'|'right'|'top'|'bottom'\\n\\t                    // textStyle: null      // 默认使用全局文本样式，详见TEXTSTYLE\\n\\t            //     }\\n\\t            // },\\n\\t            itemStyle: {\\n\\t                normal: {\\n\\t                    opacity: 0.8\\n\\t                    // color: 各异\\n\\t                }\\n\\t            }\\n\\t        }\\n\\n\\t    });\\n\\n\\n/***/ },\\n/* 157 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var SymbolDraw = __webpack_require__(116);\\n\\t    var LargeSymbolDraw = __webpack_require__(158);\\n\\n\\t    __webpack_require__(1).extendChartView({\\n\\n\\t        type: 'scatter',\\n\\n\\t        init: function () {\\n\\t            this._normalSymbolDraw = new SymbolDraw();\\n\\t            this._largeSymbolDraw = new LargeSymbolDraw();\\n\\t        },\\n\\n\\t        render: function (seriesModel, ecModel, api) {\\n\\t            var data = seriesModel.getData();\\n\\t            var largeSymbolDraw = this._largeSymbolDraw;\\n\\t            var normalSymbolDraw = this._normalSymbolDraw;\\n\\t            var group = this.group;\\n\\n\\t            var symbolDraw = seriesModel.get('large') && data.count() > seriesModel.get('largeThreshold')\\n\\t                ? largeSymbolDraw : normalSymbolDraw;\\n\\n\\t            this._symbolDraw = symbolDraw;\\n\\t            symbolDraw.updateData(data);\\n\\t            group.add(symbolDraw.group);\\n\\n\\t            group.remove(\\n\\t                symbolDraw === largeSymbolDraw\\n\\t                ? normalSymbolDraw.group : largeSymbolDraw.group\\n\\t            );\\n\\t        },\\n\\n\\t        updateLayout: function (seriesModel) {\\n\\t            this._symbolDraw.updateLayout(seriesModel);\\n\\t        },\\n\\n\\t        remove: function (ecModel, api) {\\n\\t            this._symbolDraw && this._symbolDraw.remove(api, true);\\n\\t        },\\n\\n\\t        dispose: function () {}\\n\\t    });\\n\\n\\n/***/ },\\n/* 158 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t// TODO Batch by color\\n\\n\\n\\n\\t    var graphic = __webpack_require__(18);\\n\\t    var symbolUtil = __webpack_require__(111);\\n\\n\\t    var LargeSymbolPath = graphic.extendShape({\\n\\n\\t        shape: {\\n\\t            points: null,\\n\\t            sizes: null\\n\\t        },\\n\\n\\t        symbolProxy: null,\\n\\n\\t        buildPath: function (path, shape) {\\n\\t            var points = shape.points;\\n\\t            var sizes = shape.sizes;\\n\\n\\t            var symbolProxy = this.symbolProxy;\\n\\t            var symbolProxyShape = symbolProxy.shape;\\n\\t            for (var i = 0; i < points.length; i++) {\\n\\t                var pt = points[i];\\n\\n\\t                if (isNaN(pt[0]) || isNaN(pt[1])) {\\n\\t                    continue;\\n\\t                }\\n\\n\\t                var size = sizes[i];\\n\\t                if (size[0] < 4) {\\n\\t                    // Optimize for small symbol\\n\\t                    path.rect(\\n\\t                        pt[0] - size[0] / 2, pt[1] - size[1] / 2,\\n\\t                        size[0], size[1]\\n\\t                    );\\n\\t                }\\n\\t                else {\\n\\t                    symbolProxyShape.x = pt[0] - size[0] / 2;\\n\\t                    symbolProxyShape.y = pt[1] - size[1] / 2;\\n\\t                    symbolProxyShape.width = size[0];\\n\\t                    symbolProxyShape.height = size[1];\\n\\n\\t                    symbolProxy.buildPath(path, symbolProxyShape, true);\\n\\t                }\\n\\t            }\\n\\t        },\\n\\n\\t        findDataIndex: function (x, y) {\\n\\t            var shape = this.shape;\\n\\t            var points = shape.points;\\n\\t            var sizes = shape.sizes;\\n\\n\\t            // Not consider transform\\n\\t            // Treat each element as a rect\\n\\t            // top down traverse\\n\\t            for (var i = points.length - 1; i >= 0; i--) {\\n\\t                var pt = points[i];\\n\\t                var size = sizes[i];\\n\\t                var x0 = pt[0] - size[0] / 2;\\n\\t                var y0 = pt[1] - size[1] / 2;\\n\\t                if (x >= x0 && y >= y0 && x <= x0 + size[0] && y <= y0 + size[1]) {\\n\\t                    // i is dataIndex\\n\\t                    return i;\\n\\t                }\\n\\t            }\\n\\n\\t            return -1;\\n\\t        }\\n\\t    });\\n\\n\\t    function LargeSymbolDraw() {\\n\\t        this.group = new graphic.Group();\\n\\n\\t        this._symbolEl = new LargeSymbolPath({\\n\\t            // rectHover: true,\\n\\t            // cursor: 'default'\\n\\t        });\\n\\t    }\\n\\n\\t    var largeSymbolProto = LargeSymbolDraw.prototype;\\n\\n\\t    /**\\n\\t     * Update symbols draw by new data\\n\\t     * @param {module:echarts/data/List} data\\n\\t     */\\n\\t    largeSymbolProto.updateData = function (data) {\\n\\t        this.group.removeAll();\\n\\n\\t        var symbolEl = this._symbolEl;\\n\\n\\t        var seriesModel = data.hostModel;\\n\\n\\t        symbolEl.setShape({\\n\\t            points: data.mapArray(data.getItemLayout),\\n\\t            sizes: data.mapArray(\\n\\t                function (idx) {\\n\\t                    var size = data.getItemVisual(idx, 'symbolSize');\\n\\t                    if (!(size instanceof Array)) {\\n\\t                        size = [size, size];\\n\\t                    }\\n\\t                    return size;\\n\\t                }\\n\\t            )\\n\\t        });\\n\\n\\t        // Create symbolProxy to build path for each data\\n\\t        symbolEl.symbolProxy = symbolUtil.createSymbol(\\n\\t            data.getVisual('symbol'), 0, 0, 0, 0\\n\\t        );\\n\\t        // Use symbolProxy setColor method\\n\\t        symbolEl.setColor = symbolEl.symbolProxy.setColor;\\n\\n\\t        symbolEl.useStyle(\\n\\t            seriesModel.getModel('itemStyle.normal').getItemStyle(['color'])\\n\\t        );\\n\\n\\t        var visualColor = data.getVisual('color');\\n\\t        if (visualColor) {\\n\\t            symbolEl.setColor(visualColor);\\n\\t        }\\n\\n\\t        // Enable tooltip\\n\\t        // PENDING May have performance issue when path is extremely large\\n\\t        symbolEl.seriesIndex = seriesModel.seriesIndex;\\n\\t        symbolEl.on('mousemove', function (e) {\\n\\t            symbolEl.dataIndex = null;\\n\\t            var dataIndex = symbolEl.findDataIndex(e.offsetX, e.offsetY);\\n\\t            if (dataIndex >= 0) {\\n\\t                // Provide dataIndex for tooltip\\n\\t                symbolEl.dataIndex = dataIndex;\\n\\t            }\\n\\t        });\\n\\n\\t        // Add back\\n\\t        this.group.add(symbolEl);\\n\\t    };\\n\\n\\t    largeSymbolProto.updateLayout = function (seriesModel) {\\n\\t        var data = seriesModel.getData();\\n\\t        this._symbolEl.setShape({\\n\\t            points: data.mapArray(data.getItemLayout)\\n\\t        });\\n\\t    };\\n\\n\\t    largeSymbolProto.remove = function () {\\n\\t        this.group.removeAll();\\n\\t    };\\n\\n\\t    module.exports = LargeSymbolDraw;\\n\\n\\n/***/ },\\n/* 159 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var echarts = __webpack_require__(1);\\n\\n\\t    // Must use radar component\\n\\t    __webpack_require__(160);\\n\\n\\t    __webpack_require__(165);\\n\\t    __webpack_require__(166);\\n\\n\\t    echarts.registerVisual(zrUtil.curry(__webpack_require__(151), 'radar'));\\n\\t    echarts.registerVisual(zrUtil.curry(\\n\\t        __webpack_require__(121), 'radar', 'circle', null\\n\\t    ));\\n\\t    echarts.registerLayout(__webpack_require__(167));\\n\\n\\t    echarts.registerProcessor(\\n\\t        zrUtil.curry(__webpack_require__(154), 'radar')\\n\\t    );\\n\\n\\t    echarts.registerPreprocessor(__webpack_require__(168));\\n\\n\\n/***/ },\\n/* 160 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    __webpack_require__(161);\\n\\t    __webpack_require__(163);\\n\\n\\t    __webpack_require__(164);\\n\\n\\n/***/ },\\n/* 161 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t// TODO clockwise\\n\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var IndicatorAxis = __webpack_require__(162);\\n\\t    var IntervalScale = __webpack_require__(104);\\n\\t    var numberUtil = __webpack_require__(7);\\n\\t    var axisHelper = __webpack_require__(101);\\n\\n\\t    function Radar(radarModel, ecModel, api) {\\n\\n\\t        this._model = radarModel;\\n\\t        /**\\n\\t         * Radar dimensions\\n\\t         * @type {Array.<string>}\\n\\t         */\\n\\t        this.dimensions = [];\\n\\n\\t        this._indicatorAxes = zrUtil.map(radarModel.getIndicatorModels(), function (indicatorModel, idx) {\\n\\t            var dim = 'indicator_' + idx;\\n\\t            var indicatorAxis = new IndicatorAxis(dim, new IntervalScale());\\n\\t            indicatorAxis.name = indicatorModel.get('name');\\n\\t            // Inject model and axis\\n\\t            indicatorAxis.model = indicatorModel;\\n\\t            indicatorModel.axis = indicatorAxis;\\n\\t            this.dimensions.push(dim);\\n\\t            return indicatorAxis;\\n\\t        }, this);\\n\\n\\t        this.resize(radarModel, api);\\n\\n\\t        /**\\n\\t         * @type {number}\\n\\t         * @readOnly\\n\\t         */\\n\\t        this.cx;\\n\\t        /**\\n\\t         * @type {number}\\n\\t         * @readOnly\\n\\t         */\\n\\t        this.cy;\\n\\t        /**\\n\\t         * @type {number}\\n\\t         * @readOnly\\n\\t         */\\n\\t        this.r;\\n\\t        /**\\n\\t         * @type {number}\\n\\t         * @readOnly\\n\\t         */\\n\\t        this.startAngle;\\n\\t    }\\n\\n\\t    Radar.prototype.getIndicatorAxes = function () {\\n\\t        return this._indicatorAxes;\\n\\t    };\\n\\n\\t    Radar.prototype.dataToPoint = function (value, indicatorIndex) {\\n\\t        var indicatorAxis = this._indicatorAxes[indicatorIndex];\\n\\n\\t        return this.coordToPoint(indicatorAxis.dataToCoord(value), indicatorIndex);\\n\\t    };\\n\\n\\t    Radar.prototype.coordToPoint = function (coord, indicatorIndex) {\\n\\t        var indicatorAxis = this._indicatorAxes[indicatorIndex];\\n\\t        var angle = indicatorAxis.angle;\\n\\t        var x = this.cx + coord * Math.cos(angle);\\n\\t        var y = this.cy - coord * Math.sin(angle);\\n\\t        return [x, y];\\n\\t    };\\n\\n\\t    Radar.prototype.pointToData = function (pt) {\\n\\t        var dx = pt[0] - this.cx;\\n\\t        var dy = pt[1] - this.cy;\\n\\t        var radius = Math.sqrt(dx * dx + dy * dy);\\n\\t        dx /= radius;\\n\\t        dy /= radius;\\n\\n\\t        var radian = Math.atan2(-dy, dx);\\n\\n\\t        // Find the closest angle\\n\\t        // FIXME index can calculated directly\\n\\t        var minRadianDiff = Infinity;\\n\\t        var closestAxis;\\n\\t        var closestAxisIdx = -1;\\n\\t        for (var i = 0; i < this._indicatorAxes.length; i++) {\\n\\t            var indicatorAxis = this._indicatorAxes[i];\\n\\t            var diff = Math.abs(radian - indicatorAxis.angle);\\n\\t            if (diff < minRadianDiff) {\\n\\t                closestAxis = indicatorAxis;\\n\\t                closestAxisIdx = i;\\n\\t                minRadianDiff = diff;\\n\\t            }\\n\\t        }\\n\\n\\t        return [closestAxisIdx, +(closestAxis && closestAxis.coodToData(radius))];\\n\\t    };\\n\\n\\t    Radar.prototype.resize = function (radarModel, api) {\\n\\t        var center = radarModel.get('center');\\n\\t        var viewWidth = api.getWidth();\\n\\t        var viewHeight = api.getHeight();\\n\\t        var viewSize = Math.min(viewWidth, viewHeight) / 2;\\n\\t        this.cx = numberUtil.parsePercent(center[0], viewWidth);\\n\\t        this.cy = numberUtil.parsePercent(center[1], viewHeight);\\n\\n\\t        this.startAngle = radarModel.get('startAngle') * Math.PI / 180;\\n\\n\\t        this.r = numberUtil.parsePercent(radarModel.get('radius'), viewSize);\\n\\n\\t        zrUtil.each(this._indicatorAxes, function (indicatorAxis, idx) {\\n\\t            indicatorAxis.setExtent(0, this.r);\\n\\t            var angle = (this.startAngle + idx * Math.PI * 2 / this._indicatorAxes.length);\\n\\t            // Normalize to [-PI, PI]\\n\\t            angle = Math.atan2(Math.sin(angle), Math.cos(angle));\\n\\t            indicatorAxis.angle = angle;\\n\\t        }, this);\\n\\t    };\\n\\n\\t    Radar.prototype.update = function (ecModel, api) {\\n\\t        var indicatorAxes = this._indicatorAxes;\\n\\t        var radarModel = this._model;\\n\\t        zrUtil.each(indicatorAxes, function (indicatorAxis) {\\n\\t            indicatorAxis.scale.setExtent(Infinity, -Infinity);\\n\\t        });\\n\\t        ecModel.eachSeriesByType('radar', function (radarSeries, idx) {\\n\\t            if (radarSeries.get('coordinateSystem') !== 'radar'\\n\\t                || ecModel.getComponent('radar', radarSeries.get('radarIndex')) !== radarModel\\n\\t            ) {\\n\\t                return;\\n\\t            }\\n\\t            var data = radarSeries.getData();\\n\\t            zrUtil.each(indicatorAxes, function (indicatorAxis) {\\n\\t                indicatorAxis.scale.unionExtentFromData(data, indicatorAxis.dim);\\n\\t            });\\n\\t        }, this);\\n\\n\\t        var splitNumber = radarModel.get('splitNumber');\\n\\n\\t        function increaseInterval(interval) {\\n\\t            var exp10 = Math.pow(10, Math.floor(Math.log(interval) / Math.LN10));\\n\\t            // Increase interval\\n\\t            var f = interval / exp10;\\n\\t            if (f === 2) {\\n\\t                f = 5;\\n\\t            }\\n\\t            else { // f is 2 or 5\\n\\t                f *= 2;\\n\\t            }\\n\\t            return f * exp10;\\n\\t        }\\n\\t        // Force all the axis fixing the maxSplitNumber.\\n\\t        zrUtil.each(indicatorAxes, function (indicatorAxis, idx) {\\n\\t            var rawExtent = axisHelper.getScaleExtent(indicatorAxis.scale, indicatorAxis.model);\\n\\t            axisHelper.niceScaleExtent(indicatorAxis.scale, indicatorAxis.model);\\n\\n\\t            var axisModel = indicatorAxis.model;\\n\\t            var scale = indicatorAxis.scale;\\n\\t            var fixedMin = axisModel.getMin();\\n\\t            var fixedMax = axisModel.getMax();\\n\\t            var interval = scale.getInterval();\\n\\n\\t            if (fixedMin != null && fixedMax != null) {\\n\\t                // User set min, max, divide to get new interval\\n\\t                scale.setExtent(+fixedMin, +fixedMax);\\n\\t                scale.setInterval(\\n\\t                    (fixedMax - fixedMin) / splitNumber\\n\\t                );\\n\\t            }\\n\\t            else if (fixedMin != null) {\\n\\t                var max;\\n\\t                // User set min, expand extent on the other side\\n\\t                do {\\n\\t                    max = fixedMin + interval * splitNumber;\\n\\t                    scale.setExtent(+fixedMin, max);\\n\\t                    // Interval must been set after extent\\n\\t                    // FIXME\\n\\t                    scale.setInterval(interval);\\n\\n\\t                    interval = increaseInterval(interval);\\n\\t                } while (max < rawExtent[1] && isFinite(max) && isFinite(rawExtent[1]));\\n\\t            }\\n\\t            else if (fixedMax != null) {\\n\\t                var min;\\n\\t                // User set min, expand extent on the other side\\n\\t                do {\\n\\t                    min = fixedMax - interval * splitNumber;\\n\\t                    scale.setExtent(min, +fixedMax);\\n\\t                    scale.setInterval(interval);\\n\\t                    interval = increaseInterval(interval);\\n\\t                } while (min > rawExtent[0] && isFinite(min) && isFinite(rawExtent[0]));\\n\\t            }\\n\\t            else {\\n\\t                var nicedSplitNumber = scale.getTicks().length - 1;\\n\\t                if (nicedSplitNumber > splitNumber) {\\n\\t                    interval = increaseInterval(interval);\\n\\t                }\\n\\t                // PENDING\\n\\t                var center = Math.round((rawExtent[0] + rawExtent[1]) / 2 / interval) * interval;\\n\\t                var halfSplitNumber = Math.round(splitNumber / 2);\\n\\t                scale.setExtent(\\n\\t                    numberUtil.round(center - halfSplitNumber * interval),\\n\\t                    numberUtil.round(center + (splitNumber - halfSplitNumber) * interval)\\n\\t                );\\n\\t                scale.setInterval(interval);\\n\\t            }\\n\\t        });\\n\\t    };\\n\\n\\t    /**\\n\\t     * Radar dimensions is based on the data\\n\\t     * @type {Array}\\n\\t     */\\n\\t    Radar.dimensions = [];\\n\\n\\t    Radar.create = function (ecModel, api) {\\n\\t        var radarList = [];\\n\\t        ecModel.eachComponent('radar', function (radarModel) {\\n\\t            var radar = new Radar(radarModel, ecModel, api);\\n\\t            radarList.push(radar);\\n\\t            radarModel.coordinateSystem = radar;\\n\\t        });\\n\\t        ecModel.eachSeriesByType('radar', function (radarSeries) {\\n\\t            if (radarSeries.get('coordinateSystem') === 'radar') {\\n\\t                // Inject coordinate system\\n\\t                radarSeries.coordinateSystem = radarList[radarSeries.get('radarIndex') || 0];\\n\\t            }\\n\\t        });\\n\\t        return radarList;\\n\\t    };\\n\\n\\t    __webpack_require__(76).register('radar', Radar);\\n\\t    module.exports = Radar;\\n\\n\\n/***/ },\\n/* 162 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var Axis = __webpack_require__(100);\\n\\n\\t    function IndicatorAxis(dim, scale, radiusExtent) {\\n\\t        Axis.call(this, dim, scale, radiusExtent);\\n\\n\\t        /**\\n\\t         * Axis type\\n\\t         *  - 'category'\\n\\t         *  - 'value'\\n\\t         *  - 'time'\\n\\t         *  - 'log'\\n\\t         * @type {string}\\n\\t         */\\n\\t        this.type = 'value';\\n\\n\\t        this.angle = 0;\\n\\n\\t        /**\\n\\t         * Indicator name\\n\\t         * @type {string}\\n\\t         */\\n\\t        this.name = '';\\n\\t        /**\\n\\t         * @type {module:echarts/model/Model}\\n\\t         */\\n\\t        this.model;\\n\\t    }\\n\\n\\t    zrUtil.inherits(IndicatorAxis, Axis);\\n\\n\\t    module.exports = IndicatorAxis;\\n\\n\\n/***/ },\\n/* 163 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\n\\t    var axisDefault = __webpack_require__(132);\\n\\t    var valueAxisDefault = axisDefault.valueAxis;\\n\\t    var Model = __webpack_require__(12);\\n\\t    var zrUtil = __webpack_require__(4);\\n\\n\\t    var axisModelCommonMixin = __webpack_require__(112);\\n\\n\\t    function defaultsShow(opt, show) {\\n\\t        return zrUtil.defaults({\\n\\t            show: show\\n\\t        }, opt);\\n\\t    }\\n\\n\\t    var RadarModel = __webpack_require__(1).extendComponentModel({\\n\\n\\t        type: 'radar',\\n\\n\\t        optionUpdated: function () {\\n\\t            var boundaryGap = this.get('boundaryGap');\\n\\t            var splitNumber = this.get('splitNumber');\\n\\t            var scale = this.get('scale');\\n\\t            var axisLine = this.get('axisLine');\\n\\t            var axisTick = this.get('axisTick');\\n\\t            var axisLabel = this.get('axisLabel');\\n\\t            var nameTextStyle = this.get('name.textStyle');\\n\\t            var showName = this.get('name.show');\\n\\t            var nameFormatter = this.get('name.formatter');\\n\\t            var nameGap = this.get('nameGap');\\n\\t            var triggerEvent = this.get('triggerEvent');\\n\\n\\t            var indicatorModels = zrUtil.map(this.get('indicator') || [], function (indicatorOpt) {\\n\\t                // PENDING\\n\\t                if (indicatorOpt.max != null && indicatorOpt.max > 0 && !indicatorOpt.min) {\\n\\t                    indicatorOpt.min = 0;\\n\\t                }\\n\\t                else if (indicatorOpt.min != null && indicatorOpt.min < 0 && !indicatorOpt.max) {\\n\\t                    indicatorOpt.max = 0;\\n\\t                }\\n\\t                // Use same configuration\\n\\t                indicatorOpt = zrUtil.merge(zrUtil.clone(indicatorOpt), {\\n\\t                    boundaryGap: boundaryGap,\\n\\t                    splitNumber: splitNumber,\\n\\t                    scale: scale,\\n\\t                    axisLine: axisLine,\\n\\t                    axisTick: axisTick,\\n\\t                    axisLabel: axisLabel,\\n\\t                    // Competitable with 2 and use text\\n\\t                    name: indicatorOpt.text,\\n\\t                    nameLocation: 'end',\\n\\t                    nameGap: nameGap,\\n\\t                    // min: 0,\\n\\t                    nameTextStyle: nameTextStyle,\\n\\t                    triggerEvent: triggerEvent\\n\\t                }, false);\\n\\t                if (!showName) {\\n\\t                    indicatorOpt.name = '';\\n\\t                }\\n\\t                if (typeof nameFormatter === 'string') {\\n\\t                    var indName = indicatorOpt.name;\\n\\t                    indicatorOpt.name = nameFormatter.replace('{value}', indName != null ? indName : '');\\n\\t                }\\n\\t                else if (typeof nameFormatter === 'function') {\\n\\t                    indicatorOpt.name = nameFormatter(\\n\\t                        indicatorOpt.name, indicatorOpt\\n\\t                    );\\n\\t                }\\n\\t                var model = zrUtil.extend(\\n\\t                    new Model(indicatorOpt, null, this.ecModel),\\n\\t                    axisModelCommonMixin\\n\\t                );\\n\\n\\t                // For triggerEvent.\\n\\t                model.mainType = 'radar';\\n\\t                model.componentIndex = this.componentIndex;\\n\\n\\t                return model;\\n\\t            }, this);\\n\\n\\t            this.getIndicatorModels = function () {\\n\\t                return indicatorModels;\\n\\t            };\\n\\t        },\\n\\n\\t        defaultOption: {\\n\\n\\t            zlevel: 0,\\n\\n\\t            z: 0,\\n\\n\\t            center: ['50%', '50%'],\\n\\n\\t            radius: '75%',\\n\\n\\t            startAngle: 90,\\n\\n\\t            name: {\\n\\t                show: true\\n\\t                // formatter: null\\n\\t                // textStyle: {}\\n\\t            },\\n\\n\\t            boundaryGap: [0, 0],\\n\\n\\t            splitNumber: 5,\\n\\n\\t            nameGap: 15,\\n\\n\\t            scale: false,\\n\\n\\t            // Polygon or circle\\n\\t            shape: 'polygon',\\n\\n\\t            axisLine: zrUtil.merge(\\n\\t                {\\n\\t                    lineStyle: {\\n\\t                        color: '#bbb'\\n\\t                    }\\n\\t                },\\n\\t                valueAxisDefault.axisLine\\n\\t            ),\\n\\t            axisLabel: defaultsShow(valueAxisDefault.axisLabel, false),\\n\\t            axisTick: defaultsShow(valueAxisDefault.axisTick, false),\\n\\t            splitLine: defaultsShow(valueAxisDefault.splitLine, true),\\n\\t            splitArea: defaultsShow(valueAxisDefault.splitArea, true),\\n\\n\\t            // {text, min, max}\\n\\t            indicator: []\\n\\t        }\\n\\t    });\\n\\n\\t    module.exports = RadarModel;\\n\\n\\n/***/ },\\n/* 164 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var AxisBuilder = __webpack_require__(135);\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var graphic = __webpack_require__(18);\\n\\n\\t    var axisBuilderAttrs = [\\n\\t        'axisLine', 'axisLabel', 'axisTick', 'axisName'\\n\\t    ];\\n\\n\\t    module.exports = __webpack_require__(1).extendComponentView({\\n\\n\\t        type: 'radar',\\n\\n\\t        render: function (radarModel, ecModel, api) {\\n\\t            var group = this.group;\\n\\t            group.removeAll();\\n\\n\\t            this._buildAxes(radarModel);\\n\\t            this._buildSplitLineAndArea(radarModel);\\n\\t        },\\n\\n\\t        _buildAxes: function (radarModel) {\\n\\t            var radar = radarModel.coordinateSystem;\\n\\t            var indicatorAxes = radar.getIndicatorAxes();\\n\\t            var axisBuilders = zrUtil.map(indicatorAxes, function (indicatorAxis) {\\n\\t                var axisBuilder = new AxisBuilder(indicatorAxis.model, {\\n\\t                    position: [radar.cx, radar.cy],\\n\\t                    rotation: indicatorAxis.angle,\\n\\t                    labelDirection: -1,\\n\\t                    tickDirection: -1,\\n\\t                    nameDirection: 1\\n\\t                });\\n\\t                return axisBuilder;\\n\\t            });\\n\\n\\t            zrUtil.each(axisBuilders, function (axisBuilder) {\\n\\t                zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\\n\\t                this.group.add(axisBuilder.getGroup());\\n\\t            }, this);\\n\\t        },\\n\\n\\t        _buildSplitLineAndArea: function (radarModel) {\\n\\t            var radar = radarModel.coordinateSystem;\\n\\t            var indicatorAxes = radar.getIndicatorAxes();\\n\\t            if (!indicatorAxes.length) {\\n\\t                return;\\n\\t            }\\n\\t            var shape = radarModel.get('shape');\\n\\t            var splitLineModel = radarModel.getModel('splitLine');\\n\\t            var splitAreaModel = radarModel.getModel('splitArea');\\n\\t            var lineStyleModel = splitLineModel.getModel('lineStyle');\\n\\t            var areaStyleModel = splitAreaModel.getModel('areaStyle');\\n\\n\\t            var showSplitLine = splitLineModel.get('show');\\n\\t            var showSplitArea = splitAreaModel.get('show');\\n\\t            var splitLineColors = lineStyleModel.get('color');\\n\\t            var splitAreaColors = areaStyleModel.get('color');\\n\\n\\t            splitLineColors = zrUtil.isArray(splitLineColors) ? splitLineColors : [splitLineColors];\\n\\t            splitAreaColors = zrUtil.isArray(splitAreaColors) ? splitAreaColors : [splitAreaColors];\\n\\n\\t            var splitLines = [];\\n\\t            var splitAreas = [];\\n\\n\\t            function getColorIndex(areaOrLine, areaOrLineColorList, idx) {\\n\\t                var colorIndex = idx % areaOrLineColorList.length;\\n\\t                areaOrLine[colorIndex] = areaOrLine[colorIndex] || [];\\n\\t                return colorIndex;\\n\\t            }\\n\\n\\t            if (shape === 'circle') {\\n\\t                var ticksRadius = indicatorAxes[0].getTicksCoords();\\n\\t                var cx = radar.cx;\\n\\t                var cy = radar.cy;\\n\\t                for (var i = 0; i < ticksRadius.length; i++) {\\n\\t                    if (showSplitLine) {\\n\\t                        var colorIndex = getColorIndex(splitLines, splitLineColors, i);\\n\\t                        splitLines[colorIndex].push(new graphic.Circle({\\n\\t                            shape: {\\n\\t                                cx: cx,\\n\\t                                cy: cy,\\n\\t                                r: ticksRadius[i]\\n\\t                            }\\n\\t                        }));\\n\\t                    }\\n\\t                    if (showSplitArea && i < ticksRadius.length - 1) {\\n\\t                        var colorIndex = getColorIndex(splitAreas, splitAreaColors, i);\\n\\t                        splitAreas[colorIndex].push(new graphic.Ring({\\n\\t                            shape: {\\n\\t                                cx: cx,\\n\\t                                cy: cy,\\n\\t                                r0: ticksRadius[i],\\n\\t                                r: ticksRadius[i + 1]\\n\\t                            }\\n\\t                        }));\\n\\t                    }\\n\\t                }\\n\\t            }\\n\\t            // Polyyon\\n\\t            else {\\n\\t                var realSplitNumber;\\n\\t                var axesTicksPoints = zrUtil.map(indicatorAxes, function (indicatorAxis, idx) {\\n\\t                    var ticksCoords = indicatorAxis.getTicksCoords();\\n\\t                    realSplitNumber = realSplitNumber == null\\n\\t                        ? ticksCoords.length - 1\\n\\t                        : Math.min(ticksCoords.length - 1, realSplitNumber);\\n\\t                    return zrUtil.map(ticksCoords, function (tickCoord) {\\n\\t                        return radar.coordToPoint(tickCoord, idx);\\n\\t                    });\\n\\t                });\\n\\n\\t                var prevPoints = [];\\n\\t                for (var i = 0; i <= realSplitNumber; i++) {\\n\\t                    var points = [];\\n\\t                    for (var j = 0; j < indicatorAxes.length; j++) {\\n\\t                        points.push(axesTicksPoints[j][i]);\\n\\t                    }\\n\\t                    // Close\\n\\t                    if (points[0]) {\\n\\t                        points.push(points[0].slice());\\n\\t                    }\\n\\t                    else {\\n\\t                        if (true) {\\n\\t                            console.error('Can\\\\'t draw value axis ' + i);\\n\\t                        }\\n\\t                    }\\n\\n\\t                    if (showSplitLine) {\\n\\t                        var colorIndex = getColorIndex(splitLines, splitLineColors, i);\\n\\t                        splitLines[colorIndex].push(new graphic.Polyline({\\n\\t                            shape: {\\n\\t                                points: points\\n\\t                            }\\n\\t                        }));\\n\\t                    }\\n\\t                    if (showSplitArea && prevPoints) {\\n\\t                        var colorIndex = getColorIndex(splitAreas, splitAreaColors, i - 1);\\n\\t                        splitAreas[colorIndex].push(new graphic.Polygon({\\n\\t                            shape: {\\n\\t                                points: points.concat(prevPoints)\\n\\t                            }\\n\\t                        }));\\n\\t                    }\\n\\t                    prevPoints = points.slice().reverse();\\n\\t                }\\n\\t            }\\n\\n\\t            var lineStyle = lineStyleModel.getLineStyle();\\n\\t            var areaStyle = areaStyleModel.getAreaStyle();\\n\\t            // Add splitArea before splitLine\\n\\t            zrUtil.each(splitAreas, function (splitAreas, idx) {\\n\\t                this.group.add(graphic.mergePath(\\n\\t                    splitAreas, {\\n\\t                        style: zrUtil.defaults({\\n\\t                            stroke: 'none',\\n\\t                            fill: splitAreaColors[idx % splitAreaColors.length]\\n\\t                        }, areaStyle),\\n\\t                        silent: true\\n\\t                    }\\n\\t                ));\\n\\t            }, this);\\n\\n\\t            zrUtil.each(splitLines, function (splitLines, idx) {\\n\\t                this.group.add(graphic.mergePath(\\n\\t                    splitLines, {\\n\\t                        style: zrUtil.defaults({\\n\\t                            fill: 'none',\\n\\t                            stroke: splitLineColors[idx % splitLineColors.length]\\n\\t                        }, lineStyle),\\n\\t                        silent: true\\n\\t                    }\\n\\t                ));\\n\\t            }, this);\\n\\n\\t        }\\n\\t    });\\n\\n\\n/***/ },\\n/* 165 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t'use strict';\\n\\n\\n\\t    var SeriesModel = __webpack_require__(78);\\n\\t    var List = __webpack_require__(98);\\n\\t    var completeDimensions = __webpack_require__(110);\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var encodeHTML = __webpack_require__(6).encodeHTML;\\n\\n\\t    var RadarSeries = SeriesModel.extend({\\n\\n\\t        type: 'series.radar',\\n\\n\\t        dependencies: ['radar'],\\n\\n\\n\\t        // Overwrite\\n\\t        init: function (option) {\\n\\t            RadarSeries.superApply(this, 'init', arguments);\\n\\n\\t            // Enable legend selection for each data item\\n\\t            // Use a function instead of direct access because data reference may changed\\n\\t            this.legendDataProvider = function () {\\n\\t                return this.getRawData();\\n\\t            };\\n\\t        },\\n\\n\\t        getInitialData: function (option, ecModel) {\\n\\t            var data = option.data || [];\\n\\t            var dimensions = completeDimensions(\\n\\t                [], data, {extraPrefix: 'indicator_', extraFromZero: true}\\n\\t            );\\n\\t            var list = new List(dimensions, this);\\n\\t            list.initData(data);\\n\\t            return list;\\n\\t        },\\n\\n\\t        formatTooltip: function (dataIndex) {\\n\\t            var value = this.getRawValue(dataIndex);\\n\\t            var coordSys = this.coordinateSystem;\\n\\t            var indicatorAxes = coordSys.getIndicatorAxes();\\n\\t            var name = this.getData().getName(dataIndex);\\n\\t            return encodeHTML(name === '' ? this.name : name) + '<br/>'\\n\\t                + zrUtil.map(indicatorAxes, function (axis, idx) {\\n\\t                    return encodeHTML(axis.name + ' : ' + value[idx]);\\n\\t                }).join('<br />');\\n\\t        },\\n\\n\\t        defaultOption: {\\n\\t            zlevel: 0,\\n\\t            z: 2,\\n\\t            coordinateSystem: 'radar',\\n\\t            legendHoverLink: true,\\n\\t            radarIndex: 0,\\n\\t            lineStyle: {\\n\\t                normal: {\\n\\t                    width: 2,\\n\\t                    type: 'solid'\\n\\t                }\\n\\t            },\\n\\t            label: {\\n\\t                normal: {\\n\\t                    position: 'top'\\n\\t                }\\n\\t            },\\n\\t            // areaStyle: {\\n\\t            // },\\n\\t            // itemStyle: {}\\n\\t            symbol: 'emptyCircle',\\n\\t            symbolSize: 4\\n\\t            // symbolRotate: null\\n\\t        }\\n\\t    });\\n\\n\\t    module.exports = RadarSeries;\\n\\n\\n/***/ },\\n/* 166 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var graphic = __webpack_require__(18);\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var symbolUtil = __webpack_require__(111);\\n\\n\\t    function normalizeSymbolSize(symbolSize) {\\n\\t        if (!zrUtil.isArray(symbolSize)) {\\n\\t            symbolSize = [+symbolSize, +symbolSize];\\n\\t        }\\n\\t        return symbolSize;\\n\\t    }\\n\\t    module.exports = __webpack_require__(1).extendChartView({\\n\\t        type: 'radar',\\n\\n\\t        render: function (seriesModel, ecModel, api) {\\n\\t            var polar = seriesModel.coordinateSystem;\\n\\t            var group = this.group;\\n\\n\\t            var data = seriesModel.getData();\\n\\t            var oldData = this._data;\\n\\n\\t            function createSymbol(data, idx) {\\n\\t                var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\\n\\t                var color = data.getItemVisual(idx, 'color');\\n\\t                if (symbolType === 'none') {\\n\\t                    return;\\n\\t                }\\n\\t                var symbolPath = symbolUtil.createSymbol(\\n\\t                    symbolType, -0.5, -0.5, 1, 1, color\\n\\t                );\\n\\t                symbolPath.attr({\\n\\t                    style: {\\n\\t                        strokeNoScale: true\\n\\t                    },\\n\\t                    z2: 100,\\n\\t                    scale: normalizeSymbolSize(data.getItemVisual(idx, 'symbolSize'))\\n\\t                });\\n\\t                return symbolPath;\\n\\t            }\\n\\n\\t            function updateSymbols(oldPoints, newPoints, symbolGroup, data, idx, isInit) {\\n\\t                // Simply rerender all\\n\\t                symbolGroup.removeAll();\\n\\t                for (var i = 0; i < newPoints.length - 1; i++) {\\n\\t                    var symbolPath = createSymbol(data, idx);\\n\\t                    if (symbolPath) {\\n\\t                        symbolPath.__dimIdx = i;\\n\\t                        if (oldPoints[i]) {\\n\\t                            symbolPath.attr('position', oldPoints[i]);\\n\\t                            graphic[isInit ? 'initProps' : 'updateProps'](\\n\\t                                symbolPath, {\\n\\t                                    position: newPoints[i]\\n\\t                                }, seriesModel, idx\\n\\t                            );\\n\\t                        }\\n\\t                        else {\\n\\t                            symbolPath.attr('position', newPoints[i]);\\n\\t                        }\\n\\t                        symbolGroup.add(symbolPath);\\n\\t                    }\\n\\t                }\\n\\t            }\\n\\n\\t            function getInitialPoints(points) {\\n\\t                return zrUtil.map(points, function (pt) {\\n\\t                    return [polar.cx, polar.cy];\\n\\t                });\\n\\t            }\\n\\t            data.diff(oldData)\\n\\t                .add(function (idx) {\\n\\t                    var points = data.getItemLayout(idx);\\n\\t                    if (!points) {\\n\\t                        return;\\n\\t                    }\\n\\t                    var polygon = new graphic.Polygon();\\n\\t                    var polyline = new graphic.Polyline();\\n\\t                    var target = {\\n\\t                        shape: {\\n\\t                            points: points\\n\\t                        }\\n\\t                    };\\n\\t                    polygon.shape.points = getInitialPoints(points);\\n\\t                    polyline.shape.points = getInitialPoints(points);\\n\\t                    graphic.initProps(polygon, target, seriesModel, idx);\\n\\t                    graphic.initProps(polyline, target, seriesModel, idx);\\n\\n\\t                    var itemGroup = new graphic.Group();\\n\\t                    var symbolGroup = new graphic.Group();\\n\\t                    itemGroup.add(polyline);\\n\\t                    itemGroup.add(polygon);\\n\\t                    itemGroup.add(symbolGroup);\\n\\n\\t                    updateSymbols(\\n\\t                        polyline.shape.points, points, symbolGroup, data, idx, true\\n\\t                    );\\n\\n\\t                    data.setItemGraphicEl(idx, itemGroup);\\n\\t                })\\n\\t                .update(function (newIdx, oldIdx) {\\n\\t                    var itemGroup = oldData.getItemGraphicEl(oldIdx);\\n\\t                    var polyline = itemGroup.childAt(0);\\n\\t                    var polygon = itemGroup.childAt(1);\\n\\t                    var symbolGroup = itemGroup.childAt(2);\\n\\t                    var target = {\\n\\t                        shape: {\\n\\t                            points: data.getItemLayout(newIdx)\\n\\t                        }\\n\\t                    };\\n\\t                    if (!target.shape.points) {\\n\\t                        return;\\n\\t                    }\\n\\t                    updateSymbols(\\n\\t                        polyline.shape.points, target.shape.points, symbolGroup, data, newIdx, false\\n\\t                    );\\n\\n\\t                    graphic.updateProps(polyline, target, seriesModel);\\n\\t                    graphic.updateProps(polygon, target, seriesModel);\\n\\n\\t                    data.setItemGraphicEl(newIdx, itemGroup);\\n\\t                })\\n\\t                .remove(function (idx) {\\n\\t                    group.remove(oldData.getItemGraphicEl(idx));\\n\\t                })\\n\\t                .execute();\\n\\n\\t            data.eachItemGraphicEl(function (itemGroup, idx) {\\n\\t                var itemModel = data.getItemModel(idx);\\n\\t                var polyline = itemGroup.childAt(0);\\n\\t                var polygon = itemGroup.childAt(1);\\n\\t                var symbolGroup = itemGroup.childAt(2);\\n\\t                var color = data.getItemVisual(idx, 'color');\\n\\n\\t                group.add(itemGroup);\\n\\n\\t                polyline.useStyle(\\n\\t                    zrUtil.defaults(\\n\\t                        itemModel.getModel('lineStyle.normal').getLineStyle(),\\n\\t                        {\\n\\t                            fill: 'none',\\n\\t                            stroke: color\\n\\t                        }\\n\\t                    )\\n\\t                );\\n\\t                polyline.hoverStyle = itemModel.getModel('lineStyle.emphasis').getLineStyle();\\n\\n\\t                var areaStyleModel = itemModel.getModel('areaStyle.normal');\\n\\t                var hoverAreaStyleModel = itemModel.getModel('areaStyle.emphasis');\\n\\t                var polygonIgnore = areaStyleModel.isEmpty() && areaStyleModel.parentModel.isEmpty();\\n\\t                var hoverPolygonIgnore = hoverAreaStyleModel.isEmpty() && hoverAreaStyleModel.parentModel.isEmpty();\\n\\n\\t                hoverPolygonIgnore = hoverPolygonIgnore && polygonIgnore;\\n\\t                polygon.ignore = polygonIgnore;\\n\\n\\t                polygon.useStyle(\\n\\t                    zrUtil.defaults(\\n\\t                        areaStyleModel.getAreaStyle(),\\n\\t                        {\\n\\t                            fill: color,\\n\\t                            opacity: 0.7\\n\\t                        }\\n\\t                    )\\n\\t                );\\n\\t                polygon.hoverStyle = hoverAreaStyleModel.getAreaStyle();\\n\\n\\t                var itemStyle = itemModel.getModel('itemStyle.normal').getItemStyle(['color']);\\n\\t                var itemHoverStyle = itemModel.getModel('itemStyle.emphasis').getItemStyle();\\n\\t                var labelModel = itemModel.getModel('label.normal');\\n\\t                var labelHoverModel = itemModel.getModel('label.emphasis');\\n\\t                symbolGroup.eachChild(function (symbolPath) {\\n\\t                    symbolPath.setStyle(itemStyle);\\n\\t                    symbolPath.hoverStyle = zrUtil.clone(itemHoverStyle);\\n\\n\\t                    var defaultText = data.get(data.dimensions[symbolPath.__dimIdx], idx);\\n\\t                    graphic.setText(symbolPath.style, labelModel, color);\\n\\t                    symbolPath.setStyle({\\n\\t                        text: labelModel.get('show') ? zrUtil.retrieve(\\n\\t                            seriesModel.getFormattedLabel(\\n\\t                                idx, 'normal', null, symbolPath.__dimIdx\\n\\t                            ),\\n\\t                            defaultText\\n\\t                        ) : ''\\n\\t                    });\\n\\n\\t                    graphic.setText(symbolPath.hoverStyle, labelHoverModel, color);\\n\\t                    symbolPath.hoverStyle.text = labelHoverModel.get('show') ? zrUtil.retrieve(\\n\\t                        seriesModel.getFormattedLabel(\\n\\t                            idx, 'emphasis', null, symbolPath.__dimIdx\\n\\t                        ),\\n\\t                        defaultText\\n\\t                    ) : '';\\n\\t                });\\n\\n\\t                function onEmphasis() {\\n\\t                    polygon.attr('ignore', hoverPolygonIgnore);\\n\\t                }\\n\\n\\t                function onNormal() {\\n\\t                    polygon.attr('ignore', polygonIgnore);\\n\\t                }\\n\\n\\t                itemGroup.off('mouseover').off('mouseout').off('normal').off('emphasis');\\n\\t                itemGroup.on('emphasis', onEmphasis)\\n\\t                    .on('mouseover', onEmphasis)\\n\\t                    .on('normal', onNormal)\\n\\t                    .on('mouseout', onNormal);\\n\\n\\t                graphic.setHoverStyle(itemGroup);\\n\\t            });\\n\\n\\t            this._data = data;\\n\\t        },\\n\\n\\t        remove: function () {\\n\\t            this.group.removeAll();\\n\\t            this._data = null;\\n\\t        },\\n\\n\\t        dispose: function () {}\\n\\t    });\\n\\n\\n/***/ },\\n/* 167 */\\n/***/ function(module, exports) {\\n\\n\\t\\n\\n\\t    module.exports = function (ecModel) {\\n\\t        ecModel.eachSeriesByType('radar', function (seriesModel) {\\n\\t            var data = seriesModel.getData();\\n\\t            var points = [];\\n\\t            var coordSys = seriesModel.coordinateSystem;\\n\\t            if (!coordSys) {\\n\\t                return;\\n\\t            }\\n\\n\\t            function pointsConverter(val, idx) {\\n\\t                points[idx] = points[idx] || [];\\n\\t                points[idx][i] = coordSys.dataToPoint(val, i);\\n\\t            }\\n\\t            for (var i = 0; i < coordSys.getIndicatorAxes().length; i++) {\\n\\t                var dim = data.dimensions[i];\\n\\t                data.each(dim, pointsConverter);\\n\\t            }\\n\\n\\t            data.each(function (idx) {\\n\\t                // Close polygon\\n\\t                points[idx][0] && points[idx].push(points[idx][0].slice());\\n\\t                data.setItemLayout(idx, points[idx]);\\n\\t            });\\n\\t        });\\n\\t    };\\n\\n\\n/***/ },\\n/* 168 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t// Backward compat for radar chart in 2\\n\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\n\\t    module.exports = function (option) {\\n\\t        var polarOptArr = option.polar;\\n\\t        if (polarOptArr) {\\n\\t            if (!zrUtil.isArray(polarOptArr)) {\\n\\t                polarOptArr = [polarOptArr];\\n\\t            }\\n\\t            var polarNotRadar = [];\\n\\t            zrUtil.each(polarOptArr, function (polarOpt, idx) {\\n\\t                if (polarOpt.indicator) {\\n\\t                    if (polarOpt.type && !polarOpt.shape) {\\n\\t                        polarOpt.shape = polarOpt.type;\\n\\t                    }\\n\\t                    option.radar = option.radar || [];\\n\\t                    if (!zrUtil.isArray(option.radar)) {\\n\\t                        option.radar = [option.radar];\\n\\t                    }\\n\\t                    option.radar.push(polarOpt);\\n\\t                }\\n\\t                else {\\n\\t                    polarNotRadar.push(polarOpt);\\n\\t                }\\n\\t            });\\n\\t            option.polar = polarNotRadar;\\n\\t        }\\n\\t        zrUtil.each(option.series, function (seriesOpt) {\\n\\t            if (seriesOpt.type === 'radar' && seriesOpt.polarIndex) {\\n\\t                seriesOpt.radarIndex = seriesOpt.polarIndex;\\n\\t            }\\n\\t        });\\n\\t    };\\n\\n\\n/***/ },\\n/* 169 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var echarts = __webpack_require__(1);\\n\\t    var PRIORITY = echarts.PRIORITY;\\n\\n\\t    __webpack_require__(170);\\n\\n\\t    __webpack_require__(181);\\n\\n\\t    __webpack_require__(187);\\n\\n\\t    __webpack_require__(171);\\n\\n\\t    echarts.registerLayout(__webpack_require__(189));\\n\\n\\t    echarts.registerVisual(__webpack_require__(190));\\n\\n\\t    echarts.registerProcessor(PRIORITY.PROCESSOR.STATISTIC, __webpack_require__(191));\\n\\n\\t    echarts.registerPreprocessor(__webpack_require__(192));\\n\\n\\t    __webpack_require__(150)('map', [{\\n\\t        type: 'mapToggleSelect',\\n\\t        event: 'mapselectchanged',\\n\\t        method: 'toggleSelected'\\n\\t    }, {\\n\\t        type: 'mapSelect',\\n\\t        event: 'mapselected',\\n\\t        method: 'select'\\n\\t    }, {\\n\\t        type: 'mapUnSelect',\\n\\t        event: 'mapunselected',\\n\\t        method: 'unSelect'\\n\\t    }]);\\n\\n\\n/***/ },\\n/* 170 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var List = __webpack_require__(98);\\n\\t    var SeriesModel = __webpack_require__(78);\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var completeDimensions = __webpack_require__(110);\\n\\n\\t    var formatUtil = __webpack_require__(6);\\n\\t    var encodeHTML = formatUtil.encodeHTML;\\n\\t    var addCommas = formatUtil.addCommas;\\n\\n\\t    var dataSelectableMixin = __webpack_require__(148);\\n\\n\\t    var geoCreator = __webpack_require__(171);\\n\\n\\t    var MapSeries = SeriesModel.extend({\\n\\n\\t        type: 'series.map',\\n\\n\\t        dependencies: ['geo'],\\n\\n\\t        layoutMode: 'box',\\n\\n\\t        /**\\n\\t         * Only first map series of same mapType will drawMap\\n\\t         * @type {boolean}\\n\\t         */\\n\\t        needsDrawMap: false,\\n\\n\\t        /**\\n\\t         * Group of all map series with same mapType\\n\\t         * @type {boolean}\\n\\t         */\\n\\t        seriesGroup: [],\\n\\n\\t        init: function (option) {\\n\\n\\t            option = this._fillOption(option, this.getMapType());\\n\\t            this.option = option;\\n\\n\\t            MapSeries.superApply(this, 'init', arguments);\\n\\n\\t            this.updateSelectedMap(option.data);\\n\\t        },\\n\\n\\t        getInitialData: function (option) {\\n\\t            var dimensions = completeDimensions(['value'], option.data || []);\\n\\n\\t            var list = new List(dimensions, this);\\n\\n\\t            list.initData(option.data);\\n\\n\\t            return list;\\n\\t        },\\n\\n\\t        mergeOption: function (newOption) {\\n\\t            if (newOption.data) {\\n\\t                newOption = this._fillOption(newOption, this.getMapType());\\n\\t            }\\n\\n\\t            MapSeries.superCall(this, 'mergeOption', newOption);\\n\\n\\t            this.updateSelectedMap(this.option.data);\\n\\t        },\\n\\n\\t        /**\\n\\t         * If no host geo model, return null, which means using a\\n\\t         * inner exclusive geo model.\\n\\t         */\\n\\t        getHostGeoModel: function () {\\n\\t            var geoIndex = this.option.geoIndex;\\n\\t            return geoIndex != null\\n\\t                ? this.dependentModels.geo[geoIndex]\\n\\t                : null;\\n\\t        },\\n\\n\\t        getMapType: function () {\\n\\t            return (this.getHostGeoModel() || this).option.map;\\n\\t        },\\n\\n\\t        _fillOption: function (option, mapName) {\\n\\t            // Shallow clone\\n\\t            option = zrUtil.extend({}, option);\\n\\n\\t            option.data = geoCreator.getFilledRegions(option.data, mapName);\\n\\n\\t            return option;\\n\\t        },\\n\\n\\t        getRawValue: function (dataIndex) {\\n\\t            // Use value stored in data instead because it is calculated from multiple series\\n\\t            // FIXME Provide all value of multiple series ?\\n\\t            return this.getData().get('value', dataIndex);\\n\\t        },\\n\\n\\t        /**\\n\\t         * Get model of region\\n\\t         * @param  {string} name\\n\\t         * @return {module:echarts/model/Model}\\n\\t         */\\n\\t        getRegionModel: function (regionName) {\\n\\t            var data = this.getData();\\n\\t            return data.getItemModel(data.indexOfName(regionName));\\n\\t        },\\n\\n\\t        /**\\n\\t         * Map tooltip formatter\\n\\t         *\\n\\t         * @param {number} dataIndex\\n\\t         */\\n\\t        formatTooltip: function (dataIndex) {\\n\\t            // FIXME orignalData and data is a bit confusing\\n\\t            var data = this.getData();\\n\\t            var formattedValue = addCommas(this.getRawValue(dataIndex));\\n\\t            var name = data.getName(dataIndex);\\n\\n\\t            var seriesGroup = this.seriesGroup;\\n\\t            var seriesNames = [];\\n\\t            for (var i = 0; i < seriesGroup.length; i++) {\\n\\t                var otherIndex = seriesGroup[i].originalData.indexOfName(name);\\n\\t                if (!isNaN(seriesGroup[i].originalData.get('value', otherIndex))) {\\n\\t                    seriesNames.push(\\n\\t                        encodeHTML(seriesGroup[i].name)\\n\\t                    );\\n\\t                }\\n\\t            }\\n\\n\\t            return seriesNames.join(', ') + '<br />'\\n\\t                + encodeHTML(name + ' : ' + formattedValue);\\n\\t        },\\n\\n\\t        /**\\n\\t         * @implement\\n\\t         */\\n\\t        getTooltipPosition: function (dataIndex) {\\n\\t            if (dataIndex != null) {\\n\\t                var name = this.getData().getName(dataIndex);\\n\\t                var geo = this.coordinateSystem;\\n\\t                var region = geo.getRegion(name);\\n\\n\\t                return region && geo.dataToPoint(region.center);\\n\\t            }\\n\\t        },\\n\\n\\t        setZoom: function (zoom) {\\n\\t            this.option.zoom = zoom;\\n\\t        },\\n\\n\\t        setCenter: function (center) {\\n\\t            this.option.center = center;\\n\\t        },\\n\\n\\t        defaultOption: {\\n\\t            // 一级层叠\\n\\t            zlevel: 0,\\n\\t            // 二级层叠\\n\\t            z: 2,\\n\\n\\t            coordinateSystem: 'geo',\\n\\n\\t            // map should be explicitly specified since ec3.\\n\\t            map: '',\\n\\n\\t            // If `geoIndex` is not specified, a exclusive geo will be\\n\\t            // created. Otherwise use the specified geo component, and\\n\\t            // `map` and `mapType` are ignored.\\n\\t            // geoIndex: 0,\\n\\n\\t            // 'center' | 'left' | 'right' | 'x%' | {number}\\n\\t            left: 'center',\\n\\t            // 'center' | 'top' | 'bottom' | 'x%' | {number}\\n\\t            top: 'center',\\n\\t            // right\\n\\t            // bottom\\n\\t            // width:\\n\\t            // height\\n\\n\\t            // Aspect is width / height. Inited to be geoJson bbox aspect\\n\\t            // This parameter is used for scale this aspect\\n\\t            aspectScale: 0.75,\\n\\n\\t            ///// Layout with center and size\\n\\t            // If you wan't to put map in a fixed size box with right aspect ratio\\n\\t            // This two properties may more conveninet\\n\\t            // layoutCenter: [50%, 50%]\\n\\t            // layoutSize: 100\\n\\n\\n\\t            // 数值合并方式，默认加和，可选为：\\n\\t            // 'sum' | 'average' | 'max' | 'min'\\n\\t            // mapValueCalculation: 'sum',\\n\\t            // 地图数值计算结果小数精度\\n\\t            // mapValuePrecision: 0,\\n\\n\\n\\t            // 显示图例颜色标识（系列标识的小圆点），图例开启时有效\\n\\t            showLegendSymbol: true,\\n\\t            // 选择模式，默认关闭，可选single，multiple\\n\\t            // selectedMode: false,\\n\\t            dataRangeHoverLink: true,\\n\\t            // 是否开启缩放及漫游模式\\n\\t            // roam: false,\\n\\n\\t            // Define left-top, right-bottom coords to control view\\n\\t            // For example, [ [180, 90], [-180, -90] ],\\n\\t            // higher priority than center and zoom\\n\\t            boundingCoords: null,\\n\\n\\t            // Default on center of map\\n\\t            center: null,\\n\\n\\t            zoom: 1,\\n\\n\\t            scaleLimit: null,\\n\\n\\t            label: {\\n\\t                normal: {\\n\\t                    show: false,\\n\\t                    textStyle: {\\n\\t                        color: '#000'\\n\\t                    }\\n\\t                },\\n\\t                emphasis: {\\n\\t                    show: true,\\n\\t                    textStyle: {\\n\\t                        color: 'rgb(100,0,0)'\\n\\t                    }\\n\\t                }\\n\\t            },\\n\\t            // scaleLimit: null,\\n\\t            itemStyle: {\\n\\t                normal: {\\n\\t                    // color: 各异,\\n\\t                    borderWidth: 0.5,\\n\\t                    borderColor: '#444',\\n\\t                    areaColor: '#eee'\\n\\t                },\\n\\t                // 也是选中样式\\n\\t                emphasis: {\\n\\t                    areaColor: 'rgba(255,215,0,0.8)'\\n\\t                }\\n\\t            }\\n\\t        }\\n\\n\\t    });\\n\\n\\t    zrUtil.mixin(MapSeries, dataSelectableMixin);\\n\\n\\t    module.exports = MapSeries;\\n\\n\\n/***/ },\\n/* 171 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var Geo = __webpack_require__(172);\\n\\n\\t    var layout = __webpack_require__(71);\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var numberUtil = __webpack_require__(7);\\n\\n\\t    var mapDataStores = {};\\n\\n\\t    /**\\n\\t     * Resize method bound to the geo\\n\\t     * @param {module:echarts/coord/geo/GeoModel|module:echarts/chart/map/MapModel} geoModel\\n\\t     * @param {module:echarts/ExtensionAPI} api\\n\\t     */\\n\\t    function resizeGeo (geoModel, api) {\\n\\n\\t        var boundingCoords = geoModel.get('boundingCoords');\\n\\t        if (boundingCoords != null) {\\n\\t            var leftTop = boundingCoords[0];\\n\\t            var rightBottom = boundingCoords[1];\\n\\t            if (isNaN(leftTop[0]) || isNaN(leftTop[1]) || isNaN(rightBottom[0]) || isNaN(rightBottom[1])) {\\n\\t                if (true) {\\n\\t                    console.error('Invalid boundingCoords');\\n\\t                }\\n\\t            }\\n\\t            else {\\n\\t                this.setBoundingRect(leftTop[0], leftTop[1], rightBottom[0] - leftTop[0], rightBottom[1] - leftTop[1]);\\n\\t            }\\n\\t        }\\n\\n\\t        var rect = this.getBoundingRect();\\n\\n\\t        var boxLayoutOption;\\n\\n\\t        var center = geoModel.get('layoutCenter');\\n\\t        var size = geoModel.get('layoutSize');\\n\\n\\t        var viewWidth = api.getWidth();\\n\\t        var viewHeight = api.getHeight();\\n\\n\\t        var aspectScale = geoModel.get('aspectScale') || 0.75;\\n\\t        var aspect = rect.width / rect.height * aspectScale;\\n\\n\\t        var useCenterAndSize = false;\\n\\n\\t        if (center && size) {\\n\\t            center = [\\n\\t                numberUtil.parsePercent(center[0], viewWidth),\\n\\t                numberUtil.parsePercent(center[1], viewHeight)\\n\\t            ];\\n\\t            size = numberUtil.parsePercent(size, Math.min(viewWidth, viewHeight));\\n\\n\\t            if (!isNaN(center[0]) && !isNaN(center[1]) && !isNaN(size)) {\\n\\t                useCenterAndSize = true;\\n\\t            }\\n\\t            else {\\n\\t                if (true) {\\n\\t                    console.warn('Given layoutCenter or layoutSize data are invalid. Use left/top/width/height instead.');\\n\\t                }\\n\\t            }\\n\\t        }\\n\\n\\t        var viewRect;\\n\\t        if (useCenterAndSize) {\\n\\t            var viewRect = {};\\n\\t            if (aspect > 1) {\\n\\t                // Width is same with size\\n\\t                viewRect.width = size;\\n\\t                viewRect.height = size / aspect;\\n\\t            }\\n\\t            else {\\n\\t                viewRect.height = size;\\n\\t                viewRect.width = size * aspect;\\n\\t            }\\n\\t            viewRect.y = center[1] - viewRect.height / 2;\\n\\t            viewRect.x = center[0] - viewRect.width / 2;\\n\\t        }\\n\\t        else {\\n\\t            // Use left/top/width/height\\n\\t            boxLayoutOption = geoModel.getBoxLayoutParams();\\n\\n\\t            // 0.75 rate\\n\\t            boxLayoutOption.aspect = aspect;\\n\\n\\t            viewRect = layout.getLayoutRect(boxLayoutOption, {\\n\\t                width: viewWidth,\\n\\t                height: viewHeight\\n\\t            });\\n\\t        }\\n\\n\\t        this.setViewRect(viewRect.x, viewRect.y, viewRect.width, viewRect.height);\\n\\n\\t        this.setCenter(geoModel.get('center'));\\n\\t        this.setZoom(geoModel.get('zoom'));\\n\\t    }\\n\\n\\t    /**\\n\\t     * @param {module:echarts/coord/Geo} geo\\n\\t     * @param {module:echarts/model/Model} model\\n\\t     * @inner\\n\\t     */\\n\\t    function setGeoCoords(geo, model) {\\n\\t        zrUtil.each(model.get('geoCoord'), function (geoCoord, name) {\\n\\t            geo.addGeoCoord(name, geoCoord);\\n\\t        });\\n\\t    }\\n\\n\\t    if (true) {\\n\\t        var mapNotExistsError = function (name) {\\n\\t            console.error('Map ' + name + ' not exists. You can download map file on http://echarts.baidu.com/download-map.html');\\n\\t        };\\n\\t    }\\n\\n\\t    var geoCreator = {\\n\\n\\t        // For deciding which dimensions to use when creating list data\\n\\t        dimensions: Geo.prototype.dimensions,\\n\\n\\t        create: function (ecModel, api) {\\n\\t            var geoList = [];\\n\\n\\t            // FIXME Create each time may be slow\\n\\t            ecModel.eachComponent('geo', function (geoModel, idx) {\\n\\t                var name = geoModel.get('map');\\n\\t                var mapData = mapDataStores[name];\\n\\t                if (true) {\\n\\t                    if (!mapData) {\\n\\t                        mapNotExistsError(name);\\n\\t                    }\\n\\t                }\\n\\t                var geo = new Geo(\\n\\t                    name + idx, name,\\n\\t                    mapData && mapData.geoJson, mapData && mapData.specialAreas,\\n\\t                    geoModel.get('nameMap')\\n\\t                );\\n\\t                geo.zoomLimit = geoModel.get('scaleLimit');\\n\\t                geoList.push(geo);\\n\\n\\t                setGeoCoords(geo, geoModel);\\n\\n\\t                geoModel.coordinateSystem = geo;\\n\\t                geo.model = geoModel;\\n\\n\\t                // Inject resize method\\n\\t                geo.resize = resizeGeo;\\n\\n\\t                geo.resize(geoModel, api);\\n\\t            });\\n\\n\\t            ecModel.eachSeries(function (seriesModel) {\\n\\t                var coordSys = seriesModel.get('coordinateSystem');\\n\\t                if (coordSys === 'geo') {\\n\\t                    var geoIndex = seriesModel.get('geoIndex') || 0;\\n\\t                    seriesModel.coordinateSystem = geoList[geoIndex];\\n\\t                }\\n\\t            });\\n\\n\\t            // If has map series\\n\\t            var mapModelGroupBySeries = {};\\n\\n\\t            ecModel.eachSeriesByType('map', function (seriesModel) {\\n\\t                if (!seriesModel.getHostGeoModel()) {\\n\\t                    var mapType = seriesModel.getMapType();\\n\\t                    mapModelGroupBySeries[mapType] = mapModelGroupBySeries[mapType] || [];\\n\\t                    mapModelGroupBySeries[mapType].push(seriesModel);\\n\\t                }\\n\\t            });\\n\\n\\t            zrUtil.each(mapModelGroupBySeries, function (mapSeries, mapType) {\\n\\t                var mapData = mapDataStores[mapType];\\n\\t                if (true) {\\n\\t                    if (!mapData) {\\n\\t                        mapNotExistsError(mapSeries[0].get('map'));\\n\\t                    }\\n\\t                }\\n\\n\\t                var nameMapList = zrUtil.map(mapSeries, function (singleMapSeries) {\\n\\t                    return singleMapSeries.get('nameMap');\\n\\t                });\\n\\t                var geo = new Geo(\\n\\t                    mapType, mapType,\\n\\t                    mapData && mapData.geoJson, mapData && mapData.specialAreas,\\n\\t                    zrUtil.mergeAll(nameMapList)\\n\\t                );\\n\\t                geo.zoomLimit = zrUtil.retrieve.apply(null, zrUtil.map(mapSeries, function (singleMapSeries) {\\n\\t                    return singleMapSeries.get('scaleLimit');\\n\\t                }));\\n\\t                geoList.push(geo);\\n\\n\\t                // Inject resize method\\n\\t                geo.resize = resizeGeo;\\n\\n\\t                geo.resize(mapSeries[0], api);\\n\\n\\t                zrUtil.each(mapSeries, function (singleMapSeries) {\\n\\t                    singleMapSeries.coordinateSystem = geo;\\n\\n\\t                    setGeoCoords(geo, singleMapSeries);\\n\\t                });\\n\\t            });\\n\\n\\t            return geoList;\\n\\t        },\\n\\n\\t        /**\\n\\t         * @param {string} mapName\\n\\t         * @param {Object|string} geoJson\\n\\t         * @param {Object} [specialAreas]\\n\\t         *\\n\\t         * @example\\n\\t         *     $.get('USA.json', function (geoJson) {\\n\\t         *         echarts.registerMap('USA', geoJson);\\n\\t         *         // Or\\n\\t         *         echarts.registerMap('USA', {\\n\\t         *             geoJson: geoJson,\\n\\t         *             specialAreas: {}\\n\\t         *         })\\n\\t         *     });\\n\\t         */\\n\\t        registerMap: function (mapName, geoJson, specialAreas) {\\n\\t            if (geoJson.geoJson && !geoJson.features) {\\n\\t                specialAreas = geoJson.specialAreas;\\n\\t                geoJson = geoJson.geoJson;\\n\\t            }\\n\\t            if (typeof geoJson === 'string') {\\n\\t                geoJson = (typeof JSON !== 'undefined' && JSON.parse)\\n\\t                    ? JSON.parse(geoJson) : (new Function('return (' + geoJson + ');'))();\\n\\t            }\\n\\t            mapDataStores[mapName] = {\\n\\t                geoJson: geoJson,\\n\\t                specialAreas: specialAreas\\n\\t            };\\n\\t        },\\n\\n\\t        /**\\n\\t         * @param {string} mapName\\n\\t         * @return {Object}\\n\\t         */\\n\\t        getMap: function (mapName) {\\n\\t            return mapDataStores[mapName];\\n\\t        },\\n\\n\\t        /**\\n\\t         * Fill given regions array\\n\\t         * @param  {Array.<Object>} originRegionArr\\n\\t         * @param  {string} mapName\\n\\t         * @return {Array}\\n\\t         */\\n\\t        getFilledRegions: function (originRegionArr, mapName) {\\n\\t            // Not use the original\\n\\t            var regionsArr = (originRegionArr || []).slice();\\n\\n\\t            var map = geoCreator.getMap(mapName);\\n\\t            var geoJson = map && map.geoJson;\\n\\t            if (!geoJson) {\\n\\t                if (true) {\\n\\t                    mapNotExistsError(mapName);\\n\\t                }\\n\\t                return originRegionArr;\\n\\t            }\\n\\n\\t            var dataNameMap = zrUtil.createHashMap();\\n\\t            var features = geoJson.features;\\n\\t            for (var i = 0; i < regionsArr.length; i++) {\\n\\t                dataNameMap.set(regionsArr[i].name, regionsArr[i]);\\n\\t            }\\n\\n\\t            for (var i = 0; i < features.length; i++) {\\n\\t                var name = features[i].properties.name;\\n\\t                if (!dataNameMap.get(name)) {\\n\\t                    regionsArr.push({\\n\\t                        name: name\\n\\t                    });\\n\\t                }\\n\\t            }\\n\\t            return regionsArr;\\n\\t        }\\n\\t    };\\n\\n\\t    // Inject methods into echarts\\n\\t    var echarts = __webpack_require__(1);\\n\\n\\t    echarts.registerMap = geoCreator.registerMap;\\n\\n\\t    echarts.getMap = geoCreator.getMap;\\n\\n\\t    echarts.parseGeoJSON = __webpack_require__(173);\\n\\n\\t    // TODO\\n\\t    echarts.loadMap = function () {};\\n\\n\\t    echarts.registerCoordinateSystem('geo', geoCreator);\\n\\n\\t    module.exports = geoCreator;\\n\\n\\n/***/ },\\n/* 172 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var parseGeoJson = __webpack_require__(173);\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\n\\t    var BoundingRect = __webpack_require__(9);\\n\\n\\t    var View = __webpack_require__(176);\\n\\n\\n\\t    // Geo fix functions\\n\\t    var geoFixFuncs = [\\n\\t        __webpack_require__(177),\\n\\t        __webpack_require__(178),\\n\\t        __webpack_require__(179),\\n\\t        __webpack_require__(180)\\n\\t    ];\\n\\n\\t    /**\\n\\t     * [Geo description]\\n\\t     * @param {string} name Geo name\\n\\t     * @param {string} map Map type\\n\\t     * @param {Object} geoJson\\n\\t     * @param {Object} [specialAreas]\\n\\t     *        Specify the positioned areas by left, top, width, height\\n\\t     * @param {Object.<string, string>} [nameMap]\\n\\t     *        Specify name alias\\n\\t     */\\n\\t    function Geo(name, map, geoJson, specialAreas, nameMap) {\\n\\n\\t        View.call(this, name);\\n\\n\\t        /**\\n\\t         * Map type\\n\\t         * @type {string}\\n\\t         */\\n\\t        this.map = map;\\n\\n\\t        this._nameCoordMap = zrUtil.createHashMap();\\n\\n\\t        this.loadGeoJson(geoJson, specialAreas, nameMap);\\n\\t    }\\n\\n\\t    Geo.prototype = {\\n\\n\\t        constructor: Geo,\\n\\n\\t        type: 'geo',\\n\\n\\t        /**\\n\\t         * @param {Array.<string>}\\n\\t         * @readOnly\\n\\t         */\\n\\t        dimensions: ['lng', 'lat'],\\n\\n\\t        /**\\n\\t         * If contain given lng,lat coord\\n\\t         * @param {Array.<number>}\\n\\t         * @readOnly\\n\\t         */\\n\\t        containCoord: function (coord) {\\n\\t            var regions = this.regions;\\n\\t            for (var i = 0; i < regions.length; i++) {\\n\\t                if (regions[i].contain(coord)) {\\n\\t                    return true;\\n\\t                }\\n\\t            }\\n\\t            return false;\\n\\t        },\\n\\t        /**\\n\\t         * @param {Object} geoJson\\n\\t         * @param {Object} [specialAreas]\\n\\t         *        Specify the positioned areas by left, top, width, height\\n\\t         * @param {Object.<string, string>} [nameMap]\\n\\t         *        Specify name alias\\n\\t         */\\n\\t        loadGeoJson: function (geoJson, specialAreas, nameMap) {\\n\\t            // https://jsperf.com/try-catch-performance-overhead\\n\\t            try {\\n\\t                this.regions = geoJson ? parseGeoJson(geoJson) : [];\\n\\t            }\\n\\t            catch (e) {\\n\\t                throw 'Invalid geoJson format\\\\n' + e.message;\\n\\t            }\\n\\t            specialAreas = specialAreas || {};\\n\\t            nameMap = nameMap || {};\\n\\t            var regions = this.regions;\\n\\t            var regionsMap = zrUtil.createHashMap();\\n\\t            for (var i = 0; i < regions.length; i++) {\\n\\t                var regionName = regions[i].name;\\n\\t                // Try use the alias in nameMap\\n\\t                regionName = nameMap.hasOwnProperty(regionName) ? nameMap[regionName] : regionName;\\n\\t                regions[i].name = regionName;\\n\\n\\t                regionsMap.set(regionName, regions[i]);\\n\\t                // Add geoJson\\n\\t                this.addGeoCoord(regionName, regions[i].center);\\n\\n\\t                // Some area like Alaska in USA map needs to be tansformed\\n\\t                // to look better\\n\\t                var specialArea = specialAreas[regionName];\\n\\t                if (specialArea) {\\n\\t                    regions[i].transformTo(\\n\\t                        specialArea.left, specialArea.top, specialArea.width, specialArea.height\\n\\t                    );\\n\\t                }\\n\\t            }\\n\\n\\t            this._regionsMap = regionsMap;\\n\\n\\t            this._rect = null;\\n\\n\\t            zrUtil.each(geoFixFuncs, function (fixFunc) {\\n\\t                fixFunc(this);\\n\\t            }, this);\\n\\t        },\\n\\n\\t        // Overwrite\\n\\t        transformTo: function (x, y, width, height) {\\n\\t            var rect = this.getBoundingRect();\\n\\n\\t            rect = rect.clone();\\n\\t            // Longitute is inverted\\n\\t            rect.y = -rect.y - rect.height;\\n\\n\\t            var viewTransform = this._viewTransform;\\n\\n\\t            viewTransform.transform = rect.calculateTransform(\\n\\t                new BoundingRect(x, y, width, height)\\n\\t            );\\n\\n\\t            viewTransform.decomposeTransform();\\n\\n\\t            var scale = viewTransform.scale;\\n\\t            scale[1] = -scale[1];\\n\\n\\t            viewTransform.updateTransform();\\n\\n\\t            this._updateTransform();\\n\\t        },\\n\\n\\t        /**\\n\\t         * @param {string} name\\n\\t         * @return {module:echarts/coord/geo/Region}\\n\\t         */\\n\\t        getRegion: function (name) {\\n\\t            return this._regionsMap.get(name);\\n\\t        },\\n\\n\\t        getRegionByCoord: function (coord) {\\n\\t            var regions = this.regions;\\n\\t            for (var i = 0; i < regions.length; i++) {\\n\\t                if (regions[i].contain(coord)) {\\n\\t                    return regions[i];\\n\\t                }\\n\\t            }\\n\\t        },\\n\\n\\t        /**\\n\\t         * Add geoCoord for indexing by name\\n\\t         * @param {string} name\\n\\t         * @param {Array.<number>} geoCoord\\n\\t         */\\n\\t        addGeoCoord: function (name, geoCoord) {\\n\\t            this._nameCoordMap.set(name, geoCoord);\\n\\t        },\\n\\n\\t        /**\\n\\t         * Get geoCoord by name\\n\\t         * @param {string} name\\n\\t         * @return {Array.<number>}\\n\\t         */\\n\\t        getGeoCoord: function (name) {\\n\\t            return this._nameCoordMap.get(name);\\n\\t        },\\n\\n\\t        // Overwrite\\n\\t        getBoundingRect: function () {\\n\\t            if (this._rect) {\\n\\t                return this._rect;\\n\\t            }\\n\\t            var rect;\\n\\n\\t            var regions = this.regions;\\n\\t            for (var i = 0; i < regions.length; i++) {\\n\\t                var regionRect = regions[i].getBoundingRect();\\n\\t                rect = rect || regionRect.clone();\\n\\t                rect.union(regionRect);\\n\\t            }\\n\\t            // FIXME Always return new ?\\n\\t            return (this._rect = rect || new BoundingRect(0, 0, 0, 0));\\n\\t        },\\n\\n\\t        /**\\n\\t         * Convert series data to a list of points\\n\\t         * @param {module:echarts/data/List} data\\n\\t         * @param {boolean} stack\\n\\t         * @return {Array}\\n\\t         *  Return list of points. For example:\\n\\t         *  `[[10, 10], [20, 20], [30, 30]]`\\n\\t         */\\n\\t        dataToPoints: function (data) {\\n\\t            var item = [];\\n\\t            return data.mapArray(['lng', 'lat'], function (lon, lat) {\\n\\t                item[0] = lon;\\n\\t                item[1] = lat;\\n\\t                return this.dataToPoint(item);\\n\\t            }, this);\\n\\t        },\\n\\n\\t        /**\\n\\t         * @param {string|Array.<number>} data\\n\\t         * @return {Array.<number>}\\n\\t         */\\n\\t        dataToPoint: function (data) {\\n\\t            if (typeof data === 'string') {\\n\\t                // Map area name to geoCoord\\n\\t                data = this.getGeoCoord(data);\\n\\t            }\\n\\t            if (data) {\\n\\t                return View.prototype.dataToPoint.call(this, data);\\n\\t            }\\n\\t        },\\n\\n\\t        /**\\n\\t         * @inheritDoc\\n\\t         */\\n\\t        convertToPixel: zrUtil.curry(doConvert, 'dataToPoint'),\\n\\n\\t        /**\\n\\t         * @inheritDoc\\n\\t         */\\n\\t        convertFromPixel: zrUtil.curry(doConvert, 'pointToData')\\n\\n\\t    };\\n\\n\\t    zrUtil.mixin(Geo, View);\\n\\n\\t    function doConvert(methodName, ecModel, finder, value) {\\n\\t        var geoModel = finder.geoModel;\\n\\t        var seriesModel = finder.seriesModel;\\n\\n\\t        var coordSys = geoModel\\n\\t            ? geoModel.coordinateSystem\\n\\t            : seriesModel\\n\\t            ? (\\n\\t                seriesModel.coordinateSystem // For map.\\n\\t                || (seriesModel.getReferringComponents('geo')[0] || {}).coordinateSystem\\n\\t            )\\n\\t            : null;\\n\\n\\t        return coordSys === this ? coordSys[methodName](value) : null;\\n\\t    }\\n\\n\\t    module.exports = Geo;\\n\\n\\n/***/ },\\n/* 173 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * Parse and decode geo json\\n\\t * @module echarts/coord/geo/parseGeoJson\\n\\t */\\n\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\n\\t    var Region = __webpack_require__(174);\\n\\n\\t    function decode(json) {\\n\\t        if (!json.UTF8Encoding) {\\n\\t            return json;\\n\\t        }\\n\\t        var encodeScale = json.UTF8Scale;\\n\\t        if (encodeScale == null) {\\n\\t            encodeScale = 1024;\\n\\t        }\\n\\n\\t        var features = json.features;\\n\\n\\t        for (var f = 0; f < features.length; f++) {\\n\\t            var feature = features[f];\\n\\t            var geometry = feature.geometry;\\n\\t            var coordinates = geometry.coordinates;\\n\\t            var encodeOffsets = geometry.encodeOffsets;\\n\\n\\t            for (var c = 0; c < coordinates.length; c++) {\\n\\t                var coordinate = coordinates[c];\\n\\n\\t                if (geometry.type === 'Polygon') {\\n\\t                    coordinates[c] = decodePolygon(\\n\\t                        coordinate,\\n\\t                        encodeOffsets[c],\\n\\t                        encodeScale\\n\\t                    );\\n\\t                }\\n\\t                else if (geometry.type === 'MultiPolygon') {\\n\\t                    for (var c2 = 0; c2 < coordinate.length; c2++) {\\n\\t                        var polygon = coordinate[c2];\\n\\t                        coordinate[c2] = decodePolygon(\\n\\t                            polygon,\\n\\t                            encodeOffsets[c][c2],\\n\\t                            encodeScale\\n\\t                        );\\n\\t                    }\\n\\t                }\\n\\t            }\\n\\t        }\\n\\t        // Has been decoded\\n\\t        json.UTF8Encoding = false;\\n\\t        return json;\\n\\t    }\\n\\n\\t    function decodePolygon(coordinate, encodeOffsets, encodeScale) {\\n\\t        var result = [];\\n\\t        var prevX = encodeOffsets[0];\\n\\t        var prevY = encodeOffsets[1];\\n\\n\\t        for (var i = 0; i < coordinate.length; i += 2) {\\n\\t            var x = coordinate.charCodeAt(i) - 64;\\n\\t            var y = coordinate.charCodeAt(i + 1) - 64;\\n\\t            // ZigZag decoding\\n\\t            x = (x >> 1) ^ (-(x & 1));\\n\\t            y = (y >> 1) ^ (-(y & 1));\\n\\t            // Delta deocding\\n\\t            x += prevX;\\n\\t            y += prevY;\\n\\n\\t            prevX = x;\\n\\t            prevY = y;\\n\\t            // Dequantize\\n\\t            result.push([x / encodeScale, y / encodeScale]);\\n\\t        }\\n\\n\\t        return result;\\n\\t    }\\n\\n\\t    /**\\n\\t     * @alias module:echarts/coord/geo/parseGeoJson\\n\\t     * @param {Object} geoJson\\n\\t     * @return {module:zrender/container/Group}\\n\\t     */\\n\\t    module.exports = function (geoJson) {\\n\\n\\t        decode(geoJson);\\n\\n\\t        return zrUtil.map(zrUtil.filter(geoJson.features, function (featureObj) {\\n\\t            // Output of mapshaper may have geometry null\\n\\t            return featureObj.geometry\\n\\t                && featureObj.properties\\n\\t                && featureObj.geometry.coordinates.length > 0;\\n\\t        }), function (featureObj) {\\n\\t            var properties = featureObj.properties;\\n\\t            var geo = featureObj.geometry;\\n\\n\\t            var coordinates = geo.coordinates;\\n\\n\\t            var geometries = [];\\n\\t            if (geo.type === 'Polygon') {\\n\\t                geometries.push({\\n\\t                    type: 'polygon',\\n\\t                    // According to the GeoJSON specification.\\n\\t                    // First must be exterior, and the rest are all interior(holes).\\n\\t                    exterior: coordinates[0],\\n\\t                    interiors: coordinates.slice(1)\\n\\t                });\\n\\t            }\\n\\t            if (geo.type === 'MultiPolygon') {\\n\\t                zrUtil.each(coordinates, function (item) {\\n\\t                    if (item[0]) {\\n\\t                        geometries.push({\\n\\t                            type: 'polygon',\\n\\t                            exterior: item[0],\\n\\t                            interiors: item.slice(1)\\n\\t                        });\\n\\t                    }\\n\\t                });\\n\\t            }\\n\\n\\t            var region = new Region(\\n\\t                properties.name,\\n\\t                geometries,\\n\\t                properties.cp\\n\\t            );\\n\\t            region.properties = properties;\\n\\t            return region;\\n\\t        });\\n\\t    };\\n\\n\\n/***/ },\\n/* 174 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * @module echarts/coord/geo/Region\\n\\t */\\n\\n\\n\\t    var polygonContain = __webpack_require__(175);\\n\\n\\t    var BoundingRect = __webpack_require__(9);\\n\\n\\t    var bbox = __webpack_require__(38);\\n\\t    var vec2 = __webpack_require__(10);\\n\\n\\t    /**\\n\\t     * @param {string} name\\n\\t     * @param {Array} geometries\\n\\t     * @param {Array.<number>} cp\\n\\t     */\\n\\t    function Region(name, geometries, cp) {\\n\\n\\t        /**\\n\\t         * @type {string}\\n\\t         * @readOnly\\n\\t         */\\n\\t        this.name = name;\\n\\n\\t        /**\\n\\t         * @type {Array.<Array>}\\n\\t         * @readOnly\\n\\t         */\\n\\t        this.geometries = geometries;\\n\\n\\t        if (!cp) {\\n\\t            var rect = this.getBoundingRect();\\n\\t            cp = [\\n\\t                rect.x + rect.width / 2,\\n\\t                rect.y + rect.height / 2\\n\\t            ];\\n\\t        }\\n\\t        else {\\n\\t            cp = [cp[0], cp[1]];\\n\\t        }\\n\\t        /**\\n\\t         * @type {Array.<number>}\\n\\t         */\\n\\t        this.center = cp;\\n\\t    }\\n\\n\\t    Region.prototype = {\\n\\n\\t        constructor: Region,\\n\\n\\t        properties: null,\\n\\n\\t        /**\\n\\t         * @return {module:zrender/core/BoundingRect}\\n\\t         */\\n\\t        getBoundingRect: function () {\\n\\t            var rect = this._rect;\\n\\t            if (rect) {\\n\\t                return rect;\\n\\t            }\\n\\n\\t            var MAX_NUMBER = Number.MAX_VALUE;\\n\\t            var min = [MAX_NUMBER, MAX_NUMBER];\\n\\t            var max = [-MAX_NUMBER, -MAX_NUMBER];\\n\\t            var min2 = [];\\n\\t            var max2 = [];\\n\\t            var geometries = this.geometries;\\n\\t            for (var i = 0; i < geometries.length; i++) {\\n\\t                // Only support polygon\\n\\t                if (geometries[i].type !== 'polygon') {\\n\\t                    continue;\\n\\t                }\\n\\t                // Doesn't consider hole\\n\\t                var exterior = geometries[i].exterior;\\n\\t                bbox.fromPoints(exterior, min2, max2);\\n\\t                vec2.min(min, min, min2);\\n\\t                vec2.max(max, max, max2);\\n\\t            }\\n\\t            // No data\\n\\t            if (i === 0) {\\n\\t                min[0] = min[1] = max[0] = max[1] = 0;\\n\\t            }\\n\\n\\t            return (this._rect = new BoundingRect(\\n\\t                min[0], min[1], max[0] - min[0], max[1] - min[1]\\n\\t            ));\\n\\t        },\\n\\n\\t        /**\\n\\t         * @param {<Array.<number>} coord\\n\\t         * @return {boolean}\\n\\t         */\\n\\t        contain: function (coord) {\\n\\t            var rect = this.getBoundingRect();\\n\\t            var geometries = this.geometries;\\n\\t            if (!rect.contain(coord[0], coord[1])) {\\n\\t                return false;\\n\\t            }\\n\\t            loopGeo: for (var i = 0, len = geometries.length; i < len; i++) {\\n\\t                // Only support polygon.\\n\\t                if (geometries[i].type !== 'polygon') {\\n\\t                    continue;\\n\\t                }\\n\\t                var exterior = geometries[i].exterior;\\n\\t                var interiors = geometries[i].interiors;\\n\\t                if (polygonContain.contain(exterior, coord[0], coord[1])) {\\n\\t                    // Not in the region if point is in the hole.\\n\\t                    for (var k = 0; k < (interiors ? interiors.length : 0); k++) {\\n\\t                        if (polygonContain.contain(interiors[k])) {\\n\\t                            continue loopGeo;\\n\\t                        }\\n\\t                    }\\n\\t                    return true;\\n\\t                }\\n\\t            }\\n\\t            return false;\\n\\t        },\\n\\n\\t        transformTo: function (x, y, width, height) {\\n\\t            var rect = this.getBoundingRect();\\n\\t            var aspect = rect.width / rect.height;\\n\\t            if (!width) {\\n\\t                width = aspect * height;\\n\\t            }\\n\\t            else if (!height) {\\n\\t                height = width / aspect ;\\n\\t            }\\n\\t            var target = new BoundingRect(x, y, width, height);\\n\\t            var transform = rect.calculateTransform(target);\\n\\t            var geometries = this.geometries;\\n\\t            for (var i = 0; i < geometries.length; i++) {\\n\\t                // Only support polygon.\\n\\t                if (geometries[i].type !== 'polygon') {\\n\\t                    continue;\\n\\t                }\\n\\t                var exterior = geometries[i].exterior;\\n\\t                var interiors = geometries[i].interiors;\\n\\t                for (var p = 0; p < exterior.length; p++) {\\n\\t                    vec2.applyTransform(exterior[p], exterior[p], transform);\\n\\t                }\\n\\t                for (var h = 0; h < (interiors ? interiors.length : 0); h++) {\\n\\t                    for (var p = 0; p < interiors[h].length; p++) {\\n\\t                        vec2.applyTransform(interiors[h][p], interiors[h][p], transform);\\n\\t                    }\\n\\t                }\\n\\t            }\\n\\t            rect = this._rect;\\n\\t            rect.copy(target);\\n\\t            // Update center\\n\\t            this.center = [\\n\\t                rect.x + rect.width / 2,\\n\\t                rect.y + rect.height / 2\\n\\t            ];\\n\\t        }\\n\\t    };\\n\\n\\t    module.exports = Region;\\n\\n\\n/***/ },\\n/* 175 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var windingLine = __webpack_require__(45);\\n\\n\\t    var EPSILON = 1e-8;\\n\\n\\t    function isAroundEqual(a, b) {\\n\\t        return Math.abs(a - b) < EPSILON;\\n\\t    }\\n\\n\\t    function contain(points, x, y) {\\n\\t        var w = 0;\\n\\t        var p = points[0];\\n\\n\\t        if (!p) {\\n\\t            return false;\\n\\t        }\\n\\n\\t        for (var i = 1; i < points.length; i++) {\\n\\t            var p2 = points[i];\\n\\t            w += windingLine(p[0], p[1], p2[0], p2[1], x, y);\\n\\t            p = p2;\\n\\t        }\\n\\n\\t        // Close polygon\\n\\t        var p0 = points[0];\\n\\t        if (!isAroundEqual(p[0], p0[0]) || !isAroundEqual(p[1], p0[1])) {\\n\\t            w += windingLine(p[0], p[1], p0[0], p0[1], x, y);\\n\\t        }\\n\\n\\t        return w !== 0;\\n\\t    }\\n\\n\\n\\t    module.exports = {\\n\\t        contain: contain\\n\\t    };\\n\\n\\n/***/ },\\n/* 176 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * Simple view coordinate system\\n\\t * Mapping given x, y to transformd view x, y\\n\\t */\\n\\n\\n\\t    var vector = __webpack_require__(10);\\n\\t    var matrix = __webpack_require__(11);\\n\\n\\t    var Transformable = __webpack_require__(26);\\n\\t    var zrUtil = __webpack_require__(4);\\n\\n\\t    var BoundingRect = __webpack_require__(9);\\n\\n\\t    var v2ApplyTransform = vector.applyTransform;\\n\\n\\t    // Dummy transform node\\n\\t    function TransformDummy() {\\n\\t        Transformable.call(this);\\n\\t    }\\n\\t    zrUtil.mixin(TransformDummy, Transformable);\\n\\n\\t    function View(name) {\\n\\t        /**\\n\\t         * @type {string}\\n\\t         */\\n\\t        this.name = name;\\n\\n\\t        /**\\n\\t         * @type {Object}\\n\\t         */\\n\\t        this.zoomLimit;\\n\\n\\t        Transformable.call(this);\\n\\n\\t        this._roamTransform = new TransformDummy();\\n\\n\\t        this._viewTransform = new TransformDummy();\\n\\n\\t        this._center;\\n\\t        this._zoom;\\n\\t    }\\n\\n\\t    View.prototype = {\\n\\n\\t        constructor: View,\\n\\n\\t        type: 'view',\\n\\n\\t        /**\\n\\t         * @param {Array.<string>}\\n\\t         * @readOnly\\n\\t         */\\n\\t        dimensions: ['x', 'y'],\\n\\n\\t        /**\\n\\t         * Set bounding rect\\n\\t         * @param {number} x\\n\\t         * @param {number} y\\n\\t         * @param {number} width\\n\\t         * @param {number} height\\n\\t         */\\n\\n\\t        // PENDING to getRect\\n\\t        setBoundingRect: function (x, y, width, height) {\\n\\t            this._rect = new BoundingRect(x, y, width, height);\\n\\t            return this._rect;\\n\\t        },\\n\\n\\t        /**\\n\\t         * @return {module:zrender/core/BoundingRect}\\n\\t         */\\n\\t        // PENDING to getRect\\n\\t        getBoundingRect: function () {\\n\\t            return this._rect;\\n\\t        },\\n\\n\\t        /**\\n\\t         * @param {number} x\\n\\t         * @param {number} y\\n\\t         * @param {number} width\\n\\t         * @param {number} height\\n\\t         */\\n\\t        setViewRect: function (x, y, width, height) {\\n\\t            this.transformTo(x, y, width, height);\\n\\t            this._viewRect = new BoundingRect(x, y, width, height);\\n\\t        },\\n\\n\\t        /**\\n\\t         * Transformed to particular position and size\\n\\t         * @param {number} x\\n\\t         * @param {number} y\\n\\t         * @param {number} width\\n\\t         * @param {number} height\\n\\t         */\\n\\t        transformTo: function (x, y, width, height) {\\n\\t            var rect = this.getBoundingRect();\\n\\t            var viewTransform = this._viewTransform;\\n\\n\\t            viewTransform.transform = rect.calculateTransform(\\n\\t                new BoundingRect(x, y, width, height)\\n\\t            );\\n\\n\\t            viewTransform.decomposeTransform();\\n\\n\\t            this._updateTransform();\\n\\t        },\\n\\n\\t        /**\\n\\t         * Set center of view\\n\\t         * @param {Array.<number>} [centerCoord]\\n\\t         */\\n\\t        setCenter: function (centerCoord) {\\n\\t            if (!centerCoord) {\\n\\t                return;\\n\\t            }\\n\\t            this._center = centerCoord;\\n\\n\\t            this._updateCenterAndZoom();\\n\\t        },\\n\\n\\t        /**\\n\\t         * @param {number} zoom\\n\\t         */\\n\\t        setZoom: function (zoom) {\\n\\t            zoom = zoom || 1;\\n\\n\\t            var zoomLimit = this.zoomLimit;\\n\\t            if (zoomLimit) {\\n\\t                if (zoomLimit.max != null) {\\n\\t                    zoom = Math.min(zoomLimit.max, zoom);\\n\\t                }\\n\\t                if (zoomLimit.min != null) {\\n\\t                    zoom = Math.max(zoomLimit.min, zoom);\\n\\t                }\\n\\t            }\\n\\t            this._zoom = zoom;\\n\\n\\t            this._updateCenterAndZoom();\\n\\t        },\\n\\n\\t        /**\\n\\t         * Get default center without roam\\n\\t         */\\n\\t        getDefaultCenter: function () {\\n\\t            // Rect before any transform\\n\\t            var rawRect = this.getBoundingRect();\\n\\t            var cx = rawRect.x + rawRect.width / 2;\\n\\t            var cy = rawRect.y + rawRect.height / 2;\\n\\n\\t            return [cx, cy];\\n\\t        },\\n\\n\\t        getCenter: function () {\\n\\t            return this._center || this.getDefaultCenter();\\n\\t        },\\n\\n\\t        getZoom: function () {\\n\\t            return this._zoom || 1;\\n\\t        },\\n\\n\\t        /**\\n\\t         * @return {Array.<number}\\n\\t         */\\n\\t        getRoamTransform: function () {\\n\\t            return this._roamTransform;\\n\\t        },\\n\\n\\t        _updateCenterAndZoom: function () {\\n\\t            // Must update after view transform updated\\n\\t            var viewTransformMatrix = this._viewTransform.getLocalTransform();\\n\\t            var roamTransform = this._roamTransform;\\n\\t            var defaultCenter = this.getDefaultCenter();\\n\\t            var center = this.getCenter();\\n\\t            var zoom = this.getZoom();\\n\\n\\t            center = vector.applyTransform([], center, viewTransformMatrix);\\n\\t            defaultCenter = vector.applyTransform([], defaultCenter, viewTransformMatrix);\\n\\n\\t            roamTransform.origin = center;\\n\\t            roamTransform.position = [\\n\\t                defaultCenter[0] - center[0],\\n\\t                defaultCenter[1] - center[1]\\n\\t            ];\\n\\t            roamTransform.scale = [zoom, zoom];\\n\\n\\t            this._updateTransform();\\n\\t        },\\n\\n\\t        /**\\n\\t         * Update transform from roam and mapLocation\\n\\t         * @private\\n\\t         */\\n\\t        _updateTransform: function () {\\n\\t            var roamTransform = this._roamTransform;\\n\\t            var viewTransform = this._viewTransform;\\n\\n\\t            viewTransform.parent = roamTransform;\\n\\t            roamTransform.updateTransform();\\n\\t            viewTransform.updateTransform();\\n\\n\\t            viewTransform.transform\\n\\t                && matrix.copy(this.transform || (this.transform = []), viewTransform.transform);\\n\\n\\t            if (this.transform) {\\n\\t                this.invTransform = this.invTransform || [];\\n\\t                matrix.invert(this.invTransform, this.transform);\\n\\t            }\\n\\t            else {\\n\\t                this.invTransform = null;\\n\\t            }\\n\\t            this.decomposeTransform();\\n\\t        },\\n\\n\\t        /**\\n\\t         * @return {module:zrender/core/BoundingRect}\\n\\t         */\\n\\t        getViewRect: function () {\\n\\t            return this._viewRect;\\n\\t        },\\n\\n\\t        /**\\n\\t         * Get view rect after roam transform\\n\\t         * @return {module:zrender/core/BoundingRect}\\n\\t         */\\n\\t        getViewRectAfterRoam: function () {\\n\\t            var rect = this.getBoundingRect().clone();\\n\\t            rect.applyTransform(this.transform);\\n\\t            return rect;\\n\\t        },\\n\\n\\t        /**\\n\\t         * Convert a single (lon, lat) data item to (x, y) point.\\n\\t         * @param {Array.<number>} data\\n\\t         * @return {Array.<number>}\\n\\t         */\\n\\t        dataToPoint: function (data) {\\n\\t            var transform = this.transform;\\n\\t            return transform\\n\\t                ? v2ApplyTransform([], data, transform)\\n\\t                : [data[0], data[1]];\\n\\t        },\\n\\n\\t        /**\\n\\t         * Convert a (x, y) point to (lon, lat) data\\n\\t         * @param {Array.<number>} point\\n\\t         * @return {Array.<number>}\\n\\t         */\\n\\t        pointToData: function (point) {\\n\\t            var invTransform = this.invTransform;\\n\\t            return invTransform\\n\\t                ? v2ApplyTransform([], point, invTransform)\\n\\t                : [point[0], point[1]];\\n\\t        },\\n\\n\\t        /**\\n\\t         * @implements\\n\\t         * see {module:echarts/CoodinateSystem}\\n\\t         */\\n\\t        convertToPixel: zrUtil.curry(doConvert, 'dataToPoint'),\\n\\n\\t        /**\\n\\t         * @implements\\n\\t         * see {module:echarts/CoodinateSystem}\\n\\t         */\\n\\t        convertFromPixel: zrUtil.curry(doConvert, 'pointToData'),\\n\\n\\t        /**\\n\\t         * @implements\\n\\t         * see {module:echarts/CoodinateSystem}\\n\\t         */\\n\\t        containPoint: function (point) {\\n\\t            return this.getViewRectAfterRoam().contain(point[0], point[1]);\\n\\t        }\\n\\n\\t        /**\\n\\t         * @return {number}\\n\\t         */\\n\\t        // getScalarScale: function () {\\n\\t        //     // Use determinant square root of transform to mutiply scalar\\n\\t        //     var m = this.transform;\\n\\t        //     var det = Math.sqrt(Math.abs(m[0] * m[3] - m[2] * m[1]));\\n\\t        //     return det;\\n\\t        // }\\n\\t    };\\n\\n\\t    zrUtil.mixin(View, Transformable);\\n\\n\\t    function doConvert(methodName, ecModel, finder, value) {\\n\\t        var seriesModel = finder.seriesModel;\\n\\t        var coordSys = seriesModel ? seriesModel.coordinateSystem : null; // e.g., graph.\\n\\t        return coordSys === this ? coordSys[methodName](value) : null;\\n\\t    }\\n\\n\\t    module.exports = View;\\n\\n\\n/***/ },\\n/* 177 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t// Fix for 南海诸岛\\n\\n\\n\\t    var Region = __webpack_require__(174);\\n\\t    var zrUtil = __webpack_require__(4);\\n\\n\\t    var geoCoord = [126, 25];\\n\\n\\t    var points = [\\n\\t        [[0,3.5],[7,11.2],[15,11.9],[30,7],[42,0.7],[52,0.7],\\n\\t         [56,7.7],[59,0.7],[64,0.7],[64,0],[5,0],[0,3.5]],\\n\\t        [[13,16.1],[19,14.7],[16,21.7],[11,23.1],[13,16.1]],\\n\\t        [[12,32.2],[14,38.5],[15,38.5],[13,32.2],[12,32.2]],\\n\\t        [[16,47.6],[12,53.2],[13,53.2],[18,47.6],[16,47.6]],\\n\\t        [[6,64.4],[8,70],[9,70],[8,64.4],[6,64.4]],\\n\\t        [[23,82.6],[29,79.8],[30,79.8],[25,82.6],[23,82.6]],\\n\\t        [[37,70.7],[43,62.3],[44,62.3],[39,70.7],[37,70.7]],\\n\\t        [[48,51.1],[51,45.5],[53,45.5],[50,51.1],[48,51.1]],\\n\\t        [[51,35],[51,28.7],[53,28.7],[53,35],[51,35]],\\n\\t        [[52,22.4],[55,17.5],[56,17.5],[53,22.4],[52,22.4]],\\n\\t        [[58,12.6],[62,7],[63,7],[60,12.6],[58,12.6]],\\n\\t        [[0,3.5],[0,93.1],[64,93.1],[64,0],[63,0],[63,92.4],\\n\\t         [1,92.4],[1,3.5],[0,3.5]]\\n\\t    ];\\n\\t    for (var i = 0; i < points.length; i++) {\\n\\t        for (var k = 0; k < points[i].length; k++) {\\n\\t            points[i][k][0] /= 10.5;\\n\\t            points[i][k][1] /= -10.5 / 0.75;\\n\\n\\t            points[i][k][0] += geoCoord[0];\\n\\t            points[i][k][1] += geoCoord[1];\\n\\t        }\\n\\t    }\\n\\t    module.exports = function (geo) {\\n\\t        if (geo.map === 'china') {\\n\\t            geo.regions.push(new Region(\\n\\t                '南海诸岛',\\n\\t                zrUtil.map(points, function (exterior) {\\n\\t                    return {\\n\\t                        type: 'polygon',\\n\\t                        exterior: exterior\\n\\t                    };\\n\\t                }), geoCoord\\n\\t            ));\\n\\t        }\\n\\t    };\\n\\n\\n/***/ },\\n/* 178 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\n\\t    var coordsOffsetMap = {\\n\\t        '南海诸岛' : [32, 80],\\n\\t        // 全国\\n\\t        '广东': [0, -10],\\n\\t        '香港': [10, 5],\\n\\t        '澳门': [-10, 10],\\n\\t        //'北京': [-10, 0],\\n\\t        '天津': [5, 5]\\n\\t    };\\n\\n\\t    module.exports = function (geo) {\\n\\t        zrUtil.each(geo.regions, function (region) {\\n\\t            var coordFix = coordsOffsetMap[region.name];\\n\\t            if (coordFix) {\\n\\t                var cp = region.center;\\n\\t                cp[0] += coordFix[0] / 10.5;\\n\\t                cp[1] += -coordFix[1] / (10.5 / 0.75);\\n\\t            }\\n\\t        });\\n\\t    };\\n\\n\\n/***/ },\\n/* 179 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\n\\t    var geoCoordMap = {\\n\\t        'Russia': [100, 60],\\n\\t        'United States': [-99, 38],\\n\\t        'United States of America': [-99, 38]\\n\\t    };\\n\\n\\t    module.exports = function (geo) {\\n\\t        zrUtil.each(geo.regions, function (region) {\\n\\t            var geoCoord = geoCoordMap[region.name];\\n\\t            if (geoCoord) {\\n\\t                var cp = region.center;\\n\\t                cp[0] = geoCoord[0];\\n\\t                cp[1] = geoCoord[1];\\n\\t            }\\n\\t        });\\n\\t    };\\n\\n\\n/***/ },\\n/* 180 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t// Fix for 钓鱼岛\\n\\n\\n\\t    var Region = __webpack_require__(174);\\n\\t    var zrUtil = __webpack_require__(4);\\n\\n\\t    var geoCoord = [126, 25];\\n\\n\\t    var points = [\\n\\t        [\\n\\t            [123.45165252685547, 25.73527164402261],\\n\\t            [123.49731445312499, 25.73527164402261],\\n\\t            [123.49731445312499, 25.750734064600884],\\n\\t            [123.45165252685547, 25.750734064600884],\\n\\t            [123.45165252685547, 25.73527164402261]\\n\\t        ]\\n\\t    ];\\n\\t    module.exports = function (geo) {\\n\\t        if (geo.map === 'china') {\\n\\t            for (var i = 0, len = geo.regions.length; i < len; ++i) {\\n\\t                if (geo.regions[i].name === '台湾') {\\n\\t                    geo.regions[i].geometries.push({\\n\\t                        type: 'polygon',\\n\\t                        exterior: points[0]\\n\\t                    });\\n\\t                }\\n\\t            }\\n\\t        }\\n\\t    };\\n\\n\\n\\n/***/ },\\n/* 181 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    // var zrUtil = require('zrender/lib/core/util');\\n\\t    var graphic = __webpack_require__(18);\\n\\n\\t    var MapDraw = __webpack_require__(182);\\n\\n\\t    __webpack_require__(1).extendChartView({\\n\\n\\t        type: 'map',\\n\\n\\t        render: function (mapModel, ecModel, api, payload) {\\n\\t            // Not render if it is an toggleSelect action from self\\n\\t            if (payload && payload.type === 'mapToggleSelect'\\n\\t                && payload.from === this.uid\\n\\t            ) {\\n\\t                return;\\n\\t            }\\n\\n\\t            var group = this.group;\\n\\t            group.removeAll();\\n\\n\\t            if (mapModel.getHostGeoModel()) {\\n\\t                return;\\n\\t            }\\n\\n\\t            // Not update map if it is an roam action from self\\n\\t            if (!(payload && payload.type === 'geoRoam'\\n\\t                    && payload.componentType === 'series'\\n\\t                    && payload.seriesId === mapModel.id\\n\\t                )\\n\\t            ) {\\n\\t                if (mapModel.needsDrawMap) {\\n\\t                    var mapDraw = this._mapDraw || new MapDraw(api, true);\\n\\t                    group.add(mapDraw.group);\\n\\n\\t                    mapDraw.draw(mapModel, ecModel, api, this, payload);\\n\\n\\t                    this._mapDraw = mapDraw;\\n\\t                }\\n\\t                else {\\n\\t                    // Remove drawed map\\n\\t                    this._mapDraw && this._mapDraw.remove();\\n\\t                    this._mapDraw = null;\\n\\t                }\\n\\t            }\\n\\t            else {\\n\\t                var mapDraw = this._mapDraw;\\n\\t                mapDraw && group.add(mapDraw.group);\\n\\t            }\\n\\n\\t            mapModel.get('showLegendSymbol') && ecModel.getComponent('legend')\\n\\t                && this._renderSymbols(mapModel, ecModel, api);\\n\\t        },\\n\\n\\t        remove: function () {\\n\\t            this._mapDraw && this._mapDraw.remove();\\n\\t            this._mapDraw = null;\\n\\t            this.group.removeAll();\\n\\t        },\\n\\n\\t        dispose: function () {\\n\\t            this._mapDraw && this._mapDraw.remove();\\n\\t            this._mapDraw = null;\\n\\t        },\\n\\n\\t        _renderSymbols: function (mapModel, ecModel, api) {\\n\\t            var originalData = mapModel.originalData;\\n\\t            var group = this.group;\\n\\n\\t            originalData.each('value', function (value, idx) {\\n\\t                if (isNaN(value)) {\\n\\t                    return;\\n\\t                }\\n\\n\\t                var layout = originalData.getItemLayout(idx);\\n\\n\\t                if (!layout || !layout.point) {\\n\\t                    // Not exists in map\\n\\t                    return;\\n\\t                }\\n\\n\\t                var point = layout.point;\\n\\t                var offset = layout.offset;\\n\\n\\t                var circle = new graphic.Circle({\\n\\t                    style: {\\n\\t                        // Because the special of map draw.\\n\\t                        // Which needs statistic of multiple series and draw on one map.\\n\\t                        // And each series also need a symbol with legend color\\n\\t                        //\\n\\t                        // Layout and visual are put one the different data\\n\\t                        fill: mapModel.getData().getVisual('color')\\n\\t                    },\\n\\t                    shape: {\\n\\t                        cx: point[0] + offset * 9,\\n\\t                        cy: point[1],\\n\\t                        r: 3\\n\\t                    },\\n\\t                    silent: true,\\n\\t                    z2: 10\\n\\t                });\\n\\n\\t                // First data on the same region\\n\\t                if (!offset) {\\n\\t                    var fullData = mapModel.mainSeries.getData();\\n\\t                    var name = originalData.getName(idx);\\n\\t                    var labelText = name;\\n\\t                    var fullIndex = fullData.indexOfName(name);\\n\\n\\t                    var itemModel = originalData.getItemModel(idx);\\n\\t                    var labelModel = itemModel.getModel('label.normal');\\n\\t                    var hoverLabelModel = itemModel.getModel('label.emphasis');\\n\\n\\t                    var textStyleModel = labelModel.getModel('textStyle');\\n\\t                    var hoverTextStyleModel = hoverLabelModel.getModel('textStyle');\\n\\n\\t                    var polygonGroups = fullData.getItemGraphicEl(fullIndex);\\n\\t                    circle.setStyle({\\n\\t                        textPosition: 'bottom'\\n\\t                    });\\n\\n\\t                    var onEmphasis = function () {\\n\\t                        circle.setStyle({\\n\\t                            text: hoverLabelModel.get('show') ? labelText : '',\\n\\t                            textFill: hoverTextStyleModel.getTextColor(),\\n\\t                            textFont: hoverTextStyleModel.getFont()\\n\\t                        });\\n\\t                    };\\n\\n\\t                    var onNormal = function () {\\n\\t                        circle.setStyle({\\n\\t                            text: labelModel.get('show') ? labelText : '',\\n\\t                            textFill: textStyleModel.getTextColor(),\\n\\t                            textFont: textStyleModel.getFont()\\n\\t                        });\\n\\t                    };\\n\\n\\t                    polygonGroups.on('mouseover', onEmphasis)\\n\\t                        .on('mouseout', onNormal)\\n\\t                        .on('emphasis', onEmphasis)\\n\\t                        .on('normal', onNormal);\\n\\n\\t                    onNormal();\\n\\t                }\\n\\n\\t                group.add(circle);\\n\\t            });\\n\\t        }\\n\\t    });\\n\\n\\n/***/ },\\n/* 182 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * @module echarts/component/helper/MapDraw\\n\\t */\\n\\n\\n\\t    var RoamController = __webpack_require__(183);\\n\\t    var roamHelper = __webpack_require__(185);\\n\\t    var cursorHelper = __webpack_require__(186);\\n\\t    var graphic = __webpack_require__(18);\\n\\t    var zrUtil = __webpack_require__(4);\\n\\n\\t    function getFixedItemStyle(model, scale) {\\n\\t        var itemStyle = model.getItemStyle();\\n\\t        var areaColor = model.get('areaColor');\\n\\n\\t        // If user want the color not to be changed when hover,\\n\\t        // they should both set areaColor and color to be null.\\n\\t        if (areaColor != null) {\\n\\t            itemStyle.fill = areaColor;\\n\\t        }\\n\\n\\t        return itemStyle;\\n\\t    }\\n\\n\\t    function updateMapSelectHandler(mapDraw, mapOrGeoModel, group, api, fromView) {\\n\\t        group.off('click');\\n\\t        group.off('mousedown');\\n\\n\\t        if (mapOrGeoModel.get('selectedMode')) {\\n\\n\\t            group.on('mousedown', function () {\\n\\t                mapDraw._mouseDownFlag = true;\\n\\t            });\\n\\n\\t            group.on('click', function (e) {\\n\\t                if (!mapDraw._mouseDownFlag) {\\n\\t                    return;\\n\\t                }\\n\\t                mapDraw._mouseDownFlag = false;\\n\\n\\t                var el = e.target;\\n\\t                while (!el.__regions) {\\n\\t                    el = el.parent;\\n\\t                }\\n\\t                if (!el) {\\n\\t                    return;\\n\\t                }\\n\\n\\t                var action = {\\n\\t                    type: (mapOrGeoModel.mainType === 'geo' ? 'geo' : 'map') + 'ToggleSelect',\\n\\t                    batch: zrUtil.map(el.__regions, function (region) {\\n\\t                        return {\\n\\t                            name: region.name,\\n\\t                            from: fromView.uid\\n\\t                        };\\n\\t                    })\\n\\t                };\\n\\t                action[mapOrGeoModel.mainType + 'Id'] = mapOrGeoModel.id;\\n\\n\\t                api.dispatchAction(action);\\n\\n\\t                updateMapSelected(mapOrGeoModel, group);\\n\\t            });\\n\\t        }\\n\\t    }\\n\\n\\t    function updateMapSelected(mapOrGeoModel, group) {\\n\\t        // FIXME\\n\\t        group.eachChild(function (otherRegionEl) {\\n\\t            zrUtil.each(otherRegionEl.__regions, function (region) {\\n\\t                otherRegionEl.trigger(mapOrGeoModel.isSelected(region.name) ? 'emphasis' : 'normal');\\n\\t            });\\n\\t        });\\n\\t    }\\n\\n\\t    /**\\n\\t     * @alias module:echarts/component/helper/MapDraw\\n\\t     * @param {module:echarts/ExtensionAPI} api\\n\\t     * @param {boolean} updateGroup\\n\\t     */\\n\\t    function MapDraw(api, updateGroup) {\\n\\n\\t        var group = new graphic.Group();\\n\\n\\t        /**\\n\\t         * @type {module:echarts/component/helper/RoamController}\\n\\t         * @private\\n\\t         */\\n\\t        this._controller = new RoamController(api.getZr());\\n\\n\\t        /**\\n\\t         * @type {Object} {target, zoom, zoomLimit}\\n\\t         * @private\\n\\t         */\\n\\t        this._controllerHost = {target: updateGroup ? group : null};\\n\\n\\t        /**\\n\\t         * @type {module:zrender/container/Group}\\n\\t         * @readOnly\\n\\t         */\\n\\t        this.group = group;\\n\\n\\t        /**\\n\\t         * @type {boolean}\\n\\t         * @private\\n\\t         */\\n\\t        this._updateGroup = updateGroup;\\n\\n\\t        /**\\n\\t         * This flag is used to make sure that only one among\\n\\t         * `pan`, `zoom`, `click` can occurs, otherwise 'selected'\\n\\t         * action may be triggered when `pan`, which is unexpected.\\n\\t         * @type {booelan}\\n\\t         */\\n\\t        this._mouseDownFlag;\\n\\t    }\\n\\n\\t    MapDraw.prototype = {\\n\\n\\t        constructor: MapDraw,\\n\\n\\t        draw: function (mapOrGeoModel, ecModel, api, fromView, payload) {\\n\\n\\t            var isGeo = mapOrGeoModel.mainType === 'geo';\\n\\n\\t            // map series has data, geo model that controlled by map series\\n\\t            // has no data, otherwise data exists.\\n\\t            var data = mapOrGeoModel.getData && mapOrGeoModel.getData();\\n\\t            isGeo && ecModel.eachComponent({mainType: 'series', subType: 'map'}, function (mapSeries) {\\n\\t                if (!data && mapSeries.getHostGeoModel() === mapOrGeoModel) {\\n\\t                    data = mapSeries.getData();\\n\\t                }\\n\\t            });\\n\\n\\t            var geo = mapOrGeoModel.coordinateSystem;\\n\\n\\t            var group = this.group;\\n\\n\\t            var scale = geo.scale;\\n\\t            var groupNewProp = {\\n\\t                position: geo.position,\\n\\t                scale: scale\\n\\t            };\\n\\n\\t            // No animation when first draw or in action\\n\\t            if (!group.childAt(0) || payload) {\\n\\t                group.attr(groupNewProp);\\n\\t            }\\n\\t            else {\\n\\t                graphic.updateProps(group, groupNewProp, mapOrGeoModel);\\n\\t            }\\n\\n\\t            group.removeAll();\\n\\n\\t            var itemStyleAccessPath = ['itemStyle', 'normal'];\\n\\t            var hoverItemStyleAccessPath = ['itemStyle', 'emphasis'];\\n\\t            var labelAccessPath = ['label', 'normal'];\\n\\t            var hoverLabelAccessPath = ['label', 'emphasis'];\\n\\t            var nameMap = zrUtil.createHashMap();\\n\\n\\t            zrUtil.each(geo.regions, function (region) {\\n\\n\\t                // Consider in GeoJson properties.name may be duplicated, for example,\\n\\t                // there is multiple region named \\\"United Kindom\\\" or \\\"France\\\" (so many\\n\\t                // colonies). And it is not appropriate to merge them in geo, which\\n\\t                // will make them share the same label and bring trouble in label\\n\\t                // location calculation.\\n\\t                var regionGroup = nameMap.get(region.name)\\n\\t                    || nameMap.set(region.name, new graphic.Group());\\n\\n\\t                var compoundPath = new graphic.CompoundPath({\\n\\t                    shape: {\\n\\t                        paths: []\\n\\t                    }\\n\\t                });\\n\\t                regionGroup.add(compoundPath);\\n\\n\\t                var regionModel = mapOrGeoModel.getRegionModel(region.name) || mapOrGeoModel;\\n\\n\\t                var itemStyleModel = regionModel.getModel(itemStyleAccessPath);\\n\\t                var hoverItemStyleModel = regionModel.getModel(hoverItemStyleAccessPath);\\n\\t                var itemStyle = getFixedItemStyle(itemStyleModel, scale);\\n\\t                var hoverItemStyle = getFixedItemStyle(hoverItemStyleModel, scale);\\n\\n\\t                var labelModel = regionModel.getModel(labelAccessPath);\\n\\t                var hoverLabelModel = regionModel.getModel(hoverLabelAccessPath);\\n\\n\\t                var dataIdx;\\n\\t                // Use the itemStyle in data if has data\\n\\t                if (data) {\\n\\t                    dataIdx = data.indexOfName(region.name);\\n\\t                    // Only visual color of each item will be used. It can be encoded by dataRange\\n\\t                    // But visual color of series is used in symbol drawing\\n\\t                    //\\n\\t                    // Visual color for each series is for the symbol draw\\n\\t                    var visualColor = data.getItemVisual(dataIdx, 'color', true);\\n\\t                    if (visualColor) {\\n\\t                        itemStyle.fill = visualColor;\\n\\t                    }\\n\\t                }\\n\\n\\t                var textStyleModel = labelModel.getModel('textStyle');\\n\\t                var hoverTextStyleModel = hoverLabelModel.getModel('textStyle');\\n\\n\\t                zrUtil.each(region.geometries, function (geometry) {\\n\\t                    if (geometry.type !== 'polygon') {\\n\\t                        return;\\n\\t                    }\\n\\t                    compoundPath.shape.paths.push(new graphic.Polygon({\\n\\t                        shape: {\\n\\t                            points: geometry.exterior\\n\\t                        }\\n\\t                    }));\\n\\n\\t                    for (var i = 0; i < (geometry.interiors ? geometry.interiors.length : 0); i++) {\\n\\t                        compoundPath.shape.paths.push(new graphic.Polygon({\\n\\t                            shape: {\\n\\t                                points: geometry.interiors[i]\\n\\t                            }\\n\\t                        }));\\n\\t                    }\\n\\t                });\\n\\n\\t                compoundPath.setStyle(itemStyle);\\n\\t                compoundPath.style.strokeNoScale = true;\\n\\t                compoundPath.culling = true;\\n\\t                // Label\\n\\t                var showLabel = labelModel.get('show');\\n\\t                var hoverShowLabel = hoverLabelModel.get('show');\\n\\n\\t                var isDataNaN = data && isNaN(data.get('value', dataIdx));\\n\\t                var itemLayout = data && data.getItemLayout(dataIdx);\\n\\t                // In the following cases label will be drawn\\n\\t                // 1. In map series and data value is NaN\\n\\t                // 2. In geo component\\n\\t                // 4. Region has no series legendSymbol, which will be add a showLabel flag in mapSymbolLayout\\n\\t                if (\\n\\t                    (isGeo || isDataNaN && (showLabel || hoverShowLabel))\\n\\t                 || (itemLayout && itemLayout.showLabel)\\n\\t                 ) {\\n\\t                    var query = data ? dataIdx : region.name;\\n\\t                    var formattedStr = mapOrGeoModel.getFormattedLabel(query, 'normal');\\n\\t                    var hoverFormattedStr = mapOrGeoModel.getFormattedLabel(query, 'emphasis');\\n\\t                    var text = new graphic.Text({\\n\\t                        style: {\\n\\t                            text: showLabel ? (formattedStr || region.name) : '',\\n\\t                            fill: textStyleModel.getTextColor(),\\n\\t                            textFont: textStyleModel.getFont(),\\n\\t                            textAlign: 'center',\\n\\t                            textVerticalAlign: 'middle'\\n\\t                        },\\n\\t                        hoverStyle: {\\n\\t                            text: hoverShowLabel ? (hoverFormattedStr || region.name) : '',\\n\\t                            fill: hoverTextStyleModel.getTextColor(),\\n\\t                            textFont: hoverTextStyleModel.getFont()\\n\\t                        },\\n\\t                        position: region.center.slice(),\\n\\t                        scale: [1 / scale[0], 1 / scale[1]],\\n\\t                        z2: 10,\\n\\t                        silent: true\\n\\t                    });\\n\\n\\t                    regionGroup.add(text);\\n\\t                }\\n\\n\\t                // setItemGraphicEl, setHoverStyle after all polygons and labels\\n\\t                // are added to the rigionGroup\\n\\t                if (data) {\\n\\t                    data.setItemGraphicEl(dataIdx, regionGroup);\\n\\t                }\\n\\t                else {\\n\\t                    var regionModel = mapOrGeoModel.getRegionModel(region.name);\\n\\t                    // Package custom mouse event for geo component\\n\\t                    compoundPath.eventData = {\\n\\t                        componentType: 'geo',\\n\\t                        geoIndex: mapOrGeoModel.componentIndex,\\n\\t                        name: region.name,\\n\\t                        region: (regionModel && regionModel.option) || {}\\n\\t                    };\\n\\t                }\\n\\n\\t                var groupRegions = regionGroup.__regions || (regionGroup.__regions = []);\\n\\t                groupRegions.push(region);\\n\\n\\t                graphic.setHoverStyle(\\n\\t                    regionGroup,\\n\\t                    hoverItemStyle,\\n\\t                    {hoverSilentOnTouch: !!mapOrGeoModel.get('selectedMode')}\\n\\t                );\\n\\n\\t                group.add(regionGroup);\\n\\t            });\\n\\n\\t            this._updateController(mapOrGeoModel, ecModel, api);\\n\\n\\t            updateMapSelectHandler(this, mapOrGeoModel, group, api, fromView);\\n\\n\\t            updateMapSelected(mapOrGeoModel, group);\\n\\t        },\\n\\n\\t        remove: function () {\\n\\t            this.group.removeAll();\\n\\t            this._controller.dispose();\\n\\t            this._controllerHost = {};\\n\\t        },\\n\\n\\t        _updateController: function (mapOrGeoModel, ecModel, api) {\\n\\t            var geo = mapOrGeoModel.coordinateSystem;\\n\\t            var controller = this._controller;\\n\\t            var controllerHost = this._controllerHost;\\n\\n\\t            controllerHost.zoomLimit = mapOrGeoModel.get('scaleLimit');\\n\\t            controllerHost.zoom = geo.getZoom();\\n\\n\\t            // roamType is will be set default true if it is null\\n\\t            controller.enable(mapOrGeoModel.get('roam') || false);\\n\\t            var mainType = mapOrGeoModel.mainType;\\n\\n\\t            function makeActionBase() {\\n\\t                var action = {\\n\\t                    type: 'geoRoam',\\n\\t                    componentType: mainType\\n\\t                };\\n\\t                action[mainType + 'Id'] = mapOrGeoModel.id;\\n\\t                return action;\\n\\t            }\\n\\n\\t            controller.off('pan').on('pan', function (dx, dy) {\\n\\t                this._mouseDownFlag = false;\\n\\n\\t                roamHelper.updateViewOnPan(controllerHost, dx, dy);\\n\\n\\t                api.dispatchAction(zrUtil.extend(makeActionBase(), {\\n\\t                    dx: dx,\\n\\t                    dy: dy\\n\\t                }));\\n\\t            }, this);\\n\\n\\t            controller.off('zoom').on('zoom', function (zoom, mouseX, mouseY) {\\n\\t                this._mouseDownFlag = false;\\n\\n\\t                roamHelper.updateViewOnZoom(controllerHost, zoom, mouseX, mouseY);\\n\\n\\t                api.dispatchAction(zrUtil.extend(makeActionBase(), {\\n\\t                    zoom: zoom,\\n\\t                    originX: mouseX,\\n\\t                    originY: mouseY\\n\\t                }));\\n\\n\\t                if (this._updateGroup) {\\n\\t                    var group = this.group;\\n\\t                    var scale = group.scale;\\n\\t                    group.traverse(function (el) {\\n\\t                        if (el.type === 'text') {\\n\\t                            el.attr('scale', [1 / scale[0], 1 / scale[1]]);\\n\\t                        }\\n\\t                    });\\n\\t                }\\n\\t            }, this);\\n\\n\\t            controller.setPointerChecker(function (e, x, y) {\\n\\t                return geo.getViewRectAfterRoam().contain(x, y)\\n\\t                    && !cursorHelper.onIrrelevantElement(e, api, mapOrGeoModel);\\n\\t            });\\n\\t        }\\n\\t    };\\n\\n\\t    module.exports = MapDraw;\\n\\n\\n/***/ },\\n/* 183 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * @module echarts/component/helper/RoamController\\n\\t */\\n\\n\\n\\t    var Eventful = __webpack_require__(25);\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var eventTool = __webpack_require__(88);\\n\\t    var interactionMutex = __webpack_require__(184);\\n\\n\\t    /**\\n\\t     * @alias module:echarts/component/helper/RoamController\\n\\t     * @constructor\\n\\t     * @mixin {module:zrender/mixin/Eventful}\\n\\t     *\\n\\t     * @param {module:zrender/zrender~ZRender} zr\\n\\t     */\\n\\t    function RoamController(zr) {\\n\\n\\t        /**\\n\\t         * @type {Function}\\n\\t         */\\n\\t        this.pointerChecker;\\n\\n\\t        /**\\n\\t         * @type {module:zrender}\\n\\t         */\\n\\t        this._zr = zr;\\n\\n\\t        /**\\n\\t         * @type {Object}\\n\\t         */\\n\\t        this._opt = {};\\n\\n\\t        // Avoid two roamController bind the same handler\\n\\t        var bind = zrUtil.bind;\\n\\t        var mousedownHandler = bind(mousedown, this);\\n\\t        var mousemoveHandler = bind(mousemove, this);\\n\\t        var mouseupHandler = bind(mouseup, this);\\n\\t        var mousewheelHandler = bind(mousewheel, this);\\n\\t        var pinchHandler = bind(pinch, this);\\n\\n\\t        Eventful.call(this);\\n\\n\\t        /**\\n\\t         * @param {Function} pointerChecker\\n\\t         *                   input: x, y\\n\\t         *                   output: boolean\\n\\t         */\\n\\t        this.setPointerChecker = function (pointerChecker) {\\n\\t            this.pointerChecker = pointerChecker;\\n\\t        };\\n\\n\\t        /**\\n\\t         * Notice: only enable needed types. For example, if 'zoom'\\n\\t         * is not needed, 'zoom' should not be enabled, otherwise\\n\\t         * default mousewheel behaviour (scroll page) will be disabled.\\n\\t         *\\n\\t         * @param  {boolean|string} [controlType=true] Specify the control type,\\n\\t         *                          which can be null/undefined or true/false\\n\\t         *                          or 'pan/move' or 'zoom'/'scale'\\n\\t         * @param {Object} [opt]\\n\\t         * @param {Object} [opt.zoomOnMouseWheel=true]\\n\\t         * @param {Object} [opt.moveOnMouseMove=true]\\n\\t         * @param {Object} [opt.preventDefaultMouseMove=true] When pan.\\n\\t         */\\n\\t        this.enable = function (controlType, opt) {\\n\\n\\t            // Disable previous first\\n\\t            this.disable();\\n\\n\\t            this._opt = zrUtil.defaults(zrUtil.clone(opt) || {}, {\\n\\t                zoomOnMouseWheel: true,\\n\\t                moveOnMouseMove: true,\\n\\t                preventDefaultMouseMove: true\\n\\t            });\\n\\n\\t            if (controlType == null) {\\n\\t                controlType = true;\\n\\t            }\\n\\n\\t            if (controlType === true || (controlType === 'move' || controlType === 'pan')) {\\n\\t                zr.on('mousedown', mousedownHandler);\\n\\t                zr.on('mousemove', mousemoveHandler);\\n\\t                zr.on('mouseup', mouseupHandler);\\n\\t            }\\n\\t            if (controlType === true || (controlType === 'scale' || controlType === 'zoom')) {\\n\\t                zr.on('mousewheel', mousewheelHandler);\\n\\t                zr.on('pinch', pinchHandler);\\n\\t            }\\n\\t        };\\n\\n\\t        this.disable = function () {\\n\\t            zr.off('mousedown', mousedownHandler);\\n\\t            zr.off('mousemove', mousemoveHandler);\\n\\t            zr.off('mouseup', mouseupHandler);\\n\\t            zr.off('mousewheel', mousewheelHandler);\\n\\t            zr.off('pinch', pinchHandler);\\n\\t        };\\n\\n\\t        this.dispose = this.disable;\\n\\n\\t        this.isDragging = function () {\\n\\t            return this._dragging;\\n\\t        };\\n\\n\\t        this.isPinching = function () {\\n\\t            return this._pinching;\\n\\t        };\\n\\t    }\\n\\n\\t    zrUtil.mixin(RoamController, Eventful);\\n\\n\\n\\t    function mousedown(e) {\\n\\t        if (e.target && e.target.draggable) {\\n\\t            return;\\n\\t        }\\n\\n\\t        var x = e.offsetX;\\n\\t        var y = e.offsetY;\\n\\n\\t        // Only check on mosedown, but not mousemove.\\n\\t        // Mouse can be out of target when mouse moving.\\n\\t        if (this.pointerChecker && this.pointerChecker(e, x, y)) {\\n\\t            this._x = x;\\n\\t            this._y = y;\\n\\t            this._dragging = true;\\n\\t        }\\n\\t    }\\n\\n\\t    function mousemove(e) {\\n\\t        if (!checkKeyBinding(this, 'moveOnMouseMove', e) || !this._dragging) {\\n\\t            return;\\n\\t        }\\n\\n\\t        if (e.gestureEvent === 'pinch') {\\n\\t            return;\\n\\t        }\\n\\n\\t        if (interactionMutex.isTaken(this._zr, 'globalPan')) {\\n\\t            return;\\n\\t        }\\n\\n\\t        var x = e.offsetX;\\n\\t        var y = e.offsetY;\\n\\n\\t        var oldX = this._x;\\n\\t        var oldY = this._y;\\n\\n\\t        var dx = x - oldX;\\n\\t        var dy = y - oldY;\\n\\n\\t        this._x = x;\\n\\t        this._y = y;\\n\\n\\t        this._opt.preventDefaultMouseMove && eventTool.stop(e.event);\\n\\n\\t        this.trigger('pan', dx, dy, oldX, oldY, x, y);\\n\\t    }\\n\\n\\t    function mouseup(e) {\\n\\t        this._dragging = false;\\n\\t    }\\n\\n\\t    function mousewheel(e) {\\n\\t        // wheelDelta maybe -0 in chrome mac.\\n\\t        if (!checkKeyBinding(this, 'zoomOnMouseWheel', e) || e.wheelDelta === 0) {\\n\\t            return;\\n\\t        }\\n\\n\\t        // Convenience:\\n\\t        // Mac and VM Windows on Mac: scroll up: zoom out.\\n\\t        // Windows: scroll up: zoom in.\\n\\t        var zoomDelta = e.wheelDelta > 0 ? 1.1 : 1 / 1.1;\\n\\t        zoom.call(this, e, zoomDelta, e.offsetX, e.offsetY);\\n\\t    }\\n\\n\\t    function pinch(e) {\\n\\t        if (interactionMutex.isTaken(this._zr, 'globalPan')) {\\n\\t            return;\\n\\t        }\\n\\t        var zoomDelta = e.pinchScale > 1 ? 1.1 : 1 / 1.1;\\n\\t        zoom.call(this, e, zoomDelta, e.pinchX, e.pinchY);\\n\\t    }\\n\\n\\t    function zoom(e, zoomDelta, zoomX, zoomY) {\\n\\t        if (this.pointerChecker && this.pointerChecker(e, zoomX, zoomY)) {\\n\\t            // When mouse is out of roamController rect,\\n\\t            // default befavoius should not be be disabled, otherwise\\n\\t            // page sliding is disabled, contrary to expectation.\\n\\t            eventTool.stop(e.event);\\n\\n\\t            this.trigger('zoom', zoomDelta, zoomX, zoomY);\\n\\t        }\\n\\t    }\\n\\n\\t    function checkKeyBinding(roamController, prop, e) {\\n\\t        var setting = roamController._opt[prop];\\n\\t        return setting\\n\\t            && (!zrUtil.isString(setting) || e.event[setting + 'Key']);\\n\\t    }\\n\\n\\t    module.exports = RoamController;\\n\\n\\n/***/ },\\n/* 184 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var ATTR = '\\\\0_ec_interaction_mutex';\\n\\n\\t    var interactionMutex = {\\n\\n\\t        take: function (zr, resourceKey, userKey) {\\n\\t            var store = getStore(zr);\\n\\t            store[resourceKey] = userKey;\\n\\t        },\\n\\n\\t        release: function (zr, resourceKey, userKey) {\\n\\t            var store = getStore(zr);\\n\\t            var uKey = store[resourceKey];\\n\\n\\t            if (uKey === userKey) {\\n\\t                store[resourceKey] = null;\\n\\t            }\\n\\t        },\\n\\n\\t        isTaken: function (zr, resourceKey) {\\n\\t            return !!getStore(zr)[resourceKey];\\n\\t        }\\n\\t    };\\n\\n\\t    function getStore(zr) {\\n\\t        return zr[ATTR] || (zr[ATTR] = {});\\n\\t    }\\n\\n\\t    /**\\n\\t     * payload: {\\n\\t     *     type: 'takeGlobalCursor',\\n\\t     *     key: 'dataZoomSelect', or 'brush', or ...,\\n\\t     *         If no userKey, release global cursor.\\n\\t     * }\\n\\t     */\\n\\t    __webpack_require__(1).registerAction(\\n\\t        {type: 'takeGlobalCursor', event: 'globalCursorTaken', update: 'update'},\\n\\t        function () {}\\n\\t    );\\n\\n\\t    module.exports = interactionMutex;\\n\\n\\n/***/ },\\n/* 185 */\\n/***/ function(module, exports) {\\n\\n\\t\\n\\n\\t    var helper = {};\\n\\n\\t    /**\\n\\t     * For geo and graph.\\n\\t     *\\n\\t     * @param {Object} controllerHost\\n\\t     * @param {module:zrender/Element} controllerHost.target\\n\\t     */\\n\\t    helper.updateViewOnPan = function (controllerHost, dx, dy) {\\n\\t        var target = controllerHost.target;\\n\\t        var pos = target.position;\\n\\t        pos[0] += dx;\\n\\t        pos[1] += dy;\\n\\t        target.dirty();\\n\\t    };\\n\\n\\t    /**\\n\\t     * For geo and graph.\\n\\t     *\\n\\t     * @param {Object} controllerHost\\n\\t     * @param {module:zrender/Element} controllerHost.target\\n\\t     * @param {number} controllerHost.zoom\\n\\t     * @param {number} controllerHost.zoomLimit like: {min: 1, max: 2}\\n\\t     */\\n\\t    helper.updateViewOnZoom = function (controllerHost, zoomDelta, zoomX, zoomY) {\\n\\t        var target = controllerHost.target;\\n\\t        var zoomLimit = controllerHost.zoomLimit;\\n\\t        var pos = target.position;\\n\\t        var scale = target.scale;\\n\\n\\t        var newZoom = controllerHost.zoom = controllerHost.zoom || 1;\\n\\t        newZoom *= zoomDelta;\\n\\t        if (zoomLimit) {\\n\\t            var zoomMin = zoomLimit.min || 0;\\n\\t            var zoomMax = zoomLimit.max || Infinity;\\n\\t            newZoom = Math.max(\\n\\t                Math.min(zoomMax, newZoom),\\n\\t                zoomMin\\n\\t            );\\n\\t        }\\n\\t        var zoomScale = newZoom / controllerHost.zoom;\\n\\t        controllerHost.zoom = newZoom;\\n\\t        // Keep the mouse center when scaling\\n\\t        pos[0] -= (zoomX - pos[0]) * (zoomScale - 1);\\n\\t        pos[1] -= (zoomY - pos[1]) * (zoomScale - 1);\\n\\t        scale[0] *= zoomScale;\\n\\t        scale[1] *= zoomScale;\\n\\n\\t        target.dirty();\\n\\t    };\\n\\n\\t    module.exports = helper;\\n\\n\\n/***/ },\\n/* 186 */\\n/***/ function(module, exports) {\\n\\n\\t\\n\\n\\t    var helper = {};\\n\\n\\t    var IRRELEVANT_EXCLUDES = {'axisPointer': 1, 'tooltip': 1, 'brush': 1};\\n\\n\\t    /**\\n\\t     * Avoid that: mouse click on a elements that is over geo or graph,\\n\\t     * but roam is triggered.\\n\\t     */\\n\\t    helper.onIrrelevantElement = function (e, api, targetCoordSysModel) {\\n\\t        var model = api.getComponentByElement(e.topTarget);\\n\\t        // If model is axisModel, it works only if it is injected with coordinateSystem.\\n\\t        var coordSys = model && model.coordinateSystem;\\n\\t        return model\\n\\t            && model !== targetCoordSysModel\\n\\t            && !IRRELEVANT_EXCLUDES[model.mainType]\\n\\t            && (coordSys && coordSys.model !== targetCoordSysModel);\\n\\t    };\\n\\n\\t    module.exports = helper;\\n\\n\\n/***/ },\\n/* 187 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var roamHelper = __webpack_require__(188);\\n\\n\\t    var echarts = __webpack_require__(1);\\n\\n\\t    /**\\n\\t     * @payload\\n\\t     * @property {string} [componentType=series]\\n\\t     * @property {number} [dx]\\n\\t     * @property {number} [dy]\\n\\t     * @property {number} [zoom]\\n\\t     * @property {number} [originX]\\n\\t     * @property {number} [originY]\\n\\t     */\\n\\t    echarts.registerAction({\\n\\t        type: 'geoRoam',\\n\\t        event: 'geoRoam',\\n\\t        update: 'updateLayout'\\n\\t    }, function (payload, ecModel) {\\n\\t        var componentType = payload.componentType || 'series';\\n\\n\\t        ecModel.eachComponent(\\n\\t            { mainType: componentType, query: payload },\\n\\t            function (componentModel) {\\n\\t                var geo = componentModel.coordinateSystem;\\n\\t                if (geo.type !== 'geo') {\\n\\t                    return;\\n\\t                }\\n\\n\\t                var res = roamHelper.updateCenterAndZoom(\\n\\t                    geo, payload, componentModel.get('scaleLimit')\\n\\t                );\\n\\n\\t                componentModel.setCenter\\n\\t                    && componentModel.setCenter(res.center);\\n\\n\\t                componentModel.setZoom\\n\\t                    && componentModel.setZoom(res.zoom);\\n\\n\\t                // All map series with same `map` use the same geo coordinate system\\n\\t                // So the center and zoom must be in sync. Include the series not selected by legend\\n\\t                if (componentType === 'series') {\\n\\t                    zrUtil.each(componentModel.seriesGroup, function (seriesModel) {\\n\\t                        seriesModel.setCenter(res.center);\\n\\t                        seriesModel.setZoom(res.zoom);\\n\\t                    });\\n\\t                }\\n\\t            }\\n\\t        );\\n\\t    });\\n\\n\\n/***/ },\\n/* 188 */\\n/***/ function(module, exports) {\\n\\n\\t\\n\\n\\t    var roamHelper = {};\\n\\n\\t    /**\\n\\t     * @param {module:echarts/coord/View} view\\n\\t     * @param {Object} payload\\n\\t     * @param {Object} [zoomLimit]\\n\\t     */\\n\\t    roamHelper.updateCenterAndZoom = function (\\n\\t        view, payload, zoomLimit\\n\\t    ) {\\n\\t        var previousZoom = view.getZoom();\\n\\t        var center = view.getCenter();\\n\\t        var zoom = payload.zoom;\\n\\n\\t        var point = view.dataToPoint(center);\\n\\n\\t        if (payload.dx != null && payload.dy != null) {\\n\\t            point[0] -= payload.dx;\\n\\t            point[1] -= payload.dy;\\n\\n\\t            var center = view.pointToData(point);\\n\\t            view.setCenter(center);\\n\\t        }\\n\\t        if (zoom != null) {\\n\\t            if (zoomLimit) {\\n\\t                var zoomMin = zoomLimit.min || 0;\\n\\t                var zoomMax = zoomLimit.max || Infinity;\\n\\t                zoom = Math.max(\\n\\t                    Math.min(previousZoom * zoom, zoomMax),\\n\\t                    zoomMin\\n\\t                ) / previousZoom;\\n\\t            }\\n\\n\\t            // Zoom on given point(originX, originY)\\n\\t            view.scale[0] *= zoom;\\n\\t            view.scale[1] *= zoom;\\n\\t            var position = view.position;\\n\\t            var fixX = (payload.originX - position[0]) * (zoom - 1);\\n\\t            var fixY = (payload.originY - position[1]) * (zoom - 1);\\n\\n\\t            position[0] -= fixX;\\n\\t            position[1] -= fixY;\\n\\n\\t            view.updateTransform();\\n\\t            // Get the new center\\n\\t            var center = view.pointToData(point);\\n\\t            view.setCenter(center);\\n\\t            view.setZoom(zoom * previousZoom);\\n\\t        }\\n\\n\\t        return {\\n\\t            center: view.getCenter(),\\n\\t            zoom: view.getZoom()\\n\\t        };\\n\\t    };\\n\\n\\t    module.exports = roamHelper;\\n\\n\\n/***/ },\\n/* 189 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\n\\t    module.exports = function (ecModel) {\\n\\n\\t        var processedMapType = {};\\n\\n\\t        ecModel.eachSeriesByType('map', function (mapSeries) {\\n\\t            var mapType = mapSeries.getMapType();\\n\\t            if (mapSeries.getHostGeoModel() || processedMapType[mapType]) {\\n\\t                return;\\n\\t            }\\n\\n\\t            var mapSymbolOffsets = {};\\n\\n\\t            zrUtil.each(mapSeries.seriesGroup, function (subMapSeries) {\\n\\t                var geo = subMapSeries.coordinateSystem;\\n\\t                var data = subMapSeries.originalData;\\n\\t                if (subMapSeries.get('showLegendSymbol') && ecModel.getComponent('legend')) {\\n\\t                    data.each('value', function (value, idx) {\\n\\t                        var name = data.getName(idx);\\n\\t                        var region = geo.getRegion(name);\\n\\n\\t                        // If input series.data is [11, 22, '-'/null/undefined, 44],\\n\\t                        // it will be filled with NaN: [11, 22, NaN, 44] and NaN will\\n\\t                        // not be drawn. So here must validate if value is NaN.\\n\\t                        if (!region || isNaN(value)) {\\n\\t                            return;\\n\\t                        }\\n\\n\\t                        var offset = mapSymbolOffsets[name] || 0;\\n\\n\\t                        var point = geo.dataToPoint(region.center);\\n\\n\\t                        mapSymbolOffsets[name] = offset + 1;\\n\\n\\t                        data.setItemLayout(idx, {\\n\\t                            point: point,\\n\\t                            offset: offset\\n\\t                        });\\n\\t                    });\\n\\t                }\\n\\t            });\\n\\n\\t            // Show label of those region not has legendSymbol(which is offset 0)\\n\\t            var data = mapSeries.getData();\\n\\t            data.each(function (idx) {\\n\\t                var name = data.getName(idx);\\n\\t                var layout = data.getItemLayout(idx) || {};\\n\\t                layout.showLabel = !mapSymbolOffsets[name];\\n\\t                data.setItemLayout(idx, layout);\\n\\t            });\\n\\n\\t            processedMapType[mapType] = true;\\n\\t        });\\n\\t    };\\n\\n\\n/***/ },\\n/* 190 */\\n/***/ function(module, exports) {\\n\\n\\t\\n\\t    module.exports = function (ecModel) {\\n\\t        ecModel.eachSeriesByType('map', function (seriesModel) {\\n\\t            var colorList = seriesModel.get('color');\\n\\t            var itemStyleModel = seriesModel.getModel('itemStyle.normal');\\n\\n\\t            var areaColor = itemStyleModel.get('areaColor');\\n\\t            var color = itemStyleModel.get('color')\\n\\t                || colorList[seriesModel.seriesIndex % colorList.length];\\n\\n\\t            seriesModel.getData().setVisual({\\n\\t                'areaColor': areaColor,\\n\\t                'color': color\\n\\t            });\\n\\t        });\\n\\t    };\\n\\n\\n/***/ },\\n/* 191 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\n\\t    // FIXME 公用？\\n\\t    /**\\n\\t     * @param {Array.<module:echarts/data/List>} datas\\n\\t     * @param {string} statisticType 'average' 'sum'\\n\\t     * @inner\\n\\t     */\\n\\t    function dataStatistics(datas, statisticType) {\\n\\t        var dataNameMap = {};\\n\\t        var dims = ['value'];\\n\\n\\t        zrUtil.each(datas, function (data) {\\n\\t            data.each(dims, function (value, idx) {\\n\\t                // Add prefix to avoid conflict with Object.prototype.\\n\\t                var mapKey = 'ec-' + data.getName(idx);\\n\\t                dataNameMap[mapKey] = dataNameMap[mapKey] || [];\\n\\t                if (!isNaN(value)) {\\n\\t                    dataNameMap[mapKey].push(value);\\n\\t                }\\n\\t            });\\n\\t        });\\n\\n\\t        return datas[0].map(dims, function (value, idx) {\\n\\t            var mapKey = 'ec-' + datas[0].getName(idx);\\n\\t            var sum = 0;\\n\\t            var min = Infinity;\\n\\t            var max = -Infinity;\\n\\t            var len = dataNameMap[mapKey].length;\\n\\t            for (var i = 0; i < len; i++) {\\n\\t                min = Math.min(min, dataNameMap[mapKey][i]);\\n\\t                max = Math.max(max, dataNameMap[mapKey][i]);\\n\\t                sum += dataNameMap[mapKey][i];\\n\\t            }\\n\\t            var result;\\n\\t            if (statisticType === 'min') {\\n\\t                result = min;\\n\\t            }\\n\\t            else if (statisticType === 'max') {\\n\\t                result = max;\\n\\t            }\\n\\t            else if (statisticType === 'average') {\\n\\t                result = sum / len;\\n\\t            }\\n\\t            else {\\n\\t                result = sum;\\n\\t            }\\n\\t            return len === 0 ? NaN : result;\\n\\t        });\\n\\t    }\\n\\n\\t    module.exports = function (ecModel) {\\n\\t        var seriesGroups = {};\\n\\t        ecModel.eachSeriesByType('map', function (seriesModel) {\\n\\t            var hostGeoModel = seriesModel.getHostGeoModel();\\n\\t            var key = hostGeoModel ? 'o' + hostGeoModel.id : 'i' + seriesModel.getMapType();\\n\\t            (seriesGroups[key] = seriesGroups[key] || []).push(seriesModel);\\n\\t        });\\n\\n\\t        zrUtil.each(seriesGroups, function (seriesList, key) {\\n\\t            var data = dataStatistics(\\n\\t                zrUtil.map(seriesList, function (seriesModel) {\\n\\t                    return seriesModel.getData();\\n\\t                }),\\n\\t                seriesList[0].get('mapValueCalculation')\\n\\t            );\\n\\n\\t            for (var i = 0; i < seriesList.length; i++) {\\n\\t                seriesList[i].originalData = seriesList[i].getData();\\n\\t            }\\n\\n\\t            // FIXME Put where?\\n\\t            for (var i = 0; i < seriesList.length; i++) {\\n\\t                seriesList[i].seriesGroup = seriesList;\\n\\t                seriesList[i].needsDrawMap = i === 0 && !seriesList[i].getHostGeoModel();\\n\\n\\t                seriesList[i].setData(data.cloneShallow());\\n\\t                seriesList[i].mainSeries = seriesList[0];\\n\\t            }\\n\\t        });\\n\\t    };\\n\\n\\n/***/ },\\n/* 192 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\n\\t    module.exports = function (option) {\\n\\t        // Save geoCoord\\n\\t        var mapSeries = [];\\n\\t        zrUtil.each(option.series, function (seriesOpt) {\\n\\t            if (seriesOpt.type === 'map') {\\n\\t                mapSeries.push(seriesOpt);\\n\\t            }\\n\\t        });\\n\\n\\t        zrUtil.each(mapSeries, function (seriesOpt) {\\n\\t            seriesOpt.map = seriesOpt.map || seriesOpt.mapType;\\n\\t            // Put x, y, width, height, x2, y2 in the top level\\n\\t            zrUtil.defaults(seriesOpt, seriesOpt.mapLocation);\\n\\t        });\\n\\t    };\\n\\n\\n/***/ },\\n/* 193 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var echarts = __webpack_require__(1);\\n\\n\\t    __webpack_require__(194);\\n\\t    __webpack_require__(198);\\n\\t    __webpack_require__(201);\\n\\n\\t    echarts.registerVisual(__webpack_require__(202));\\n\\n\\t    echarts.registerLayout(__webpack_require__(204));\\n\\n\\n/***/ },\\n/* 194 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var SeriesModel = __webpack_require__(78);\\n\\t    var Tree = __webpack_require__(195);\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var Model = __webpack_require__(12);\\n\\t    var formatUtil = __webpack_require__(6);\\n\\t    var helper = __webpack_require__(197);\\n\\t    var encodeHTML = formatUtil.encodeHTML;\\n\\t    var addCommas = formatUtil.addCommas;\\n\\n\\n\\t    module.exports = SeriesModel.extend({\\n\\n\\t        type: 'series.treemap',\\n\\n\\t        layoutMode: 'box',\\n\\n\\t        dependencies: ['grid', 'polar'],\\n\\n\\t        /**\\n\\t         * @type {module:echarts/data/Tree~Node}\\n\\t         */\\n\\t        _viewRoot: null,\\n\\n\\t        defaultOption: {\\n\\t            // Disable progressive rendering\\n\\t            progressive: 0,\\n\\t            hoverLayerThreshold: Infinity,\\n\\t            // center: ['50%', '50%'],          // not supported in ec3.\\n\\t            // size: ['80%', '80%'],            // deprecated, compatible with ec2.\\n\\t            left: 'center',\\n\\t            top: 'middle',\\n\\t            right: null,\\n\\t            bottom: null,\\n\\t            width: '80%',\\n\\t            height: '80%',\\n\\t            sort: true,                         // Can be null or false or true\\n\\t                                                // (order by desc default, asc not supported yet (strange effect))\\n\\t            clipWindow: 'origin',               // Size of clipped window when zooming. 'origin' or 'fullscreen'\\n\\t            squareRatio: 0.5 * (1 + Math.sqrt(5)), // golden ratio\\n\\t            leafDepth: null,                    // Nodes on depth from root are regarded as leaves.\\n\\t                                                // Count from zero (zero represents only view root).\\n\\t            drillDownIcon: '▶',                 // Use html character temporarily because it is complicated\\n\\t                                                // to align specialized icon. ▷▶❒❐▼✚\\n\\n\\t            zoomToNodeRatio: 0.32 * 0.32,       // Be effective when using zoomToNode. Specify the proportion of the\\n\\t                                                // target node area in the view area.\\n\\t            roam: true,                         // true, false, 'scale' or 'zoom', 'move'.\\n\\t            nodeClick: 'zoomToNode',            // Leaf node click behaviour: 'zoomToNode', 'link', false.\\n\\t                                                // If leafDepth is set and clicking a node which has children but\\n\\t                                                // be on left depth, the behaviour would be changing root. Otherwise\\n\\t                                                // use behavious defined above.\\n\\t            animation: true,\\n\\t            animationDurationUpdate: 900,\\n\\t            animationEasing: 'quinticInOut',\\n\\t            breadcrumb: {\\n\\t                show: true,\\n\\t                height: 22,\\n\\t                left: 'center',\\n\\t                top: 'bottom',\\n\\t                // right\\n\\t                // bottom\\n\\t                emptyItemWidth: 25,             // Width of empty node.\\n\\t                itemStyle: {\\n\\t                    normal: {\\n\\t                        color: 'rgba(0,0,0,0.7)', //'#5793f3',\\n\\t                        borderColor: 'rgba(255,255,255,0.7)',\\n\\t                        borderWidth: 1,\\n\\t                        shadowColor: 'rgba(150,150,150,1)',\\n\\t                        shadowBlur: 3,\\n\\t                        shadowOffsetX: 0,\\n\\t                        shadowOffsetY: 0,\\n\\t                        textStyle: {\\n\\t                            color: '#fff'\\n\\t                        }\\n\\t                    },\\n\\t                    emphasis: {\\n\\t                        textStyle: {}\\n\\t                    }\\n\\t                }\\n\\t            },\\n\\t            label: {\\n\\t                normal: {\\n\\t                    show: true,\\n\\t                    position: 'inside', // Can be [5, '5%'] or position stirng like 'insideTopLeft', ...\\n\\t                    // formatter: null,\\n\\t                    textStyle: {\\n\\t                        color: '#fff',\\n\\t                        ellipsis: true\\n\\t                        // align\\n\\t                        // baseline\\n\\t                    }\\n\\t                }\\n\\t            },\\n\\t            upperLabel: {                   // Label when node is parent.\\n\\t                normal: {\\n\\t                    show: false,\\n\\t                    position: [0, '50%'],\\n\\t                    height: 20,\\n\\t                    // formatter: null,\\n\\t                    textStyle: {\\n\\t                        color: '#fff',\\n\\t                        ellipsis: true,\\n\\t                        // align: null,\\n\\t                        baseline: 'middle'\\n\\t                    }\\n\\t                },\\n\\t                emphasis: {\\n\\t                    show: true,\\n\\t                    position: [0, '50%'],\\n\\t                    textStyle: {\\n\\t                        color: '#fff',\\n\\t                        ellipsis: true,\\n\\t                        baseline: 'middle'\\n\\t                    }\\n\\t                }\\n\\t            },\\n\\t            itemStyle: {\\n\\t                normal: {\\n\\t                    color: null,            // Can be 'none' if not necessary.\\n\\t                    colorAlpha: null,       // Can be 'none' if not necessary.\\n\\t                    colorSaturation: null,  // Can be 'none' if not necessary.\\n\\t                    borderWidth: 0,\\n\\t                    gapWidth: 0,\\n\\t                    borderColor: '#fff',\\n\\t                    borderColorSaturation: null // If specified, borderColor will be ineffective, and the\\n\\t                                                // border color is evaluated by color of current node and\\n\\t                                                // borderColorSaturation.\\n\\t                },\\n\\t                emphasis: {\\n\\n\\t                }\\n\\t            },\\n\\n\\t            visualDimension: 0,                 // Can be 0, 1, 2, 3.\\n\\t            visualMin: null,\\n\\t            visualMax: null,\\n\\n\\t            color: [],                  // + treemapSeries.color should not be modified. Please only modified\\n\\t                                        // level[n].color (if necessary).\\n\\t                                        // + Specify color list of each level. level[0].color would be global\\n\\t                                        // color list if not specified. (see method `setDefault`).\\n\\t                                        // + But set as a empty array to forbid fetch color from global palette\\n\\t                                        // when using nodeModel.get('color'), otherwise nodes on deep level\\n\\t                                        // will always has color palette set and are not able to inherit color\\n\\t                                        // from parent node.\\n\\t                                        // + TreemapSeries.color can not be set as 'none', otherwise effect\\n\\t                                        // legend color fetching (see seriesColor.js).\\n\\t            colorAlpha: null,           // Array. Specify color alpha range of each level, like [0.2, 0.8]\\n\\t            colorSaturation: null,      // Array. Specify color saturation of each level, like [0.2, 0.5]\\n\\t            colorMappingBy: 'index',    // 'value' or 'index' or 'id'.\\n\\t            visibleMin: 10,             // If area less than this threshold (unit: pixel^2), node will not\\n\\t                                        // be rendered. Only works when sort is 'asc' or 'desc'.\\n\\t            childrenVisibleMin: null,   // If area of a node less than this threshold (unit: pixel^2),\\n\\t                                        // grandchildren will not show.\\n\\t                                        // Why grandchildren? If not grandchildren but children,\\n\\t                                        // some siblings show children and some not,\\n\\t                                        // the appearance may be mess and not consistent,\\n\\t            levels: []                  // Each item: {\\n\\t                                        //     visibleMin, itemStyle, visualDimension, label\\n\\t                                        // }\\n\\t            // data: {\\n\\t            //      value: [],\\n\\t            //      children: [],\\n\\t            //      link: 'http://xxx.xxx.xxx',\\n\\t            //      target: 'blank' or 'self'\\n\\t            // }\\n\\t        },\\n\\n\\t        /**\\n\\t         * @override\\n\\t         */\\n\\t        getInitialData: function (option, ecModel) {\\n\\t            // Create a virtual root.\\n\\t            var root = {name: option.name, children: option.data};\\n\\n\\t            completeTreeValue(root);\\n\\n\\t            var levels = option.levels || [];\\n\\n\\t            levels = option.levels = setDefault(levels, ecModel);\\n\\n\\t            // Make sure always a new tree is created when setOption,\\n\\t            // in TreemapView, we check whether oldTree === newTree\\n\\t            // to choose mappings approach among old shapes and new shapes.\\n\\t            return Tree.createTree(root, this, levels).data;\\n\\t        },\\n\\n\\t        optionUpdated: function () {\\n\\t            this.resetViewRoot();\\n\\t        },\\n\\n\\t        /**\\n\\t         * @override\\n\\t         * @param {number} dataIndex\\n\\t         * @param {boolean} [mutipleSeries=false]\\n\\t         */\\n\\t        formatTooltip: function (dataIndex) {\\n\\t            var data = this.getData();\\n\\t            var value = this.getRawValue(dataIndex);\\n\\t            var formattedValue = zrUtil.isArray(value)\\n\\t                ? addCommas(value[0]) : addCommas(value);\\n\\t            var name = data.getName(dataIndex);\\n\\n\\t            return encodeHTML(name + ': ' + formattedValue);\\n\\t        },\\n\\n\\t        /**\\n\\t         * Add tree path to tooltip param\\n\\t         *\\n\\t         * @override\\n\\t         * @param {number} dataIndex\\n\\t         * @return {Object}\\n\\t         */\\n\\t        getDataParams: function (dataIndex) {\\n\\t            var params = SeriesModel.prototype.getDataParams.apply(this, arguments);\\n\\n\\t            var node = this.getData().tree.getNodeByDataIndex(dataIndex);\\n\\t            params.treePathInfo = helper.wrapTreePathInfo(node, this);\\n\\n\\t            return params;\\n\\t        },\\n\\n\\t        /**\\n\\t         * @public\\n\\t         * @param {Object} layoutInfo {\\n\\t         *                                x: containerGroup x\\n\\t         *                                y: containerGroup y\\n\\t         *                                width: containerGroup width\\n\\t         *                                height: containerGroup height\\n\\t         *                            }\\n\\t         */\\n\\t        setLayoutInfo: function (layoutInfo) {\\n\\t            /**\\n\\t             * @readOnly\\n\\t             * @type {Object}\\n\\t             */\\n\\t            this.layoutInfo = this.layoutInfo || {};\\n\\t            zrUtil.extend(this.layoutInfo, layoutInfo);\\n\\t        },\\n\\n\\t        /**\\n\\t         * @param  {string} id\\n\\t         * @return {number} index\\n\\t         */\\n\\t        mapIdToIndex: function (id) {\\n\\t            // A feature is implemented:\\n\\t            // index is monotone increasing with the sequence of\\n\\t            // input id at the first time.\\n\\t            // This feature can make sure that each data item and its\\n\\t            // mapped color have the same index between data list and\\n\\t            // color list at the beginning, which is useful for user\\n\\t            // to adjust data-color mapping.\\n\\n\\t            /**\\n\\t             * @private\\n\\t             * @type {Object}\\n\\t             */\\n\\t            var idIndexMap = this._idIndexMap;\\n\\n\\t            if (!idIndexMap) {\\n\\t                idIndexMap = this._idIndexMap = zrUtil.createHashMap();\\n\\t                /**\\n\\t                 * @private\\n\\t                 * @type {number}\\n\\t                 */\\n\\t                this._idIndexMapCount = 0;\\n\\t            }\\n\\n\\t            var index = idIndexMap.get(id);\\n\\t            if (index == null) {\\n\\t                idIndexMap.set(id, index = this._idIndexMapCount++);\\n\\t            }\\n\\n\\t            return index;\\n\\t        },\\n\\n\\t        getViewRoot: function () {\\n\\t            return this._viewRoot;\\n\\t        },\\n\\n\\t        /**\\n\\t         * @param {module:echarts/data/Tree~Node} [viewRoot]\\n\\t         */\\n\\t        resetViewRoot: function (viewRoot) {\\n\\t            viewRoot\\n\\t                ? (this._viewRoot = viewRoot)\\n\\t                : (viewRoot = this._viewRoot);\\n\\n\\t            var root = this.getData().tree.root;\\n\\n\\t            if (!viewRoot\\n\\t                || (viewRoot !== root && !root.contains(viewRoot))\\n\\t            ) {\\n\\t                this._viewRoot = root;\\n\\t            }\\n\\t        }\\n\\t    });\\n\\n\\t    /**\\n\\t     * @param {Object} dataNode\\n\\t     */\\n\\t    function completeTreeValue(dataNode) {\\n\\t        // Postorder travel tree.\\n\\t        // If value of none-leaf node is not set,\\n\\t        // calculate it by suming up the value of all children.\\n\\t        var sum = 0;\\n\\n\\t        zrUtil.each(dataNode.children, function (child) {\\n\\n\\t            completeTreeValue(child);\\n\\n\\t            var childValue = child.value;\\n\\t            zrUtil.isArray(childValue) && (childValue = childValue[0]);\\n\\n\\t            sum += childValue;\\n\\t        });\\n\\n\\t        var thisValue = dataNode.value;\\n\\t        if (zrUtil.isArray(thisValue)) {\\n\\t            thisValue = thisValue[0];\\n\\t        }\\n\\n\\t        if (thisValue == null || isNaN(thisValue)) {\\n\\t            thisValue = sum;\\n\\t        }\\n\\t        // Value should not less than 0.\\n\\t        if (thisValue < 0) {\\n\\t            thisValue = 0;\\n\\t        }\\n\\n\\t        zrUtil.isArray(dataNode.value)\\n\\t            ? (dataNode.value[0] = thisValue)\\n\\t            : (dataNode.value = thisValue);\\n\\t    }\\n\\n\\t    /**\\n\\t     * set default to level configuration\\n\\t     */\\n\\t    function setDefault(levels, ecModel) {\\n\\t        var globalColorList = ecModel.get('color');\\n\\n\\t        if (!globalColorList) {\\n\\t            return;\\n\\t        }\\n\\n\\t        levels = levels || [];\\n\\t        var hasColorDefine;\\n\\t        zrUtil.each(levels, function (levelDefine) {\\n\\t            var model = new Model(levelDefine);\\n\\t            var modelColor = model.get('color');\\n\\n\\t            if (model.get('itemStyle.normal.color')\\n\\t                || (modelColor && modelColor !== 'none')\\n\\t            ) {\\n\\t                hasColorDefine = true;\\n\\t            }\\n\\t        });\\n\\n\\t        if (!hasColorDefine) {\\n\\t            var level0 = levels[0] || (levels[0] = {});\\n\\t            level0.color = globalColorList.slice();\\n\\t        }\\n\\n\\t        return levels;\\n\\t    }\\n\\n\\n\\n/***/ },\\n/* 195 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * Tree data structure\\n\\t *\\n\\t * @module echarts/data/Tree\\n\\t */\\n\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var Model = __webpack_require__(12);\\n\\t    var List = __webpack_require__(98);\\n\\t    var linkList = __webpack_require__(196);\\n\\t    var completeDimensions = __webpack_require__(110);\\n\\n\\t    /**\\n\\t     * @constructor module:echarts/data/Tree~TreeNode\\n\\t     * @param {string} name\\n\\t     * @param {module:echarts/data/Tree} hostTree\\n\\t     */\\n\\t    var TreeNode = function (name, hostTree) {\\n\\t        /**\\n\\t         * @type {string}\\n\\t         */\\n\\t        this.name = name || '';\\n\\n\\t        /**\\n\\t         * Depth of node\\n\\t         *\\n\\t         * @type {number}\\n\\t         * @readOnly\\n\\t         */\\n\\t        this.depth = 0;\\n\\n\\t        /**\\n\\t         * Height of the subtree rooted at this node.\\n\\t         * @type {number}\\n\\t         * @readOnly\\n\\t         */\\n\\t        this.height = 0;\\n\\n\\t        /**\\n\\t         * @type {module:echarts/data/Tree~TreeNode}\\n\\t         * @readOnly\\n\\t         */\\n\\t        this.parentNode = null;\\n\\n\\t        /**\\n\\t         * Reference to list item.\\n\\t         * Do not persistent dataIndex outside,\\n\\t         * besause it may be changed by list.\\n\\t         * If dataIndex -1,\\n\\t         * this node is logical deleted (filtered) in list.\\n\\t         *\\n\\t         * @type {Object}\\n\\t         * @readOnly\\n\\t         */\\n\\t        this.dataIndex = -1;\\n\\n\\t        /**\\n\\t         * @type {Array.<module:echarts/data/Tree~TreeNode>}\\n\\t         * @readOnly\\n\\t         */\\n\\t        this.children = [];\\n\\n\\t        /**\\n\\t         * @type {Array.<module:echarts/data/Tree~TreeNode>}\\n\\t         * @pubilc\\n\\t         */\\n\\t        this.viewChildren = [];\\n\\n\\t        /**\\n\\t         * @type {moduel:echarts/data/Tree}\\n\\t         * @readOnly\\n\\t         */\\n\\t        this.hostTree = hostTree;\\n\\t    };\\n\\n\\t    TreeNode.prototype = {\\n\\n\\t        constructor: TreeNode,\\n\\n\\t        /**\\n\\t         * The node is removed.\\n\\t         * @return {boolean} is removed.\\n\\t         */\\n\\t        isRemoved: function () {\\n\\t            return this.dataIndex < 0;\\n\\t        },\\n\\n\\t        /**\\n\\t         * Travel this subtree (include this node).\\n\\t         * Usage:\\n\\t         *    node.eachNode(function () { ... }); // preorder\\n\\t         *    node.eachNode('preorder', function () { ... }); // preorder\\n\\t         *    node.eachNode('postorder', function () { ... }); // postorder\\n\\t         *    node.eachNode(\\n\\t         *        {order: 'postorder', attr: 'viewChildren'},\\n\\t         *        function () { ... }\\n\\t         *    ); // postorder\\n\\t         *\\n\\t         * @param {(Object|string)} options If string, means order.\\n\\t         * @param {string=} options.order 'preorder' or 'postorder'\\n\\t         * @param {string=} options.attr 'children' or 'viewChildren'\\n\\t         * @param {Function} cb If in preorder and return false,\\n\\t         *                      its subtree will not be visited.\\n\\t         * @param {Object} [context]\\n\\t         */\\n\\t        eachNode: function (options, cb, context) {\\n\\t            if (typeof options === 'function') {\\n\\t                context = cb;\\n\\t                cb = options;\\n\\t                options = null;\\n\\t            }\\n\\n\\t            options = options || {};\\n\\t            if (zrUtil.isString(options)) {\\n\\t                options = {order: options};\\n\\t            }\\n\\n\\t            var order = options.order || 'preorder';\\n\\t            var children = this[options.attr || 'children'];\\n\\n\\t            var suppressVisitSub;\\n\\t            order === 'preorder' && (suppressVisitSub = cb.call(context, this));\\n\\n\\t            for (var i = 0; !suppressVisitSub && i < children.length; i++) {\\n\\t                children[i].eachNode(options, cb, context);\\n\\t            }\\n\\n\\t            order === 'postorder' && cb.call(context, this);\\n\\t        },\\n\\n\\t        /**\\n\\t         * Update depth and height of this subtree.\\n\\t         *\\n\\t         * @param  {number} depth\\n\\t         */\\n\\t        updateDepthAndHeight: function (depth) {\\n\\t            var height = 0;\\n\\t            this.depth = depth;\\n\\t            for (var i = 0; i < this.children.length; i++) {\\n\\t                var child = this.children[i];\\n\\t                child.updateDepthAndHeight(depth + 1);\\n\\t                if (child.height > height) {\\n\\t                    height = child.height;\\n\\t                }\\n\\t            }\\n\\t            this.height = height + 1;\\n\\t        },\\n\\n\\t        /**\\n\\t         * @param  {string} id\\n\\t         * @return {module:echarts/data/Tree~TreeNode}\\n\\t         */\\n\\t        getNodeById: function (id) {\\n\\t            if (this.getId() === id) {\\n\\t                return this;\\n\\t            }\\n\\t            for (var i = 0, children = this.children, len = children.length; i < len; i++) {\\n\\t                var res = children[i].getNodeById(id);\\n\\t                if (res) {\\n\\t                    return res;\\n\\t                }\\n\\t            }\\n\\t        },\\n\\n\\t        /**\\n\\t         * @param {module:echarts/data/Tree~TreeNode} node\\n\\t         * @return {boolean}\\n\\t         */\\n\\t        contains: function (node) {\\n\\t            if (node === this) {\\n\\t                return true;\\n\\t            }\\n\\t            for (var i = 0, children = this.children, len = children.length; i < len; i++) {\\n\\t                var res = children[i].contains(node);\\n\\t                if (res) {\\n\\t                    return res;\\n\\t                }\\n\\t            }\\n\\t        },\\n\\n\\t        /**\\n\\t         * @param {boolean} includeSelf Default false.\\n\\t         * @return {Array.<module:echarts/data/Tree~TreeNode>} order: [root, child, grandchild, ...]\\n\\t         */\\n\\t        getAncestors: function (includeSelf) {\\n\\t            var ancestors = [];\\n\\t            var node = includeSelf ? this : this.parentNode;\\n\\t            while (node) {\\n\\t                ancestors.push(node);\\n\\t                node = node.parentNode;\\n\\t            }\\n\\t            ancestors.reverse();\\n\\t            return ancestors;\\n\\t        },\\n\\n\\t        /**\\n\\t         * @param {string|Array=} [dimension='value'] Default 'value'. can be 0, 1, 2, 3\\n\\t         * @return {number} Value.\\n\\t         */\\n\\t        getValue: function (dimension) {\\n\\t            var data = this.hostTree.data;\\n\\t            return data.get(data.getDimension(dimension || 'value'), this.dataIndex);\\n\\t        },\\n\\n\\t        /**\\n\\t         * @param {Object} layout\\n\\t         * @param {boolean=} [merge=false]\\n\\t         */\\n\\t        setLayout: function (layout, merge) {\\n\\t            this.dataIndex >= 0\\n\\t                && this.hostTree.data.setItemLayout(this.dataIndex, layout, merge);\\n\\t        },\\n\\n\\t        /**\\n\\t         * @return {Object} layout\\n\\t         */\\n\\t        getLayout: function () {\\n\\t            return this.hostTree.data.getItemLayout(this.dataIndex);\\n\\t        },\\n\\n\\t        /**\\n\\t         * @param {string} [path]\\n\\t         * @return {module:echarts/model/Model}\\n\\t         */\\n\\t        getModel: function (path) {\\n\\t            if (this.dataIndex < 0) {\\n\\t                return;\\n\\t            }\\n\\t            var hostTree = this.hostTree;\\n\\t            var itemModel = hostTree.data.getItemModel(this.dataIndex);\\n\\t            var levelModel = this.getLevelModel();\\n\\n\\t            return itemModel.getModel(path, (levelModel || hostTree.hostModel).getModel(path));\\n\\t        },\\n\\n\\t        /**\\n\\t         * @return {module:echarts/model/Model}\\n\\t         */\\n\\t        getLevelModel: function () {\\n\\t            return (this.hostTree.levelModels || [])[this.depth];\\n\\t        },\\n\\n\\t        /**\\n\\t         * @example\\n\\t         *  setItemVisual('color', color);\\n\\t         *  setItemVisual({\\n\\t         *      'color': color\\n\\t         *  });\\n\\t         */\\n\\t        setVisual: function (key, value) {\\n\\t            this.dataIndex >= 0\\n\\t                && this.hostTree.data.setItemVisual(this.dataIndex, key, value);\\n\\t        },\\n\\n\\t        /**\\n\\t         * Get item visual\\n\\t         */\\n\\t        getVisual: function (key, ignoreParent) {\\n\\t            return this.hostTree.data.getItemVisual(this.dataIndex, key, ignoreParent);\\n\\t        },\\n\\n\\t        /**\\n\\t         * @public\\n\\t         * @return {number}\\n\\t         */\\n\\t        getRawIndex: function () {\\n\\t            return this.hostTree.data.getRawIndex(this.dataIndex);\\n\\t        },\\n\\n\\t        /**\\n\\t         * @public\\n\\t         * @return {string}\\n\\t         */\\n\\t        getId: function () {\\n\\t            return this.hostTree.data.getId(this.dataIndex);\\n\\t        }\\n\\t    };\\n\\n\\t    /**\\n\\t     * @constructor\\n\\t     * @alias module:echarts/data/Tree\\n\\t     * @param {module:echarts/model/Model} hostModel\\n\\t     * @param {Array.<Object>} levelOptions\\n\\t     */\\n\\t    function Tree(hostModel, levelOptions) {\\n\\t        /**\\n\\t         * @type {module:echarts/data/Tree~TreeNode}\\n\\t         * @readOnly\\n\\t         */\\n\\t        this.root;\\n\\n\\t        /**\\n\\t         * @type {module:echarts/data/List}\\n\\t         * @readOnly\\n\\t         */\\n\\t        this.data;\\n\\n\\t        /**\\n\\t         * Index of each item is the same as the raw index of coresponding list item.\\n\\t         * @private\\n\\t         * @type {Array.<module:echarts/data/Tree~TreeNode}\\n\\t         */\\n\\t        this._nodes = [];\\n\\n\\t        /**\\n\\t         * @private\\n\\t         * @readOnly\\n\\t         * @type {module:echarts/model/Model}\\n\\t         */\\n\\t        this.hostModel = hostModel;\\n\\n\\t        /**\\n\\t         * @private\\n\\t         * @readOnly\\n\\t         * @type {Array.<module:echarts/model/Model}\\n\\t         */\\n\\t        this.levelModels = zrUtil.map(levelOptions || [], function (levelDefine) {\\n\\t            return new Model(levelDefine, hostModel, hostModel.ecModel);\\n\\t        });\\n\\t    }\\n\\n\\t    Tree.prototype = {\\n\\n\\t        constructor: Tree,\\n\\n\\t        type: 'tree',\\n\\n\\t        /**\\n\\t         * Travel this subtree (include this node).\\n\\t         * Usage:\\n\\t         *    node.eachNode(function () { ... }); // preorder\\n\\t         *    node.eachNode('preorder', function () { ... }); // preorder\\n\\t         *    node.eachNode('postorder', function () { ... }); // postorder\\n\\t         *    node.eachNode(\\n\\t         *        {order: 'postorder', attr: 'viewChildren'},\\n\\t         *        function () { ... }\\n\\t         *    ); // postorder\\n\\t         *\\n\\t         * @param {(Object|string)} options If string, means order.\\n\\t         * @param {string=} options.order 'preorder' or 'postorder'\\n\\t         * @param {string=} options.attr 'children' or 'viewChildren'\\n\\t         * @param {Function} cb\\n\\t         * @param {Object}   [context]\\n\\t         */\\n\\t        eachNode: function(options, cb, context) {\\n\\t            this.root.eachNode(options, cb, context);\\n\\t        },\\n\\n\\t        /**\\n\\t         * @param {number} dataIndex\\n\\t         * @return {module:echarts/data/Tree~TreeNode}\\n\\t         */\\n\\t        getNodeByDataIndex: function (dataIndex) {\\n\\t            var rawIndex = this.data.getRawIndex(dataIndex);\\n\\t            return this._nodes[rawIndex];\\n\\t        },\\n\\n\\t        /**\\n\\t         * @param {string} name\\n\\t         * @return {module:echarts/data/Tree~TreeNode}\\n\\t         */\\n\\t        getNodeByName: function (name) {\\n\\t            return this.root.getNodeByName(name);\\n\\t        },\\n\\n\\t        /**\\n\\t         * Update item available by list,\\n\\t         * when list has been performed options like 'filterSelf' or 'map'.\\n\\t         */\\n\\t        update: function () {\\n\\t            var data = this.data;\\n\\t            var nodes = this._nodes;\\n\\n\\t            for (var i = 0, len = nodes.length; i < len; i++) {\\n\\t                nodes[i].dataIndex = -1;\\n\\t            }\\n\\n\\t            for (var i = 0, len = data.count(); i < len; i++) {\\n\\t                nodes[data.getRawIndex(i)].dataIndex = i;\\n\\t            }\\n\\t        },\\n\\n\\t        /**\\n\\t         * Clear all layouts\\n\\t         */\\n\\t        clearLayouts: function () {\\n\\t            this.data.clearItemLayouts();\\n\\t        }\\n\\t    };\\n\\n\\t    /**\\n\\t     * data node format:\\n\\t     * {\\n\\t     *     name: ...\\n\\t     *     value: ...\\n\\t     *     children: [\\n\\t     *         {\\n\\t     *             name: ...\\n\\t     *             value: ...\\n\\t     *             children: ...\\n\\t     *         },\\n\\t     *         ...\\n\\t     *     ]\\n\\t     * }\\n\\t     *\\n\\t     * @static\\n\\t     * @param {Objec} dataRoot Root node.\\n\\t     * @param {module:echarts/model/Model} hostModel\\n\\t     * @param {Array.<Object>} levelOptions\\n\\t     * @return module:echarts/data/Tree\\n\\t     */\\n\\t    Tree.createTree = function (dataRoot, hostModel, levelOptions) {\\n\\n\\t        var tree = new Tree(hostModel, levelOptions);\\n\\t        var listData = [];\\n\\t        var dimMax = 1;\\n\\n\\t        buildHierarchy(dataRoot);\\n\\n\\t        function buildHierarchy(dataNode, parentNode) {\\n\\t            var value = dataNode.value;\\n\\t            dimMax = Math.max(dimMax, zrUtil.isArray(value) ? value.length : 1);\\n\\n\\t            listData.push(dataNode);\\n\\n\\t            var node = new TreeNode(dataNode.name, tree);\\n\\t            parentNode\\n\\t                ? addChild(node, parentNode)\\n\\t                : (tree.root = node);\\n\\n\\t            tree._nodes.push(node);\\n\\n\\t            var children = dataNode.children;\\n\\t            if (children) {\\n\\t                for (var i = 0; i < children.length; i++) {\\n\\t                    buildHierarchy(children[i], node);\\n\\t                }\\n\\t            }\\n\\t        }\\n\\n\\t        tree.root.updateDepthAndHeight(0);\\n\\n\\t        var dimensions = completeDimensions([{name: 'value'}], listData, {dimCount: dimMax});\\n\\t        var list = new List(dimensions, hostModel);\\n\\t        list.initData(listData);\\n\\n\\t        linkList({\\n\\t            mainData: list,\\n\\t            struct: tree,\\n\\t            structAttr: 'tree'\\n\\t        });\\n\\n\\t        tree.update();\\n\\n\\t        return tree;\\n\\t    };\\n\\n\\t    /**\\n\\t     * It is needed to consider the mess of 'list', 'hostModel' when creating a TreeNote,\\n\\t     * so this function is not ready and not necessary to be public.\\n\\t     *\\n\\t     * @param {(module:echarts/data/Tree~TreeNode|Object)} child\\n\\t     */\\n\\t    function addChild(child, node) {\\n\\t        var children = node.children;\\n\\t        if (child.parentNode === node) {\\n\\t            return;\\n\\t        }\\n\\n\\t        children.push(child);\\n\\t        child.parentNode = node;\\n\\t    }\\n\\n\\t    module.exports = Tree;\\n\\n\\n/***/ },\\n/* 196 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * Link lists and struct (graph or tree)\\n\\t */\\n\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var each = zrUtil.each;\\n\\n\\t    var DATAS = '\\\\0__link_datas';\\n\\t    var MAIN_DATA = '\\\\0__link_mainData';\\n\\n\\t    // Caution:\\n\\t    // In most case, either list or its shallow clones (see list.cloneShallow)\\n\\t    // is active in echarts process. So considering heap memory consumption,\\n\\t    // we do not clone tree or graph, but share them among list and its shallow clones.\\n\\t    // But in some rare case, we have to keep old list (like do animation in chart). So\\n\\t    // please take care that both the old list and the new list share the same tree/graph.\\n\\n\\t    /**\\n\\t     * @param {Object} opt\\n\\t     * @param {module:echarts/data/List} opt.mainData\\n\\t     * @param {Object} [opt.struct] For example, instance of Graph or Tree.\\n\\t     * @param {string} [opt.structAttr] designation: list[structAttr] = struct;\\n\\t     * @param {Object} [opt.datas] {dataType: data},\\n\\t     *                 like: {node: nodeList, edge: edgeList}.\\n\\t     *                 Should contain mainData.\\n\\t     * @param {Object} [opt.datasAttr] {dataType: attr},\\n\\t     *                 designation: struct[datasAttr[dataType]] = list;\\n\\t     */\\n\\t    function linkList(opt) {\\n\\t        var mainData = opt.mainData;\\n\\t        var datas = opt.datas;\\n\\n\\t        if (!datas) {\\n\\t            datas = {main: mainData};\\n\\t            opt.datasAttr = {main: 'data'};\\n\\t        }\\n\\t        opt.datas = opt.mainData = null;\\n\\n\\t        linkAll(mainData, datas, opt);\\n\\n\\t        // Porxy data original methods.\\n\\t        each(datas, function (data) {\\n\\t            each(mainData.TRANSFERABLE_METHODS, function (methodName) {\\n\\t                data.wrapMethod(methodName, zrUtil.curry(transferInjection, opt));\\n\\t            });\\n\\n\\t        });\\n\\n\\t        // Beyond transfer, additional features should be added to `cloneShallow`.\\n\\t        mainData.wrapMethod('cloneShallow', zrUtil.curry(cloneShallowInjection, opt));\\n\\n\\t        // Only mainData trigger change, because struct.update may trigger\\n\\t        // another changable methods, which may bring about dead lock.\\n\\t        each(mainData.CHANGABLE_METHODS, function (methodName) {\\n\\t            mainData.wrapMethod(methodName, zrUtil.curry(changeInjection, opt));\\n\\t        });\\n\\n\\t        // Make sure datas contains mainData.\\n\\t        zrUtil.assert(datas[mainData.dataType] === mainData);\\n\\t    }\\n\\n\\t    function transferInjection(opt, res) {\\n\\t        if (isMainData(this)) {\\n\\t            // Transfer datas to new main data.\\n\\t            var datas = zrUtil.extend({}, this[DATAS]);\\n\\t            datas[this.dataType] = res;\\n\\t            linkAll(res, datas, opt);\\n\\t        }\\n\\t        else {\\n\\t            // Modify the reference in main data to point newData.\\n\\t            linkSingle(res, this.dataType, this[MAIN_DATA], opt);\\n\\t        }\\n\\t        return res;\\n\\t    }\\n\\n\\t    function changeInjection(opt, res) {\\n\\t        opt.struct && opt.struct.update(this);\\n\\t        return res;\\n\\t    }\\n\\n\\t    function cloneShallowInjection(opt, res) {\\n\\t        // cloneShallow, which brings about some fragilities, may be inappropriate\\n\\t        // to be exposed as an API. So for implementation simplicity we can make\\n\\t        // the restriction that cloneShallow of not-mainData should not be invoked\\n\\t        // outside, but only be invoked here.\\n\\t        each(res[DATAS], function (data, dataType) {\\n\\t            data !== res && linkSingle(data.cloneShallow(), dataType, res, opt);\\n\\t        });\\n\\t        return res;\\n\\t    }\\n\\n\\t    /**\\n\\t     * Supplement method to List.\\n\\t     *\\n\\t     * @public\\n\\t     * @param {string} [dataType] If not specified, return mainData.\\n\\t     * @return {module:echarts/data/List}\\n\\t     */\\n\\t    function getLinkedData(dataType) {\\n\\t        var mainData = this[MAIN_DATA];\\n\\t        return (dataType == null || mainData == null)\\n\\t            ? mainData\\n\\t            : mainData[DATAS][dataType];\\n\\t    }\\n\\n\\t    function isMainData(data) {\\n\\t        return data[MAIN_DATA] === data;\\n\\t    }\\n\\n\\t    function linkAll(mainData, datas, opt) {\\n\\t        mainData[DATAS] = {};\\n\\t        each(datas, function (data, dataType) {\\n\\t            linkSingle(data, dataType, mainData, opt);\\n\\t        });\\n\\t    }\\n\\n\\t    function linkSingle(data, dataType, mainData, opt) {\\n\\t        mainData[DATAS][dataType] = data;\\n\\t        data[MAIN_DATA] = mainData;\\n\\t        data.dataType = dataType;\\n\\n\\t        if (opt.struct) {\\n\\t            data[opt.structAttr] = opt.struct;\\n\\t            opt.struct[opt.datasAttr[dataType]] = data;\\n\\t        }\\n\\n\\t        // Supplement method.\\n\\t        data.getLinkedData = getLinkedData;\\n\\t    }\\n\\n\\t    module.exports = linkList;\\n\\n\\n/***/ },\\n/* 197 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\n\\t    var helper = {\\n\\n\\t        retrieveTargetInfo: function (payload, seriesModel) {\\n\\t            if (payload\\n\\t                && (\\n\\t                    payload.type === 'treemapZoomToNode'\\n\\t                    || payload.type === 'treemapRootToNode'\\n\\t                )\\n\\t            ) {\\n\\t                var root = seriesModel.getData().tree.root;\\n\\t                var targetNode = payload.targetNode;\\n\\t                if (targetNode && root.contains(targetNode)) {\\n\\t                    return {node: targetNode};\\n\\t                }\\n\\n\\t                var targetNodeId = payload.targetNodeId;\\n\\t                if (targetNodeId != null && (targetNode = root.getNodeById(targetNodeId))) {\\n\\t                    return {node: targetNode};\\n\\t                }\\n\\t            }\\n\\t        },\\n\\n\\t        // Not includes the given node at the last item.\\n\\t        getPathToRoot: function (node) {\\n\\t            var path = [];\\n\\t            while (node) {\\n\\t                node = node.parentNode;\\n\\t                node && path.push(node);\\n\\t            }\\n\\t            return path.reverse();\\n\\t        },\\n\\n\\t        aboveViewRoot: function (viewRoot, node) {\\n\\t            var viewPath = helper.getPathToRoot(viewRoot);\\n\\t            return zrUtil.indexOf(viewPath, node) >= 0;\\n\\t        },\\n\\n\\t        // From root to the input node (the input node will be included).\\n\\t        wrapTreePathInfo: function (node, seriesModel) {\\n\\t            var treePathInfo = [];\\n\\n\\t            while (node) {\\n\\t                var nodeDataIndex = node.dataIndex;\\n\\t                treePathInfo.push({\\n\\t                    name: node.name,\\n\\t                    dataIndex: nodeDataIndex,\\n\\t                    value: seriesModel.getRawValue(nodeDataIndex)\\n\\t                });\\n\\t                node = node.parentNode;\\n\\t            }\\n\\n\\t            treePathInfo.reverse();\\n\\n\\t            return treePathInfo;\\n\\t        }\\n\\t    };\\n\\n\\t    module.exports = helper;\\n\\n\\n/***/ },\\n/* 198 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t \\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var graphic = __webpack_require__(18);\\n\\t    var DataDiffer = __webpack_require__(99);\\n\\t    var helper = __webpack_require__(197);\\n\\t    var Breadcrumb = __webpack_require__(199);\\n\\t    var RoamController = __webpack_require__(183);\\n\\t    var BoundingRect = __webpack_require__(9);\\n\\t    var matrix = __webpack_require__(11);\\n\\t    var animationUtil = __webpack_require__(200);\\n\\t    var bind = zrUtil.bind;\\n\\t    var Group = graphic.Group;\\n\\t    var Rect = graphic.Rect;\\n\\t    var each = zrUtil.each;\\n\\n\\t    var DRAG_THRESHOLD = 3;\\n\\t    var PATH_LABEL_NOAMAL = ['label', 'normal'];\\n\\t    var PATH_LABEL_EMPHASIS = ['label', 'emphasis'];\\n\\t    var PATH_UPPERLABEL_NORMAL = ['upperLabel', 'normal'];\\n\\t    var PATH_UPPERLABEL_EMPHASIS = ['upperLabel', 'emphasis'];\\n\\t    var Z_BASE = 10; // Should bigger than every z.\\n\\t    var Z_BG = 1;\\n\\t    var Z_CONTENT = 2;\\n\\n\\t    module.exports = __webpack_require__(1).extendChartView({\\n\\n\\t        type: 'treemap',\\n\\n\\t        /**\\n\\t         * @override\\n\\t         */\\n\\t        init: function (o, api) {\\n\\n\\t            /**\\n\\t             * @private\\n\\t             * @type {module:zrender/container/Group}\\n\\t             */\\n\\t            this._containerGroup;\\n\\n\\t            /**\\n\\t             * @private\\n\\t             * @type {Object.<string, Array.<module:zrender/container/Group>>}\\n\\t             */\\n\\t            this._storage = createStorage();\\n\\n\\t            /**\\n\\t             * @private\\n\\t             * @type {module:echarts/data/Tree}\\n\\t             */\\n\\t            this._oldTree;\\n\\n\\t            /**\\n\\t             * @private\\n\\t             * @type {module:echarts/chart/treemap/Breadcrumb}\\n\\t             */\\n\\t            this._breadcrumb;\\n\\n\\t            /**\\n\\t             * @private\\n\\t             * @type {module:echarts/component/helper/RoamController}\\n\\t             */\\n\\t            this._controller;\\n\\n\\t            /**\\n\\t             * 'ready', 'animating'\\n\\t             * @private\\n\\t             */\\n\\t            this._state = 'ready';\\n\\n\\t            /**\\n\\t             * @private\\n\\t             * @type {boolean}\\n\\t             */\\n\\t            this._mayClick;\\n\\t        },\\n\\n\\t        /**\\n\\t         * @override\\n\\t         */\\n\\t        render: function (seriesModel, ecModel, api, payload) {\\n\\n\\t            var models = ecModel.findComponents({\\n\\t                mainType: 'series', subType: 'treemap', query: payload\\n\\t            });\\n\\t            if (zrUtil.indexOf(models, seriesModel) < 0) {\\n\\t                return;\\n\\t            }\\n\\n\\t            this.seriesModel = seriesModel;\\n\\t            this.api = api;\\n\\t            this.ecModel = ecModel;\\n\\n\\t            var targetInfo = helper.retrieveTargetInfo(payload, seriesModel);\\n\\t            var payloadType = payload && payload.type;\\n\\t            var layoutInfo = seriesModel.layoutInfo;\\n\\t            var isInit = !this._oldTree;\\n\\t            var thisStorage = this._storage;\\n\\n\\t            // Mark new root when action is treemapRootToNode.\\n\\t            var reRoot = (payloadType === 'treemapRootToNode' && targetInfo && thisStorage)\\n\\t                ? {\\n\\t                    rootNodeGroup: thisStorage.nodeGroup[targetInfo.node.getRawIndex()],\\n\\t                    direction: payload.direction\\n\\t                }\\n\\t                : null;\\n\\n\\t            var containerGroup = this._giveContainerGroup(layoutInfo);\\n\\n\\t            var renderResult = this._doRender(containerGroup, seriesModel, reRoot);\\n\\t            (\\n\\t                !isInit && (\\n\\t                    !payloadType\\n\\t                    || payloadType === 'treemapZoomToNode'\\n\\t                    || payloadType === 'treemapRootToNode'\\n\\t                )\\n\\t            )\\n\\t                ? this._doAnimation(containerGroup, renderResult, seriesModel, reRoot)\\n\\t                : renderResult.renderFinally();\\n\\n\\t            this._resetController(api);\\n\\n\\t            this._renderBreadcrumb(seriesModel, api, targetInfo);\\n\\t        },\\n\\n\\t        /**\\n\\t         * @private\\n\\t         */\\n\\t        _giveContainerGroup: function (layoutInfo) {\\n\\t            var containerGroup = this._containerGroup;\\n\\t            if (!containerGroup) {\\n\\t                // FIXME\\n\\t                // 加一层containerGroup是为了clip，但是现在clip功能并没有实现。\\n\\t                containerGroup = this._containerGroup = new Group();\\n\\t                this._initEvents(containerGroup);\\n\\t                this.group.add(containerGroup);\\n\\t            }\\n\\t            containerGroup.attr('position', [layoutInfo.x, layoutInfo.y]);\\n\\n\\t            return containerGroup;\\n\\t        },\\n\\n\\t        /**\\n\\t         * @private\\n\\t         */\\n\\t        _doRender: function (containerGroup, seriesModel, reRoot) {\\n\\t            var thisTree = seriesModel.getData().tree;\\n\\t            var oldTree = this._oldTree;\\n\\n\\t            // Clear last shape records.\\n\\t            var lastsForAnimation = createStorage();\\n\\t            var thisStorage = createStorage();\\n\\t            var oldStorage = this._storage;\\n\\t            var willInvisibleEls = [];\\n\\t            var doRenderNode = zrUtil.curry(\\n\\t                renderNode, seriesModel,\\n\\t                thisStorage, oldStorage, reRoot,\\n\\t                lastsForAnimation, willInvisibleEls\\n\\t            );\\n\\n\\t            // Notice: when thisTree and oldTree are the same tree (see list.cloneShadow),\\n\\t            // the oldTree is actually losted, so we can not find all of the old graphic\\n\\t            // elements from tree. So we use this stragegy: make element storage, move\\n\\t            // from old storage to new storage, clear old storage.\\n\\n\\t            dualTravel(\\n\\t                thisTree.root ? [thisTree.root] : [],\\n\\t                (oldTree && oldTree.root) ? [oldTree.root] : [],\\n\\t                containerGroup,\\n\\t                thisTree === oldTree || !oldTree,\\n\\t                0\\n\\t            );\\n\\n\\t            // Process all removing.\\n\\t            var willDeleteEls = clearStorage(oldStorage);\\n\\n\\t            this._oldTree = thisTree;\\n\\t            this._storage = thisStorage;\\n\\n\\t            return {\\n\\t                lastsForAnimation: lastsForAnimation,\\n\\t                willDeleteEls: willDeleteEls,\\n\\t                renderFinally: renderFinally\\n\\t            };\\n\\n\\t            function dualTravel(thisViewChildren, oldViewChildren, parentGroup, sameTree, depth) {\\n\\t                // When 'render' is triggered by action,\\n\\t                // 'this' and 'old' may be the same tree,\\n\\t                // we use rawIndex in that case.\\n\\t                if (sameTree) {\\n\\t                    oldViewChildren = thisViewChildren;\\n\\t                    each(thisViewChildren, function (child, index) {\\n\\t                        !child.isRemoved() && processNode(index, index);\\n\\t                    });\\n\\t                }\\n\\t                // Diff hierarchically (diff only in each subtree, but not whole).\\n\\t                // because, consistency of view is important.\\n\\t                else {\\n\\t                    (new DataDiffer(oldViewChildren, thisViewChildren, getKey, getKey))\\n\\t                        .add(processNode)\\n\\t                        .update(processNode)\\n\\t                        .remove(zrUtil.curry(processNode, null))\\n\\t                        .execute();\\n\\t                }\\n\\n\\t                function getKey(node) {\\n\\t                    // Identify by name or raw index.\\n\\t                    return node.getId();\\n\\t                }\\n\\n\\t                function processNode(newIndex, oldIndex) {\\n\\t                    var thisNode = newIndex != null ? thisViewChildren[newIndex] : null;\\n\\t                    var oldNode = oldIndex != null ? oldViewChildren[oldIndex] : null;\\n\\n\\t                    var group = doRenderNode(thisNode, oldNode, parentGroup, depth);\\n\\n\\t                    group && dualTravel(\\n\\t                        thisNode && thisNode.viewChildren || [],\\n\\t                        oldNode && oldNode.viewChildren || [],\\n\\t                        group,\\n\\t                        sameTree,\\n\\t                        depth + 1\\n\\t                    );\\n\\t                }\\n\\t            }\\n\\n\\t            function clearStorage(storage) {\\n\\t                var willDeleteEls = createStorage();\\n\\t                storage && each(storage, function (store, storageName) {\\n\\t                    var delEls = willDeleteEls[storageName];\\n\\t                    each(store, function (el) {\\n\\t                        el && (delEls.push(el), el.__tmWillDelete = 1);\\n\\t                    });\\n\\t                });\\n\\t                return willDeleteEls;\\n\\t            }\\n\\n\\t            function renderFinally() {\\n\\t                each(willDeleteEls, function (els) {\\n\\t                    each(els, function (el) {\\n\\t                        el.parent && el.parent.remove(el);\\n\\t                    });\\n\\t                });\\n\\t                each(willInvisibleEls, function (el) {\\n\\t                    el.invisible = true;\\n\\t                    // Setting invisible is for optimizing, so no need to set dirty,\\n\\t                    // just mark as invisible.\\n\\t                    el.dirty();\\n\\t                });\\n\\t            }\\n\\t        },\\n\\n\\t        /**\\n\\t         * @private\\n\\t         */\\n\\t        _doAnimation: function (containerGroup, renderResult, seriesModel, reRoot) {\\n\\t            if (!seriesModel.get('animation')) {\\n\\t                return;\\n\\t            }\\n\\n\\t            var duration = seriesModel.get('animationDurationUpdate');\\n\\t            var easing = seriesModel.get('animationEasing');\\n\\t            var animationWrap = animationUtil.createWrap();\\n\\n\\t            // Make delete animations.\\n\\t            each(renderResult.willDeleteEls, function (store, storageName) {\\n\\t                each(store, function (el, rawIndex) {\\n\\t                    if (el.invisible) {\\n\\t                        return;\\n\\t                    }\\n\\n\\t                    var parent = el.parent; // Always has parent, and parent is nodeGroup.\\n\\t                    var target;\\n\\n\\t                    if (reRoot && reRoot.direction === 'drillDown') {\\n\\t                        target = parent === reRoot.rootNodeGroup\\n\\t                            // This is the content element of view root.\\n\\t                            // Only `content` will enter this branch, because\\n\\t                            // `background` and `nodeGroup` will not be deleted.\\n\\t                            ? {\\n\\t                                shape: {\\n\\t                                    x: 0,\\n\\t                                    y: 0,\\n\\t                                    width: parent.__tmNodeWidth,\\n\\t                                    height: parent.__tmNodeHeight\\n\\t                                },\\n\\t                                style: {\\n\\t                                    opacity: 0\\n\\t                                }\\n\\t                            }\\n\\t                            // Others.\\n\\t                            : {style: {opacity: 0}};\\n\\t                    }\\n\\t                    else {\\n\\t                        var targetX = 0;\\n\\t                        var targetY = 0;\\n\\n\\t                        if (!parent.__tmWillDelete) {\\n\\t                            // Let node animate to right-bottom corner, cooperating with fadeout,\\n\\t                            // which is appropriate for user understanding.\\n\\t                            // Divided by 2 for reRoot rolling up effect.\\n\\t                            targetX = parent.__tmNodeWidth / 2;\\n\\t                            targetY = parent.__tmNodeHeight / 2;\\n\\t                        }\\n\\n\\t                        target = storageName === 'nodeGroup'\\n\\t                            ? {position: [targetX, targetY], style: {opacity: 0}}\\n\\t                            : {\\n\\t                                shape: {x: targetX, y: targetY, width: 0, height: 0},\\n\\t                                style: {opacity: 0}\\n\\t                            };\\n\\t                    }\\n\\n\\t                    target && animationWrap.add(el, target, duration, easing);\\n\\t                });\\n\\t            });\\n\\n\\t            // Make other animations\\n\\t            each(this._storage, function (store, storageName) {\\n\\t                each(store, function (el, rawIndex) {\\n\\t                    var last = renderResult.lastsForAnimation[storageName][rawIndex];\\n\\t                    var target = {};\\n\\n\\t                    if (!last) {\\n\\t                        return;\\n\\t                    }\\n\\n\\t                    if (storageName === 'nodeGroup') {\\n\\t                        if (last.old) {\\n\\t                            target.position = el.position.slice();\\n\\t                            el.attr('position', last.old);\\n\\t                        }\\n\\t                    }\\n\\t                    else {\\n\\t                        if (last.old) {\\n\\t                            target.shape = zrUtil.extend({}, el.shape);\\n\\t                            el.setShape(last.old);\\n\\t                        }\\n\\n\\t                        if (last.fadein) {\\n\\t                            el.setStyle('opacity', 0);\\n\\t                            target.style = {opacity: 1};\\n\\t                        }\\n\\t                        // When animation is stopped for succedent animation starting,\\n\\t                        // el.style.opacity might not be 1\\n\\t                        else if (el.style.opacity !== 1) {\\n\\t                            target.style = {opacity: 1};\\n\\t                        }\\n\\t                    }\\n\\n\\t                    animationWrap.add(el, target, duration, easing);\\n\\t                });\\n\\t            }, this);\\n\\n\\t            this._state = 'animating';\\n\\n\\t            animationWrap\\n\\t                .done(bind(function () {\\n\\t                    this._state = 'ready';\\n\\t                    renderResult.renderFinally();\\n\\t                }, this))\\n\\t                .start();\\n\\t        },\\n\\n\\t        /**\\n\\t         * @private\\n\\t         */\\n\\t        _resetController: function (api) {\\n\\t            var controller = this._controller;\\n\\n\\t            // Init controller.\\n\\t            if (!controller) {\\n\\t                controller = this._controller = new RoamController(api.getZr());\\n\\t                controller.enable(this.seriesModel.get('roam'));\\n\\t                controller.on('pan', bind(this._onPan, this));\\n\\t                controller.on('zoom', bind(this._onZoom, this));\\n\\t            }\\n\\n\\t            var rect = new BoundingRect(0, 0, api.getWidth(), api.getHeight());\\n\\t            controller.setPointerChecker(function (e, x, y) {\\n\\t                return rect.contain(x, y);\\n\\t            });\\n\\t        },\\n\\n\\t        /**\\n\\t         * @private\\n\\t         */\\n\\t        _clearController: function () {\\n\\t            var controller = this._controller;\\n\\t            if (controller) {\\n\\t                controller.dispose();\\n\\t                controller = null;\\n\\t            }\\n\\t        },\\n\\n\\t        /**\\n\\t         * @private\\n\\t         */\\n\\t        _onPan: function (dx, dy) {\\n\\t            this._mayClick = false;\\n\\n\\t            if (this._state !== 'animating'\\n\\t                && (Math.abs(dx) > DRAG_THRESHOLD || Math.abs(dy) > DRAG_THRESHOLD)\\n\\t            ) {\\n\\t                // These param must not be cached.\\n\\t                var root = this.seriesModel.getData().tree.root;\\n\\n\\t                if (!root) {\\n\\t                    return;\\n\\t                }\\n\\n\\t                var rootLayout = root.getLayout();\\n\\n\\t                if (!rootLayout) {\\n\\t                    return;\\n\\t                }\\n\\n\\t                this.api.dispatchAction({\\n\\t                    type: 'treemapMove',\\n\\t                    from: this.uid,\\n\\t                    seriesId: this.seriesModel.id,\\n\\t                    rootRect: {\\n\\t                        x: rootLayout.x + dx, y: rootLayout.y + dy,\\n\\t                        width: rootLayout.width, height: rootLayout.height\\n\\t                    }\\n\\t                });\\n\\t            }\\n\\t        },\\n\\n\\t        /**\\n\\t         * @private\\n\\t         */\\n\\t        _onZoom: function (scale, mouseX, mouseY) {\\n\\t            this._mayClick = false;\\n\\n\\t            if (this._state !== 'animating') {\\n\\t                // These param must not be cached.\\n\\t                var root = this.seriesModel.getData().tree.root;\\n\\n\\t                if (!root) {\\n\\t                    return;\\n\\t                }\\n\\n\\t                var rootLayout = root.getLayout();\\n\\n\\t                if (!rootLayout) {\\n\\t                    return;\\n\\t                }\\n\\n\\t                var rect = new BoundingRect(\\n\\t                    rootLayout.x, rootLayout.y, rootLayout.width, rootLayout.height\\n\\t                );\\n\\t                var layoutInfo = this.seriesModel.layoutInfo;\\n\\n\\t                // Transform mouse coord from global to containerGroup.\\n\\t                mouseX -= layoutInfo.x;\\n\\t                mouseY -= layoutInfo.y;\\n\\n\\t                // Scale root bounding rect.\\n\\t                var m = matrix.create();\\n\\t                matrix.translate(m, m, [-mouseX, -mouseY]);\\n\\t                matrix.scale(m, m, [scale, scale]);\\n\\t                matrix.translate(m, m, [mouseX, mouseY]);\\n\\n\\t                rect.applyTransform(m);\\n\\n\\t                this.api.dispatchAction({\\n\\t                    type: 'treemapRender',\\n\\t                    from: this.uid,\\n\\t                    seriesId: this.seriesModel.id,\\n\\t                    rootRect: {\\n\\t                        x: rect.x, y: rect.y,\\n\\t                        width: rect.width, height: rect.height\\n\\t                    }\\n\\t                });\\n\\t            }\\n\\t        },\\n\\n\\t        /**\\n\\t         * @private\\n\\t         */\\n\\t        _initEvents: function (containerGroup) {\\n\\t            // FIXME\\n\\t            // 不用click以及silent的原因是，animate时视图设置silent true来避免click生效，\\n\\t            // 但是animate中，按下鼠标，animate结束后（silent设回为false）松开鼠标，\\n\\t            // 还是会触发click，期望是不触发。\\n\\n\\t            // Mousedown occurs when drag start, and mouseup occurs when drag end,\\n\\t            // click event should not be triggered in that case.\\n\\n\\t            containerGroup.on('mousedown', function (e) {\\n\\t                this._state === 'ready' && (this._mayClick = true);\\n\\t            }, this);\\n\\t            containerGroup.on('mouseup', function (e) {\\n\\t                if (this._mayClick) {\\n\\t                    this._mayClick = false;\\n\\t                    this._state === 'ready' && onClick.call(this, e);\\n\\t                }\\n\\t            }, this);\\n\\n\\t            function onClick(e) {\\n\\t                var nodeClick = this.seriesModel.get('nodeClick', true);\\n\\n\\t                if (!nodeClick) {\\n\\t                    return;\\n\\t                }\\n\\n\\t                var targetInfo = this.findTarget(e.offsetX, e.offsetY);\\n\\n\\t                if (!targetInfo) {\\n\\t                    return;\\n\\t                }\\n\\n\\t                var node = targetInfo.node;\\n\\t                if (node.getLayout().isLeafRoot) {\\n\\t                    this._rootToNode(targetInfo);\\n\\t                }\\n\\t                else {\\n\\t                    if (nodeClick === 'zoomToNode') {\\n\\t                        this._zoomToNode(targetInfo);\\n\\t                    }\\n\\t                    else if (nodeClick === 'link') {\\n\\t                        var itemModel = node.hostTree.data.getItemModel(node.dataIndex);\\n\\t                        var link = itemModel.get('link', true);\\n\\t                        var linkTarget = itemModel.get('target', true) || 'blank';\\n\\t                        link && window.open(link, linkTarget);\\n\\t                    }\\n\\t                }\\n\\t            }\\n\\t        },\\n\\n\\t        /**\\n\\t         * @private\\n\\t         */\\n\\t        _renderBreadcrumb: function (seriesModel, api, targetInfo) {\\n\\t            if (!targetInfo) {\\n\\t                targetInfo = seriesModel.get('leafDepth', true) != null\\n\\t                    ? {node: seriesModel.getViewRoot()}\\n\\t                    // FIXME\\n\\t                    // better way?\\n\\t                    // Find breadcrumb tail on center of containerGroup.\\n\\t                    : this.findTarget(api.getWidth() / 2, api.getHeight() / 2);\\n\\n\\t                if (!targetInfo) {\\n\\t                    targetInfo = {node: seriesModel.getData().tree.root};\\n\\t                }\\n\\t            }\\n\\n\\t            (this._breadcrumb || (this._breadcrumb = new Breadcrumb(this.group)))\\n\\t                .render(seriesModel, api, targetInfo.node, bind(onSelect, this));\\n\\n\\t            function onSelect(node) {\\n\\t                if (this._state !== 'animating') {\\n\\t                    helper.aboveViewRoot(seriesModel.getViewRoot(), node)\\n\\t                        ? this._rootToNode({node: node})\\n\\t                        : this._zoomToNode({node: node});\\n\\t                }\\n\\t            }\\n\\t        },\\n\\n\\t        /**\\n\\t         * @override\\n\\t         */\\n\\t        remove: function () {\\n\\t            this._clearController();\\n\\t            this._containerGroup && this._containerGroup.removeAll();\\n\\t            this._storage = createStorage();\\n\\t            this._state = 'ready';\\n\\t            this._breadcrumb && this._breadcrumb.remove();\\n\\t        },\\n\\n\\t        dispose: function () {\\n\\t            this._clearController();\\n\\t        },\\n\\n\\t        /**\\n\\t         * @private\\n\\t         */\\n\\t        _zoomToNode: function (targetInfo) {\\n\\t            this.api.dispatchAction({\\n\\t                type: 'treemapZoomToNode',\\n\\t                from: this.uid,\\n\\t                seriesId: this.seriesModel.id,\\n\\t                targetNode: targetInfo.node\\n\\t            });\\n\\t        },\\n\\n\\t        /**\\n\\t         * @private\\n\\t         */\\n\\t        _rootToNode: function (targetInfo) {\\n\\t            this.api.dispatchAction({\\n\\t                type: 'treemapRootToNode',\\n\\t                from: this.uid,\\n\\t                seriesId: this.seriesModel.id,\\n\\t                targetNode: targetInfo.node\\n\\t            });\\n\\t        },\\n\\n\\t        /**\\n\\t         * @public\\n\\t         * @param {number} x Global coord x.\\n\\t         * @param {number} y Global coord y.\\n\\t         * @return {Object} info If not found, return undefined;\\n\\t         * @return {number} info.node Target node.\\n\\t         * @return {number} info.offsetX x refer to target node.\\n\\t         * @return {number} info.offsetY y refer to target node.\\n\\t         */\\n\\t        findTarget: function (x, y) {\\n\\t            var targetInfo;\\n\\t            var viewRoot = this.seriesModel.getViewRoot();\\n\\n\\t            viewRoot.eachNode({attr: 'viewChildren', order: 'preorder'}, function (node) {\\n\\t                var bgEl = this._storage.background[node.getRawIndex()];\\n\\t                // If invisible, there might be no element.\\n\\t                if (bgEl) {\\n\\t                    var point = bgEl.transformCoordToLocal(x, y);\\n\\t                    var shape = bgEl.shape;\\n\\n\\t                    // For performance consideration, dont use 'getBoundingRect'.\\n\\t                    if (shape.x <= point[0]\\n\\t                        && point[0] <= shape.x + shape.width\\n\\t                        && shape.y <= point[1]\\n\\t                        && point[1] <= shape.y + shape.height\\n\\t                    ) {\\n\\t                        targetInfo = {node: node, offsetX: point[0], offsetY: point[1]};\\n\\t                    }\\n\\t                    else {\\n\\t                        return false; // Suppress visit subtree.\\n\\t                    }\\n\\t                }\\n\\t            }, this);\\n\\n\\t            return targetInfo;\\n\\t        }\\n\\n\\t    });\\n\\n\\t    /**\\n\\t     * @inner\\n\\t     */\\n\\t    function createStorage() {\\n\\t        return {nodeGroup: [], background: [], content: []};\\n\\t    }\\n\\n\\t    /**\\n\\t     * @inner\\n\\t     * @return Return undefined means do not travel further.\\n\\t     */\\n\\t    function renderNode(\\n\\t        seriesModel, thisStorage, oldStorage, reRoot,\\n\\t        lastsForAnimation, willInvisibleEls,\\n\\t        thisNode, oldNode, parentGroup, depth\\n\\t    ) {\\n\\t        // Whether under viewRoot.\\n\\t        if (!thisNode) {\\n\\t            // Deleting nodes will be performed finally. This method just find\\n\\t            // element from old storage, or create new element, set them to new\\n\\t            // storage, and set styles.\\n\\t            return;\\n\\t        }\\n\\n\\t        // -------------------------------------------------------------------\\n\\t        // Start of closure variables available in \\\"Procedures in renderNode\\\".\\n\\n\\t        var thisLayout = thisNode.getLayout();\\n\\n\\t        if (!thisLayout || !thisLayout.isInView) {\\n\\t            return;\\n\\t        }\\n\\n\\t        var thisWidth = thisLayout.width;\\n\\t        var thisHeight = thisLayout.height;\\n\\t        var borderWidth = thisLayout.borderWidth;\\n\\t        var thisInvisible = thisLayout.invisible;\\n\\n\\t        var thisRawIndex = thisNode.getRawIndex();\\n\\t        var oldRawIndex = oldNode && oldNode.getRawIndex();\\n\\n\\t        var thisViewChildren = thisNode.viewChildren;\\n\\t        var upperHeight = thisLayout.upperHeight;\\n\\t        var isParent = thisViewChildren && thisViewChildren.length;\\n\\t        var itemStyleEmphasisModel = thisNode.getModel('itemStyle.emphasis');\\n\\n\\t        // End of closure ariables available in \\\"Procedures in renderNode\\\".\\n\\t        // -----------------------------------------------------------------\\n\\n\\t        // Node group\\n\\t        var group = giveGraphic('nodeGroup', Group);\\n\\n\\t        if (!group) {\\n\\t            return;\\n\\t        }\\n\\n\\t        parentGroup.add(group);\\n\\t        // x,y are not set when el is above view root.\\n\\t        group.attr('position', [thisLayout.x || 0, thisLayout.y || 0]);\\n\\t        group.__tmNodeWidth = thisWidth;\\n\\t        group.__tmNodeHeight = thisHeight;\\n\\n\\t        if (thisLayout.isAboveViewRoot) {\\n\\t            return group;\\n\\t        }\\n\\n\\t        // Background\\n\\t        var bg = giveGraphic('background', Rect, depth, Z_BG);\\n\\t        bg && renderBackground(group, bg, isParent && thisLayout.upperHeight);\\n\\n\\t        // No children, render content.\\n\\t        if (!isParent) {\\n\\t            var content = giveGraphic('content', Rect, depth, Z_CONTENT);\\n\\t            content && renderContent(group, content);\\n\\t        }\\n\\n\\t        return group;\\n\\n\\t        // ----------------------------\\n\\t        // | Procedures in renderNode |\\n\\t        // ----------------------------\\n\\n\\t        function renderBackground(group, bg, useUpperLabel) {\\n\\t            // For tooltip.\\n\\t            bg.dataIndex = thisNode.dataIndex;\\n\\t            bg.seriesIndex = seriesModel.seriesIndex;\\n\\n\\t            bg.setShape({x: 0, y: 0, width: thisWidth, height: thisHeight});\\n\\t            var visualBorderColor = thisNode.getVisual('borderColor', true);\\n\\t            var emphasisBorderColor = itemStyleEmphasisModel.get('borderColor');\\n\\n\\t            updateStyle(bg, function () {\\n\\t                var normalStyle = {fill: visualBorderColor};\\n\\t                var emphasisStyle = {fill: emphasisBorderColor};\\n\\n\\t                if (useUpperLabel) {\\n\\t                    var upperLabelWidth = thisWidth - 2 * borderWidth;\\n\\n\\t                    prepareText(\\n\\t                        normalStyle, emphasisStyle, visualBorderColor, upperLabelWidth, upperHeight,\\n\\t                        {x: borderWidth, y: 0, width: upperLabelWidth, height: upperHeight}\\n\\t                    );\\n\\t                }\\n\\t                // For old bg.\\n\\t                else {\\n\\t                    normalStyle.text = emphasisStyle.text = '';\\n\\t                }\\n\\n\\t                bg.setStyle(normalStyle);\\n\\t                graphic.setHoverStyle(bg, emphasisStyle);\\n\\t            });\\n\\n\\t            group.add(bg);\\n\\t        }\\n\\n\\t        function renderContent(group, content) {\\n\\t            // For tooltip.\\n\\t            content.dataIndex = thisNode.dataIndex;\\n\\t            content.seriesIndex = seriesModel.seriesIndex;\\n\\n\\t            var contentWidth = Math.max(thisWidth - 2 * borderWidth, 0);\\n\\t            var contentHeight = Math.max(thisHeight - 2 * borderWidth, 0);\\n\\n\\t            content.culling = true;\\n\\t            content.setShape({\\n\\t                x: borderWidth,\\n\\t                y: borderWidth,\\n\\t                width: contentWidth,\\n\\t                height: contentHeight\\n\\t            });\\n\\n\\t            var visualColor = thisNode.getVisual('color', true);\\n\\t            updateStyle(content, function () {\\n\\t                var normalStyle = {fill: visualColor};\\n\\t                var emphasisStyle = itemStyleEmphasisModel.getItemStyle();\\n\\n\\t                prepareText(normalStyle, emphasisStyle, visualColor, contentWidth, contentHeight);\\n\\n\\t                content.setStyle(normalStyle);\\n\\t                graphic.setHoverStyle(content, emphasisStyle);\\n\\t            });\\n\\n\\t            group.add(content);\\n\\t        }\\n\\n\\t        function updateStyle(element, cb) {\\n\\t            if (!thisInvisible) {\\n\\t                // If invisible, do not set visual, otherwise the element will\\n\\t                // change immediately before animation. We think it is OK to\\n\\t                // remain its origin color when moving out of the view window.\\n\\t                cb();\\n\\n\\t                if (!element.__tmWillVisible) {\\n\\t                    element.invisible = false;\\n\\t                }\\n\\t            }\\n\\t            else {\\n\\t                // Delay invisible setting utill animation finished,\\n\\t                // avoid element vanish suddenly before animation.\\n\\t                !element.invisible && willInvisibleEls.push(element);\\n\\t            }\\n\\t        }\\n\\n\\t        function prepareText(normalStyle, emphasisStyle, visualColor, width, height, upperLabelRect) {\\n\\t            var nodeModel = thisNode.getModel();\\n\\t            var text = zrUtil.retrieve(\\n\\t                seriesModel.getFormattedLabel(\\n\\t                    thisNode.dataIndex, 'normal', null, null, upperLabelRect ? 'upperLabel' : 'label'\\n\\t                ),\\n\\t                nodeModel.get('name')\\n\\t            );\\n\\t            if (!upperLabelRect && thisLayout.isLeafRoot) {\\n\\t                var iconChar = seriesModel.get('drillDownIcon', true);\\n\\t                text = iconChar ? iconChar + ' ' + text : text;\\n\\t            }\\n\\n\\t            setText(\\n\\t                text, normalStyle, nodeModel, upperLabelRect ? PATH_UPPERLABEL_NORMAL : PATH_LABEL_NOAMAL,\\n\\t                visualColor, width, height, upperLabelRect\\n\\t            );\\n\\t            setText(\\n\\t                text, emphasisStyle, nodeModel, upperLabelRect ? PATH_UPPERLABEL_EMPHASIS : PATH_LABEL_EMPHASIS,\\n\\t                visualColor, width, height, upperLabelRect\\n\\t            );\\n\\t        }\\n\\n\\t        function setText(text, style, nodeModel, labelPath, visualColor, width, height, upperLabelRect) {\\n\\t            var labelModel = nodeModel.getModel(labelPath);\\n\\t            var labelTextStyleModel = labelModel.getModel('textStyle');\\n\\n\\t            graphic.setText(style, labelModel, visualColor);\\n\\n\\t            // text.align and text.baseline is not included by graphic.setText,\\n\\t            // because in most cases the two attributes are not exposed to user,\\n\\t            // except in treemap.\\n\\t            style.textAlign = labelTextStyleModel.get('align');\\n\\t            style.textVerticalAlign = labelTextStyleModel.get('baseline');\\n\\t            upperLabelRect && (style.textPositionRect = zrUtil.clone(upperLabelRect));\\n\\n\\t            var textRect = labelTextStyleModel.getTextRect(text);\\n\\t            if (!labelModel.getShallow('show') || textRect.height > height) {\\n\\t                style.text = '';\\n\\t            }\\n\\t            else if (textRect.width > width) {\\n\\t                style.text = labelTextStyleModel.get('ellipsis')\\n\\t                    ? labelTextStyleModel.truncateText(\\n\\t                        text, width, null, {minChar: 2}\\n\\t                    )\\n\\t                    : '';\\n\\t            }\\n\\t            else {\\n\\t                style.text = text;\\n\\t            }\\n\\t        }\\n\\n\\t        function giveGraphic(storageName, Ctor, depth, z) {\\n\\t            var element = oldRawIndex != null && oldStorage[storageName][oldRawIndex];\\n\\t            var lasts = lastsForAnimation[storageName];\\n\\n\\t            if (element) {\\n\\t                // Remove from oldStorage\\n\\t                oldStorage[storageName][oldRawIndex] = null;\\n\\t                prepareAnimationWhenHasOld(lasts, element, storageName);\\n\\t            }\\n\\t            // If invisible and no old element, do not create new element (for optimizing).\\n\\t            else if (!thisInvisible) {\\n\\t                element = new Ctor({z: calculateZ(depth, z)});\\n\\t                element.__tmDepth = depth;\\n\\t                element.__tmStorageName = storageName;\\n\\t                prepareAnimationWhenNoOld(lasts, element, storageName);\\n\\t            }\\n\\n\\t            // Set to thisStorage\\n\\t            return (thisStorage[storageName][thisRawIndex] = element);\\n\\t        }\\n\\n\\t        function prepareAnimationWhenHasOld(lasts, element, storageName) {\\n\\t            var lastCfg = lasts[thisRawIndex] = {};\\n\\t            lastCfg.old = storageName === 'nodeGroup'\\n\\t                ? element.position.slice()\\n\\t                : zrUtil.extend({}, element.shape);\\n\\t        }\\n\\n\\t        // If a element is new, we need to find the animation start point carefully,\\n\\t        // otherwise it will looks strange when 'zoomToNode'.\\n\\t        function prepareAnimationWhenNoOld(lasts, element, storageName) {\\n\\t            var lastCfg = lasts[thisRawIndex] = {};\\n\\t            var parentNode = thisNode.parentNode;\\n\\n\\t            if (parentNode && (!reRoot || reRoot.direction === 'drillDown')) {\\n\\t                var parentOldX = 0;\\n\\t                var parentOldY = 0;\\n\\n\\t                // New nodes appear from right-bottom corner in 'zoomToNode' animation.\\n\\t                // For convenience, get old bounding rect from background.\\n\\t                var parentOldBg = lastsForAnimation.background[parentNode.getRawIndex()];\\n\\t                if (!reRoot && parentOldBg && parentOldBg.old) {\\n\\t                    parentOldX = parentOldBg.old.width;\\n\\t                    parentOldY = parentOldBg.old.height;\\n\\t                }\\n\\n\\t                // When no parent old shape found, its parent is new too,\\n\\t                // so we can just use {x:0, y:0}.\\n\\t                lastCfg.old = storageName === 'nodeGroup'\\n\\t                    ? [0, parentOldY]\\n\\t                    : {x: parentOldX, y: parentOldY, width: 0, height: 0};\\n\\t            }\\n\\n\\t            // Fade in, user can be aware that these nodes are new.\\n\\t            lastCfg.fadein = storageName !== 'nodeGroup';\\n\\t        }\\n\\t    }\\n\\n\\t    // We can not set all backgroud with the same z, Because the behaviour of\\n\\t    // drill down and roll up differ background creation sequence from tree\\n\\t    // hierarchy sequence, which cause that lowser background element overlap\\n\\t    // upper ones. So we calculate z based on depth.\\n\\t    // Moreover, we try to shrink down z interval to [0, 1] to avoid that\\n\\t    // treemap with large z overlaps other components.\\n\\t    function calculateZ(depth, zInLevel) {\\n\\t        var zb = depth * Z_BASE + zInLevel;\\n\\t        return (zb - 1) / zb;\\n\\t    }\\n\\n\\n\\n/***/ },\\n/* 199 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t \\n\\n\\t    var graphic = __webpack_require__(18);\\n\\t    var layout = __webpack_require__(71);\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var helper = __webpack_require__(197);\\n\\n\\t    var TEXT_PADDING = 8;\\n\\t    var ITEM_GAP = 8;\\n\\t    var ARRAY_LENGTH = 5;\\n\\n\\t    function Breadcrumb(containerGroup) {\\n\\t        /**\\n\\t         * @private\\n\\t         * @type {module:zrender/container/Group}\\n\\t         */\\n\\t        this.group = new graphic.Group();\\n\\n\\t        containerGroup.add(this.group);\\n\\t    }\\n\\n\\t    Breadcrumb.prototype = {\\n\\n\\t        constructor: Breadcrumb,\\n\\n\\t        render: function (seriesModel, api, targetNode, onSelect) {\\n\\t            var model = seriesModel.getModel('breadcrumb');\\n\\t            var thisGroup = this.group;\\n\\n\\t            thisGroup.removeAll();\\n\\n\\t            if (!model.get('show') || !targetNode) {\\n\\t                return;\\n\\t            }\\n\\n\\t            var normalStyleModel = model.getModel('itemStyle.normal');\\n\\t            // var emphasisStyleModel = model.getModel('itemStyle.emphasis');\\n\\t            var textStyleModel = normalStyleModel.getModel('textStyle');\\n\\n\\t            var layoutParam = {\\n\\t                pos: {\\n\\t                    left: model.get('left'),\\n\\t                    right: model.get('right'),\\n\\t                    top: model.get('top'),\\n\\t                    bottom: model.get('bottom')\\n\\t                },\\n\\t                box: {\\n\\t                    width: api.getWidth(),\\n\\t                    height: api.getHeight()\\n\\t                },\\n\\t                emptyItemWidth: model.get('emptyItemWidth'),\\n\\t                totalWidth: 0,\\n\\t                renderList: []\\n\\t            };\\n\\n\\t            this._prepare(targetNode, layoutParam, textStyleModel);\\n\\t            this._renderContent(seriesModel, layoutParam, normalStyleModel, textStyleModel, onSelect);\\n\\n\\t            layout.positionElement(thisGroup, layoutParam.pos, layoutParam.box);\\n\\t        },\\n\\n\\t        /**\\n\\t         * Prepare render list and total width\\n\\t         * @private\\n\\t         */\\n\\t        _prepare: function (targetNode, layoutParam, textStyleModel) {\\n\\t            for (var node = targetNode; node; node = node.parentNode) {\\n\\t                var text = node.getModel().get('name');\\n\\t                var textRect = textStyleModel.getTextRect(text);\\n\\t                var itemWidth = Math.max(\\n\\t                    textRect.width + TEXT_PADDING * 2,\\n\\t                    layoutParam.emptyItemWidth\\n\\t                );\\n\\t                layoutParam.totalWidth += itemWidth + ITEM_GAP;\\n\\t                layoutParam.renderList.push({node: node, text: text, width: itemWidth});\\n\\t            }\\n\\t        },\\n\\n\\t        /**\\n\\t         * @private\\n\\t         */\\n\\t        _renderContent: function (\\n\\t            seriesModel, layoutParam, normalStyleModel, textStyleModel, onSelect\\n\\t        ) {\\n\\t            // Start rendering.\\n\\t            var lastX = 0;\\n\\t            var emptyItemWidth = layoutParam.emptyItemWidth;\\n\\t            var height = seriesModel.get('breadcrumb.height');\\n\\t            var availableSize = layout.getAvailableSize(layoutParam.pos, layoutParam.box);\\n\\t            var totalWidth = layoutParam.totalWidth;\\n\\t            var renderList = layoutParam.renderList;\\n\\n\\t            for (var i = renderList.length - 1; i >= 0; i--) {\\n\\t                var item = renderList[i];\\n\\t                var itemNode = item.node;\\n\\t                var itemWidth = item.width;\\n\\t                var text = item.text;\\n\\n\\t                // Hdie text and shorten width if necessary.\\n\\t                if (totalWidth > availableSize.width) {\\n\\t                    totalWidth -= itemWidth - emptyItemWidth;\\n\\t                    itemWidth = emptyItemWidth;\\n\\t                    text = '';\\n\\t                }\\n\\n\\t                var el = new graphic.Polygon({\\n\\t                    shape: {\\n\\t                        points: makeItemPoints(\\n\\t                            lastX, 0, itemWidth, height,\\n\\t                            i === renderList.length - 1, i === 0\\n\\t                        )\\n\\t                    },\\n\\t                    style: zrUtil.defaults(\\n\\t                        normalStyleModel.getItemStyle(),\\n\\t                        {\\n\\t                            lineJoin: 'bevel',\\n\\t                            text: text,\\n\\t                            textFill: textStyleModel.getTextColor(),\\n\\t                            textFont: textStyleModel.getFont()\\n\\t                        }\\n\\t                    ),\\n\\t                    z: 10,\\n\\t                    onclick: zrUtil.curry(onSelect, itemNode)\\n\\t                });\\n\\t                this.group.add(el);\\n\\n\\t                packEventData(el, seriesModel, itemNode);\\n\\n\\t                lastX += itemWidth + ITEM_GAP;\\n\\t            }\\n\\t        },\\n\\n\\t        /**\\n\\t         * @override\\n\\t         */\\n\\t        remove: function () {\\n\\t            this.group.removeAll();\\n\\t        }\\n\\t    };\\n\\n\\t    function makeItemPoints(x, y, itemWidth, itemHeight, head, tail) {\\n\\t        var points = [\\n\\t            [head ? x : x - ARRAY_LENGTH, y],\\n\\t            [x + itemWidth, y],\\n\\t            [x + itemWidth, y + itemHeight],\\n\\t            [head ? x : x - ARRAY_LENGTH, y + itemHeight]\\n\\t        ];\\n\\t        !tail && points.splice(2, 0, [x + itemWidth + ARRAY_LENGTH, y + itemHeight / 2]);\\n\\t        !head && points.push([x, y + itemHeight / 2]);\\n\\t        return points;\\n\\t    }\\n\\n\\t    // Package custom mouse event.\\n\\t    function packEventData(el, seriesModel, itemNode) {\\n\\t        el.eventData = {\\n\\t            componentType: 'series',\\n\\t            componentSubType: 'treemap',\\n\\t            seriesIndex: seriesModel.componentIndex,\\n\\t            seriesName: seriesModel.name,\\n\\t            seriesType: 'treemap',\\n\\t            selfType: 'breadcrumb', // Distinguish with click event on treemap node.\\n\\t            nodeData: {\\n\\t                dataIndex: itemNode && itemNode.dataIndex,\\n\\t                name: itemNode && itemNode.name\\n\\t            },\\n\\t            treePathInfo: itemNode && helper.wrapTreePathInfo(itemNode, seriesModel)\\n\\t        };\\n\\t    }\\n\\n\\t    module.exports = Breadcrumb;\\n\\n\\n/***/ },\\n/* 200 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t \\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\n\\t    /**\\n\\t     * @param {number} [time=500] Time in ms\\n\\t     * @param {string} [easing='linear']\\n\\t     * @param {number} [delay=0]\\n\\t     * @param {Function} [callback]\\n\\t     *\\n\\t     * @example\\n\\t     *  // Animate position\\n\\t     *  animation\\n\\t     *      .createWrap()\\n\\t     *      .add(el1, {position: [10, 10]})\\n\\t     *      .add(el2, {shape: {width: 500}, style: {fill: 'red'}}, 400)\\n\\t     *      .done(function () { // done })\\n\\t     *      .start('cubicOut');\\n\\t     */\\n\\t    function createWrap() {\\n\\n\\t        var storage = [];\\n\\t        var elExistsMap = {};\\n\\t        var doneCallback;\\n\\n\\t        return {\\n\\n\\t            /**\\n\\t             * Caution: a el can only be added once, otherwise 'done'\\n\\t             * might not be called. This method checks this (by el.id),\\n\\t             * suppresses adding and returns false when existing el found.\\n\\t             *\\n\\t             * @param {modele:zrender/Element} el\\n\\t             * @param {Object} target\\n\\t             * @param {number} [time=500]\\n\\t             * @param {number} [delay=0]\\n\\t             * @param {string} [easing='linear']\\n\\t             * @return {boolean} Whether adding succeeded.\\n\\t             *\\n\\t             * @example\\n\\t             *     add(el, target, time, delay, easing);\\n\\t             *     add(el, target, time, easing);\\n\\t             *     add(el, target, time);\\n\\t             *     add(el, target);\\n\\t             */\\n\\t            add: function (el, target, time, delay, easing) {\\n\\t                if (zrUtil.isString(delay)) {\\n\\t                    easing = delay;\\n\\t                    delay = 0;\\n\\t                }\\n\\n\\t                if (elExistsMap[el.id]) {\\n\\t                    return false;\\n\\t                }\\n\\t                elExistsMap[el.id] = 1;\\n\\n\\t                storage.push(\\n\\t                    {el: el, target: target, time: time, delay: delay, easing: easing}\\n\\t                );\\n\\n\\t                return true;\\n\\t            },\\n\\n\\t            /**\\n\\t             * Only execute when animation finished. Will not execute when any\\n\\t             * of 'stop' or 'stopAnimation' called.\\n\\t             *\\n\\t             * @param {Function} callback\\n\\t             */\\n\\t            done: function (callback) {\\n\\t                doneCallback = callback;\\n\\t                return this;\\n\\t            },\\n\\n\\t            /**\\n\\t             * Will stop exist animation firstly.\\n\\t             */\\n\\t            start: function () {\\n\\t                var count = storage.length;\\n\\n\\t                for (var i = 0, len = storage.length; i < len; i++) {\\n\\t                    var item = storage[i];\\n\\t                    item.el.animateTo(item.target, item.time, item.delay, item.easing, done);\\n\\t                }\\n\\n\\t                return this;\\n\\n\\t                function done() {\\n\\t                    count--;\\n\\t                    if (!count) {\\n\\t                        storage.length = 0;\\n\\t                        elExistsMap = {};\\n\\t                        doneCallback && doneCallback();\\n\\t                    }\\n\\t                }\\n\\t            }\\n\\t        };\\n\\t    }\\n\\n\\t    module.exports = {createWrap: createWrap};\\n\\n\\n/***/ },\\n/* 201 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * @file Treemap action\\n\\t */\\n\\n\\n\\t    var echarts = __webpack_require__(1);\\n\\t    var helper = __webpack_require__(197);\\n\\n\\t    var noop = function () {};\\n\\n\\t    var actionTypes = [\\n\\t        'treemapZoomToNode',\\n\\t        'treemapRender',\\n\\t        'treemapMove'\\n\\t    ];\\n\\n\\t    for (var i = 0; i < actionTypes.length; i++) {\\n\\t        echarts.registerAction({type: actionTypes[i], update: 'updateView'}, noop);\\n\\t    }\\n\\n\\t    echarts.registerAction(\\n\\t        {type: 'treemapRootToNode', update: 'updateView'},\\n\\t        function (payload, ecModel) {\\n\\n\\t            ecModel.eachComponent(\\n\\t                {mainType: 'series', subType: 'treemap', query: payload},\\n\\t                handleRootToNode\\n\\t            );\\n\\n\\t            function handleRootToNode(model, index) {\\n\\t                var targetInfo = helper.retrieveTargetInfo(payload, model);\\n\\n\\t                if (targetInfo) {\\n\\t                    var originViewRoot = model.getViewRoot();\\n\\t                    if (originViewRoot) {\\n\\t                        payload.direction = helper.aboveViewRoot(originViewRoot, targetInfo.node)\\n\\t                            ? 'rollUp' : 'drillDown';\\n\\t                    }\\n\\t                    model.resetViewRoot(targetInfo.node);\\n\\t                }\\n\\t            }\\n\\t        }\\n\\t    );\\n\\n\\n\\n/***/ },\\n/* 202 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var VisualMapping = __webpack_require__(203);\\n\\t    var zrColor = __webpack_require__(31);\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var isArray = zrUtil.isArray;\\n\\n\\t    var ITEM_STYLE_NORMAL = 'itemStyle.normal';\\n\\n\\t    module.exports = function (ecModel, api, payload) {\\n\\n\\t        var condition = {mainType: 'series', subType: 'treemap', query: payload};\\n\\t        ecModel.eachComponent(condition, function (seriesModel) {\\n\\n\\t            var tree = seriesModel.getData().tree;\\n\\t            var root = tree.root;\\n\\t            var seriesItemStyleModel = seriesModel.getModel(ITEM_STYLE_NORMAL);\\n\\n\\t            if (root.isRemoved()) {\\n\\t                return;\\n\\t            }\\n\\n\\t            var levelItemStyles = zrUtil.map(tree.levelModels, function (levelModel) {\\n\\t                return levelModel ? levelModel.get(ITEM_STYLE_NORMAL) : null;\\n\\t            });\\n\\n\\t            travelTree(\\n\\t                root, // Visual should calculate from tree root but not view root.\\n\\t                {},\\n\\t                levelItemStyles,\\n\\t                seriesItemStyleModel,\\n\\t                seriesModel.getViewRoot().getAncestors(),\\n\\t                seriesModel\\n\\t            );\\n\\t        });\\n\\t    };\\n\\n\\t    function travelTree(\\n\\t        node, designatedVisual, levelItemStyles, seriesItemStyleModel,\\n\\t        viewRootAncestors, seriesModel\\n\\t    ) {\\n\\t        var nodeModel = node.getModel();\\n\\t        var nodeLayout = node.getLayout();\\n\\n\\t        // Optimize\\n\\t        if (!nodeLayout || nodeLayout.invisible || !nodeLayout.isInView) {\\n\\t            return;\\n\\t        }\\n\\n\\t        var nodeItemStyleModel = node.getModel(ITEM_STYLE_NORMAL);\\n\\t        var levelItemStyle = levelItemStyles[node.depth];\\n\\t        var visuals = buildVisuals(\\n\\t            nodeItemStyleModel, designatedVisual, levelItemStyle, seriesItemStyleModel\\n\\t        );\\n\\n\\t        // calculate border color\\n\\t        var borderColor = nodeItemStyleModel.get('borderColor');\\n\\t        var borderColorSaturation = nodeItemStyleModel.get('borderColorSaturation');\\n\\t        var thisNodeColor;\\n\\t        if (borderColorSaturation != null) {\\n\\t            // For performance, do not always execute 'calculateColor'.\\n\\t            thisNodeColor = calculateColor(visuals, node);\\n\\t            borderColor = calculateBorderColor(borderColorSaturation, thisNodeColor);\\n\\t        }\\n\\t        node.setVisual('borderColor', borderColor);\\n\\n\\t        var viewChildren = node.viewChildren;\\n\\t        if (!viewChildren || !viewChildren.length) {\\n\\t            thisNodeColor = calculateColor(visuals, node);\\n\\t            // Apply visual to this node.\\n\\t            node.setVisual('color', thisNodeColor);\\n\\t        }\\n\\t        else {\\n\\t            var mapping = buildVisualMapping(\\n\\t                node, nodeModel, nodeLayout, nodeItemStyleModel, visuals, viewChildren\\n\\t            );\\n\\n\\t            // Designate visual to children.\\n\\t            zrUtil.each(viewChildren, function (child, index) {\\n\\t                // If higher than viewRoot, only ancestors of viewRoot is needed to visit.\\n\\t                if (child.depth >= viewRootAncestors.length\\n\\t                    || child === viewRootAncestors[child.depth]\\n\\t                ) {\\n\\t                    var childVisual = mapVisual(\\n\\t                        nodeModel, visuals, child, index, mapping, seriesModel\\n\\t                    );\\n\\t                    travelTree(\\n\\t                        child, childVisual, levelItemStyles, seriesItemStyleModel,\\n\\t                        viewRootAncestors, seriesModel\\n\\t                    );\\n\\t                }\\n\\t            });\\n\\t        }\\n\\t    }\\n\\n\\t    function buildVisuals(\\n\\t        nodeItemStyleModel, designatedVisual, levelItemStyle, seriesItemStyleModel\\n\\t    ) {\\n\\t        var visuals = zrUtil.extend({}, designatedVisual);\\n\\n\\t        zrUtil.each(['color', 'colorAlpha', 'colorSaturation'], function (visualName) {\\n\\t            // Priority: thisNode > thisLevel > parentNodeDesignated > seriesModel\\n\\t            var val = nodeItemStyleModel.get(visualName, true); // Ignore parent\\n\\t            val == null && levelItemStyle && (val = levelItemStyle[visualName]);\\n\\t            val == null && (val = designatedVisual[visualName]);\\n\\t            val == null && (val = seriesItemStyleModel.get(visualName));\\n\\n\\t            val != null && (visuals[visualName] = val);\\n\\t        });\\n\\n\\t        return visuals;\\n\\t    }\\n\\n\\t    function calculateColor(visuals) {\\n\\t        var color = getValueVisualDefine(visuals, 'color');\\n\\n\\t        if (color) {\\n\\t            var colorAlpha = getValueVisualDefine(visuals, 'colorAlpha');\\n\\t            var colorSaturation = getValueVisualDefine(visuals, 'colorSaturation');\\n\\t            if (colorSaturation) {\\n\\t                color = zrColor.modifyHSL(color, null, null, colorSaturation);\\n\\t            }\\n\\t            if (colorAlpha) {\\n\\t                color = zrColor.modifyAlpha(color, colorAlpha);\\n\\t            }\\n\\n\\t            return color;\\n\\t        }\\n\\t    }\\n\\n\\t    function calculateBorderColor(borderColorSaturation, thisNodeColor) {\\n\\t        return thisNodeColor != null\\n\\t             ? zrColor.modifyHSL(thisNodeColor, null, null, borderColorSaturation)\\n\\t             : null;\\n\\t    }\\n\\n\\t    function getValueVisualDefine(visuals, name) {\\n\\t        var value = visuals[name];\\n\\t        if (value != null && value !== 'none') {\\n\\t            return value;\\n\\t        }\\n\\t    }\\n\\n\\t    function buildVisualMapping(\\n\\t        node, nodeModel, nodeLayout, nodeItemStyleModel, visuals, viewChildren\\n\\t    ) {\\n\\t        if (!viewChildren || !viewChildren.length) {\\n\\t            return;\\n\\t        }\\n\\n\\t        var rangeVisual = getRangeVisual(nodeModel, 'color')\\n\\t            || (\\n\\t                visuals.color != null\\n\\t                && visuals.color !== 'none'\\n\\t                && (\\n\\t                    getRangeVisual(nodeModel, 'colorAlpha')\\n\\t                    || getRangeVisual(nodeModel, 'colorSaturation')\\n\\t                )\\n\\t            );\\n\\n\\t        if (!rangeVisual) {\\n\\t            return;\\n\\t        }\\n\\n\\t        var visualMin = nodeModel.get('visualMin');\\n\\t        var visualMax = nodeModel.get('visualMax');\\n\\t        var dataExtent = nodeLayout.dataExtent.slice();\\n\\t        visualMin != null && visualMin < dataExtent[0] && (dataExtent[0] = visualMin);\\n\\t        visualMax != null && visualMax > dataExtent[1] && (dataExtent[1] = visualMax);\\n\\n\\t        var colorMappingBy = nodeModel.get('colorMappingBy');\\n\\t        var opt = {\\n\\t            type: rangeVisual.name,\\n\\t            dataExtent: dataExtent,\\n\\t            visual: rangeVisual.range\\n\\t        };\\n\\t        if (opt.type === 'color'\\n\\t            && (colorMappingBy === 'index' || colorMappingBy === 'id')\\n\\t        ) {\\n\\t            opt.mappingMethod = 'category';\\n\\t            opt.loop = true;\\n\\t            // categories is ordinal, so do not set opt.categories.\\n\\t        }\\n\\t        else {\\n\\t            opt.mappingMethod = 'linear';\\n\\t        }\\n\\n\\t        var mapping = new VisualMapping(opt);\\n\\t        mapping.__drColorMappingBy = colorMappingBy;\\n\\n\\t        return mapping;\\n\\t    }\\n\\n\\t    // Notice: If we dont have the attribute 'colorRange', but only use\\n\\t    // attribute 'color' to represent both concepts of 'colorRange' and 'color',\\n\\t    // (It means 'colorRange' when 'color' is Array, means 'color' when not array),\\n\\t    // this problem will be encountered:\\n\\t    // If a level-1 node dont have children, and its siblings has children,\\n\\t    // and colorRange is set on level-1, then the node can not be colored.\\n\\t    // So we separate 'colorRange' and 'color' to different attributes.\\n\\t    function getRangeVisual(nodeModel, name) {\\n\\t        // 'colorRange', 'colorARange', 'colorSRange'.\\n\\t        // If not exsits on this node, fetch from levels and series.\\n\\t        var range = nodeModel.get(name);\\n\\t        return (isArray(range) && range.length) ? {name: name, range: range} : null;\\n\\t    }\\n\\n\\t    function mapVisual(nodeModel, visuals, child, index, mapping, seriesModel) {\\n\\t        var childVisuals = zrUtil.extend({}, visuals);\\n\\n\\t        if (mapping) {\\n\\t            var mappingType = mapping.type;\\n\\t            var colorMappingBy = mappingType === 'color' && mapping.__drColorMappingBy;\\n\\t            var value =\\n\\t                colorMappingBy === 'index'\\n\\t                ? index\\n\\t                : colorMappingBy === 'id'\\n\\t                ? seriesModel.mapIdToIndex(child.getId())\\n\\t                : child.getValue(nodeModel.get('visualDimension'));\\n\\n\\t            childVisuals[mappingType] = mapping.mapValueToVisual(value);\\n\\t        }\\n\\n\\t        return childVisuals;\\n\\t    }\\n\\n\\n\\n/***/ },\\n/* 203 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * @file Visual mapping.\\n\\t */\\n\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var zrColor = __webpack_require__(31);\\n\\t    var linearMap = __webpack_require__(7).linearMap;\\n\\t    var each = zrUtil.each;\\n\\t    var isObject = zrUtil.isObject;\\n\\n\\t    var CATEGORY_DEFAULT_VISUAL_INDEX = -1;\\n\\n\\t    /**\\n\\t     * @param {Object} option\\n\\t     * @param {string} [option.type] See visualHandlers.\\n\\t     * @param {string} [option.mappingMethod] 'linear' or 'piecewise' or 'category' or 'fixed'\\n\\t     * @param {Array.<number>=} [option.dataExtent] [minExtent, maxExtent],\\n\\t     *                                              required when mappingMethod is 'linear'\\n\\t     * @param {Array.<Object>=} [option.pieceList] [\\n\\t     *                                             {value: someValue},\\n\\t     *                                             {interval: [min1, max1], visual: {...}},\\n\\t     *                                             {interval: [min2, max2]}\\n\\t     *                                             ],\\n\\t     *                                            required when mappingMethod is 'piecewise'.\\n\\t     *                                            Visual for only each piece can be specified.\\n\\t     * @param {Array.<string|Object>=} [option.categories] ['cate1', 'cate2']\\n\\t     *                                            required when mappingMethod is 'category'.\\n\\t     *                                            If no option.categories, categories is set\\n\\t     *                                            as [0, 1, 2, ...].\\n\\t     * @param {boolean} [option.loop=false] Whether loop mapping when mappingMethod is 'category'.\\n\\t     * @param {(Array|Object|*)} [option.visual]  Visual data.\\n\\t     *                                            when mappingMethod is 'category',\\n\\t     *                                            visual data can be array or object\\n\\t     *                                            (like: {cate1: '#222', none: '#fff'})\\n\\t     *                                            or primary types (which represents\\n\\t     *                                            defualt category visual), otherwise visual\\n\\t     *                                            can be array or primary (which will be\\n\\t     *                                            normalized to array).\\n\\t     *\\n\\t     */\\n\\t    var VisualMapping = function (option) {\\n\\t        var mappingMethod = option.mappingMethod;\\n\\t        var visualType = option.type;\\n\\n\\t        /**\\n\\t         * @readOnly\\n\\t         * @type {Object}\\n\\t         */\\n\\t        var thisOption = this.option = zrUtil.clone(option);\\n\\n\\t        /**\\n\\t         * @readOnly\\n\\t         * @type {string}\\n\\t         */\\n\\t        this.type = visualType;\\n\\n\\t        /**\\n\\t         * @readOnly\\n\\t         * @type {string}\\n\\t         */\\n\\t        this.mappingMethod = mappingMethod;\\n\\n\\t        /**\\n\\t         * @private\\n\\t         * @type {Function}\\n\\t         */\\n\\t        this._normalizeData = normalizers[mappingMethod];\\n\\n\\t        var visualHandler = visualHandlers[visualType];\\n\\n\\t        /**\\n\\t         * @public\\n\\t         * @type {Function}\\n\\t         */\\n\\t        this.applyVisual = visualHandler.applyVisual;\\n\\n\\t        /**\\n\\t         * @public\\n\\t         * @type {Function}\\n\\t         */\\n\\t        this.getColorMapper = visualHandler.getColorMapper;\\n\\n\\t        /**\\n\\t         * @private\\n\\t         * @type {Function}\\n\\t         */\\n\\t        this._doMap = visualHandler._doMap[mappingMethod];\\n\\n\\t        if (mappingMethod === 'piecewise') {\\n\\t            normalizeVisualRange(thisOption);\\n\\t            preprocessForPiecewise(thisOption);\\n\\t        }\\n\\t        else if (mappingMethod === 'category') {\\n\\t            thisOption.categories\\n\\t                ? preprocessForSpecifiedCategory(thisOption)\\n\\t                // categories is ordinal when thisOption.categories not specified,\\n\\t                // which need no more preprocess except normalize visual.\\n\\t                : normalizeVisualRange(thisOption, true);\\n\\t        }\\n\\t        else { // mappingMethod === 'linear' or 'fixed'\\n\\t            zrUtil.assert(mappingMethod !== 'linear' || thisOption.dataExtent);\\n\\t            normalizeVisualRange(thisOption);\\n\\t        }\\n\\t    };\\n\\n\\t    VisualMapping.prototype = {\\n\\n\\t        constructor: VisualMapping,\\n\\n\\t        mapValueToVisual: function (value) {\\n\\t            var normalized = this._normalizeData(value);\\n\\t            return this._doMap(normalized, value);\\n\\t        },\\n\\n\\t        getNormalizer: function () {\\n\\t            return zrUtil.bind(this._normalizeData, this);\\n\\t        }\\n\\t    };\\n\\n\\t    var visualHandlers = VisualMapping.visualHandlers = {\\n\\n\\t        color: {\\n\\n\\t            applyVisual: makeApplyVisual('color'),\\n\\n\\t            /**\\n\\t             * Create a mapper function\\n\\t             * @return {Function}\\n\\t             */\\n\\t            getColorMapper: function () {\\n\\t                var thisOption = this.option;\\n\\n\\t                return zrUtil.bind(\\n\\t                    thisOption.mappingMethod === 'category'\\n\\t                        ? function (value, isNormalized) {\\n\\t                            !isNormalized && (value = this._normalizeData(value));\\n\\t                            return doMapCategory.call(this, value);\\n\\t                        }\\n\\t                        : function (value, isNormalized, out) {\\n\\t                            // If output rgb array\\n\\t                            // which will be much faster and useful in pixel manipulation\\n\\t                            var returnRGBArray = !!out;\\n\\t                            !isNormalized && (value = this._normalizeData(value));\\n\\t                            out = zrColor.fastMapToColor(value, thisOption.parsedVisual, out);\\n\\t                            return returnRGBArray ? out : zrColor.stringify(out, 'rgba');\\n\\t                        },\\n\\t                    this\\n\\t                );\\n\\t            },\\n\\n\\t            _doMap: {\\n\\t                linear: function (normalized) {\\n\\t                    return zrColor.stringify(\\n\\t                        zrColor.fastMapToColor(normalized, this.option.parsedVisual),\\n\\t                        'rgba'\\n\\t                    );\\n\\t                },\\n\\t                category: doMapCategory,\\n\\t                piecewise: function (normalized, value) {\\n\\t                    var result = getSpecifiedVisual.call(this, value);\\n\\t                    if (result == null) {\\n\\t                        result = zrColor.stringify(\\n\\t                            zrColor.fastMapToColor(normalized, this.option.parsedVisual),\\n\\t                            'rgba'\\n\\t                        );\\n\\t                    }\\n\\t                    return result;\\n\\t                },\\n\\t                fixed: doMapFixed\\n\\t            }\\n\\t        },\\n\\n\\t        colorHue: makePartialColorVisualHandler(function (color, value) {\\n\\t            return zrColor.modifyHSL(color, value);\\n\\t        }),\\n\\n\\t        colorSaturation: makePartialColorVisualHandler(function (color, value) {\\n\\t            return zrColor.modifyHSL(color, null, value);\\n\\t        }),\\n\\n\\t        colorLightness: makePartialColorVisualHandler(function (color, value) {\\n\\t            return zrColor.modifyHSL(color, null, null, value);\\n\\t        }),\\n\\n\\t        colorAlpha: makePartialColorVisualHandler(function (color, value) {\\n\\t            return zrColor.modifyAlpha(color, value);\\n\\t        }),\\n\\n\\t        opacity: {\\n\\t            applyVisual: makeApplyVisual('opacity'),\\n\\t            _doMap: makeDoMap([0, 1])\\n\\t        },\\n\\n\\t        symbol: {\\n\\t            applyVisual: function (value, getter, setter) {\\n\\t                var symbolCfg = this.mapValueToVisual(value);\\n\\t                if (zrUtil.isString(symbolCfg)) {\\n\\t                    setter('symbol', symbolCfg);\\n\\t                }\\n\\t                else if (isObject(symbolCfg)) {\\n\\t                    for (var name in symbolCfg) {\\n\\t                        if (symbolCfg.hasOwnProperty(name)) {\\n\\t                            setter(name, symbolCfg[name]);\\n\\t                        }\\n\\t                    }\\n\\t                }\\n\\t            },\\n\\t            _doMap: {\\n\\t                linear: doMapToArray,\\n\\t                category: doMapCategory,\\n\\t                piecewise: function (normalized, value) {\\n\\t                    var result = getSpecifiedVisual.call(this, value);\\n\\t                    if (result == null) {\\n\\t                        result = doMapToArray.call(this, normalized);\\n\\t                    }\\n\\t                    return result;\\n\\t                },\\n\\t                fixed: doMapFixed\\n\\t            }\\n\\t        },\\n\\n\\t        symbolSize: {\\n\\t            applyVisual: makeApplyVisual('symbolSize'),\\n\\t            _doMap: makeDoMap([0, 1])\\n\\t        }\\n\\t    };\\n\\n\\n\\t    function preprocessForPiecewise(thisOption) {\\n\\t        var pieceList = thisOption.pieceList;\\n\\t        thisOption.hasSpecialVisual = false;\\n\\n\\t        zrUtil.each(pieceList, function (piece, index) {\\n\\t            piece.originIndex = index;\\n\\t            // piece.visual is \\\"result visual value\\\" but not\\n\\t            // a visual range, so it does not need to be normalized.\\n\\t            if (piece.visual != null) {\\n\\t                thisOption.hasSpecialVisual = true;\\n\\t            }\\n\\t        });\\n\\t    }\\n\\n\\t    function preprocessForSpecifiedCategory(thisOption) {\\n\\t        // Hash categories.\\n\\t        var categories = thisOption.categories;\\n\\t        var visual = thisOption.visual;\\n\\n\\t        var categoryMap = thisOption.categoryMap = {};\\n\\t        each(categories, function (cate, index) {\\n\\t            categoryMap[cate] = index;\\n\\t        });\\n\\n\\t        // Process visual map input.\\n\\t        if (!zrUtil.isArray(visual)) {\\n\\t            var visualArr = [];\\n\\n\\t            if (zrUtil.isObject(visual)) {\\n\\t                each(visual, function (v, cate) {\\n\\t                    var index = categoryMap[cate];\\n\\t                    visualArr[index != null ? index : CATEGORY_DEFAULT_VISUAL_INDEX] = v;\\n\\t                });\\n\\t            }\\n\\t            else { // Is primary type, represents default visual.\\n\\t                visualArr[CATEGORY_DEFAULT_VISUAL_INDEX] = visual;\\n\\t            }\\n\\n\\t            visual = setVisualToOption(thisOption, visualArr);\\n\\t        }\\n\\n\\t        // Remove categories that has no visual,\\n\\t        // then we can mapping them to CATEGORY_DEFAULT_VISUAL_INDEX.\\n\\t        for (var i = categories.length - 1; i >= 0; i--) {\\n\\t            if (visual[i] == null) {\\n\\t                delete categoryMap[categories[i]];\\n\\t                categories.pop();\\n\\t            }\\n\\t        }\\n\\t    }\\n\\n\\t    function normalizeVisualRange(thisOption, isCategory) {\\n\\t        var visual = thisOption.visual;\\n\\t        var visualArr = [];\\n\\n\\t        if (zrUtil.isObject(visual)) {\\n\\t            each(visual, function (v) {\\n\\t                visualArr.push(v);\\n\\t            });\\n\\t        }\\n\\t        else if (visual != null) {\\n\\t            visualArr.push(visual);\\n\\t        }\\n\\n\\t        var doNotNeedPair = {color: 1, symbol: 1};\\n\\n\\t        if (!isCategory\\n\\t            && visualArr.length === 1\\n\\t            && !doNotNeedPair.hasOwnProperty(thisOption.type)\\n\\t        ) {\\n\\t            // Do not care visualArr.length === 0, which is illegal.\\n\\t            visualArr[1] = visualArr[0];\\n\\t        }\\n\\n\\t        setVisualToOption(thisOption, visualArr);\\n\\t    }\\n\\n\\t    function makePartialColorVisualHandler(applyValue) {\\n\\t        return {\\n\\t            applyVisual: function (value, getter, setter) {\\n\\t                value = this.mapValueToVisual(value);\\n\\t                // Must not be array value\\n\\t                setter('color', applyValue(getter('color'), value));\\n\\t            },\\n\\t            _doMap: makeDoMap([0, 1])\\n\\t        };\\n\\t    }\\n\\n\\t    function doMapToArray(normalized) {\\n\\t        var visual = this.option.visual;\\n\\t        return visual[\\n\\t            Math.round(linearMap(normalized, [0, 1], [0, visual.length - 1], true))\\n\\t        ] || {};\\n\\t    }\\n\\n\\t    function makeApplyVisual(visualType) {\\n\\t        return function (value, getter, setter) {\\n\\t            setter(visualType, this.mapValueToVisual(value));\\n\\t        };\\n\\t    }\\n\\n\\t    function doMapCategory(normalized) {\\n\\t        var visual = this.option.visual;\\n\\t        return visual[\\n\\t            (this.option.loop && normalized !== CATEGORY_DEFAULT_VISUAL_INDEX)\\n\\t                ? normalized % visual.length\\n\\t                : normalized\\n\\t        ];\\n\\t    }\\n\\n\\t    function doMapFixed() {\\n\\t        return this.option.visual[0];\\n\\t    }\\n\\n\\t    function makeDoMap(sourceExtent) {\\n\\t        return {\\n\\t            linear: function (normalized) {\\n\\t                return linearMap(normalized, sourceExtent, this.option.visual, true);\\n\\t            },\\n\\t            category: doMapCategory,\\n\\t            piecewise: function (normalized, value) {\\n\\t                var result = getSpecifiedVisual.call(this, value);\\n\\t                if (result == null) {\\n\\t                    result = linearMap(normalized, sourceExtent, this.option.visual, true);\\n\\t                }\\n\\t                return result;\\n\\t            },\\n\\t            fixed: doMapFixed\\n\\t        };\\n\\t    }\\n\\n\\t    function getSpecifiedVisual(value) {\\n\\t        var thisOption = this.option;\\n\\t        var pieceList = thisOption.pieceList;\\n\\t        if (thisOption.hasSpecialVisual) {\\n\\t            var pieceIndex = VisualMapping.findPieceIndex(value, pieceList);\\n\\t            var piece = pieceList[pieceIndex];\\n\\t            if (piece && piece.visual) {\\n\\t                return piece.visual[this.type];\\n\\t            }\\n\\t        }\\n\\t    }\\n\\n\\t    function setVisualToOption(thisOption, visualArr) {\\n\\t        thisOption.visual = visualArr;\\n\\t        if (thisOption.type === 'color') {\\n\\t            thisOption.parsedVisual = zrUtil.map(visualArr, function (item) {\\n\\t                return zrColor.parse(item);\\n\\t            });\\n\\t        }\\n\\t        return visualArr;\\n\\t    }\\n\\n\\n\\t    /**\\n\\t     * Normalizers by mapping methods.\\n\\t     */\\n\\t    var normalizers = {\\n\\n\\t        linear: function (value) {\\n\\t            return linearMap(value, this.option.dataExtent, [0, 1], true);\\n\\t        },\\n\\n\\t        piecewise: function (value) {\\n\\t            var pieceList = this.option.pieceList;\\n\\t            var pieceIndex = VisualMapping.findPieceIndex(value, pieceList, true);\\n\\t            if (pieceIndex != null) {\\n\\t                return linearMap(pieceIndex, [0, pieceList.length - 1], [0, 1], true);\\n\\t            }\\n\\t        },\\n\\n\\t        category: function (value) {\\n\\t            var index = this.option.categories\\n\\t                ? this.option.categoryMap[value]\\n\\t                : value; // ordinal\\n\\t            return index == null ? CATEGORY_DEFAULT_VISUAL_INDEX : index;\\n\\t        },\\n\\n\\t        fixed: zrUtil.noop\\n\\t    };\\n\\n\\n\\n\\t    /**\\n\\t     * List available visual types.\\n\\t     *\\n\\t     * @public\\n\\t     * @return {Array.<string>}\\n\\t     */\\n\\t    VisualMapping.listVisualTypes = function () {\\n\\t        var visualTypes = [];\\n\\t        zrUtil.each(visualHandlers, function (handler, key) {\\n\\t            visualTypes.push(key);\\n\\t        });\\n\\t        return visualTypes;\\n\\t    };\\n\\n\\t    /**\\n\\t     * @public\\n\\t     */\\n\\t    VisualMapping.addVisualHandler = function (name, handler) {\\n\\t        visualHandlers[name] = handler;\\n\\t    };\\n\\n\\t    /**\\n\\t     * @public\\n\\t     */\\n\\t    VisualMapping.isValidType = function (visualType) {\\n\\t        return visualHandlers.hasOwnProperty(visualType);\\n\\t    };\\n\\n\\t    /**\\n\\t     * Convinent method.\\n\\t     * Visual can be Object or Array or primary type.\\n\\t     *\\n\\t     * @public\\n\\t     */\\n\\t    VisualMapping.eachVisual = function (visual, callback, context) {\\n\\t        if (zrUtil.isObject(visual)) {\\n\\t            zrUtil.each(visual, callback, context);\\n\\t        }\\n\\t        else {\\n\\t            callback.call(context, visual);\\n\\t        }\\n\\t    };\\n\\n\\t    VisualMapping.mapVisual = function (visual, callback, context) {\\n\\t        var isPrimary;\\n\\t        var newVisual = zrUtil.isArray(visual)\\n\\t            ? []\\n\\t            : zrUtil.isObject(visual)\\n\\t            ? {}\\n\\t            : (isPrimary = true, null);\\n\\n\\t        VisualMapping.eachVisual(visual, function (v, key) {\\n\\t            var newVal = callback.call(context, v, key);\\n\\t            isPrimary ? (newVisual = newVal) : (newVisual[key] = newVal);\\n\\t        });\\n\\t        return newVisual;\\n\\t    };\\n\\n\\t    /**\\n\\t     * @public\\n\\t     * @param {Object} obj\\n\\t     * @return {Oject} new object containers visual values.\\n\\t     *                 If no visuals, return null.\\n\\t     */\\n\\t    VisualMapping.retrieveVisuals = function (obj) {\\n\\t        var ret = {};\\n\\t        var hasVisual;\\n\\n\\t        obj && each(visualHandlers, function (h, visualType) {\\n\\t            if (obj.hasOwnProperty(visualType)) {\\n\\t                ret[visualType] = obj[visualType];\\n\\t                hasVisual = true;\\n\\t            }\\n\\t        });\\n\\n\\t        return hasVisual ? ret : null;\\n\\t    };\\n\\n\\t    /**\\n\\t     * Give order to visual types, considering colorSaturation, colorAlpha depends on color.\\n\\t     *\\n\\t     * @public\\n\\t     * @param {(Object|Array)} visualTypes If Object, like: {color: ..., colorSaturation: ...}\\n\\t     *                                     IF Array, like: ['color', 'symbol', 'colorSaturation']\\n\\t     * @return {Array.<string>} Sorted visual types.\\n\\t     */\\n\\t    VisualMapping.prepareVisualTypes = function (visualTypes) {\\n\\t        if (isObject(visualTypes)) {\\n\\t            var types = [];\\n\\t            each(visualTypes, function (item, type) {\\n\\t                types.push(type);\\n\\t            });\\n\\t            visualTypes = types;\\n\\t        }\\n\\t        else if (zrUtil.isArray(visualTypes)) {\\n\\t            visualTypes = visualTypes.slice();\\n\\t        }\\n\\t        else {\\n\\t            return [];\\n\\t        }\\n\\n\\t        visualTypes.sort(function (type1, type2) {\\n\\t            // color should be front of colorSaturation, colorAlpha, ...\\n\\t            // symbol and symbolSize do not matter.\\n\\t            return (type2 === 'color' && type1 !== 'color' && type1.indexOf('color') === 0)\\n\\t                ? 1 : -1;\\n\\t        });\\n\\n\\t        return visualTypes;\\n\\t    };\\n\\n\\t    /**\\n\\t     * 'color', 'colorSaturation', 'colorAlpha', ... are depends on 'color'.\\n\\t     * Other visuals are only depends on themself.\\n\\t     *\\n\\t     * @public\\n\\t     * @param {string} visualType1\\n\\t     * @param {string} visualType2\\n\\t     * @return {boolean}\\n\\t     */\\n\\t    VisualMapping.dependsOn = function (visualType1, visualType2) {\\n\\t        return visualType2 === 'color'\\n\\t            ? !!(visualType1 && visualType1.indexOf(visualType2) === 0)\\n\\t            : visualType1 === visualType2;\\n\\t    };\\n\\n\\t    /**\\n\\t     * @param {number} value\\n\\t     * @param {Array.<Object>} pieceList [{value: ..., interval: [min, max]}, ...]\\n\\t     *                         Always from small to big.\\n\\t     * @param {boolean} [findClosestWhenOutside=false]\\n\\t     * @return {number} index\\n\\t     */\\n\\t    VisualMapping.findPieceIndex = function (value, pieceList, findClosestWhenOutside) {\\n\\t        var possibleI;\\n\\t        var abs = Infinity;\\n\\n\\t        // value has the higher priority.\\n\\t        for (var i = 0, len = pieceList.length; i < len; i++) {\\n\\t            var pieceValue = pieceList[i].value;\\n\\t            if (pieceValue != null) {\\n\\t                if (pieceValue === value\\n\\t                    // FIXME\\n\\t                    // It is supposed to compare value according to value type of dimension,\\n\\t                    // but currently value type can exactly be string or number.\\n\\t                    // Compromise for numeric-like string (like '12'), especially\\n\\t                    // in the case that visualMap.categories is ['22', '33'].\\n\\t                    || (typeof pieceValue === 'string' && pieceValue === value + '')\\n\\t                ) {\\n\\t                    return i;\\n\\t                }\\n\\t                findClosestWhenOutside && updatePossible(pieceValue, i);\\n\\t            }\\n\\t        }\\n\\n\\t        for (var i = 0, len = pieceList.length; i < len; i++) {\\n\\t            var piece = pieceList[i];\\n\\t            var interval = piece.interval;\\n\\t            var close = piece.close;\\n\\n\\t            if (interval) {\\n\\t                if (interval[0] === -Infinity) {\\n\\t                    if (littleThan(close[1], value, interval[1])) {\\n\\t                        return i;\\n\\t                    }\\n\\t                }\\n\\t                else if (interval[1] === Infinity) {\\n\\t                    if (littleThan(close[0], interval[0], value)) {\\n\\t                        return i;\\n\\t                    }\\n\\t                }\\n\\t                else if (\\n\\t                    littleThan(close[0], interval[0], value)\\n\\t                    && littleThan(close[1], value, interval[1])\\n\\t                ) {\\n\\t                    return i;\\n\\t                }\\n\\t                findClosestWhenOutside && updatePossible(interval[0], i);\\n\\t                findClosestWhenOutside && updatePossible(interval[1], i);\\n\\t            }\\n\\t        }\\n\\n\\t        if (findClosestWhenOutside) {\\n\\t            return value === Infinity\\n\\t                ? pieceList.length - 1\\n\\t                : value === -Infinity\\n\\t                ? 0\\n\\t                : possibleI;\\n\\t        }\\n\\n\\t        function updatePossible(val, index) {\\n\\t            var newAbs = Math.abs(val - value);\\n\\t            if (newAbs < abs) {\\n\\t                abs = newAbs;\\n\\t                possibleI = index;\\n\\t            }\\n\\t        }\\n\\n\\t    };\\n\\n\\t    function littleThan(close, a, b) {\\n\\t        return close ? a <= b : a < b;\\n\\t    }\\n\\n\\t    module.exports = VisualMapping;\\n\\n\\n\\n/***/ },\\n/* 204 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var numberUtil = __webpack_require__(7);\\n\\t    var layout = __webpack_require__(71);\\n\\t    var helper = __webpack_require__(197);\\n\\t    var BoundingRect = __webpack_require__(9);\\n\\t    var helper = __webpack_require__(197);\\n\\n\\t    var mathMax = Math.max;\\n\\t    var mathMin = Math.min;\\n\\t    var parsePercent = numberUtil.parsePercent;\\n\\t    var retrieveValue = zrUtil.retrieve;\\n\\t    var each = zrUtil.each;\\n\\n\\t    var PATH_BORDER_WIDTH = ['itemStyle', 'normal', 'borderWidth'];\\n\\t    var PATH_GAP_WIDTH = ['itemStyle', 'normal', 'gapWidth'];\\n\\t    var PATH_UPPER_LABEL_SHOW = ['upperLabel', 'normal', 'show'];\\n\\t    var PATH_UPPER_LABEL_HEIGHT = ['upperLabel', 'normal', 'height'];\\n\\n\\t    /**\\n\\t     * @public\\n\\t     */\\n\\t    function update(ecModel, api, payload) {\\n\\t        // Layout result in each node:\\n\\t        // {x, y, width, height, area, borderWidth}\\n\\t        var condition = {mainType: 'series', subType: 'treemap', query: payload};\\n\\t        ecModel.eachComponent(condition, function (seriesModel) {\\n\\n\\t            var ecWidth = api.getWidth();\\n\\t            var ecHeight = api.getHeight();\\n\\t            var seriesOption = seriesModel.option;\\n\\n\\t            var layoutInfo = layout.getLayoutRect(\\n\\t                seriesModel.getBoxLayoutParams(),\\n\\t                {\\n\\t                    width: api.getWidth(),\\n\\t                    height: api.getHeight()\\n\\t                }\\n\\t            );\\n\\n\\t            var size = seriesOption.size || []; // Compatible with ec2.\\n\\t            var containerWidth = parsePercent(\\n\\t                retrieveValue(layoutInfo.width, size[0]),\\n\\t                ecWidth\\n\\t            );\\n\\t            var containerHeight = parsePercent(\\n\\t                retrieveValue(layoutInfo.height, size[1]),\\n\\t                ecHeight\\n\\t            );\\n\\n\\t            // Fetch payload info.\\n\\t            var payloadType = payload && payload.type;\\n\\t            var targetInfo = helper.retrieveTargetInfo(payload, seriesModel);\\n\\t            var rootRect = (payloadType === 'treemapRender' || payloadType === 'treemapMove')\\n\\t                ? payload.rootRect : null;\\n\\t            var viewRoot = seriesModel.getViewRoot();\\n\\t            var viewAbovePath = helper.getPathToRoot(viewRoot);\\n\\n\\t            if (payloadType !== 'treemapMove') {\\n\\t                var rootSize = payloadType === 'treemapZoomToNode'\\n\\t                    ? estimateRootSize(\\n\\t                        seriesModel, targetInfo, viewRoot, containerWidth, containerHeight\\n\\t                    )\\n\\t                    : rootRect\\n\\t                    ? [rootRect.width, rootRect.height]\\n\\t                    : [containerWidth, containerHeight];\\n\\n\\t                var sort = seriesOption.sort;\\n\\t                if (sort && sort !== 'asc' && sort !== 'desc') {\\n\\t                    sort = 'desc';\\n\\t                }\\n\\t                var options = {\\n\\t                    squareRatio: seriesOption.squareRatio,\\n\\t                    sort: sort,\\n\\t                    leafDepth: seriesOption.leafDepth\\n\\t                };\\n\\n\\t                // layout should be cleared because using updateView but not update.\\n\\t                viewRoot.hostTree.clearLayouts();\\n\\n\\t                // TODO\\n\\t                // optimize: if out of view clip, do not layout.\\n\\t                // But take care that if do not render node out of view clip,\\n\\t                // how to calculate start po\\n\\n\\t                var viewRootLayout = {\\n\\t                    x: 0, y: 0,\\n\\t                    width: rootSize[0], height: rootSize[1],\\n\\t                    area: rootSize[0] * rootSize[1]\\n\\t                };\\n\\t                viewRoot.setLayout(viewRootLayout);\\n\\n\\t                squarify(viewRoot, options, false, 0);\\n\\t                // Supplement layout.\\n\\t                var viewRootLayout = viewRoot.getLayout();\\n\\t                each(viewAbovePath, function (node, index) {\\n\\t                    var childValue = (viewAbovePath[index + 1] || viewRoot).getValue();\\n\\t                    node.setLayout(zrUtil.extend(\\n\\t                        {dataExtent: [childValue, childValue], borderWidth: 0, upperHeight: 0},\\n\\t                        viewRootLayout\\n\\t                    ));\\n\\t                });\\n\\t            }\\n\\n\\t            var treeRoot = seriesModel.getData().tree.root;\\n\\n\\t            treeRoot.setLayout(\\n\\t                calculateRootPosition(layoutInfo, rootRect, targetInfo),\\n\\t                true\\n\\t            );\\n\\n\\t            seriesModel.setLayoutInfo(layoutInfo);\\n\\n\\t            // FIXME\\n\\t            // 现在没有clip功能，暂时取ec高宽。\\n\\t            prunning(\\n\\t                treeRoot,\\n\\t                // Transform to base element coordinate system.\\n\\t                new BoundingRect(-layoutInfo.x, -layoutInfo.y, ecWidth, ecHeight),\\n\\t                viewAbovePath,\\n\\t                viewRoot,\\n\\t                0\\n\\t            );\\n\\t        });\\n\\t    }\\n\\n\\t    /**\\n\\t     * Layout treemap with squarify algorithm.\\n\\t     * @see https://graphics.ethz.ch/teaching/scivis_common/Literature/squarifiedTreeMaps.pdf\\n\\t     * @see https://github.com/mbostock/d3/blob/master/src/layout/treemap.js\\n\\t     *\\n\\t     * @protected\\n\\t     * @param {module:echarts/data/Tree~TreeNode} node\\n\\t     * @param {Object} options\\n\\t     * @param {string} options.sort 'asc' or 'desc'\\n\\t     * @param {number} options.squareRatio\\n\\t     * @param {boolean} hideChildren\\n\\t     * @param {number} depth\\n\\t     */\\n\\t    function squarify(node, options, hideChildren, depth) {\\n\\t        var width;\\n\\t        var height;\\n\\n\\t        if (node.isRemoved()) {\\n\\t            return;\\n\\t        }\\n\\n\\t        var thisLayout = node.getLayout();\\n\\t        width = thisLayout.width;\\n\\t        height = thisLayout.height;\\n\\n\\t        // Considering border and gap\\n\\t        var nodeModel = node.getModel();\\n\\t        var borderWidth = nodeModel.get(PATH_BORDER_WIDTH);\\n\\t        var halfGapWidth = nodeModel.get(PATH_GAP_WIDTH) / 2;\\n\\t        var upperLabelHeight = getUpperLabelHeight(nodeModel);\\n\\t        var upperHeight = Math.max(borderWidth, upperLabelHeight);\\n\\t        var layoutOffset = borderWidth - halfGapWidth;\\n\\t        var layoutOffsetUpper = upperHeight - halfGapWidth;\\n\\t        var nodeModel = node.getModel();\\n\\n\\t        node.setLayout({\\n\\t            borderWidth: borderWidth,\\n\\t            upperHeight: upperHeight,\\n\\t            upperLabelHeight: upperLabelHeight\\n\\t        }, true);\\n\\n\\t        width = mathMax(width - 2 * layoutOffset, 0);\\n\\t        height = mathMax(height - layoutOffset - layoutOffsetUpper, 0);\\n\\n\\t        var totalArea = width * height;\\n\\t        var viewChildren = initChildren(\\n\\t            node, nodeModel, totalArea, options, hideChildren, depth\\n\\t        );\\n\\n\\t        if (!viewChildren.length) {\\n\\t            return;\\n\\t        }\\n\\n\\t        var rect = {x: layoutOffset, y: layoutOffsetUpper, width: width, height: height};\\n\\t        var rowFixedLength = mathMin(width, height);\\n\\t        var best = Infinity; // the best row score so far\\n\\t        var row = [];\\n\\t        row.area = 0;\\n\\n\\t        for (var i = 0, len = viewChildren.length; i < len;) {\\n\\t            var child = viewChildren[i];\\n\\n\\t            row.push(child);\\n\\t            row.area += child.getLayout().area;\\n\\t            var score = worst(row, rowFixedLength, options.squareRatio);\\n\\n\\t            // continue with this orientation\\n\\t            if (score <= best) {\\n\\t                i++;\\n\\t                best = score;\\n\\t            }\\n\\t            // abort, and try a different orientation\\n\\t            else {\\n\\t                row.area -= row.pop().getLayout().area;\\n\\t                position(row, rowFixedLength, rect, halfGapWidth, false);\\n\\t                rowFixedLength = mathMin(rect.width, rect.height);\\n\\t                row.length = row.area = 0;\\n\\t                best = Infinity;\\n\\t            }\\n\\t        }\\n\\n\\t        if (row.length) {\\n\\t            position(row, rowFixedLength, rect, halfGapWidth, true);\\n\\t        }\\n\\n\\t        if (!hideChildren) {\\n\\t            var childrenVisibleMin = nodeModel.get('childrenVisibleMin');\\n\\t            if (childrenVisibleMin != null && totalArea < childrenVisibleMin) {\\n\\t                hideChildren = true;\\n\\t            }\\n\\t        }\\n\\n\\t        for (var i = 0, len = viewChildren.length; i < len; i++) {\\n\\t            squarify(viewChildren[i], options, hideChildren, depth + 1);\\n\\t        }\\n\\t    }\\n\\n\\t    /**\\n\\t     * Set area to each child, and calculate data extent for visual coding.\\n\\t     */\\n\\t    function initChildren(node, nodeModel, totalArea, options, hideChildren, depth) {\\n\\t        var viewChildren = node.children || [];\\n\\t        var orderBy = options.sort;\\n\\t        orderBy !== 'asc' && orderBy !== 'desc' && (orderBy = null);\\n\\n\\t        var overLeafDepth = options.leafDepth != null && options.leafDepth <= depth;\\n\\n\\t        // leafDepth has higher priority.\\n\\t        if (hideChildren && !overLeafDepth) {\\n\\t            return (node.viewChildren = []);\\n\\t        }\\n\\n\\t        // Sort children, order by desc.\\n\\t        viewChildren = zrUtil.filter(viewChildren, function (child) {\\n\\t            return !child.isRemoved();\\n\\t        });\\n\\n\\t        sort(viewChildren, orderBy);\\n\\n\\t        var info = statistic(nodeModel, viewChildren, orderBy);\\n\\n\\t        if (info.sum === 0) {\\n\\t            return (node.viewChildren = []);\\n\\t        }\\n\\n\\t        info.sum = filterByThreshold(nodeModel, totalArea, info.sum, orderBy, viewChildren);\\n\\n\\t        if (info.sum === 0) {\\n\\t            return (node.viewChildren = []);\\n\\t        }\\n\\n\\t        // Set area to each child.\\n\\t        for (var i = 0, len = viewChildren.length; i < len; i++) {\\n\\t            var area = viewChildren[i].getValue() / info.sum * totalArea;\\n\\t            // Do not use setLayout({...}, true), because it is needed to clear last layout.\\n\\t            viewChildren[i].setLayout({area: area});\\n\\t        }\\n\\n\\t        if (overLeafDepth) {\\n\\t            viewChildren.length && node.setLayout({isLeafRoot: true}, true);\\n\\t            viewChildren.length = 0;\\n\\t        }\\n\\n\\t        node.viewChildren = viewChildren;\\n\\t        node.setLayout({dataExtent: info.dataExtent}, true);\\n\\n\\t        return viewChildren;\\n\\t    }\\n\\n\\t    /**\\n\\t     * Consider 'visibleMin'. Modify viewChildren and get new sum.\\n\\t     */\\n\\t    function filterByThreshold(nodeModel, totalArea, sum, orderBy, orderedChildren) {\\n\\n\\t        // visibleMin is not supported yet when no option.sort.\\n\\t        if (!orderBy) {\\n\\t            return sum;\\n\\t        }\\n\\n\\t        var visibleMin = nodeModel.get('visibleMin');\\n\\t        var len = orderedChildren.length;\\n\\t        var deletePoint = len;\\n\\n\\t        // Always travel from little value to big value.\\n\\t        for (var i = len - 1; i >= 0; i--) {\\n\\t            var value = orderedChildren[\\n\\t                orderBy === 'asc' ? len - i - 1 : i\\n\\t            ].getValue();\\n\\n\\t            if (value / sum * totalArea < visibleMin) {\\n\\t                deletePoint = i;\\n\\t                sum -= value;\\n\\t            }\\n\\t        }\\n\\n\\t        orderBy === 'asc'\\n\\t            ? orderedChildren.splice(0, len - deletePoint)\\n\\t            : orderedChildren.splice(deletePoint, len - deletePoint);\\n\\n\\t        return sum;\\n\\t    }\\n\\n\\t    /**\\n\\t     * Sort\\n\\t     */\\n\\t    function sort(viewChildren, orderBy) {\\n\\t        if (orderBy) {\\n\\t            viewChildren.sort(function (a, b) {\\n\\t                var diff = orderBy === 'asc'\\n\\t                    ?  a.getValue() - b.getValue() : b.getValue() - a.getValue();\\n\\t                return diff === 0\\n\\t                    ? (orderBy === 'asc'\\n\\t                        ? a.dataIndex - b.dataIndex : b.dataIndex - a.dataIndex\\n\\t                    )\\n\\t                    : diff;\\n\\t            });\\n\\t        }\\n\\t        return viewChildren;\\n\\t    }\\n\\n\\t    /**\\n\\t     * Statistic\\n\\t     */\\n\\t    function statistic(nodeModel, children, orderBy) {\\n\\t        // Calculate sum.\\n\\t        var sum = 0;\\n\\t        for (var i = 0, len = children.length; i < len; i++) {\\n\\t            sum += children[i].getValue();\\n\\t        }\\n\\n\\t        // Statistic data extent for latter visual coding.\\n\\t        // Notice: data extent should be calculate based on raw children\\n\\t        // but not filtered view children, otherwise visual mapping will not\\n\\t        // be stable when zoom (where children is filtered by visibleMin).\\n\\n\\t        var dimension = nodeModel.get('visualDimension');\\n\\t        var dataExtent;\\n\\n\\t        // The same as area dimension.\\n\\t        if (!children || !children.length) {\\n\\t            dataExtent = [NaN, NaN];\\n\\t        }\\n\\t        else if (dimension === 'value' && orderBy) {\\n\\t            dataExtent = [\\n\\t                children[children.length - 1].getValue(),\\n\\t                children[0].getValue()\\n\\t            ];\\n\\t            orderBy === 'asc' && dataExtent.reverse();\\n\\t        }\\n\\t        // Other dimension.\\n\\t        else {\\n\\t            var dataExtent = [Infinity, -Infinity];\\n\\t            each(children, function (child) {\\n\\t                var value = child.getValue(dimension);\\n\\t                value < dataExtent[0] && (dataExtent[0] = value);\\n\\t                value > dataExtent[1] && (dataExtent[1] = value);\\n\\t            });\\n\\t        }\\n\\n\\t        return {sum: sum, dataExtent: dataExtent};\\n\\t    }\\n\\n\\t    /**\\n\\t     * Computes the score for the specified row,\\n\\t     * as the worst aspect ratio.\\n\\t     */\\n\\t    function worst(row, rowFixedLength, ratio) {\\n\\t        var areaMax = 0;\\n\\t        var areaMin = Infinity;\\n\\n\\t        for (var i = 0, area, len = row.length; i < len; i++) {\\n\\t            area = row[i].getLayout().area;\\n\\t            if (area) {\\n\\t                area < areaMin && (areaMin = area);\\n\\t                area > areaMax && (areaMax = area);\\n\\t            }\\n\\t        }\\n\\n\\t        var squareArea = row.area * row.area;\\n\\t        var f = rowFixedLength * rowFixedLength * ratio;\\n\\n\\t        return squareArea\\n\\t            ? mathMax(\\n\\t                (f * areaMax) / squareArea,\\n\\t                squareArea / (f * areaMin)\\n\\t            )\\n\\t            : Infinity;\\n\\t    }\\n\\n\\t    /**\\n\\t     * Positions the specified row of nodes. Modifies `rect`.\\n\\t     */\\n\\t    function position(row, rowFixedLength, rect, halfGapWidth, flush) {\\n\\t        // When rowFixedLength === rect.width,\\n\\t        // it is horizontal subdivision,\\n\\t        // rowFixedLength is the width of the subdivision,\\n\\t        // rowOtherLength is the height of the subdivision,\\n\\t        // and nodes will be positioned from left to right.\\n\\n\\t        // wh[idx0WhenH] means: when horizontal,\\n\\t        //      wh[idx0WhenH] => wh[0] => 'width'.\\n\\t        //      xy[idx1WhenH] => xy[1] => 'y'.\\n\\t        var idx0WhenH = rowFixedLength === rect.width ? 0 : 1;\\n\\t        var idx1WhenH = 1 - idx0WhenH;\\n\\t        var xy = ['x', 'y'];\\n\\t        var wh = ['width', 'height'];\\n\\n\\t        var last = rect[xy[idx0WhenH]];\\n\\t        var rowOtherLength = rowFixedLength\\n\\t            ? row.area / rowFixedLength : 0;\\n\\n\\t        if (flush || rowOtherLength > rect[wh[idx1WhenH]]) {\\n\\t            rowOtherLength = rect[wh[idx1WhenH]]; // over+underflow\\n\\t        }\\n\\t        for (var i = 0, rowLen = row.length; i < rowLen; i++) {\\n\\t            var node = row[i];\\n\\t            var nodeLayout = {};\\n\\t            var step = rowOtherLength\\n\\t                ? node.getLayout().area / rowOtherLength : 0;\\n\\n\\t            var wh1 = nodeLayout[wh[idx1WhenH]] = mathMax(rowOtherLength - 2 * halfGapWidth, 0);\\n\\n\\t            // We use Math.max/min to avoid negative width/height when considering gap width.\\n\\t            var remain = rect[xy[idx0WhenH]] + rect[wh[idx0WhenH]] - last;\\n\\t            var modWH = (i === rowLen - 1 || remain < step) ? remain : step;\\n\\t            var wh0 = nodeLayout[wh[idx0WhenH]] = mathMax(modWH - 2 * halfGapWidth, 0);\\n\\n\\t            nodeLayout[xy[idx1WhenH]] = rect[xy[idx1WhenH]] + mathMin(halfGapWidth, wh1 / 2);\\n\\t            nodeLayout[xy[idx0WhenH]] = last + mathMin(halfGapWidth, wh0 / 2);\\n\\n\\t            last += modWH;\\n\\t            node.setLayout(nodeLayout, true);\\n\\t        }\\n\\n\\t        rect[xy[idx1WhenH]] += rowOtherLength;\\n\\t        rect[wh[idx1WhenH]] -= rowOtherLength;\\n\\t    }\\n\\n\\t    // Return [containerWidth, containerHeight] as defualt.\\n\\t    function estimateRootSize(seriesModel, targetInfo, viewRoot, containerWidth, containerHeight) {\\n\\t        // If targetInfo.node exists, we zoom to the node,\\n\\t        // so estimate whold width and heigth by target node.\\n\\t        var currNode = (targetInfo || {}).node;\\n\\t        var defaultSize = [containerWidth, containerHeight];\\n\\n\\t        if (!currNode || currNode === viewRoot) {\\n\\t            return defaultSize;\\n\\t        }\\n\\n\\t        var parent;\\n\\t        var viewArea = containerWidth * containerHeight;\\n\\t        var area = viewArea * seriesModel.option.zoomToNodeRatio;\\n\\n\\t        while (parent = currNode.parentNode) { // jshint ignore:line\\n\\t            var sum = 0;\\n\\t            var siblings = parent.children;\\n\\n\\t            for (var i = 0, len = siblings.length; i < len; i++) {\\n\\t                sum += siblings[i].getValue();\\n\\t            }\\n\\t            var currNodeValue = currNode.getValue();\\n\\t            if (currNodeValue === 0) {\\n\\t                return defaultSize;\\n\\t            }\\n\\t            area *= sum / currNodeValue;\\n\\n\\t            // Considering border, suppose aspect ratio is 1.\\n\\t            var parentModel = parent.getModel();\\n\\t            var borderWidth = parentModel.get(PATH_BORDER_WIDTH);\\n\\t            var upperHeight = Math.max(borderWidth, getUpperLabelHeight(parentModel, borderWidth));\\n\\t            area += 4 * borderWidth * borderWidth\\n\\t                + (3 * borderWidth + upperHeight) * Math.pow(area, 0.5);\\n\\n\\t            area > numberUtil.MAX_SAFE_INTEGER && (area = numberUtil.MAX_SAFE_INTEGER);\\n\\n\\t            currNode = parent;\\n\\t        }\\n\\n\\t        area < viewArea && (area = viewArea);\\n\\t        var scale = Math.pow(area / viewArea, 0.5);\\n\\n\\t        return [containerWidth * scale, containerHeight * scale];\\n\\t    }\\n\\n\\t    // Root postion base on coord of containerGroup\\n\\t    function calculateRootPosition(layoutInfo, rootRect, targetInfo) {\\n\\t        if (rootRect) {\\n\\t            return {x: rootRect.x, y: rootRect.y};\\n\\t        }\\n\\n\\t        var defaultPosition = {x: 0, y: 0};\\n\\t        if (!targetInfo) {\\n\\t            return defaultPosition;\\n\\t        }\\n\\n\\t        // If targetInfo is fetched by 'retrieveTargetInfo',\\n\\t        // old tree and new tree are the same tree,\\n\\t        // so the node still exists and we can visit it.\\n\\n\\t        var targetNode = targetInfo.node;\\n\\t        var layout = targetNode.getLayout();\\n\\n\\t        if (!layout) {\\n\\t            return defaultPosition;\\n\\t        }\\n\\n\\t        // Transform coord from local to container.\\n\\t        var targetCenter = [layout.width / 2, layout.height / 2];\\n\\t        var node = targetNode;\\n\\t        while (node) {\\n\\t            var nodeLayout = node.getLayout();\\n\\t            targetCenter[0] += nodeLayout.x;\\n\\t            targetCenter[1] += nodeLayout.y;\\n\\t            node = node.parentNode;\\n\\t        }\\n\\n\\t        return {\\n\\t            x: layoutInfo.width / 2 - targetCenter[0],\\n\\t            y: layoutInfo.height / 2 - targetCenter[1]\\n\\t        };\\n\\t    }\\n\\n\\t    // Mark nodes visible for prunning when visual coding and rendering.\\n\\t    // Prunning depends on layout and root position, so we have to do it after layout.\\n\\t    function prunning(node, clipRect, viewAbovePath, viewRoot, depth) {\\n\\t        var nodeLayout = node.getLayout();\\n\\t        var nodeInViewAbovePath = viewAbovePath[depth];\\n\\t        var isAboveViewRoot = nodeInViewAbovePath && nodeInViewAbovePath === node;\\n\\n\\t        if (\\n\\t            (nodeInViewAbovePath && !isAboveViewRoot)\\n\\t            || (depth === viewAbovePath.length && node !== viewRoot)\\n\\t        ) {\\n\\t            return;\\n\\t        }\\n\\n\\t        node.setLayout({\\n\\t            // isInView means: viewRoot sub tree + viewAbovePath\\n\\t            isInView: true,\\n\\t            // invisible only means: outside view clip so that the node can not\\n\\t            // see but still layout for animation preparation but not render.\\n\\t            invisible: !isAboveViewRoot && !clipRect.intersect(nodeLayout),\\n\\t            isAboveViewRoot: isAboveViewRoot\\n\\t        }, true);\\n\\n\\t        // Transform to child coordinate.\\n\\t        var childClipRect = new BoundingRect(\\n\\t            clipRect.x - nodeLayout.x,\\n\\t            clipRect.y - nodeLayout.y,\\n\\t            clipRect.width,\\n\\t            clipRect.height\\n\\t        );\\n\\n\\t        each(node.viewChildren || [], function (child) {\\n\\t            prunning(child, childClipRect, viewAbovePath, viewRoot, depth + 1);\\n\\t        });\\n\\t    }\\n\\n\\t    function getUpperLabelHeight(model) {\\n\\t        return model.get(PATH_UPPER_LABEL_SHOW) ? model.get(PATH_UPPER_LABEL_HEIGHT) : 0;\\n\\t    }\\n\\n\\t    module.exports = update;\\n\\n\\n/***/ },\\n/* 205 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var echarts = __webpack_require__(1);\\n\\t    var zrUtil = __webpack_require__(4);\\n\\n\\t    __webpack_require__(206);\\n\\t    __webpack_require__(209);\\n\\n\\t    __webpack_require__(214);\\n\\n\\t    echarts.registerProcessor(__webpack_require__(215));\\n\\n\\t    echarts.registerVisual(zrUtil.curry(\\n\\t        __webpack_require__(121), 'graph', 'circle', null\\n\\t    ));\\n\\t    echarts.registerVisual(__webpack_require__(216));\\n\\t    echarts.registerVisual(__webpack_require__(217));\\n\\n\\t    echarts.registerLayout(__webpack_require__(218));\\n\\t    echarts.registerLayout(__webpack_require__(221));\\n\\t    echarts.registerLayout(__webpack_require__(223));\\n\\n\\t    // Graph view coordinate system\\n\\t    echarts.registerCoordinateSystem('graphView', {\\n\\t        create: __webpack_require__(225)\\n\\t    });\\n\\n\\n/***/ },\\n/* 206 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t'use strict';\\n\\n\\n\\t    var List = __webpack_require__(98);\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var modelUtil = __webpack_require__(5);\\n\\t    var Model = __webpack_require__(12);\\n\\t    var formatUtil = __webpack_require__(6);\\n\\n\\t    var createGraphFromNodeEdge = __webpack_require__(207);\\n\\n\\t    var GraphSeries = __webpack_require__(1).extendSeriesModel({\\n\\n\\t        type: 'series.graph',\\n\\n\\t        init: function (option) {\\n\\t            GraphSeries.superApply(this, 'init', arguments);\\n\\n\\t            // Provide data for legend select\\n\\t            this.legendDataProvider = function () {\\n\\t                return this._categoriesData;\\n\\t            };\\n\\n\\t            this.fillDataTextStyle(option.edges || option.links);\\n\\n\\t            this._updateCategoriesData();\\n\\t        },\\n\\n\\t        mergeOption: function (option) {\\n\\t            GraphSeries.superApply(this, 'mergeOption', arguments);\\n\\n\\t            this.fillDataTextStyle(option.edges || option.links);\\n\\n\\t            this._updateCategoriesData();\\n\\t        },\\n\\n\\t        mergeDefaultAndTheme: function (option) {\\n\\t            GraphSeries.superApply(this, 'mergeDefaultAndTheme', arguments);\\n\\t            modelUtil.defaultEmphasis(option.edgeLabel, modelUtil.LABEL_OPTIONS);\\n\\t        },\\n\\n\\t        getInitialData: function (option, ecModel) {\\n\\t            var edges = option.edges || option.links || [];\\n\\t            var nodes = option.data || option.nodes || [];\\n\\t            var self = this;\\n\\n\\t            if (nodes && edges) {\\n\\t                return createGraphFromNodeEdge(nodes, edges, this, true, beforeLink).data;\\n\\t            }\\n\\n\\t            function beforeLink(nodeData, edgeData) {\\n\\t                // Overwrite nodeData.getItemModel to\\n\\t                nodeData.wrapMethod('getItemModel', function (model) {\\n\\t                    var categoriesModels = self._categoriesModels;\\n\\t                    var categoryIdx = model.getShallow('category');\\n\\t                    var categoryModel = categoriesModels[categoryIdx];\\n\\t                    if (categoryModel) {\\n\\t                        categoryModel.parentModel = model.parentModel;\\n\\t                        model.parentModel = categoryModel;\\n\\t                    }\\n\\t                    return model;\\n\\t                });\\n\\n\\t                var edgeLabelModel = self.getModel('edgeLabel');\\n\\t                // For option `edgeLabel` can be found by label.xxx.xxx on item mode.\\n\\t                var fakeSeriesModel = new Model(\\n\\t                    {label: edgeLabelModel.option},\\n\\t                    edgeLabelModel.parentModel,\\n\\t                    ecModel\\n\\t                );\\n\\n\\t                edgeData.wrapMethod('getItemModel', function (model) {\\n\\t                    model.customizeGetParent(edgeGetParent);\\n\\t                    return model;\\n\\t                });\\n\\n\\t                function edgeGetParent(path) {\\n\\t                    path = this.parsePath(path);\\n\\t                    return (path && path[0] === 'label')\\n\\t                        ? fakeSeriesModel\\n\\t                        : this.parentModel;\\n\\t                }\\n\\t            }\\n\\t        },\\n\\n\\t        /**\\n\\t         * @return {module:echarts/data/Graph}\\n\\t         */\\n\\t        getGraph: function () {\\n\\t            return this.getData().graph;\\n\\t        },\\n\\n\\t        /**\\n\\t         * @return {module:echarts/data/List}\\n\\t         */\\n\\t        getEdgeData: function () {\\n\\t            return this.getGraph().edgeData;\\n\\t        },\\n\\n\\t        /**\\n\\t         * @return {module:echarts/data/List}\\n\\t         */\\n\\t        getCategoriesData: function () {\\n\\t            return this._categoriesData;\\n\\t        },\\n\\n\\t        /**\\n\\t         * @override\\n\\t         */\\n\\t        formatTooltip: function (dataIndex, multipleSeries, dataType) {\\n\\t            if (dataType === 'edge') {\\n\\t                var nodeData = this.getData();\\n\\t                var params = this.getDataParams(dataIndex, dataType);\\n\\t                var edge = nodeData.graph.getEdgeByIndex(dataIndex);\\n\\t                var sourceName = nodeData.getName(edge.node1.dataIndex);\\n\\t                var targetName = nodeData.getName(edge.node2.dataIndex);\\n\\n\\t                var html = [];\\n\\t                sourceName != null && html.push(sourceName);\\n\\t                targetName != null && html.push(targetName);\\n\\t                html = formatUtil.encodeHTML(html.join(' > '));\\n\\n\\t                if (params.value) {\\n\\t                    html += ' : ' + formatUtil.encodeHTML(params.value);\\n\\t                }\\n\\t                return html;\\n\\t            }\\n\\t            else { // dataType === 'node' or empty\\n\\t                return GraphSeries.superApply(this, 'formatTooltip', arguments);\\n\\t            }\\n\\t        },\\n\\n\\t        _updateCategoriesData: function () {\\n\\t            var categories = zrUtil.map(this.option.categories || [], function (category) {\\n\\t                // Data must has value\\n\\t                return category.value != null ? category : zrUtil.extend({\\n\\t                    value: 0\\n\\t                }, category);\\n\\t            });\\n\\t            var categoriesData = new List(['value'], this);\\n\\t            categoriesData.initData(categories);\\n\\n\\t            this._categoriesData = categoriesData;\\n\\n\\t            this._categoriesModels = categoriesData.mapArray(function (idx) {\\n\\t                return categoriesData.getItemModel(idx, true);\\n\\t            });\\n\\t        },\\n\\n\\t        setZoom: function (zoom) {\\n\\t            this.option.zoom = zoom;\\n\\t        },\\n\\n\\t        setCenter: function (center) {\\n\\t            this.option.center = center;\\n\\t        },\\n\\n\\t        isAnimationEnabled: function () {\\n\\t            return GraphSeries.superCall(this, 'isAnimationEnabled')\\n\\t                // Not enable animation when do force layout\\n\\t                && !(this.get('layout') === 'force' && this.get('force.layoutAnimation'));\\n\\t        },\\n\\n\\t        defaultOption: {\\n\\t            zlevel: 0,\\n\\t            z: 2,\\n\\n\\t            coordinateSystem: 'view',\\n\\n\\t            // Default option for all coordinate systems\\n\\t            // xAxisIndex: 0,\\n\\t            // yAxisIndex: 0,\\n\\t            // polarIndex: 0,\\n\\t            // geoIndex: 0,\\n\\n\\t            legendHoverLink: true,\\n\\n\\t            hoverAnimation: true,\\n\\n\\t            layout: null,\\n\\n\\t            focusNodeAdjacency: false,\\n\\n\\t            // Configuration of circular layout\\n\\t            circular: {\\n\\t                rotateLabel: false\\n\\t            },\\n\\t            // Configuration of force directed layout\\n\\t            force: {\\n\\t                initLayout: null,\\n\\t                // Node repulsion. Can be an array to represent range.\\n\\t                repulsion: [0, 50],\\n\\t                gravity: 0.1,\\n\\n\\t                // Edge length. Can be an array to represent range.\\n\\t                edgeLength: 30,\\n\\n\\t                layoutAnimation: true\\n\\t            },\\n\\n\\t            left: 'center',\\n\\t            top: 'center',\\n\\t            // right: null,\\n\\t            // bottom: null,\\n\\t            // width: '80%',\\n\\t            // height: '80%',\\n\\n\\t            symbol: 'circle',\\n\\t            symbolSize: 10,\\n\\n\\t            edgeSymbol: ['none', 'none'],\\n\\t            edgeSymbolSize: 10,\\n\\t            edgeLabel: {\\n\\t                normal: {\\n\\t                    position: 'middle'\\n\\t                },\\n\\t                emphasis: {}\\n\\t            },\\n\\n\\t            draggable: false,\\n\\n\\t            roam: false,\\n\\n\\t            // Default on center of graph\\n\\t            center: null,\\n\\n\\t            zoom: 1,\\n\\t            // Symbol size scale ratio in roam\\n\\t            nodeScaleRatio: 0.6,\\n\\t            // cursor: null,\\n\\n\\t            // categories: [],\\n\\n\\t            // data: []\\n\\t            // Or\\n\\t            // nodes: []\\n\\t            //\\n\\t            // links: []\\n\\t            // Or\\n\\t            // edges: []\\n\\n\\t            label: {\\n\\t                normal: {\\n\\t                    show: false,\\n\\t                    formatter: '{b}'\\n\\t                },\\n\\t                emphasis: {\\n\\t                    show: true\\n\\t                }\\n\\t            },\\n\\n\\t            itemStyle: {\\n\\t                normal: {},\\n\\t                emphasis: {}\\n\\t            },\\n\\n\\t            lineStyle: {\\n\\t                normal: {\\n\\t                    color: '#aaa',\\n\\t                    width: 1,\\n\\t                    curveness: 0,\\n\\t                    opacity: 0.5\\n\\t                },\\n\\t                emphasis: {}\\n\\t            }\\n\\t        }\\n\\t    });\\n\\n\\t    module.exports = GraphSeries;\\n\\n\\n/***/ },\\n/* 207 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var List = __webpack_require__(98);\\n\\t    var Graph = __webpack_require__(208);\\n\\t    var linkList = __webpack_require__(196);\\n\\t    var completeDimensions = __webpack_require__(110);\\n\\t    var CoordinateSystem = __webpack_require__(76);\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var createListFromArray = __webpack_require__(109);\\n\\n\\t    module.exports = function (nodes, edges, hostModel, directed, beforeLink) {\\n\\t        var graph = new Graph(directed);\\n\\t        for (var i = 0; i < nodes.length; i++) {\\n\\t            graph.addNode(zrUtil.retrieve(\\n\\t                // Id, name, dataIndex\\n\\t                nodes[i].id, nodes[i].name, i\\n\\t            ), i);\\n\\t        }\\n\\n\\t        var linkNameList = [];\\n\\t        var validEdges = [];\\n\\t        var linkCount = 0;\\n\\t        for (var i = 0; i < edges.length; i++) {\\n\\t            var link = edges[i];\\n\\t            var source = link.source;\\n\\t            var target = link.target;\\n\\t            // addEdge may fail when source or target not exists\\n\\t            if (graph.addEdge(source, target, linkCount)) {\\n\\t                validEdges.push(link);\\n\\t                linkNameList.push(zrUtil.retrieve(link.id, source + ' > ' + target));\\n\\t                linkCount++;\\n\\t            }\\n\\t        }\\n\\n\\t        var coordSys = hostModel.get('coordinateSystem');\\n\\t        var nodeData;\\n\\t        if (coordSys === 'cartesian2d' || coordSys === 'polar') {\\n\\t            nodeData = createListFromArray(nodes, hostModel, hostModel.ecModel);\\n\\t        }\\n\\t        else {\\n\\t            // FIXME\\n\\t            var coordSysCtor = CoordinateSystem.get(coordSys);\\n\\t            // FIXME\\n\\t            var dimensionNames = completeDimensions(\\n\\t                ((coordSysCtor && coordSysCtor.type !== 'view') ? (coordSysCtor.dimensions || []) : []).concat(['value']),\\n\\t                nodes\\n\\t            );\\n\\t            nodeData = new List(dimensionNames, hostModel);\\n\\t            nodeData.initData(nodes);\\n\\t        }\\n\\n\\t        var edgeData = new List(['value'], hostModel);\\n\\t        edgeData.initData(validEdges, linkNameList);\\n\\n\\t        beforeLink && beforeLink(nodeData, edgeData);\\n\\n\\t        linkList({\\n\\t            mainData: nodeData,\\n\\t            struct: graph,\\n\\t            structAttr: 'graph',\\n\\t            datas: {node: nodeData, edge: edgeData},\\n\\t            datasAttr: {node: 'data', edge: 'edgeData'}\\n\\t        });\\n\\n\\t        // Update dataIndex of nodes and edges because invalid edge may be removed\\n\\t        graph.update();\\n\\n\\t        return graph;\\n\\t    };\\n\\n\\n/***/ },\\n/* 208 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t'use strict';\\n\\t/**\\n\\t * Graph data structure\\n\\t *\\n\\t * @module echarts/data/Graph\\n\\t * @author Yi Shen(https://www.github.com/pissang)\\n\\t */\\n\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\n\\t    // id may be function name of Object, add a prefix to avoid this problem.\\n\\t    function generateNodeKey (id) {\\n\\t        return '_EC_' + id;\\n\\t    }\\n\\t    /**\\n\\t     * @alias module:echarts/data/Graph\\n\\t     * @constructor\\n\\t     * @param {boolean} directed\\n\\t     */\\n\\t    var Graph = function(directed) {\\n\\t        /**\\n\\t         * 是否是有向图\\n\\t         * @type {boolean}\\n\\t         * @private\\n\\t         */\\n\\t        this._directed = directed || false;\\n\\n\\t        /**\\n\\t         * @type {Array.<module:echarts/data/Graph.Node>}\\n\\t         * @readOnly\\n\\t         */\\n\\t        this.nodes = [];\\n\\n\\t        /**\\n\\t         * @type {Array.<module:echarts/data/Graph.Edge>}\\n\\t         * @readOnly\\n\\t         */\\n\\t        this.edges = [];\\n\\n\\t        /**\\n\\t         * @type {Object.<string, module:echarts/data/Graph.Node>}\\n\\t         * @private\\n\\t         */\\n\\t        this._nodesMap = {};\\n\\t        /**\\n\\t         * @type {Object.<string, module:echarts/data/Graph.Edge>}\\n\\t         * @private\\n\\t         */\\n\\t        this._edgesMap = {};\\n\\n\\t        /**\\n\\t         * @type {module:echarts/data/List}\\n\\t         * @readOnly\\n\\t         */\\n\\t        this.data;\\n\\n\\t        /**\\n\\t         * @type {module:echarts/data/List}\\n\\t         * @readOnly\\n\\t         */\\n\\t        this.edgeData;\\n\\t    };\\n\\n\\t    var graphProto = Graph.prototype;\\n\\t    /**\\n\\t     * @type {string}\\n\\t     */\\n\\t    graphProto.type = 'graph';\\n\\n\\t    /**\\n\\t     * If is directed graph\\n\\t     * @return {boolean}\\n\\t     */\\n\\t    graphProto.isDirected = function () {\\n\\t        return this._directed;\\n\\t    };\\n\\n\\t    /**\\n\\t     * Add a new node\\n\\t     * @param {string} id\\n\\t     * @param {number} [dataIndex]\\n\\t     */\\n\\t    graphProto.addNode = function (id, dataIndex) {\\n\\t        id = id || ('' + dataIndex);\\n\\n\\t        var nodesMap = this._nodesMap;\\n\\n\\t        if (nodesMap[generateNodeKey(id)]) {\\n\\t            if (true) {\\n\\t                console.error('Graph nodes have duplicate name or id');\\n\\t            }\\n\\t            return;\\n\\t        }\\n\\n\\t        var node = new Node(id, dataIndex);\\n\\t        node.hostGraph = this;\\n\\n\\t        this.nodes.push(node);\\n\\n\\t        nodesMap[generateNodeKey(id)] = node;\\n\\t        return node;\\n\\t    };\\n\\n\\t    /**\\n\\t     * Get node by data index\\n\\t     * @param  {number} dataIndex\\n\\t     * @return {module:echarts/data/Graph~Node}\\n\\t     */\\n\\t    graphProto.getNodeByIndex = function (dataIndex) {\\n\\t        var rawIdx = this.data.getRawIndex(dataIndex);\\n\\t        return this.nodes[rawIdx];\\n\\t    };\\n\\t    /**\\n\\t     * Get node by id\\n\\t     * @param  {string} id\\n\\t     * @return {module:echarts/data/Graph.Node}\\n\\t     */\\n\\t    graphProto.getNodeById = function (id) {\\n\\t        return this._nodesMap[generateNodeKey(id)];\\n\\t    };\\n\\n\\t    /**\\n\\t     * Add a new edge\\n\\t     * @param {number|string|module:echarts/data/Graph.Node} n1\\n\\t     * @param {number|string|module:echarts/data/Graph.Node} n2\\n\\t     * @param {number} [dataIndex=-1]\\n\\t     * @return {module:echarts/data/Graph.Edge}\\n\\t     */\\n\\t    graphProto.addEdge = function (n1, n2, dataIndex) {\\n\\t        var nodesMap = this._nodesMap;\\n\\t        var edgesMap = this._edgesMap;\\n\\n\\t        // PNEDING\\n\\t        if (typeof n1 === 'number') {\\n\\t            n1 = this.nodes[n1];\\n\\t        }\\n\\t        if (typeof n2 === 'number') {\\n\\t            n2 = this.nodes[n2];\\n\\t        }\\n\\n\\t        if (!(n1 instanceof Node)) {\\n\\t            n1 = nodesMap[generateNodeKey(n1)];\\n\\t        }\\n\\t        if (!(n2 instanceof Node)) {\\n\\t            n2 = nodesMap[generateNodeKey(n2)];\\n\\t        }\\n\\t        if (!n1 || !n2) {\\n\\t            return;\\n\\t        }\\n\\n\\t        var key = n1.id + '-' + n2.id;\\n\\t        // PENDING\\n\\t        if (edgesMap[key]) {\\n\\t            return;\\n\\t        }\\n\\n\\t        var edge = new Edge(n1, n2, dataIndex);\\n\\t        edge.hostGraph = this;\\n\\n\\t        if (this._directed) {\\n\\t            n1.outEdges.push(edge);\\n\\t            n2.inEdges.push(edge);\\n\\t        }\\n\\t        n1.edges.push(edge);\\n\\t        if (n1 !== n2) {\\n\\t            n2.edges.push(edge);\\n\\t        }\\n\\n\\t        this.edges.push(edge);\\n\\t        edgesMap[key] = edge;\\n\\n\\t        return edge;\\n\\t    };\\n\\n\\t    /**\\n\\t     * Get edge by data index\\n\\t     * @param  {number} dataIndex\\n\\t     * @return {module:echarts/data/Graph~Node}\\n\\t     */\\n\\t    graphProto.getEdgeByIndex = function (dataIndex) {\\n\\t        var rawIdx = this.edgeData.getRawIndex(dataIndex);\\n\\t        return this.edges[rawIdx];\\n\\t    };\\n\\t    /**\\n\\t     * Get edge by two linked nodes\\n\\t     * @param  {module:echarts/data/Graph.Node|string} n1\\n\\t     * @param  {module:echarts/data/Graph.Node|string} n2\\n\\t     * @return {module:echarts/data/Graph.Edge}\\n\\t     */\\n\\t    graphProto.getEdge = function (n1, n2) {\\n\\t        if (n1 instanceof Node) {\\n\\t            n1 = n1.id;\\n\\t        }\\n\\t        if (n2 instanceof Node) {\\n\\t            n2 = n2.id;\\n\\t        }\\n\\n\\t        var edgesMap = this._edgesMap;\\n\\n\\t        if (this._directed) {\\n\\t            return edgesMap[n1 + '-' + n2];\\n\\t        } else {\\n\\t            return edgesMap[n1 + '-' + n2]\\n\\t                || edgesMap[n2 + '-' + n1];\\n\\t        }\\n\\t    };\\n\\n\\t    /**\\n\\t     * Iterate all nodes\\n\\t     * @param  {Function} cb\\n\\t     * @param  {*} [context]\\n\\t     */\\n\\t    graphProto.eachNode = function (cb, context) {\\n\\t        var nodes = this.nodes;\\n\\t        var len = nodes.length;\\n\\t        for (var i = 0; i < len; i++) {\\n\\t            if (nodes[i].dataIndex >= 0) {\\n\\t                cb.call(context, nodes[i], i);\\n\\t            }\\n\\t        }\\n\\t    };\\n\\n\\t    /**\\n\\t     * Iterate all edges\\n\\t     * @param  {Function} cb\\n\\t     * @param  {*} [context]\\n\\t     */\\n\\t    graphProto.eachEdge = function (cb, context) {\\n\\t        var edges = this.edges;\\n\\t        var len = edges.length;\\n\\t        for (var i = 0; i < len; i++) {\\n\\t            if (edges[i].dataIndex >= 0\\n\\t                && edges[i].node1.dataIndex >= 0\\n\\t                && edges[i].node2.dataIndex >= 0\\n\\t            ) {\\n\\t                cb.call(context, edges[i], i);\\n\\t            }\\n\\t        }\\n\\t    };\\n\\n\\t    /**\\n\\t     * Breadth first traverse\\n\\t     * @param {Function} cb\\n\\t     * @param {module:echarts/data/Graph.Node} startNode\\n\\t     * @param {string} [direction='none'] 'none'|'in'|'out'\\n\\t     * @param {*} [context]\\n\\t     */\\n\\t    graphProto.breadthFirstTraverse = function (\\n\\t        cb, startNode, direction, context\\n\\t    ) {\\n\\t        if (!(startNode instanceof Node)) {\\n\\t            startNode = this._nodesMap[generateNodeKey(startNode)];\\n\\t        }\\n\\t        if (!startNode) {\\n\\t            return;\\n\\t        }\\n\\n\\t        var edgeType = direction === 'out'\\n\\t            ? 'outEdges' : (direction === 'in' ? 'inEdges' : 'edges');\\n\\n\\t        for (var i = 0; i < this.nodes.length; i++) {\\n\\t            this.nodes[i].__visited = false;\\n\\t        }\\n\\n\\t        if (cb.call(context, startNode, null)) {\\n\\t            return;\\n\\t        }\\n\\n\\t        var queue = [startNode];\\n\\t        while (queue.length) {\\n\\t            var currentNode = queue.shift();\\n\\t            var edges = currentNode[edgeType];\\n\\n\\t            for (var i = 0; i < edges.length; i++) {\\n\\t                var e = edges[i];\\n\\t                var otherNode = e.node1 === currentNode\\n\\t                    ? e.node2 : e.node1;\\n\\t                if (!otherNode.__visited) {\\n\\t                    if (cb.call(context, otherNode, currentNode)) {\\n\\t                        // Stop traversing\\n\\t                        return;\\n\\t                    }\\n\\t                    queue.push(otherNode);\\n\\t                    otherNode.__visited = true;\\n\\t                }\\n\\t            }\\n\\t        }\\n\\t    };\\n\\n\\t    // TODO\\n\\t    // graphProto.depthFirstTraverse = function (\\n\\t    //     cb, startNode, direction, context\\n\\t    // ) {\\n\\n\\t    // };\\n\\n\\t    // Filter update\\n\\t    graphProto.update = function () {\\n\\t        var data = this.data;\\n\\t        var edgeData = this.edgeData;\\n\\t        var nodes = this.nodes;\\n\\t        var edges = this.edges;\\n\\n\\t        for (var i = 0, len = nodes.length; i < len; i++) {\\n\\t            nodes[i].dataIndex = -1;\\n\\t        }\\n\\t        for (var i = 0, len = data.count(); i < len; i++) {\\n\\t            nodes[data.getRawIndex(i)].dataIndex = i;\\n\\t        }\\n\\n\\t        edgeData.filterSelf(function (idx) {\\n\\t            var edge = edges[edgeData.getRawIndex(idx)];\\n\\t            return edge.node1.dataIndex >= 0 && edge.node2.dataIndex >= 0;\\n\\t        });\\n\\n\\t        // Update edge\\n\\t        for (var i = 0, len = edges.length; i < len; i++) {\\n\\t            edges[i].dataIndex = -1;\\n\\t        }\\n\\t        for (var i = 0, len = edgeData.count(); i < len; i++) {\\n\\t            edges[edgeData.getRawIndex(i)].dataIndex = i;\\n\\t        }\\n\\t    };\\n\\n\\t    /**\\n\\t     * @return {module:echarts/data/Graph}\\n\\t     */\\n\\t    graphProto.clone = function () {\\n\\t        var graph = new Graph(this._directed);\\n\\t        var nodes = this.nodes;\\n\\t        var edges = this.edges;\\n\\t        for (var i = 0; i < nodes.length; i++) {\\n\\t            graph.addNode(nodes[i].id, nodes[i].dataIndex);\\n\\t        }\\n\\t        for (var i = 0; i < edges.length; i++) {\\n\\t            var e = edges[i];\\n\\t            graph.addEdge(e.node1.id, e.node2.id, e.dataIndex);\\n\\t        }\\n\\t        return graph;\\n\\t    };\\n\\n\\n\\t    /**\\n\\t     * @alias module:echarts/data/Graph.Node\\n\\t     */\\n\\t    function Node(id, dataIndex) {\\n\\t        /**\\n\\t        * @type {string}\\n\\t        */\\n\\t        this.id = id == null ? '' : id;\\n\\n\\t        /**\\n\\t        * @type {Array.<module:echarts/data/Graph.Edge>}\\n\\t        */\\n\\t        this.inEdges = [];\\n\\t        /**\\n\\t        * @type {Array.<module:echarts/data/Graph.Edge>}\\n\\t        */\\n\\t        this.outEdges = [];\\n\\t        /**\\n\\t        * @type {Array.<module:echarts/data/Graph.Edge>}\\n\\t        */\\n\\t        this.edges = [];\\n\\t        /**\\n\\t         * @type {module:echarts/data/Graph}\\n\\t         */\\n\\t        this.hostGraph;\\n\\n\\t        /**\\n\\t         * @type {number}\\n\\t         */\\n\\t        this.dataIndex = dataIndex == null ? -1 : dataIndex;\\n\\t    }\\n\\n\\t    Node.prototype = {\\n\\n\\t        constructor: Node,\\n\\n\\t        /**\\n\\t         * @return {number}\\n\\t         */\\n\\t        degree: function () {\\n\\t            return this.edges.length;\\n\\t        },\\n\\n\\t        /**\\n\\t         * @return {number}\\n\\t         */\\n\\t        inDegree: function () {\\n\\t            return this.inEdges.length;\\n\\t        },\\n\\n\\t        /**\\n\\t        * @return {number}\\n\\t        */\\n\\t        outDegree: function () {\\n\\t            return this.outEdges.length;\\n\\t        },\\n\\n\\t        /**\\n\\t         * @param {string} [path]\\n\\t         * @return {module:echarts/model/Model}\\n\\t         */\\n\\t        getModel: function (path) {\\n\\t            if (this.dataIndex < 0) {\\n\\t                return;\\n\\t            }\\n\\t            var graph = this.hostGraph;\\n\\t            var itemModel = graph.data.getItemModel(this.dataIndex);\\n\\n\\t            return itemModel.getModel(path);\\n\\t        }\\n\\t    };\\n\\n\\t    /**\\n\\t     * 图边\\n\\t     * @alias module:echarts/data/Graph.Edge\\n\\t     * @param {module:echarts/data/Graph.Node} n1\\n\\t     * @param {module:echarts/data/Graph.Node} n2\\n\\t     * @param {number} [dataIndex=-1]\\n\\t     */\\n\\t    function Edge(n1, n2, dataIndex) {\\n\\n\\t        /**\\n\\t         * 节点1，如果是有向图则为源节点\\n\\t         * @type {module:echarts/data/Graph.Node}\\n\\t         */\\n\\t        this.node1 = n1;\\n\\n\\t        /**\\n\\t         * 节点2，如果是有向图则为目标节点\\n\\t         * @type {module:echarts/data/Graph.Node}\\n\\t         */\\n\\t        this.node2 = n2;\\n\\n\\t        this.dataIndex = dataIndex == null ? -1 : dataIndex;\\n\\t    }\\n\\n\\t    /**\\n\\t     * @param {string} [path]\\n\\t     * @return {module:echarts/model/Model}\\n\\t     */\\n\\t     Edge.prototype.getModel = function (path) {\\n\\t        if (this.dataIndex < 0) {\\n\\t            return;\\n\\t        }\\n\\t        var graph = this.hostGraph;\\n\\t        var itemModel = graph.edgeData.getItemModel(this.dataIndex);\\n\\n\\t        return itemModel.getModel(path);\\n\\t    };\\n\\n\\t    var createGraphDataProxyMixin = function (hostName, dataName) {\\n\\t        return {\\n\\t            /**\\n\\t             * @param {string=} [dimension='value'] Default 'value'. can be 'a', 'b', 'c', 'd', 'e'.\\n\\t             * @return {number}\\n\\t             */\\n\\t            getValue: function (dimension) {\\n\\t                var data = this[hostName][dataName];\\n\\t                return data.get(data.getDimension(dimension || 'value'), this.dataIndex);\\n\\t            },\\n\\n\\t            /**\\n\\t             * @param {Object|string} key\\n\\t             * @param {*} [value]\\n\\t             */\\n\\t            setVisual: function (key, value) {\\n\\t                this.dataIndex >= 0\\n\\t                    && this[hostName][dataName].setItemVisual(this.dataIndex, key, value);\\n\\t            },\\n\\n\\t            /**\\n\\t             * @param {string} key\\n\\t             * @return {boolean}\\n\\t             */\\n\\t            getVisual: function (key, ignoreParent) {\\n\\t                return this[hostName][dataName].getItemVisual(this.dataIndex, key, ignoreParent);\\n\\t            },\\n\\n\\t            /**\\n\\t             * @param {Object} layout\\n\\t             * @return {boolean} [merge=false]\\n\\t             */\\n\\t            setLayout: function (layout, merge) {\\n\\t                this.dataIndex >= 0\\n\\t                    && this[hostName][dataName].setItemLayout(this.dataIndex, layout, merge);\\n\\t            },\\n\\n\\t            /**\\n\\t             * @return {Object}\\n\\t             */\\n\\t            getLayout: function () {\\n\\t                return this[hostName][dataName].getItemLayout(this.dataIndex);\\n\\t            },\\n\\n\\t            /**\\n\\t             * @return {module:zrender/Element}\\n\\t             */\\n\\t            getGraphicEl: function () {\\n\\t                return this[hostName][dataName].getItemGraphicEl(this.dataIndex);\\n\\t            },\\n\\n\\t            /**\\n\\t             * @return {number}\\n\\t             */\\n\\t            getRawIndex: function () {\\n\\t                return this[hostName][dataName].getRawIndex(this.dataIndex);\\n\\t            }\\n\\t        };\\n\\t    };\\n\\n\\t    zrUtil.mixin(Node, createGraphDataProxyMixin('hostGraph', 'data'));\\n\\t    zrUtil.mixin(Edge, createGraphDataProxyMixin('hostGraph', 'edgeData'));\\n\\n\\t    Graph.Node = Node;\\n\\t    Graph.Edge = Edge;\\n\\n\\t    module.exports = Graph;\\n\\n\\n/***/ },\\n/* 209 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\n\\t    var SymbolDraw = __webpack_require__(116);\\n\\t    var LineDraw = __webpack_require__(210);\\n\\t    var RoamController = __webpack_require__(183);\\n\\t    var roamHelper = __webpack_require__(185);\\n\\t    var cursorHelper = __webpack_require__(186);\\n\\n\\t    var graphic = __webpack_require__(18);\\n\\t    var adjustEdge = __webpack_require__(213);\\n\\t    var zrUtil = __webpack_require__(4);\\n\\n\\t    var nodeOpacityPath = ['itemStyle', 'normal', 'opacity'];\\n\\t    var lineOpacityPath = ['lineStyle', 'normal', 'opacity'];\\n\\n\\t    function getItemOpacity(item, opacityPath) {\\n\\t        return item.getVisual('opacity') || item.getModel().get(opacityPath);\\n\\t    }\\n\\n\\t    __webpack_require__(1).extendChartView({\\n\\n\\t        type: 'graph',\\n\\n\\t        init: function (ecModel, api) {\\n\\t            var symbolDraw = new SymbolDraw();\\n\\t            var lineDraw = new LineDraw();\\n\\t            var group = this.group;\\n\\n\\t            this._controller = new RoamController(api.getZr());\\n\\t            this._controllerHost = {target: group};\\n\\n\\t            group.add(symbolDraw.group);\\n\\t            group.add(lineDraw.group);\\n\\n\\t            this._symbolDraw = symbolDraw;\\n\\t            this._lineDraw = lineDraw;\\n\\n\\t            this._firstRender = true;\\n\\t        },\\n\\n\\t        render: function (seriesModel, ecModel, api) {\\n\\t            var coordSys = seriesModel.coordinateSystem;\\n\\n\\t            this._model = seriesModel;\\n\\t            this._nodeScaleRatio = seriesModel.get('nodeScaleRatio');\\n\\n\\t            var symbolDraw = this._symbolDraw;\\n\\t            var lineDraw = this._lineDraw;\\n\\n\\t            var group = this.group;\\n\\n\\t            if (coordSys.type === 'view') {\\n\\t                var groupNewProp = {\\n\\t                    position: coordSys.position,\\n\\t                    scale: coordSys.scale\\n\\t                };\\n\\t                if (this._firstRender) {\\n\\t                    group.attr(groupNewProp);\\n\\t                }\\n\\t                else {\\n\\t                    graphic.updateProps(group, groupNewProp, seriesModel);\\n\\t                }\\n\\t            }\\n\\t            // Fix edge contact point with node\\n\\t            adjustEdge(seriesModel.getGraph(), this._getNodeGlobalScale(seriesModel));\\n\\n\\t            var data = seriesModel.getData();\\n\\t            symbolDraw.updateData(data);\\n\\n\\t            var edgeData = seriesModel.getEdgeData();\\n\\t            lineDraw.updateData(edgeData);\\n\\n\\t            this._updateNodeAndLinkScale();\\n\\n\\t            this._updateController(seriesModel, ecModel, api);\\n\\n\\t            clearTimeout(this._layoutTimeout);\\n\\t            var forceLayout = seriesModel.forceLayout;\\n\\t            var layoutAnimation = seriesModel.get('force.layoutAnimation');\\n\\t            if (forceLayout) {\\n\\t                this._startForceLayoutIteration(forceLayout, layoutAnimation);\\n\\t            }\\n\\t            data.eachItemGraphicEl(function (el, idx) {\\n\\t                var itemModel = data.getItemModel(idx);\\n\\t                // Update draggable\\n\\t                el.off('drag').off('dragend');\\n\\t                var draggable = data.getItemModel(idx).get('draggable');\\n\\t                if (draggable) {\\n\\t                    el.on('drag', function () {\\n\\t                        if (forceLayout) {\\n\\t                            forceLayout.warmUp();\\n\\t                            !this._layouting\\n\\t                                && this._startForceLayoutIteration(forceLayout, layoutAnimation);\\n\\t                            forceLayout.setFixed(idx);\\n\\t                            // Write position back to layout\\n\\t                            data.setItemLayout(idx, el.position);\\n\\t                        }\\n\\t                    }, this).on('dragend', function () {\\n\\t                        if (forceLayout) {\\n\\t                            forceLayout.setUnfixed(idx);\\n\\t                        }\\n\\t                    }, this);\\n\\t                }\\n\\t                el.setDraggable(draggable && forceLayout);\\n\\n\\t                el.off('mouseover', el.__focusNodeAdjacency);\\n\\t                el.off('mouseout', el.__unfocusNodeAdjacency);\\n\\n\\t                if (itemModel.get('focusNodeAdjacency')) {\\n\\t                    el.on('mouseover', el.__focusNodeAdjacency = function () {\\n\\t                        api.dispatchAction({\\n\\t                            type: 'focusNodeAdjacency',\\n\\t                            seriesId: seriesModel.id,\\n\\t                            dataIndex: el.dataIndex\\n\\t                        });\\n\\t                    });\\n\\t                    el.on('mouseout', el.__unfocusNodeAdjacency = function () {\\n\\t                        api.dispatchAction({\\n\\t                            type: 'unfocusNodeAdjacency',\\n\\t                            seriesId: seriesModel.id\\n\\t                        });\\n\\t                    });\\n\\t                }\\n\\n\\t            }, this);\\n\\n\\t            var circularRotateLabel = seriesModel.get('layout') === 'circular' && seriesModel.get('circular.rotateLabel');\\n\\t            var cx = data.getLayout('cx');\\n\\t            var cy = data.getLayout('cy');\\n\\t            data.eachItemGraphicEl(function (el, idx) {\\n\\t                var symbolPath = el.getSymbolPath();\\n\\t                if (circularRotateLabel) {\\n\\t                    var pos = data.getItemLayout(idx);\\n\\t                    var rad = Math.atan2(pos[1] - cy, pos[0] - cx);\\n\\t                    if (rad < 0) {\\n\\t                        rad = Math.PI * 2 + rad;\\n\\t                    }\\n\\t                    var isLeft = pos[0] < cx;\\n\\t                    if (isLeft) {\\n\\t                        rad = rad - Math.PI;\\n\\t                    }\\n\\t                    var textPosition = isLeft ? 'left' : 'right';\\n\\t                    symbolPath.setStyle({\\n\\t                        textRotation: rad,\\n\\t                        textPosition: textPosition\\n\\t                    });\\n\\t                    symbolPath.hoverStyle && (symbolPath.hoverStyle.textPosition = textPosition);\\n\\t                }\\n\\t                else {\\n\\t                    symbolPath.setStyle({\\n\\t                        textRotation: 0\\n\\t                    });\\n\\t                }\\n\\t            });\\n\\n\\t            this._firstRender = false;\\n\\t        },\\n\\n\\t        dispose: function () {\\n\\t            this._controller && this._controller.dispose();\\n\\t            this._controllerHost = {};\\n\\t        },\\n\\n\\t        focusNodeAdjacency: function (seriesModel, ecModel, api, payload) {\\n\\t            var data = this._model.getData();\\n\\t            var dataIndex = payload.dataIndex;\\n\\t            var el = data.getItemGraphicEl(dataIndex);\\n\\n\\t            if (!el) {\\n\\t                return;\\n\\t            }\\n\\n\\t            var graph = data.graph;\\n\\t            var dataType = el.dataType;\\n\\n\\t            function fadeOutItem(item, opacityPath) {\\n\\t                var opacity = getItemOpacity(item, opacityPath);\\n\\t                var el = item.getGraphicEl();\\n\\t                if (opacity == null) {\\n\\t                    opacity = 1;\\n\\t                }\\n\\n\\t                el.traverse(function (child) {\\n\\t                    child.trigger('normal');\\n\\t                    if (child.type !== 'group') {\\n\\t                        child.setStyle('opacity', opacity * 0.1);\\n\\t                    }\\n\\t                });\\n\\t            }\\n\\n\\t            function fadeInItem(item, opacityPath) {\\n\\t                var opacity = getItemOpacity(item, opacityPath);\\n\\t                var el = item.getGraphicEl();\\n\\n\\t                el.traverse(function (child) {\\n\\t                    child.trigger('emphasis');\\n\\t                    if (child.type !== 'group') {\\n\\t                        child.setStyle('opacity', opacity);\\n\\t                    }\\n\\t                });\\n\\t            }\\n\\t            if (dataIndex !== null && dataType !== 'edge') {\\n\\t                graph.eachNode(function (node) {\\n\\t                    fadeOutItem(node, nodeOpacityPath);\\n\\t                });\\n\\t                graph.eachEdge(function (edge) {\\n\\t                    fadeOutItem(edge, lineOpacityPath);\\n\\t                });\\n\\n\\t                var node = graph.getNodeByIndex(dataIndex);\\n\\t                fadeInItem(node, nodeOpacityPath);\\n\\t                zrUtil.each(node.edges, function (edge) {\\n\\t                    if (edge.dataIndex < 0) {\\n\\t                        return;\\n\\t                    }\\n\\t                    fadeInItem(edge, lineOpacityPath);\\n\\t                    fadeInItem(edge.node1, nodeOpacityPath);\\n\\t                    fadeInItem(edge.node2, nodeOpacityPath);\\n\\t                });\\n\\t            }\\n\\t        },\\n\\n\\t        unfocusNodeAdjacency: function (seriesModel, ecModel, api, payload) {\\n\\t            var graph = this._model.getData().graph;\\n\\t            graph.eachNode(function (node) {\\n\\t                var opacity = getItemOpacity(node, nodeOpacityPath);\\n\\t                node.getGraphicEl().traverse(function (child) {\\n\\t                    child.trigger('normal');\\n\\t                    if (child.type !== 'group') {\\n\\t                        child.setStyle('opacity', opacity);\\n\\t                    }\\n\\t                });\\n\\t            });\\n\\t            graph.eachEdge(function (edge) {\\n\\t                var opacity = getItemOpacity(edge, lineOpacityPath);\\n\\t                edge.getGraphicEl().traverse(function (child) {\\n\\t                    child.trigger('normal');\\n\\t                    if (child.type !== 'group') {\\n\\t                        child.setStyle('opacity', opacity);\\n\\t                    }\\n\\t                });\\n\\t            });\\n\\t        },\\n\\n\\t        _startForceLayoutIteration: function (forceLayout, layoutAnimation) {\\n\\t            var self = this;\\n\\t            (function step() {\\n\\t                forceLayout.step(function (stopped) {\\n\\t                    self.updateLayout(self._model);\\n\\t                    (self._layouting = !stopped) && (\\n\\t                        layoutAnimation\\n\\t                            ? (self._layoutTimeout = setTimeout(step, 16))\\n\\t                            : step()\\n\\t                    );\\n\\t                });\\n\\t            })();\\n\\t        },\\n\\n\\t        _updateController: function (seriesModel, ecModel, api) {\\n\\t            var controller = this._controller;\\n\\t            var controllerHost = this._controllerHost;\\n\\t            var group = this.group;\\n\\n\\t            controller.setPointerChecker(function (e, x, y) {\\n\\t                var rect = group.getBoundingRect();\\n\\t                rect.applyTransform(group.transform);\\n\\t                return rect.contain(x, y)\\n\\t                    && !cursorHelper.onIrrelevantElement(e, api, seriesModel);\\n\\t            });\\n\\n\\t            if (seriesModel.coordinateSystem.type !== 'view') {\\n\\t                controller.disable();\\n\\t                return;\\n\\t            }\\n\\t            controller.enable(seriesModel.get('roam'));\\n\\t            controllerHost.zoomLimit = seriesModel.get('scaleLimit');\\n\\t            controllerHost.zoom = seriesModel.coordinateSystem.getZoom();\\n\\n\\t            controller\\n\\t                .off('pan')\\n\\t                .off('zoom')\\n\\t                .on('pan', function (dx, dy) {\\n\\t                    roamHelper.updateViewOnPan(controllerHost, dx, dy);\\n\\t                    api.dispatchAction({\\n\\t                        seriesId: seriesModel.id,\\n\\t                        type: 'graphRoam',\\n\\t                        dx: dx,\\n\\t                        dy: dy\\n\\t                    });\\n\\t                })\\n\\t                .on('zoom', function (zoom, mouseX, mouseY) {\\n\\t                    roamHelper.updateViewOnZoom(controllerHost, zoom, mouseX, mouseY);\\n\\t                    api.dispatchAction({\\n\\t                        seriesId: seriesModel.id,\\n\\t                        type: 'graphRoam',\\n\\t                        zoom:  zoom,\\n\\t                        originX: mouseX,\\n\\t                        originY: mouseY\\n\\t                    });\\n\\t                    this._updateNodeAndLinkScale();\\n\\t                    adjustEdge(seriesModel.getGraph(), this._getNodeGlobalScale(seriesModel));\\n\\t                    this._lineDraw.updateLayout();\\n\\t                }, this);\\n\\t        },\\n\\n\\t        _updateNodeAndLinkScale: function () {\\n\\t            var seriesModel = this._model;\\n\\t            var data = seriesModel.getData();\\n\\n\\t            var nodeScale = this._getNodeGlobalScale(seriesModel);\\n\\t            var invScale = [nodeScale, nodeScale];\\n\\n\\t            data.eachItemGraphicEl(function (el, idx) {\\n\\t                el.attr('scale', invScale);\\n\\t            });\\n\\t        },\\n\\n\\t        _getNodeGlobalScale: function (seriesModel) {\\n\\t            var coordSys = seriesModel.coordinateSystem;\\n\\t            if (coordSys.type !== 'view') {\\n\\t                return 1;\\n\\t            }\\n\\n\\t            var nodeScaleRatio = this._nodeScaleRatio;\\n\\n\\t            var groupScale = coordSys.scale;\\n\\t            var groupZoom = (groupScale && groupScale[0]) || 1;\\n\\t            // Scale node when zoom changes\\n\\t            var roamZoom = coordSys.getZoom();\\n\\t            var nodeScale = (roamZoom - 1) * nodeScaleRatio + 1;\\n\\n\\t            return nodeScale / groupZoom;\\n\\t        },\\n\\n\\t        updateLayout: function (seriesModel) {\\n\\t            adjustEdge(seriesModel.getGraph(), this._getNodeGlobalScale(seriesModel));\\n\\n\\t            this._symbolDraw.updateLayout();\\n\\t            this._lineDraw.updateLayout();\\n\\t        },\\n\\n\\t        remove: function (ecModel, api) {\\n\\t            this._symbolDraw && this._symbolDraw.remove();\\n\\t            this._lineDraw && this._lineDraw.remove();\\n\\t        }\\n\\t    });\\n\\n\\n/***/ },\\n/* 210 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * @module echarts/chart/helper/LineDraw\\n\\t */\\n\\n\\n\\t    var graphic = __webpack_require__(18);\\n\\t    var LineGroup = __webpack_require__(211);\\n\\n\\n\\t    function isPointNaN(pt) {\\n\\t        return isNaN(pt[0]) || isNaN(pt[1]);\\n\\t    }\\n\\t    function lineNeedsDraw(pts) {\\n\\t        return !isPointNaN(pts[0]) && !isPointNaN(pts[1]);\\n\\t    }\\n\\t    /**\\n\\t     * @alias module:echarts/component/marker/LineDraw\\n\\t     * @constructor\\n\\t     */\\n\\t    function LineDraw(ctor) {\\n\\t        this._ctor = ctor || LineGroup;\\n\\t        this.group = new graphic.Group();\\n\\t    }\\n\\n\\t    var lineDrawProto = LineDraw.prototype;\\n\\n\\t    /**\\n\\t     * @param {module:echarts/data/List} lineData\\n\\t     */\\n\\t    lineDrawProto.updateData = function (lineData) {\\n\\n\\t        var oldLineData = this._lineData;\\n\\t        var group = this.group;\\n\\t        var LineCtor = this._ctor;\\n\\n\\t        var hostModel = lineData.hostModel;\\n\\n\\t        var seriesScope = {\\n\\t            lineStyle: hostModel.getModel('lineStyle.normal').getLineStyle(),\\n\\t            hoverLineStyle: hostModel.getModel('lineStyle.emphasis').getLineStyle(),\\n\\t            labelModel: hostModel.getModel('label.normal'),\\n\\t            hoverLabelModel: hostModel.getModel('label.emphasis')\\n\\t        };\\n\\n\\t        lineData.diff(oldLineData)\\n\\t            .add(function (idx) {\\n\\t                if (!lineNeedsDraw(lineData.getItemLayout(idx))) {\\n\\t                    return;\\n\\t                }\\n\\t                var lineGroup = new LineCtor(lineData, idx, seriesScope);\\n\\n\\t                lineData.setItemGraphicEl(idx, lineGroup);\\n\\n\\t                group.add(lineGroup);\\n\\t            })\\n\\t            .update(function (newIdx, oldIdx) {\\n\\t                var lineGroup = oldLineData.getItemGraphicEl(oldIdx);\\n\\t                if (!lineNeedsDraw(lineData.getItemLayout(newIdx))) {\\n\\t                    group.remove(lineGroup);\\n\\t                    return;\\n\\t                }\\n\\n\\t                if (!lineGroup) {\\n\\t                    lineGroup = new LineCtor(lineData, newIdx, seriesScope);\\n\\t                }\\n\\t                else {\\n\\t                    lineGroup.updateData(lineData, newIdx, seriesScope);\\n\\t                }\\n\\n\\t                lineData.setItemGraphicEl(newIdx, lineGroup);\\n\\n\\t                group.add(lineGroup);\\n\\t            })\\n\\t            .remove(function (idx) {\\n\\t                group.remove(oldLineData.getItemGraphicEl(idx));\\n\\t            })\\n\\t            .execute();\\n\\n\\t        this._lineData = lineData;\\n\\t    };\\n\\n\\t    lineDrawProto.updateLayout = function () {\\n\\t        var lineData = this._lineData;\\n\\t        lineData.eachItemGraphicEl(function (el, idx) {\\n\\t            el.updateLayout(lineData, idx);\\n\\t        }, this);\\n\\t    };\\n\\n\\t    lineDrawProto.remove = function () {\\n\\t        this.group.removeAll();\\n\\t    };\\n\\n\\t    module.exports = LineDraw;\\n\\n\\n/***/ },\\n/* 211 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * @module echarts/chart/helper/Line\\n\\t */\\n\\n\\n\\t    var symbolUtil = __webpack_require__(111);\\n\\t    var vector = __webpack_require__(10);\\n\\t    // var matrix = require('zrender/lib/core/matrix');\\n\\t    var LinePath = __webpack_require__(212);\\n\\t    var graphic = __webpack_require__(18);\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var numberUtil = __webpack_require__(7);\\n\\n\\t    var SYMBOL_CATEGORIES = ['fromSymbol', 'toSymbol'];\\n\\t    function makeSymbolTypeKey(symbolCategory) {\\n\\t        return '_' + symbolCategory + 'Type';\\n\\t    }\\n\\t    /**\\n\\t     * @inner\\n\\t     */\\n\\t    function createSymbol(name, lineData, idx) {\\n\\t        var color = lineData.getItemVisual(idx, 'color');\\n\\t        var symbolType = lineData.getItemVisual(idx, name);\\n\\t        var symbolSize = lineData.getItemVisual(idx, name + 'Size');\\n\\n\\t        if (!symbolType || symbolType === 'none') {\\n\\t            return;\\n\\t        }\\n\\n\\t        if (!zrUtil.isArray(symbolSize)) {\\n\\t            symbolSize = [symbolSize, symbolSize];\\n\\t        }\\n\\t        var symbolPath = symbolUtil.createSymbol(\\n\\t            symbolType, -symbolSize[0] / 2, -symbolSize[1] / 2,\\n\\t            symbolSize[0], symbolSize[1], color\\n\\t        );\\n\\n\\t        symbolPath.name = name;\\n\\n\\t        return symbolPath;\\n\\t    }\\n\\n\\t    function createLine(points) {\\n\\t        var line = new LinePath({\\n\\t            name: 'line'\\n\\t        });\\n\\t        setLinePoints(line.shape, points);\\n\\t        return line;\\n\\t    }\\n\\n\\t    function setLinePoints(targetShape, points) {\\n\\t        var p1 = points[0];\\n\\t        var p2 = points[1];\\n\\t        var cp1 = points[2];\\n\\t        targetShape.x1 = p1[0];\\n\\t        targetShape.y1 = p1[1];\\n\\t        targetShape.x2 = p2[0];\\n\\t        targetShape.y2 = p2[1];\\n\\t        targetShape.percent = 1;\\n\\n\\t        if (cp1) {\\n\\t            targetShape.cpx1 = cp1[0];\\n\\t            targetShape.cpy1 = cp1[1];\\n\\t        }\\n\\t        else {\\n\\t            targetShape.cpx1 = NaN;\\n\\t            targetShape.cpy1 = NaN;\\n\\t        }\\n\\t    }\\n\\n\\t    function updateSymbolAndLabelBeforeLineUpdate () {\\n\\t        var lineGroup = this;\\n\\t        var symbolFrom = lineGroup.childOfName('fromSymbol');\\n\\t        var symbolTo = lineGroup.childOfName('toSymbol');\\n\\t        var label = lineGroup.childOfName('label');\\n\\t        // Quick reject\\n\\t        if (!symbolFrom && !symbolTo && label.ignore) {\\n\\t            return;\\n\\t        }\\n\\n\\t        var invScale = 1;\\n\\t        var parentNode = this.parent;\\n\\t        while (parentNode) {\\n\\t            if (parentNode.scale) {\\n\\t                invScale /= parentNode.scale[0];\\n\\t            }\\n\\t            parentNode = parentNode.parent;\\n\\t        }\\n\\n\\t        var line = lineGroup.childOfName('line');\\n\\t        // If line not changed\\n\\t        // FIXME Parent scale changed\\n\\t        if (!this.__dirty && !line.__dirty) {\\n\\t            return;\\n\\t        }\\n\\n\\t        var percent = line.shape.percent;\\n\\t        var fromPos = line.pointAt(0);\\n\\t        var toPos = line.pointAt(percent);\\n\\n\\t        var d = vector.sub([], toPos, fromPos);\\n\\t        vector.normalize(d, d);\\n\\n\\t        if (symbolFrom) {\\n\\t            symbolFrom.attr('position', fromPos);\\n\\t            var tangent = line.tangentAt(0);\\n\\t            symbolFrom.attr('rotation', Math.PI / 2 - Math.atan2(\\n\\t                tangent[1], tangent[0]\\n\\t            ));\\n\\t            symbolFrom.attr('scale', [invScale * percent, invScale * percent]);\\n\\t        }\\n\\t        if (symbolTo) {\\n\\t            symbolTo.attr('position', toPos);\\n\\t            var tangent = line.tangentAt(1);\\n\\t            symbolTo.attr('rotation', -Math.PI / 2 - Math.atan2(\\n\\t                tangent[1], tangent[0]\\n\\t            ));\\n\\t            symbolTo.attr('scale', [invScale * percent, invScale * percent]);\\n\\t        }\\n\\n\\t        if (!label.ignore) {\\n\\t            label.attr('position', toPos);\\n\\n\\t            var textPosition;\\n\\t            var textAlign;\\n\\t            var textVerticalAlign;\\n\\n\\t            var distance = 5 * invScale;\\n\\t            // End\\n\\t            if (label.__position === 'end') {\\n\\t                textPosition = [d[0] * distance + toPos[0], d[1] * distance + toPos[1]];\\n\\t                textAlign = d[0] > 0.8 ? 'left' : (d[0] < -0.8 ? 'right' : 'center');\\n\\t                textVerticalAlign = d[1] > 0.8 ? 'top' : (d[1] < -0.8 ? 'bottom' : 'middle');\\n\\t            }\\n\\t            // Middle\\n\\t            else if (label.__position === 'middle') {\\n\\t                var halfPercent = percent / 2;\\n\\t                var tangent = line.tangentAt(halfPercent);\\n\\t                var n = [tangent[1], -tangent[0]];\\n\\t                var cp = line.pointAt(halfPercent);\\n\\t                if (n[1] > 0) {\\n\\t                    n[0] = -n[0];\\n\\t                    n[1] = -n[1];\\n\\t                }\\n\\t                textPosition = [cp[0] + n[0] * distance, cp[1] + n[1] * distance];\\n\\t                textAlign = 'center';\\n\\t                textVerticalAlign = 'bottom';\\n\\t                var rotation = -Math.atan2(tangent[1], tangent[0]);\\n\\t                if (toPos[0] < fromPos[0]) {\\n\\t                    rotation = Math.PI + rotation;\\n\\t                }\\n\\t                label.attr('rotation', rotation);\\n\\t            }\\n\\t            // Start\\n\\t            else {\\n\\t                textPosition = [-d[0] * distance + fromPos[0], -d[1] * distance + fromPos[1]];\\n\\t                textAlign = d[0] > 0.8 ? 'right' : (d[0] < -0.8 ? 'left' : 'center');\\n\\t                textVerticalAlign = d[1] > 0.8 ? 'bottom' : (d[1] < -0.8 ? 'top' : 'middle');\\n\\t            }\\n\\t            label.attr({\\n\\t                style: {\\n\\t                    // Use the user specified text align and baseline first\\n\\t                    textVerticalAlign: label.__verticalAlign || textVerticalAlign,\\n\\t                    textAlign: label.__textAlign || textAlign\\n\\t                },\\n\\t                position: textPosition,\\n\\t                scale: [invScale, invScale]\\n\\t            });\\n\\t        }\\n\\t    }\\n\\n\\t    /**\\n\\t     * @constructor\\n\\t     * @extends {module:zrender/graphic/Group}\\n\\t     * @alias {module:echarts/chart/helper/Line}\\n\\t     */\\n\\t    function Line(lineData, idx, seriesScope) {\\n\\t        graphic.Group.call(this);\\n\\n\\t        this._createLine(lineData, idx, seriesScope);\\n\\t    }\\n\\n\\t    var lineProto = Line.prototype;\\n\\n\\t    // Update symbol position and rotation\\n\\t    lineProto.beforeUpdate = updateSymbolAndLabelBeforeLineUpdate;\\n\\n\\t    lineProto._createLine = function (lineData, idx, seriesScope) {\\n\\t        var seriesModel = lineData.hostModel;\\n\\t        var linePoints = lineData.getItemLayout(idx);\\n\\n\\t        var line = createLine(linePoints);\\n\\t        line.shape.percent = 0;\\n\\t        graphic.initProps(line, {\\n\\t            shape: {\\n\\t                percent: 1\\n\\t            }\\n\\t        }, seriesModel, idx);\\n\\n\\t        this.add(line);\\n\\n\\t        var label = new graphic.Text({\\n\\t            name: 'label'\\n\\t        });\\n\\t        this.add(label);\\n\\n\\t        zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\\n\\t            var symbol = createSymbol(symbolCategory, lineData, idx);\\n\\t            // symbols must added after line to make sure\\n\\t            // it will be updated after line#update.\\n\\t            // Or symbol position and rotation update in line#beforeUpdate will be one frame slow\\n\\t            this.add(symbol);\\n\\t            this[makeSymbolTypeKey(symbolCategory)] = lineData.getItemVisual(idx, symbolCategory);\\n\\t        }, this);\\n\\n\\t        this._updateCommonStl(lineData, idx, seriesScope);\\n\\t    };\\n\\n\\t    lineProto.updateData = function (lineData, idx, seriesScope) {\\n\\t        var seriesModel = lineData.hostModel;\\n\\n\\t        var line = this.childOfName('line');\\n\\t        var linePoints = lineData.getItemLayout(idx);\\n\\t        var target = {\\n\\t            shape: {}\\n\\t        };\\n\\t        setLinePoints(target.shape, linePoints);\\n\\t        graphic.updateProps(line, target, seriesModel, idx);\\n\\n\\t        zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\\n\\t            var symbolType = lineData.getItemVisual(idx, symbolCategory);\\n\\t            var key = makeSymbolTypeKey(symbolCategory);\\n\\t            // Symbol changed\\n\\t            if (this[key] !== symbolType) {\\n\\t                this.remove(this.childOfName(symbolCategory));\\n\\t                var symbol = createSymbol(symbolCategory, lineData, idx);\\n\\t                this.add(symbol);\\n\\t            }\\n\\t            this[key] = symbolType;\\n\\t        }, this);\\n\\n\\t        this._updateCommonStl(lineData, idx, seriesScope);\\n\\t    };\\n\\n\\t    lineProto._updateCommonStl = function (lineData, idx, seriesScope) {\\n\\t        var seriesModel = lineData.hostModel;\\n\\n\\t        var line = this.childOfName('line');\\n\\n\\t        var lineStyle = seriesScope && seriesScope.lineStyle;\\n\\t        var hoverLineStyle = seriesScope && seriesScope.hoverLineStyle;\\n\\t        var labelModel = seriesScope && seriesScope.labelModel;\\n\\t        var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel;\\n\\n\\t        // Optimization for large dataset\\n\\t        if (!seriesScope || lineData.hasItemOption) {\\n\\t            var itemModel = lineData.getItemModel(idx);\\n\\n\\t            lineStyle = itemModel.getModel('lineStyle.normal').getLineStyle();\\n\\t            hoverLineStyle = itemModel.getModel('lineStyle.emphasis').getLineStyle();\\n\\n\\t            labelModel = itemModel.getModel('label.normal');\\n\\t            hoverLabelModel = itemModel.getModel('label.emphasis');\\n\\t        }\\n\\n\\t        var visualColor = lineData.getItemVisual(idx, 'color');\\n\\t        var visualOpacity = zrUtil.retrieve(\\n\\t            lineData.getItemVisual(idx, 'opacity'),\\n\\t            lineStyle.opacity,\\n\\t            1\\n\\t        );\\n\\n\\t        line.useStyle(zrUtil.defaults(\\n\\t            {\\n\\t                strokeNoScale: true,\\n\\t                fill: 'none',\\n\\t                stroke: visualColor,\\n\\t                opacity: visualOpacity\\n\\t            },\\n\\t            lineStyle\\n\\t        ));\\n\\t        line.hoverStyle = hoverLineStyle;\\n\\n\\t        // Update symbol\\n\\t        zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\\n\\t            var symbol = this.childOfName(symbolCategory);\\n\\t            if (symbol) {\\n\\t                symbol.setColor(visualColor);\\n\\t                symbol.setStyle({\\n\\t                    opacity: visualOpacity\\n\\t                });\\n\\t            }\\n\\t        }, this);\\n\\n\\t        var showLabel = labelModel.getShallow('show');\\n\\t        var hoverShowLabel = hoverLabelModel.getShallow('show');\\n\\n\\t        var label = this.childOfName('label');\\n\\t        var defaultLabelColor;\\n\\t        var defaultText;\\n\\n\\t        if (showLabel || hoverShowLabel) {\\n\\t            var rawVal = seriesModel.getRawValue(idx);\\n\\t            defaultText = rawVal == null\\n\\t                ? defaultText = lineData.getName(idx)\\n\\t                : isFinite(rawVal)\\n\\t                ? numberUtil.round(rawVal)\\n\\t                : rawVal;\\n\\t            defaultLabelColor = visualColor || '#000';\\n\\t        }\\n\\n\\t        // label.afterUpdate = lineAfterUpdate;\\n\\t        if (showLabel) {\\n\\t            var textStyleModel = labelModel.getModel('textStyle');\\n\\t            label.setStyle({\\n\\t                text: zrUtil.retrieve(\\n\\t                    seriesModel.getFormattedLabel(idx, 'normal', lineData.dataType),\\n\\t                    defaultText\\n\\t                ),\\n\\t                textFont: textStyleModel.getFont(),\\n\\t                fill: textStyleModel.getTextColor() || defaultLabelColor\\n\\t            });\\n\\n\\t            label.__textAlign = textStyleModel.get('align');\\n\\t            label.__verticalAlign = textStyleModel.get('baseline');\\n\\t            label.__position = labelModel.get('position');\\n\\t        }\\n\\t        else {\\n\\t            label.setStyle('text', '');\\n\\t        }\\n\\t        if (hoverShowLabel) {\\n\\t            var textStyleHoverModel = hoverLabelModel.getModel('textStyle');\\n\\n\\t            label.hoverStyle = {\\n\\t                text: zrUtil.retrieve(\\n\\t                    seriesModel.getFormattedLabel(idx, 'emphasis', lineData.dataType),\\n\\t                    defaultText\\n\\t                ),\\n\\t                textFont: textStyleHoverModel.getFont(),\\n\\t                fill: textStyleHoverModel.getTextColor() || defaultLabelColor\\n\\t            };\\n\\t        }\\n\\t        else {\\n\\t            label.hoverStyle = {\\n\\t                text: ''\\n\\t            };\\n\\t        }\\n\\n\\t        label.ignore = !showLabel && !hoverShowLabel;\\n\\n\\t        graphic.setHoverStyle(this);\\n\\t    };\\n\\n\\t    lineProto.updateLayout = function (lineData, idx) {\\n\\t        this.setLinePoints(lineData.getItemLayout(idx));\\n\\t    };\\n\\n\\t    lineProto.setLinePoints = function (points) {\\n\\t        var linePath = this.childOfName('line');\\n\\t        setLinePoints(linePath.shape, points);\\n\\t        linePath.dirty();\\n\\t    };\\n\\n\\t    zrUtil.inherits(Line, graphic.Group);\\n\\n\\t    module.exports = Line;\\n\\n\\n/***/ },\\n/* 212 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * Line path for bezier and straight line draw\\n\\t */\\n\\n\\t    var graphic = __webpack_require__(18);\\n\\t    var vec2 = __webpack_require__(10);\\n\\n\\t    var straightLineProto = graphic.Line.prototype;\\n\\t    var bezierCurveProto = graphic.BezierCurve.prototype;\\n\\n\\t    function isLine(shape) {\\n\\t        return isNaN(+shape.cpx1) || isNaN(+shape.cpy1);\\n\\t    }\\n\\n\\t    module.exports = graphic.extendShape({\\n\\n\\t        type: 'ec-line',\\n\\n\\t        style: {\\n\\t            stroke: '#000',\\n\\t            fill: null\\n\\t        },\\n\\n\\t        shape: {\\n\\t            x1: 0,\\n\\t            y1: 0,\\n\\t            x2: 0,\\n\\t            y2: 0,\\n\\t            percent: 1,\\n\\t            cpx1: null,\\n\\t            cpy1: null\\n\\t        },\\n\\n\\t        buildPath: function (ctx, shape) {\\n\\t            (isLine(shape) ? straightLineProto : bezierCurveProto).buildPath(ctx, shape);\\n\\t        },\\n\\n\\t        pointAt: function (t) {\\n\\t            return isLine(this.shape)\\n\\t                ? straightLineProto.pointAt.call(this, t)\\n\\t                : bezierCurveProto.pointAt.call(this, t);\\n\\t        },\\n\\n\\t        tangentAt: function (t) {\\n\\t            var shape = this.shape;\\n\\t            var p = isLine(shape)\\n\\t                ? [shape.x2 - shape.x1, shape.y2 - shape.y1]\\n\\t                : bezierCurveProto.tangentAt.call(this, t);\\n\\t            return vec2.normalize(p, p);\\n\\t        }\\n\\t    });\\n\\n\\n/***/ },\\n/* 213 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var curveTool = __webpack_require__(37);\\n\\t    var vec2 = __webpack_require__(10);\\n\\n\\t    var v1 = [];\\n\\t    var v2 = [];\\n\\t    var v3 = [];\\n\\t    var quadraticAt = curveTool.quadraticAt;\\n\\t    var v2DistSquare = vec2.distSquare;\\n\\t    var mathAbs = Math.abs;\\n\\t    function intersectCurveCircle(curvePoints, center, radius) {\\n\\t        var p0 = curvePoints[0];\\n\\t        var p1 = curvePoints[1];\\n\\t        var p2 = curvePoints[2];\\n\\n\\t        var d = Infinity;\\n\\t        var t;\\n\\t        var radiusSquare = radius * radius;\\n\\t        var interval = 0.1;\\n\\n\\t        for (var _t = 0.1; _t <= 0.9; _t += 0.1) {\\n\\t            v1[0] = quadraticAt(p0[0], p1[0], p2[0], _t);\\n\\t            v1[1] = quadraticAt(p0[1], p1[1], p2[1], _t);\\n\\t            var diff = mathAbs(v2DistSquare(v1, center) - radiusSquare);\\n\\t            if (diff < d) {\\n\\t                d = diff;\\n\\t                t = _t;\\n\\t            }\\n\\t        }\\n\\n\\t        // Assume the segment is monotone，Find root through Bisection method\\n\\t        // At most 32 iteration\\n\\t        for (var i = 0; i < 32; i++) {\\n\\t            // var prev = t - interval;\\n\\t            var next = t + interval;\\n\\t            // v1[0] = quadraticAt(p0[0], p1[0], p2[0], prev);\\n\\t            // v1[1] = quadraticAt(p0[1], p1[1], p2[1], prev);\\n\\t            v2[0] = quadraticAt(p0[0], p1[0], p2[0], t);\\n\\t            v2[1] = quadraticAt(p0[1], p1[1], p2[1], t);\\n\\t            v3[0] = quadraticAt(p0[0], p1[0], p2[0], next);\\n\\t            v3[1] = quadraticAt(p0[1], p1[1], p2[1], next);\\n\\n\\t            var diff = v2DistSquare(v2, center) - radiusSquare;\\n\\t            if (mathAbs(diff) < 1e-2) {\\n\\t                break;\\n\\t            }\\n\\n\\t            // var prevDiff = v2DistSquare(v1, center) - radiusSquare;\\n\\t            var nextDiff = v2DistSquare(v3, center) - radiusSquare;\\n\\n\\t            interval /= 2;\\n\\t            if (diff < 0) {\\n\\t                if (nextDiff >= 0) {\\n\\t                    t = t + interval;\\n\\t                }\\n\\t                else {\\n\\t                    t = t - interval;\\n\\t                }\\n\\t            }\\n\\t            else {\\n\\t                if (nextDiff >= 0) {\\n\\t                    t = t - interval;\\n\\t                }\\n\\t                else {\\n\\t                    t = t + interval;\\n\\t                }\\n\\t            }\\n\\t        }\\n\\n\\t        return t;\\n\\t    }\\n\\t    // Adjust edge to avoid\\n\\t    module.exports = function (graph, scale) {\\n\\t        var tmp0 = [];\\n\\t        var quadraticSubdivide = curveTool.quadraticSubdivide;\\n\\t        var pts = [[], [], []];\\n\\t        var pts2 = [[], []];\\n\\t        var v = [];\\n\\t        scale /= 2;\\n\\n\\t        function getSymbolSize(node) {\\n\\t            var symbolSize = node.getVisual('symbolSize');\\n\\t            if (symbolSize instanceof Array) {\\n\\t                symbolSize = (symbolSize[0] + symbolSize[1]) / 2;\\n\\t            }\\n\\t            return symbolSize;\\n\\t        }\\n\\t        graph.eachEdge(function (edge, idx) {\\n\\t            var linePoints = edge.getLayout();\\n\\t            var fromSymbol = edge.getVisual('fromSymbol');\\n\\t            var toSymbol = edge.getVisual('toSymbol');\\n\\n\\t            if (!linePoints.__original) {\\n\\t                linePoints.__original = [\\n\\t                    vec2.clone(linePoints[0]),\\n\\t                    vec2.clone(linePoints[1])\\n\\t                ];\\n\\t                if (linePoints[2]) {\\n\\t                    linePoints.__original.push(vec2.clone(linePoints[2]));\\n\\t                }\\n\\t            }\\n\\t            var originalPoints = linePoints.__original;\\n\\t            // Quadratic curve\\n\\t            if (linePoints[2] != null) {\\n\\t                vec2.copy(pts[0], originalPoints[0]);\\n\\t                vec2.copy(pts[1], originalPoints[2]);\\n\\t                vec2.copy(pts[2], originalPoints[1]);\\n\\t                if (fromSymbol && fromSymbol != 'none') {\\n\\t                    var symbolSize = getSymbolSize(edge.node1);\\n\\n\\t                    var t = intersectCurveCircle(pts, originalPoints[0], symbolSize * scale);\\n\\t                    // Subdivide and get the second\\n\\t                    quadraticSubdivide(pts[0][0], pts[1][0], pts[2][0], t, tmp0);\\n\\t                    pts[0][0] = tmp0[3];\\n\\t                    pts[1][0] = tmp0[4];\\n\\t                    quadraticSubdivide(pts[0][1], pts[1][1], pts[2][1], t, tmp0);\\n\\t                    pts[0][1] = tmp0[3];\\n\\t                    pts[1][1] = tmp0[4];\\n\\t                }\\n\\t                if (toSymbol && toSymbol != 'none') {\\n\\t                    var symbolSize = getSymbolSize(edge.node2);\\n\\n\\t                    var t = intersectCurveCircle(pts, originalPoints[1], symbolSize * scale);\\n\\t                    // Subdivide and get the first\\n\\t                    quadraticSubdivide(pts[0][0], pts[1][0], pts[2][0], t, tmp0);\\n\\t                    pts[1][0] = tmp0[1];\\n\\t                    pts[2][0] = tmp0[2];\\n\\t                    quadraticSubdivide(pts[0][1], pts[1][1], pts[2][1], t, tmp0);\\n\\t                    pts[1][1] = tmp0[1];\\n\\t                    pts[2][1] = tmp0[2];\\n\\t                }\\n\\t                // Copy back to layout\\n\\t                vec2.copy(linePoints[0], pts[0]);\\n\\t                vec2.copy(linePoints[1], pts[2]);\\n\\t                vec2.copy(linePoints[2], pts[1]);\\n\\t            }\\n\\t            // Line\\n\\t            else {\\n\\t                vec2.copy(pts2[0], originalPoints[0]);\\n\\t                vec2.copy(pts2[1], originalPoints[1]);\\n\\n\\t                vec2.sub(v, pts2[1], pts2[0]);\\n\\t                vec2.normalize(v, v);\\n\\t                if (fromSymbol && fromSymbol != 'none') {\\n\\n\\t                    var symbolSize = getSymbolSize(edge.node1);\\n\\n\\t                    vec2.scaleAndAdd(pts2[0], pts2[0], v, symbolSize * scale);\\n\\t                }\\n\\t                if (toSymbol && toSymbol != 'none') {\\n\\t                    var symbolSize = getSymbolSize(edge.node2);\\n\\n\\t                    vec2.scaleAndAdd(pts2[1], pts2[1], v, -symbolSize * scale);\\n\\t                }\\n\\t                vec2.copy(linePoints[0], pts2[0]);\\n\\t                vec2.copy(linePoints[1], pts2[1]);\\n\\t            }\\n\\t        });\\n\\t    };\\n\\n\\n/***/ },\\n/* 214 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var echarts = __webpack_require__(1);\\n\\t    var roamHelper = __webpack_require__(188);\\n\\n\\t    var actionInfo = {\\n\\t        type: 'graphRoam',\\n\\t        event: 'graphRoam',\\n\\t        update: 'none'\\n\\t    };\\n\\n\\t    /**\\n\\t     * @payload\\n\\t     * @property {string} name Series name\\n\\t     * @property {number} [dx]\\n\\t     * @property {number} [dy]\\n\\t     * @property {number} [zoom]\\n\\t     * @property {number} [originX]\\n\\t     * @property {number} [originY]\\n\\t     */\\n\\t    echarts.registerAction(actionInfo, function (payload, ecModel) {\\n\\t        ecModel.eachComponent({mainType: 'series', query: payload}, function (seriesModel) {\\n\\t            var coordSys = seriesModel.coordinateSystem;\\n\\n\\t            var res = roamHelper.updateCenterAndZoom(coordSys, payload);\\n\\n\\t            seriesModel.setCenter\\n\\t                && seriesModel.setCenter(res.center);\\n\\n\\t            seriesModel.setZoom\\n\\t                && seriesModel.setZoom(res.zoom);\\n\\t        });\\n\\t    });\\n\\n\\n\\t    /**\\n\\t     * @payload\\n\\t     * @property {number} [seriesIndex]\\n\\t     * @property {string} [seriesId]\\n\\t     * @property {string} [seriesName]\\n\\t     * @property {number} [dataIndex]\\n\\t     */\\n\\t    echarts.registerAction({\\n\\t        type: 'focusNodeAdjacency',\\n\\t        event: 'focusNodeAdjacency',\\n\\t        update: 'series.graph:focusNodeAdjacency'\\n\\t    }, function () {});\\n\\n\\t    /**\\n\\t     * @payload\\n\\t     * @property {number} [seriesIndex]\\n\\t     * @property {string} [seriesId]\\n\\t     * @property {string} [seriesName]\\n\\t     */\\n\\t    echarts.registerAction({\\n\\t        type: 'unfocusNodeAdjacency',\\n\\t        event: 'unfocusNodeAdjacency',\\n\\t        update: 'series.graph:unfocusNodeAdjacency'\\n\\t    }, function () {});\\n\\n\\n\\n/***/ },\\n/* 215 */\\n/***/ function(module, exports) {\\n\\n\\t\\n\\n\\t    module.exports = function (ecModel) {\\n\\t        var legendModels = ecModel.findComponents({\\n\\t            mainType: 'legend'\\n\\t        });\\n\\t        if (!legendModels || !legendModels.length) {\\n\\t            return;\\n\\t        }\\n\\t        ecModel.eachSeriesByType('graph', function (graphSeries) {\\n\\t            var categoriesData = graphSeries.getCategoriesData();\\n\\t            var graph = graphSeries.getGraph();\\n\\t            var data = graph.data;\\n\\n\\t            var categoryNames = categoriesData.mapArray(categoriesData.getName);\\n\\n\\t            data.filterSelf(function (idx) {\\n\\t                var model = data.getItemModel(idx);\\n\\t                var category = model.getShallow('category');\\n\\t                if (category != null) {\\n\\t                    if (typeof category === 'number') {\\n\\t                        category = categoryNames[category];\\n\\t                    }\\n\\t                    // If in any legend component the status is not selected.\\n\\t                    for (var i = 0; i < legendModels.length; i++) {\\n\\t                        if (!legendModels[i].isSelected(category)) {\\n\\t                            return false;\\n\\t                        }\\n\\t                    }\\n\\t                }\\n\\t                return true;\\n\\t            });\\n\\t        }, this);\\n\\t    };\\n\\n\\n/***/ },\\n/* 216 */\\n/***/ function(module, exports) {\\n\\n\\t\\n\\n\\t    module.exports = function (ecModel) {\\n\\n\\t        var paletteScope = {};\\n\\t        ecModel.eachSeriesByType('graph', function (seriesModel) {\\n\\t            var categoriesData = seriesModel.getCategoriesData();\\n\\t            var data = seriesModel.getData();\\n\\n\\t            var categoryNameIdxMap = {};\\n\\n\\t            categoriesData.each(function (idx) {\\n\\t                var name = categoriesData.getName(idx);\\n\\t                // Add prefix to avoid conflict with Object.prototype.\\n\\t                categoryNameIdxMap['ec-' + name] = idx;\\n\\n\\t                var itemModel = categoriesData.getItemModel(idx);\\n\\t                var color = itemModel.get('itemStyle.normal.color')\\n\\t                    || seriesModel.getColorFromPalette(name, paletteScope);\\n\\t                categoriesData.setItemVisual(idx, 'color', color);\\n\\t            });\\n\\n\\t            // Assign category color to visual\\n\\t            if (categoriesData.count()) {\\n\\t                data.each(function (idx) {\\n\\t                    var model = data.getItemModel(idx);\\n\\t                    var category = model.getShallow('category');\\n\\t                    if (category != null) {\\n\\t                        if (typeof category === 'string') {\\n\\t                            category = categoryNameIdxMap['ec-' + category];\\n\\t                        }\\n\\t                        if (!data.getItemVisual(idx, 'color', true)) {\\n\\t                            data.setItemVisual(\\n\\t                                idx, 'color',\\n\\t                                categoriesData.getItemVisual(category, 'color')\\n\\t                            );\\n\\t                        }\\n\\t                    }\\n\\t                });\\n\\t            }\\n\\t        });\\n\\t    };\\n\\n\\n/***/ },\\n/* 217 */\\n/***/ function(module, exports) {\\n\\n\\t\\n\\n\\t    function normalize(a) {\\n\\t        if (!(a instanceof Array)) {\\n\\t            a = [a, a];\\n\\t        }\\n\\t        return a;\\n\\t    }\\n\\t    module.exports = function (ecModel) {\\n\\t        ecModel.eachSeriesByType('graph', function (seriesModel) {\\n\\t            var graph = seriesModel.getGraph();\\n\\t            var edgeData = seriesModel.getEdgeData();\\n\\t            var symbolType = normalize(seriesModel.get('edgeSymbol'));\\n\\t            var symbolSize = normalize(seriesModel.get('edgeSymbolSize'));\\n\\n\\t            var colorQuery = 'lineStyle.normal.color'.split('.');\\n\\t            var opacityQuery = 'lineStyle.normal.opacity'.split('.');\\n\\n\\t            edgeData.setVisual('fromSymbol', symbolType && symbolType[0]);\\n\\t            edgeData.setVisual('toSymbol', symbolType && symbolType[1]);\\n\\t            edgeData.setVisual('fromSymbolSize', symbolSize && symbolSize[0]);\\n\\t            edgeData.setVisual('toSymbolSize', symbolSize && symbolSize[1]);\\n\\t            edgeData.setVisual('color', seriesModel.get(colorQuery));\\n\\t            edgeData.setVisual('opacity', seriesModel.get(opacityQuery));\\n\\n\\t            edgeData.each(function (idx) {\\n\\t                var itemModel = edgeData.getItemModel(idx);\\n\\t                var edge = graph.getEdgeByIndex(idx);\\n\\t                var symbolType = normalize(itemModel.getShallow('symbol', true));\\n\\t                var symbolSize = normalize(itemModel.getShallow('symbolSize', true));\\n\\t                // Edge visual must after node visual\\n\\t                var color = itemModel.get(colorQuery);\\n\\t                var opacity = itemModel.get(opacityQuery);\\n\\t                switch (color) {\\n\\t                    case 'source':\\n\\t                        color = edge.node1.getVisual('color');\\n\\t                        break;\\n\\t                    case 'target':\\n\\t                        color = edge.node2.getVisual('color');\\n\\t                        break;\\n\\t                }\\n\\n\\t                symbolType[0] && edge.setVisual('fromSymbol', symbolType[0]);\\n\\t                symbolType[1] && edge.setVisual('toSymbol', symbolType[1]);\\n\\t                symbolSize[0] && edge.setVisual('fromSymbolSize', symbolSize[0]);\\n\\t                symbolSize[1] && edge.setVisual('toSymbolSize', symbolSize[1]);\\n\\n\\t                edge.setVisual('color', color);\\n\\t                edge.setVisual('opacity', opacity);\\n\\t            });\\n\\t        });\\n\\t    };\\n\\n\\n/***/ },\\n/* 218 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var simpleLayoutHelper = __webpack_require__(219);\\n\\t    var simpleLayoutEdge = __webpack_require__(220);\\n\\n\\t    module.exports = function (ecModel, api) {\\n\\t        ecModel.eachSeriesByType('graph', function (seriesModel) {\\n\\t            var layout = seriesModel.get('layout');\\n\\t            var coordSys = seriesModel.coordinateSystem;\\n\\t            if (coordSys && coordSys.type !== 'view') {\\n\\t                var data = seriesModel.getData();\\n\\t                var dimensions = coordSys.dimensions;\\n\\n\\t                data.each(dimensions, function () {\\n\\t                    var hasValue;\\n\\t                    var args = arguments;\\n\\t                    var value = [];\\n\\t                    for (var i = 0; i < dimensions.length; i++) {\\n\\t                        if (!isNaN(args[i])) {\\n\\t                            hasValue = true;\\n\\t                        }\\n\\t                        value.push(args[i]);\\n\\t                    }\\n\\t                    var idx = args[args.length - 1];\\n\\n\\t                    if (hasValue) {\\n\\t                        data.setItemLayout(idx, coordSys.dataToPoint(value));\\n\\t                    }\\n\\t                    else {\\n\\t                        // Also {Array.<number>}, not undefined to avoid if...else... statement\\n\\t                        data.setItemLayout(idx, [NaN, NaN]);\\n\\t                    }\\n\\t                });\\n\\n\\t                simpleLayoutEdge(data.graph);\\n\\t            }\\n\\t            else if (!layout || layout === 'none') {\\n\\t                simpleLayoutHelper(seriesModel);\\n\\t            }\\n\\t        });\\n\\t    };\\n\\n\\n\\n/***/ },\\n/* 219 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var simpleLayoutEdge = __webpack_require__(220);\\n\\n\\t    module.exports = function (seriesModel) {\\n\\t        var coordSys = seriesModel.coordinateSystem;\\n\\t        if (coordSys && coordSys.type !== 'view') {\\n\\t            return;\\n\\t        }\\n\\t        var graph = seriesModel.getGraph();\\n\\n\\t        graph.eachNode(function (node) {\\n\\t            var model = node.getModel();\\n\\t            node.setLayout([+model.get('x'), +model.get('y')]);\\n\\t        });\\n\\n\\t        simpleLayoutEdge(graph);\\n\\t    };\\n\\n\\n/***/ },\\n/* 220 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\t    var vec2 = __webpack_require__(10);\\n\\t    module.exports = function (graph) {\\n\\t        graph.eachEdge(function (edge) {\\n\\t            var curveness = edge.getModel().get('lineStyle.normal.curveness') || 0;\\n\\t            var p1 = vec2.clone(edge.node1.getLayout());\\n\\t            var p2 = vec2.clone(edge.node2.getLayout());\\n\\t            var points = [p1, p2];\\n\\t            if (+curveness) {\\n\\t                points.push([\\n\\t                    (p1[0] + p2[0]) / 2 - (p1[1] - p2[1]) * curveness,\\n\\t                    (p1[1] + p2[1]) / 2 - (p2[0] - p1[0]) * curveness\\n\\t                ]);\\n\\t            }\\n\\t            edge.setLayout(points);\\n\\t        });\\n\\t    };\\n\\n\\n/***/ },\\n/* 221 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\t    var circularLayoutHelper = __webpack_require__(222);\\n\\t    module.exports = function (ecModel) {\\n\\t        ecModel.eachSeriesByType('graph', function (seriesModel) {\\n\\t            if (seriesModel.get('layout') === 'circular') {\\n\\t                circularLayoutHelper(seriesModel);\\n\\t            }\\n\\t        });\\n\\t    };\\n\\n\\n/***/ },\\n/* 222 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\t    var vec2 = __webpack_require__(10);\\n\\t    module.exports = function (seriesModel) {\\n\\t        var coordSys = seriesModel.coordinateSystem;\\n\\t        if (coordSys && coordSys.type !== 'view') {\\n\\t            return;\\n\\t        }\\n\\n\\t        var rect = coordSys.getBoundingRect();\\n\\n\\t        var nodeData = seriesModel.getData();\\n\\t        var graph = nodeData.graph;\\n\\n\\t        var angle = 0;\\n\\t        var sum = nodeData.getSum('value');\\n\\t        var unitAngle = Math.PI * 2 / (sum || nodeData.count());\\n\\n\\t        var cx = rect.width / 2 + rect.x;\\n\\t        var cy = rect.height / 2 + rect.y;\\n\\n\\t        var r = Math.min(rect.width, rect.height) / 2;\\n\\n\\t        graph.eachNode(function (node) {\\n\\t            var value = node.getValue('value');\\n\\n\\t            angle += unitAngle * (sum ? value : 1) / 2;\\n\\n\\t            node.setLayout([\\n\\t                r * Math.cos(angle) + cx,\\n\\t                r * Math.sin(angle) + cy\\n\\t            ]);\\n\\n\\t            angle += unitAngle * (sum ? value : 1) / 2;\\n\\t        });\\n\\n\\t        nodeData.setLayout({\\n\\t            cx: cx,\\n\\t            cy: cy\\n\\t        });\\n\\n\\t        graph.eachEdge(function (edge) {\\n\\t            var curveness = edge.getModel().get('lineStyle.normal.curveness') || 0;\\n\\t            var p1 = vec2.clone(edge.node1.getLayout());\\n\\t            var p2 = vec2.clone(edge.node2.getLayout());\\n\\t            var cp1;\\n\\t            var x12 = (p1[0] + p2[0]) / 2;\\n\\t            var y12 = (p1[1] + p2[1]) / 2;\\n\\t            if (+curveness) {\\n\\t                curveness *= 3;\\n\\t                cp1 = [\\n\\t                    cx * curveness + x12 * (1 - curveness),\\n\\t                    cy * curveness + y12 * (1 - curveness)\\n\\t                ];\\n\\t            }\\n\\t            edge.setLayout([p1, p2, cp1]);\\n\\t        });\\n\\t    };\\n\\n\\n/***/ },\\n/* 223 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var forceHelper = __webpack_require__(224);\\n\\t    var numberUtil = __webpack_require__(7);\\n\\t    var simpleLayoutHelper = __webpack_require__(219);\\n\\t    var circularLayoutHelper = __webpack_require__(222);\\n\\t    var vec2 = __webpack_require__(10);\\n\\t    var zrUtil = __webpack_require__(4);\\n\\n\\t    module.exports = function (ecModel) {\\n\\t        ecModel.eachSeriesByType('graph', function (graphSeries) {\\n\\t            var coordSys = graphSeries.coordinateSystem;\\n\\t            if (coordSys && coordSys.type !== 'view') {\\n\\t                return;\\n\\t            }\\n\\t            if (graphSeries.get('layout') === 'force') {\\n\\t                var preservedPoints = graphSeries.preservedPoints || {};\\n\\t                var graph = graphSeries.getGraph();\\n\\t                var nodeData = graph.data;\\n\\t                var edgeData = graph.edgeData;\\n\\t                var forceModel = graphSeries.getModel('force');\\n\\t                var initLayout = forceModel.get('initLayout');\\n\\t                if (graphSeries.preservedPoints) {\\n\\t                    nodeData.each(function (idx) {\\n\\t                        var id = nodeData.getId(idx);\\n\\t                        nodeData.setItemLayout(idx, preservedPoints[id] || [NaN, NaN]);\\n\\t                    });\\n\\t                }\\n\\t                else if (!initLayout || initLayout === 'none') {\\n\\t                    simpleLayoutHelper(graphSeries);\\n\\t                }\\n\\t                else if (initLayout === 'circular') {\\n\\t                    circularLayoutHelper(graphSeries);\\n\\t                }\\n\\n\\t                var nodeDataExtent = nodeData.getDataExtent('value');\\n\\t                var edgeDataExtent = edgeData.getDataExtent('value');\\n\\t                // var edgeDataExtent = edgeData.getDataExtent('value');\\n\\t                var repulsion = forceModel.get('repulsion');\\n\\t                var edgeLength = forceModel.get('edgeLength');\\n\\t                if (!zrUtil.isArray(repulsion)) {\\n\\t                    repulsion = [repulsion, repulsion];\\n\\t                }\\n\\t                if (!zrUtil.isArray(edgeLength)) {\\n\\t                    edgeLength = [edgeLength, edgeLength];\\n\\t                }\\n\\t                // Larger value has smaller length\\n\\t                edgeLength = [edgeLength[1], edgeLength[0]];\\n\\n\\t                var nodes = nodeData.mapArray('value', function (value, idx) {\\n\\t                    var point = nodeData.getItemLayout(idx);\\n\\t                    // var w = numberUtil.linearMap(value, nodeDataExtent, [0, 50]);\\n\\t                    var rep = numberUtil.linearMap(value, nodeDataExtent, repulsion);\\n\\t                    if (isNaN(rep)) {\\n\\t                        rep = (repulsion[0] + repulsion[1]) / 2;\\n\\t                    }\\n\\t                    return {\\n\\t                        w: rep,\\n\\t                        rep: rep,\\n\\t                        fixed: nodeData.getItemModel(idx).get('fixed'),\\n\\t                        p: (!point || isNaN(point[0]) || isNaN(point[1])) ? null : point\\n\\t                    };\\n\\t                });\\n\\t                var edges = edgeData.mapArray('value', function (value, idx) {\\n\\t                    var edge = graph.getEdgeByIndex(idx);\\n\\t                    var d = numberUtil.linearMap(value, edgeDataExtent, edgeLength);\\n\\t                    if (isNaN(d)) {\\n\\t                        d = (edgeLength[0] + edgeLength[1]) / 2;\\n\\t                    }\\n\\t                    return {\\n\\t                        n1: nodes[edge.node1.dataIndex],\\n\\t                        n2: nodes[edge.node2.dataIndex],\\n\\t                        d: d,\\n\\t                        curveness: edge.getModel().get('lineStyle.normal.curveness') || 0\\n\\t                    };\\n\\t                });\\n\\n\\t                var coordSys = graphSeries.coordinateSystem;\\n\\t                var rect = coordSys.getBoundingRect();\\n\\t                var forceInstance = forceHelper(nodes, edges, {\\n\\t                    rect: rect,\\n\\t                    gravity: forceModel.get('gravity')\\n\\t                });\\n\\t                var oldStep = forceInstance.step;\\n\\t                forceInstance.step = function (cb) {\\n\\t                    for (var i = 0, l = nodes.length; i < l; i++) {\\n\\t                        if (nodes[i].fixed) {\\n\\t                            // Write back to layout instance\\n\\t                            vec2.copy(nodes[i].p, graph.getNodeByIndex(i).getLayout());\\n\\t                        }\\n\\t                    }\\n\\t                    oldStep(function (nodes, edges, stopped) {\\n\\t                        for (var i = 0, l = nodes.length; i < l; i++) {\\n\\t                            if (!nodes[i].fixed) {\\n\\t                                graph.getNodeByIndex(i).setLayout(nodes[i].p);\\n\\t                            }\\n\\t                            preservedPoints[nodeData.getId(i)] = nodes[i].p;\\n\\t                        }\\n\\t                        for (var i = 0, l = edges.length; i < l; i++) {\\n\\t                            var e = edges[i];\\n\\t                            var edge = graph.getEdgeByIndex(i);\\n\\t                            var p1 = e.n1.p;\\n\\t                            var p2 = e.n2.p;\\n\\t                            var points = edge.getLayout();\\n\\t                            points = points ? points.slice() : [];\\n\\t                            points[0] = points[0] || [];\\n\\t                            points[1] = points[1] || [];\\n\\t                            vec2.copy(points[0], p1);\\n\\t                            vec2.copy(points[1], p2);\\n\\t                            if (+e.curveness) {\\n\\t                                points[2] = [\\n\\t                                    (p1[0] + p2[0]) / 2 - (p1[1] - p2[1]) * e.curveness,\\n\\t                                    (p1[1] + p2[1]) / 2 - (p2[0] - p1[0]) * e.curveness\\n\\t                                ];\\n\\t                            }\\n\\t                            edge.setLayout(points);\\n\\t                        }\\n\\t                        // Update layout\\n\\n\\t                        cb && cb(stopped);\\n\\t                    });\\n\\t                };\\n\\t                graphSeries.forceLayout = forceInstance;\\n\\t                graphSeries.preservedPoints = preservedPoints;\\n\\n\\t                // Step to get the layout\\n\\t                forceInstance.step();\\n\\t            }\\n\\t            else {\\n\\t                // Remove prev injected forceLayout instance\\n\\t                graphSeries.forceLayout = null;\\n\\t            }\\n\\t        });\\n\\t    };\\n\\n\\n/***/ },\\n/* 224 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var vec2 = __webpack_require__(10);\\n\\t    var scaleAndAdd = vec2.scaleAndAdd;\\n\\n\\t    // function adjacentNode(n, e) {\\n\\t    //     return e.n1 === n ? e.n2 : e.n1;\\n\\t    // }\\n\\n\\t    module.exports = function (nodes, edges, opts) {\\n\\t        var rect = opts.rect;\\n\\t        var width = rect.width;\\n\\t        var height = rect.height;\\n\\t        var center = [rect.x + width / 2, rect.y + height / 2];\\n\\t        // var scale = opts.scale || 1;\\n\\t        var gravity = opts.gravity == null ? 0.1 : opts.gravity;\\n\\n\\t        // for (var i = 0; i < edges.length; i++) {\\n\\t        //     var e = edges[i];\\n\\t        //     var n1 = e.n1;\\n\\t        //     var n2 = e.n2;\\n\\t        //     n1.edges = n1.edges || [];\\n\\t        //     n2.edges = n2.edges || [];\\n\\t        //     n1.edges.push(e);\\n\\t        //     n2.edges.push(e);\\n\\t        // }\\n\\t        // Init position\\n\\t        for (var i = 0; i < nodes.length; i++) {\\n\\t            var n = nodes[i];\\n\\t            if (!n.p) {\\n\\t                // Use the position from first adjecent node with defined position\\n\\t                // Or use a random position\\n\\t                // From d3\\n\\t                // if (n.edges) {\\n\\t                //     var j = -1;\\n\\t                //     while (++j < n.edges.length) {\\n\\t                //         var e = n.edges[j];\\n\\t                //         var other = adjacentNode(n, e);\\n\\t                //         if (other.p) {\\n\\t                //             n.p = vec2.clone(other.p);\\n\\t                //             break;\\n\\t                //         }\\n\\t                //     }\\n\\t                // }\\n\\t                // if (!n.p) {\\n\\t                    n.p = vec2.create(\\n\\t                        width * (Math.random() - 0.5) + center[0],\\n\\t                        height * (Math.random() - 0.5) + center[1]\\n\\t                    );\\n\\t                // }\\n\\t            }\\n\\t            n.pp = vec2.clone(n.p);\\n\\t            n.edges = null;\\n\\t        }\\n\\n\\t        // Formula in 'Graph Drawing by Force-directed Placement'\\n\\t        // var k = scale * Math.sqrt(width * height / nodes.length);\\n\\t        // var k2 = k * k;\\n\\n\\t        var friction = 0.6;\\n\\n\\t        return {\\n\\t            warmUp: function () {\\n\\t                friction = 0.5;\\n\\t            },\\n\\n\\t            setFixed: function (idx) {\\n\\t                nodes[idx].fixed = true;\\n\\t            },\\n\\n\\t            setUnfixed: function (idx) {\\n\\t                nodes[idx].fixed = false;\\n\\t            },\\n\\n\\t            step: function (cb) {\\n\\t                var v12 = [];\\n\\t                var nLen = nodes.length;\\n\\t                for (var i = 0; i < edges.length; i++) {\\n\\t                    var e = edges[i];\\n\\t                    var n1 = e.n1;\\n\\t                    var n2 = e.n2;\\n\\n\\t                    vec2.sub(v12, n2.p, n1.p);\\n\\t                    var d = vec2.len(v12) - e.d;\\n\\t                    var w = n2.w / (n1.w + n2.w);\\n\\t                    vec2.normalize(v12, v12);\\n\\n\\t                    !n1.fixed && scaleAndAdd(n1.p, n1.p, v12, w * d * friction);\\n\\t                    !n2.fixed && scaleAndAdd(n2.p, n2.p, v12, -(1 - w) * d * friction);\\n\\t                }\\n\\t                // Gravity\\n\\t                for (var i = 0; i < nLen; i++) {\\n\\t                    var n = nodes[i];\\n\\t                    if (!n.fixed) {\\n\\t                        vec2.sub(v12, center, n.p);\\n\\t                        // var d = vec2.len(v12);\\n\\t                        // vec2.scale(v12, v12, 1 / d);\\n\\t                        // var gravityFactor = gravity;\\n\\t                        vec2.scaleAndAdd(n.p, n.p, v12, gravity * friction);\\n\\t                    }\\n\\t                }\\n\\n\\t                // Repulsive\\n\\t                // PENDING\\n\\t                for (var i = 0; i < nLen; i++) {\\n\\t                    var n1 = nodes[i];\\n\\t                    for (var j = i + 1; j < nLen; j++) {\\n\\t                        var n2 = nodes[j];\\n\\t                        vec2.sub(v12, n2.p, n1.p);\\n\\t                        var d = vec2.len(v12);\\n\\t                        if (d === 0) {\\n\\t                            // Random repulse\\n\\t                            vec2.set(v12, Math.random() - 0.5, Math.random() - 0.5);\\n\\t                            d = 1;\\n\\t                        }\\n\\t                        var repFact = (n1.rep + n2.rep) / d / d;\\n\\t                        !n1.fixed && scaleAndAdd(n1.pp, n1.pp, v12, repFact);\\n\\t                        !n2.fixed && scaleAndAdd(n2.pp, n2.pp, v12, -repFact);\\n\\t                    }\\n\\t                }\\n\\t                var v = [];\\n\\t                for (var i = 0; i < nLen; i++) {\\n\\t                    var n = nodes[i];\\n\\t                    if (!n.fixed) {\\n\\t                        vec2.sub(v, n.p, n.pp);\\n\\t                        vec2.scaleAndAdd(n.p, n.p, v, friction);\\n\\t                        vec2.copy(n.pp, n.p);\\n\\t                    }\\n\\t                }\\n\\n\\t                friction = friction * 0.992;\\n\\n\\t                cb && cb(nodes, edges, friction < 0.01);\\n\\t            }\\n\\t        };\\n\\t    };\\n\\n\\n/***/ },\\n/* 225 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\t    // FIXME Where to create the simple view coordinate system\\n\\t    var View = __webpack_require__(176);\\n\\t    var layout = __webpack_require__(71);\\n\\t    var bbox = __webpack_require__(38);\\n\\n\\t    function getViewRect(seriesModel, api, aspect) {\\n\\t        var option = seriesModel.getBoxLayoutParams();\\n\\t        option.aspect = aspect;\\n\\t        return layout.getLayoutRect(option, {\\n\\t            width: api.getWidth(),\\n\\t            height: api.getHeight()\\n\\t        });\\n\\t    }\\n\\n\\t    module.exports = function (ecModel, api) {\\n\\t        var viewList = [];\\n\\t        ecModel.eachSeriesByType('graph', function (seriesModel) {\\n\\t            var coordSysType = seriesModel.get('coordinateSystem');\\n\\t            if (!coordSysType || coordSysType === 'view') {\\n\\n\\t                var data = seriesModel.getData();\\n\\t                var positions = data.mapArray(function (idx) {\\n\\t                    var itemModel = data.getItemModel(idx);\\n\\t                    return [+itemModel.get('x'), +itemModel.get('y')];\\n\\t                });\\n\\n\\t                var min = [];\\n\\t                var max = [];\\n\\n\\t                bbox.fromPoints(positions, min, max);\\n\\n\\t                // If width or height is 0\\n\\t                if (max[0] - min[0] === 0) {\\n\\t                    max[0] += 1;\\n\\t                    min[0] -= 1;\\n\\t                }\\n\\t                if (max[1] - min[1] === 0) {\\n\\t                    max[1] += 1;\\n\\t                    min[1] -= 1;\\n\\t                }\\n\\t                var aspect = (max[0] - min[0]) / (max[1] - min[1]);\\n\\t                // FIXME If get view rect after data processed?\\n\\t                var viewRect = getViewRect(seriesModel, api, aspect);\\n\\t                // Position may be NaN, use view rect instead\\n\\t                if (isNaN(aspect)) {\\n\\t                    min = [viewRect.x, viewRect.y];\\n\\t                    max = [viewRect.x + viewRect.width, viewRect.y + viewRect.height];\\n\\t                }\\n\\n\\t                var bbWidth = max[0] - min[0];\\n\\t                var bbHeight = max[1] - min[1];\\n\\n\\t                var viewWidth = viewRect.width;\\n\\t                var viewHeight = viewRect.height;\\n\\n\\t                var viewCoordSys = seriesModel.coordinateSystem = new View();\\n\\t                viewCoordSys.zoomLimit = seriesModel.get('scaleLimit');\\n\\n\\t                viewCoordSys.setBoundingRect(\\n\\t                    min[0], min[1], bbWidth, bbHeight\\n\\t                );\\n\\t                viewCoordSys.setViewRect(\\n\\t                    viewRect.x, viewRect.y, viewWidth, viewHeight\\n\\t                );\\n\\n\\t                // Update roam info\\n\\t                viewCoordSys.setCenter(seriesModel.get('center'));\\n\\t                viewCoordSys.setZoom(seriesModel.get('zoom'));\\n\\n\\t                viewList.push(viewCoordSys);\\n\\t            }\\n\\t        });\\n\\t        return viewList;\\n\\t    };\\n\\n\\n/***/ },\\n/* 226 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\t    __webpack_require__(227);\\n\\t    __webpack_require__(228);\\n\\n\\n/***/ },\\n/* 227 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var List = __webpack_require__(98);\\n\\t    var SeriesModel = __webpack_require__(78);\\n\\t    var zrUtil = __webpack_require__(4);\\n\\n\\t    var GaugeSeries = SeriesModel.extend({\\n\\n\\t        type: 'series.gauge',\\n\\n\\t        getInitialData: function (option, ecModel) {\\n\\t            var list = new List(['value'], this);\\n\\t            var dataOpt = option.data || [];\\n\\t            if (!zrUtil.isArray(dataOpt)) {\\n\\t                dataOpt = [dataOpt];\\n\\t            }\\n\\t            // Only use the first data item\\n\\t            list.initData(dataOpt);\\n\\t            return list;\\n\\t        },\\n\\n\\t        defaultOption: {\\n\\t            zlevel: 0,\\n\\t            z: 2,\\n\\t            // 默认全局居中\\n\\t            center: ['50%', '50%'],\\n\\t            legendHoverLink: true,\\n\\t            radius: '75%',\\n\\t            startAngle: 225,\\n\\t            endAngle: -45,\\n\\t            clockwise: true,\\n\\t            // 最小值\\n\\t            min: 0,\\n\\t            // 最大值\\n\\t            max: 100,\\n\\t            // 分割段数，默认为10\\n\\t            splitNumber: 10,\\n\\t            // 坐标轴线\\n\\t            axisLine: {\\n\\t                // 默认显示，属性show控制显示与否\\n\\t                show: true,\\n\\t                lineStyle: {       // 属性lineStyle控制线条样式\\n\\t                    color: [[0.2, '#91c7ae'], [0.8, '#63869e'], [1, '#c23531']],\\n\\t                    width: 30\\n\\t                }\\n\\t            },\\n\\t            // 分隔线\\n\\t            splitLine: {\\n\\t                // 默认显示，属性show控制显示与否\\n\\t                show: true,\\n\\t                // 属性length控制线长\\n\\t                length: 30,\\n\\t                // 属性lineStyle（详见lineStyle）控制线条样式\\n\\t                lineStyle: {\\n\\t                    color: '#eee',\\n\\t                    width: 2,\\n\\t                    type: 'solid'\\n\\t                }\\n\\t            },\\n\\t            // 坐标轴小标记\\n\\t            axisTick: {\\n\\t                // 属性show控制显示与否，默认不显示\\n\\t                show: true,\\n\\t                // 每份split细分多少段\\n\\t                splitNumber: 5,\\n\\t                // 属性length控制线长\\n\\t                length: 8,\\n\\t                // 属性lineStyle控制线条样式\\n\\t                lineStyle: {\\n\\t                    color: '#eee',\\n\\t                    width: 1,\\n\\t                    type: 'solid'\\n\\t                }\\n\\t            },\\n\\t            axisLabel: {\\n\\t                show: true,\\n\\t                distance: 5,\\n\\t                // formatter: null,\\n\\t                textStyle: {       // 其余属性默认使用全局文本样式，详见TEXTSTYLE\\n\\t                    color: 'auto'\\n\\t                }\\n\\t            },\\n\\t            pointer: {\\n\\t                show: true,\\n\\t                length: '80%',\\n\\t                width: 8\\n\\t            },\\n\\t            itemStyle: {\\n\\t                normal: {\\n\\t                    color: 'auto'\\n\\t                }\\n\\t            },\\n\\t            title: {\\n\\t                show: true,\\n\\t                // x, y，单位px\\n\\t                offsetCenter: [0, '-40%'],\\n\\t                // 其余属性默认使用全局文本样式，详见TEXTSTYLE\\n\\t                textStyle: {\\n\\t                    color: '#333',\\n\\t                    fontSize: 15\\n\\t                }\\n\\t            },\\n\\t            detail: {\\n\\t                show: true,\\n\\t                backgroundColor: 'rgba(0,0,0,0)',\\n\\t                borderWidth: 0,\\n\\t                borderColor: '#ccc',\\n\\t                width: 100,\\n\\t                height: 40,\\n\\t                // x, y，单位px\\n\\t                offsetCenter: [0, '40%'],\\n\\t                // formatter: null,\\n\\t                // 其余属性默认使用全局文本样式，详见TEXTSTYLE\\n\\t                textStyle: {\\n\\t                    color: 'auto',\\n\\t                    fontSize: 30\\n\\t                }\\n\\t            }\\n\\t        }\\n\\t    });\\n\\n\\t    module.exports = GaugeSeries;\\n\\n\\n/***/ },\\n/* 228 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var PointerPath = __webpack_require__(229);\\n\\n\\t    var graphic = __webpack_require__(18);\\n\\t    var numberUtil = __webpack_require__(7);\\n\\t    var parsePercent = numberUtil.parsePercent;\\n\\n\\t    function parsePosition(seriesModel, api) {\\n\\t        var center = seriesModel.get('center');\\n\\t        var width = api.getWidth();\\n\\t        var height = api.getHeight();\\n\\t        var size = Math.min(width, height);\\n\\t        var cx = parsePercent(center[0], api.getWidth());\\n\\t        var cy = parsePercent(center[1], api.getHeight());\\n\\t        var r = parsePercent(seriesModel.get('radius'), size / 2);\\n\\n\\t        return {\\n\\t            cx: cx,\\n\\t            cy: cy,\\n\\t            r: r\\n\\t        };\\n\\t    }\\n\\n\\t    function formatLabel(label, labelFormatter) {\\n\\t        if (labelFormatter) {\\n\\t            if (typeof labelFormatter === 'string') {\\n\\t                label = labelFormatter.replace('{value}', label != null ? label : '');\\n\\t            }\\n\\t            else if (typeof labelFormatter === 'function') {\\n\\t                label = labelFormatter(label);\\n\\t            }\\n\\t        }\\n\\n\\t        return label;\\n\\t    }\\n\\n\\t    var PI2 = Math.PI * 2;\\n\\n\\t    var GaugeView = __webpack_require__(80).extend({\\n\\n\\t        type: 'gauge',\\n\\n\\t        render: function (seriesModel, ecModel, api) {\\n\\n\\t            this.group.removeAll();\\n\\n\\t            var colorList = seriesModel.get('axisLine.lineStyle.color');\\n\\t            var posInfo = parsePosition(seriesModel, api);\\n\\n\\t            this._renderMain(\\n\\t                seriesModel, ecModel, api, colorList, posInfo\\n\\t            );\\n\\t        },\\n\\n\\t        dispose: function () {},\\n\\n\\t        _renderMain: function (seriesModel, ecModel, api, colorList, posInfo) {\\n\\t            var group = this.group;\\n\\n\\t            var axisLineModel = seriesModel.getModel('axisLine');\\n\\t            var lineStyleModel = axisLineModel.getModel('lineStyle');\\n\\n\\t            var clockwise = seriesModel.get('clockwise');\\n\\t            var startAngle = -seriesModel.get('startAngle') / 180 * Math.PI;\\n\\t            var endAngle = -seriesModel.get('endAngle') / 180 * Math.PI;\\n\\n\\t            var angleRangeSpan = (endAngle - startAngle) % PI2;\\n\\n\\t            var prevEndAngle = startAngle;\\n\\t            var axisLineWidth = lineStyleModel.get('width');\\n\\n\\t            for (var i = 0; i < colorList.length; i++) {\\n\\t                // Clamp\\n\\t                var percent = Math.min(Math.max(colorList[i][0], 0), 1);\\n\\t                var endAngle = startAngle + angleRangeSpan * percent;\\n\\t                var sector = new graphic.Sector({\\n\\t                    shape: {\\n\\t                        startAngle: prevEndAngle,\\n\\t                        endAngle: endAngle,\\n\\t                        cx: posInfo.cx,\\n\\t                        cy: posInfo.cy,\\n\\t                        clockwise: clockwise,\\n\\t                        r0: posInfo.r - axisLineWidth,\\n\\t                        r: posInfo.r\\n\\t                    },\\n\\t                    silent: true\\n\\t                });\\n\\n\\t                sector.setStyle({\\n\\t                    fill: colorList[i][1]\\n\\t                });\\n\\n\\t                sector.setStyle(lineStyleModel.getLineStyle(\\n\\t                    // Because we use sector to simulate arc\\n\\t                    // so the properties for stroking are useless\\n\\t                    ['color', 'borderWidth', 'borderColor']\\n\\t                ));\\n\\n\\t                group.add(sector);\\n\\n\\t                prevEndAngle = endAngle;\\n\\t            }\\n\\n\\t            var getColor = function (percent) {\\n\\t                // Less than 0\\n\\t                if (percent <= 0) {\\n\\t                    return colorList[0][1];\\n\\t                }\\n\\t                for (var i = 0; i < colorList.length; i++) {\\n\\t                    if (colorList[i][0] >= percent\\n\\t                        && (i === 0 ? 0 : colorList[i - 1][0]) < percent\\n\\t                    ) {\\n\\t                        return colorList[i][1];\\n\\t                    }\\n\\t                }\\n\\t                // More than 1\\n\\t                return colorList[i - 1][1];\\n\\t            };\\n\\n\\t            if (!clockwise) {\\n\\t                var tmp = startAngle;\\n\\t                startAngle = endAngle;\\n\\t                endAngle = tmp;\\n\\t            }\\n\\n\\t            this._renderTicks(\\n\\t                seriesModel, ecModel, api, getColor, posInfo,\\n\\t                startAngle, endAngle, clockwise\\n\\t            );\\n\\n\\t            this._renderPointer(\\n\\t                seriesModel, ecModel, api, getColor, posInfo,\\n\\t                startAngle, endAngle, clockwise\\n\\t            );\\n\\n\\t            this._renderTitle(\\n\\t                seriesModel, ecModel, api, getColor, posInfo\\n\\t            );\\n\\t            this._renderDetail(\\n\\t                seriesModel, ecModel, api, getColor, posInfo\\n\\t            );\\n\\t        },\\n\\n\\t        _renderTicks: function (\\n\\t            seriesModel, ecModel, api, getColor, posInfo,\\n\\t            startAngle, endAngle, clockwise\\n\\t        ) {\\n\\t            var group = this.group;\\n\\t            var cx = posInfo.cx;\\n\\t            var cy = posInfo.cy;\\n\\t            var r = posInfo.r;\\n\\n\\t            var minVal = +seriesModel.get('min');\\n\\t            var maxVal = +seriesModel.get('max');\\n\\n\\t            var splitLineModel = seriesModel.getModel('splitLine');\\n\\t            var tickModel = seriesModel.getModel('axisTick');\\n\\t            var labelModel = seriesModel.getModel('axisLabel');\\n\\n\\t            var splitNumber = seriesModel.get('splitNumber');\\n\\t            var subSplitNumber = tickModel.get('splitNumber');\\n\\n\\t            var splitLineLen = parsePercent(\\n\\t                splitLineModel.get('length'), r\\n\\t            );\\n\\t            var tickLen = parsePercent(\\n\\t                tickModel.get('length'), r\\n\\t            );\\n\\n\\t            var angle = startAngle;\\n\\t            var step = (endAngle - startAngle) / splitNumber;\\n\\t            var subStep = step / subSplitNumber;\\n\\n\\t            var splitLineStyle = splitLineModel.getModel('lineStyle').getLineStyle();\\n\\t            var tickLineStyle = tickModel.getModel('lineStyle').getLineStyle();\\n\\t            var textStyleModel = labelModel.getModel('textStyle');\\n\\n\\t            for (var i = 0; i <= splitNumber; i++) {\\n\\t                var unitX = Math.cos(angle);\\n\\t                var unitY = Math.sin(angle);\\n\\t                // Split line\\n\\t                if (splitLineModel.get('show')) {\\n\\t                    var splitLine = new graphic.Line({\\n\\t                        shape: {\\n\\t                            x1: unitX * r + cx,\\n\\t                            y1: unitY * r + cy,\\n\\t                            x2: unitX * (r - splitLineLen) + cx,\\n\\t                            y2: unitY * (r - splitLineLen) + cy\\n\\t                        },\\n\\t                        style: splitLineStyle,\\n\\t                        silent: true\\n\\t                    });\\n\\t                    if (splitLineStyle.stroke === 'auto') {\\n\\t                        splitLine.setStyle({\\n\\t                            stroke: getColor(i / splitNumber)\\n\\t                        });\\n\\t                    }\\n\\n\\t                    group.add(splitLine);\\n\\t                }\\n\\n\\t                // Label\\n\\t                if (labelModel.get('show')) {\\n\\t                    var label = formatLabel(\\n\\t                        numberUtil.round(i / splitNumber * (maxVal - minVal) + minVal),\\n\\t                        labelModel.get('formatter')\\n\\t                    );\\n\\t                    var distance = labelModel.get('distance');\\n\\n\\t                    var text = new graphic.Text({\\n\\t                        style: {\\n\\t                            text: label,\\n\\t                            x: unitX * (r - splitLineLen - distance) + cx,\\n\\t                            y: unitY * (r - splitLineLen - distance) + cy,\\n\\t                            fill: textStyleModel.getTextColor(),\\n\\t                            textFont: textStyleModel.getFont(),\\n\\t                            textVerticalAlign: unitY < -0.4 ? 'top' : (unitY > 0.4 ? 'bottom' : 'middle'),\\n\\t                            textAlign: unitX < -0.4 ? 'left' : (unitX > 0.4 ? 'right' : 'center')\\n\\t                        },\\n\\t                        silent: true\\n\\t                    });\\n\\t                    if (text.style.fill === 'auto') {\\n\\t                        text.setStyle({\\n\\t                            fill: getColor(i / splitNumber)\\n\\t                        });\\n\\t                    }\\n\\n\\t                    group.add(text);\\n\\t                }\\n\\n\\t                // Axis tick\\n\\t                if (tickModel.get('show') && i !== splitNumber) {\\n\\t                    for (var j = 0; j <= subSplitNumber; j++) {\\n\\t                        var unitX = Math.cos(angle);\\n\\t                        var unitY = Math.sin(angle);\\n\\t                        var tickLine = new graphic.Line({\\n\\t                            shape: {\\n\\t                                x1: unitX * r + cx,\\n\\t                                y1: unitY * r + cy,\\n\\t                                x2: unitX * (r - tickLen) + cx,\\n\\t                                y2: unitY * (r - tickLen) + cy\\n\\t                            },\\n\\t                            silent: true,\\n\\t                            style: tickLineStyle\\n\\t                        });\\n\\n\\t                        if (tickLineStyle.stroke === 'auto') {\\n\\t                            tickLine.setStyle({\\n\\t                                stroke: getColor((i + j / subSplitNumber) / splitNumber)\\n\\t                            });\\n\\t                        }\\n\\n\\t                        group.add(tickLine);\\n\\t                        angle += subStep;\\n\\t                    }\\n\\t                    angle -= subStep;\\n\\t                }\\n\\t                else {\\n\\t                    angle += step;\\n\\t                }\\n\\t            }\\n\\t        },\\n\\n\\t        _renderPointer: function (\\n\\t            seriesModel, ecModel, api, getColor, posInfo,\\n\\t            startAngle, endAngle, clockwise\\n\\t        ) {\\n\\n\\t            var group = this.group;\\n\\t            var oldData = this._data;\\n\\n\\t            if (!seriesModel.get('pointer.show')) {\\n\\t                // Remove old element\\n\\t                oldData && oldData.eachItemGraphicEl(function (el) {\\n\\t                    group.remove(el);\\n\\t                });\\n\\t                return;\\n\\t            }\\n\\n\\t            var valueExtent = [+seriesModel.get('min'), +seriesModel.get('max')];\\n\\t            var angleExtent = [startAngle, endAngle];\\n\\n\\t            var data = seriesModel.getData();\\n\\n\\t            data.diff(oldData)\\n\\t                .add(function (idx) {\\n\\t                    var pointer = new PointerPath({\\n\\t                        shape: {\\n\\t                            angle: startAngle\\n\\t                        }\\n\\t                    });\\n\\n\\t                    graphic.initProps(pointer, {\\n\\t                        shape: {\\n\\t                            angle: numberUtil.linearMap(data.get('value', idx), valueExtent, angleExtent, true)\\n\\t                        }\\n\\t                    }, seriesModel);\\n\\n\\t                    group.add(pointer);\\n\\t                    data.setItemGraphicEl(idx, pointer);\\n\\t                })\\n\\t                .update(function (newIdx, oldIdx) {\\n\\t                    var pointer = oldData.getItemGraphicEl(oldIdx);\\n\\n\\t                    graphic.updateProps(pointer, {\\n\\t                        shape: {\\n\\t                            angle: numberUtil.linearMap(data.get('value', newIdx), valueExtent, angleExtent, true)\\n\\t                        }\\n\\t                    }, seriesModel);\\n\\n\\t                    group.add(pointer);\\n\\t                    data.setItemGraphicEl(newIdx, pointer);\\n\\t                })\\n\\t                .remove(function (idx) {\\n\\t                    var pointer = oldData.getItemGraphicEl(idx);\\n\\t                    group.remove(pointer);\\n\\t                })\\n\\t                .execute();\\n\\n\\t            data.eachItemGraphicEl(function (pointer, idx) {\\n\\t                var itemModel = data.getItemModel(idx);\\n\\t                var pointerModel = itemModel.getModel('pointer');\\n\\n\\t                pointer.setShape({\\n\\t                    x: posInfo.cx,\\n\\t                    y: posInfo.cy,\\n\\t                    width: parsePercent(\\n\\t                        pointerModel.get('width'), posInfo.r\\n\\t                    ),\\n\\t                    r: parsePercent(pointerModel.get('length'), posInfo.r)\\n\\t                });\\n\\n\\t                pointer.useStyle(itemModel.getModel('itemStyle.normal').getItemStyle());\\n\\n\\t                if (pointer.style.fill === 'auto') {\\n\\t                    pointer.setStyle('fill', getColor(\\n\\t                        numberUtil.linearMap(data.get('value', idx), valueExtent, [0, 1], true)\\n\\t                    ));\\n\\t                }\\n\\n\\t                graphic.setHoverStyle(\\n\\t                    pointer, itemModel.getModel('itemStyle.emphasis').getItemStyle()\\n\\t                );\\n\\t            });\\n\\n\\t            this._data = data;\\n\\t        },\\n\\n\\t        _renderTitle: function (\\n\\t            seriesModel, ecModel, api, getColor, posInfo\\n\\t        ) {\\n\\t            var titleModel = seriesModel.getModel('title');\\n\\t            if (titleModel.get('show')) {\\n\\t                var textStyleModel = titleModel.getModel('textStyle');\\n\\t                var offsetCenter = titleModel.get('offsetCenter');\\n\\t                var x = posInfo.cx + parsePercent(offsetCenter[0], posInfo.r);\\n\\t                var y = posInfo.cy + parsePercent(offsetCenter[1], posInfo.r);\\n\\n\\t                var text = new graphic.Text({\\n\\t                    style: {\\n\\t                        x: x,\\n\\t                        y: y,\\n\\t                        // FIXME First data name ?\\n\\t                        text: seriesModel.getData().getName(0),\\n\\t                        fill: textStyleModel.getTextColor(),\\n\\t                        textFont: textStyleModel.getFont(),\\n\\t                        textAlign: 'center',\\n\\t                        textVerticalAlign: 'middle'\\n\\t                    }\\n\\t                });\\n\\n\\t                if (text.style.fill === 'auto') {\\n\\t                    var minVal = +seriesModel.get('min');\\n\\t                    var maxVal = +seriesModel.get('max');\\n\\t                    var value = seriesModel.getData().get('value', 0);\\n\\t                    text.setStyle('fill', getColor(\\n\\t                        numberUtil.linearMap(value, [minVal, maxVal], [0, 1], true)\\n\\t                    ));\\n\\t                }\\n\\n\\t                this.group.add(text);\\n\\t            }\\n\\t        },\\n\\n\\t        _renderDetail: function (\\n\\t            seriesModel, ecModel, api, getColor, posInfo\\n\\t        ) {\\n\\t            var detailModel = seriesModel.getModel('detail');\\n\\t            var minVal = +seriesModel.get('min');\\n\\t            var maxVal = +seriesModel.get('max');\\n\\t            if (detailModel.get('show')) {\\n\\t                var textStyleModel = detailModel.getModel('textStyle');\\n\\t                var offsetCenter = detailModel.get('offsetCenter');\\n\\t                var x = posInfo.cx + parsePercent(offsetCenter[0], posInfo.r);\\n\\t                var y = posInfo.cy + parsePercent(offsetCenter[1], posInfo.r);\\n\\t                var width = parsePercent(detailModel.get('width'), posInfo.r);\\n\\t                var height = parsePercent(detailModel.get('height'), posInfo.r);\\n\\t                var value = seriesModel.getData().get('value', 0);\\n\\t                var rect = new graphic.Rect({\\n\\t                    shape: {\\n\\t                        x: x - width / 2,\\n\\t                        y: y - height / 2,\\n\\t                        width: width,\\n\\t                        height: height\\n\\t                    },\\n\\t                    style: {\\n\\t                        text: formatLabel(\\n\\t                            // FIXME First data name ?\\n\\t                            value, detailModel.get('formatter')\\n\\t                        ),\\n\\t                        fill: detailModel.get('backgroundColor'),\\n\\t                        textFill: textStyleModel.getTextColor(),\\n\\t                        textFont: textStyleModel.getFont()\\n\\t                    }\\n\\t                });\\n\\t                if (rect.style.textFill === 'auto') {\\n\\t                    rect.setStyle('textFill', getColor(\\n\\t                        numberUtil.linearMap(value, [minVal, maxVal], [0, 1], true)\\n\\t                    ));\\n\\t                }\\n\\t                rect.setStyle(detailModel.getItemStyle(['color']));\\n\\t                this.group.add(rect);\\n\\t            }\\n\\t        }\\n\\t    });\\n\\n\\t    module.exports = GaugeView;\\n\\n\\n/***/ },\\n/* 229 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    module.exports = __webpack_require__(20).extend({\\n\\n\\t        type: 'echartsGaugePointer',\\n\\n\\t        shape: {\\n\\t            angle: 0,\\n\\n\\t            width: 10,\\n\\n\\t            r: 10,\\n\\n\\t            x: 0,\\n\\n\\t            y: 0\\n\\t        },\\n\\n\\t        buildPath: function (ctx, shape) {\\n\\t            var mathCos = Math.cos;\\n\\t            var mathSin = Math.sin;\\n\\n\\t            var r = shape.r;\\n\\t            var width = shape.width;\\n\\t            var angle = shape.angle;\\n\\t            var x = shape.x - mathCos(angle) * width * (width >= r / 3 ? 1 : 2);\\n\\t            var y = shape.y - mathSin(angle) * width * (width >= r / 3 ? 1 : 2);\\n\\n\\t            angle = shape.angle - Math.PI / 2;\\n\\t            ctx.moveTo(x, y);\\n\\t            ctx.lineTo(\\n\\t                shape.x + mathCos(angle) * width,\\n\\t                shape.y + mathSin(angle) * width\\n\\t            );\\n\\t            ctx.lineTo(\\n\\t                shape.x + mathCos(shape.angle) * r,\\n\\t                shape.y + mathSin(shape.angle) * r\\n\\t            );\\n\\t            ctx.lineTo(\\n\\t                shape.x - mathCos(angle) * width,\\n\\t                shape.y - mathSin(angle) * width\\n\\t            );\\n\\t            ctx.lineTo(x, y);\\n\\t            return;\\n\\t        }\\n\\t    });\\n\\n\\n/***/ },\\n/* 230 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var echarts = __webpack_require__(1);\\n\\n\\t    __webpack_require__(231);\\n\\t    __webpack_require__(232);\\n\\n\\t    echarts.registerVisual(zrUtil.curry(__webpack_require__(151), 'funnel'));\\n\\t    echarts.registerLayout(__webpack_require__(233));\\n\\n\\t    echarts.registerProcessor(zrUtil.curry(__webpack_require__(154), 'funnel'));\\n\\n\\n/***/ },\\n/* 231 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t'use strict';\\n\\n\\n\\t    var List = __webpack_require__(98);\\n\\t    var modelUtil = __webpack_require__(5);\\n\\t    var completeDimensions = __webpack_require__(110);\\n\\n\\t    var FunnelSeries = __webpack_require__(1).extendSeriesModel({\\n\\n\\t        type: 'series.funnel',\\n\\n\\t        init: function (option) {\\n\\t            FunnelSeries.superApply(this, 'init', arguments);\\n\\n\\t            // Enable legend selection for each data item\\n\\t            // Use a function instead of direct access because data reference may changed\\n\\t            this.legendDataProvider = function () {\\n\\t                return this.getRawData();\\n\\t            };\\n\\t            // Extend labelLine emphasis\\n\\t            this._defaultLabelLine(option);\\n\\t        },\\n\\n\\t        getInitialData: function (option, ecModel) {\\n\\t            var dimensions = completeDimensions(['value'], option.data);\\n\\t            var list = new List(dimensions, this);\\n\\t            list.initData(option.data);\\n\\t            return list;\\n\\t        },\\n\\n\\t        _defaultLabelLine: function (option) {\\n\\t            // Extend labelLine emphasis\\n\\t            modelUtil.defaultEmphasis(option.labelLine, ['show']);\\n\\n\\t            var labelLineNormalOpt = option.labelLine.normal;\\n\\t            var labelLineEmphasisOpt = option.labelLine.emphasis;\\n\\t            // Not show label line if `label.normal.show = false`\\n\\t            labelLineNormalOpt.show = labelLineNormalOpt.show\\n\\t                && option.label.normal.show;\\n\\t            labelLineEmphasisOpt.show = labelLineEmphasisOpt.show\\n\\t                && option.label.emphasis.show;\\n\\t        },\\n\\n\\t        // Overwrite\\n\\t        getDataParams: function (dataIndex) {\\n\\t            var data = this.getData();\\n\\t            var params = FunnelSeries.superCall(this, 'getDataParams', dataIndex);\\n\\t            var sum = data.getSum('value');\\n\\t            // Percent is 0 if sum is 0\\n\\t            params.percent = !sum ? 0 : +(data.get('value', dataIndex) / sum * 100).toFixed(2);\\n\\n\\t            params.$vars.push('percent');\\n\\t            return params;\\n\\t        },\\n\\n\\t        defaultOption: {\\n\\t            zlevel: 0,                  // 一级层叠\\n\\t            z: 2,                       // 二级层叠\\n\\t            legendHoverLink: true,\\n\\t            left: 80,\\n\\t            top: 60,\\n\\t            right: 80,\\n\\t            bottom: 60,\\n\\t            // width: {totalWidth} - left - right,\\n\\t            // height: {totalHeight} - top - bottom,\\n\\n\\t            // 默认取数据最小最大值\\n\\t            // min: 0,\\n\\t            // max: 100,\\n\\t            minSize: '0%',\\n\\t            maxSize: '100%',\\n\\t            sort: 'descending', // 'ascending', 'descending'\\n\\t            gap: 0,\\n\\t            funnelAlign: 'center',\\n\\t            label: {\\n\\t                normal: {\\n\\t                    show: true,\\n\\t                    position: 'outer'\\n\\t                    // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\\n\\t                    // textStyle: null      // 默认使用全局文本样式，详见TEXTSTYLE\\n\\t                },\\n\\t                emphasis: {\\n\\t                    show: true\\n\\t                }\\n\\t            },\\n\\t            labelLine: {\\n\\t                normal: {\\n\\t                    show: true,\\n\\t                    length: 20,\\n\\t                    lineStyle: {\\n\\t                        // color: 各异,\\n\\t                        width: 1,\\n\\t                        type: 'solid'\\n\\t                    }\\n\\t                },\\n\\t                emphasis: {}\\n\\t            },\\n\\t            itemStyle: {\\n\\t                normal: {\\n\\t                    // color: 各异,\\n\\t                    borderColor: '#fff',\\n\\t                    borderWidth: 1\\n\\t                },\\n\\t                emphasis: {\\n\\t                    // color: 各异,\\n\\t                }\\n\\t            }\\n\\t        }\\n\\t    });\\n\\n\\t    module.exports = FunnelSeries;\\n\\n\\n\\n/***/ },\\n/* 232 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var graphic = __webpack_require__(18);\\n\\t    var zrUtil = __webpack_require__(4);\\n\\n\\t    /**\\n\\t     * Piece of pie including Sector, Label, LabelLine\\n\\t     * @constructor\\n\\t     * @extends {module:zrender/graphic/Group}\\n\\t     */\\n\\t    function FunnelPiece(data, idx) {\\n\\n\\t        graphic.Group.call(this);\\n\\n\\t        var polygon = new graphic.Polygon();\\n\\t        var labelLine = new graphic.Polyline();\\n\\t        var text = new graphic.Text();\\n\\t        this.add(polygon);\\n\\t        this.add(labelLine);\\n\\t        this.add(text);\\n\\n\\t        this.updateData(data, idx, true);\\n\\n\\t        // Hover to change label and labelLine\\n\\t        function onEmphasis() {\\n\\t            labelLine.ignore = labelLine.hoverIgnore;\\n\\t            text.ignore = text.hoverIgnore;\\n\\t        }\\n\\t        function onNormal() {\\n\\t            labelLine.ignore = labelLine.normalIgnore;\\n\\t            text.ignore = text.normalIgnore;\\n\\t        }\\n\\t        this.on('emphasis', onEmphasis)\\n\\t            .on('normal', onNormal)\\n\\t            .on('mouseover', onEmphasis)\\n\\t            .on('mouseout', onNormal);\\n\\t    }\\n\\n\\t    var funnelPieceProto = FunnelPiece.prototype;\\n\\n\\t    function getLabelStyle(data, idx, state, labelModel) {\\n\\t        var textStyleModel = labelModel.getModel('textStyle');\\n\\t        var position = labelModel.get('position');\\n\\t        var isLabelInside = position === 'inside' || position === 'inner' || position === 'center';\\n\\t        return {\\n\\t            fill: textStyleModel.getTextColor()\\n\\t                || (isLabelInside ? '#fff' : data.getItemVisual(idx, 'color')),\\n\\t            textFont: textStyleModel.getFont(),\\n\\t            text: zrUtil.retrieve(\\n\\t                data.hostModel.getFormattedLabel(idx, state),\\n\\t                data.getName(idx)\\n\\t            )\\n\\t        };\\n\\t    }\\n\\n\\t    var opacityAccessPath = ['itemStyle', 'normal', 'opacity'];\\n\\t    funnelPieceProto.updateData = function (data, idx, firstCreate) {\\n\\n\\t        var polygon = this.childAt(0);\\n\\n\\t        var seriesModel = data.hostModel;\\n\\t        var itemModel = data.getItemModel(idx);\\n\\t        var layout = data.getItemLayout(idx);\\n\\t        var opacity = data.getItemModel(idx).get(opacityAccessPath);\\n\\t        opacity = opacity == null ? 1 : opacity;\\n\\n\\t        // Reset style\\n\\t        polygon.useStyle({});\\n\\n\\t        if (firstCreate) {\\n\\t            polygon.setShape({\\n\\t                points: layout.points\\n\\t            });\\n\\t            polygon.setStyle({ opacity : 0 });\\n\\t            graphic.initProps(polygon, {\\n\\t                style: {\\n\\t                    opacity: opacity\\n\\t                }\\n\\t            }, seriesModel, idx);\\n\\t        }\\n\\t        else {\\n\\t            graphic.updateProps(polygon, {\\n\\t                style: {\\n\\t                    opacity: opacity\\n\\t                },\\n\\t                shape: {\\n\\t                    points: layout.points\\n\\t                }\\n\\t            }, seriesModel, idx);\\n\\t        }\\n\\n\\t        // Update common style\\n\\t        var itemStyleModel = itemModel.getModel('itemStyle');\\n\\t        var visualColor = data.getItemVisual(idx, 'color');\\n\\n\\t        polygon.setStyle(\\n\\t            zrUtil.defaults(\\n\\t                {\\n\\t                    lineJoin: 'round',\\n\\t                    fill: visualColor\\n\\t                },\\n\\t                itemStyleModel.getModel('normal').getItemStyle(['opacity'])\\n\\t            )\\n\\t        );\\n\\t        polygon.hoverStyle = itemStyleModel.getModel('emphasis').getItemStyle();\\n\\n\\t        this._updateLabel(data, idx);\\n\\n\\t        graphic.setHoverStyle(this);\\n\\t    };\\n\\n\\t    funnelPieceProto._updateLabel = function (data, idx) {\\n\\n\\t        var labelLine = this.childAt(1);\\n\\t        var labelText = this.childAt(2);\\n\\n\\t        var seriesModel = data.hostModel;\\n\\t        var itemModel = data.getItemModel(idx);\\n\\t        var layout = data.getItemLayout(idx);\\n\\t        var labelLayout = layout.label;\\n\\t        var visualColor = data.getItemVisual(idx, 'color');\\n\\n\\t        graphic.updateProps(labelLine, {\\n\\t            shape: {\\n\\t                points: labelLayout.linePoints || labelLayout.linePoints\\n\\t            }\\n\\t        }, seriesModel, idx);\\n\\n\\t        graphic.updateProps(labelText, {\\n\\t            style: {\\n\\t                x: labelLayout.x,\\n\\t                y: labelLayout.y\\n\\t            }\\n\\t        }, seriesModel, idx);\\n\\t        labelText.attr({\\n\\t            style: {\\n\\t                textAlign: labelLayout.textAlign,\\n\\t                textVerticalAlign: labelLayout.verticalAlign,\\n\\t                textFont: labelLayout.font\\n\\t            },\\n\\t            rotation: labelLayout.rotation,\\n\\t            origin: [labelLayout.x, labelLayout.y],\\n\\t            z2: 10\\n\\t        });\\n\\n\\t        var labelModel = itemModel.getModel('label.normal');\\n\\t        var labelHoverModel = itemModel.getModel('label.emphasis');\\n\\t        var labelLineModel = itemModel.getModel('labelLine.normal');\\n\\t        var labelLineHoverModel = itemModel.getModel('labelLine.emphasis');\\n\\n\\t        labelText.setStyle(getLabelStyle(data, idx, 'normal', labelModel));\\n\\n\\t        labelText.ignore = labelText.normalIgnore = !labelModel.get('show');\\n\\t        labelText.hoverIgnore = !labelHoverModel.get('show');\\n\\n\\t        labelLine.ignore = labelLine.normalIgnore = !labelLineModel.get('show');\\n\\t        labelLine.hoverIgnore = !labelLineHoverModel.get('show');\\n\\n\\t        // Default use item visual color\\n\\t        labelLine.setStyle({\\n\\t            stroke: visualColor\\n\\t        });\\n\\t        labelLine.setStyle(labelLineModel.getModel('lineStyle').getLineStyle());\\n\\n\\t        labelText.hoverStyle = getLabelStyle(data, idx, 'emphasis', labelHoverModel);\\n\\t        labelLine.hoverStyle = labelLineHoverModel.getModel('lineStyle').getLineStyle();\\n\\t    };\\n\\n\\t    zrUtil.inherits(FunnelPiece, graphic.Group);\\n\\n\\n\\t    var Funnel = __webpack_require__(80).extend({\\n\\n\\t        type: 'funnel',\\n\\n\\t        render: function (seriesModel, ecModel, api) {\\n\\t            var data = seriesModel.getData();\\n\\t            var oldData = this._data;\\n\\n\\t            var group = this.group;\\n\\n\\t            data.diff(oldData)\\n\\t                .add(function (idx) {\\n\\t                    var funnelPiece = new FunnelPiece(data, idx);\\n\\n\\t                    data.setItemGraphicEl(idx, funnelPiece);\\n\\n\\t                    group.add(funnelPiece);\\n\\t                })\\n\\t                .update(function (newIdx, oldIdx) {\\n\\t                    var piePiece = oldData.getItemGraphicEl(oldIdx);\\n\\n\\t                    piePiece.updateData(data, newIdx);\\n\\n\\t                    group.add(piePiece);\\n\\t                    data.setItemGraphicEl(newIdx, piePiece);\\n\\t                })\\n\\t                .remove(function (idx) {\\n\\t                    var piePiece = oldData.getItemGraphicEl(idx);\\n\\t                    group.remove(piePiece);\\n\\t                })\\n\\t                .execute();\\n\\n\\t            this._data = data;\\n\\t        },\\n\\n\\t        remove: function () {\\n\\t            this.group.removeAll();\\n\\t            this._data = null;\\n\\t        },\\n\\n\\t        dispose: function () {}\\n\\t    });\\n\\n\\t    module.exports = Funnel;\\n\\n\\n/***/ },\\n/* 233 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var layout = __webpack_require__(71);\\n\\t    var number = __webpack_require__(7);\\n\\n\\t    var parsePercent = number.parsePercent;\\n\\n\\t    function getViewRect(seriesModel, api) {\\n\\t        return layout.getLayoutRect(\\n\\t            seriesModel.getBoxLayoutParams(), {\\n\\t                width: api.getWidth(),\\n\\t                height: api.getHeight()\\n\\t            }\\n\\t        );\\n\\t    }\\n\\n\\t    function getSortedIndices(data, sort) {\\n\\t        var valueArr = data.mapArray('value', function (val) {\\n\\t            return val;\\n\\t        });\\n\\t        var indices = [];\\n\\t        var isAscending = sort === 'ascending';\\n\\t        for (var i = 0, len = data.count(); i < len; i++) {\\n\\t            indices[i] = i;\\n\\t        }\\n\\n\\t        // Add custom sortable function & none sortable opetion by \\\"options.sort\\\"\\n\\t        if (typeof sort === 'function') {\\n\\t            indices.sort(sort);\\n\\t        } else if (sort !== 'none') {\\n\\t            indices.sort(function (a, b) {\\n\\t                return isAscending ? valueArr[a] - valueArr[b] : valueArr[b] - valueArr[a];\\n\\t            });\\n\\t        }\\n\\t        return indices;\\n\\t    }\\n\\n\\t    function labelLayout (data) {\\n\\t        data.each(function (idx) {\\n\\t            var itemModel = data.getItemModel(idx);\\n\\t            var labelModel = itemModel.getModel('label.normal');\\n\\t            var labelPosition = labelModel.get('position');\\n\\n\\t            var labelLineModel = itemModel.getModel('labelLine.normal');\\n\\n\\t            var layout = data.getItemLayout(idx);\\n\\t            var points = layout.points;\\n\\n\\t            var isLabelInside = labelPosition === 'inner'\\n\\t                || labelPosition === 'inside' || labelPosition === 'center';\\n\\n\\t            var textAlign;\\n\\t            var textX;\\n\\t            var textY;\\n\\t            var linePoints;\\n\\n\\t            if (isLabelInside) {\\n\\t                textX = (points[0][0] + points[1][0] + points[2][0] + points[3][0]) / 4;\\n\\t                textY = (points[0][1] + points[1][1] + points[2][1] + points[3][1]) / 4;\\n\\t                textAlign = 'center';\\n\\t                linePoints = [\\n\\t                    [textX, textY], [textX, textY]\\n\\t                ];\\n\\t            }\\n\\t            else {\\n\\t                var x1;\\n\\t                var y1;\\n\\t                var x2;\\n\\t                var labelLineLen = labelLineModel.get('length');\\n\\t                if (labelPosition === 'left') {\\n\\t                    // Left side\\n\\t                    x1 = (points[3][0] + points[0][0]) / 2;\\n\\t                    y1 = (points[3][1] + points[0][1]) / 2;\\n\\t                    x2 = x1 - labelLineLen;\\n\\t                    textX = x2 - 5;\\n\\t                    textAlign = 'right';\\n\\t                }\\n\\t                else {\\n\\t                    // Right side\\n\\t                    x1 = (points[1][0] + points[2][0]) / 2;\\n\\t                    y1 = (points[1][1] + points[2][1]) / 2;\\n\\t                    x2 = x1 + labelLineLen;\\n\\t                    textX = x2 + 5;\\n\\t                    textAlign = 'left';\\n\\t                }\\n\\t                var y2 = y1;\\n\\n\\t                linePoints = [[x1, y1], [x2, y2]];\\n\\t                textY = y2;\\n\\t            }\\n\\n\\t            layout.label = {\\n\\t                linePoints: linePoints,\\n\\t                x: textX,\\n\\t                y: textY,\\n\\t                verticalAlign: 'middle',\\n\\t                textAlign: textAlign,\\n\\t                inside: isLabelInside\\n\\t            };\\n\\t        });\\n\\t    }\\n\\n\\t    module.exports = function (ecModel, api, payload) {\\n\\t        ecModel.eachSeriesByType('funnel', function (seriesModel) {\\n\\t            var data = seriesModel.getData();\\n\\t            var sort = seriesModel.get('sort');\\n\\t            var viewRect = getViewRect(seriesModel, api);\\n\\t            var indices = getSortedIndices(data, sort);\\n\\n\\t            var sizeExtent = [\\n\\t                parsePercent(seriesModel.get('minSize'), viewRect.width),\\n\\t                parsePercent(seriesModel.get('maxSize'), viewRect.width)\\n\\t            ];\\n\\t            var dataExtent = data.getDataExtent('value');\\n\\t            var min = seriesModel.get('min');\\n\\t            var max = seriesModel.get('max');\\n\\t            if (min == null) {\\n\\t                min = Math.min(dataExtent[0], 0);\\n\\t            }\\n\\t            if (max == null) {\\n\\t                max = dataExtent[1];\\n\\t            }\\n\\n\\t            var funnelAlign = seriesModel.get('funnelAlign');\\n\\t            var gap = seriesModel.get('gap');\\n\\t            var itemHeight = (viewRect.height - gap * (data.count() - 1)) / data.count();\\n\\n\\t            var y = viewRect.y;\\n\\n\\t            var getLinePoints = function (idx, offY) {\\n\\t                // End point index is data.count() and we assign it 0\\n\\t                var val = data.get('value', idx) || 0;\\n\\t                var itemWidth = number.linearMap(val, [min, max], sizeExtent, true);\\n\\t                var x0;\\n\\t                switch (funnelAlign) {\\n\\t                    case 'left':\\n\\t                        x0 = viewRect.x;\\n\\t                        break;\\n\\t                    case 'center':\\n\\t                        x0 = viewRect.x + (viewRect.width - itemWidth) / 2;\\n\\t                        break;\\n\\t                    case 'right':\\n\\t                        x0 = viewRect.x + viewRect.width - itemWidth;\\n\\t                        break;\\n\\t                }\\n\\t                return [\\n\\t                    [x0, offY],\\n\\t                    [x0 + itemWidth, offY]\\n\\t                ];\\n\\t            };\\n\\n\\t            if (sort === 'ascending') {\\n\\t                // From bottom to top\\n\\t                itemHeight = -itemHeight;\\n\\t                gap = -gap;\\n\\t                y += viewRect.height;\\n\\t                indices = indices.reverse();\\n\\t            }\\n\\n\\t            for (var i = 0; i < indices.length; i++) {\\n\\t                var idx = indices[i];\\n\\t                var nextIdx = indices[i + 1];\\n\\t                var start = getLinePoints(idx, y);\\n\\t                var end = getLinePoints(nextIdx, y + itemHeight);\\n\\n\\t                y += itemHeight + gap;\\n\\n\\t                data.setItemLayout(idx, {\\n\\t                    points: start.concat(end.slice().reverse())\\n\\t                });\\n\\t            }\\n\\n\\t            labelLayout(data);\\n\\t        });\\n\\t    };\\n\\n\\n\\n/***/ },\\n/* 234 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var echarts = __webpack_require__(1);\\n\\n\\t    __webpack_require__(235);\\n\\n\\t    __webpack_require__(248);\\n\\t    __webpack_require__(249);\\n\\n\\t    echarts.registerVisual(__webpack_require__(250));\\n\\n\\n\\n/***/ },\\n/* 235 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    __webpack_require__(236);\\n\\t    __webpack_require__(240);\\n\\t    __webpack_require__(242);\\n\\n\\t    var echarts = __webpack_require__(1);\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var throttle = __webpack_require__(81);\\n\\n\\t    var CLICK_THRESHOLD = 5; // > 4\\n\\n\\t    // Parallel view\\n\\t    echarts.extendComponentView({\\n\\t        type: 'parallel',\\n\\n\\t        render: function (parallelModel, ecModel, api) {\\n\\t            this._model = parallelModel;\\n\\t            this._api = api;\\n\\n\\t            if (!this._handlers) {\\n\\t                this._handlers = {};\\n\\t                zrUtil.each(handlers, function (handler, eventName) {\\n\\t                    api.getZr().on(eventName, this._handlers[eventName] = zrUtil.bind(handler, this));\\n\\t                }, this);\\n\\t            }\\n\\n\\t            throttle.createOrUpdate(\\n\\t                this,\\n\\t                '_throttledDispatchExpand',\\n\\t                parallelModel.get('axisExpandRate'),\\n\\t                'fixRate'\\n\\t            );\\n\\t        },\\n\\n\\t        dispose: function (ecModel, api) {\\n\\t            zrUtil.each(this._handlers, function (handler, eventName) {\\n\\t                api.getZr().off(eventName, handler);\\n\\t            });\\n\\t            this._handlers = null;\\n\\t        },\\n\\n\\t        /**\\n\\t         * @param {Object} [opt] If null, cancle the last action triggering for debounce.\\n\\t         */\\n\\t        _throttledDispatchExpand: function (opt) {\\n\\t            this._dispatchExpand(opt);\\n\\t        },\\n\\n\\t        _dispatchExpand: function (opt) {\\n\\t            opt && this._api.dispatchAction(\\n\\t                zrUtil.extend({type: 'parallelAxisExpand'}, opt)\\n\\t            );\\n\\t        }\\n\\n\\t    });\\n\\n\\t    var handlers = {\\n\\n\\t        mousedown: function (e) {\\n\\t            if (checkTrigger(this, 'click')) {\\n\\t                this._mouseDownPoint = [e.offsetX, e.offsetY];\\n\\t            }\\n\\t        },\\n\\n\\t        mouseup: function (e) {\\n\\t            var mouseDownPoint = this._mouseDownPoint;\\n\\n\\t            if (checkTrigger(this, 'click') && mouseDownPoint) {\\n\\t                var point = [e.offsetX, e.offsetY];\\n\\t                var dist = Math.pow(mouseDownPoint[0] - point[0], 2)\\n\\t                    + Math.pow(mouseDownPoint[1] - point[1], 2);\\n\\n\\t                if (dist > CLICK_THRESHOLD) {\\n\\t                    return;\\n\\t                }\\n\\n\\t                var result = this._model.coordinateSystem.getSlidedAxisExpandWindow(\\n\\t                    [e.offsetX, e.offsetY]\\n\\t                );\\n\\n\\t                result.behavior !== 'none' && this._dispatchExpand({\\n\\t                    axisExpandWindow: result.axisExpandWindow\\n\\t                });\\n\\t            }\\n\\n\\t            this._mouseDownPoint = null;\\n\\t        },\\n\\n\\t        mousemove: function (e) {\\n\\t            // Should do nothing when brushing.\\n\\t            if (this._mouseDownPoint || !checkTrigger(this, 'mousemove')) {\\n\\t                return;\\n\\t            }\\n\\t            var model = this._model;\\n\\t            var result = model.coordinateSystem.getSlidedAxisExpandWindow(\\n\\t                [e.offsetX, e.offsetY]\\n\\t            );\\n\\n\\t            var behavior = result.behavior;\\n\\t            behavior === 'jump' && this._throttledDispatchExpand.debounceNextCall(model.get('axisExpandDebounce'));\\n\\t            this._throttledDispatchExpand(\\n\\t                behavior === 'none'\\n\\t                    ? null // Cancle the last trigger, in case that mouse slide out of the area quickly.\\n\\t                    : {\\n\\t                        axisExpandWindow: result.axisExpandWindow,\\n\\t                        // Jumping uses animation, and sliding suppresses animation.\\n\\t                        animation: behavior === 'jump'  ? null : false\\n\\t                    }\\n\\t            );\\n\\t        }\\n\\t    };\\n\\n\\t    function checkTrigger(view, triggerOn) {\\n\\t        var model = view._model;\\n\\t        return model.get('axisExpandable') && model.get('axisExpandTriggerOn') === triggerOn;\\n\\t    }\\n\\n\\t    echarts.registerPreprocessor(\\n\\t        __webpack_require__(247)\\n\\t    );\\n\\n\\n\\n/***/ },\\n/* 236 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * Parallel coordinate system creater.\\n\\t */\\n\\n\\n\\t    var Parallel = __webpack_require__(237);\\n\\n\\t    function create(ecModel, api) {\\n\\t        var coordSysList = [];\\n\\n\\t        ecModel.eachComponent('parallel', function (parallelModel, idx) {\\n\\t            var coordSys = new Parallel(parallelModel, ecModel, api);\\n\\n\\t            coordSys.name = 'parallel_' + idx;\\n\\t            coordSys.resize(parallelModel, api);\\n\\n\\t            parallelModel.coordinateSystem = coordSys;\\n\\t            coordSys.model = parallelModel;\\n\\n\\t            coordSysList.push(coordSys);\\n\\t        });\\n\\n\\t        // Inject the coordinateSystems into seriesModel\\n\\t        ecModel.eachSeries(function (seriesModel) {\\n\\t            if (seriesModel.get('coordinateSystem') === 'parallel') {\\n\\t                var parallelModel = ecModel.queryComponents({\\n\\t                    mainType: 'parallel',\\n\\t                    index: seriesModel.get('parallelIndex'),\\n\\t                    id: seriesModel.get('parallelId')\\n\\t                })[0];\\n\\t                seriesModel.coordinateSystem = parallelModel.coordinateSystem;\\n\\t            }\\n\\t        });\\n\\n\\t        return coordSysList;\\n\\t    }\\n\\n\\t    __webpack_require__(76).register('parallel', {create: create});\\n\\n\\n\\n/***/ },\\n/* 237 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * Parallel Coordinates\\n\\t * <https://en.wikipedia.org/wiki/Parallel_coordinates>\\n\\t */\\n\\n\\n\\t    var layoutUtil = __webpack_require__(71);\\n\\t    var axisHelper = __webpack_require__(101);\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var ParallelAxis = __webpack_require__(238);\\n\\t    var graphic = __webpack_require__(18);\\n\\t    var matrix = __webpack_require__(11);\\n\\t    var numberUtil = __webpack_require__(7);\\n\\t    var sliderMove = __webpack_require__(239);\\n\\n\\t    var each = zrUtil.each;\\n\\t    var mathMin = Math.min;\\n\\t    var mathMax = Math.max;\\n\\t    var mathFloor = Math.floor;\\n\\t    var mathCeil = Math.ceil;\\n\\t    var round = numberUtil.round;\\n\\n\\t    var PI = Math.PI;\\n\\n\\t    function Parallel(parallelModel, ecModel, api) {\\n\\n\\t        /**\\n\\t         * key: dimension\\n\\t         * @type {Object.<string, module:echarts/coord/parallel/Axis>}\\n\\t         * @private\\n\\t         */\\n\\t        this._axesMap = zrUtil.createHashMap();\\n\\n\\t        /**\\n\\t         * key: dimension\\n\\t         * value: {position: [], rotation, }\\n\\t         * @type {Object.<string, Object>}\\n\\t         * @private\\n\\t         */\\n\\t        this._axesLayout = {};\\n\\n\\t        /**\\n\\t         * Always follow axis order.\\n\\t         * @type {Array.<string>}\\n\\t         * @readOnly\\n\\t         */\\n\\t        this.dimensions = parallelModel.dimensions;\\n\\n\\t        /**\\n\\t         * @type {module:zrender/core/BoundingRect}\\n\\t         */\\n\\t        this._rect;\\n\\n\\t        /**\\n\\t         * @type {module:echarts/coord/parallel/ParallelModel}\\n\\t         */\\n\\t        this._model = parallelModel;\\n\\n\\t        this._init(parallelModel, ecModel, api);\\n\\t    }\\n\\n\\t    Parallel.prototype = {\\n\\n\\t        type: 'parallel',\\n\\n\\t        constructor: Parallel,\\n\\n\\t        /**\\n\\t         * Initialize cartesian coordinate systems\\n\\t         * @private\\n\\t         */\\n\\t        _init: function (parallelModel, ecModel, api) {\\n\\n\\t            var dimensions = parallelModel.dimensions;\\n\\t            var parallelAxisIndex = parallelModel.parallelAxisIndex;\\n\\n\\t            each(dimensions, function (dim, idx) {\\n\\n\\t                var axisIndex = parallelAxisIndex[idx];\\n\\t                var axisModel = ecModel.getComponent('parallelAxis', axisIndex);\\n\\n\\t                var axis = this._axesMap.set(dim, new ParallelAxis(\\n\\t                    dim,\\n\\t                    axisHelper.createScaleByModel(axisModel),\\n\\t                    [0, 0],\\n\\t                    axisModel.get('type'),\\n\\t                    axisIndex\\n\\t                ));\\n\\n\\t                var isCategory = axis.type === 'category';\\n\\t                axis.onBand = isCategory && axisModel.get('boundaryGap');\\n\\t                axis.inverse = axisModel.get('inverse');\\n\\n\\t                // Injection\\n\\t                axisModel.axis = axis;\\n\\t                axis.model = axisModel;\\n\\t                axis.coordinateSystem = axisModel.coordinateSystem = this;\\n\\n\\t            }, this);\\n\\t        },\\n\\n\\t        /**\\n\\t         * Update axis scale after data processed\\n\\t         * @param  {module:echarts/model/Global} ecModel\\n\\t         * @param  {module:echarts/ExtensionAPI} api\\n\\t         */\\n\\t        update: function (ecModel, api) {\\n\\t            this._updateAxesFromSeries(this._model, ecModel);\\n\\t        },\\n\\n\\t        /**\\n\\t         * @override\\n\\t         */\\n\\t        containPoint: function (point) {\\n\\t            var layoutInfo = this._makeLayoutInfo();\\n\\t            var axisBase = layoutInfo.axisBase;\\n\\t            var layoutBase = layoutInfo.layoutBase;\\n\\t            var pixelDimIndex = layoutInfo.pixelDimIndex;\\n\\t            var pAxis = point[1 - pixelDimIndex];\\n\\t            var pLayout = point[pixelDimIndex];\\n\\n\\t            return pAxis >= axisBase\\n\\t                && pAxis <= axisBase + layoutInfo.axisLength\\n\\t                && pLayout >= layoutBase\\n\\t                && pLayout <= layoutBase + layoutInfo.layoutLength;\\n\\t        },\\n\\n\\t        /**\\n\\t         * Update properties from series\\n\\t         * @private\\n\\t         */\\n\\t        _updateAxesFromSeries: function (parallelModel, ecModel) {\\n\\t            ecModel.eachSeries(function (seriesModel) {\\n\\n\\t                if (!parallelModel.contains(seriesModel, ecModel)) {\\n\\t                    return;\\n\\t                }\\n\\n\\t                var data = seriesModel.getData();\\n\\n\\t                each(this.dimensions, function (dim) {\\n\\t                    var axis = this._axesMap.get(dim);\\n\\t                    axis.scale.unionExtentFromData(data, dim);\\n\\t                    axisHelper.niceScaleExtent(axis.scale, axis.model);\\n\\t                }, this);\\n\\t            }, this);\\n\\t        },\\n\\n\\t        /**\\n\\t         * Resize the parallel coordinate system.\\n\\t         * @param {module:echarts/coord/parallel/ParallelModel} parallelModel\\n\\t         * @param {module:echarts/ExtensionAPI} api\\n\\t         */\\n\\t        resize: function (parallelModel, api) {\\n\\t            this._rect = layoutUtil.getLayoutRect(\\n\\t                parallelModel.getBoxLayoutParams(),\\n\\t                {\\n\\t                    width: api.getWidth(),\\n\\t                    height: api.getHeight()\\n\\t                }\\n\\t            );\\n\\n\\t            this._layoutAxes();\\n\\t        },\\n\\n\\t        /**\\n\\t         * @return {module:zrender/core/BoundingRect}\\n\\t         */\\n\\t        getRect: function () {\\n\\t            return this._rect;\\n\\t        },\\n\\n\\t        /**\\n\\t         * @private\\n\\t         */\\n\\t        _makeLayoutInfo: function () {\\n\\t            var parallelModel = this._model;\\n\\t            var rect = this._rect;\\n\\t            var xy = ['x', 'y'];\\n\\t            var wh = ['width', 'height'];\\n\\t            var layout = parallelModel.get('layout');\\n\\t            var pixelDimIndex = layout === 'horizontal' ? 0 : 1;\\n\\t            var layoutLength = rect[wh[pixelDimIndex]];\\n\\t            var layoutExtent = [0, layoutLength];\\n\\t            var axisCount = this.dimensions.length;\\n\\n\\t            var axisExpandWidth = restrict(parallelModel.get('axisExpandWidth'), layoutExtent);\\n\\t            var axisExpandCount = restrict(parallelModel.get('axisExpandCount') || 0, [0, axisCount]);\\n\\t            var axisExpandable = parallelModel.get('axisExpandable')\\n\\t                && axisCount > 3\\n\\t                && axisCount > axisExpandCount\\n\\t                && axisExpandCount > 1\\n\\t                && axisExpandWidth > 0\\n\\t                && layoutLength > 0;\\n\\n\\t            // `axisExpandWindow` is According to the coordinates of [0, axisExpandLength],\\n\\t            // for sake of consider the case that axisCollapseWidth is 0 (when screen is narrow),\\n\\t            // where collapsed axes should be overlapped.\\n\\t            var axisExpandWindow = parallelModel.get('axisExpandWindow');\\n\\t            var winSize;\\n\\t            if (!axisExpandWindow) {\\n\\t                winSize = restrict(axisExpandWidth * (axisExpandCount - 1), layoutExtent);\\n\\t                var axisExpandCenter = parallelModel.get('axisExpandCenter') || mathFloor(axisCount / 2);\\n\\t                axisExpandWindow = [axisExpandWidth * axisExpandCenter - winSize / 2];\\n\\t                axisExpandWindow[1] = axisExpandWindow[0] + winSize;\\n\\t            }\\n\\t            else {\\n\\t                 winSize = restrict(axisExpandWindow[1] - axisExpandWindow[0], layoutExtent);\\n\\t                 axisExpandWindow[1] = axisExpandWindow[0] + winSize;\\n\\t            }\\n\\n\\t            var axisCollapseWidth = (layoutLength - winSize) / (axisCount - axisExpandCount);\\n\\t            // Avoid axisCollapseWidth is too small.\\n\\t            axisCollapseWidth < 3 && (axisCollapseWidth = 0);\\n\\n\\t            // Find the first and last indices > ewin[0] and < ewin[1].\\n\\t            var winInnerIndices = [\\n\\t                mathFloor(round(axisExpandWindow[0] / axisExpandWidth, 1)) + 1,\\n\\t                mathCeil(round(axisExpandWindow[1] / axisExpandWidth, 1)) - 1\\n\\t            ];\\n\\n\\t            // Pos in ec coordinates.\\n\\t            var axisExpandWindow0Pos = axisCollapseWidth / axisExpandWidth * axisExpandWindow[0];\\n\\n\\t            return {\\n\\t                layout: layout,\\n\\t                pixelDimIndex: pixelDimIndex,\\n\\t                layoutBase: rect[xy[pixelDimIndex]],\\n\\t                layoutLength: layoutLength,\\n\\t                axisBase: rect[xy[1 - pixelDimIndex]],\\n\\t                axisLength: rect[wh[1 - pixelDimIndex]],\\n\\t                axisExpandable: axisExpandable,\\n\\t                axisExpandWidth: axisExpandWidth,\\n\\t                axisCollapseWidth: axisCollapseWidth,\\n\\t                axisExpandWindow: axisExpandWindow,\\n\\t                axisCount: axisCount,\\n\\t                winInnerIndices: winInnerIndices,\\n\\t                axisExpandWindow0Pos: axisExpandWindow0Pos\\n\\t            };\\n\\t        },\\n\\n\\t        /**\\n\\t         * @private\\n\\t         */\\n\\t        _layoutAxes: function () {\\n\\t            var rect = this._rect;\\n\\t            var axes = this._axesMap;\\n\\t            var dimensions = this.dimensions;\\n\\t            var layoutInfo = this._makeLayoutInfo();\\n\\t            var layout = layoutInfo.layout;\\n\\n\\t            axes.each(function (axis) {\\n\\t                var axisExtent = [0, layoutInfo.axisLength];\\n\\t                var idx = axis.inverse ? 1 : 0;\\n\\t                axis.setExtent(axisExtent[idx], axisExtent[1 - idx]);\\n\\t            });\\n\\n\\t            each(dimensions, function (dim, idx) {\\n\\t                var posInfo = (layoutInfo.axisExpandable\\n\\t                    ? layoutAxisWithExpand : layoutAxisWithoutExpand\\n\\t                )(idx, layoutInfo);\\n\\n\\t                var positionTable = {\\n\\t                    horizontal: {\\n\\t                        x: posInfo.position,\\n\\t                        y: layoutInfo.axisLength\\n\\t                    },\\n\\t                    vertical: {\\n\\t                        x: 0,\\n\\t                        y: posInfo.position\\n\\t                    }\\n\\t                };\\n\\t                var rotationTable = {\\n\\t                    horizontal: PI / 2,\\n\\t                    vertical: 0\\n\\t                };\\n\\n\\t                var position = [\\n\\t                    positionTable[layout].x + rect.x,\\n\\t                    positionTable[layout].y + rect.y\\n\\t                ];\\n\\n\\t                var rotation = rotationTable[layout];\\n\\t                var transform = matrix.create();\\n\\t                matrix.rotate(transform, transform, rotation);\\n\\t                matrix.translate(transform, transform, position);\\n\\n\\t                // TODO\\n\\t                // tick等排布信息。\\n\\n\\t                // TODO\\n\\t                // 根据axis order 更新 dimensions顺序。\\n\\n\\t                this._axesLayout[dim] = {\\n\\t                    position: position,\\n\\t                    rotation: rotation,\\n\\t                    transform: transform,\\n\\t                    axisNameAvailableWidth: posInfo.axisNameAvailableWidth,\\n\\t                    axisLabelShow: posInfo.axisLabelShow,\\n\\t                    nameTruncateMaxWidth: posInfo.nameTruncateMaxWidth,\\n\\t                    tickDirection: 1,\\n\\t                    labelDirection: 1,\\n\\t                    labelInterval: axes.get(dim).getLabelInterval()\\n\\t                };\\n\\t            }, this);\\n\\t        },\\n\\n\\t        /**\\n\\t         * Get axis by dim.\\n\\t         * @param {string} dim\\n\\t         * @return {module:echarts/coord/parallel/ParallelAxis} [description]\\n\\t         */\\n\\t        getAxis: function (dim) {\\n\\t            return this._axesMap.get(dim);\\n\\t        },\\n\\n\\t        /**\\n\\t         * Convert a dim value of a single item of series data to Point.\\n\\t         * @param {*} value\\n\\t         * @param {string} dim\\n\\t         * @return {Array}\\n\\t         */\\n\\t        dataToPoint: function (value, dim) {\\n\\t            return this.axisCoordToPoint(\\n\\t                this._axesMap.get(dim).dataToCoord(value),\\n\\t                dim\\n\\t            );\\n\\t        },\\n\\n\\t        /**\\n\\t         * Travel data for one time, get activeState of each data item.\\n\\t         * @param {module:echarts/data/List} data\\n\\t         * @param {Functio} cb param: {string} activeState 'active' or 'inactive' or 'normal'\\n\\t         *                            {number} dataIndex\\n\\t         * @param {Object} context\\n\\t         */\\n\\t        eachActiveState: function (data, callback, context) {\\n\\t            var dimensions = this.dimensions;\\n\\t            var axesMap = this._axesMap;\\n\\t            var hasActiveSet = this.hasAxisBrushed();\\n\\n\\t            for (var i = 0, len = data.count(); i < len; i++) {\\n\\t                var values = data.getValues(dimensions, i);\\n\\t                var activeState;\\n\\n\\t                if (!hasActiveSet) {\\n\\t                    activeState = 'normal';\\n\\t                }\\n\\t                else {\\n\\t                    activeState = 'active';\\n\\t                    for (var j = 0, lenj = dimensions.length; j < lenj; j++) {\\n\\t                        var dimName = dimensions[j];\\n\\t                        var state = axesMap.get(dimName).model.getActiveState(values[j], j);\\n\\n\\t                        if (state === 'inactive') {\\n\\t                            activeState = 'inactive';\\n\\t                            break;\\n\\t                        }\\n\\t                    }\\n\\t                }\\n\\n\\t                callback.call(context, activeState, i);\\n\\t            }\\n\\t        },\\n\\n\\t        /**\\n\\t         * Whether has any activeSet.\\n\\t         * @return {boolean}\\n\\t         */\\n\\t        hasAxisBrushed: function () {\\n\\t            var dimensions = this.dimensions;\\n\\t            var axesMap = this._axesMap;\\n\\t            var hasActiveSet = false;\\n\\n\\t            for (var j = 0, lenj = dimensions.length; j < lenj; j++) {\\n\\t                if (axesMap.get(dimensions[j]).model.getActiveState() !== 'normal') {\\n\\t                    hasActiveSet = true;\\n\\t                }\\n\\t            }\\n\\n\\t            return hasActiveSet;\\n\\t        },\\n\\n\\t        /**\\n\\t         * Convert coords of each axis to Point.\\n\\t         *  Return point. For example: [10, 20]\\n\\t         * @param {Array.<number>} coords\\n\\t         * @param {string} dim\\n\\t         * @return {Array.<number>}\\n\\t         */\\n\\t        axisCoordToPoint: function (coord, dim) {\\n\\t            var axisLayout = this._axesLayout[dim];\\n\\t            return graphic.applyTransform([coord, 0], axisLayout.transform);\\n\\t        },\\n\\n\\t        /**\\n\\t         * Get axis layout.\\n\\t         */\\n\\t        getAxisLayout: function (dim) {\\n\\t            return zrUtil.clone(this._axesLayout[dim]);\\n\\t        },\\n\\n\\t        /**\\n\\t         * @param {Array.<number>} point\\n\\t         * @return {Object} {axisExpandWindow, delta, behavior: 'jump' | 'slide' | 'none'}.\\n\\t         */\\n\\t        getSlidedAxisExpandWindow: function (point) {\\n\\t            var layoutInfo = this._makeLayoutInfo();\\n\\t            var pixelDimIndex = layoutInfo.pixelDimIndex;\\n\\t            var axisExpandWindow = layoutInfo.axisExpandWindow.slice();\\n\\t            var winSize = axisExpandWindow[1] - axisExpandWindow[0];\\n\\t            var extent = [0, layoutInfo.axisExpandWidth * (layoutInfo.axisCount - 1)];\\n\\n\\t            // Out of the area of coordinate system.\\n\\t            if (!this.containPoint(point)) {\\n\\t                return {behavior: 'none', axisExpandWindow: axisExpandWindow};\\n\\t            }\\n\\n\\t            // Conver the point from global to expand coordinates.\\n\\t            var pointCoord = point[pixelDimIndex] - layoutInfo.layoutBase - layoutInfo.axisExpandWindow0Pos;\\n\\n\\t            // For dragging operation convenience, the window should not be\\n\\t            // slided when mouse is the center area of the window.\\n\\t            var delta;\\n\\t            var behavior = 'slide';\\n\\t            var axisCollapseWidth = layoutInfo.axisCollapseWidth;\\n\\t            var triggerArea = this._model.get('axisExpandSlideTriggerArea');\\n\\t            // But consider touch device, jump is necessary.\\n\\t            var useJump = triggerArea[0] != null;\\n\\n\\t            if (axisCollapseWidth) {\\n\\t                if (useJump && axisCollapseWidth && pointCoord < winSize * triggerArea[0]) {\\n\\t                    behavior = 'jump';\\n\\t                    delta = pointCoord - winSize * triggerArea[2];\\n\\t                }\\n\\t                else if (useJump && axisCollapseWidth && pointCoord > winSize * (1 - triggerArea[0])) {\\n\\t                    behavior = 'jump';\\n\\t                    delta = pointCoord - winSize * (1 - triggerArea[2]);\\n\\t                }\\n\\t                else {\\n\\t                    (delta = pointCoord - winSize * triggerArea[1]) >= 0\\n\\t                        && (delta = pointCoord - winSize * (1 - triggerArea[1])) <= 0\\n\\t                        && (delta = 0);\\n\\t                }\\n\\t                delta *= layoutInfo.axisExpandWidth / axisCollapseWidth;\\n\\t                delta\\n\\t                    ? sliderMove(delta, axisExpandWindow, extent, 'all')\\n\\t                    // Avoid nonsense triger on mousemove.\\n\\t                    : (behavior = 'none');\\n\\t            }\\n\\t            // When screen is too narrow, make it visible and slidable, although it is hard to interact.\\n\\t            else {\\n\\t                var winSize = axisExpandWindow[1] - axisExpandWindow[0];\\n\\t                var pos = extent[1] * pointCoord / winSize;\\n\\t                axisExpandWindow = [mathMax(0, pos - winSize / 2)];\\n\\t                axisExpandWindow[1] = mathMin(extent[1], axisExpandWindow[0] + winSize);\\n\\t                axisExpandWindow[0] = axisExpandWindow[1] - winSize;\\n\\t            }\\n\\n\\t            return {\\n\\t                axisExpandWindow: axisExpandWindow,\\n\\t                behavior: behavior\\n\\t            };\\n\\t        }\\n\\t    };\\n\\n\\t    function restrict(len, extent) {\\n\\t        return mathMin(mathMax(len, extent[0]), extent[1]);\\n\\t    }\\n\\n\\t    function layoutAxisWithoutExpand(axisIndex, layoutInfo) {\\n\\t        var step = layoutInfo.layoutLength / (layoutInfo.axisCount - 1);\\n\\t        return {\\n\\t            position: step * axisIndex,\\n\\t            axisNameAvailableWidth: step,\\n\\t            axisLabelShow: true\\n\\t        };\\n\\t    }\\n\\n\\t    function layoutAxisWithExpand(axisIndex, layoutInfo) {\\n\\t        var layoutLength = layoutInfo.layoutLength;\\n\\t        var axisExpandWidth = layoutInfo.axisExpandWidth;\\n\\t        var axisCount = layoutInfo.axisCount;\\n\\t        var axisCollapseWidth = layoutInfo.axisCollapseWidth;\\n\\t        var winInnerIndices = layoutInfo.winInnerIndices;\\n\\n\\t        var position;\\n\\t        var axisNameAvailableWidth = axisCollapseWidth;\\n\\t        var axisLabelShow = false;\\n\\t        var nameTruncateMaxWidth;\\n\\n\\t        if (axisIndex < winInnerIndices[0]) {\\n\\t            position = axisIndex * axisCollapseWidth;\\n\\t            nameTruncateMaxWidth = axisCollapseWidth;\\n\\t        }\\n\\t        else if (axisIndex <= winInnerIndices[1]) {\\n\\t            position = layoutInfo.axisExpandWindow0Pos\\n\\t                + axisIndex * axisExpandWidth - layoutInfo.axisExpandWindow[0];\\n\\t            axisNameAvailableWidth = axisExpandWidth;\\n\\t            axisLabelShow = true;\\n\\t        }\\n\\t        else {\\n\\t            position = layoutLength - (axisCount - 1 - axisIndex) * axisCollapseWidth;\\n\\t            nameTruncateMaxWidth = axisCollapseWidth;\\n\\t        }\\n\\n\\t        return {\\n\\t            position: position,\\n\\t            axisNameAvailableWidth: axisNameAvailableWidth,\\n\\t            axisLabelShow: axisLabelShow,\\n\\t            nameTruncateMaxWidth: nameTruncateMaxWidth\\n\\t        };\\n\\t    }\\n\\n\\t    module.exports = Parallel;\\n\\n\\n/***/ },\\n/* 238 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var Axis = __webpack_require__(100);\\n\\n\\t    /**\\n\\t     * @constructor module:echarts/coord/parallel/ParallelAxis\\n\\t     * @extends {module:echarts/coord/Axis}\\n\\t     * @param {string} dim\\n\\t     * @param {*} scale\\n\\t     * @param {Array.<number>} coordExtent\\n\\t     * @param {string} axisType\\n\\t     */\\n\\t    var ParallelAxis = function (dim, scale, coordExtent, axisType, axisIndex) {\\n\\n\\t        Axis.call(this, dim, scale, coordExtent);\\n\\n\\t        /**\\n\\t         * Axis type\\n\\t         *  - 'category'\\n\\t         *  - 'value'\\n\\t         *  - 'time'\\n\\t         *  - 'log'\\n\\t         * @type {string}\\n\\t         */\\n\\t        this.type = axisType || 'value';\\n\\n\\t        /**\\n\\t         * @type {number}\\n\\t         * @readOnly\\n\\t         */\\n\\t        this.axisIndex = axisIndex;\\n\\t    };\\n\\n\\t    ParallelAxis.prototype = {\\n\\n\\t        constructor: ParallelAxis,\\n\\n\\t        /**\\n\\t         * Axis model\\n\\t         * @param {module:echarts/coord/parallel/AxisModel}\\n\\t         */\\n\\t        model: null\\n\\n\\t    };\\n\\n\\t    zrUtil.inherits(ParallelAxis, Axis);\\n\\n\\t    module.exports = ParallelAxis;\\n\\n\\n/***/ },\\n/* 239 */\\n/***/ function(module, exports) {\\n\\n\\t\\n\\n\\t    /**\\n\\t     * Calculate slider move result.\\n\\t     * Usage:\\n\\t     * (1) If both handle0 and handle1 are needed to be moved, set minSpan the same as\\n\\t     * maxSpan and the same as `Math.abs(handleEnd[1] - handleEnds[0])`.\\n\\t     * (2) If handle0 is forbidden to cross handle1, set minSpan as `0`.\\n\\t     *\\n\\t     * @param {number} delta Move length.\\n\\t     * @param {Array.<number>} handleEnds handleEnds[0] can be bigger then handleEnds[1].\\n\\t     *              handleEnds will be modified in this method.\\n\\t     * @param {Array.<number>} extent handleEnds is restricted by extent.\\n\\t     *              extent[0] should less or equals than extent[1].\\n\\t     * @param {number|string} handleIndex Can be 'all', means that both move the two handleEnds,\\n\\t     *              where the input minSpan and maxSpan will not work.\\n\\t     * @param {number} [minSpan] The range of dataZoom can not be smaller than that.\\n\\t     *              If not set, handle0 and cross handle1. If set as a non-negative\\n\\t     *              number (including `0`), handles will push each other when reaching\\n\\t     *              the minSpan.\\n\\t     * @param {number} [maxSpan] The range of dataZoom can not be larger than that.\\n\\t     * @return {Array.<number>} The input handleEnds.\\n\\t     */\\n\\t    module.exports = function (delta, handleEnds, extent, handleIndex, minSpan, maxSpan) {\\n\\t        // Normalize firstly.\\n\\t        handleEnds[0] = restrict(handleEnds[0], extent);\\n\\t        handleEnds[1] = restrict(handleEnds[1], extent);\\n\\n\\t        delta = delta || 0;\\n\\n\\t        var extentSpan = extent[1] - extent[0];\\n\\n\\t        // Notice maxSpan and minSpan can be null/undefined.\\n\\t        if (minSpan != null) {\\n\\t            minSpan = restrict(minSpan, [0, extentSpan]);\\n\\t        }\\n\\t        if (maxSpan != null) {\\n\\t            maxSpan = Math.max(maxSpan, minSpan != null ? minSpan : 0);\\n\\t        }\\n\\t        if (handleIndex === 'all') {\\n\\t            minSpan = maxSpan = Math.abs(handleEnds[1] - handleEnds[0]);\\n\\t            handleIndex = 0;\\n\\t        }\\n\\n\\t        var originalDistSign = getSpanSign(handleEnds, handleIndex);\\n\\n\\t        handleEnds[handleIndex] += delta;\\n\\n\\t        // Restrict in extent.\\n\\t        var extentMinSpan = minSpan || 0;\\n\\t        var realExtent = extent.slice();\\n\\t        originalDistSign.sign < 0 ? (realExtent[0] += extentMinSpan) : (realExtent[1] -= extentMinSpan);\\n\\t        handleEnds[handleIndex] = restrict(handleEnds[handleIndex], realExtent);\\n\\n\\t        // Expand span.\\n\\t        var currDistSign = getSpanSign(handleEnds, handleIndex);\\n\\t        if (minSpan != null && (\\n\\t            currDistSign.sign !== originalDistSign.sign || currDistSign.span < minSpan\\n\\t        )) {\\n\\t            // If minSpan exists, 'cross' is forbinden.\\n\\t            handleEnds[1 - handleIndex] = handleEnds[handleIndex] + originalDistSign.sign * minSpan;\\n\\t        }\\n\\n\\t        // Shrink span.\\n\\t        var currDistSign = getSpanSign(handleEnds, handleIndex);\\n\\t        if (maxSpan != null && currDistSign.span > maxSpan) {\\n\\t            handleEnds[1 - handleIndex] = handleEnds[handleIndex] + currDistSign.sign * maxSpan;\\n\\t        }\\n\\n\\t        return handleEnds;\\n\\t    };\\n\\n\\t    function getSpanSign(handleEnds, handleIndex) {\\n\\t        var dist = handleEnds[handleIndex] - handleEnds[1 - handleIndex];\\n\\t        // If `handleEnds[0] === handleEnds[1]`, always believe that handleEnd[0]\\n\\t        // is at left of handleEnds[1] for non-cross case.\\n\\t        return {span: Math.abs(dist), sign: dist > 0 ? -1 : dist < 0 ? 1 : handleIndex ? -1 : 1};\\n\\t    }\\n\\n\\t    function restrict(value, extend) {\\n\\t        return Math.min(extend[1], Math.max(extend[0], value));\\n\\t    }\\n\\n\\n/***/ },\\n/* 240 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var Component = __webpack_require__(69);\\n\\n\\t    __webpack_require__(241);\\n\\n\\t    Component.extend({\\n\\n\\t        type: 'parallel',\\n\\n\\t        dependencies: ['parallelAxis'],\\n\\n\\t        /**\\n\\t         * @type {module:echarts/coord/parallel/Parallel}\\n\\t         */\\n\\t        coordinateSystem: null,\\n\\n\\t        /**\\n\\t         * Each item like: 'dim0', 'dim1', 'dim2', ...\\n\\t         * @type {Array.<string>}\\n\\t         * @readOnly\\n\\t         */\\n\\t        dimensions: null,\\n\\n\\t        /**\\n\\t         * Coresponding to dimensions.\\n\\t         * @type {Array.<number>}\\n\\t         * @readOnly\\n\\t         */\\n\\t        parallelAxisIndex: null,\\n\\n\\t        layoutMode: 'box',\\n\\n\\t        defaultOption: {\\n\\t            zlevel: 0,\\n\\t            z: 0,\\n\\t            left: 80,\\n\\t            top: 60,\\n\\t            right: 80,\\n\\t            bottom: 60,\\n\\t            // width: {totalWidth} - left - right,\\n\\t            // height: {totalHeight} - top - bottom,\\n\\n\\t            layout: 'horizontal',      // 'horizontal' or 'vertical'\\n\\n\\t            // FIXME\\n\\t            // naming?\\n\\t            axisExpandable: false,\\n\\t            axisExpandCenter: null,\\n\\t            axisExpandCount: 0,\\n\\t            axisExpandWidth: 50,      // FIXME '10%' ?\\n\\t            axisExpandRate: 17,\\n\\t            axisExpandDebounce: 50,\\n\\t            // [out, in, jumpTarget]. In percentage. If use [null, 0.05], null means full.\\n\\t            // Do not doc to user until necessary.\\n\\t            axisExpandSlideTriggerArea: [-0.15, 0.05, 0.4],\\n\\t            axisExpandTriggerOn: 'click', // 'mousemove' or 'click'\\n\\n\\t            parallelAxisDefault: null\\n\\t        },\\n\\n\\t        /**\\n\\t         * @override\\n\\t         */\\n\\t        init: function () {\\n\\t            Component.prototype.init.apply(this, arguments);\\n\\n\\t            this.mergeOption({});\\n\\t        },\\n\\n\\t        /**\\n\\t         * @override\\n\\t         */\\n\\t        mergeOption: function (newOption) {\\n\\t            var thisOption = this.option;\\n\\n\\t            newOption && zrUtil.merge(thisOption, newOption, true);\\n\\n\\t            this._initDimensions();\\n\\t        },\\n\\n\\t        /**\\n\\t         * Whether series or axis is in this coordinate system.\\n\\t         * @param {module:echarts/model/Series|module:echarts/coord/parallel/AxisModel} model\\n\\t         * @param {module:echarts/model/Global} ecModel\\n\\t         */\\n\\t        contains: function (model, ecModel) {\\n\\t            var parallelIndex = model.get('parallelIndex');\\n\\t            return parallelIndex != null\\n\\t                && ecModel.getComponent('parallel', parallelIndex) === this;\\n\\t        },\\n\\n\\t        setAxisExpand: function (opt) {\\n\\t            zrUtil.each(\\n\\t                ['axisExpandable', 'axisExpandCenter', 'axisExpandCount', 'axisExpandWidth', 'axisExpandWindow'],\\n\\t                function (name) {\\n\\t                    if (opt.hasOwnProperty(name)) {\\n\\t                        this.option[name] = opt[name];\\n\\t                    }\\n\\t                },\\n\\t                this\\n\\t            );\\n\\t        },\\n\\n\\t        /**\\n\\t         * @private\\n\\t         */\\n\\t        _initDimensions: function () {\\n\\t            var dimensions = this.dimensions = [];\\n\\t            var parallelAxisIndex = this.parallelAxisIndex = [];\\n\\n\\t            var axisModels = zrUtil.filter(this.dependentModels.parallelAxis, function (axisModel) {\\n\\t                // Can not use this.contains here, because\\n\\t                // initialization has not been completed yet.\\n\\t                return axisModel.get('parallelIndex') === this.componentIndex;\\n\\t            });\\n\\n\\t            zrUtil.each(axisModels, function (axisModel) {\\n\\t                dimensions.push('dim' + axisModel.get('dim'));\\n\\t                parallelAxisIndex.push(axisModel.componentIndex);\\n\\t            });\\n\\t        }\\n\\n\\t    });\\n\\n\\n\\n/***/ },\\n/* 241 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var ComponentModel = __webpack_require__(69);\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var makeStyleMapper = __webpack_require__(15);\\n\\t    var axisModelCreator = __webpack_require__(131);\\n\\t    var numberUtil = __webpack_require__(7);\\n\\n\\t    var AxisModel = ComponentModel.extend({\\n\\n\\t        type: 'baseParallelAxis',\\n\\n\\t        /**\\n\\t         * @type {module:echarts/coord/parallel/Axis}\\n\\t         */\\n\\t        axis: null,\\n\\n\\t        /**\\n\\t         * @type {Array.<Array.<number>}\\n\\t         * @readOnly\\n\\t         */\\n\\t        activeIntervals: [],\\n\\n\\t        /**\\n\\t         * @return {Object}\\n\\t         */\\n\\t        getAreaSelectStyle: function () {\\n\\t            return makeStyleMapper(\\n\\t                [\\n\\t                    ['fill', 'color'],\\n\\t                    ['lineWidth', 'borderWidth'],\\n\\t                    ['stroke', 'borderColor'],\\n\\t                    ['width', 'width'],\\n\\t                    ['opacity', 'opacity']\\n\\t                ]\\n\\t            ).call(this.getModel('areaSelectStyle'));\\n\\t        },\\n\\n\\t        /**\\n\\t         * The code of this feature is put on AxisModel but not ParallelAxis,\\n\\t         * because axisModel can be alive after echarts updating but instance of\\n\\t         * ParallelAxis having been disposed. this._activeInterval should be kept\\n\\t         * when action dispatched (i.e. legend click).\\n\\t         *\\n\\t         * @param {Array.<Array<number>>} intervals interval.length === 0\\n\\t         *                                          means set all active.\\n\\t         * @public\\n\\t         */\\n\\t        setActiveIntervals: function (intervals) {\\n\\t            var activeIntervals = this.activeIntervals = zrUtil.clone(intervals);\\n\\n\\t            // Normalize\\n\\t            if (activeIntervals) {\\n\\t                for (var i = activeIntervals.length - 1; i >= 0; i--) {\\n\\t                    numberUtil.asc(activeIntervals[i]);\\n\\t                }\\n\\t            }\\n\\t        },\\n\\n\\t        /**\\n\\t         * @param {number|string} [value] When attempting to detect 'no activeIntervals set',\\n\\t         *                         value can not be input.\\n\\t         * @return {string} 'normal': no activeIntervals set,\\n\\t         *                  'active',\\n\\t         *                  'inactive'.\\n\\t         * @public\\n\\t         */\\n\\t        getActiveState: function (value) {\\n\\t            var activeIntervals = this.activeIntervals;\\n\\n\\t            if (!activeIntervals.length) {\\n\\t                return 'normal';\\n\\t            }\\n\\n\\t            if (value == null) {\\n\\t                return 'inactive';\\n\\t            }\\n\\n\\t            for (var i = 0, len = activeIntervals.length; i < len; i++) {\\n\\t                if (activeIntervals[i][0] <= value && value <= activeIntervals[i][1]) {\\n\\t                    return 'active';\\n\\t                }\\n\\t            }\\n\\t            return 'inactive';\\n\\t        }\\n\\n\\t    });\\n\\n\\t    var defaultOption = {\\n\\n\\t        type: 'value',\\n\\n\\t        /**\\n\\t         * @type {Array.<number>}\\n\\t         */\\n\\t        dim: null, // 0, 1, 2, ...\\n\\n\\t        // parallelIndex: null,\\n\\n\\t        areaSelectStyle: {\\n\\t            width: 20,\\n\\t            borderWidth: 1,\\n\\t            borderColor: 'rgba(160,197,232)',\\n\\t            color: 'rgba(160,197,232)',\\n\\t            opacity: 0.3\\n\\t        },\\n\\n\\t        realtime: true, // Whether realtime update view when select.\\n\\n\\t        z: 10\\n\\t    };\\n\\n\\t    zrUtil.merge(AxisModel.prototype, __webpack_require__(112));\\n\\n\\t    function getAxisType(axisName, option) {\\n\\t        return option.type || (option.data ? 'category' : 'value');\\n\\t    }\\n\\n\\t    axisModelCreator('parallel', AxisModel, getAxisType, defaultOption);\\n\\n\\t    module.exports = AxisModel;\\n\\n\\n/***/ },\\n/* 242 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    __webpack_require__(236);\\n\\t    __webpack_require__(243);\\n\\t    __webpack_require__(244);\\n\\n\\n\\n/***/ },\\n/* 243 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var echarts = __webpack_require__(1);\\n\\n\\t    /**\\n\\t     * @payload\\n\\t     * @property {string} parallelAxisId\\n\\t     * @property {Array.<Array.<number>>} intervals\\n\\t     */\\n\\t    var actionInfo = {\\n\\t        type: 'axisAreaSelect',\\n\\t        event: 'axisAreaSelected',\\n\\t        update: 'updateVisual'\\n\\t    };\\n\\t    echarts.registerAction(actionInfo, function (payload, ecModel) {\\n\\t        ecModel.eachComponent(\\n\\t            {mainType: 'parallelAxis', query: payload},\\n\\t            function (parallelAxisModel) {\\n\\t                parallelAxisModel.axis.model.setActiveIntervals(payload.intervals);\\n\\t            }\\n\\t        );\\n\\t    });\\n\\n\\t    /**\\n\\t     * @payload\\n\\t     */\\n\\t    echarts.registerAction('parallelAxisExpand', function (payload, ecModel) {\\n\\t        ecModel.eachComponent(\\n\\t            {mainType: 'parallel', query: payload},\\n\\t            function (parallelModel) {\\n\\t                parallelModel.setAxisExpand(payload);\\n\\t            }\\n\\t        );\\n\\n\\t    });\\n\\n\\n/***/ },\\n/* 244 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var AxisBuilder = __webpack_require__(135);\\n\\t    var BrushController = __webpack_require__(245);\\n\\t    var brushHelper = __webpack_require__(246);\\n\\t    var graphic = __webpack_require__(18);\\n\\n\\t    var elementList = ['axisLine', 'axisLabel', 'axisTick', 'axisName'];\\n\\n\\t    var AxisView = __webpack_require__(1).extendComponentView({\\n\\n\\t        type: 'parallelAxis',\\n\\n\\t        /**\\n\\t         * @override\\n\\t         */\\n\\t        init: function (ecModel, api) {\\n\\t            AxisView.superApply(this, 'init', arguments);\\n\\n\\t            /**\\n\\t             * @type {module:echarts/component/helper/BrushController}\\n\\t             */\\n\\t            (this._brushController = new BrushController(api.getZr()))\\n\\t                .on('brush', zrUtil.bind(this._onBrush, this));\\n\\t        },\\n\\n\\t        /**\\n\\t         * @override\\n\\t         */\\n\\t        render: function (axisModel, ecModel, api, payload) {\\n\\t            if (fromAxisAreaSelect(axisModel, ecModel, payload)) {\\n\\t                return;\\n\\t            }\\n\\n\\t            this.axisModel = axisModel;\\n\\t            this.api = api;\\n\\n\\t            this.group.removeAll();\\n\\n\\t            var oldAxisGroup = this._axisGroup;\\n\\t            this._axisGroup = new graphic.Group();\\n\\t            this.group.add(this._axisGroup);\\n\\n\\t            if (!axisModel.get('show')) {\\n\\t                return;\\n\\t            }\\n\\n\\t            var coordSysModel = getCoordSysModel(axisModel, ecModel);\\n\\t            var coordSys = coordSysModel.coordinateSystem;\\n\\n\\t            var areaSelectStyle = axisModel.getAreaSelectStyle();\\n\\t            var areaWidth = areaSelectStyle.width;\\n\\n\\t            var dim = axisModel.axis.dim;\\n\\t            var axisLayout = coordSys.getAxisLayout(dim);\\n\\n\\t            var builderOpt = zrUtil.extend(\\n\\t                {strokeContainThreshold: areaWidth},\\n\\t                axisLayout\\n\\t            );\\n\\n\\t            var axisBuilder = new AxisBuilder(axisModel, builderOpt);\\n\\n\\t            zrUtil.each(elementList, axisBuilder.add, axisBuilder);\\n\\n\\t            this._axisGroup.add(axisBuilder.getGroup());\\n\\n\\t            this._refreshBrushController(\\n\\t                builderOpt, areaSelectStyle, axisModel, coordSysModel, areaWidth, api\\n\\t            );\\n\\n\\t            var animationModel = (payload && payload.animation === false) ? null : axisModel;\\n\\t            graphic.groupTransition(oldAxisGroup, this._axisGroup, animationModel);\\n\\t        },\\n\\n\\t        /**\\n\\t         * @override\\n\\t         */\\n\\t        updateVisual: function (axisModel, ecModel, api, payload) {\\n\\t            this._brushController && this._brushController\\n\\t                .updateCovers(getCoverInfoList(axisModel));\\n\\t        },\\n\\n\\t        _refreshBrushController: function (\\n\\t            builderOpt, areaSelectStyle, axisModel, coordSysModel, areaWidth, api\\n\\t        ) {\\n\\t            // After filtering, axis may change, select area needs to be update.\\n\\t            var extent = axisModel.axis.getExtent();\\n\\t            var extentLen = extent[1] - extent[0];\\n\\t            var extra = Math.min(30, Math.abs(extentLen) * 0.1); // Arbitrary value.\\n\\n\\t            // width/height might be negative, which will be\\n\\t            // normalized in BoundingRect.\\n\\t            var rect = graphic.BoundingRect.create({\\n\\t                x: extent[0],\\n\\t                y: -areaWidth / 2,\\n\\t                width: extentLen,\\n\\t                height: areaWidth\\n\\t            });\\n\\t            rect.x -= extra;\\n\\t            rect.width += 2 * extra;\\n\\n\\t            this._brushController\\n\\t                .mount({\\n\\t                    enableGlobalPan: true,\\n\\t                    rotation: builderOpt.rotation,\\n\\t                    position: builderOpt.position\\n\\t                })\\n\\t                .setPanels([{\\n\\t                    panelId: 'pl',\\n\\t                    clipPath: brushHelper.makeRectPanelClipPath(rect),\\n\\t                    isTargetByCursor: brushHelper.makeRectIsTargetByCursor(rect, api, coordSysModel),\\n\\t                    getLinearBrushOtherExtent: brushHelper.makeLinearBrushOtherExtent(rect, 0)\\n\\t                }])\\n\\t                .enableBrush({\\n\\t                    brushType: 'lineX',\\n\\t                    brushStyle: areaSelectStyle,\\n\\t                    removeOnClick: true\\n\\t                })\\n\\t                .updateCovers(getCoverInfoList(axisModel));\\n\\t        },\\n\\n\\t        _onBrush: function (coverInfoList, opt) {\\n\\t            // Do not cache these object, because the mey be changed.\\n\\t            var axisModel = this.axisModel;\\n\\t            var axis = axisModel.axis;\\n\\t            var intervals = zrUtil.map(coverInfoList, function (coverInfo) {\\n\\t                return [\\n\\t                    axis.coordToData(coverInfo.range[0], true),\\n\\t                    axis.coordToData(coverInfo.range[1], true)\\n\\t                ];\\n\\t            });\\n\\n\\t            // If realtime is true, action is not dispatched on drag end, because\\n\\t            // the drag end emits the same params with the last drag move event,\\n\\t            // and may have some delay when using touch pad.\\n\\t            if (!axisModel.option.realtime === opt.isEnd || opt.removeOnClick) { // jshint ignore:line\\n\\t                this.api.dispatchAction({\\n\\t                    type: 'axisAreaSelect',\\n\\t                    parallelAxisId: axisModel.id,\\n\\t                    intervals: intervals\\n\\t                });\\n\\t            }\\n\\t        },\\n\\n\\t        /**\\n\\t         * @override\\n\\t         */\\n\\t        dispose: function () {\\n\\t            this._brushController.dispose();\\n\\t        }\\n\\t    });\\n\\n\\t    function fromAxisAreaSelect(axisModel, ecModel, payload) {\\n\\t        return payload\\n\\t            && payload.type === 'axisAreaSelect'\\n\\t            && ecModel.findComponents(\\n\\t                {mainType: 'parallelAxis', query: payload}\\n\\t            )[0] === axisModel;\\n\\t    }\\n\\n\\t    function getCoverInfoList(axisModel) {\\n\\t        var axis = axisModel.axis;\\n\\t        return zrUtil.map(axisModel.activeIntervals, function (interval) {\\n\\t            return {\\n\\t                brushType: 'lineX',\\n\\t                panelId: 'pl',\\n\\t                range: [\\n\\t                    axis.dataToCoord(interval[0], true),\\n\\t                    axis.dataToCoord(interval[1], true)\\n\\t                ]\\n\\t            };\\n\\t        });\\n\\t    }\\n\\n\\t    function getCoordSysModel(axisModel, ecModel) {\\n\\t        return ecModel.getComponent(\\n\\t            'parallel', axisModel.get('parallelIndex')\\n\\t        );\\n\\t    }\\n\\n\\t    module.exports = AxisView;\\n\\n\\n/***/ },\\n/* 245 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * Box selection tool.\\n\\t *\\n\\t * @module echarts/component/helper/BrushController\\n\\t */\\n\\n\\n\\n\\t    var Eventful = __webpack_require__(25);\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var graphic = __webpack_require__(18);\\n\\t    var interactionMutex = __webpack_require__(184);\\n\\t    var DataDiffer = __webpack_require__(99);\\n\\n\\t    var curry = zrUtil.curry;\\n\\t    var each = zrUtil.each;\\n\\t    var map = zrUtil.map;\\n\\t    var mathMin = Math.min;\\n\\t    var mathMax = Math.max;\\n\\t    var mathPow = Math.pow;\\n\\n\\t    var COVER_Z = 10000;\\n\\t    var UNSELECT_THRESHOLD = 6;\\n\\t    var MIN_RESIZE_LINE_WIDTH = 6;\\n\\t    var MUTEX_RESOURCE_KEY = 'globalPan';\\n\\n\\t    var DIRECTION_MAP = {\\n\\t        w: [0, 0],\\n\\t        e: [0, 1],\\n\\t        n: [1, 0],\\n\\t        s: [1, 1]\\n\\t    };\\n\\t    var CURSOR_MAP = {\\n\\t        w: 'ew',\\n\\t        e: 'ew',\\n\\t        n: 'ns',\\n\\t        s: 'ns',\\n\\t        ne: 'nesw',\\n\\t        sw: 'nesw',\\n\\t        nw: 'nwse',\\n\\t        se: 'nwse'\\n\\t    };\\n\\t    var DEFAULT_BRUSH_OPT = {\\n\\t        brushStyle: {\\n\\t            lineWidth: 2,\\n\\t            stroke: 'rgba(0,0,0,0.3)',\\n\\t            fill: 'rgba(0,0,0,0.1)'\\n\\t        },\\n\\t        transformable: true,\\n\\t        brushMode: 'single',\\n\\t        removeOnClick: false\\n\\t    };\\n\\n\\t    var baseUID = 0;\\n\\n\\t    /**\\n\\t     * @alias module:echarts/component/helper/BrushController\\n\\t     * @constructor\\n\\t     * @mixin {module:zrender/mixin/Eventful}\\n\\t     * @event module:echarts/component/helper/BrushController#brush\\n\\t     *        params:\\n\\t     *            areas: Array.<Array>, coord relates to container group,\\n\\t     *                                    If no container specified, to global.\\n\\t     *            opt {\\n\\t     *                isEnd: boolean,\\n\\t     *                removeOnClick: boolean\\n\\t     *            }\\n\\t     *\\n\\t     * @param {module:zrender/zrender~ZRender} zr\\n\\t     */\\n\\t    function BrushController(zr) {\\n\\n\\t        if (true) {\\n\\t            zrUtil.assert(zr);\\n\\t        }\\n\\n\\t        Eventful.call(this);\\n\\n\\t        /**\\n\\t         * @type {module:zrender/zrender~ZRender}\\n\\t         * @private\\n\\t         */\\n\\t        this._zr = zr;\\n\\n\\t        /**\\n\\t         * @type {module:zrender/container/Group}\\n\\t         * @readOnly\\n\\t         */\\n\\t        this.group = new graphic.Group();\\n\\n\\t        /**\\n\\t         * Only for drawing (after enabledBrush).\\n\\t         *     'line', 'rect', 'polygon' or false\\n\\t         *     If passing false/null/undefined, disable brush.\\n\\t         *     If passing 'auto', determined by panel.defaultBrushType\\n\\t         * @private\\n\\t         * @type {string}\\n\\t         */\\n\\t        this._brushType;\\n\\n\\t        /**\\n\\t         * Only for drawing (after enabledBrush).\\n\\t         *\\n\\t         * @private\\n\\t         * @type {Object}\\n\\t         */\\n\\t        this._brushOption;\\n\\n\\t        /**\\n\\t         * @private\\n\\t         * @type {Object}\\n\\t         */\\n\\t        this._panels;\\n\\n\\t        /**\\n\\t         * @private\\n\\t         * @type {Array.<nubmer>}\\n\\t         */\\n\\t        this._track = [];\\n\\n\\t        /**\\n\\t         * @private\\n\\t         * @type {boolean}\\n\\t         */\\n\\t        this._dragging;\\n\\n\\t        /**\\n\\t         * @private\\n\\t         * @type {Array}\\n\\t         */\\n\\t        this._covers = [];\\n\\n\\t        /**\\n\\t         * @private\\n\\t         * @type {moudule:zrender/container/Group}\\n\\t         */\\n\\t        this._creatingCover;\\n\\n\\t        /**\\n\\t         * `true` means global panel\\n\\t         * @private\\n\\t         * @type {module:zrender/container/Group|boolean}\\n\\t         */\\n\\t        this._creatingPanel;\\n\\n\\t        /**\\n\\t         * @private\\n\\t         * @type {boolean}\\n\\t         */\\n\\t        this._enableGlobalPan;\\n\\n\\t        /**\\n\\t         * @private\\n\\t         * @type {boolean}\\n\\t         */\\n\\t        if (true) {\\n\\t            this._mounted;\\n\\t        }\\n\\n\\t        /**\\n\\t         * @private\\n\\t         * @type {string}\\n\\t         */\\n\\t        this._uid = 'brushController_' + baseUID++;\\n\\n\\t        /**\\n\\t         * @private\\n\\t         * @type {Object}\\n\\t         */\\n\\t        this._handlers = {};\\n\\t        each(mouseHandlers, function (handler, eventName) {\\n\\t            this._handlers[eventName] = zrUtil.bind(handler, this);\\n\\t        }, this);\\n\\t    }\\n\\n\\t    BrushController.prototype = {\\n\\n\\t        constructor: BrushController,\\n\\n\\t        /**\\n\\t         * If set to null/undefined/false, select disabled.\\n\\t         * @param {Object} brushOption\\n\\t         * @param {string|boolean} brushOption.brushType 'line', 'rect', 'polygon' or false\\n\\t         *                          If passing false/null/undefined, disable brush.\\n\\t         *                          If passing 'auto', determined by panel.defaultBrushType.\\n\\t         *                              ('auto' can not be used in global panel)\\n\\t         * @param {number} [brushOption.brushMode='single'] 'single' or 'multiple'\\n\\t         * @param {boolean} [brushOption.transformable=true]\\n\\t         * @param {boolean} [brushOption.removeOnClick=false]\\n\\t         * @param {Object} [brushOption.brushStyle]\\n\\t         * @param {number} [brushOption.brushStyle.width]\\n\\t         * @param {number} [brushOption.brushStyle.lineWidth]\\n\\t         * @param {string} [brushOption.brushStyle.stroke]\\n\\t         * @param {string} [brushOption.brushStyle.fill]\\n\\t         * @param {number} [brushOption.z]\\n\\t         */\\n\\t        enableBrush: function (brushOption) {\\n\\t            if (true) {\\n\\t                zrUtil.assert(this._mounted);\\n\\t            }\\n\\n\\t            this._brushType && doDisableBrush(this);\\n\\t            brushOption.brushType && doEnableBrush(this, brushOption);\\n\\n\\t            return this;\\n\\t        },\\n\\n\\t        /**\\n\\t         * @param {Array.<Object>} panelOpts If not pass, it is global brush.\\n\\t         *        Each items: {\\n\\t         *            panelId, // mandatory.\\n\\t         *            clipPath, // mandatory. function.\\n\\t         *            isTargetByCursor, // mandatory. function.\\n\\t         *            defaultBrushType, // optional, only used when brushType is 'auto'.\\n\\t         *            getLinearBrushOtherExtent, // optional. function.\\n\\t         *        }\\n\\t         */\\n\\t        setPanels: function (panelOpts) {\\n\\t            if (panelOpts && panelOpts.length) {\\n\\t                var panels = this._panels = {};\\n\\t                zrUtil.each(panelOpts, function (panelOpts) {\\n\\t                    panels[panelOpts.panelId] = zrUtil.clone(panelOpts);\\n\\t                });\\n\\t            }\\n\\t            else {\\n\\t                this._panels = null;\\n\\t            }\\n\\t            return this;\\n\\t        },\\n\\n\\t        /**\\n\\t         * @param {Object} [opt]\\n\\t         * @return {boolean} [opt.enableGlobalPan=false]\\n\\t         */\\n\\t        mount: function (opt) {\\n\\t            opt = opt || {};\\n\\n\\t            if (true) {\\n\\t                this._mounted = true; // should be at first.\\n\\t            }\\n\\n\\t            this._enableGlobalPan = opt.enableGlobalPan;\\n\\n\\t            var thisGroup = this.group;\\n\\t            this._zr.add(thisGroup);\\n\\n\\t            thisGroup.attr({\\n\\t                position: opt.position || [0, 0],\\n\\t                rotation: opt.rotation || 0,\\n\\t                scale: opt.scale || [1, 1]\\n\\t            });\\n\\t            this._transform = thisGroup.getLocalTransform();\\n\\n\\t            return this;\\n\\t        },\\n\\n\\t        eachCover: function (cb, context) {\\n\\t            each(this._covers, cb, context);\\n\\t        },\\n\\n\\t        /**\\n\\t         * Update covers.\\n\\t         * @param {Array.<Object>} brushOptionList Like:\\n\\t         *        [\\n\\t         *            {id: 'xx', brushType: 'line', range: [23, 44], brushStyle, transformable},\\n\\t         *            {id: 'yy', brushType: 'rect', range: [[23, 44], [23, 54]]},\\n\\t         *            ...\\n\\t         *        ]\\n\\t         *        `brushType` is required in each cover info. (can not be 'auto')\\n\\t         *        `id` is not mandatory.\\n\\t         *        `brushStyle`, `transformable` is not mandatory, use DEFAULT_BRUSH_OPT by default.\\n\\t         *        If brushOptionList is null/undefined, all covers removed.\\n\\t         */\\n\\t        updateCovers: function (brushOptionList) {\\n\\t            if (true) {\\n\\t                zrUtil.assert(this._mounted);\\n\\t            }\\n\\n\\t            brushOptionList = zrUtil.map(brushOptionList, function (brushOption) {\\n\\t                return zrUtil.merge(zrUtil.clone(DEFAULT_BRUSH_OPT), brushOption, true);\\n\\t            });\\n\\n\\t            var tmpIdPrefix = '\\\\0-brush-index-';\\n\\t            var oldCovers = this._covers;\\n\\t            var newCovers = this._covers = [];\\n\\t            var controller = this;\\n\\t            var creatingCover = this._creatingCover;\\n\\n\\t            (new DataDiffer(oldCovers, brushOptionList, oldGetKey, getKey))\\n\\t                .add(addOrUpdate)\\n\\t                .update(addOrUpdate)\\n\\t                .remove(remove)\\n\\t                .execute();\\n\\n\\t            return this;\\n\\n\\t            function getKey(brushOption, index) {\\n\\t                return (brushOption.id != null ? brushOption.id : tmpIdPrefix + index)\\n\\t                    + '-' + brushOption.brushType;\\n\\t            }\\n\\n\\t            function oldGetKey(cover, index) {\\n\\t                return getKey(cover.__brushOption, index);\\n\\t            }\\n\\n\\t            function addOrUpdate(newIndex, oldIndex) {\\n\\t                var newBrushOption = brushOptionList[newIndex];\\n\\t                // Consider setOption in event listener of brushSelect,\\n\\t                // where updating cover when creating should be forbiden.\\n\\t                if (oldIndex != null && oldCovers[oldIndex] === creatingCover) {\\n\\t                    newCovers[newIndex] = oldCovers[oldIndex];\\n\\t                }\\n\\t                else {\\n\\t                    var cover = newCovers[newIndex] = oldIndex != null\\n\\t                        ? (\\n\\t                            oldCovers[oldIndex].__brushOption = newBrushOption,\\n\\t                            oldCovers[oldIndex]\\n\\t                        )\\n\\t                        : endCreating(controller, createCover(controller, newBrushOption));\\n\\t                    updateCoverAfterCreation(controller, cover);\\n\\t                }\\n\\t            }\\n\\n\\t            function remove(oldIndex) {\\n\\t                if (oldCovers[oldIndex] !== creatingCover) {\\n\\t                    controller.group.remove(oldCovers[oldIndex]);\\n\\t                }\\n\\t            }\\n\\t        },\\n\\n\\t        unmount: function () {\\n\\t            if (true) {\\n\\t                if (!this._mounted) {\\n\\t                    return;\\n\\t                }\\n\\t            }\\n\\n\\t            this.enableBrush(false);\\n\\n\\t            // container may 'removeAll' outside.\\n\\t            clearCovers(this);\\n\\t            this._zr.remove(this.group);\\n\\n\\t            if (true) {\\n\\t                this._mounted = false; // should be at last.\\n\\t            }\\n\\n\\t            return this;\\n\\t        },\\n\\n\\t        dispose: function () {\\n\\t            this.unmount();\\n\\t            this.off();\\n\\t        }\\n\\t    };\\n\\n\\t    zrUtil.mixin(BrushController, Eventful);\\n\\n\\t    function doEnableBrush(controller, brushOption) {\\n\\t        var zr = controller._zr;\\n\\n\\t        // Consider roam, which takes globalPan too.\\n\\t        if (!controller._enableGlobalPan) {\\n\\t            interactionMutex.take(zr, MUTEX_RESOURCE_KEY, controller._uid);\\n\\t        }\\n\\n\\t        each(controller._handlers, function (handler, eventName) {\\n\\t            zr.on(eventName, handler);\\n\\t        });\\n\\n\\t        controller._brushType = brushOption.brushType;\\n\\t        controller._brushOption = zrUtil.merge(zrUtil.clone(DEFAULT_BRUSH_OPT), brushOption, true);\\n\\t    }\\n\\n\\t    function doDisableBrush(controller) {\\n\\t        var zr = controller._zr;\\n\\n\\t        interactionMutex.release(zr, MUTEX_RESOURCE_KEY, controller._uid);\\n\\n\\t        each(controller._handlers, function (handler, eventName) {\\n\\t            zr.off(eventName, handler);\\n\\t        });\\n\\n\\t        controller._brushType = controller._brushOption = null;\\n\\t    }\\n\\n\\t    function createCover(controller, brushOption) {\\n\\t        var cover = coverRenderers[brushOption.brushType].createCover(controller, brushOption);\\n\\t        cover.__brushOption = brushOption;\\n\\t        updateZ(cover, brushOption);\\n\\t        controller.group.add(cover);\\n\\t        return cover;\\n\\t    }\\n\\n\\t    function endCreating(controller, creatingCover) {\\n\\t        var coverRenderer = getCoverRenderer(creatingCover);\\n\\t        if (coverRenderer.endCreating) {\\n\\t            coverRenderer.endCreating(controller, creatingCover);\\n\\t            updateZ(creatingCover, creatingCover.__brushOption);\\n\\t        }\\n\\t        return creatingCover;\\n\\t    }\\n\\n\\t    function updateCoverShape(controller, cover) {\\n\\t        var brushOption = cover.__brushOption;\\n\\t        getCoverRenderer(cover).updateCoverShape(\\n\\t            controller, cover, brushOption.range, brushOption\\n\\t        );\\n\\t    }\\n\\n\\t    function updateZ(cover, brushOption) {\\n\\t        var z = brushOption.z;\\n\\t        z == null && (z = COVER_Z);\\n\\t        cover.traverse(function (el) {\\n\\t            el.z = z;\\n\\t            el.z2 = z; // Consider in given container.\\n\\t        });\\n\\t    }\\n\\n\\t    function updateCoverAfterCreation(controller, cover) {\\n\\t        getCoverRenderer(cover).updateCommon(controller, cover);\\n\\t        updateCoverShape(controller, cover);\\n\\t    }\\n\\n\\t    function getCoverRenderer(cover) {\\n\\t        return coverRenderers[cover.__brushOption.brushType];\\n\\t    }\\n\\n\\t    // return target panel or `true` (means global panel)\\n\\t    function getPanelByPoint(controller, e, localCursorPoint) {\\n\\t        var panels = controller._panels;\\n\\t        if (!panels) {\\n\\t            return true; // Global panel\\n\\t        }\\n\\t        var panel;\\n\\t        var transform = controller._transform;\\n\\t        each(panels, function (pn) {\\n\\t            pn.isTargetByCursor(e, localCursorPoint, transform) && (panel = pn);\\n\\t        });\\n\\t        return panel;\\n\\t    }\\n\\n\\t    // Return a panel or true\\n\\t    function getPanelByCover(controller, cover) {\\n\\t        var panels = controller._panels;\\n\\t        if (!panels) {\\n\\t            return true; // Global panel\\n\\t        }\\n\\t        var panelId = cover.__brushOption.panelId;\\n\\t        // User may give cover without coord sys info,\\n\\t        // which is then treated as global panel.\\n\\t        return panelId != null ? panels[panelId] : true;\\n\\t    }\\n\\n\\t    function clearCovers(controller) {\\n\\t        var covers = controller._covers;\\n\\t        var originalLength = covers.length;\\n\\t        each(covers, function (cover) {\\n\\t            controller.group.remove(cover);\\n\\t        }, controller);\\n\\t        covers.length = 0;\\n\\n\\t        return !!originalLength;\\n\\t    }\\n\\n\\t    function trigger(controller, opt) {\\n\\t        var areas = map(controller._covers, function (cover) {\\n\\t            var brushOption = cover.__brushOption;\\n\\t            var range = zrUtil.clone(brushOption.range);\\n\\t            return {\\n\\t                brushType: brushOption.brushType,\\n\\t                panelId: brushOption.panelId,\\n\\t                range: range\\n\\t            };\\n\\t        });\\n\\n\\t        controller.trigger('brush', areas, {\\n\\t            isEnd: !!opt.isEnd,\\n\\t            removeOnClick: !!opt.removeOnClick\\n\\t        });\\n\\t    }\\n\\n\\t    function shouldShowCover(controller) {\\n\\t        var track = controller._track;\\n\\n\\t        if (!track.length) {\\n\\t            return false;\\n\\t        }\\n\\n\\t        var p2 = track[track.length - 1];\\n\\t        var p1 = track[0];\\n\\t        var dx = p2[0] - p1[0];\\n\\t        var dy = p2[1] - p1[1];\\n\\t        var dist = mathPow(dx * dx + dy * dy, 0.5);\\n\\n\\t        return dist > UNSELECT_THRESHOLD;\\n\\t    }\\n\\n\\t    function getTrackEnds(track) {\\n\\t        var tail = track.length - 1;\\n\\t        tail < 0 && (tail = 0);\\n\\t        return [track[0], track[tail]];\\n\\t    }\\n\\n\\t    function createBaseRectCover(doDrift, controller, brushOption, edgeNames) {\\n\\t        var cover = new graphic.Group();\\n\\n\\t        cover.add(new graphic.Rect({\\n\\t            name: 'main',\\n\\t            style: makeStyle(brushOption),\\n\\t            silent: true,\\n\\t            draggable: true,\\n\\t            cursor: 'move',\\n\\t            drift: curry(doDrift, controller, cover, 'nswe'),\\n\\t            ondragend: curry(trigger, controller, {isEnd: true})\\n\\t        }));\\n\\n\\t        each(\\n\\t            edgeNames,\\n\\t            function (name) {\\n\\t                cover.add(new graphic.Rect({\\n\\t                    name: name,\\n\\t                    style: {opacity: 0},\\n\\t                    draggable: true,\\n\\t                    silent: true,\\n\\t                    invisible: true,\\n\\t                    drift: curry(doDrift, controller, cover, name),\\n\\t                    ondragend: curry(trigger, controller, {isEnd: true})\\n\\t                }));\\n\\t            }\\n\\t        );\\n\\n\\t        return cover;\\n\\t    }\\n\\n\\t    function updateBaseRect(controller, cover, localRange, brushOption) {\\n\\t        var lineWidth = brushOption.brushStyle.lineWidth || 0;\\n\\t        var handleSize = mathMax(lineWidth, MIN_RESIZE_LINE_WIDTH);\\n\\t        var x = localRange[0][0];\\n\\t        var y = localRange[1][0];\\n\\t        var xa = x - lineWidth / 2;\\n\\t        var ya = y - lineWidth / 2;\\n\\t        var x2 = localRange[0][1];\\n\\t        var y2 = localRange[1][1];\\n\\t        var x2a = x2 - handleSize + lineWidth / 2;\\n\\t        var y2a = y2 - handleSize + lineWidth / 2;\\n\\t        var width = x2 - x;\\n\\t        var height = y2 - y;\\n\\t        var widtha = width + lineWidth;\\n\\t        var heighta = height + lineWidth;\\n\\n\\t        updateRectShape(controller, cover, 'main', x, y, width, height);\\n\\n\\t        if (brushOption.transformable) {\\n\\t            updateRectShape(controller, cover, 'w', xa, ya, handleSize, heighta);\\n\\t            updateRectShape(controller, cover, 'e', x2a, ya, handleSize, heighta);\\n\\t            updateRectShape(controller, cover, 'n', xa, ya, widtha, handleSize);\\n\\t            updateRectShape(controller, cover, 's', xa, y2a, widtha, handleSize);\\n\\n\\t            updateRectShape(controller, cover, 'nw', xa, ya, handleSize, handleSize);\\n\\t            updateRectShape(controller, cover, 'ne', x2a, ya, handleSize, handleSize);\\n\\t            updateRectShape(controller, cover, 'sw', xa, y2a, handleSize, handleSize);\\n\\t            updateRectShape(controller, cover, 'se', x2a, y2a, handleSize, handleSize);\\n\\t        }\\n\\t    }\\n\\n\\t    function updateCommon(controller, cover) {\\n\\t        var brushOption = cover.__brushOption;\\n\\t        var transformable = brushOption.transformable;\\n\\n\\t        var mainEl = cover.childAt(0);\\n\\t        mainEl.useStyle(makeStyle(brushOption));\\n\\t        mainEl.attr({\\n\\t            silent: !transformable,\\n\\t            cursor: transformable ? 'move' : 'default'\\n\\t        });\\n\\n\\t        each(\\n\\t            ['w', 'e', 'n', 's', 'se', 'sw', 'ne', 'nw'],\\n\\t            function (name) {\\n\\t                var el = cover.childOfName(name);\\n\\t                var globalDir = getGlobalDirection(controller, name);\\n\\n\\t                el && el.attr({\\n\\t                    silent: !transformable,\\n\\t                    invisible: !transformable,\\n\\t                    cursor: transformable ? CURSOR_MAP[globalDir] + '-resize' : null\\n\\t                });\\n\\t            }\\n\\t        );\\n\\t    }\\n\\n\\t    function updateRectShape(controller, cover, name, x, y, w, h) {\\n\\t        var el = cover.childOfName(name);\\n\\t        el && el.setShape(pointsToRect(\\n\\t            clipByPanel(controller, cover, [[x, y], [x + w, y + h]])\\n\\t        ));\\n\\t    }\\n\\n\\t    function makeStyle(brushOption) {\\n\\t        return zrUtil.defaults({strokeNoScale: true}, brushOption.brushStyle);\\n\\t    }\\n\\n\\t    function formatRectRange(x, y, x2, y2) {\\n\\t        var min = [mathMin(x, x2), mathMin(y, y2)];\\n\\t        var max = [mathMax(x, x2), mathMax(y, y2)];\\n\\n\\t        return [\\n\\t            [min[0], max[0]], // x range\\n\\t            [min[1], max[1]] // y range\\n\\t        ];\\n\\t    }\\n\\n\\t    function getTransform(controller) {\\n\\t        return graphic.getTransform(controller.group);\\n\\t    }\\n\\n\\t    function getGlobalDirection(controller, localDirection) {\\n\\t        if (localDirection.length > 1) {\\n\\t            localDirection = localDirection.split('');\\n\\t            var globalDir = [\\n\\t                getGlobalDirection(controller, localDirection[0]),\\n\\t                getGlobalDirection(controller, localDirection[1])\\n\\t            ];\\n\\t            (globalDir[0] === 'e' || globalDir[0] === 'w') && globalDir.reverse();\\n\\t            return globalDir.join('');\\n\\t        }\\n\\t        else {\\n\\t            var map = {w: 'left', e: 'right', n: 'top', s: 'bottom'};\\n\\t            var inverseMap = {left: 'w', right: 'e', top: 'n', bottom: 's'};\\n\\t            var globalDir = graphic.transformDirection(\\n\\t                map[localDirection], getTransform(controller)\\n\\t            );\\n\\t            return inverseMap[globalDir];\\n\\t        }\\n\\t    }\\n\\n\\t    function driftRect(toRectRange, fromRectRange, controller, cover, name, dx, dy, e) {\\n\\t        var brushOption = cover.__brushOption;\\n\\t        var rectRange = toRectRange(brushOption.range);\\n\\t        var localDelta = toLocalDelta(controller, dx, dy);\\n\\n\\t        each(name.split(''), function (namePart) {\\n\\t            var ind = DIRECTION_MAP[namePart];\\n\\t            rectRange[ind[0]][ind[1]] += localDelta[ind[0]];\\n\\t        });\\n\\n\\t        brushOption.range = fromRectRange(formatRectRange(\\n\\t            rectRange[0][0], rectRange[1][0], rectRange[0][1], rectRange[1][1]\\n\\t        ));\\n\\n\\t        updateCoverAfterCreation(controller, cover);\\n\\t        trigger(controller, {isEnd: false});\\n\\t    }\\n\\n\\t    function driftPolygon(controller, cover, dx, dy, e) {\\n\\t        var range = cover.__brushOption.range;\\n\\t        var localDelta = toLocalDelta(controller, dx, dy);\\n\\n\\t        each(range, function (point) {\\n\\t            point[0] += localDelta[0];\\n\\t            point[1] += localDelta[1];\\n\\t        });\\n\\n\\t        updateCoverAfterCreation(controller, cover);\\n\\t        trigger(controller, {isEnd: false});\\n\\t    }\\n\\n\\t    function toLocalDelta(controller, dx, dy) {\\n\\t        var thisGroup = controller.group;\\n\\t        var localD = thisGroup.transformCoordToLocal(dx, dy);\\n\\t        var localZero = thisGroup.transformCoordToLocal(0, 0);\\n\\n\\t        return [localD[0] - localZero[0], localD[1] - localZero[1]];\\n\\t    }\\n\\n\\t    function clipByPanel(controller, cover, data) {\\n\\t        var panel = getPanelByCover(controller, cover);\\n\\n\\t        return (panel && panel !== true)\\n\\t            ? panel.clipPath(data, controller._transform)\\n\\t            : zrUtil.clone(data);\\n\\t    }\\n\\n\\t    function pointsToRect(points) {\\n\\t        var xmin = mathMin(points[0][0], points[1][0]);\\n\\t        var ymin = mathMin(points[0][1], points[1][1]);\\n\\t        var xmax = mathMax(points[0][0], points[1][0]);\\n\\t        var ymax = mathMax(points[0][1], points[1][1]);\\n\\n\\t        return {\\n\\t            x: xmin,\\n\\t            y: ymin,\\n\\t            width: xmax - xmin,\\n\\t            height: ymax - ymin\\n\\t        };\\n\\t    }\\n\\n\\t    function resetCursor(controller, e, localCursorPoint) {\\n\\t        // Check active\\n\\t        if (!controller._brushType) {\\n\\t            return;\\n\\t        }\\n\\n\\t        var zr = controller._zr;\\n\\t        var covers = controller._covers;\\n\\t        var currPanel = getPanelByPoint(controller, e, localCursorPoint);\\n\\n\\t        // Check whether in covers.\\n\\t        if (!controller._dragging) {\\n\\t            for (var i = 0; i < covers.length; i++) {\\n\\t                var brushOption = covers[i].__brushOption;\\n\\t                if (currPanel\\n\\t                    && (currPanel === true || brushOption.panelId === currPanel.panelId)\\n\\t                    && coverRenderers[brushOption.brushType].contain(\\n\\t                        covers[i], localCursorPoint[0], localCursorPoint[1]\\n\\t                    )\\n\\t                ) {\\n\\t                    // Use cursor style set on cover.\\n\\t                    return;\\n\\t                }\\n\\t            }\\n\\t        }\\n\\n\\t        currPanel && zr.setCursorStyle('crosshair');\\n\\t    }\\n\\n\\t    function preventDefault(e) {\\n\\t        var rawE = e.event;\\n\\t        rawE.preventDefault && rawE.preventDefault();\\n\\t    }\\n\\n\\t    function mainShapeContain(cover, x, y) {\\n\\t        return cover.childOfName('main').contain(x, y);\\n\\t    }\\n\\n\\t    function updateCoverByMouse(controller, e, localCursorPoint, isEnd) {\\n\\t        var creatingCover = controller._creatingCover;\\n\\t        var panel = controller._creatingPanel;\\n\\t        var thisBrushOption = controller._brushOption;\\n\\t        var eventParams;\\n\\n\\t        controller._track.push(localCursorPoint.slice());\\n\\n\\t        if (shouldShowCover(controller) || creatingCover) {\\n\\n\\t            if (panel && !creatingCover) {\\n\\t                thisBrushOption.brushMode === 'single' && clearCovers(controller);\\n\\t                var brushOption = zrUtil.clone(thisBrushOption);\\n\\t                brushOption.brushType = determineBrushType(brushOption.brushType, panel);\\n\\t                brushOption.panelId = panel === true ? null : panel.panelId;\\n\\t                creatingCover = controller._creatingCover = createCover(controller, brushOption);\\n\\t                controller._covers.push(creatingCover);\\n\\t            }\\n\\n\\t            if (creatingCover) {\\n\\t                var coverRenderer = coverRenderers[determineBrushType(controller._brushType, panel)];\\n\\t                var coverBrushOption = creatingCover.__brushOption;\\n\\n\\t                coverBrushOption.range = coverRenderer.getCreatingRange(\\n\\t                    clipByPanel(controller, creatingCover, controller._track)\\n\\t                );\\n\\n\\t                if (isEnd) {\\n\\t                    endCreating(controller, creatingCover);\\n\\t                    coverRenderer.updateCommon(controller, creatingCover);\\n\\t                }\\n\\n\\t                updateCoverShape(controller, creatingCover);\\n\\n\\t                eventParams = {isEnd: isEnd};\\n\\t            }\\n\\t        }\\n\\t        else if (\\n\\t            isEnd\\n\\t            && thisBrushOption.brushMode === 'single'\\n\\t            && thisBrushOption.removeOnClick\\n\\t        ) {\\n\\t            // Help user to remove covers easily, only by a tiny drag, in 'single' mode.\\n\\t            // But a single click do not clear covers, because user may have casual\\n\\t            // clicks (for example, click on other component and do not expect covers\\n\\t            // disappear).\\n\\t            // Only some cover removed, trigger action, but not every click trigger action.\\n\\t            if (getPanelByPoint(controller, e, localCursorPoint) && clearCovers(controller)) {\\n\\t                eventParams = {isEnd: isEnd, removeOnClick: true};\\n\\t            }\\n\\t        }\\n\\n\\t        return eventParams;\\n\\t    }\\n\\n\\t    function determineBrushType(brushType, panel) {\\n\\t        if (brushType === 'auto') {\\n\\t            if (true) {\\n\\t                zrUtil.assert(\\n\\t                    panel && panel.defaultBrushType,\\n\\t                    'MUST have defaultBrushType when brushType is \\\"atuo\\\"'\\n\\t                );\\n\\t            }\\n\\t            return panel.defaultBrushType;\\n\\t        }\\n\\t        return brushType;\\n\\t    }\\n\\n\\t    var mouseHandlers = {\\n\\n\\t        mousedown: function (e) {\\n\\t            if (this._dragging) {\\n\\t                // In case some browser do not support globalOut,\\n\\t                // and release mose out side the browser.\\n\\t                handleDragEnd.call(this, e);\\n\\t            }\\n\\t            else if (!e.target || !e.target.draggable) {\\n\\n\\t                preventDefault(e);\\n\\n\\t                var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\\n\\n\\t                this._creatingCover = null;\\n\\t                var panel = this._creatingPanel = getPanelByPoint(this, e, localCursorPoint);\\n\\n\\t                if (panel) {\\n\\t                    this._dragging = true;\\n\\t                    this._track = [localCursorPoint.slice()];\\n\\t                }\\n\\t            }\\n\\t        },\\n\\n\\t        mousemove: function (e) {\\n\\t            var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\\n\\n\\t            resetCursor(this, e, localCursorPoint);\\n\\n\\t            if (this._dragging) {\\n\\n\\t                preventDefault(e);\\n\\n\\t                var eventParams = updateCoverByMouse(this, e, localCursorPoint, false);\\n\\n\\t                eventParams && trigger(this, eventParams);\\n\\t            }\\n\\t        },\\n\\n\\t        mouseup: handleDragEnd //,\\n\\n\\t        // FIXME\\n\\t        // in tooltip, globalout should not be triggered.\\n\\t        // globalout: handleDragEnd\\n\\t    };\\n\\n\\t    function handleDragEnd(e) {\\n\\t        if (this._dragging) {\\n\\n\\t            preventDefault(e);\\n\\n\\t            var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\\n\\t            var eventParams = updateCoverByMouse(this, e, localCursorPoint, true);\\n\\n\\t            this._dragging = false;\\n\\t            this._track = [];\\n\\t            this._creatingCover = null;\\n\\n\\t            // trigger event shoule be at final, after procedure will be nested.\\n\\t            eventParams && trigger(this, eventParams);\\n\\t        }\\n\\t    }\\n\\n\\t    /**\\n\\t     * key: brushType\\n\\t     * @type {Object}\\n\\t     */\\n\\t    var coverRenderers = {\\n\\n\\t        lineX: getLineRenderer(0),\\n\\n\\t        lineY: getLineRenderer(1),\\n\\n\\t        rect: {\\n\\t            createCover: function (controller, brushOption) {\\n\\t                return createBaseRectCover(\\n\\t                    curry(\\n\\t                        driftRect,\\n\\t                        function (range) {\\n\\t                            return range;\\n\\t                        },\\n\\t                        function (range) {\\n\\t                            return range;\\n\\t                        }\\n\\t                    ),\\n\\t                    controller,\\n\\t                    brushOption,\\n\\t                    ['w', 'e', 'n', 's', 'se', 'sw', 'ne', 'nw']\\n\\t                );\\n\\t            },\\n\\t            getCreatingRange: function (localTrack) {\\n\\t                var ends = getTrackEnds(localTrack);\\n\\t                return formatRectRange(ends[1][0], ends[1][1], ends[0][0], ends[0][1]);\\n\\t            },\\n\\t            updateCoverShape: function (controller, cover, localRange, brushOption) {\\n\\t                updateBaseRect(controller, cover, localRange, brushOption);\\n\\t            },\\n\\t            updateCommon: updateCommon,\\n\\t            contain: mainShapeContain\\n\\t        },\\n\\n\\t        polygon: {\\n\\t            createCover: function (controller, brushOption) {\\n\\t                var cover = new graphic.Group();\\n\\n\\t                // Do not use graphic.Polygon because graphic.Polyline do not close the\\n\\t                // border of the shape when drawing, which is a better experience for user.\\n\\t                cover.add(new graphic.Polyline({\\n\\t                    name: 'main',\\n\\t                    style: makeStyle(brushOption),\\n\\t                    silent: true\\n\\t                }));\\n\\n\\t                return cover;\\n\\t            },\\n\\t            getCreatingRange: function (localTrack) {\\n\\t                return localTrack;\\n\\t            },\\n\\t            endCreating: function (controller, cover) {\\n\\t                cover.remove(cover.childAt(0));\\n\\t                // Use graphic.Polygon close the shape.\\n\\t                cover.add(new graphic.Polygon({\\n\\t                    name: 'main',\\n\\t                    draggable: true,\\n\\t                    drift: curry(driftPolygon, controller, cover),\\n\\t                    ondragend: curry(trigger, controller, {isEnd: true})\\n\\t                }));\\n\\t            },\\n\\t            updateCoverShape: function (controller, cover, localRange, brushOption) {\\n\\t                cover.childAt(0).setShape({\\n\\t                    points: clipByPanel(controller, cover, localRange)\\n\\t                });\\n\\t            },\\n\\t            updateCommon: updateCommon,\\n\\t            contain: mainShapeContain\\n\\t        }\\n\\t    };\\n\\n\\t    function getLineRenderer(xyIndex) {\\n\\t        return {\\n\\t            createCover: function (controller, brushOption) {\\n\\t                return createBaseRectCover(\\n\\t                    curry(\\n\\t                        driftRect,\\n\\t                        function (range) {\\n\\t                            var rectRange = [range, [0, 100]];\\n\\t                            xyIndex && rectRange.reverse();\\n\\t                            return rectRange;\\n\\t                        },\\n\\t                        function (rectRange) {\\n\\t                            return rectRange[xyIndex];\\n\\t                        }\\n\\t                    ),\\n\\t                    controller,\\n\\t                    brushOption,\\n\\t                    [['w', 'e'], ['n', 's']][xyIndex]\\n\\t                );\\n\\t            },\\n\\t            getCreatingRange: function (localTrack) {\\n\\t                var ends = getTrackEnds(localTrack);\\n\\t                var min = mathMin(ends[0][xyIndex], ends[1][xyIndex]);\\n\\t                var max = mathMax(ends[0][xyIndex], ends[1][xyIndex]);\\n\\n\\t                return [min, max];\\n\\t            },\\n\\t            updateCoverShape: function (controller, cover, localRange, brushOption) {\\n\\t                var otherExtent;\\n\\t                // If brushWidth not specified, fit the panel.\\n\\t                var panel = getPanelByCover(controller, cover);\\n\\t                if (panel !== true && panel.getLinearBrushOtherExtent) {\\n\\t                    otherExtent = panel.getLinearBrushOtherExtent(\\n\\t                        xyIndex, controller._transform\\n\\t                    );\\n\\t                }\\n\\t                else {\\n\\t                    var zr = controller._zr;\\n\\t                    otherExtent = [0, [zr.getWidth(), zr.getHeight()][1 - xyIndex]];\\n\\t                }\\n\\t                var rectRange = [localRange, otherExtent];\\n\\t                xyIndex && rectRange.reverse();\\n\\n\\t                updateBaseRect(controller, cover, rectRange, brushOption);\\n\\t            },\\n\\t            updateCommon: updateCommon,\\n\\t            contain: mainShapeContain\\n\\t        };\\n\\t    }\\n\\n\\t    module.exports = BrushController;\\n\\n\\n/***/ },\\n/* 246 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var cursorHelper = __webpack_require__(186);\\n\\t    var BoundingRect = __webpack_require__(9);\\n\\t    var graphicUtil = __webpack_require__(18);\\n\\n\\t    var helper = {};\\n\\n\\t    helper.makeRectPanelClipPath = function (rect) {\\n\\t        rect = normalizeRect(rect);\\n\\t        return function (localPoints, transform) {\\n\\t            return graphicUtil.clipPointsByRect(localPoints, rect);\\n\\t        };\\n\\t    };\\n\\n\\t    helper.makeLinearBrushOtherExtent = function (rect, specifiedXYIndex) {\\n\\t        rect = normalizeRect(rect);\\n\\t        return function (xyIndex) {\\n\\t            var idx = specifiedXYIndex != null ? specifiedXYIndex : xyIndex;\\n\\t            var brushWidth = idx ? rect.width : rect.height;\\n\\t            var base = idx ? rect.x : rect.y;\\n\\t            return [base, base + (brushWidth || 0)];\\n\\t        };\\n\\t    };\\n\\n\\t    helper.makeRectIsTargetByCursor = function (rect, api, targetModel) {\\n\\t        rect = normalizeRect(rect);\\n\\t        return function (e, localCursorPoint, transform) {\\n\\t            return rect.contain(localCursorPoint[0], localCursorPoint[1])\\n\\t                && !cursorHelper.onIrrelevantElement(e, api, targetModel);\\n\\t        };\\n\\t    };\\n\\n\\t    // Consider width/height is negative.\\n\\t    function normalizeRect(rect) {\\n\\t        return BoundingRect.create(rect);\\n\\t    }\\n\\n\\t    module.exports = helper;\\n\\n\\n\\n/***/ },\\n/* 247 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var modelUtil = __webpack_require__(5);\\n\\n\\t    module.exports = function (option) {\\n\\t        createParallelIfNeeded(option);\\n\\t        mergeAxisOptionFromParallel(option);\\n\\t    };\\n\\n\\t    /**\\n\\t     * Create a parallel coordinate if not exists.\\n\\t     * @inner\\n\\t     */\\n\\t    function createParallelIfNeeded(option) {\\n\\t        if (option.parallel) {\\n\\t            return;\\n\\t        }\\n\\n\\t        var hasParallelSeries = false;\\n\\n\\t        zrUtil.each(option.series, function (seriesOpt) {\\n\\t            if (seriesOpt && seriesOpt.type === 'parallel') {\\n\\t                hasParallelSeries = true;\\n\\t            }\\n\\t        });\\n\\n\\t        if (hasParallelSeries) {\\n\\t            option.parallel = [{}];\\n\\t        }\\n\\t    }\\n\\n\\t    /**\\n\\t     * Merge aixs definition from parallel option (if exists) to axis option.\\n\\t     * @inner\\n\\t     */\\n\\t    function mergeAxisOptionFromParallel(option) {\\n\\t        var axes = modelUtil.normalizeToArray(option.parallelAxis);\\n\\n\\t        zrUtil.each(axes, function (axisOption) {\\n\\t            if (!zrUtil.isObject(axisOption)) {\\n\\t                return;\\n\\t            }\\n\\n\\t            var parallelIndex = axisOption.parallelIndex || 0;\\n\\t            var parallelOption = modelUtil.normalizeToArray(option.parallel)[parallelIndex];\\n\\n\\t            if (parallelOption && parallelOption.parallelAxisDefault) {\\n\\t                zrUtil.merge(axisOption, parallelOption.parallelAxisDefault, false);\\n\\t            }\\n\\t        });\\n\\t    }\\n\\n\\n\\n/***/ },\\n/* 248 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var List = __webpack_require__(98);\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var SeriesModel = __webpack_require__(78);\\n\\t    var completeDimensions = __webpack_require__(110);\\n\\n\\t    module.exports = SeriesModel.extend({\\n\\n\\t        type: 'series.parallel',\\n\\n\\t        dependencies: ['parallel'],\\n\\n\\t        visualColorAccessPath: 'lineStyle.normal.color',\\n\\n\\t        getInitialData: function (option, ecModel) {\\n\\t            var parallelModel = ecModel.getComponent(\\n\\t                'parallel', this.get('parallelIndex')\\n\\t            );\\n\\t            var parallelAxisIndices = parallelModel.parallelAxisIndex;\\n\\n\\t            var rawData = option.data;\\n\\t            var modelDims = parallelModel.dimensions;\\n\\n\\t            var dataDims = generateDataDims(modelDims, rawData);\\n\\n\\t            var dataDimsInfo = zrUtil.map(dataDims, function (dim, dimIndex) {\\n\\n\\t                var modelDimsIndex = zrUtil.indexOf(modelDims, dim);\\n\\t                var axisModel = modelDimsIndex >= 0 && ecModel.getComponent(\\n\\t                    'parallelAxis', parallelAxisIndices[modelDimsIndex]\\n\\t                );\\n\\n\\t                if (axisModel && axisModel.get('type') === 'category') {\\n\\t                    translateCategoryValue(axisModel, dim, rawData);\\n\\t                    return {name: dim, type: 'ordinal'};\\n\\t                }\\n\\t                else if (modelDimsIndex < 0) {\\n\\t                    return completeDimensions.guessOrdinal(rawData, dimIndex)\\n\\t                        ? {name: dim, type: 'ordinal'}\\n\\t                        : dim;\\n\\t                }\\n\\t                else {\\n\\t                    return dim;\\n\\t                }\\n\\t            });\\n\\n\\t            var list = new List(dataDimsInfo, this);\\n\\t            list.initData(rawData);\\n\\n\\t            // Anication is forbiden in progressive data mode.\\n\\t            if (this.option.progressive) {\\n\\t                this.option.animation = false;\\n\\t            }\\n\\n\\t            return list;\\n\\t        },\\n\\n\\t        /**\\n\\t         * User can get data raw indices on 'axisAreaSelected' event received.\\n\\t         *\\n\\t         * @public\\n\\t         * @param {string} activeState 'active' or 'inactive' or 'normal'\\n\\t         * @return {Array.<number>} Raw indices\\n\\t         */\\n\\t        getRawIndicesByActiveState: function (activeState) {\\n\\t            var coordSys = this.coordinateSystem;\\n\\t            var data = this.getData();\\n\\t            var indices = [];\\n\\n\\t            coordSys.eachActiveState(data, function (theActiveState, dataIndex) {\\n\\t                if (activeState === theActiveState) {\\n\\t                    indices.push(data.getRawIndex(dataIndex));\\n\\t                }\\n\\t            });\\n\\n\\t            return indices;\\n\\t        },\\n\\n\\t        defaultOption: {\\n\\t            zlevel: 0,                  // 一级层叠\\n\\t            z: 2,                       // 二级层叠\\n\\n\\t            coordinateSystem: 'parallel',\\n\\t            parallelIndex: 0,\\n\\n\\t            label: {\\n\\t                normal: {\\n\\t                    show: false\\n\\t                },\\n\\t                emphasis: {\\n\\t                    show: false\\n\\t                }\\n\\t            },\\n\\n\\t            inactiveOpacity: 0.05,\\n\\t            activeOpacity: 1,\\n\\n\\t            lineStyle: {\\n\\t                normal: {\\n\\t                    width: 1,\\n\\t                    opacity: 0.45,\\n\\t                    type: 'solid'\\n\\t                }\\n\\t            },\\n\\t            progressive: false, // 100\\n\\t            smooth: false,\\n\\n\\t            animationEasing: 'linear'\\n\\t        }\\n\\t    });\\n\\n\\t    function translateCategoryValue(axisModel, dim, rawData) {\\n\\t        var axisData = axisModel.get('data');\\n\\t        var numberDim = convertDimNameToNumber(dim);\\n\\n\\t        if (axisData && axisData.length) {\\n\\t            zrUtil.each(rawData, function (dataItem) {\\n\\t                if (!dataItem) {\\n\\t                    return;\\n\\t                }\\n\\t                // FIXME\\n\\t                // time consuming, should use hash?\\n\\t                var index = zrUtil.indexOf(axisData, dataItem[numberDim]);\\n\\t                dataItem[numberDim] = index >= 0 ? index : NaN;\\n\\t            });\\n\\t        }\\n\\t        // FIXME\\n\\t        // 如果没有设置axis data, 应自动算出，或者提示。\\n\\t    }\\n\\n\\t    function convertDimNameToNumber(dimName) {\\n\\t        return +dimName.replace('dim', '');\\n\\t    }\\n\\n\\t    function generateDataDims(modelDims, rawData) {\\n\\t        // parallelModel.dimension should not be regarded as data\\n\\t        // dimensions. Consider dimensions = ['dim4', 'dim2', 'dim6'];\\n\\n\\t        // We detect max dim by parallelModel.dimensions and fist\\n\\t        // item in rawData arbitrarily.\\n\\t        var maxDimNum = 0;\\n\\t        zrUtil.each(modelDims, function (dimName) {\\n\\t            var numberDim = convertDimNameToNumber(dimName);\\n\\t            numberDim > maxDimNum && (maxDimNum = numberDim);\\n\\t        });\\n\\n\\t        var firstItem = rawData[0];\\n\\t        if (firstItem && firstItem.length - 1 > maxDimNum) {\\n\\t            maxDimNum = firstItem.length - 1;\\n\\t        }\\n\\n\\t        var dataDims = [];\\n\\t        for (var i = 0; i <= maxDimNum; i++) {\\n\\t            dataDims.push('dim' + i);\\n\\t        }\\n\\n\\t        return dataDims;\\n\\t    }\\n\\n\\n/***/ },\\n/* 249 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var graphic = __webpack_require__(18);\\n\\t    var zrUtil = __webpack_require__(4);\\n\\n\\t    var SMOOTH = 0.3;\\n\\n\\t    var ParallelView = __webpack_require__(80).extend({\\n\\n\\t        type: 'parallel',\\n\\n\\t        init: function () {\\n\\n\\t            /**\\n\\t             * @type {module:zrender/container/Group}\\n\\t             * @private\\n\\t             */\\n\\t            this._dataGroup = new graphic.Group();\\n\\n\\t            this.group.add(this._dataGroup);\\n\\n\\t            /**\\n\\t             * @type {module:echarts/data/List}\\n\\t             */\\n\\t            this._data;\\n\\t        },\\n\\n\\t        /**\\n\\t         * @override\\n\\t         */\\n\\t        render: function (seriesModel, ecModel, api, payload) {\\n\\t            this._renderForNormal(seriesModel, payload);\\n\\t            // this[\\n\\t            //     seriesModel.option.progressive\\n\\t            //         ? '_renderForProgressive'\\n\\t            //         : '_renderForNormal'\\n\\t            // ](seriesModel);\\n\\t        },\\n\\n\\t        dispose: function () {},\\n\\n\\t        /**\\n\\t         * @private\\n\\t         */\\n\\t        _renderForNormal: function (seriesModel, payload) {\\n\\t            var dataGroup = this._dataGroup;\\n\\t            var data = seriesModel.getData();\\n\\t            var oldData = this._data;\\n\\t            var coordSys = seriesModel.coordinateSystem;\\n\\t            var dimensions = coordSys.dimensions;\\n\\t            var option = seriesModel.option;\\n\\t            var smooth = option.smooth ? SMOOTH : null;\\n\\n\\t            // Consider switch between progressive and not.\\n\\t            // oldData && oldData.__plProgressive && dataGroup.removeAll();\\n\\n\\t            data.diff(oldData)\\n\\t                .add(add)\\n\\t                .update(update)\\n\\t                .remove(remove)\\n\\t                .execute();\\n\\n\\t            // Update style\\n\\t            updateElCommon(data, smooth);\\n\\n\\t            // First create\\n\\t            if (!this._data) {\\n\\t                var clipPath = createGridClipShape(\\n\\t                    coordSys, seriesModel, function () {\\n\\t                        // Callback will be invoked immediately if there is no animation\\n\\t                        setTimeout(function () {\\n\\t                            dataGroup.removeClipPath();\\n\\t                        });\\n\\t                    }\\n\\t                );\\n\\t                dataGroup.setClipPath(clipPath);\\n\\t            }\\n\\n\\t            this._data = data;\\n\\n\\t            function add(newDataIndex) {\\n\\t                addEl(data, dataGroup, newDataIndex, dimensions, coordSys, null, smooth);\\n\\t            }\\n\\n\\t            function update(newDataIndex, oldDataIndex) {\\n\\t                var line = oldData.getItemGraphicEl(oldDataIndex);\\n\\t                var points = createLinePoints(data, newDataIndex, dimensions, coordSys);\\n\\t                data.setItemGraphicEl(newDataIndex, line);\\n\\t                var animationModel = (payload && payload.animation === false) ? null : seriesModel;\\n\\t                graphic.updateProps(line, {shape: {points: points}}, animationModel, newDataIndex);\\n\\t            }\\n\\n\\t            function remove(oldDataIndex) {\\n\\t                var line = oldData.getItemGraphicEl(oldDataIndex);\\n\\t                dataGroup.remove(line);\\n\\t            }\\n\\n\\t        },\\n\\n\\t        /**\\n\\t         * @private\\n\\t         */\\n\\t        // _renderForProgressive: function (seriesModel) {\\n\\t        //     var dataGroup = this._dataGroup;\\n\\t        //     var data = seriesModel.getData();\\n\\t        //     var oldData = this._data;\\n\\t        //     var coordSys = seriesModel.coordinateSystem;\\n\\t        //     var dimensions = coordSys.dimensions;\\n\\t        //     var option = seriesModel.option;\\n\\t        //     var progressive = option.progressive;\\n\\t        //     var smooth = option.smooth ? SMOOTH : null;\\n\\n\\t        //     // In progressive animation is disabled, so use simple data diff,\\n\\t        //     // which effects performance less.\\n\\t        //     // (Typically performance for data with length 7000+ like:\\n\\t        //     // simpleDiff: 60ms, addEl: 184ms,\\n\\t        //     // in RMBP 2.4GHz intel i7, OSX 10.9 chrome 50.0.2661.102 (64-bit))\\n\\t        //     if (simpleDiff(oldData, data, dimensions)) {\\n\\t        //         dataGroup.removeAll();\\n\\t        //         data.each(function (dataIndex) {\\n\\t        //             addEl(data, dataGroup, dataIndex, dimensions, coordSys);\\n\\t        //         });\\n\\t        //     }\\n\\n\\t        //     updateElCommon(data, progressive, smooth);\\n\\n\\t        //     // Consider switch between progressive and not.\\n\\t        //     data.__plProgressive = true;\\n\\t        //     this._data = data;\\n\\t        // },\\n\\n\\t        /**\\n\\t         * @override\\n\\t         */\\n\\t        remove: function () {\\n\\t            this._dataGroup && this._dataGroup.removeAll();\\n\\t            this._data = null;\\n\\t        }\\n\\t    });\\n\\n\\t    function createGridClipShape(coordSys, seriesModel, cb) {\\n\\t        var parallelModel = coordSys.model;\\n\\t        var rect = coordSys.getRect();\\n\\t        var rectEl = new graphic.Rect({\\n\\t            shape: {\\n\\t                x: rect.x,\\n\\t                y: rect.y,\\n\\t                width: rect.width,\\n\\t                height: rect.height\\n\\t            }\\n\\t        });\\n\\n\\t        var dim = parallelModel.get('layout') === 'horizontal' ? 'width' : 'height';\\n\\t        rectEl.setShape(dim, 0);\\n\\t        graphic.initProps(rectEl, {\\n\\t            shape: {\\n\\t                width: rect.width,\\n\\t                height: rect.height\\n\\t            }\\n\\t        }, seriesModel, cb);\\n\\t        return rectEl;\\n\\t    }\\n\\n\\t    function createLinePoints(data, dataIndex, dimensions, coordSys) {\\n\\t        var points = [];\\n\\t        for (var i = 0; i < dimensions.length; i++) {\\n\\t            var dimName = dimensions[i];\\n\\t            var value = data.get(dimName, dataIndex);\\n\\t            if (!isEmptyValue(value, coordSys.getAxis(dimName).type)) {\\n\\t                points.push(coordSys.dataToPoint(value, dimName));\\n\\t            }\\n\\t        }\\n\\t        return points;\\n\\t    }\\n\\n\\t    function addEl(data, dataGroup, dataIndex, dimensions, coordSys) {\\n\\t        var points = createLinePoints(data, dataIndex, dimensions, coordSys);\\n\\t        var line = new graphic.Polyline({\\n\\t            shape: {points: points},\\n\\t            silent: true,\\n\\t            z2: 10\\n\\t        });\\n\\t        dataGroup.add(line);\\n\\t        data.setItemGraphicEl(dataIndex, line);\\n\\t    }\\n\\n\\t    function updateElCommon(data, smooth) {\\n\\t        var seriesStyleModel = data.hostModel.getModel('lineStyle.normal');\\n\\t        var lineStyle = seriesStyleModel.getLineStyle();\\n\\t        data.eachItemGraphicEl(function (line, dataIndex) {\\n\\t            if (data.hasItemOption) {\\n\\t                var itemModel = data.getItemModel(dataIndex);\\n\\t                var lineStyleModel = itemModel.getModel('lineStyle.normal', seriesStyleModel);\\n\\t                lineStyle = lineStyleModel.getLineStyle(['color', 'stroke']);\\n\\t            }\\n\\n\\t            line.useStyle(zrUtil.extend(lineStyle, {\\n\\t                fill: null,\\n\\t                // lineStyle.color have been set to itemVisual in module:echarts/visual/seriesColor.\\n\\t                stroke: data.getItemVisual(dataIndex, 'color'),\\n\\t                // lineStyle.opacity have been set to itemVisual in parallelVisual.\\n\\t                opacity: data.getItemVisual(dataIndex, 'opacity')\\n\\t            }));\\n\\n\\t            line.shape.smooth = smooth;\\n\\t        });\\n\\t    }\\n\\n\\t    // function simpleDiff(oldData, newData, dimensions) {\\n\\t    //     var oldLen;\\n\\t    //     if (!oldData\\n\\t    //         || !oldData.__plProgressive\\n\\t    //         || (oldLen = oldData.count()) !== newData.count()\\n\\t    //     ) {\\n\\t    //         return true;\\n\\t    //     }\\n\\n\\t    //     var dimLen = dimensions.length;\\n\\t    //     for (var i = 0; i < oldLen; i++) {\\n\\t    //         for (var j = 0; j < dimLen; j++) {\\n\\t    //             if (oldData.get(dimensions[j], i) !== newData.get(dimensions[j], i)) {\\n\\t    //                 return true;\\n\\t    //             }\\n\\t    //         }\\n\\t    //     }\\n\\n\\t    //     return false;\\n\\t    // }\\n\\n\\t    // FIXME\\n\\t    // 公用方法?\\n\\t    function isEmptyValue(val, axisType) {\\n\\t        return axisType === 'category'\\n\\t            ? val == null\\n\\t            : (val == null || isNaN(val)); // axisType === 'value'\\n\\t    }\\n\\n\\t    module.exports = ParallelView;\\n\\n\\n/***/ },\\n/* 250 */\\n/***/ function(module, exports) {\\n\\n\\t\\n\\n\\t    var opacityAccessPath = ['lineStyle', 'normal', 'opacity'];\\n\\n\\t    module.exports = function (ecModel) {\\n\\n\\t        ecModel.eachSeriesByType('parallel', function (seriesModel) {\\n\\n\\t            var itemStyleModel = seriesModel.getModel('itemStyle.normal');\\n\\t            var lineStyleModel = seriesModel.getModel('lineStyle.normal');\\n\\t            var globalColors = ecModel.get('color');\\n\\n\\t            var color = lineStyleModel.get('color')\\n\\t                || itemStyleModel.get('color')\\n\\t                || globalColors[seriesModel.seriesIndex % globalColors.length];\\n\\t            var inactiveOpacity = seriesModel.get('inactiveOpacity');\\n\\t            var activeOpacity = seriesModel.get('activeOpacity');\\n\\t            var lineStyle = seriesModel.getModel('lineStyle.normal').getLineStyle();\\n\\n\\t            var coordSys = seriesModel.coordinateSystem;\\n\\t            var data = seriesModel.getData();\\n\\n\\t            var opacityMap = {\\n\\t                normal: lineStyle.opacity,\\n\\t                active: activeOpacity,\\n\\t                inactive: inactiveOpacity\\n\\t            };\\n\\n\\t            coordSys.eachActiveState(data, function (activeState, dataIndex) {\\n\\t                var itemModel = data.getItemModel(dataIndex);\\n\\t                var opacity = opacityMap[activeState];\\n\\t                if (activeState === 'normal') {\\n\\t                    var itemOpacity = itemModel.get(opacityAccessPath, true);\\n\\t                    itemOpacity != null && (opacity = itemOpacity);\\n\\t                }\\n\\t                data.setItemVisual(dataIndex, 'opacity', opacity);\\n\\t            });\\n\\n\\t            data.setVisual('color', color);\\n\\t        });\\n\\t    };\\n\\n\\n/***/ },\\n/* 251 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var echarts = __webpack_require__(1);\\n\\n\\t    __webpack_require__(252);\\n\\t    __webpack_require__(253);\\n\\t    echarts.registerLayout(__webpack_require__(254));\\n\\t    echarts.registerVisual(__webpack_require__(256));\\n\\n\\n/***/ },\\n/* 252 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * @file Get initial data and define sankey view's series model\\n\\t * @author Deqing Li(annong035@gmail.com)\\n\\t */\\n\\n\\n\\t    var SeriesModel = __webpack_require__(78);\\n\\t    var createGraphFromNodeEdge = __webpack_require__(207);\\n\\t    var encodeHTML = __webpack_require__(6).encodeHTML;\\n\\n\\t    var SankeySeries = SeriesModel.extend({\\n\\n\\t        type: 'series.sankey',\\n\\n\\t        layoutInfo: null,\\n\\n\\t        /**\\n\\t         * Init a graph data structure from data in option series\\n\\t         *\\n\\t         * @param  {Object} option  the object used to config echarts view\\n\\t         * @return {module:echarts/data/List} storage initial data\\n\\t         */\\n\\t        getInitialData: function (option) {\\n\\t            var links = option.edges || option.links;\\n\\t            var nodes = option.data || option.nodes;\\n\\t            if (nodes && links) {\\n\\t                var graph = createGraphFromNodeEdge(nodes, links, this, true);\\n\\t                return graph.data;\\n\\t            }\\n\\t        },\\n\\n\\t        /**\\n\\t         * Return the graphic data structure\\n\\t         *\\n\\t         * @return {module:echarts/data/Graph} graphic data structure\\n\\t         */\\n\\t        getGraph: function () {\\n\\t            return this.getData().graph;\\n\\t        },\\n\\n\\t        /**\\n\\t         * Get edge data of graphic data structure\\n\\t         *\\n\\t         * @return {module:echarts/data/List} data structure of list\\n\\t         */\\n\\t        getEdgeData: function () {\\n\\t            return this.getGraph().edgeData;\\n\\t        },\\n\\n\\t        /**\\n\\t         * @override\\n\\t         */\\n\\t        formatTooltip: function (dataIndex, multipleSeries, dataType) {\\n\\t            // dataType === 'node' or empty do not show tooltip by default\\n\\t            if (dataType === 'edge') {\\n\\t                var params = this.getDataParams(dataIndex, dataType);\\n\\t                var rawDataOpt = params.data;\\n\\t                var html = rawDataOpt.source + ' -- ' + rawDataOpt.target;\\n\\t                if (params.value) {\\n\\t                    html += ' : ' + params.value;\\n\\t                }\\n\\t                return encodeHTML(html);\\n\\t            }\\n\\n\\t            return SankeySeries.superCall(this, 'formatTooltip', dataIndex, multipleSeries);\\n\\t        },\\n\\n\\t        defaultOption: {\\n\\t            zlevel: 0,\\n\\t            z: 2,\\n\\n\\t            coordinateSystem: 'view',\\n\\n\\t            layout: null,\\n\\n\\t            // the position of the whole view\\n\\t            left: '5%',\\n\\t            top: '5%',\\n\\t            right: '20%',\\n\\t            bottom: '5%',\\n\\n\\t            // the dx of the node\\n\\t            nodeWidth: 20,\\n\\n\\t            // the vertical distance between two nodes\\n\\t            nodeGap: 8,\\n\\n\\t            // the number of iterations to change the position of the node\\n\\t            layoutIterations: 32,\\n\\n\\t            label: {\\n\\t                normal: {\\n\\t                    show: true,\\n\\t                    position: 'right',\\n\\t                    textStyle: {\\n\\t                        color: '#000',\\n\\t                        fontSize: 12\\n\\t                    }\\n\\t                },\\n\\t                emphasis: {\\n\\t                    show: true\\n\\t                }\\n\\t            },\\n\\n\\t            itemStyle: {\\n\\t                normal: {\\n\\t                    borderWidth: 1,\\n\\t                    borderColor: '#333'\\n\\t                }\\n\\t            },\\n\\n\\t            lineStyle: {\\n\\t                normal: {\\n\\t                    color: '#314656',\\n\\t                    opacity: 0.2,\\n\\t                    curveness: 0.5\\n\\t                },\\n\\t                emphasis: {\\n\\t                    opacity: 0.6\\n\\t                }\\n\\t            },\\n\\n\\t            animationEasing: 'linear',\\n\\n\\t            animationDuration: 1000\\n\\t        }\\n\\n\\t    });\\n\\n\\t    module.exports = SankeySeries;\\n\\n\\n\\n/***/ },\\n/* 253 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * @file  The file used to draw sankey view\\n\\t * @author  Deqing Li(annong035@gmail.com)\\n\\t */\\n\\n\\n\\t    var graphic = __webpack_require__(18);\\n\\t    var zrUtil = __webpack_require__(4);\\n\\n\\t    var SankeyShape = graphic.extendShape({\\n\\t        shape: {\\n\\t            x1: 0, y1: 0,\\n\\t            x2: 0, y2: 0,\\n\\t            cpx1: 0, cpy1: 0,\\n\\t            cpx2: 0, cpy2: 0,\\n\\n\\t            extent: 0\\n\\t        },\\n\\n\\t        buildPath: function (ctx, shape) {\\n\\t            var halfExtent = shape.extent / 2;\\n\\t            ctx.moveTo(shape.x1, shape.y1 - halfExtent);\\n\\t            ctx.bezierCurveTo(\\n\\t                shape.cpx1, shape.cpy1 - halfExtent,\\n\\t                shape.cpx2, shape.cpy2 - halfExtent,\\n\\t                shape.x2, shape.y2 - halfExtent\\n\\t            );\\n\\t            ctx.lineTo(shape.x2, shape.y2 + halfExtent);\\n\\t            ctx.bezierCurveTo(\\n\\t                shape.cpx2, shape.cpy2 + halfExtent,\\n\\t                shape.cpx1, shape.cpy1 + halfExtent,\\n\\t                shape.x1, shape.y1 + halfExtent\\n\\t            );\\n\\t            ctx.closePath();\\n\\t        }\\n\\t    });\\n\\n\\t    module.exports = __webpack_require__(1).extendChartView({\\n\\n\\t        type: 'sankey',\\n\\n\\t        /**\\n\\t         * @private\\n\\t         * @type {module:echarts/chart/sankey/SankeySeries}\\n\\t         */\\n\\t        _model: null,\\n\\n\\t        render: function (seriesModel, ecModel, api) {\\n\\t            var graph = seriesModel.getGraph();\\n\\t            var group = this.group;\\n\\t            var layoutInfo = seriesModel.layoutInfo;\\n\\t            var nodeData = seriesModel.getData();\\n\\t            var edgeData = seriesModel.getData('edge');\\n\\n\\t            this._model = seriesModel;\\n\\n\\t            group.removeAll();\\n\\n\\t            group.position = [layoutInfo.x, layoutInfo.y];\\n\\n\\t            // generate a bezire Curve for each edge\\n\\t            graph.eachEdge(function (edge) {\\n\\t                var curve = new SankeyShape();\\n\\n\\t                curve.dataIndex = edge.dataIndex;\\n\\t                curve.seriesIndex = seriesModel.seriesIndex;\\n\\t                curve.dataType = 'edge';\\n\\n\\t                var lineStyleModel = edge.getModel('lineStyle.normal');\\n\\t                var curvature = lineStyleModel.get('curveness');\\n\\t                var n1Layout = edge.node1.getLayout();\\n\\t                var n2Layout = edge.node2.getLayout();\\n\\t                var edgeLayout = edge.getLayout();\\n\\n\\t                curve.shape.extent = Math.max(1, edgeLayout.dy);\\n\\n\\t                var x1 = n1Layout.x + n1Layout.dx;\\n\\t                var y1 = n1Layout.y + edgeLayout.sy + edgeLayout.dy / 2;\\n\\t                var x2 = n2Layout.x;\\n\\t                var y2 = n2Layout.y + edgeLayout.ty + edgeLayout.dy / 2;\\n\\t                var cpx1 = x1 * (1 - curvature) + x2 * curvature;\\n\\t                var cpy1 = y1;\\n\\t                var cpx2 = x1 * curvature + x2 * (1 - curvature);\\n\\t                var cpy2 = y2;\\n\\n\\t                curve.setShape({\\n\\t                    x1: x1,\\n\\t                    y1: y1,\\n\\t                    x2: x2,\\n\\t                    y2: y2,\\n\\t                    cpx1: cpx1,\\n\\t                    cpy1: cpy1,\\n\\t                    cpx2: cpx2,\\n\\t                    cpy2: cpy2\\n\\t                });\\n\\n\\t                curve.setStyle(lineStyleModel.getItemStyle());\\n\\t                // Special color, use source node color or target node color\\n\\t                switch (curve.style.fill) {\\n\\t                    case 'source':\\n\\t                        curve.style.fill = edge.node1.getVisual('color');\\n\\t                        break;\\n\\t                    case 'target':\\n\\t                        curve.style.fill = edge.node2.getVisual('color');\\n\\t                        break;\\n\\t                }\\n\\n\\t                graphic.setHoverStyle(curve, edge.getModel('lineStyle.emphasis').getItemStyle());\\n\\n\\t                group.add(curve);\\n\\n\\t                edgeData.setItemGraphicEl(edge.dataIndex, curve);\\n\\t            });\\n\\n\\t            // generate a rect  for each node\\n\\t            graph.eachNode(function (node) {\\n\\t                var layout = node.getLayout();\\n\\t                var itemModel = node.getModel();\\n\\t                var labelModel = itemModel.getModel('label.normal');\\n\\t                var textStyleModel = labelModel.getModel('textStyle');\\n\\t                var labelHoverModel = itemModel.getModel('label.emphasis');\\n\\t                var textStyleHoverModel = labelHoverModel.getModel('textStyle');\\n\\n\\t                var rect = new graphic.Rect({\\n\\t                    shape: {\\n\\t                        x: layout.x,\\n\\t                        y: layout.y,\\n\\t                        width: node.getLayout().dx,\\n\\t                        height: node.getLayout().dy\\n\\t                    },\\n\\t                    style: {\\n\\t                        // Get formatted label in label.normal option\\n\\t                        //  Use node id if it is not specified\\n\\t                        text: labelModel.get('show')\\n\\t                            ? seriesModel.getFormattedLabel(node.dataIndex, 'normal') || node.id\\n\\t                            // Use empty string to hide the label\\n\\t                            : '',\\n\\t                        textFont: textStyleModel.getFont(),\\n\\t                        textFill: textStyleModel.getTextColor(),\\n\\t                        textPosition: labelModel.get('position')\\n\\t                    }\\n\\t                });\\n\\n\\t                rect.setStyle(zrUtil.defaults(\\n\\t                    {\\n\\t                        fill: node.getVisual('color')\\n\\t                    },\\n\\t                    itemModel.getModel('itemStyle.normal').getItemStyle()\\n\\t                ));\\n\\n\\t                graphic.setHoverStyle(rect, zrUtil.extend(\\n\\t                    node.getModel('itemStyle.emphasis'),\\n\\t                    {\\n\\t                        text: labelHoverModel.get('show')\\n\\t                            ? seriesModel.getFormattedLabel(node.dataIndex, 'emphasis') || node.id\\n\\t                            : '',\\n\\t                        textFont: textStyleHoverModel.getFont(),\\n\\t                        textFill: textStyleHoverModel.getTextColor(),\\n\\t                        textPosition: labelHoverModel.get('position')\\n\\t                    }\\n\\t                ));\\n\\n\\t                group.add(rect);\\n\\n\\t                nodeData.setItemGraphicEl(node.dataIndex, rect);\\n\\n\\t                rect.dataType = 'node';\\n\\t            });\\n\\n\\t            if (!this._data && seriesModel.get('animation')) {\\n\\t                group.setClipPath(createGridClipShape(group.getBoundingRect(), seriesModel, function () {\\n\\t                    group.removeClipPath();\\n\\t                }));\\n\\t            }\\n\\n\\t            this._data = seriesModel.getData();\\n\\t        },\\n\\n\\t        dispose: function () {}\\n\\t    });\\n\\n\\t    // add animation to the view\\n\\t    function createGridClipShape(rect, seriesModel, cb) {\\n\\t        var rectEl = new graphic.Rect({\\n\\t            shape: {\\n\\t                x: rect.x - 10,\\n\\t                y: rect.y - 10,\\n\\t                width: 0,\\n\\t                height: rect.height + 20\\n\\t            }\\n\\t        });\\n\\t        graphic.initProps(rectEl, {\\n\\t            shape: {\\n\\t                width: rect.width + 20,\\n\\t                height: rect.height + 20\\n\\t            }\\n\\t        }, seriesModel, cb);\\n\\n\\t        return rectEl;\\n\\t    }\\n\\n\\n\\n/***/ },\\n/* 254 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * @file The layout algorithm of sankey view\\n\\t * @author  Deqing Li(annong035@gmail.com)\\n\\t */\\n\\n\\n\\t    var layout = __webpack_require__(71);\\n\\t    var nest = __webpack_require__(255);\\n\\t    var zrUtil = __webpack_require__(4);\\n\\n\\t    module.exports = function (ecModel, api, payload) {\\n\\n\\t        ecModel.eachSeriesByType('sankey', function (seriesModel) {\\n\\n\\t            var nodeWidth = seriesModel.get('nodeWidth');\\n\\t            var nodeGap = seriesModel.get('nodeGap');\\n\\n\\t            var layoutInfo = getViewRect(seriesModel, api);\\n\\n\\t            seriesModel.layoutInfo = layoutInfo;\\n\\n\\t            var width = layoutInfo.width;\\n\\t            var height = layoutInfo.height;\\n\\n\\t            var graph = seriesModel.getGraph();\\n\\n\\t            var nodes = graph.nodes;\\n\\t            var edges = graph.edges;\\n\\n\\t            computeNodeValues(nodes);\\n\\n\\t            var filteredNodes = zrUtil.filter(nodes, function (node) {\\n\\t                return node.getLayout().value === 0;\\n\\t            });\\n\\n\\t            var iterations = filteredNodes.length !== 0\\n\\t                ? 0 : seriesModel.get('layoutIterations');\\n\\n\\t            layoutSankey(nodes, edges, nodeWidth, nodeGap, width, height, iterations);\\n\\t        });\\n\\t    };\\n\\n\\t    /**\\n\\t     * Get the layout position of the whole view\\n\\t     *\\n\\t     * @param {module:echarts/model/Series} seriesModel  the model object of sankey series\\n\\t     * @param {module:echarts/ExtensionAPI} api  provide the API list that the developer can call\\n\\t     * @return {module:zrender/core/BoundingRect}  size of rect to draw the sankey view\\n\\t     */\\n\\t    function getViewRect(seriesModel, api) {\\n\\t        return layout.getLayoutRect(\\n\\t            seriesModel.getBoxLayoutParams(), {\\n\\t                width: api.getWidth(),\\n\\t                height: api.getHeight()\\n\\t            }\\n\\t        );\\n\\t    }\\n\\n\\t    function layoutSankey(nodes, edges, nodeWidth, nodeGap, width, height, iterations) {\\n\\t        computeNodeBreadths(nodes, nodeWidth, width);\\n\\t        computeNodeDepths(nodes, edges, height, nodeGap, iterations);\\n\\t        computeEdgeDepths(nodes);\\n\\t    }\\n\\n\\t    /**\\n\\t     * Compute the value of each node by summing the associated edge's value\\n\\t     *\\n\\t     * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\\n\\t     */\\n\\t    function computeNodeValues(nodes) {\\n\\t        zrUtil.each(nodes, function (node) {\\n\\t            var value1 = sum(node.outEdges, getEdgeValue);\\n\\t            var value2 = sum(node.inEdges, getEdgeValue);\\n\\t            var value = Math.max(value1, value2);\\n\\t            node.setLayout({value: value}, true);\\n\\t        });\\n\\t    }\\n\\n\\t    /**\\n\\t     * Compute the x-position for each node\\n\\t     *\\n\\t     * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\\n\\t     * @param  {number} nodeWidth  the dx of the node\\n\\t     * @param  {number} width  the whole width of the area to draw the view\\n\\t     */\\n\\t    function computeNodeBreadths(nodes, nodeWidth, width) {\\n\\t        var remainNodes = nodes;\\n\\t        var nextNode = null;\\n\\t        var x = 0;\\n\\t        var kx = 0;\\n\\n\\t        while (remainNodes.length) {\\n\\t            nextNode = [];\\n\\t            for (var i = 0, len = remainNodes.length; i < len; i++) {\\n\\t                var node = remainNodes[i];\\n\\t                node.setLayout({x: x}, true);\\n\\t                node.setLayout({dx: nodeWidth}, true);\\n\\t                for (var j = 0, lenj = node.outEdges.length; j < lenj; j++) {\\n\\t                    nextNode.push(node.outEdges[j].node2);\\n\\t                }\\n\\t            }\\n\\t            remainNodes = nextNode;\\n\\t            ++x;\\n\\t        }\\n\\n\\t        moveSinksRight(nodes, x);\\n\\t        kx = (width - nodeWidth) / (x - 1);\\n\\n\\t        scaleNodeBreadths(nodes, kx);\\n\\t    }\\n\\n\\t    /**\\n\\t     * All the node without outEgdes are assigned maximum x-position and\\n\\t     *     be aligned in the last column.\\n\\t     *\\n\\t     * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\\n\\t     * @param {number} x  value (x-1) use to assign to node without outEdges\\n\\t     *     as x-position\\n\\t     */\\n\\t    function moveSinksRight(nodes, x) {\\n\\t        zrUtil.each(nodes, function (node) {\\n\\t            if (!node.outEdges.length) {\\n\\t                node.setLayout({x: x - 1}, true);\\n\\t            }\\n\\t        });\\n\\t    }\\n\\n\\t    /**\\n\\t     * Scale node x-position to the width\\n\\t     *\\n\\t     * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\\n\\t     * @param {number} kx   multiple used to scale nodes\\n\\t     */\\n\\t    function scaleNodeBreadths(nodes, kx) {\\n\\t        zrUtil.each(nodes, function (node) {\\n\\t            var nodeX = node.getLayout().x * kx;\\n\\t            node.setLayout({x: nodeX}, true);\\n\\t        });\\n\\t    }\\n\\n\\t    /**\\n\\t     * Using Gauss-Seidel iterations method to compute the node depth(y-position)\\n\\t     *\\n\\t     * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\\n\\t     * @param {module:echarts/data/Graph~Edge} edges  edge of sankey view\\n\\t     * @param {number} height  the whole height of the area to draw the view\\n\\t     * @param {numbber} nodeGap  the vertical distance between two nodes\\n\\t     *     in the same column.\\n\\t     * @param {number} iterations  the number of iterations for the algorithm\\n\\t     */\\n\\t    function computeNodeDepths(nodes, edges, height, nodeGap, iterations) {\\n\\t        var nodesByBreadth = nest()\\n\\t            .key(function (d) {\\n\\t                return d.getLayout().x;\\n\\t            })\\n\\t            .sortKeys(ascending)\\n\\t            .entries(nodes)\\n\\t            .map(function (d) {\\n\\t                return d.values;\\n\\t            });\\n\\n\\t        initializeNodeDepth(nodes, nodesByBreadth, edges, height, nodeGap);\\n\\t        resolveCollisions(nodesByBreadth, nodeGap, height);\\n\\n\\t        for (var alpha = 1; iterations > 0; iterations--) {\\n\\t            // 0.99 is a experience parameter, ensure that each iterations of\\n\\t            // changes as small as possible.\\n\\t            alpha *= 0.99;\\n\\t            relaxRightToLeft(nodesByBreadth, alpha);\\n\\t            resolveCollisions(nodesByBreadth, nodeGap, height);\\n\\t            relaxLeftToRight(nodesByBreadth, alpha);\\n\\t            resolveCollisions(nodesByBreadth, nodeGap, height);\\n\\t        }\\n\\t    }\\n\\n\\t    /**\\n\\t     * Compute the original y-position for each node\\n\\t     *\\n\\t     * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\\n\\t     * @param {Array.<Array.<module:echarts/data/Graph~Node>>} nodesByBreadth\\n\\t     *     group by the array of all sankey nodes based on the nodes x-position.\\n\\t     * @param {module:echarts/data/Graph~Edge} edges  edge of sankey view\\n\\t     * @param {number} height  the whole height of the area to draw the view\\n\\t     * @param {number} nodeGap  the vertical distance between two nodes\\n\\t     */\\n\\t    function initializeNodeDepth(nodes, nodesByBreadth, edges, height, nodeGap) {\\n\\t        var kyArray = [];\\n\\t        zrUtil.each(nodesByBreadth, function (nodes) {\\n\\t            var n = nodes.length;\\n\\t            var sum = 0;\\n\\t            zrUtil.each(nodes, function (node) {\\n\\t                sum += node.getLayout().value;\\n\\t            });\\n\\t            var ky = (height - (n - 1) * nodeGap) / sum;\\n\\t            kyArray.push(ky);\\n\\t        });\\n\\n\\t        kyArray.sort(function (a, b) {\\n\\t            return a - b;\\n\\t        });\\n\\t        var ky0 = kyArray[0];\\n\\n\\t        zrUtil.each(nodesByBreadth, function (nodes) {\\n\\t            zrUtil.each(nodes, function (node, i) {\\n\\t                node.setLayout({y: i}, true);\\n\\t                var nodeDy = node.getLayout().value * ky0;\\n\\t                node.setLayout({dy: nodeDy}, true);\\n\\t            });\\n\\t        });\\n\\n\\t        zrUtil.each(edges, function (edge) {\\n\\t            var edgeDy = +edge.getValue() * ky0;\\n\\t            edge.setLayout({dy: edgeDy}, true);\\n\\t        });\\n\\t    }\\n\\n\\t    /**\\n\\t     * Resolve the collision of initialized depth (y-position)\\n\\t     *\\n\\t     * @param {Array.<Array.<module:echarts/data/Graph~Node>>} nodesByBreadth\\n\\t     *     group by the array of all sankey nodes based on the nodes x-position.\\n\\t     * @param {number} nodeGap  the vertical distance between two nodes\\n\\t     * @param {number} height  the whole height of the area to draw the view\\n\\t     */\\n\\t    function resolveCollisions(nodesByBreadth, nodeGap, height) {\\n\\t        zrUtil.each(nodesByBreadth, function (nodes) {\\n\\t            var node;\\n\\t            var dy;\\n\\t            var y0 = 0;\\n\\t            var n = nodes.length;\\n\\t            var i;\\n\\n\\t            nodes.sort(ascendingDepth);\\n\\n\\t            for (i = 0; i < n; i++) {\\n\\t                node = nodes[i];\\n\\t                dy = y0 - node.getLayout().y;\\n\\t                if (dy > 0) {\\n\\t                    var nodeY = node.getLayout().y + dy;\\n\\t                    node.setLayout({y: nodeY}, true);\\n\\t                }\\n\\t                y0 = node.getLayout().y + node.getLayout().dy + nodeGap;\\n\\t            }\\n\\n\\t            // if the bottommost node goes outside the bounds, push it back up\\n\\t            dy = y0 - nodeGap - height;\\n\\t            if (dy > 0) {\\n\\t                var nodeY = node.getLayout().y - dy;\\n\\t                node.setLayout({y: nodeY}, true);\\n\\t                y0 = node.getLayout().y;\\n\\t                for (i = n - 2; i >= 0; --i) {\\n\\t                    node = nodes[i];\\n\\t                    dy = node.getLayout().y + node.getLayout().dy + nodeGap - y0;\\n\\t                    if (dy > 0) {\\n\\t                        nodeY = node.getLayout().y - dy;\\n\\t                        node.setLayout({y: nodeY}, true);\\n\\t                    }\\n\\t                    y0 = node.getLayout().y;\\n\\t                }\\n\\t            }\\n\\t        });\\n\\t    }\\n\\n\\t    /**\\n\\t     * Change the y-position of the nodes, except most the right side nodes\\n\\t     *\\n\\t     * @param {Array.<Array.<module:echarts/data/Graph~Node>>} nodesByBreadth\\n\\t     *     group by the array of all sankey nodes based on the node x-position.\\n\\t     * @param {number} alpha  parameter used to adjust the nodes y-position\\n\\t     */\\n\\t    function relaxRightToLeft(nodesByBreadth, alpha) {\\n\\t        zrUtil.each(nodesByBreadth.slice().reverse(), function (nodes) {\\n\\t            zrUtil.each(nodes, function (node) {\\n\\t                if (node.outEdges.length) {\\n\\t                    var y = sum(node.outEdges, weightedTarget) / sum(node.outEdges, getEdgeValue);\\n\\t                    var nodeY = node.getLayout().y + (y - center(node)) * alpha;\\n\\t                    node.setLayout({y: nodeY}, true);\\n\\t                }\\n\\t            });\\n\\t        });\\n\\t    }\\n\\n\\t    function weightedTarget(edge) {\\n\\t        return center(edge.node2) * edge.getValue();\\n\\t    }\\n\\n\\t    /**\\n\\t     * Change the y-position of the nodes, except most the left side nodes\\n\\t     *\\n\\t     * @param {Array.<Array.<module:echarts/data/Graph~Node>>} nodesByBreadth\\n\\t     *     group by the array of all sankey nodes based on the node x-position.\\n\\t     * @param {number} alpha  parameter used to adjust the nodes y-position\\n\\t     */\\n\\t    function relaxLeftToRight(nodesByBreadth, alpha) {\\n\\t        zrUtil.each(nodesByBreadth, function (nodes) {\\n\\t            zrUtil.each(nodes, function (node) {\\n\\t                if (node.inEdges.length) {\\n\\t                    var y = sum(node.inEdges, weightedSource) / sum(node.inEdges, getEdgeValue);\\n\\t                    var nodeY = node.getLayout().y + (y - center(node)) * alpha;\\n\\t                    node.setLayout({y: nodeY}, true);\\n\\t                }\\n\\t            });\\n\\t        });\\n\\t    }\\n\\n\\t    function weightedSource(edge) {\\n\\t        return center(edge.node1) * edge.getValue();\\n\\t    }\\n\\n\\t    /**\\n\\t     * Compute the depth(y-position) of each edge\\n\\t     *\\n\\t     * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\\n\\t     */\\n\\t    function computeEdgeDepths(nodes) {\\n\\t        zrUtil.each(nodes, function (node) {\\n\\t            node.outEdges.sort(ascendingTargetDepth);\\n\\t            node.inEdges.sort(ascendingSourceDepth);\\n\\t        });\\n\\t        zrUtil.each(nodes, function (node) {\\n\\t            var sy = 0;\\n\\t            var ty = 0;\\n\\t            zrUtil.each(node.outEdges, function (edge) {\\n\\t                edge.setLayout({sy: sy}, true);\\n\\t                sy += edge.getLayout().dy;\\n\\t            });\\n\\t            zrUtil.each(node.inEdges, function (edge) {\\n\\t                edge.setLayout({ty: ty}, true);\\n\\t                ty += edge.getLayout().dy;\\n\\t            });\\n\\t        });\\n\\t    }\\n\\n\\t    function ascendingTargetDepth(a, b) {\\n\\t        return a.node2.getLayout().y - b.node2.getLayout().y;\\n\\t    }\\n\\n\\t    function ascendingSourceDepth(a, b) {\\n\\t        return a.node1.getLayout().y - b.node1.getLayout().y;\\n\\t    }\\n\\n\\t    function sum(array, f) {\\n\\t        var sum = 0;\\n\\t        var len = array.length;\\n\\t        var i = -1;\\n\\t        while (++i < len) {\\n\\t            var value = +f.call(array, array[i], i);\\n\\t            if (!isNaN(value)) {\\n\\t                sum += value;\\n\\t            }\\n\\t        }\\n\\t        return sum;\\n\\t    }\\n\\n\\t    function center(node) {\\n\\t        return node.getLayout().y + node.getLayout().dy / 2;\\n\\t    }\\n\\n\\t    function ascendingDepth(a, b) {\\n\\t        return a.getLayout().y - b.getLayout().y;\\n\\t    }\\n\\n\\t    function ascending(a, b) {\\n\\t        return a < b ? -1 : a > b ? 1 : a === b ? 0 : NaN;\\n\\t    }\\n\\n\\t    function getEdgeValue(edge) {\\n\\t        return edge.getValue();\\n\\t    }\\n\\n\\n\\n/***/ },\\n/* 255 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\n\\t    /**\\n\\t     * nest helper used to group by the array.\\n\\t     * can specified the keys and sort the keys.\\n\\t     */\\n\\t    function nest() {\\n\\n\\t        var keysFunction = [];\\n\\t        var sortKeysFunction = [];\\n\\n\\t        /**\\n\\t         * map an Array into the mapObject.\\n\\t         * @param {Array} array\\n\\t         * @param {number} depth\\n\\t         */\\n\\t        function map(array, depth) {\\n\\t            if (depth >= keysFunction.length) {\\n\\t                return array;\\n\\t            }\\n\\t            var i = -1;\\n\\t            var n = array.length;\\n\\t            var keyFunction = keysFunction[depth++];\\n\\t            var mapObject = {};\\n\\t            var valuesByKey = {};\\n\\n\\t            while (++i < n) {\\n\\t                var keyValue = keyFunction(array[i]);\\n\\t                var values = valuesByKey[keyValue];\\n\\n\\t                if (values) {\\n\\t                    values.push(array[i]);\\n\\t                }\\n\\t                else {\\n\\t                    valuesByKey[keyValue] = [array[i]];\\n\\t                }\\n\\t            }\\n\\n\\t            zrUtil.each(valuesByKey, function (value, key) {\\n\\t                mapObject[key] = map(value, depth);\\n\\t            });\\n\\n\\t            return mapObject;\\n\\t        }\\n\\n\\t        /**\\n\\t         * transform the Map Object to multidimensional Array\\n\\t         * @param {Object} map\\n\\t         * @param {number} depth\\n\\t         */\\n\\t        function entriesMap(mapObject, depth) {\\n\\t            if (depth >= keysFunction.length) {\\n\\t                return mapObject;\\n\\t            }\\n\\t            var array = [];\\n\\t            var sortKeyFunction = sortKeysFunction[depth++];\\n\\n\\t            zrUtil.each(mapObject, function (value, key) {\\n\\t                array.push({\\n\\t                    key: key, values: entriesMap(value, depth)\\n\\t                });\\n\\t            });\\n\\n\\t            if (sortKeyFunction) {\\n\\t                return array.sort(function (a, b) {\\n\\t                    return sortKeyFunction(a.key, b.key);\\n\\t                });\\n\\t            }\\n\\t            else {\\n\\t                return array;\\n\\t            }\\n\\t        }\\n\\n\\t        return {\\n\\t            /**\\n\\t             * specified the key to groupby the arrays.\\n\\t             * users can specified one more keys.\\n\\t             * @param {Function} d\\n\\t             */\\n\\t            key: function (d) {\\n\\t                keysFunction.push(d);\\n\\t                return this;\\n\\t            },\\n\\n\\t            /**\\n\\t             * specified the comparator to sort the keys\\n\\t             * @param {Function} order\\n\\t             */\\n\\t            sortKeys: function (order) {\\n\\t                sortKeysFunction[keysFunction.length - 1] = order;\\n\\t                return this;\\n\\t            },\\n\\n\\t            /**\\n\\t             * the array to be grouped by.\\n\\t             * @param {Array} array\\n\\t             */\\n\\t            entries: function (array) {\\n\\t                return entriesMap(map(array, 0), 0);\\n\\t            }\\n\\t        };\\n\\t    }\\n\\t    module.exports = nest;\\n\\n\\n/***/ },\\n/* 256 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * @file Visual encoding for sankey view\\n\\t * @author  Deqing Li(annong035@gmail.com)\\n\\t */\\n\\n\\n\\t    var VisualMapping = __webpack_require__(203);\\n\\t    var zrUtil = __webpack_require__(4);\\n\\n\\t    module.exports = function (ecModel, payload) {\\n\\t        ecModel.eachSeriesByType('sankey', function (seriesModel) {\\n\\t            var graph = seriesModel.getGraph();\\n\\t            var nodes = graph.nodes;\\n\\n\\t            nodes.sort(function (a, b) {\\n\\t                return a.getLayout().value - b.getLayout().value;\\n\\t            });\\n\\n\\t            var minValue = nodes[0].getLayout().value;\\n\\t            var maxValue = nodes[nodes.length - 1].getLayout().value;\\n\\n\\t            zrUtil.each(nodes, function (node) {\\n\\t                var mapping = new VisualMapping({\\n\\t                    type: 'color',\\n\\t                    mappingMethod: 'linear',\\n\\t                    dataExtent: [minValue, maxValue],\\n\\t                    visual: seriesModel.get('color')\\n\\t                });\\n\\n\\t                var mapValueToColor = mapping.mapValueToVisual(node.getLayout().value);\\n\\t                node.setVisual('color', mapValueToColor);\\n\\t                // If set itemStyle.normal.color\\n\\t                var itemModel = node.getModel();\\n\\t                var customColor = itemModel.get('itemStyle.normal.color');\\n\\t                if (customColor != null) {\\n\\t                    node.setVisual('color', customColor);\\n\\t                }\\n\\t            });\\n\\n\\t        });\\n\\t    };\\n\\n\\n\\n/***/ },\\n/* 257 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var echarts = __webpack_require__(1);\\n\\n\\t    __webpack_require__(258);\\n\\t    __webpack_require__(261);\\n\\n\\t    echarts.registerVisual(__webpack_require__(262));\\n\\t    echarts.registerLayout(__webpack_require__(263));\\n\\n\\n\\n/***/ },\\n/* 258 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t'use strict';\\n\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var SeriesModel = __webpack_require__(78);\\n\\t    var whiskerBoxCommon = __webpack_require__(259);\\n\\n\\t    var BoxplotSeries = SeriesModel.extend({\\n\\n\\t        type: 'series.boxplot',\\n\\n\\t        dependencies: ['xAxis', 'yAxis', 'grid'],\\n\\n\\t        // TODO\\n\\t        // box width represents group size, so dimension should have 'size'.\\n\\n\\t        /**\\n\\t         * @see <https://en.wikipedia.org/wiki/Box_plot>\\n\\t         * The meanings of 'min' and 'max' depend on user,\\n\\t         * and echarts do not need to know it.\\n\\t         * @readOnly\\n\\t         */\\n\\t        defaultValueDimensions: ['min', 'Q1', 'median', 'Q3', 'max'],\\n\\n\\t        /**\\n\\t         * @type {Array.<string>}\\n\\t         * @readOnly\\n\\t         */\\n\\t        dimensions: null,\\n\\n\\t        /**\\n\\t         * @override\\n\\t         */\\n\\t        defaultOption: {\\n\\t            zlevel: 0,                  // 一级层叠\\n\\t            z: 2,                       // 二级层叠\\n\\t            coordinateSystem: 'cartesian2d',\\n\\t            legendHoverLink: true,\\n\\n\\t            hoverAnimation: true,\\n\\n\\t            // xAxisIndex: 0,\\n\\t            // yAxisIndex: 0,\\n\\n\\t            layout: null,               // 'horizontal' or 'vertical'\\n\\t            boxWidth: [7, 50],       // [min, max] can be percent of band width.\\n\\n\\t            itemStyle: {\\n\\t                normal: {\\n\\t                    color: '#fff',\\n\\t                    borderWidth: 1\\n\\t                },\\n\\t                emphasis: {\\n\\t                    borderWidth: 2,\\n\\t                    shadowBlur: 5,\\n\\t                    shadowOffsetX: 2,\\n\\t                    shadowOffsetY: 2,\\n\\t                    shadowColor: 'rgba(0,0,0,0.4)'\\n\\t                }\\n\\t            },\\n\\n\\t            animationEasing: 'elasticOut',\\n\\t            animationDuration: 800\\n\\t        }\\n\\t    });\\n\\n\\t    zrUtil.mixin(BoxplotSeries, whiskerBoxCommon.seriesModelMixin, true);\\n\\n\\t    module.exports = BoxplotSeries;\\n\\n\\n\\n/***/ },\\n/* 259 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t'use strict';\\n\\n\\n\\t    var List = __webpack_require__(98);\\n\\t    var completeDimensions = __webpack_require__(110);\\n\\t    var WhiskerBoxDraw = __webpack_require__(260);\\n\\t    var zrUtil = __webpack_require__(4);\\n\\n\\t    var seriesModelMixin = {\\n\\n\\t        /**\\n\\t         * @private\\n\\t         * @type {string}\\n\\t         */\\n\\t        _baseAxisDim: null,\\n\\n\\t        /**\\n\\t         * @override\\n\\t         */\\n\\t        getInitialData: function (option, ecModel) {\\n\\t            // When both types of xAxis and yAxis are 'value', layout is\\n\\t            // needed to be specified by user. Otherwise, layout can be\\n\\t            // judged by which axis is category.\\n\\n\\t            var categories;\\n\\n\\t            var xAxisModel = ecModel.getComponent('xAxis', this.get('xAxisIndex'));\\n\\t            var yAxisModel = ecModel.getComponent('yAxis', this.get('yAxisIndex'));\\n\\t            var xAxisType = xAxisModel.get('type');\\n\\t            var yAxisType = yAxisModel.get('type');\\n\\t            var addOrdinal;\\n\\n\\t            // FIXME\\n\\t            // 考虑时间轴\\n\\n\\t            if (xAxisType === 'category') {\\n\\t                option.layout = 'horizontal';\\n\\t                categories = xAxisModel.getCategories();\\n\\t                addOrdinal = true;\\n\\t            }\\n\\t            else if (yAxisType  === 'category') {\\n\\t                option.layout = 'vertical';\\n\\t                categories = yAxisModel.getCategories();\\n\\t                addOrdinal = true;\\n\\t            }\\n\\t            else {\\n\\t                option.layout = option.layout || 'horizontal';\\n\\t            }\\n\\n\\t            var coordDims = ['x', 'y'];\\n\\t            var baseAxisDimIndex = option.layout === 'horizontal' ? 0 : 1;\\n\\t            var baseAxisDim = this._baseAxisDim = coordDims[baseAxisDimIndex];\\n\\t            var otherAxisDim = coordDims[1 - baseAxisDimIndex];\\n\\t            var data = option.data;\\n\\n\\t            addOrdinal && zrUtil.each(data, function (item, index) {\\n\\t                zrUtil.isArray(item) && item.unshift(index);\\n\\t            });\\n\\n\\t            var dimensions = [{\\n\\t                name: baseAxisDim,\\n\\t                otherDims: {\\n\\t                    tooltip: false\\n\\t                },\\n\\t                dimsDef: ['base']\\n\\t            }, {\\n\\t                name: otherAxisDim,\\n\\t                dimsDef: this.defaultValueDimensions.slice()\\n\\t            }];\\n\\n\\t            dimensions = completeDimensions(dimensions, data, {\\n\\t                encodeDef: this.get('encode'),\\n\\t                dimsDef: this.get('dimensions')\\n\\t            });\\n\\n\\t            var list = new List(dimensions, this);\\n\\t            list.initData(data, categories ? categories.slice() : null);\\n\\n\\t            return list;\\n\\t        },\\n\\n\\t        /**\\n\\t         * If horizontal, base axis is x, otherwise y.\\n\\t         * @override\\n\\t         */\\n\\t        getBaseAxis: function () {\\n\\t            var dim = this._baseAxisDim;\\n\\t            return this.ecModel.getComponent(dim + 'Axis', this.get(dim + 'AxisIndex')).axis;\\n\\t        }\\n\\n\\t    };\\n\\n\\t    var viewMixin = {\\n\\n\\t        init: function () {\\n\\t            /**\\n\\t             * Old data.\\n\\t             * @private\\n\\t             * @type {module:echarts/chart/helper/WhiskerBoxDraw}\\n\\t             */\\n\\t            var whiskerBoxDraw = this._whiskerBoxDraw = new WhiskerBoxDraw(\\n\\t                this.getStyleUpdater()\\n\\t            );\\n\\t            this.group.add(whiskerBoxDraw.group);\\n\\t        },\\n\\n\\t        render: function (seriesModel, ecModel, api) {\\n\\t            this._whiskerBoxDraw.updateData(seriesModel.getData());\\n\\t        },\\n\\n\\t        remove: function (ecModel) {\\n\\t            this._whiskerBoxDraw.remove();\\n\\t        }\\n\\t    };\\n\\n\\t    module.exports = {\\n\\t        seriesModelMixin: seriesModelMixin,\\n\\t        viewMixin: viewMixin\\n\\t    };\\n\\n\\n/***/ },\\n/* 260 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * @module echarts/chart/helper/Symbol\\n\\t */\\n\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var graphic = __webpack_require__(18);\\n\\t    var Path = __webpack_require__(20);\\n\\n\\t    var WhiskerPath = Path.extend({\\n\\n\\t        type: 'whiskerInBox',\\n\\n\\t        shape: {},\\n\\n\\t        buildPath: function (ctx, shape) {\\n\\t            for (var i in shape) {\\n\\t                if (shape.hasOwnProperty(i) && i.indexOf('ends') === 0) {\\n\\t                    var pts = shape[i];\\n\\t                    ctx.moveTo(pts[0][0], pts[0][1]);\\n\\t                    ctx.lineTo(pts[1][0], pts[1][1]);\\n\\t                }\\n\\t            }\\n\\t        }\\n\\t    });\\n\\n\\t    /**\\n\\t     * @constructor\\n\\t     * @alias {module:echarts/chart/helper/WhiskerBox}\\n\\t     * @param {module:echarts/data/List} data\\n\\t     * @param {number} idx\\n\\t     * @param {Function} styleUpdater\\n\\t     * @param {boolean} isInit\\n\\t     * @extends {module:zrender/graphic/Group}\\n\\t     */\\n\\t    function WhiskerBox(data, idx, styleUpdater, isInit) {\\n\\t        graphic.Group.call(this);\\n\\n\\t        /**\\n\\t         * @type {number}\\n\\t         * @readOnly\\n\\t         */\\n\\t        this.bodyIndex;\\n\\n\\t        /**\\n\\t         * @type {number}\\n\\t         * @readOnly\\n\\t         */\\n\\t        this.whiskerIndex;\\n\\n\\t        /**\\n\\t         * @type {Function}\\n\\t         */\\n\\t        this.styleUpdater = styleUpdater;\\n\\n\\t        this._createContent(data, idx, isInit);\\n\\n\\t        this.updateData(data, idx, isInit);\\n\\n\\t        /**\\n\\t         * Last series model.\\n\\t         * @type {module:echarts/model/Series}\\n\\t         */\\n\\t        this._seriesModel;\\n\\t    }\\n\\n\\t    var whiskerBoxProto = WhiskerBox.prototype;\\n\\n\\t    whiskerBoxProto._createContent = function (data, idx, isInit) {\\n\\t        var itemLayout = data.getItemLayout(idx);\\n\\t        var constDim = itemLayout.chartLayout === 'horizontal' ? 1 : 0;\\n\\t        var count = 0;\\n\\n\\t        // Whisker element.\\n\\t        this.add(new graphic.Polygon({\\n\\t            shape: {\\n\\t                points: isInit\\n\\t                    ? transInit(itemLayout.bodyEnds, constDim, itemLayout)\\n\\t                    : itemLayout.bodyEnds\\n\\t            },\\n\\t            style: {strokeNoScale: true},\\n\\t            z2: 100\\n\\t        }));\\n\\t        this.bodyIndex = count++;\\n\\n\\t        // Box element.\\n\\t        var whiskerEnds = zrUtil.map(itemLayout.whiskerEnds, function (ends) {\\n\\t            return isInit ? transInit(ends, constDim, itemLayout) : ends;\\n\\t        });\\n\\t        this.add(new WhiskerPath({\\n\\t            shape: makeWhiskerEndsShape(whiskerEnds),\\n\\t            style: {strokeNoScale: true},\\n\\t            z2: 100\\n\\t        }));\\n\\t        this.whiskerIndex = count++;\\n\\t    };\\n\\n\\t    function transInit(points, dim, itemLayout) {\\n\\t        return zrUtil.map(points, function (point) {\\n\\t            point = point.slice();\\n\\t            point[dim] = itemLayout.initBaseline;\\n\\t            return point;\\n\\t        });\\n\\t    }\\n\\n\\t    function makeWhiskerEndsShape(whiskerEnds) {\\n\\t        // zr animation only support 2-dim array.\\n\\t        var shape = {};\\n\\t        zrUtil.each(whiskerEnds, function (ends, i) {\\n\\t            shape['ends' + i] = ends;\\n\\t        });\\n\\t        return shape;\\n\\t    }\\n\\n\\t    /**\\n\\t     * Update symbol properties\\n\\t     * @param  {module:echarts/data/List} data\\n\\t     * @param  {number} idx\\n\\t     */\\n\\t    whiskerBoxProto.updateData = function (data, idx, isInit) {\\n\\t        var seriesModel = this._seriesModel = data.hostModel;\\n\\t        var itemLayout = data.getItemLayout(idx);\\n\\t        var updateMethod = graphic[isInit ? 'initProps' : 'updateProps'];\\n\\t        // this.childAt(this.bodyIndex).stopAnimation(true);\\n\\t        // this.childAt(this.whiskerIndex).stopAnimation(true);\\n\\t        updateMethod(\\n\\t            this.childAt(this.bodyIndex),\\n\\t            {shape: {points: itemLayout.bodyEnds}},\\n\\t            seriesModel, idx\\n\\t        );\\n\\t        updateMethod(\\n\\t            this.childAt(this.whiskerIndex),\\n\\t            {shape: makeWhiskerEndsShape(itemLayout.whiskerEnds)},\\n\\t            seriesModel, idx\\n\\t        );\\n\\n\\t        this.styleUpdater.call(null, this, data, idx);\\n\\t    };\\n\\n\\t    zrUtil.inherits(WhiskerBox, graphic.Group);\\n\\n\\n\\t    /**\\n\\t     * @constructor\\n\\t     * @alias module:echarts/chart/helper/WhiskerBoxDraw\\n\\t     */\\n\\t    function WhiskerBoxDraw(styleUpdater) {\\n\\t        this.group = new graphic.Group();\\n\\t        this.styleUpdater = styleUpdater;\\n\\t    }\\n\\n\\t    var whiskerBoxDrawProto = WhiskerBoxDraw.prototype;\\n\\n\\t    /**\\n\\t     * Update symbols draw by new data\\n\\t     * @param {module:echarts/data/List} data\\n\\t     */\\n\\t    whiskerBoxDrawProto.updateData = function (data) {\\n\\t        var group = this.group;\\n\\t        var oldData = this._data;\\n\\t        var styleUpdater = this.styleUpdater;\\n\\n\\t        data.diff(oldData)\\n\\t            .add(function (newIdx) {\\n\\t                if (data.hasValue(newIdx)) {\\n\\t                    var symbolEl = new WhiskerBox(data, newIdx, styleUpdater, true);\\n\\t                    data.setItemGraphicEl(newIdx, symbolEl);\\n\\t                    group.add(symbolEl);\\n\\t                }\\n\\t            })\\n\\t            .update(function (newIdx, oldIdx) {\\n\\t                var symbolEl = oldData.getItemGraphicEl(oldIdx);\\n\\n\\t                // Empty data\\n\\t                if (!data.hasValue(newIdx)) {\\n\\t                    group.remove(symbolEl);\\n\\t                    return;\\n\\t                }\\n\\n\\t                if (!symbolEl) {\\n\\t                    symbolEl = new WhiskerBox(data, newIdx, styleUpdater);\\n\\t                }\\n\\t                else {\\n\\t                    symbolEl.updateData(data, newIdx);\\n\\t                }\\n\\n\\t                // Add back\\n\\t                group.add(symbolEl);\\n\\n\\t                data.setItemGraphicEl(newIdx, symbolEl);\\n\\t            })\\n\\t            .remove(function (oldIdx) {\\n\\t                var el = oldData.getItemGraphicEl(oldIdx);\\n\\t                el && group.remove(el);\\n\\t            })\\n\\t            .execute();\\n\\n\\t        this._data = data;\\n\\t    };\\n\\n\\t    /**\\n\\t     * Remove symbols.\\n\\t     * @param {module:echarts/data/List} data\\n\\t     */\\n\\t    whiskerBoxDrawProto.remove = function () {\\n\\t        var group = this.group;\\n\\t        var data = this._data;\\n\\t        this._data = null;\\n\\t        data && data.eachItemGraphicEl(function (el) {\\n\\t            el && group.remove(el);\\n\\t        });\\n\\t    };\\n\\n\\t    module.exports = WhiskerBoxDraw;\\n\\n\\n/***/ },\\n/* 261 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t'use strict';\\n\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var ChartView = __webpack_require__(80);\\n\\t    var graphic = __webpack_require__(18);\\n\\t    var whiskerBoxCommon = __webpack_require__(259);\\n\\n\\t    var BoxplotView = ChartView.extend({\\n\\n\\t        type: 'boxplot',\\n\\n\\t        getStyleUpdater: function () {\\n\\t            return updateStyle;\\n\\t        },\\n\\n\\t        dispose: zrUtil.noop\\n\\t    });\\n\\n\\t    zrUtil.mixin(BoxplotView, whiskerBoxCommon.viewMixin, true);\\n\\n\\t    // Update common properties\\n\\t    var normalStyleAccessPath = ['itemStyle', 'normal'];\\n\\t    var emphasisStyleAccessPath = ['itemStyle', 'emphasis'];\\n\\n\\t    function updateStyle(itemGroup, data, idx) {\\n\\t        var itemModel = data.getItemModel(idx);\\n\\t        var normalItemStyleModel = itemModel.getModel(normalStyleAccessPath);\\n\\t        var borderColor = data.getItemVisual(idx, 'color');\\n\\n\\t        // Exclude borderColor.\\n\\t        var itemStyle = normalItemStyleModel.getItemStyle(['borderColor']);\\n\\n\\t        var whiskerEl = itemGroup.childAt(itemGroup.whiskerIndex);\\n\\t        whiskerEl.style.set(itemStyle);\\n\\t        whiskerEl.style.stroke = borderColor;\\n\\t        whiskerEl.dirty();\\n\\n\\t        var bodyEl = itemGroup.childAt(itemGroup.bodyIndex);\\n\\t        bodyEl.style.set(itemStyle);\\n\\t        bodyEl.style.stroke = borderColor;\\n\\t        bodyEl.dirty();\\n\\n\\t        var hoverStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\\n\\t        graphic.setHoverStyle(itemGroup, hoverStyle);\\n\\t    }\\n\\n\\t    module.exports = BoxplotView;\\n\\n\\n\\n/***/ },\\n/* 262 */\\n/***/ function(module, exports) {\\n\\n\\t\\n\\n\\t    var borderColorQuery = ['itemStyle', 'normal', 'borderColor'];\\n\\n\\t    module.exports = function (ecModel, api) {\\n\\n\\t        var globalColors = ecModel.get('color');\\n\\n\\t        ecModel.eachRawSeriesByType('boxplot', function (seriesModel) {\\n\\n\\t            var defaulColor = globalColors[seriesModel.seriesIndex % globalColors.length];\\n\\t            var data = seriesModel.getData();\\n\\n\\t            data.setVisual({\\n\\t                legendSymbol: 'roundRect',\\n\\t                // Use name 'color' but not 'borderColor' for legend usage and\\n\\t                // visual coding from other component like dataRange.\\n\\t                color: seriesModel.get(borderColorQuery) || defaulColor\\n\\t            });\\n\\n\\t            // Only visible series has each data be visual encoded\\n\\t            if (!ecModel.isSeriesFiltered(seriesModel)) {\\n\\t                data.each(function (idx) {\\n\\t                    var itemModel = data.getItemModel(idx);\\n\\t                    data.setItemVisual(\\n\\t                        idx,\\n\\t                        {color: itemModel.get(borderColorQuery, true)}\\n\\t                    );\\n\\t                });\\n\\t            }\\n\\t        });\\n\\n\\t    };\\n\\n\\n/***/ },\\n/* 263 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var numberUtil = __webpack_require__(7);\\n\\t    var parsePercent = numberUtil.parsePercent;\\n\\t    var each = zrUtil.each;\\n\\n\\t    module.exports = function (ecModel) {\\n\\n\\t        var groupResult = groupSeriesByAxis(ecModel);\\n\\n\\t        each(groupResult, function (groupItem) {\\n\\t            var seriesModels = groupItem.seriesModels;\\n\\n\\t            if (!seriesModels.length) {\\n\\t                return;\\n\\t            }\\n\\n\\t            calculateBase(groupItem);\\n\\n\\t            each(seriesModels, function (seriesModel, idx) {\\n\\t                layoutSingleSeries(\\n\\t                    seriesModel,\\n\\t                    groupItem.boxOffsetList[idx],\\n\\t                    groupItem.boxWidthList[idx]\\n\\t                );\\n\\t            });\\n\\t        });\\n\\t    };\\n\\n\\t    /**\\n\\t     * Group series by axis.\\n\\t     */\\n\\t    function groupSeriesByAxis(ecModel) {\\n\\t        var result = [];\\n\\t        var axisList = [];\\n\\n\\t        ecModel.eachSeriesByType('boxplot', function (seriesModel) {\\n\\t            var baseAxis = seriesModel.getBaseAxis();\\n\\t            var idx = zrUtil.indexOf(axisList, baseAxis);\\n\\n\\t            if (idx < 0) {\\n\\t                idx = axisList.length;\\n\\t                axisList[idx] = baseAxis;\\n\\t                result[idx] = {axis: baseAxis, seriesModels: []};\\n\\t            }\\n\\n\\t            result[idx].seriesModels.push(seriesModel);\\n\\t        });\\n\\n\\t        return result;\\n\\t    }\\n\\n\\t    /**\\n\\t     * Calculate offset and box width for each series.\\n\\t     */\\n\\t    function calculateBase(groupItem) {\\n\\t        var extent;\\n\\t        var baseAxis = groupItem.axis;\\n\\t        var seriesModels = groupItem.seriesModels;\\n\\t        var seriesCount = seriesModels.length;\\n\\n\\t        var boxWidthList = groupItem.boxWidthList = [];\\n\\t        var boxOffsetList = groupItem.boxOffsetList = [];\\n\\t        var boundList = [];\\n\\n\\t        var bandWidth;\\n\\t        if (baseAxis.type === 'category') {\\n\\t            bandWidth = baseAxis.getBandWidth();\\n\\t        }\\n\\t        else {\\n\\t            var maxDataCount = 0;\\n\\t            each(seriesModels, function (seriesModel) {\\n\\t                maxDataCount = Math.max(maxDataCount, seriesModel.getData().count());\\n\\t            });\\n\\t            extent = baseAxis.getExtent(),\\n\\t            Math.abs(extent[1] - extent[0]) / maxDataCount;\\n\\t        }\\n\\n\\t        each(seriesModels, function (seriesModel) {\\n\\t            var boxWidthBound = seriesModel.get('boxWidth');\\n\\t            if (!zrUtil.isArray(boxWidthBound)) {\\n\\t                boxWidthBound = [boxWidthBound, boxWidthBound];\\n\\t            }\\n\\t            boundList.push([\\n\\t                parsePercent(boxWidthBound[0], bandWidth) || 0,\\n\\t                parsePercent(boxWidthBound[1], bandWidth) || 0\\n\\t            ]);\\n\\t        });\\n\\n\\t        var availableWidth = bandWidth * 0.8 - 2;\\n\\t        var boxGap = availableWidth / seriesCount * 0.3;\\n\\t        var boxWidth = (availableWidth - boxGap * (seriesCount - 1)) / seriesCount;\\n\\t        var base = boxWidth / 2 - availableWidth / 2;\\n\\n\\t        each(seriesModels, function (seriesModel, idx) {\\n\\t            boxOffsetList.push(base);\\n\\t            base += boxGap + boxWidth;\\n\\n\\t            boxWidthList.push(\\n\\t                Math.min(Math.max(boxWidth, boundList[idx][0]), boundList[idx][1])\\n\\t            );\\n\\t        });\\n\\t    }\\n\\n\\t    /**\\n\\t     * Calculate points location for each series.\\n\\t     */\\n\\t    function layoutSingleSeries(seriesModel, offset, boxWidth) {\\n\\t        var coordSys = seriesModel.coordinateSystem;\\n\\t        var data = seriesModel.getData();\\n\\t        var halfWidth = boxWidth / 2;\\n\\t        var chartLayout = seriesModel.get('layout');\\n\\t        var variableDim = chartLayout === 'horizontal' ? 0 : 1;\\n\\t        var constDim = 1 - variableDim;\\n\\t        var coordDims = ['x', 'y'];\\n\\t        var vDims = [];\\n\\t        var cDim;\\n\\n\\t        zrUtil.each(data.dimensions, function (dimName) {\\n\\t            var dimInfo = data.getDimensionInfo(dimName);\\n\\t            var coordDim = dimInfo.coordDim;\\n\\t            if (coordDim === coordDims[constDim]) {\\n\\t                vDims.push(dimName);\\n\\t            }\\n\\t            else if (coordDim === coordDims[variableDim]) {\\n\\t                cDim = dimName;\\n\\t            }\\n\\t        });\\n\\n\\t        if (cDim == null || vDims.length < 5) {\\n\\t            return;\\n\\t        }\\n\\n\\t        data.each([cDim].concat(vDims), function () {\\n\\t            var args = arguments;\\n\\t            var axisDimVal = args[0];\\n\\t            var idx = args[vDims.length + 1];\\n\\n\\t            var median = getPoint(args[3]);\\n\\t            var end1 = getPoint(args[1]);\\n\\t            var end5 = getPoint(args[5]);\\n\\t            var whiskerEnds = [\\n\\t                [end1, getPoint(args[2])],\\n\\t                [end5, getPoint(args[4])]\\n\\t            ];\\n\\t            layEndLine(end1);\\n\\t            layEndLine(end5);\\n\\t            layEndLine(median);\\n\\n\\t            var bodyEnds = [];\\n\\t            addBodyEnd(whiskerEnds[0][1], 0);\\n\\t            addBodyEnd(whiskerEnds[1][1], 1);\\n\\n\\t            data.setItemLayout(idx, {\\n\\t                chartLayout: chartLayout,\\n\\t                initBaseline: median[constDim],\\n\\t                median: median,\\n\\t                bodyEnds: bodyEnds,\\n\\t                whiskerEnds: whiskerEnds\\n\\t            });\\n\\n\\t            function getPoint(val) {\\n\\t                var p = [];\\n\\t                p[variableDim] = axisDimVal;\\n\\t                p[constDim] = val;\\n\\t                var point;\\n\\t                if (isNaN(axisDimVal) || isNaN(val)) {\\n\\t                    point = [NaN, NaN];\\n\\t                }\\n\\t                else {\\n\\t                    point = coordSys.dataToPoint(p);\\n\\t                    point[variableDim] += offset;\\n\\t                }\\n\\t                return point;\\n\\t            }\\n\\n\\t            function addBodyEnd(point, start) {\\n\\t                var point1 = point.slice();\\n\\t                var point2 = point.slice();\\n\\t                point1[variableDim] += halfWidth;\\n\\t                point2[variableDim] -= halfWidth;\\n\\t                start\\n\\t                    ? bodyEnds.push(point1, point2)\\n\\t                    : bodyEnds.push(point2, point1);\\n\\t            }\\n\\n\\t            function layEndLine(endCenter) {\\n\\t                var line = [endCenter.slice(), endCenter.slice()];\\n\\t                line[0][variableDim] -= halfWidth;\\n\\t                line[1][variableDim] += halfWidth;\\n\\t                whiskerEnds.push(line);\\n\\t            }\\n\\t        });\\n\\t    }\\n\\n\\n\\n/***/ },\\n/* 264 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var echarts = __webpack_require__(1);\\n\\n\\t    __webpack_require__(265);\\n\\t    __webpack_require__(266);\\n\\n\\t    echarts.registerPreprocessor(\\n\\t        __webpack_require__(267)\\n\\t    );\\n\\n\\t    echarts.registerVisual(__webpack_require__(268));\\n\\t    echarts.registerLayout(__webpack_require__(269));\\n\\n\\n\\n/***/ },\\n/* 265 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t'use strict';\\n\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var SeriesModel = __webpack_require__(78);\\n\\t    var whiskerBoxCommon = __webpack_require__(259);\\n\\n\\t    var CandlestickSeries = SeriesModel.extend({\\n\\n\\t        type: 'series.candlestick',\\n\\n\\t        dependencies: ['xAxis', 'yAxis', 'grid'],\\n\\n\\t        /**\\n\\t         * @readOnly\\n\\t         */\\n\\t        defaultValueDimensions: ['open', 'close', 'lowest', 'highest'],\\n\\n\\t        /**\\n\\t         * @type {Array.<string>}\\n\\t         * @readOnly\\n\\t         */\\n\\t        dimensions: null,\\n\\n\\t        /**\\n\\t         * @override\\n\\t         */\\n\\t        defaultOption: {\\n\\t            zlevel: 0,                  // 一级层叠\\n\\t            z: 2,                       // 二级层叠\\n\\t            coordinateSystem: 'cartesian2d',\\n\\t            legendHoverLink: true,\\n\\n\\t            hoverAnimation: true,\\n\\n\\t            // xAxisIndex: 0,\\n\\t            // yAxisIndex: 0,\\n\\n\\t            layout: null, // 'horizontal' or 'vertical'\\n\\n\\t            itemStyle: {\\n\\t                normal: {\\n\\t                    color: '#c23531', // 阳线 positive\\n\\t                    color0: '#314656', // 阴线 negative     '#c23531', '#314656'\\n\\t                    borderWidth: 1,\\n\\t                    // FIXME\\n\\t                    // ec2中使用的是lineStyle.color 和 lineStyle.color0\\n\\t                    borderColor: '#c23531',\\n\\t                    borderColor0: '#314656'\\n\\t                },\\n\\t                emphasis: {\\n\\t                    borderWidth: 2\\n\\t                }\\n\\t            },\\n\\n\\t            barMaxWidth: null,\\n\\t            barMinWidth: null,\\n\\t            barWidth: null,\\n\\n\\t            animationUpdate: false,\\n\\t            animationEasing: 'linear',\\n\\t            animationDuration: 300\\n\\t        },\\n\\n\\t        /**\\n\\t         * Get dimension for shadow in dataZoom\\n\\t         * @return {string} dimension name\\n\\t         */\\n\\t        getShadowDim: function () {\\n\\t            return 'open';\\n\\t        },\\n\\n\\t        brushSelector: function (dataIndex, data, selectors) {\\n\\t            var itemLayout = data.getItemLayout(dataIndex);\\n\\t            return selectors.rect(itemLayout.brushRect);\\n\\t        }\\n\\n\\t    });\\n\\n\\t    zrUtil.mixin(CandlestickSeries, whiskerBoxCommon.seriesModelMixin, true);\\n\\n\\t    module.exports = CandlestickSeries;\\n\\n\\n\\n/***/ },\\n/* 266 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t'use strict';\\n\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var ChartView = __webpack_require__(80);\\n\\t    var graphic = __webpack_require__(18);\\n\\t    var whiskerBoxCommon = __webpack_require__(259);\\n\\n\\t    var CandlestickView = ChartView.extend({\\n\\n\\t        type: 'candlestick',\\n\\n\\t        getStyleUpdater: function () {\\n\\t            return updateStyle;\\n\\t        },\\n\\n\\t        dispose: zrUtil.noop\\n\\t    });\\n\\n\\t    zrUtil.mixin(CandlestickView, whiskerBoxCommon.viewMixin, true);\\n\\n\\t    // Update common properties\\n\\t    var normalStyleAccessPath = ['itemStyle', 'normal'];\\n\\t    var emphasisStyleAccessPath = ['itemStyle', 'emphasis'];\\n\\n\\t    function updateStyle(itemGroup, data, idx) {\\n\\t        var itemModel = data.getItemModel(idx);\\n\\t        var normalItemStyleModel = itemModel.getModel(normalStyleAccessPath);\\n\\t        var color = data.getItemVisual(idx, 'color');\\n\\t        var borderColor = data.getItemVisual(idx, 'borderColor') || color;\\n\\n\\t        // Color must be excluded.\\n\\t        // Because symbol provide setColor individually to set fill and stroke\\n\\t        var itemStyle = normalItemStyleModel.getItemStyle(\\n\\t            ['color', 'color0', 'borderColor', 'borderColor0']\\n\\t        );\\n\\n\\t        var whiskerEl = itemGroup.childAt(itemGroup.whiskerIndex);\\n\\t        whiskerEl.useStyle(itemStyle);\\n\\t        whiskerEl.style.stroke = borderColor;\\n\\n\\t        var bodyEl = itemGroup.childAt(itemGroup.bodyIndex);\\n\\t        bodyEl.useStyle(itemStyle);\\n\\t        bodyEl.style.fill = color;\\n\\t        bodyEl.style.stroke = borderColor;\\n\\n\\t        var hoverStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\\n\\t        graphic.setHoverStyle(itemGroup, hoverStyle);\\n\\t    }\\n\\n\\n\\t    module.exports = CandlestickView;\\n\\n\\n\\n/***/ },\\n/* 267 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\n\\t    module.exports = function (option) {\\n\\t        if (!option || !zrUtil.isArray(option.series)) {\\n\\t            return;\\n\\t        }\\n\\n\\t        // Translate 'k' to 'candlestick'.\\n\\t        zrUtil.each(option.series, function (seriesItem) {\\n\\t            if (zrUtil.isObject(seriesItem) && seriesItem.type === 'k') {\\n\\t                seriesItem.type = 'candlestick';\\n\\t            }\\n\\t        });\\n\\t    };\\n\\n\\n\\n/***/ },\\n/* 268 */\\n/***/ function(module, exports) {\\n\\n\\t\\n\\n\\t    var positiveBorderColorQuery = ['itemStyle', 'normal', 'borderColor'];\\n\\t    var negativeBorderColorQuery = ['itemStyle', 'normal', 'borderColor0'];\\n\\t    var positiveColorQuery = ['itemStyle', 'normal', 'color'];\\n\\t    var negativeColorQuery = ['itemStyle', 'normal', 'color0'];\\n\\n\\t    module.exports = function (ecModel, api) {\\n\\n\\t        ecModel.eachRawSeriesByType('candlestick', function (seriesModel) {\\n\\n\\t            var data = seriesModel.getData();\\n\\n\\t            data.setVisual({\\n\\t                legendSymbol: 'roundRect'\\n\\t            });\\n\\n\\t            // Only visible series has each data be visual encoded\\n\\t            if (!ecModel.isSeriesFiltered(seriesModel)) {\\n\\t                data.each(function (idx) {\\n\\t                    var itemModel = data.getItemModel(idx);\\n\\t                    var sign = data.getItemLayout(idx).sign;\\n\\n\\t                    data.setItemVisual(\\n\\t                        idx,\\n\\t                        {\\n\\t                            color: itemModel.get(\\n\\t                                sign > 0 ? positiveColorQuery : negativeColorQuery\\n\\t                            ),\\n\\t                            borderColor: itemModel.get(\\n\\t                                sign > 0 ? positiveBorderColorQuery : negativeBorderColorQuery\\n\\t                            )\\n\\t                        }\\n\\t                    );\\n\\t                });\\n\\t            }\\n\\t        });\\n\\n\\t    };\\n\\n\\n/***/ },\\n/* 269 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var retrieve = __webpack_require__(4).retrieve;\\n\\t    var parsePercent = __webpack_require__(7).parsePercent;\\n\\n\\t    module.exports = function (ecModel) {\\n\\n\\t        ecModel.eachSeriesByType('candlestick', function (seriesModel) {\\n\\n\\t            var coordSys = seriesModel.coordinateSystem;\\n\\t            var data = seriesModel.getData();\\n\\t            var candleWidth = calculateCandleWidth(seriesModel, data);\\n\\t            var chartLayout = seriesModel.get('layout');\\n\\t            var variableDim = chartLayout === 'horizontal' ? 0 : 1;\\n\\t            var constDim = 1 - variableDim;\\n\\t            var coordDims = ['x', 'y'];\\n\\t            var vDims = [];\\n\\t            var cDim;\\n\\n\\t            zrUtil.each(data.dimensions, function (dimName) {\\n\\t                var dimInfo = data.getDimensionInfo(dimName);\\n\\t                var coordDim = dimInfo.coordDim;\\n\\t                if (coordDim === coordDims[constDim]) {\\n\\t                    vDims.push(dimName);\\n\\t                }\\n\\t                else if (coordDim === coordDims[variableDim]) {\\n\\t                    cDim = dimName;\\n\\t                }\\n\\t            });\\n\\n\\t            if (cDim == null || vDims.length < 4) {\\n\\t                return;\\n\\t            }\\n\\n\\t            data.each([cDim].concat(vDims), function () {\\n\\t                var args = arguments;\\n\\t                var axisDimVal = args[0];\\n\\t                var idx = args[vDims.length + 1];\\n\\n\\t                var openVal = args[1];\\n\\t                var closeVal = args[2];\\n\\t                var lowestVal = args[3];\\n\\t                var highestVal = args[4];\\n\\n\\t                var ocLow = Math.min(openVal, closeVal);\\n\\t                var ocHigh = Math.max(openVal, closeVal);\\n\\n\\t                var ocLowPoint = getPoint(ocLow);\\n\\t                var ocHighPoint = getPoint(ocHigh);\\n\\t                var lowestPoint = getPoint(lowestVal);\\n\\t                var highestPoint = getPoint(highestVal);\\n\\n\\t                var whiskerEnds = [\\n\\t                    [highestPoint, ocHighPoint],\\n\\t                    [lowestPoint, ocLowPoint]\\n\\t                ];\\n\\n\\t                var bodyEnds = [];\\n\\t                addBodyEnd(ocHighPoint, 0);\\n\\t                addBodyEnd(ocLowPoint, 1);\\n\\n\\t                data.setItemLayout(idx, {\\n\\t                    chartLayout: chartLayout,\\n\\t                    sign: openVal > closeVal ? -1 : openVal < closeVal ? 1 : 0,\\n\\t                    initBaseline: openVal > closeVal\\n\\t                        ? ocHighPoint[constDim] : ocLowPoint[constDim], // open point.\\n\\t                    bodyEnds: bodyEnds,\\n\\t                    whiskerEnds: whiskerEnds,\\n\\t                    brushRect: makeBrushRect()\\n\\t                });\\n\\n\\t                function getPoint(val) {\\n\\t                    var p = [];\\n\\t                    p[variableDim] = axisDimVal;\\n\\t                    p[constDim] = val;\\n\\t                    return (isNaN(axisDimVal) || isNaN(val))\\n\\t                        ? [NaN, NaN]\\n\\t                        : coordSys.dataToPoint(p);\\n\\t                }\\n\\n\\t                function addBodyEnd(point, start) {\\n\\t                    var point1 = point.slice();\\n\\t                    var point2 = point.slice();\\n\\t                    point1[variableDim] += candleWidth / 2;\\n\\t                    point2[variableDim] -= candleWidth / 2;\\n\\t                    start\\n\\t                        ? bodyEnds.push(point1, point2)\\n\\t                        : bodyEnds.push(point2, point1);\\n\\t                }\\n\\n\\t                function makeBrushRect() {\\n\\t                    var pmin = getPoint(Math.min(openVal, closeVal, lowestVal, highestVal));\\n\\t                    var pmax = getPoint(Math.max(openVal, closeVal, lowestVal, highestVal));\\n\\n\\t                    pmin[variableDim] -= candleWidth / 2;\\n\\t                    pmax[variableDim] -= candleWidth / 2;\\n\\n\\t                    return {\\n\\t                        x: pmin[0],\\n\\t                        y: pmin[1],\\n\\t                        width: constDim ? candleWidth : pmax[0] - pmin[0],\\n\\t                        height: constDim ? pmax[1] - pmin[1] : candleWidth\\n\\t                    };\\n\\t                }\\n\\n\\t            }, true);\\n\\t        });\\n\\t    };\\n\\n\\t    function calculateCandleWidth(seriesModel, data) {\\n\\t        var baseAxis = seriesModel.getBaseAxis();\\n\\t        var extent;\\n\\n\\t        var bandWidth = baseAxis.type === 'category'\\n\\t            ? baseAxis.getBandWidth()\\n\\t            : (\\n\\t                extent = baseAxis.getExtent(),\\n\\t                Math.abs(extent[1] - extent[0]) / data.count()\\n\\t            );\\n\\n\\t        var barMaxWidth = parsePercent(\\n\\t            retrieve(seriesModel.get('barMaxWidth'), bandWidth),\\n\\t            bandWidth\\n\\t        );\\n\\t        var barMinWidth = parsePercent(\\n\\t            retrieve(seriesModel.get('barMinWidth'), 1),\\n\\t            bandWidth\\n\\t        );\\n\\t        var barWidth = seriesModel.get('barWidth');\\n\\t        return barWidth != null\\n\\t            ? parsePercent(barWidth, bandWidth)\\n\\t            // Put max outer to ensure bar visible in spite of overlap.\\n\\t            : Math.max(Math.min(bandWidth / 2, barMaxWidth), barMinWidth);\\n\\t    }\\n\\n\\n\\n/***/ },\\n/* 270 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var echarts = __webpack_require__(1);\\n\\n\\t    __webpack_require__(271);\\n\\t    __webpack_require__(272);\\n\\n\\t    echarts.registerVisual(zrUtil.curry(\\n\\t        __webpack_require__(121), 'effectScatter', 'circle', null\\n\\t    ));\\n\\t    echarts.registerLayout(zrUtil.curry(\\n\\t        __webpack_require__(122), 'effectScatter'\\n\\t    ));\\n\\n\\n/***/ },\\n/* 271 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t'use strict';\\n\\n\\n\\t    var createListFromArray = __webpack_require__(109);\\n\\t    var SeriesModel = __webpack_require__(78);\\n\\n\\t    module.exports = SeriesModel.extend({\\n\\n\\t        type: 'series.effectScatter',\\n\\n\\t        dependencies: ['grid', 'polar'],\\n\\n\\t        getInitialData: function (option, ecModel) {\\n\\t            var list = createListFromArray(option.data, this, ecModel);\\n\\t            return list;\\n\\t        },\\n\\n\\t        brushSelector: 'point',\\n\\n\\t        defaultOption: {\\n\\t            coordinateSystem: 'cartesian2d',\\n\\t            zlevel: 0,\\n\\t            z: 2,\\n\\t            legendHoverLink: true,\\n\\n\\t            effectType: 'ripple',\\n\\n\\t            progressive: 0,\\n\\n\\t            // When to show the effect, option: 'render'|'emphasis'\\n\\t            showEffectOn: 'render',\\n\\n\\t            // Ripple effect config\\n\\t            rippleEffect: {\\n\\t                period: 4,\\n\\t                // Scale of ripple\\n\\t                scale: 2.5,\\n\\t                // Brush type can be fill or stroke\\n\\t                brushType: 'fill'\\n\\t            },\\n\\n\\t            // Cartesian coordinate system\\n\\t            // xAxisIndex: 0,\\n\\t            // yAxisIndex: 0,\\n\\n\\t            // Polar coordinate system\\n\\t            // polarIndex: 0,\\n\\n\\t            // Geo coordinate system\\n\\t            // geoIndex: 0,\\n\\n\\t            // symbol: null,        // 图形类型\\n\\t            symbolSize: 10          // 图形大小，半宽（半径）参数，当图形为方向或菱形则总宽度为symbolSize * 2\\n\\t            // symbolRotate: null,  // 图形旋转控制\\n\\n\\t            // large: false,\\n\\t            // Available when large is true\\n\\t            // largeThreshold: 2000,\\n\\n\\t            // itemStyle: {\\n\\t            //     normal: {\\n\\t            //         opacity: 1\\n\\t            //     }\\n\\t            // }\\n\\t        }\\n\\n\\t    });\\n\\n\\n/***/ },\\n/* 272 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var SymbolDraw = __webpack_require__(116);\\n\\t    var EffectSymbol = __webpack_require__(273);\\n\\n\\t    __webpack_require__(1).extendChartView({\\n\\n\\t        type: 'effectScatter',\\n\\n\\t        init: function () {\\n\\t            this._symbolDraw = new SymbolDraw(EffectSymbol);\\n\\t        },\\n\\n\\t        render: function (seriesModel, ecModel, api) {\\n\\t            var data = seriesModel.getData();\\n\\t            var effectSymbolDraw = this._symbolDraw;\\n\\t            effectSymbolDraw.updateData(data);\\n\\t            this.group.add(effectSymbolDraw.group);\\n\\t        },\\n\\n\\t        updateLayout: function () {\\n\\t            this._symbolDraw.updateLayout();\\n\\t        },\\n\\n\\t        remove: function (ecModel, api) {\\n\\t            this._symbolDraw && this._symbolDraw.remove(api);\\n\\t        },\\n\\n\\t        dispose: function () {}\\n\\t    });\\n\\n\\n/***/ },\\n/* 273 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * Symbol with ripple effect\\n\\t * @module echarts/chart/helper/EffectSymbol\\n\\t */\\n\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var symbolUtil = __webpack_require__(111);\\n\\t    var graphic = __webpack_require__(18);\\n\\t    var numberUtil = __webpack_require__(7);\\n\\t    var Symbol = __webpack_require__(117);\\n\\t    var Group = graphic.Group;\\n\\n\\t    var EFFECT_RIPPLE_NUMBER = 3;\\n\\n\\t    function normalizeSymbolSize(symbolSize) {\\n\\t        if (!zrUtil.isArray(symbolSize)) {\\n\\t            symbolSize = [+symbolSize, +symbolSize];\\n\\t        }\\n\\t        return symbolSize;\\n\\t    }\\n\\n\\t    function updateRipplePath(rippleGroup, effectCfg) {\\n\\t        rippleGroup.eachChild(function (ripplePath) {\\n\\t            ripplePath.attr({\\n\\t                z: effectCfg.z,\\n\\t                zlevel: effectCfg.zlevel,\\n\\t                style: {\\n\\t                    stroke: effectCfg.brushType === 'stroke' ? effectCfg.color : null,\\n\\t                    fill: effectCfg.brushType === 'fill' ? effectCfg.color : null\\n\\t                }\\n\\t            });\\n\\t        });\\n\\t    }\\n\\t    /**\\n\\t     * @constructor\\n\\t     * @param {module:echarts/data/List} data\\n\\t     * @param {number} idx\\n\\t     * @extends {module:zrender/graphic/Group}\\n\\t     */\\n\\t    function EffectSymbol(data, idx) {\\n\\t        Group.call(this);\\n\\n\\t        var symbol = new Symbol(data, idx);\\n\\t        var rippleGroup = new Group();\\n\\t        this.add(symbol);\\n\\t        this.add(rippleGroup);\\n\\n\\t        rippleGroup.beforeUpdate = function () {\\n\\t            this.attr(symbol.getScale());\\n\\t        };\\n\\t        this.updateData(data, idx);\\n\\t    }\\n\\n\\t    var effectSymbolProto = EffectSymbol.prototype;\\n\\n\\t    effectSymbolProto.stopEffectAnimation = function () {\\n\\t        this.childAt(1).removeAll();\\n\\t    };\\n\\n\\t    effectSymbolProto.startEffectAnimation = function (effectCfg) {\\n\\t        var symbolType = effectCfg.symbolType;\\n\\t        var color = effectCfg.color;\\n\\t        var rippleGroup = this.childAt(1);\\n\\n\\t        for (var i = 0; i < EFFECT_RIPPLE_NUMBER; i++) {\\n\\t            // var ripplePath = symbolUtil.createSymbol(\\n\\t            //     symbolType, -0.5, -0.5, 1, 1, color\\n\\t            // );\\n\\t            // If width/height are set too small (e.g., set to 1) on ios10\\n\\t            // and macOS Sierra, a circle stroke become a rect, no matter what\\n\\t            // the scale is set. So we set width/height as 2. See #4136.\\n\\t            var ripplePath = symbolUtil.createSymbol(\\n\\t                symbolType, -1, -1, 2, 2, color\\n\\t            );\\n\\t            ripplePath.attr({\\n\\t                style: {\\n\\t                    strokeNoScale: true\\n\\t                },\\n\\t                z2: 99,\\n\\t                silent: true,\\n\\t                scale: [0.5, 0.5]\\n\\t            });\\n\\n\\t            var delay = -i / EFFECT_RIPPLE_NUMBER * effectCfg.period + effectCfg.effectOffset;\\n\\t            // TODO Configurable effectCfg.period\\n\\t            ripplePath.animate('', true)\\n\\t                .when(effectCfg.period, {\\n\\t                    scale: [effectCfg.rippleScale / 2, effectCfg.rippleScale / 2]\\n\\t                })\\n\\t                .delay(delay)\\n\\t                .start();\\n\\t            ripplePath.animateStyle(true)\\n\\t                .when(effectCfg.period, {\\n\\t                    opacity: 0\\n\\t                })\\n\\t                .delay(delay)\\n\\t                .start();\\n\\n\\t            rippleGroup.add(ripplePath);\\n\\t        }\\n\\n\\t        updateRipplePath(rippleGroup, effectCfg);\\n\\t    };\\n\\n\\t    /**\\n\\t     * Update effect symbol\\n\\t     */\\n\\t    effectSymbolProto.updateEffectAnimation = function (effectCfg) {\\n\\t        var oldEffectCfg = this._effectCfg;\\n\\t        var rippleGroup = this.childAt(1);\\n\\n\\t        // Must reinitialize effect if following configuration changed\\n\\t        var DIFFICULT_PROPS = ['symbolType', 'period', 'rippleScale'];\\n\\t        for (var i = 0; i < DIFFICULT_PROPS; i++) {\\n\\t            var propName = DIFFICULT_PROPS[i];\\n\\t            if (oldEffectCfg[propName] !== effectCfg[propName]) {\\n\\t                this.stopEffectAnimation();\\n\\t                this.startEffectAnimation(effectCfg);\\n\\t                return;\\n\\t            }\\n\\t        }\\n\\n\\t        updateRipplePath(rippleGroup, effectCfg);\\n\\t    };\\n\\n\\t    /**\\n\\t     * Highlight symbol\\n\\t     */\\n\\t    effectSymbolProto.highlight = function () {\\n\\t        this.trigger('emphasis');\\n\\t    };\\n\\n\\t    /**\\n\\t     * Downplay symbol\\n\\t     */\\n\\t    effectSymbolProto.downplay = function () {\\n\\t        this.trigger('normal');\\n\\t    };\\n\\n\\t    /**\\n\\t     * Update symbol properties\\n\\t     * @param  {module:echarts/data/List} data\\n\\t     * @param  {number} idx\\n\\t     */\\n\\t    effectSymbolProto.updateData = function (data, idx) {\\n\\t        var seriesModel = data.hostModel;\\n\\n\\t        this.childAt(0).updateData(data, idx);\\n\\n\\t        var rippleGroup = this.childAt(1);\\n\\t        var itemModel = data.getItemModel(idx);\\n\\t        var symbolType = data.getItemVisual(idx, 'symbol');\\n\\t        var symbolSize = normalizeSymbolSize(data.getItemVisual(idx, 'symbolSize'));\\n\\t        var color = data.getItemVisual(idx, 'color');\\n\\n\\t        rippleGroup.attr('scale', symbolSize);\\n\\n\\t        rippleGroup.traverse(function (ripplePath) {\\n\\t            ripplePath.attr({\\n\\t                fill: color\\n\\t            });\\n\\t        });\\n\\n\\t        var symbolOffset = itemModel.getShallow('symbolOffset');\\n\\t        if (symbolOffset) {\\n\\t            var pos = rippleGroup.position;\\n\\t            pos[0] = numberUtil.parsePercent(symbolOffset[0], symbolSize[0]);\\n\\t            pos[1] = numberUtil.parsePercent(symbolOffset[1], symbolSize[1]);\\n\\t        }\\n\\t        rippleGroup.rotation = (itemModel.getShallow('symbolRotate') || 0) * Math.PI / 180 || 0;\\n\\n\\t        var effectCfg = {};\\n\\n\\t        effectCfg.showEffectOn = seriesModel.get('showEffectOn');\\n\\t        effectCfg.rippleScale = itemModel.get('rippleEffect.scale');\\n\\t        effectCfg.brushType = itemModel.get('rippleEffect.brushType');\\n\\t        effectCfg.period = itemModel.get('rippleEffect.period') * 1000;\\n\\t        effectCfg.effectOffset = idx / data.count();\\n\\t        effectCfg.z = itemModel.getShallow('z') || 0;\\n\\t        effectCfg.zlevel = itemModel.getShallow('zlevel') || 0;\\n\\t        effectCfg.symbolType = symbolType;\\n\\t        effectCfg.color = color;\\n\\n\\t        this.off('mouseover').off('mouseout').off('emphasis').off('normal');\\n\\n\\t        if (effectCfg.showEffectOn === 'render') {\\n\\t            this._effectCfg\\n\\t                ? this.updateEffectAnimation(effectCfg)\\n\\t                : this.startEffectAnimation(effectCfg);\\n\\n\\t            this._effectCfg = effectCfg;\\n\\t        }\\n\\t        else {\\n\\t            // Not keep old effect config\\n\\t            this._effectCfg = null;\\n\\n\\t            this.stopEffectAnimation();\\n\\t            var symbol = this.childAt(0);\\n\\t            var onEmphasis = function () {\\n\\t                symbol.trigger('emphasis');\\n\\t                if (effectCfg.showEffectOn !== 'render') {\\n\\t                    this.startEffectAnimation(effectCfg);\\n\\t                }\\n\\t            };\\n\\t            var onNormal = function () {\\n\\t                symbol.trigger('normal');\\n\\t                if (effectCfg.showEffectOn !== 'render') {\\n\\t                    this.stopEffectAnimation();\\n\\t                }\\n\\t            };\\n\\t            this.on('mouseover', onEmphasis, this)\\n\\t                .on('mouseout', onNormal, this)\\n\\t                .on('emphasis', onEmphasis, this)\\n\\t                .on('normal', onNormal, this);\\n\\t        }\\n\\n\\t        this._effectCfg = effectCfg;\\n\\t    };\\n\\n\\t    effectSymbolProto.fadeOut = function (cb) {\\n\\t        this.off('mouseover').off('mouseout').off('emphasis').off('normal');\\n\\t        cb && cb();\\n\\t    };\\n\\n\\t    zrUtil.inherits(EffectSymbol, Group);\\n\\n\\t    module.exports = EffectSymbol;\\n\\n\\n/***/ },\\n/* 274 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    __webpack_require__(275);\\n\\t    __webpack_require__(276);\\n\\n\\t    var echarts = __webpack_require__(1);\\n\\t    echarts.registerLayout(\\n\\t        __webpack_require__(281)\\n\\t    );\\n\\t    echarts.registerVisual(\\n\\t        __webpack_require__(282)\\n\\t    );\\n\\n\\n/***/ },\\n/* 275 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t'use strict';\\n\\n\\n\\t    var SeriesModel = __webpack_require__(78);\\n\\t    var List = __webpack_require__(98);\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var formatUtil = __webpack_require__(6);\\n\\t    var CoordinateSystem = __webpack_require__(76);\\n\\n\\t    // Convert [ [{coord: []}, {coord: []}] ]\\n\\t    // to [ { coords: [[]] } ]\\n\\t    function preprocessOption (seriesOpt) {\\n\\t        var data = seriesOpt.data;\\n\\t        if (data && data[0] && data[0][0] && data[0][0].coord) {\\n\\t            if (true) {\\n\\t                console.warn('Lines data configuration has been changed to'\\n\\t                    + ' { coords:[[1,2],[2,3]] }');\\n\\t            }\\n\\t            seriesOpt.data = zrUtil.map(data, function (itemOpt) {\\n\\t                var coords = [\\n\\t                    itemOpt[0].coord, itemOpt[1].coord\\n\\t                ];\\n\\t                var target = {\\n\\t                    coords: coords\\n\\t                };\\n\\t                if (itemOpt[0].name) {\\n\\t                    target.fromName = itemOpt[0].name;\\n\\t                }\\n\\t                if (itemOpt[1].name) {\\n\\t                    target.toName = itemOpt[1].name;\\n\\t                }\\n\\t                return zrUtil.mergeAll([target, itemOpt[0], itemOpt[1]]);\\n\\t            });\\n\\t        }\\n\\t    }\\n\\n\\t    var LinesSeries = SeriesModel.extend({\\n\\n\\t        type: 'series.lines',\\n\\n\\t        dependencies: ['grid', 'polar'],\\n\\n\\t        visualColorAccessPath: 'lineStyle.normal.color',\\n\\n\\t        init: function (option) {\\n\\t            // Not using preprocessor because mergeOption may not have series.type\\n\\t            preprocessOption(option);\\n\\n\\t            LinesSeries.superApply(this, 'init', arguments);\\n\\t        },\\n\\n\\t        mergeOption: function (option) {\\n\\t            preprocessOption(option);\\n\\n\\t            LinesSeries.superApply(this, 'mergeOption', arguments);\\n\\t        },\\n\\n\\t        getInitialData: function (option, ecModel) {\\n\\t            if (true) {\\n\\t                var CoordSys = CoordinateSystem.get(option.coordinateSystem);\\n\\t                if (!CoordSys) {\\n\\t                    throw new Error('Unkown coordinate system ' + option.coordinateSystem);\\n\\t                }\\n\\t            }\\n\\n\\t            var lineData = new List(['value'], this);\\n\\t            lineData.hasItemOption = false;\\n\\t            lineData.initData(option.data, [], function (dataItem, dimName, dataIndex, dimIndex) {\\n\\t                // dataItem is simply coords\\n\\t                if (dataItem instanceof Array) {\\n\\t                    return NaN;\\n\\t                }\\n\\t                else {\\n\\t                    lineData.hasItemOption = true;\\n\\t                    var value = dataItem.value;\\n\\t                    if (value != null) {\\n\\t                        return value instanceof Array ? value[dimIndex] : value;\\n\\t                    }\\n\\t                }\\n\\t            });\\n\\n\\t            return lineData;\\n\\t        },\\n\\n\\t        formatTooltip: function (dataIndex) {\\n\\t            var data = this.getData();\\n\\t            var itemModel = data.getItemModel(dataIndex);\\n\\t            var name = itemModel.get('name');\\n\\t            if (name) {\\n\\t                return name;\\n\\t            }\\n\\t            var fromName = itemModel.get('fromName');\\n\\t            var toName = itemModel.get('toName');\\n\\t            var html = [];\\n\\t            fromName != null && html.push(fromName);\\n\\t            toName != null && html.push(toName);\\n\\n\\t            return formatUtil.encodeHTML(html.join(' > '));\\n\\t        },\\n\\n\\t        defaultOption: {\\n\\t            coordinateSystem: 'geo',\\n\\t            zlevel: 0,\\n\\t            z: 2,\\n\\t            legendHoverLink: true,\\n\\n\\t            hoverAnimation: true,\\n\\t            // Cartesian coordinate system\\n\\t            xAxisIndex: 0,\\n\\t            yAxisIndex: 0,\\n\\n\\t            symbol: ['none', 'none'],\\n\\t            symbolSize: [10, 10],\\n\\t            // Geo coordinate system\\n\\t            geoIndex: 0,\\n\\n\\t            effect: {\\n\\t                show: false,\\n\\t                period: 4,\\n\\t                // Animation delay. support callback\\n\\t                // delay: 0,\\n\\t                // If move with constant speed px/sec\\n\\t                // period will be ignored if this property is > 0,\\n\\t                constantSpeed: 0,\\n\\t                symbol: 'circle',\\n\\t                symbolSize: 3,\\n\\t                loop: true,\\n\\t                // Length of trail, 0 - 1\\n\\t                trailLength: 0.2\\n\\t                // Same with lineStyle.normal.color\\n\\t                // color\\n\\t            },\\n\\n\\t            large: false,\\n\\t            // Available when large is true\\n\\t            largeThreshold: 2000,\\n\\n\\t            // If lines are polyline\\n\\t            // polyline not support curveness, label, animation\\n\\t            polyline: false,\\n\\n\\t            label: {\\n\\t                normal: {\\n\\t                    show: false,\\n\\t                    position: 'end'\\n\\t                    // distance: 5,\\n\\t                    // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\\n\\t                }\\n\\t            },\\n\\n\\t            lineStyle: {\\n\\t                normal: {\\n\\t                    opacity: 0.5\\n\\t                }\\n\\t            }\\n\\t        }\\n\\t    });\\n\\n\\n/***/ },\\n/* 276 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var LineDraw = __webpack_require__(210);\\n\\t    var EffectLine = __webpack_require__(277);\\n\\t    var Line = __webpack_require__(211);\\n\\t    var Polyline = __webpack_require__(278);\\n\\t    var EffectPolyline = __webpack_require__(279);\\n\\t    var LargeLineDraw = __webpack_require__(280);\\n\\n\\t    __webpack_require__(1).extendChartView({\\n\\n\\t        type: 'lines',\\n\\n\\t        init: function () {},\\n\\n\\t        render: function (seriesModel, ecModel, api) {\\n\\t            var data = seriesModel.getData();\\n\\t            var lineDraw = this._lineDraw;\\n\\n\\t            var hasEffect = seriesModel.get('effect.show');\\n\\t            var isPolyline = seriesModel.get('polyline');\\n\\t            var isLarge = seriesModel.get('large') && data.count() >= seriesModel.get('largeThreshold');\\n\\n\\t            if (true) {\\n\\t                if (hasEffect && isLarge) {\\n\\t                    console.warn('Large lines not support effect');\\n\\t                }\\n\\t            }\\n\\t            if (hasEffect !== this._hasEffet || isPolyline !== this._isPolyline || isLarge !== this._isLarge) {\\n\\t                if (lineDraw) {\\n\\t                    lineDraw.remove();\\n\\t                }\\n\\t                lineDraw = this._lineDraw = isLarge\\n\\t                    ? new LargeLineDraw()\\n\\t                    : new LineDraw(\\n\\t                        isPolyline\\n\\t                            ? (hasEffect ? EffectPolyline : Polyline)\\n\\t                            : (hasEffect ? EffectLine : Line)\\n\\t                    );\\n\\t                this._hasEffet = hasEffect;\\n\\t                this._isPolyline = isPolyline;\\n\\t                this._isLarge = isLarge;\\n\\t            }\\n\\n\\t            var zlevel = seriesModel.get('zlevel');\\n\\t            var trailLength = seriesModel.get('effect.trailLength');\\n\\n\\t            var zr = api.getZr();\\n\\t            // Avoid the drag cause ghost shadow\\n\\t            // FIXME Better way ?\\n\\t            zr.painter.getLayer(zlevel).clear(true);\\n\\t            // Config layer with motion blur\\n\\t            if (this._lastZlevel != null) {\\n\\t                zr.configLayer(this._lastZlevel, {\\n\\t                    motionBlur: false\\n\\t                });\\n\\t            }\\n\\t            if (hasEffect && trailLength) {\\n\\t                if (true) {\\n\\t                    var notInIndividual = false;\\n\\t                    ecModel.eachSeries(function (otherSeriesModel) {\\n\\t                        if (otherSeriesModel !== seriesModel && otherSeriesModel.get('zlevel') === zlevel) {\\n\\t                            notInIndividual = true;\\n\\t                        }\\n\\t                    });\\n\\t                    notInIndividual && console.warn('Lines with trail effect should have an individual zlevel');\\n\\t                }\\n\\n\\t                zr.configLayer(zlevel, {\\n\\t                    motionBlur: true,\\n\\t                    lastFrameAlpha: Math.max(Math.min(trailLength / 10 + 0.9, 1), 0)\\n\\t                });\\n\\t            }\\n\\n\\t            this.group.add(lineDraw.group);\\n\\n\\t            lineDraw.updateData(data);\\n\\n\\t            this._lastZlevel = zlevel;\\n\\t        },\\n\\n\\t        updateLayout: function (seriesModel, ecModel, api) {\\n\\t            this._lineDraw.updateLayout(seriesModel);\\n\\t            // Not use motion when dragging or zooming\\n\\t            var zr = api.getZr();\\n\\t            zr.painter.getLayer(this._lastZlevel).clear(true);\\n\\t        },\\n\\n\\t        remove: function (ecModel, api) {\\n\\t            this._lineDraw && this._lineDraw.remove(api, true);\\n\\t        },\\n\\n\\t        dispose: function () {}\\n\\t    });\\n\\n\\n/***/ },\\n/* 277 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * Provide effect for line\\n\\t * @module echarts/chart/helper/EffectLine\\n\\t */\\n\\n\\n\\t    var graphic = __webpack_require__(18);\\n\\t    var Line = __webpack_require__(211);\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var symbolUtil = __webpack_require__(111);\\n\\t    var vec2 = __webpack_require__(10);\\n\\n\\t    var curveUtil = __webpack_require__(37);\\n\\n\\t    /**\\n\\t     * @constructor\\n\\t     * @extends {module:zrender/graphic/Group}\\n\\t     * @alias {module:echarts/chart/helper/Line}\\n\\t     */\\n\\t    function EffectLine(lineData, idx, seriesScope) {\\n\\t        graphic.Group.call(this);\\n\\n\\t        this.add(this.createLine(lineData, idx, seriesScope));\\n\\n\\t        this._updateEffectSymbol(lineData, idx);\\n\\t    }\\n\\n\\t    var effectLineProto = EffectLine.prototype;\\n\\n\\t    effectLineProto.createLine = function (lineData, idx, seriesScope) {\\n\\t        return new Line(lineData, idx, seriesScope);\\n\\t    };\\n\\n\\t    effectLineProto._updateEffectSymbol = function (lineData, idx) {\\n\\t        var itemModel = lineData.getItemModel(idx);\\n\\t        var effectModel = itemModel.getModel('effect');\\n\\t        var size = effectModel.get('symbolSize');\\n\\t        var symbolType = effectModel.get('symbol');\\n\\t        if (!zrUtil.isArray(size)) {\\n\\t            size = [size, size];\\n\\t        }\\n\\t        var color = effectModel.get('color') || lineData.getItemVisual(idx, 'color');\\n\\t        var symbol = this.childAt(1);\\n\\n\\t        if (this._symbolType !== symbolType) {\\n\\t            // Remove previous\\n\\t            this.remove(symbol);\\n\\n\\t            symbol = symbolUtil.createSymbol(\\n\\t                symbolType, -0.5, -0.5, 1, 1, color\\n\\t            );\\n\\t            symbol.z2 = 100;\\n\\t            symbol.culling = true;\\n\\n\\t            this.add(symbol);\\n\\t        }\\n\\n\\t        // Symbol may be removed if loop is false\\n\\t        if (!symbol) {\\n\\t            return;\\n\\t        }\\n\\n\\t        // Shadow color is same with color in default\\n\\t        symbol.setStyle('shadowColor', color);\\n\\t        symbol.setStyle(effectModel.getItemStyle(['color']));\\n\\n\\t        symbol.attr('scale', size);\\n\\n\\t        symbol.setColor(color);\\n\\t        symbol.attr('scale', size);\\n\\n\\t        this._symbolType = symbolType;\\n\\n\\t        this._updateEffectAnimation(lineData, effectModel, idx);\\n\\t    };\\n\\n\\t    effectLineProto._updateEffectAnimation = function (lineData, effectModel, idx) {\\n\\n\\t        var symbol = this.childAt(1);\\n\\t        if (!symbol) {\\n\\t            return;\\n\\t        }\\n\\n\\t        var self = this;\\n\\n\\t        var points = lineData.getItemLayout(idx);\\n\\n\\t        var period = effectModel.get('period') * 1000;\\n\\t        var loop = effectModel.get('loop');\\n\\t        var constantSpeed = effectModel.get('constantSpeed');\\n\\t        var delayExpr = zrUtil.retrieve(effectModel.get('delay'), function (idx) {\\n\\t            return idx / lineData.count() * period / 3;\\n\\t        });\\n\\t        var isDelayFunc = typeof delayExpr === 'function';\\n\\n\\t        // Ignore when updating\\n\\t        symbol.ignore = true;\\n\\n\\t        this.updateAnimationPoints(symbol, points);\\n\\n\\t        if (constantSpeed > 0) {\\n\\t            period = this.getLineLength(symbol) / constantSpeed * 1000;\\n\\t        }\\n\\n\\t        if (period !== this._period || loop !== this._loop) {\\n\\n\\t            symbol.stopAnimation();\\n\\n\\t            var delay = delayExpr;\\n\\t            if (isDelayFunc) {\\n\\t                delay = delayExpr(idx);\\n\\t            }\\n\\t            if (symbol.__t > 0) {\\n\\t                delay = -period * symbol.__t;\\n\\t            }\\n\\t            symbol.__t = 0;\\n\\t            var animator = symbol.animate('', loop)\\n\\t                .when(period, {\\n\\t                    __t: 1\\n\\t                })\\n\\t                .delay(delay)\\n\\t                .during(function () {\\n\\t                    self.updateSymbolPosition(symbol);\\n\\t                });\\n\\t            if (!loop) {\\n\\t                animator.done(function () {\\n\\t                    self.remove(symbol);\\n\\t                });\\n\\t            }\\n\\t            animator.start();\\n\\t        }\\n\\n\\t        this._period = period;\\n\\t        this._loop = loop;\\n\\t    };\\n\\n\\t    effectLineProto.getLineLength = function (symbol) {\\n\\t        // Not so accurate\\n\\t        return (vec2.dist(symbol.__p1, symbol.__cp1)\\n\\t            + vec2.dist(symbol.__cp1, symbol.__p2));\\n\\t    };\\n\\n\\t    effectLineProto.updateAnimationPoints = function (symbol, points) {\\n\\t        symbol.__p1 = points[0];\\n\\t        symbol.__p2 = points[1];\\n\\t        symbol.__cp1 = points[2] || [\\n\\t            (points[0][0] + points[1][0]) / 2,\\n\\t            (points[0][1] + points[1][1]) / 2\\n\\t        ];\\n\\t    };\\n\\n\\t    effectLineProto.updateData = function (lineData, idx, seriesScope) {\\n\\t        this.childAt(0).updateData(lineData, idx, seriesScope);\\n\\t        this._updateEffectSymbol(lineData, idx);\\n\\t    };\\n\\n\\t    effectLineProto.updateSymbolPosition = function (symbol) {\\n\\t        var p1 = symbol.__p1;\\n\\t        var p2 = symbol.__p2;\\n\\t        var cp1 = symbol.__cp1;\\n\\t        var t = symbol.__t;\\n\\t        var pos = symbol.position;\\n\\t        var quadraticAt = curveUtil.quadraticAt;\\n\\t        var quadraticDerivativeAt = curveUtil.quadraticDerivativeAt;\\n\\t        pos[0] = quadraticAt(p1[0], cp1[0], p2[0], t);\\n\\t        pos[1] = quadraticAt(p1[1], cp1[1], p2[1], t);\\n\\n\\t        // Tangent\\n\\t        var tx = quadraticDerivativeAt(p1[0], cp1[0], p2[0], t);\\n\\t        var ty = quadraticDerivativeAt(p1[1], cp1[1], p2[1], t);\\n\\n\\t        symbol.rotation = -Math.atan2(ty, tx) - Math.PI / 2;\\n\\n\\t        symbol.ignore = false;\\n\\t    };\\n\\n\\n\\t    effectLineProto.updateLayout = function (lineData, idx) {\\n\\t        this.childAt(0).updateLayout(lineData, idx);\\n\\n\\t        var effectModel = lineData.getItemModel(idx).getModel('effect');\\n\\t        this._updateEffectAnimation(lineData, effectModel, idx);\\n\\t    };\\n\\n\\t    zrUtil.inherits(EffectLine, graphic.Group);\\n\\n\\t    module.exports = EffectLine;\\n\\n\\n/***/ },\\n/* 278 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * @module echarts/chart/helper/Line\\n\\t */\\n\\n\\n\\t    var graphic = __webpack_require__(18);\\n\\t    var zrUtil = __webpack_require__(4);\\n\\n\\t    /**\\n\\t     * @constructor\\n\\t     * @extends {module:zrender/graphic/Group}\\n\\t     * @alias {module:echarts/chart/helper/Polyline}\\n\\t     */\\n\\t    function Polyline(lineData, idx, seriesScope) {\\n\\t        graphic.Group.call(this);\\n\\n\\t        this._createPolyline(lineData, idx, seriesScope);\\n\\t    }\\n\\n\\t    var polylineProto = Polyline.prototype;\\n\\n\\t    polylineProto._createPolyline = function (lineData, idx, seriesScope) {\\n\\t        // var seriesModel = lineData.hostModel;\\n\\t        var points = lineData.getItemLayout(idx);\\n\\n\\t        var line = new graphic.Polyline({\\n\\t            shape: {\\n\\t                points: points\\n\\t            }\\n\\t        });\\n\\n\\t        this.add(line);\\n\\n\\t        this._updateCommonStl(lineData, idx, seriesScope);\\n\\t    };\\n\\n\\t    polylineProto.updateData = function (lineData, idx, seriesScope) {\\n\\t        var seriesModel = lineData.hostModel;\\n\\n\\t        var line = this.childAt(0);\\n\\t        var target = {\\n\\t            shape: {\\n\\t                points: lineData.getItemLayout(idx)\\n\\t            }\\n\\t        };\\n\\t        graphic.updateProps(line, target, seriesModel, idx);\\n\\n\\t        this._updateCommonStl(lineData, idx, seriesScope);\\n\\t    };\\n\\n\\t    polylineProto._updateCommonStl = function (lineData, idx, seriesScope) {\\n\\t        var line = this.childAt(0);\\n\\t        var itemModel = lineData.getItemModel(idx);\\n\\n\\t        var visualColor = lineData.getItemVisual(idx, 'color');\\n\\n\\t        var lineStyle = seriesScope && seriesScope.lineStyle;\\n\\t        var hoverLineStyle = seriesScope && seriesScope.hoverLineStyle;\\n\\n\\t        if (!seriesScope || lineData.hasItemOption) {\\n\\t            lineStyle = itemModel.getModel('lineStyle.normal').getLineStyle();\\n\\t            hoverLineStyle = itemModel.getModel('lineStyle.emphasis').getLineStyle();\\n\\t        }\\n\\t        line.useStyle(zrUtil.defaults(\\n\\t            {\\n\\t                strokeNoScale: true,\\n\\t                fill: 'none',\\n\\t                stroke: visualColor\\n\\t            },\\n\\t            lineStyle\\n\\t        ));\\n\\t        line.hoverStyle = hoverLineStyle;\\n\\n\\t        graphic.setHoverStyle(this);\\n\\t    };\\n\\n\\t    polylineProto.updateLayout = function (lineData, idx) {\\n\\t        var polyline = this.childAt(0);\\n\\t        polyline.setShape('points', lineData.getItemLayout(idx));\\n\\t    };\\n\\n\\t    zrUtil.inherits(Polyline, graphic.Group);\\n\\n\\t    module.exports = Polyline;\\n\\n\\n/***/ },\\n/* 279 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * Provide effect for line\\n\\t * @module echarts/chart/helper/EffectLine\\n\\t */\\n\\n\\n\\t    var Polyline = __webpack_require__(278);\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var EffectLine = __webpack_require__(277);\\n\\t    var vec2 = __webpack_require__(10);\\n\\n\\t    /**\\n\\t     * @constructor\\n\\t     * @extends {module:echarts/chart/helper/EffectLine}\\n\\t     * @alias {module:echarts/chart/helper/Polyline}\\n\\t     */\\n\\t    function EffectPolyline(lineData, idx, seriesScope) {\\n\\t        EffectLine.call(this, lineData, idx, seriesScope);\\n\\t        this._lastFrame = 0;\\n\\t        this._lastFramePercent = 0;\\n\\t    }\\n\\n\\t    var effectPolylineProto = EffectPolyline.prototype;\\n\\n\\t    // Overwrite\\n\\t    effectPolylineProto.createLine = function (lineData, idx, seriesScope) {\\n\\t        return new Polyline(lineData, idx, seriesScope);\\n\\t    };\\n\\n\\t    // Overwrite\\n\\t    effectPolylineProto.updateAnimationPoints = function (symbol, points) {\\n\\t        this._points = points;\\n\\t        var accLenArr = [0];\\n\\t        var len = 0;\\n\\t        for (var i = 1; i < points.length; i++) {\\n\\t            var p1 = points[i - 1];\\n\\t            var p2 = points[i];\\n\\t            len += vec2.dist(p1, p2);\\n\\t            accLenArr.push(len);\\n\\t        }\\n\\t        if (len === 0) {\\n\\t            return;\\n\\t        }\\n\\n\\t        for (var i = 0; i < accLenArr.length; i++) {\\n\\t            accLenArr[i] /= len;\\n\\t        }\\n\\t        this._offsets = accLenArr;\\n\\t        this._length = len;\\n\\t    };\\n\\n\\t    // Overwrite\\n\\t    effectPolylineProto.getLineLength = function (symbol) {\\n\\t        return this._length;\\n\\t    };\\n\\n\\t    // Overwrite\\n\\t    effectPolylineProto.updateSymbolPosition = function (symbol) {\\n\\t        var t = symbol.__t;\\n\\t        var points = this._points;\\n\\t        var offsets = this._offsets;\\n\\t        var len = points.length;\\n\\n\\t        if (!offsets) {\\n\\t            // Has length 0\\n\\t            return;\\n\\t        }\\n\\n\\t        var lastFrame = this._lastFrame;\\n\\t        var frame;\\n\\n\\t        if (t < this._lastFramePercent) {\\n\\t            // Start from the next frame\\n\\t            // PENDING start from lastFrame ?\\n\\t            var start = Math.min(lastFrame + 1, len - 1);\\n\\t            for (frame = start; frame >= 0; frame--) {\\n\\t                if (offsets[frame] <= t) {\\n\\t                    break;\\n\\t                }\\n\\t            }\\n\\t            // PENDING really need to do this ?\\n\\t            frame = Math.min(frame, len - 2);\\n\\t        }\\n\\t        else {\\n\\t            for (var frame = lastFrame; frame < len; frame++) {\\n\\t                if (offsets[frame] > t) {\\n\\t                    break;\\n\\t                }\\n\\t            }\\n\\t            frame = Math.min(frame - 1, len - 2);\\n\\t        }\\n\\n\\t        vec2.lerp(\\n\\t            symbol.position, points[frame], points[frame + 1],\\n\\t            (t - offsets[frame]) / (offsets[frame + 1] - offsets[frame])\\n\\t        );\\n\\n\\t        var tx = points[frame + 1][0] - points[frame][0];\\n\\t        var ty = points[frame + 1][1] - points[frame][1];\\n\\t        symbol.rotation = -Math.atan2(ty, tx) - Math.PI / 2;\\n\\n\\t        this._lastFrame = frame;\\n\\t        this._lastFramePercent = t;\\n\\n\\t        symbol.ignore = false;\\n\\t    };\\n\\n\\t    zrUtil.inherits(EffectPolyline, EffectLine);\\n\\n\\t    module.exports = EffectPolyline;\\n\\n\\n/***/ },\\n/* 280 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t// TODO Batch by color\\n\\n\\n\\n\\t    var graphic = __webpack_require__(18);\\n\\n\\t    var quadraticContain = __webpack_require__(42);\\n\\t    var lineContain = __webpack_require__(40);\\n\\n\\t    var LargeLineShape = graphic.extendShape({\\n\\t        shape: {\\n\\t            polyline: false,\\n\\n\\t            segs: []\\n\\t        },\\n\\n\\t        buildPath: function (path, shape) {\\n\\t            var segs = shape.segs;\\n\\t            var isPolyline = shape.polyline;\\n\\n\\t            for (var i = 0; i < segs.length; i++) {\\n\\t                var seg = segs[i];\\n\\t                if (isPolyline) {\\n\\t                    path.moveTo(seg[0][0], seg[0][1]);\\n\\t                    for (var j = 1; j < seg.length; j++) {\\n\\t                        path.lineTo(seg[j][0], seg[j][1]);\\n\\t                    }\\n\\t                }\\n\\t                else {\\n\\t                    path.moveTo(seg[0][0], seg[0][1]);\\n\\t                    if (seg.length > 2) {\\n\\t                        path.quadraticCurveTo(seg[2][0], seg[2][1], seg[1][0], seg[1][1]);\\n\\t                    }\\n\\t                    else {\\n\\t                        path.lineTo(seg[1][0], seg[1][1]);\\n\\t                    }\\n\\t                }\\n\\t            }\\n\\t        },\\n\\n\\t        findDataIndex: function (x, y) {\\n\\t            var shape = this.shape;\\n\\t            var segs = shape.segs;\\n\\t            var isPolyline = shape.polyline;\\n\\t            var lineWidth = Math.max(this.style.lineWidth, 1);\\n\\n\\t            // Not consider transform\\n\\t            for (var i = 0; i < segs.length; i++) {\\n\\t                var seg = segs[i];\\n\\t                if (isPolyline) {\\n\\t                    for (var j = 1; j < seg.length; j++) {\\n\\t                        if (lineContain.containStroke(\\n\\t                            seg[j - 1][0], seg[j - 1][1], seg[j][0], seg[j][1], lineWidth, x, y\\n\\t                        )) {\\n\\t                            return i;\\n\\t                        }\\n\\t                    }\\n\\t                }\\n\\t                else {\\n\\t                    if (seg.length > 2) {\\n\\t                        if (quadraticContain.containStroke(\\n\\t                            seg[0][0], seg[0][1], seg[2][0], seg[2][1], seg[1][0], seg[1][1], lineWidth, x, y\\n\\t                        )) {\\n\\t                            return i;\\n\\t                        }\\n\\t                    }\\n\\t                    else {\\n\\t                        if (lineContain.containStroke(\\n\\t                            seg[0][0], seg[0][1], seg[1][0], seg[1][1], lineWidth, x, y\\n\\t                        )) {\\n\\t                            return i;\\n\\t                        }\\n\\t                    }\\n\\t                }\\n\\t            }\\n\\n\\t            return -1;\\n\\t        }\\n\\t    });\\n\\n\\t    function LargeLineDraw() {\\n\\t        this.group = new graphic.Group();\\n\\n\\t        this._lineEl = new LargeLineShape();\\n\\t    }\\n\\n\\t    var largeLineProto = LargeLineDraw.prototype;\\n\\n\\t    /**\\n\\t     * Update symbols draw by new data\\n\\t     * @param {module:echarts/data/List} data\\n\\t     */\\n\\t    largeLineProto.updateData = function (data) {\\n\\t        this.group.removeAll();\\n\\n\\t        var lineEl = this._lineEl;\\n\\n\\t        var seriesModel = data.hostModel;\\n\\n\\t        lineEl.setShape({\\n\\t            segs: data.mapArray(data.getItemLayout),\\n\\t            polyline: seriesModel.get('polyline')\\n\\t        });\\n\\n\\t        lineEl.useStyle(\\n\\t            seriesModel.getModel('lineStyle.normal').getLineStyle()\\n\\t        );\\n\\n\\t        var visualColor = data.getVisual('color');\\n\\t        if (visualColor) {\\n\\t            lineEl.setStyle('stroke', visualColor);\\n\\t        }\\n\\t        lineEl.setStyle('fill');\\n\\n\\t        // Enable tooltip\\n\\t        // PENDING May have performance issue when path is extremely large\\n\\t        lineEl.seriesIndex = seriesModel.seriesIndex;\\n\\t        lineEl.on('mousemove', function (e) {\\n\\t            lineEl.dataIndex = null;\\n\\t            var dataIndex = lineEl.findDataIndex(e.offsetX, e.offsetY);\\n\\t            if (dataIndex > 0) {\\n\\t                // Provide dataIndex for tooltip\\n\\t                lineEl.dataIndex = dataIndex;\\n\\t            }\\n\\t        });\\n\\n\\t        // Add back\\n\\t        this.group.add(lineEl);\\n\\t    };\\n\\n\\t    largeLineProto.updateLayout = function (seriesModel) {\\n\\t        var data = seriesModel.getData();\\n\\t        this._lineEl.setShape({\\n\\t            segs: data.mapArray(data.getItemLayout)\\n\\t        });\\n\\t    };\\n\\n\\t    largeLineProto.remove = function () {\\n\\t        this.group.removeAll();\\n\\t    };\\n\\n\\t    module.exports = LargeLineDraw;\\n\\n\\n/***/ },\\n/* 281 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    module.exports = function (ecModel) {\\n\\t        ecModel.eachSeriesByType('lines', function (seriesModel) {\\n\\t            var coordSys = seriesModel.coordinateSystem;\\n\\t            var lineData = seriesModel.getData();\\n\\n\\t            // FIXME Use data dimensions ?\\n\\t            lineData.each(function (idx) {\\n\\t                var itemModel = lineData.getItemModel(idx);\\n\\n\\t                var coords = (itemModel.option instanceof Array) ?\\n\\t                    itemModel.option : itemModel.get('coords');\\n\\n\\t                if (true) {\\n\\t                    if (!(coords instanceof Array && coords.length > 0 && coords[0] instanceof Array)) {\\n\\t                        throw new Error('Invalid coords ' + JSON.stringify(coords) + '. Lines must have 2d coords array in data item.');\\n\\t                    }\\n\\t                }\\n\\t                var pts = [];\\n\\n\\t                if (seriesModel.get('polyline')) {\\n\\t                    for (var i = 0; i < coords.length; i++) {\\n\\t                        pts.push(coordSys.dataToPoint(coords[i]));\\n\\t                    }\\n\\t                }\\n\\t                else {\\n\\t                    pts[0] = coordSys.dataToPoint(coords[0]);\\n\\t                    pts[1] = coordSys.dataToPoint(coords[1]);\\n\\n\\t                    var curveness = itemModel.get('lineStyle.normal.curveness');\\n\\t                    if (+curveness) {\\n\\t                        pts[2] = [\\n\\t                            (pts[0][0] + pts[1][0]) / 2 - (pts[0][1] - pts[1][1]) * curveness,\\n\\t                            (pts[0][1] + pts[1][1]) / 2 - (pts[1][0] - pts[0][0]) * curveness\\n\\t                        ];\\n\\t                    }\\n\\t                }\\n\\t                lineData.setItemLayout(idx, pts);\\n\\t            });\\n\\t        });\\n\\t    };\\n\\n\\n/***/ },\\n/* 282 */\\n/***/ function(module, exports) {\\n\\n\\t\\n\\n\\t    function normalize(a) {\\n\\t        if (!(a instanceof Array)) {\\n\\t            a = [a, a];\\n\\t        }\\n\\t        return a;\\n\\t    }\\n\\t    module.exports = function (ecModel) {\\n\\t        ecModel.eachSeriesByType('lines', function (seriesModel) {\\n\\t            var data = seriesModel.getData();\\n\\t            var symbolType = normalize(seriesModel.get('symbol'));\\n\\t            var symbolSize = normalize(seriesModel.get('symbolSize'));\\n\\n\\t            var opacityQuery = 'lineStyle.normal.opacity'.split('.');\\n\\n\\t            data.setVisual('fromSymbol', symbolType && symbolType[0]);\\n\\t            data.setVisual('toSymbol', symbolType && symbolType[1]);\\n\\t            data.setVisual('fromSymbolSize', symbolSize && symbolSize[0]);\\n\\t            data.setVisual('toSymbolSize', symbolSize && symbolSize[1]);\\n\\t            data.setVisual('opacity', seriesModel.get(opacityQuery));\\n\\n\\t            data.each(function (idx) {\\n\\t                var itemModel = data.getItemModel(idx);\\n\\t                var symbolType = normalize(itemModel.getShallow('symbol', true));\\n\\t                var symbolSize = normalize(itemModel.getShallow('symbolSize', true));\\n\\t                var opacity = itemModel.get(opacityQuery);\\n\\n\\t                symbolType[0] && data.setItemVisual(idx, 'fromSymbol', symbolType[0]);\\n\\t                symbolType[1] && data.setItemVisual(idx, 'toSymbol', symbolType[1]);\\n\\t                symbolSize[0] && data.setItemVisual(idx, 'fromSymbolSize', symbolSize[0]);\\n\\t                symbolSize[1] && data.setItemVisual(idx, 'toSymbolSize', symbolSize[1]);\\n\\n\\t                data.setItemVisual(idx, 'opacity', opacity);\\n\\t            });\\n\\t        });\\n\\t    };\\n\\n\\n/***/ },\\n/* 283 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    __webpack_require__(284);\\n\\t    __webpack_require__(285);\\n\\n\\n/***/ },\\n/* 284 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var SeriesModel = __webpack_require__(78);\\n\\t    var createListFromArray = __webpack_require__(109);\\n\\n\\t    module.exports = SeriesModel.extend({\\n\\t        type: 'series.heatmap',\\n\\n\\t        getInitialData: function (option, ecModel) {\\n\\t            return createListFromArray(option.data, this, ecModel);\\n\\t        },\\n\\n\\t        defaultOption: {\\n\\n\\t            // Cartesian2D or geo\\n\\t            coordinateSystem: 'cartesian2d',\\n\\n\\t            zlevel: 0,\\n\\n\\t            z: 2,\\n\\n\\t            // Cartesian coordinate system\\n\\t            // xAxisIndex: 0,\\n\\t            // yAxisIndex: 0,\\n\\n\\t            // Geo coordinate system\\n\\t            geoIndex: 0,\\n\\n\\t            blurSize: 30,\\n\\n\\t            pointSize: 20,\\n\\n\\t            maxOpacity: 1,\\n\\n\\t            minOpacity: 0\\n\\t        }\\n\\t    });\\n\\n\\n/***/ },\\n/* 285 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var graphic = __webpack_require__(18);\\n\\t    var HeatmapLayer = __webpack_require__(286);\\n\\t    var zrUtil = __webpack_require__(4);\\n\\n\\t    function getIsInPiecewiseRange(dataExtent, pieceList, selected) {\\n\\t        var dataSpan = dataExtent[1] - dataExtent[0];\\n\\t        pieceList = zrUtil.map(pieceList, function (piece) {\\n\\t            return {\\n\\t                interval: [\\n\\t                    (piece.interval[0] - dataExtent[0]) / dataSpan,\\n\\t                    (piece.interval[1] - dataExtent[0]) / dataSpan\\n\\t                ]\\n\\t            };\\n\\t        });\\n\\t        var len = pieceList.length;\\n\\t        var lastIndex = 0;\\n\\t        return function (val) {\\n\\t            // Try to find in the location of the last found\\n\\t            for (var i = lastIndex; i < len; i++) {\\n\\t                var interval = pieceList[i].interval;\\n\\t                if (interval[0] <= val && val <= interval[1]) {\\n\\t                    lastIndex = i;\\n\\t                    break;\\n\\t                }\\n\\t            }\\n\\t            if (i === len) { // Not found, back interation\\n\\t                for (var i = lastIndex - 1; i >= 0; i--) {\\n\\t                    var interval = pieceList[i].interval;\\n\\t                    if (interval[0] <= val && val <= interval[1]) {\\n\\t                        lastIndex = i;\\n\\t                        break;\\n\\t                    }\\n\\t                }\\n\\t            }\\n\\t            return i >= 0 && i < len && selected[i];\\n\\t        };\\n\\t    }\\n\\n\\t    function getIsInContinuousRange(dataExtent, range) {\\n\\t        var dataSpan = dataExtent[1] - dataExtent[0];\\n\\t        range = [\\n\\t            (range[0] - dataExtent[0]) / dataSpan,\\n\\t            (range[1] - dataExtent[0]) / dataSpan\\n\\t        ];\\n\\t        return function (val) {\\n\\t            return val >= range[0] && val <= range[1];\\n\\t        };\\n\\t    }\\n\\n\\t    function isGeoCoordSys(coordSys) {\\n\\t        var dimensions = coordSys.dimensions;\\n\\t        // Not use coorSys.type === 'geo' because coordSys maybe extended\\n\\t        return dimensions[0] === 'lng' && dimensions[1] === 'lat';\\n\\t    }\\n\\n\\t    module.exports = __webpack_require__(1).extendChartView({\\n\\n\\t        type: 'heatmap',\\n\\n\\t        render: function (seriesModel, ecModel, api) {\\n\\t            var visualMapOfThisSeries;\\n\\t            ecModel.eachComponent('visualMap', function (visualMap) {\\n\\t                visualMap.eachTargetSeries(function (targetSeries) {\\n\\t                    if (targetSeries === seriesModel) {\\n\\t                        visualMapOfThisSeries = visualMap;\\n\\t                    }\\n\\t                });\\n\\t            });\\n\\n\\t            if (true) {\\n\\t                if (!visualMapOfThisSeries) {\\n\\t                    throw new Error('Heatmap must use with visualMap');\\n\\t                }\\n\\t            }\\n\\n\\t            this.group.removeAll();\\n\\t            var coordSys = seriesModel.coordinateSystem;\\n\\t            if (coordSys.type === 'cartesian2d' || coordSys.type === 'calendar') {\\n\\t                this._renderOnCartesianAndCalendar(coordSys, seriesModel, api);\\n\\t            }\\n\\t            else if (isGeoCoordSys(coordSys)) {\\n\\t                this._renderOnGeo(\\n\\t                    coordSys, seriesModel, visualMapOfThisSeries, api\\n\\t                );\\n\\t            }\\n\\t        },\\n\\n\\t        dispose: function () {},\\n\\n\\t        _renderOnCartesianAndCalendar: function (coordSys, seriesModel, api) {\\n\\n\\t            if (coordSys.type === 'cartesian2d') {\\n\\t                var xAxis = coordSys.getAxis('x');\\n\\t                var yAxis = coordSys.getAxis('y');\\n\\n\\t                if (true) {\\n\\t                    if (!(xAxis.type === 'category' && yAxis.type === 'category')) {\\n\\t                        throw new Error('Heatmap on cartesian must have two category axes');\\n\\t                    }\\n\\t                    if (!(xAxis.onBand && yAxis.onBand)) {\\n\\t                        throw new Error('Heatmap on cartesian must have two axes with boundaryGap true');\\n\\t                    }\\n\\t                }\\n\\n\\t                var width = xAxis.getBandWidth();\\n\\t                var height = yAxis.getBandWidth();\\n\\n\\t            }\\n\\n\\t            var group = this.group;\\n\\t            var data = seriesModel.getData();\\n\\n\\t            var itemStyleQuery = 'itemStyle.normal';\\n\\t            var hoverItemStyleQuery = 'itemStyle.emphasis';\\n\\t            var labelQuery = 'label.normal';\\n\\t            var hoverLabelQuery = 'label.emphasis';\\n\\t            var style = seriesModel.getModel(itemStyleQuery).getItemStyle(['color']);\\n\\t            var hoverStl = seriesModel.getModel(hoverItemStyleQuery).getItemStyle();\\n\\t            var labelModel = seriesModel.getModel('label.normal');\\n\\t            var hoverLabelModel = seriesModel.getModel('label.emphasis');\\n\\t            var coordSysType = coordSys.type;\\n\\n\\t            var dataDims = coordSysType === 'cartesian2d'\\n\\t                ? [\\n\\t                    seriesModel.coordDimToDataDim('x')[0],\\n\\t                    seriesModel.coordDimToDataDim('y')[0],\\n\\t                    seriesModel.coordDimToDataDim('value')[0]\\n\\t                ]\\n\\t                : [\\n\\t                    seriesModel.coordDimToDataDim('time')[0],\\n\\t                    seriesModel.coordDimToDataDim('value')[0]\\n\\t                ];\\n\\n\\t            data.each(function (idx) {\\n\\t                var rect;\\n\\n\\t                if (coordSysType === 'cartesian2d') {\\n\\t                    // Ignore empty data\\n\\t                    if (isNaN(data.get(dataDims[2], idx))) {\\n\\t                        return;\\n\\t                    }\\n\\n\\t                    var point = coordSys.dataToPoint([\\n\\t                        data.get(dataDims[0], idx),\\n\\t                        data.get(dataDims[1], idx)\\n\\t                    ]);\\n\\n\\t                    rect = new graphic.Rect({\\n\\t                        shape: {\\n\\t                            x: point[0] - width / 2,\\n\\t                            y: point[1] - height / 2,\\n\\t                            width: width,\\n\\t                            height: height\\n\\t                        },\\n\\t                        style: {\\n\\t                            fill: data.getItemVisual(idx, 'color'),\\n\\t                            opacity: data.getItemVisual(idx, 'opacity')\\n\\t                        }\\n\\t                    });\\n\\t                }\\n\\t                else {\\n\\t                    // Ignore empty data\\n\\t                    if (isNaN(data.get(dataDims[1], idx))) {\\n\\t                        return;\\n\\t                    }\\n\\n\\t                    rect = new graphic.Rect({\\n\\t                        z2: 1,\\n\\t                        shape: coordSys.dataToRect([data.get(dataDims[0], idx)]).contentShape,\\n\\t                        style: {\\n\\t                            fill: data.getItemVisual(idx, 'color'),\\n\\t                            opacity: data.getItemVisual(idx, 'opacity')\\n\\t                        }\\n\\t                    });\\n\\t                }\\n\\n\\t                var itemModel = data.getItemModel(idx);\\n\\n\\t                // Optimization for large datset\\n\\t                if (data.hasItemOption) {\\n\\t                    style = itemModel.getModel(itemStyleQuery).getItemStyle(['color']);\\n\\t                    hoverStl = itemModel.getModel(hoverItemStyleQuery).getItemStyle();\\n\\t                    labelModel = itemModel.getModel(labelQuery);\\n\\t                    hoverLabelModel = itemModel.getModel(hoverLabelQuery);\\n\\t                }\\n\\n\\t                var rawValue = seriesModel.getRawValue(idx);\\n\\t                var defaultText = '-';\\n\\t                if (rawValue && rawValue[2] != null) {\\n\\t                    defaultText = rawValue[2];\\n\\t                }\\n\\t                if (labelModel.getShallow('show')) {\\n\\t                    graphic.setText(style, labelModel);\\n\\t                    style.text = seriesModel.getFormattedLabel(idx, 'normal') || defaultText;\\n\\t                }\\n\\t                if (hoverLabelModel.getShallow('show')) {\\n\\t                    graphic.setText(hoverStl, hoverLabelModel);\\n\\t                    hoverStl.text = seriesModel.getFormattedLabel(idx, 'emphasis') || defaultText;\\n\\t                }\\n\\n\\t                rect.setStyle(style);\\n\\n\\t                graphic.setHoverStyle(rect, data.hasItemOption ? hoverStl : zrUtil.extend({}, hoverStl));\\n\\n\\t                group.add(rect);\\n\\t                data.setItemGraphicEl(idx, rect);\\n\\t            });\\n\\t        },\\n\\n\\t        _renderOnGeo: function (geo, seriesModel, visualMapModel, api) {\\n\\t            var inRangeVisuals = visualMapModel.targetVisuals.inRange;\\n\\t            var outOfRangeVisuals = visualMapModel.targetVisuals.outOfRange;\\n\\t            // if (!visualMapping) {\\n\\t            //     throw new Error('Data range must have color visuals');\\n\\t            // }\\n\\n\\t            var data = seriesModel.getData();\\n\\t            var hmLayer = this._hmLayer || (this._hmLayer || new HeatmapLayer());\\n\\t            hmLayer.blurSize = seriesModel.get('blurSize');\\n\\t            hmLayer.pointSize = seriesModel.get('pointSize');\\n\\t            hmLayer.minOpacity = seriesModel.get('minOpacity');\\n\\t            hmLayer.maxOpacity = seriesModel.get('maxOpacity');\\n\\n\\t            var rect = geo.getViewRect().clone();\\n\\t            var roamTransform = geo.getRoamTransform().transform;\\n\\t            rect.applyTransform(roamTransform);\\n\\n\\t            // Clamp on viewport\\n\\t            var x = Math.max(rect.x, 0);\\n\\t            var y = Math.max(rect.y, 0);\\n\\t            var x2 = Math.min(rect.width + rect.x, api.getWidth());\\n\\t            var y2 = Math.min(rect.height + rect.y, api.getHeight());\\n\\t            var width = x2 - x;\\n\\t            var height = y2 - y;\\n\\n\\t            var points = data.mapArray(['lng', 'lat', 'value'], function (lng, lat, value) {\\n\\t                var pt = geo.dataToPoint([lng, lat]);\\n\\t                pt[0] -= x;\\n\\t                pt[1] -= y;\\n\\t                pt.push(value);\\n\\t                return pt;\\n\\t            });\\n\\n\\t            var dataExtent = visualMapModel.getExtent();\\n\\t            var isInRange = visualMapModel.type === 'visualMap.continuous'\\n\\t                ? getIsInContinuousRange(dataExtent, visualMapModel.option.range)\\n\\t                : getIsInPiecewiseRange(\\n\\t                    dataExtent, visualMapModel.getPieceList(), visualMapModel.option.selected\\n\\t                );\\n\\n\\t            hmLayer.update(\\n\\t                points, width, height,\\n\\t                inRangeVisuals.color.getNormalizer(),\\n\\t                {\\n\\t                    inRange: inRangeVisuals.color.getColorMapper(),\\n\\t                    outOfRange: outOfRangeVisuals.color.getColorMapper()\\n\\t                },\\n\\t                isInRange\\n\\t            );\\n\\t            var img = new graphic.Image({\\n\\t                style: {\\n\\t                    width: width,\\n\\t                    height: height,\\n\\t                    x: x,\\n\\t                    y: y,\\n\\t                    image: hmLayer.canvas\\n\\t                },\\n\\t                silent: true\\n\\t            });\\n\\t            this.group.add(img);\\n\\t        }\\n\\t    });\\n\\n\\n\\n/***/ },\\n/* 286 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * @file defines echarts Heatmap Chart\\n\\t * @author Ovilia (me@zhangwenli.com)\\n\\t * Inspired by https://github.com/mourner/simpleheat\\n\\t *\\n\\t * @module\\n\\t */\\n\\n\\n\\t    var GRADIENT_LEVELS = 256;\\n\\t    var zrUtil = __webpack_require__(4);\\n\\n\\t    /**\\n\\t     * Heatmap Chart\\n\\t     *\\n\\t     * @class\\n\\t     */\\n\\t    function Heatmap() {\\n\\t        var canvas = zrUtil.createCanvas();\\n\\t        this.canvas = canvas;\\n\\n\\t        this.blurSize = 30;\\n\\t        this.pointSize = 20;\\n\\n\\t        this.maxOpacity = 1;\\n\\t        this.minOpacity = 0;\\n\\n\\t        this._gradientPixels = {};\\n\\t    }\\n\\n\\t    Heatmap.prototype = {\\n\\t        /**\\n\\t         * Renders Heatmap and returns the rendered canvas\\n\\t         * @param {Array} data array of data, each has x, y, value\\n\\t         * @param {number} width canvas width\\n\\t         * @param {number} height canvas height\\n\\t         */\\n\\t        update: function(data, width, height, normalize, colorFunc, isInRange) {\\n\\t            var brush = this._getBrush();\\n\\t            var gradientInRange = this._getGradient(data, colorFunc, 'inRange');\\n\\t            var gradientOutOfRange = this._getGradient(data, colorFunc, 'outOfRange');\\n\\t            var r = this.pointSize + this.blurSize;\\n\\n\\t            var canvas = this.canvas;\\n\\t            var ctx = canvas.getContext('2d');\\n\\t            var len = data.length;\\n\\t            canvas.width = width;\\n\\t            canvas.height = height;\\n\\t            for (var i = 0; i < len; ++i) {\\n\\t                var p = data[i];\\n\\t                var x = p[0];\\n\\t                var y = p[1];\\n\\t                var value = p[2];\\n\\n\\t                // calculate alpha using value\\n\\t                var alpha = normalize(value);\\n\\n\\t                // draw with the circle brush with alpha\\n\\t                ctx.globalAlpha = alpha;\\n\\t                ctx.drawImage(brush, x - r, y - r);\\n\\t            }\\n\\n\\t            // colorize the canvas using alpha value and set with gradient\\n\\t            var imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\\n\\t            var pixels = imageData.data;\\n\\t            var offset = 0;\\n\\t            var pixelLen = pixels.length;\\n\\t            var minOpacity = this.minOpacity;\\n\\t            var maxOpacity = this.maxOpacity;\\n\\t            var diffOpacity = maxOpacity - minOpacity;\\n\\n\\t            while(offset < pixelLen) {\\n\\t                var alpha = pixels[offset + 3] / 256;\\n\\t                var gradientOffset = Math.floor(alpha * (GRADIENT_LEVELS - 1)) * 4;\\n\\t                // Simple optimize to ignore the empty data\\n\\t                if (alpha > 0) {\\n\\t                    var gradient = isInRange(alpha) ? gradientInRange : gradientOutOfRange;\\n\\t                    // Any alpha > 0 will be mapped to [minOpacity, maxOpacity]\\n\\t                    alpha > 0 && (alpha = alpha * diffOpacity + minOpacity);\\n\\t                    pixels[offset++] = gradient[gradientOffset];\\n\\t                    pixels[offset++] = gradient[gradientOffset + 1];\\n\\t                    pixels[offset++] = gradient[gradientOffset + 2];\\n\\t                    pixels[offset++] = gradient[gradientOffset + 3] * alpha * 256;\\n\\t                }\\n\\t                else {\\n\\t                    offset += 4;\\n\\t                }\\n\\t            }\\n\\t            ctx.putImageData(imageData, 0, 0);\\n\\n\\t            return canvas;\\n\\t        },\\n\\n\\t        /**\\n\\t         * get canvas of a black circle brush used for canvas to draw later\\n\\t         * @private\\n\\t         * @returns {Object} circle brush canvas\\n\\t         */\\n\\t        _getBrush: function() {\\n\\t            var brushCanvas = this._brushCanvas || (this._brushCanvas = zrUtil.createCanvas());\\n\\t            // set brush size\\n\\t            var r = this.pointSize + this.blurSize;\\n\\t            var d = r * 2;\\n\\t            brushCanvas.width = d;\\n\\t            brushCanvas.height = d;\\n\\n\\t            var ctx = brushCanvas.getContext('2d');\\n\\t            ctx.clearRect(0, 0, d, d);\\n\\n\\t            // in order to render shadow without the distinct circle,\\n\\t            // draw the distinct circle in an invisible place,\\n\\t            // and use shadowOffset to draw shadow in the center of the canvas\\n\\t            ctx.shadowOffsetX = d;\\n\\t            ctx.shadowBlur = this.blurSize;\\n\\t            // draw the shadow in black, and use alpha and shadow blur to generate\\n\\t            // color in color map\\n\\t            ctx.shadowColor = '#000';\\n\\n\\t            // draw circle in the left to the canvas\\n\\t            ctx.beginPath();\\n\\t            ctx.arc(-r, r, this.pointSize, 0, Math.PI * 2, true);\\n\\t            ctx.closePath();\\n\\t            ctx.fill();\\n\\t            return brushCanvas;\\n\\t        },\\n\\n\\t        /**\\n\\t         * get gradient color map\\n\\t         * @private\\n\\t         */\\n\\t        _getGradient: function (data, colorFunc, state) {\\n\\t            var gradientPixels = this._gradientPixels;\\n\\t            var pixelsSingleState = gradientPixels[state] || (gradientPixels[state] = new Uint8ClampedArray(256 * 4));\\n\\t            var color = [0, 0, 0, 0];\\n\\t            var off = 0;\\n\\t            for (var i = 0; i < 256; i++) {\\n\\t                colorFunc[state](i / 255, true, color);\\n\\t                pixelsSingleState[off++] = color[0];\\n\\t                pixelsSingleState[off++] = color[1];\\n\\t                pixelsSingleState[off++] = color[2];\\n\\t                pixelsSingleState[off++] = color[3];\\n\\t            }\\n\\t            return pixelsSingleState;\\n\\t        }\\n\\t    };\\n\\n\\t    module.exports = Heatmap;\\n\\n\\n\\n/***/ },\\n/* 287 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\n\\t    __webpack_require__(125);\\n\\n\\t    __webpack_require__(288);\\n\\t    __webpack_require__(289);\\n\\n\\t    var barLayoutGrid = __webpack_require__(145);\\n\\t    var echarts = __webpack_require__(1);\\n\\n\\t    echarts.registerLayout(zrUtil.curry(barLayoutGrid, 'pictorialBar'));\\n\\n\\t    echarts.registerVisual(zrUtil.curry(\\n\\t        __webpack_require__(121), 'pictorialBar', 'roundRect', null\\n\\t    ));\\n\\n\\t    // In case developer forget to include grid component\\n\\t    __webpack_require__(124);\\n\\n\\n/***/ },\\n/* 288 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var PictorialBarSeries = __webpack_require__(141).extend({\\n\\n\\t        type: 'series.pictorialBar',\\n\\n\\t        dependencies: ['grid'],\\n\\n\\t        defaultOption: {\\n\\t            symbol: 'circle',     // Customized bar shape\\n\\t            symbolSize: null,     // Can be ['100%', '100%'], null means auto.\\n\\t            symbolRotate: null,\\n\\n\\t            symbolPosition: null, // 'start' or 'end' or 'center', null means auto.\\n\\t            symbolOffset: null,\\n\\t            symbolMargin: null,   // start margin and end margin. Can be a number or a percent string.\\n\\t                                  // Auto margin by defualt.\\n\\t            symbolRepeat: false,  // false/null/undefined, means no repeat.\\n\\t                                  // Can be true, means auto calculate repeat times and cut by data.\\n\\t                                  // Can be a number, specifies repeat times, and do not cut by data.\\n\\t                                  // Can be 'fixed', means auto calculate repeat times but do not cut by data.\\n\\t            symbolRepeatDirection: 'end', // 'end' means from 'start' to 'end'.\\n\\n\\t            symbolClip: false,\\n\\t            symbolBoundingData: null, // Can be 60 or -40 or [-40, 60]\\n\\t            symbolPatternSize: 400, // 400 * 400 px\\n\\n\\t            barGap: '-100%',      // In most case, overlap is needed.\\n\\n\\t            // z can be set in data item, which is z2 actually.\\n\\n\\t            // Disable progressive\\n\\t            progressive: 0,\\n\\t            hoverAnimation: false // Open only when needed.\\n\\t        },\\n\\n\\t        getInitialData: function (option) {\\n\\t            // Disable stack.\\n\\t            option.stack = null;\\n\\t            return PictorialBarSeries.superApply(this, 'getInitialData', arguments);\\n\\t        }\\n\\t    });\\n\\n\\t    module.exports = PictorialBarSeries;\\n\\n\\n/***/ },\\n/* 289 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var graphic = __webpack_require__(18);\\n\\t    var symbolUtil = __webpack_require__(111);\\n\\t    var numberUtil = __webpack_require__(7);\\n\\t    var helper = __webpack_require__(143);\\n\\n\\t    var parsePercent = numberUtil.parsePercent;\\n\\n\\t    var BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'normal', 'borderWidth'];\\n\\n\\t    // index: +isHorizontal\\n\\t    var LAYOUT_ATTRS = [\\n\\t        {xy: 'x', wh: 'width', index: 0, posDesc: ['left', 'right']},\\n\\t        {xy: 'y', wh: 'height', index: 1, posDesc: ['top', 'bottom']}\\n\\t    ];\\n\\n\\t    var pathForLineWidth = new graphic.Circle();\\n\\n\\t    var BarView = __webpack_require__(1).extendChartView({\\n\\n\\t        type: 'pictorialBar',\\n\\n\\t        render: function (seriesModel, ecModel, api) {\\n\\t            var group = this.group;\\n\\t            var data = seriesModel.getData();\\n\\t            var oldData = this._data;\\n\\n\\t            var cartesian = seriesModel.coordinateSystem;\\n\\t            var baseAxis = cartesian.getBaseAxis();\\n\\t            var isHorizontal = !!baseAxis.isHorizontal();\\n\\t            var coordSysRect = cartesian.grid.getRect();\\n\\n\\t            var opt = {\\n\\t                ecSize: {width: api.getWidth(), height: api.getHeight()},\\n\\t                seriesModel: seriesModel,\\n\\t                coordSys: cartesian,\\n\\t                coordSysExtent: [\\n\\t                    [coordSysRect.x, coordSysRect.x + coordSysRect.width],\\n\\t                    [coordSysRect.y, coordSysRect.y + coordSysRect.height]\\n\\t                ],\\n\\t                isHorizontal: isHorizontal,\\n\\t                valueDim: LAYOUT_ATTRS[+isHorizontal],\\n\\t                categoryDim: LAYOUT_ATTRS[1 - isHorizontal]\\n\\t            };\\n\\n\\t            data.diff(oldData)\\n\\t                .add(function (dataIndex) {\\n\\t                    if (!data.hasValue(dataIndex)) {\\n\\t                        return;\\n\\t                    }\\n\\n\\t                    var itemModel = getItemModel(data, dataIndex);\\n\\t                    var symbolMeta = getSymbolMeta(data, dataIndex, itemModel, opt);\\n\\n\\t                    var bar = createBar(data, opt, symbolMeta);\\n\\n\\t                    data.setItemGraphicEl(dataIndex, bar);\\n\\t                    group.add(bar);\\n\\n\\t                    updateCommon(bar, opt, symbolMeta);\\n\\t                })\\n\\t                .update(function (newIndex, oldIndex) {\\n\\t                    var bar = oldData.getItemGraphicEl(oldIndex);\\n\\n\\t                    if (!data.hasValue(newIndex)) {\\n\\t                        group.remove(bar);\\n\\t                        return;\\n\\t                    }\\n\\n\\t                    var itemModel = getItemModel(data, newIndex);\\n\\t                    var symbolMeta = getSymbolMeta(data, newIndex, itemModel, opt);\\n\\n\\t                    var pictorialShapeStr = getShapeStr(data, symbolMeta);\\n\\t                    if (bar && pictorialShapeStr !== bar.__pictorialShapeStr) {\\n\\t                        group.remove(bar);\\n\\t                        data.setItemGraphicEl(newIndex, null);\\n\\t                        bar = null;\\n\\t                    }\\n\\n\\t                    if (bar) {\\n\\t                        updateBar(bar, opt, symbolMeta);\\n\\t                    }\\n\\t                    else {\\n\\t                        bar = createBar(data, opt, symbolMeta, true);\\n\\t                    }\\n\\n\\t                    data.setItemGraphicEl(newIndex, bar);\\n\\t                    bar.__pictorialSymbolMeta = symbolMeta;\\n\\t                    // Add back\\n\\t                    group.add(bar);\\n\\n\\t                    updateCommon(bar, opt, symbolMeta);\\n\\t                })\\n\\t                .remove(function (dataIndex) {\\n\\t                    var bar = oldData.getItemGraphicEl(dataIndex);\\n\\t                    bar && removeBar(oldData, dataIndex, bar.__pictorialSymbolMeta.animationModel, bar);\\n\\t                })\\n\\t                .execute();\\n\\n\\t            this._data = data;\\n\\n\\t            return this.group;\\n\\t        },\\n\\n\\t        dispose: zrUtil.noop,\\n\\n\\t        remove: function (ecModel, api) {\\n\\t            var group = this.group;\\n\\t            var data = this._data;\\n\\t            if (ecModel.get('animation')) {\\n\\t                if (data) {\\n\\t                    data.eachItemGraphicEl(function (bar) {\\n\\t                        removeBar(data, bar.dataIndex, ecModel, bar);\\n\\t                    });\\n\\t                }\\n\\t            }\\n\\t            else {\\n\\t                group.removeAll();\\n\\t            }\\n\\t        }\\n\\t    });\\n\\n\\n\\t    // Set or calculate default value about symbol, and calculate layout info.\\n\\t    function getSymbolMeta(data, dataIndex, itemModel, opt) {\\n\\t        var layout = data.getItemLayout(dataIndex);\\n\\t        var symbolRepeat = itemModel.get('symbolRepeat');\\n\\t        var symbolClip = itemModel.get('symbolClip');\\n\\t        var symbolPosition = itemModel.get('symbolPosition') || 'start';\\n\\t        var symbolRotate = itemModel.get('symbolRotate');\\n\\t        var rotation = (symbolRotate || 0) * Math.PI / 180 || 0;\\n\\t        var symbolPatternSize = itemModel.get('symbolPatternSize') || 2;\\n\\t        var isAnimationEnabled = itemModel.isAnimationEnabled();\\n\\n\\t        var symbolMeta = {\\n\\t            dataIndex: dataIndex,\\n\\t            layout: layout,\\n\\t            itemModel: itemModel,\\n\\t            symbolType: data.getItemVisual(dataIndex, 'symbol') || 'circle',\\n\\t            color: data.getItemVisual(dataIndex, 'color'),\\n\\t            symbolClip: symbolClip,\\n\\t            symbolRepeat: symbolRepeat,\\n\\t            symbolRepeatDirection: itemModel.get('symbolRepeatDirection'),\\n\\t            symbolPatternSize: symbolPatternSize,\\n\\t            rotation: rotation,\\n\\t            animationModel: isAnimationEnabled ? itemModel : null,\\n\\t            hoverAnimation: isAnimationEnabled && itemModel.get('hoverAnimation'),\\n\\t            z2: itemModel.getShallow('z', true) || 0\\n\\t        };\\n\\n\\t        prepareBarLength(itemModel, symbolRepeat, layout, opt, symbolMeta);\\n\\n\\t        prepareSymbolSize(\\n\\t            data, dataIndex, layout, symbolRepeat, symbolClip, symbolMeta.boundingLength,\\n\\t            symbolMeta.pxSign, symbolPatternSize, opt, symbolMeta\\n\\t        );\\n\\n\\t        prepareLineWidth(itemModel, symbolMeta.symbolScale, rotation, opt, symbolMeta);\\n\\n\\t        var symbolSize = symbolMeta.symbolSize;\\n\\t        var symbolOffset = itemModel.get('symbolOffset');\\n\\t        if (zrUtil.isArray(symbolOffset)) {\\n\\t            symbolOffset = [\\n\\t                parsePercent(symbolOffset[0], symbolSize[0]),\\n\\t                parsePercent(symbolOffset[1], symbolSize[1])\\n\\t            ];\\n\\t        }\\n\\n\\t        prepareLayoutInfo(\\n\\t            itemModel, symbolSize, layout, symbolRepeat, symbolClip, symbolOffset,\\n\\t            symbolPosition, symbolMeta.valueLineWidth, symbolMeta.boundingLength, symbolMeta.repeatCutLength,\\n\\t            opt, symbolMeta\\n\\t        );\\n\\n\\t        return symbolMeta;\\n\\t    }\\n\\n\\t    // bar length can be negative.\\n\\t    function prepareBarLength(itemModel, symbolRepeat, layout, opt, output) {\\n\\t        var valueDim = opt.valueDim;\\n\\t        var symbolBoundingData = itemModel.get('symbolBoundingData');\\n\\t        var valueAxis = opt.coordSys.getOtherAxis(opt.coordSys.getBaseAxis());\\n\\t        var zeroPx = valueAxis.toGlobalCoord(valueAxis.dataToCoord(0));\\n\\t        var pxSignIdx = 1 - +(layout[valueDim.wh] <= 0);\\n\\t        var boundingLength;\\n\\n\\t        if (zrUtil.isArray(symbolBoundingData)) {\\n\\t            var symbolBoundingExtent = [\\n\\t                convertToCoordOnAxis(valueAxis, symbolBoundingData[0]) - zeroPx,\\n\\t                convertToCoordOnAxis(valueAxis, symbolBoundingData[1]) - zeroPx\\n\\t            ];\\n\\t            symbolBoundingExtent[1] < symbolBoundingExtent[0] && (symbolBoundingExtent.reverse());\\n\\t            boundingLength = symbolBoundingExtent[pxSignIdx];\\n\\t        }\\n\\t        else if (symbolBoundingData != null) {\\n\\t            boundingLength = convertToCoordOnAxis(valueAxis, symbolBoundingData) - zeroPx;\\n\\t        }\\n\\t        else if (symbolRepeat) {\\n\\t            boundingLength = opt.coordSysExtent[valueDim.index][pxSignIdx] - zeroPx;\\n\\t        }\\n\\t        else {\\n\\t            boundingLength = layout[valueDim.wh];\\n\\t        }\\n\\n\\t        output.boundingLength = boundingLength;\\n\\n\\t        if (symbolRepeat) {\\n\\t            output.repeatCutLength = layout[valueDim.wh];\\n\\t        }\\n\\n\\t        output.pxSign = boundingLength > 0 ? 1 : boundingLength < 0 ? -1 : 0;\\n\\t    }\\n\\n\\t    function convertToCoordOnAxis(axis, value) {\\n\\t        return axis.toGlobalCoord(axis.dataToCoord(axis.scale.parse(value)));\\n\\t    }\\n\\n\\t    // Support ['100%', '100%']\\n\\t    function prepareSymbolSize(\\n\\t        data, dataIndex, layout, symbolRepeat, symbolClip, boundingLength,\\n\\t        pxSign, symbolPatternSize, opt, output\\n\\t    ) {\\n\\t        var valueDim = opt.valueDim;\\n\\t        var categoryDim = opt.categoryDim;\\n\\t        var categorySize = Math.abs(layout[categoryDim.wh]);\\n\\n\\t        var symbolSize = data.getItemVisual(dataIndex, 'symbolSize');\\n\\t        if (zrUtil.isArray(symbolSize)) {\\n\\t            symbolSize = symbolSize.slice();\\n\\t        }\\n\\t        else {\\n\\t            if (symbolSize == null) {\\n\\t                symbolSize = '100%';\\n\\t            }\\n\\t            symbolSize = [symbolSize, symbolSize];\\n\\t        }\\n\\n\\t        // Note: percentage symbolSize (like '100%') do not consider lineWidth, because it is\\n\\t        // to complicated to calculate real percent value if considering scaled lineWidth.\\n\\t        // So the actual size will bigger than layout size if lineWidth is bigger than zero,\\n\\t        // which can be tolerated in pictorial chart.\\n\\n\\t        symbolSize[categoryDim.index] = parsePercent(\\n\\t            symbolSize[categoryDim.index],\\n\\t            categorySize\\n\\t        );\\n\\t        symbolSize[valueDim.index] = parsePercent(\\n\\t            symbolSize[valueDim.index],\\n\\t            symbolRepeat ? categorySize : Math.abs(boundingLength)\\n\\t        );\\n\\n\\t        output.symbolSize = symbolSize;\\n\\n\\t        // If x or y is less than zero, show reversed shape.\\n\\t        var symbolScale = output.symbolScale = [\\n\\t            symbolSize[0] / symbolPatternSize,\\n\\t            symbolSize[1] / symbolPatternSize\\n\\t        ];\\n\\t        // Follow convention, 'right' and 'top' is the normal scale.\\n\\t        symbolScale[valueDim.index] *= (opt.isHorizontal ? -1 : 1) * pxSign;\\n\\t    }\\n\\n\\t    function prepareLineWidth(itemModel, symbolScale, rotation, opt, output) {\\n\\t        // In symbols are drawn with scale, so do not need to care about the case that width\\n\\t        // or height are too small. But symbol use strokeNoScale, where acture lineWidth should\\n\\t        // be calculated.\\n\\t        var valueLineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0;\\n\\n\\t        if (valueLineWidth) {\\n\\t            pathForLineWidth.attr({\\n\\t                scale: symbolScale.slice(),\\n\\t                rotation: rotation\\n\\t            });\\n\\t            pathForLineWidth.updateTransform();\\n\\t            valueLineWidth /= pathForLineWidth.getLineScale();\\n\\t            valueLineWidth *= symbolScale[opt.valueDim.index];\\n\\t        }\\n\\n\\t        output.valueLineWidth = valueLineWidth;\\n\\t    }\\n\\n\\t    function prepareLayoutInfo(\\n\\t        itemModel, symbolSize, layout, symbolRepeat, symbolClip, symbolOffset,\\n\\t        symbolPosition, valueLineWidth, boundingLength, repeatCutLength, opt, output\\n\\t    ) {\\n\\t        var categoryDim = opt.categoryDim;\\n\\t        var valueDim = opt.valueDim;\\n\\t        var pxSign = output.pxSign;\\n\\n\\t        var unitLength = Math.max(symbolSize[valueDim.index] + valueLineWidth, 0);\\n\\t        var pathLen = unitLength;\\n\\n\\t        // Note: rotation will not effect the layout of symbols, because user may\\n\\t        // want symbols to rotate on its center, which should not be translated\\n\\t        // when rotating.\\n\\n\\t        if (symbolRepeat) {\\n\\t            var absBoundingLength = Math.abs(boundingLength);\\n\\n\\t            var symbolMargin = zrUtil.retrieve(itemModel.get('symbolMargin'), '15%') + '';\\n\\t            var hasEndGap = false;\\n\\t            if (symbolMargin.lastIndexOf('!') === symbolMargin.length - 1) {\\n\\t                hasEndGap = true;\\n\\t                symbolMargin = symbolMargin.slice(0, symbolMargin.length - 1);\\n\\t            }\\n\\t            symbolMargin = parsePercent(symbolMargin, symbolSize[valueDim.index]);\\n\\n\\t            var uLenWithMargin = Math.max(unitLength + symbolMargin * 2, 0);\\n\\n\\t            // When symbol margin is less than 0, margin at both ends will be subtracted\\n\\t            // to ensure that all of the symbols will not be overflow the given area.\\n\\t            var endFix = hasEndGap ? 0 : symbolMargin * 2;\\n\\n\\t            // Both final repeatTimes and final symbolMargin area calculated based on\\n\\t            // boundingLength.\\n\\t            var repeatSpecified = numberUtil.isNumeric(symbolRepeat);\\n\\t            var repeatTimes = repeatSpecified\\n\\t                ? symbolRepeat\\n\\t                : toIntTimes((absBoundingLength + endFix) / uLenWithMargin);\\n\\n\\t            // Adjust calculate margin, to ensure each symbol is displayed\\n\\t            // entirely in the given layout area.\\n\\t            var mDiff = absBoundingLength - repeatTimes * unitLength;\\n\\t            symbolMargin = mDiff / 2 / (hasEndGap ? repeatTimes : repeatTimes - 1);\\n\\t            uLenWithMargin = unitLength + symbolMargin * 2;\\n\\t            endFix = hasEndGap ? 0 : symbolMargin * 2;\\n\\n\\t            // Update repeatTimes when not all symbol will be shown.\\n\\t            if (!repeatSpecified && symbolRepeat !== 'fixed') {\\n\\t                repeatTimes = repeatCutLength\\n\\t                    ? toIntTimes((Math.abs(repeatCutLength) + endFix) / uLenWithMargin)\\n\\t                    : 0;\\n\\t            }\\n\\n\\t            pathLen = repeatTimes * uLenWithMargin - endFix;\\n\\t            output.repeatTimes = repeatTimes;\\n\\t            output.symbolMargin = symbolMargin;\\n\\t        }\\n\\n\\t        var sizeFix = pxSign * (pathLen / 2);\\n\\t        var pathPosition = output.pathPosition = [];\\n\\t        pathPosition[categoryDim.index] = layout[categoryDim.wh] / 2;\\n\\t        pathPosition[valueDim.index] = symbolPosition === 'start'\\n\\t            ? sizeFix\\n\\t            : symbolPosition === 'end'\\n\\t            ? boundingLength - sizeFix\\n\\t            : boundingLength / 2; // 'center'\\n\\t        if (symbolOffset) {\\n\\t            pathPosition[0] += symbolOffset[0];\\n\\t            pathPosition[1] += symbolOffset[1];\\n\\t        }\\n\\n\\t        var bundlePosition = output.bundlePosition = [];\\n\\t        bundlePosition[categoryDim.index] = layout[categoryDim.xy];\\n\\t        bundlePosition[valueDim.index] = layout[valueDim.xy];\\n\\n\\t        var barRectShape = output.barRectShape = zrUtil.extend({}, layout);\\n\\t        barRectShape[valueDim.wh] = pxSign * Math.max(\\n\\t            Math.abs(layout[valueDim.wh]), Math.abs(pathPosition[valueDim.index] + sizeFix)\\n\\t        );\\n\\t        barRectShape[categoryDim.wh] = layout[categoryDim.wh];\\n\\n\\t        var clipShape = output.clipShape = {};\\n\\t        // Consider that symbol may be overflow layout rect.\\n\\t        clipShape[categoryDim.xy] = -layout[categoryDim.xy];\\n\\t        clipShape[categoryDim.wh] = opt.ecSize[categoryDim.wh];\\n\\t        clipShape[valueDim.xy] = 0;\\n\\t        clipShape[valueDim.wh] = layout[valueDim.wh];\\n\\t    }\\n\\n\\t    function createPath(symbolMeta) {\\n\\t        var symbolPatternSize = symbolMeta.symbolPatternSize;\\n\\t        var path = symbolUtil.createSymbol(\\n\\t            // Consider texture img, make a big size.\\n\\t            symbolMeta.symbolType,\\n\\t            -symbolPatternSize / 2,\\n\\t            -symbolPatternSize / 2,\\n\\t            symbolPatternSize,\\n\\t            symbolPatternSize,\\n\\t            symbolMeta.color\\n\\t        );\\n\\t        path.attr({\\n\\t            culling: true\\n\\t        });\\n\\t        path.type !== 'image' && path.setStyle({\\n\\t            strokeNoScale: true\\n\\t        });\\n\\n\\t        return path;\\n\\t    }\\n\\n\\t    function createOrUpdateRepeatSymbols(bar, opt, symbolMeta, isUpdate) {\\n\\t        var bundle = bar.__pictorialBundle;\\n\\t        var symbolSize = symbolMeta.symbolSize;\\n\\t        var valueLineWidth = symbolMeta.valueLineWidth;\\n\\t        var pathPosition = symbolMeta.pathPosition;\\n\\t        var valueDim = opt.valueDim;\\n\\t        var repeatTimes = symbolMeta.repeatTimes || 0;\\n\\n\\t        var index = 0;\\n\\t        var unit = symbolSize[opt.valueDim.index] + valueLineWidth + symbolMeta.symbolMargin * 2;\\n\\n\\t        eachPath(bar, function (path) {\\n\\t            path.__pictorialAnimationIndex = index;\\n\\t            path.__pictorialRepeatTimes = repeatTimes;\\n\\t            if (index < repeatTimes) {\\n\\t                updateAttr(path, null, makeTarget(index), symbolMeta, isUpdate);\\n\\t            }\\n\\t            else {\\n\\t                updateAttr(path, null, {scale: [0, 0]}, symbolMeta, isUpdate, function () {\\n\\t                    bundle.remove(path);\\n\\t                });\\n\\t            }\\n\\n\\t            updateHoverAnimation(path, symbolMeta);\\n\\n\\t            index++;\\n\\t        });\\n\\n\\t        for (; index < repeatTimes; index++) {\\n\\t            var path = createPath(symbolMeta);\\n\\t            path.__pictorialAnimationIndex = index;\\n\\t            path.__pictorialRepeatTimes = repeatTimes;\\n\\t            bundle.add(path);\\n\\n\\t            var target = makeTarget(index, true);\\n\\n\\t            updateAttr(\\n\\t                path,\\n\\t                {\\n\\t                    position: target.position,\\n\\t                    scale: [0, 0]\\n\\t                },\\n\\t                {\\n\\t                    scale: target.scale,\\n\\t                    rotation: target.rotation\\n\\t                },\\n\\t                symbolMeta,\\n\\t                isUpdate\\n\\t            );\\n\\n\\t            // FIXME\\n\\t            // If all emphasis/normal through action.\\n\\t            path\\n\\t                .on('mouseover', onMouseOver)\\n\\t                .on('mouseout', onMouseOut);\\n\\n\\t            updateHoverAnimation(path, symbolMeta);\\n\\t        }\\n\\n\\t        function makeTarget(index) {\\n\\t            var position = pathPosition.slice();\\n\\t            // (start && pxSign > 0) || (end && pxSign < 0): i = repeatTimes - index\\n\\t            // Otherwise: i = index;\\n\\t            var pxSign = symbolMeta.pxSign;\\n\\t            var i = index;\\n\\t            if (symbolMeta.symbolRepeatDirection === 'start' ? pxSign > 0 : pxSign < 0) {\\n\\t                i = repeatTimes - 1 - index;\\n\\t            }\\n\\t            position[valueDim.index] = unit * (i - repeatTimes / 2 + 0.5) + pathPosition[valueDim.index];\\n\\n\\t            return {\\n\\t                position: position,\\n\\t                scale: symbolMeta.symbolScale.slice(),\\n\\t                rotation: symbolMeta.rotation\\n\\t            };\\n\\t        }\\n\\n\\t        function onMouseOver() {\\n\\t            eachPath(bar, function (path) {\\n\\t                path.trigger('emphasis');\\n\\t            });\\n\\t        }\\n\\n\\t        function onMouseOut() {\\n\\t            eachPath(bar, function (path) {\\n\\t                path.trigger('normal');\\n\\t            });\\n\\t        }\\n\\t    }\\n\\n\\t    function createOrUpdateSingleSymbol(bar, opt, symbolMeta, isUpdate) {\\n\\t        var bundle = bar.__pictorialBundle;\\n\\t        var mainPath = bar.__pictorialMainPath;\\n\\n\\t        if (!mainPath) {\\n\\t            mainPath = bar.__pictorialMainPath = createPath(symbolMeta);\\n\\t            bundle.add(mainPath);\\n\\n\\t            updateAttr(\\n\\t                mainPath,\\n\\t                {\\n\\t                    position: symbolMeta.pathPosition.slice(),\\n\\t                    scale: [0, 0],\\n\\t                    rotation: symbolMeta.rotation\\n\\t                },\\n\\t                {\\n\\t                    scale: symbolMeta.symbolScale.slice()\\n\\t                },\\n\\t                symbolMeta,\\n\\t                isUpdate\\n\\t            );\\n\\n\\t            mainPath\\n\\t                .on('mouseover', onMouseOver)\\n\\t                .on('mouseout', onMouseOut);\\n\\t        }\\n\\t        else {\\n\\t            updateAttr(\\n\\t                mainPath,\\n\\t                null,\\n\\t                {\\n\\t                    position: symbolMeta.pathPosition.slice(),\\n\\t                    scale: symbolMeta.symbolScale.slice(),\\n\\t                    rotation: symbolMeta.rotation\\n\\t                },\\n\\t                symbolMeta,\\n\\t                isUpdate\\n\\t            );\\n\\t        }\\n\\n\\t        updateHoverAnimation(mainPath, symbolMeta);\\n\\n\\t        function onMouseOver() {\\n\\t            this.trigger('emphasis');\\n\\t        }\\n\\n\\t        function onMouseOut() {\\n\\t            this.trigger('normal');\\n\\t        }\\n\\t    }\\n\\n\\t    // bar rect is used for label.\\n\\t    function createOrUpdateBarRect(bar, symbolMeta, isUpdate) {\\n\\t        var rectShape = zrUtil.extend({}, symbolMeta.barRectShape);\\n\\n\\t        var barRect = bar.__pictorialBarRect;\\n\\t        if (!barRect) {\\n\\t            barRect = bar.__pictorialBarRect = new graphic.Rect({\\n\\t                z2: 2,\\n\\t                shape: rectShape,\\n\\t                silent: true,\\n\\t                style: {\\n\\t                    stroke: 'transparent',\\n\\t                    fill: 'transparent',\\n\\t                    lineWidth: 0\\n\\t                }\\n\\t            });\\n\\n\\t            bar.add(barRect);\\n\\t        }\\n\\t        else {\\n\\t            updateAttr(barRect, null, {shape: rectShape}, symbolMeta, isUpdate);\\n\\t        }\\n\\t    }\\n\\n\\t    function createOrUpdateClip(bar, opt, symbolMeta, isUpdate) {\\n\\t        // If not clip, symbol will be remove and rebuilt.\\n\\t        if (symbolMeta.symbolClip) {\\n\\t            var clipPath = bar.__pictorialClipPath;\\n\\t            var clipShape = zrUtil.extend({}, symbolMeta.clipShape);\\n\\t            var valueDim = opt.valueDim;\\n\\t            var animationModel = symbolMeta.animationModel;\\n\\t            var dataIndex = symbolMeta.dataIndex;\\n\\n\\t            if (clipPath) {\\n\\t                graphic.updateProps(\\n\\t                    clipPath, {shape: clipShape}, animationModel, dataIndex\\n\\t                );\\n\\t            }\\n\\t            else {\\n\\t                clipShape[valueDim.wh] = 0;\\n\\t                clipPath = new graphic.Rect({shape: clipShape});\\n\\t                bar.__pictorialBundle.setClipPath(clipPath);\\n\\t                bar.__pictorialClipPath = clipPath;\\n\\n\\t                var target = {};\\n\\t                target[valueDim.wh] = symbolMeta.clipShape[valueDim.wh];\\n\\n\\t                graphic[isUpdate ? 'updateProps' : 'initProps'](\\n\\t                    clipPath, {shape: target}, animationModel, dataIndex\\n\\t                );\\n\\t            }\\n\\t        }\\n\\t    }\\n\\n\\t    function getItemModel(data, dataIndex) {\\n\\t        var itemModel = data.getItemModel(dataIndex);\\n\\t        itemModel.getAnimationDelayParams = getAnimationDelayParams;\\n\\t        itemModel.isAnimationEnabled = isAnimationEnabled;\\n\\t        return itemModel;\\n\\t    }\\n\\n\\t    function getAnimationDelayParams(path) {\\n\\t        // The order is the same as the z-order, see `symbolRepeatDiretion`.\\n\\t        return {\\n\\t            index: path.__pictorialAnimationIndex,\\n\\t            count: path.__pictorialRepeatTimes\\n\\t        };\\n\\t    }\\n\\n\\t    function isAnimationEnabled() {\\n\\t        // `animation` prop can be set on itemModel in pictorial bar chart.\\n\\t        return this.parentModel.isAnimationEnabled() && !!this.getShallow('animation');\\n\\t    }\\n\\n\\t    function updateHoverAnimation(path, symbolMeta) {\\n\\t        path.off('emphasis').off('normal');\\n\\n\\t        var scale = symbolMeta.symbolScale.slice();\\n\\n\\t        symbolMeta.hoverAnimation && path\\n\\t            .on('emphasis', function() {\\n\\t                this.animateTo({\\n\\t                    scale: [scale[0] * 1.1, scale[1] * 1.1]\\n\\t                }, 400, 'elasticOut');\\n\\t            })\\n\\t            .on('normal', function() {\\n\\t                this.animateTo({\\n\\t                    scale: scale.slice()\\n\\t                }, 400, 'elasticOut');\\n\\t            });\\n\\t    }\\n\\n\\t    function createBar(data, opt, symbolMeta, isUpdate) {\\n\\t        // bar is the main element for each data.\\n\\t        var bar = new graphic.Group();\\n\\t        // bundle is used for location and clip.\\n\\t        var bundle = new graphic.Group();\\n\\t        bar.add(bundle);\\n\\t        bar.__pictorialBundle = bundle;\\n\\t        bundle.attr('position', symbolMeta.bundlePosition.slice());\\n\\n\\t        if (symbolMeta.symbolRepeat) {\\n\\t            createOrUpdateRepeatSymbols(bar, opt, symbolMeta);\\n\\t        }\\n\\t        else {\\n\\t            createOrUpdateSingleSymbol(bar, opt, symbolMeta);\\n\\t        }\\n\\n\\t        createOrUpdateBarRect(bar, symbolMeta, isUpdate);\\n\\n\\t        createOrUpdateClip(bar, opt, symbolMeta, isUpdate);\\n\\n\\t        bar.__pictorialShapeStr = getShapeStr(data, symbolMeta);\\n\\t        bar.__pictorialSymbolMeta = symbolMeta;\\n\\n\\t        return bar;\\n\\t    }\\n\\n\\t    function updateBar(bar, opt, symbolMeta) {\\n\\t        var animationModel = symbolMeta.animationModel;\\n\\t        var dataIndex = symbolMeta.dataIndex;\\n\\t        var bundle = bar.__pictorialBundle;\\n\\n\\t        graphic.updateProps(\\n\\t            bundle, {position: symbolMeta.bundlePosition.slice()}, animationModel, dataIndex\\n\\t        );\\n\\n\\t        if (symbolMeta.symbolRepeat) {\\n\\t            createOrUpdateRepeatSymbols(bar, opt, symbolMeta, true);\\n\\t        }\\n\\t        else {\\n\\t            createOrUpdateSingleSymbol(bar, opt, symbolMeta, true);\\n\\t        }\\n\\n\\t        createOrUpdateBarRect(bar, symbolMeta, true);\\n\\n\\t        createOrUpdateClip(bar, opt, symbolMeta, true);\\n\\t    }\\n\\n\\t    function removeBar(data, dataIndex, animationModel, bar) {\\n\\t        // Not show text when animating\\n\\t        var labelRect = bar.__pictorialBarRect;\\n\\t        labelRect && (labelRect.style.text = '');\\n\\n\\t        var pathes = [];\\n\\t        eachPath(bar, function (path) {\\n\\t            pathes.push(path);\\n\\t        });\\n\\t        bar.__pictorialMainPath && pathes.push(bar.__pictorialMainPath);\\n\\n\\t        // I do not find proper remove animation for clip yet.\\n\\t        bar.__pictorialClipPath && (animationModel = null);\\n\\n\\t        zrUtil.each(pathes, function (path) {\\n\\t            graphic.updateProps(\\n\\t                path, {scale: [0, 0]}, animationModel, dataIndex,\\n\\t                function () {\\n\\t                    bar.parent && bar.parent.remove(bar);\\n\\t                }\\n\\t            );\\n\\t        });\\n\\n\\t        data.setItemGraphicEl(dataIndex, null);\\n\\t    }\\n\\n\\t    function getShapeStr(data, symbolMeta) {\\n\\t        return [\\n\\t            data.getItemVisual(symbolMeta.dataIndex, 'symbol') || 'none',\\n\\t            !!symbolMeta.symbolRepeat,\\n\\t            !!symbolMeta.symbolClip\\n\\t        ].join(':');\\n\\t    }\\n\\n\\t    function eachPath(bar, cb, context) {\\n\\t        // Do not use Group#eachChild, because it do not support remove.\\n\\t        zrUtil.each(bar.__pictorialBundle.children(), function (el) {\\n\\t            el !== bar.__pictorialBarRect && cb.call(context, el);\\n\\t        });\\n\\t    }\\n\\n\\t    function updateAttr(el, immediateAttrs, animationAttrs, symbolMeta, isUpdate, cb) {\\n\\t        immediateAttrs && el.attr(immediateAttrs);\\n\\t        // when symbolCip used, only clip path has init animation, otherwise it would be weird effect.\\n\\t        if (symbolMeta.symbolClip && !isUpdate) {\\n\\t            animationAttrs && el.attr(animationAttrs);\\n\\t        }\\n\\t        else {\\n\\t            animationAttrs && graphic[isUpdate ? 'updateProps' : 'initProps'](\\n\\t                el, animationAttrs, symbolMeta.animationModel, symbolMeta.dataIndex, cb\\n\\t            );\\n\\t        }\\n\\t    }\\n\\n\\t    function updateCommon(bar, opt, symbolMeta) {\\n\\t        var color = symbolMeta.color;\\n\\t        var dataIndex = symbolMeta.dataIndex;\\n\\t        var itemModel = symbolMeta.itemModel;\\n\\t        // Color must be excluded.\\n\\t        // Because symbol provide setColor individually to set fill and stroke\\n\\t        var normalStyle = itemModel.getModel('itemStyle.normal').getItemStyle(['color']);\\n\\t        var hoverStyle = itemModel.getModel('itemStyle.emphasis').getItemStyle();\\n\\t        var cursorStyle = itemModel.getShallow('cursor');\\n\\n\\t        eachPath(bar, function (path) {\\n\\t            // PENDING setColor should be before setStyle!!!\\n\\t            path.setColor(color);\\n\\t            path.setStyle(zrUtil.defaults(\\n\\t                {\\n\\t                    fill: color,\\n\\t                    opacity: symbolMeta.opacity\\n\\t                },\\n\\t                normalStyle\\n\\t            ));\\n\\t            graphic.setHoverStyle(path, hoverStyle);\\n\\n\\t            cursorStyle && (path.cursor = cursorStyle);\\n\\t            path.z2 = symbolMeta.z2;\\n\\t        });\\n\\n\\t        var barRectHoverStyle = {};\\n\\t        var barPositionOutside = opt.valueDim.posDesc[+(symbolMeta.boundingLength > 0)];\\n\\t        var barRect = bar.__pictorialBarRect;\\n\\n\\t        helper.setLabel(\\n\\t            barRect.style, barRectHoverStyle, itemModel,\\n\\t            color, opt.seriesModel, dataIndex, barPositionOutside\\n\\t        );\\n\\n\\t        graphic.setHoverStyle(barRect, barRectHoverStyle);\\n\\t    }\\n\\n\\t    function toIntTimes(times) {\\n\\t        var roundedTimes = Math.round(times);\\n\\t        // Escapse accurate error\\n\\t        return Math.abs(times - roundedTimes) < 1e-4\\n\\t            ? roundedTimes\\n\\t            : Math.ceil(times);\\n\\t    }\\n\\n\\t    module.exports = BarView;\\n\\n\\n/***/ },\\n/* 290 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var echarts = __webpack_require__(1);\\n\\t    var zrUtil = __webpack_require__(4);\\n\\n\\t    __webpack_require__(291);\\n\\n\\t    __webpack_require__(308);\\n\\n\\t    __webpack_require__(309);\\n\\n\\t    echarts.registerLayout(__webpack_require__(311));\\n\\n\\t    echarts.registerVisual(__webpack_require__(312));\\n\\n\\t    echarts.registerProcessor(\\n\\t        zrUtil.curry(__webpack_require__(154), 'themeRiver')\\n\\t    );\\n\\n\\n/***/ },\\n/* 291 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    __webpack_require__(292);\\n\\t    __webpack_require__(295);\\n\\t    __webpack_require__(297);\\n\\t    __webpack_require__(298);\\n\\n\\t    __webpack_require__(307);\\n\\n\\t    var echarts = __webpack_require__(1);\\n\\n\\t    echarts.extendComponentView({\\n\\t        type: 'single'\\n\\t    });\\n\\n\\n\\n/***/ },\\n/* 292 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * Single coordinate system creator.\\n\\t */\\n\\n\\n\\t    var Single = __webpack_require__(293);\\n\\n\\t    /**\\n\\t     * Create single coordinate system and inject it into seriesModel.\\n\\t     *\\n\\t     * @param {module:echarts/model/Global} ecModel\\n\\t     * @param {module:echarts/ExtensionAPI} api\\n\\t     * @return {Array.<module:echarts/coord/single/Single>}\\n\\t     */\\n\\t    function create(ecModel, api) {\\n\\t        var singles = [];\\n\\n\\t        ecModel.eachComponent('singleAxis', function(axisModel, idx) {\\n\\n\\t            var single = new Single(axisModel, ecModel, api);\\n\\t            single.name = 'single_' + idx;\\n\\t            single.resize(axisModel, api);\\n\\t            axisModel.coordinateSystem = single;\\n\\t            singles.push(single);\\n\\n\\t        });\\n\\n\\t        ecModel.eachSeries(function (seriesModel) {\\n\\t            if (seriesModel.get('coordinateSystem') === 'singleAxis') {\\n\\t                var singleAxisModel = ecModel.queryComponents({\\n\\t                    mainType: 'singleAxis',\\n\\t                    index: seriesModel.get('singleAxisIndex'),\\n\\t                    id: seriesModel.get('singleAxisId')\\n\\t                })[0];\\n\\t                seriesModel.coordinateSystem = singleAxisModel && singleAxisModel.coordinateSystem;\\n\\t            }\\n\\t        });\\n\\n\\t        return singles;\\n\\t    }\\n\\n\\t    __webpack_require__(76).register('single', {\\n\\t        create: create,\\n\\t        dimensions: Single.prototype.dimensions\\n\\t    });\\n\\n\\n/***/ },\\n/* 293 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * Single coordinates system.\\n\\t */\\n\\n\\n\\t    var SingleAxis = __webpack_require__(294);\\n\\t    var axisHelper = __webpack_require__(101);\\n\\t    var layout = __webpack_require__(71);\\n\\n\\t    /**\\n\\t     * Create a single coordinates system.\\n\\t     *\\n\\t     * @param {module:echarts/coord/single/AxisModel} axisModel\\n\\t     * @param {module:echarts/model/Global} ecModel\\n\\t     * @param {module:echarts/ExtensionAPI} api\\n\\t     */\\n\\t    function Single(axisModel, ecModel, api) {\\n\\n\\t        /**\\n\\t         * @type {string}\\n\\t         * @readOnly\\n\\t         */\\n\\t        this.dimension = 'single';\\n\\n\\t        /**\\n\\t         * Add it just for draw tooltip.\\n\\t         *\\n\\t         * @type {Array.<string>}\\n\\t         * @readOnly\\n\\t         */\\n\\t        this.dimensions = ['single'];\\n\\n\\t        /**\\n\\t         * @private\\n\\t         * @type {module:echarts/coord/single/SingleAxis}.\\n\\t         */\\n\\t        this._axis = null;\\n\\n\\t        /**\\n\\t         * @private\\n\\t         * @type {module:zrender/core/BoundingRect}\\n\\t         */\\n\\t        this._rect;\\n\\n\\t        this._init(axisModel, ecModel, api);\\n\\n\\t        /**\\n\\t         * @type {module:echarts/coord/single/AxisModel}\\n\\t         */\\n\\t        this.model = axisModel;\\n\\t    }\\n\\n\\t    Single.prototype = {\\n\\n\\t        type: 'singleAxis',\\n\\n\\t        axisPointerEnabled: true,\\n\\n\\t        constructor: Single,\\n\\n\\t        /**\\n\\t         * Initialize single coordinate system.\\n\\t         *\\n\\t         * @param  {module:echarts/coord/single/AxisModel} axisModel\\n\\t         * @param  {module:echarts/model/Global} ecModel\\n\\t         * @param  {module:echarts/ExtensionAPI} api\\n\\t         * @private\\n\\t         */\\n\\t        _init: function (axisModel, ecModel, api) {\\n\\n\\t            var dim = this.dimension;\\n\\n\\t            var axis = new SingleAxis(\\n\\t                dim,\\n\\t                axisHelper.createScaleByModel(axisModel),\\n\\t                [0, 0],\\n\\t                axisModel.get('type'),\\n\\t                axisModel.get('position')\\n\\t            );\\n\\n\\t            var isCategory = axis.type === 'category';\\n\\t            axis.onBand = isCategory && axisModel.get('boundaryGap');\\n\\t            axis.inverse = axisModel.get('inverse');\\n\\t            axis.orient = axisModel.get('orient');\\n\\n\\t            axisModel.axis = axis;\\n\\t            axis.model = axisModel;\\n\\t            axis.coordinateSystem = this;\\n\\t            this._axis = axis;\\n\\t        },\\n\\n\\t        /**\\n\\t         * Update axis scale after data processed\\n\\t         * @param  {module:echarts/model/Global} ecModel\\n\\t         * @param  {module:echarts/ExtensionAPI} api\\n\\t         */\\n\\t        update: function (ecModel, api) {\\n\\t            ecModel.eachSeries(function (seriesModel) {\\n\\t                if (seriesModel.coordinateSystem === this) {\\n\\t                    var data = seriesModel.getData();\\n\\t                    var dim = this.dimension;\\n\\t                    this._axis.scale.unionExtentFromData(\\n\\t                        data, seriesModel.coordDimToDataDim(dim)\\n\\t                    );\\n\\t                    axisHelper.niceScaleExtent(this._axis.scale, this._axis.model);\\n\\t                }\\n\\t            }, this);\\n\\t        },\\n\\n\\t        /**\\n\\t         * Resize the single coordinate system.\\n\\t         *\\n\\t         * @param  {module:echarts/coord/single/AxisModel} axisModel\\n\\t         * @param  {module:echarts/ExtensionAPI} api\\n\\t         */\\n\\t        resize: function (axisModel, api) {\\n\\t            this._rect = layout.getLayoutRect(\\n\\t                {\\n\\t                    left: axisModel.get('left'),\\n\\t                    top: axisModel.get('top'),\\n\\t                    right: axisModel.get('right'),\\n\\t                    bottom: axisModel.get('bottom'),\\n\\t                    width: axisModel.get('width'),\\n\\t                    height: axisModel.get('height')\\n\\t                },\\n\\t                {\\n\\t                    width: api.getWidth(),\\n\\t                    height: api.getHeight()\\n\\t                }\\n\\t            );\\n\\n\\t            this._adjustAxis();\\n\\t        },\\n\\n\\t        /**\\n\\t         * @return {module:zrender/core/BoundingRect}\\n\\t         */\\n\\t        getRect: function () {\\n\\t            return this._rect;\\n\\t        },\\n\\n\\t        /**\\n\\t         * @private\\n\\t         */\\n\\t        _adjustAxis: function () {\\n\\n\\t            var rect = this._rect;\\n\\t            var axis = this._axis;\\n\\n\\t            var isHorizontal = axis.isHorizontal();\\n\\t            var extent = isHorizontal ? [0, rect.width] : [0, rect.height];\\n\\t            var idx =  axis.reverse ? 1 : 0;\\n\\n\\t            axis.setExtent(extent[idx], extent[1 - idx]);\\n\\n\\t            this._updateAxisTransform(axis, isHorizontal ? rect.x : rect.y);\\n\\n\\t        },\\n\\n\\t        /**\\n\\t         * @param  {module:echarts/coord/single/SingleAxis} axis\\n\\t         * @param  {number} coordBase\\n\\t         */\\n\\t        _updateAxisTransform: function (axis, coordBase) {\\n\\n\\t            var axisExtent = axis.getExtent();\\n\\t            var extentSum = axisExtent[0] + axisExtent[1];\\n\\t            var isHorizontal = axis.isHorizontal();\\n\\n\\t            axis.toGlobalCoord = isHorizontal\\n\\t                ? function (coord) {\\n\\t                    return coord + coordBase;\\n\\t                }\\n\\t                : function (coord) {\\n\\t                    return extentSum - coord + coordBase;\\n\\t                };\\n\\n\\t            axis.toLocalCoord = isHorizontal\\n\\t                ? function (coord) {\\n\\t                    return coord - coordBase;\\n\\t                }\\n\\t                : function (coord) {\\n\\t                    return extentSum - coord + coordBase;\\n\\t                };\\n\\t        },\\n\\n\\t        /**\\n\\t         * Get axis.\\n\\t         *\\n\\t         * @return {module:echarts/coord/single/SingleAxis}\\n\\t         */\\n\\t        getAxis: function () {\\n\\t            return this._axis;\\n\\t        },\\n\\n\\t        /**\\n\\t         * Get axis, add it just for draw tooltip.\\n\\t         *\\n\\t         * @return {[type]} [description]\\n\\t         */\\n\\t        getBaseAxis: function () {\\n\\t            return this._axis;\\n\\t        },\\n\\n\\t        /**\\n\\t         * @return {Array.<module:echarts/coord/Axis>}\\n\\t         */\\n\\t        getAxes: function () {\\n\\t            return [this._axis];\\n\\t        },\\n\\n\\t        /**\\n\\t         * @return {Object} {baseAxes: [], otherAxes: []}\\n\\t         */\\n\\t        getTooltipAxes: function () {\\n\\t            return {baseAxes: [this.getAxis()]};\\n\\t        },\\n\\n\\t        /**\\n\\t         * If contain point.\\n\\t         *\\n\\t         * @param  {Array.<number>} point\\n\\t         * @return {boolean}\\n\\t         */\\n\\t        containPoint: function (point) {\\n\\t            var rect = this.getRect();\\n\\t            var axis = this.getAxis();\\n\\t            var orient = axis.orient;\\n\\t            if (orient === 'horizontal') {\\n\\t                return axis.contain(axis.toLocalCoord(point[0]))\\n\\t                && (point[1] >= rect.y && point[1] <= (rect.y + rect.height));\\n\\t            }\\n\\t            else {\\n\\t                return axis.contain(axis.toLocalCoord(point[1]))\\n\\t                && (point[0] >= rect.y && point[0] <= (rect.y + rect.height));\\n\\t            }\\n\\t        },\\n\\n\\t        /**\\n\\t         * @param {Array.<number>} point\\n\\t         * @return {Array.<number>}\\n\\t         */\\n\\t        pointToData: function (point) {\\n\\t            var axis = this.getAxis();\\n\\t            return [axis.coordToData(axis.toLocalCoord(\\n\\t                point[axis.orient === 'horizontal' ? 0 : 1]\\n\\t            ))];\\n\\t        },\\n\\n\\t        /**\\n\\t         * Convert the series data to concrete point.\\n\\t         *\\n\\t         * @param  {number|Array.<number>} val\\n\\t         * @return {Array.<number>}\\n\\t         */\\n\\t        dataToPoint: function (val) {\\n\\t            var axis = this.getAxis();\\n\\t            var rect = this.getRect();\\n\\t            var pt = [];\\n\\t            var idx = axis.orient === 'horizontal' ? 0 : 1;\\n\\n\\t            if (val instanceof Array) {\\n\\t                val = val[0];\\n\\t            }\\n\\n\\t            pt[idx] = axis.toGlobalCoord(axis.dataToCoord(+val));\\n\\t            pt[1 - idx] = idx === 0 ? (rect.y + rect.height / 2) : (rect.x + rect.width / 2);\\n\\t            return pt;\\n\\t        }\\n\\n\\t    };\\n\\n\\t    module.exports = Single;\\n\\n\\n\\n/***/ },\\n/* 294 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var Axis = __webpack_require__(100);\\n\\n\\t    /**\\n\\t     * @constructor  module:echarts/coord/single/SingleAxis\\n\\t     * @extends {module:echarts/coord/Axis}\\n\\t     * @param {string} dim\\n\\t     * @param {*} scale\\n\\t     * @param {Array.<number>} coordExtent\\n\\t     * @param {string} axisType\\n\\t     * @param {string} position\\n\\t     */\\n\\t    var SingleAxis = function (dim, scale, coordExtent, axisType, position) {\\n\\n\\t        Axis.call(this, dim, scale, coordExtent);\\n\\n\\t        /**\\n\\t         * Axis type\\n\\t         * - 'category'\\n\\t         * - 'value'\\n\\t         * - 'time'\\n\\t         * - 'log'\\n\\t         * @type {string}\\n\\t         */\\n\\t        this.type = axisType || 'value';\\n\\n\\t        /**\\n\\t         * Axis position\\n\\t         *  - 'top'\\n\\t         *  - 'bottom'\\n\\t         *  - 'left'\\n\\t         *  - 'right'\\n\\t         *  @type {string}\\n\\t         */\\n\\t        this.position = position || 'bottom';\\n\\n\\t        /**\\n\\t         * Axis orient\\n\\t         *  - 'horizontal'\\n\\t         *  - 'vertical'\\n\\t         * @type {[type]}\\n\\t         */\\n\\t        this.orient = null;\\n\\n\\t        /**\\n\\t         * @type {number}\\n\\t         */\\n\\t        this._labelInterval = null;\\n\\n\\t    };\\n\\n\\t    SingleAxis.prototype = {\\n\\n\\t        constructor: SingleAxis,\\n\\n\\t        /**\\n\\t         * Axis model\\n\\t         * @type {module:echarts/coord/single/AxisModel}\\n\\t         */\\n\\t        model: null,\\n\\n\\t        /**\\n\\t         * Judge the orient of the axis.\\n\\t         * @return {boolean}\\n\\t         */\\n\\t        isHorizontal: function () {\\n\\t            var position = this.position;\\n\\t            return position === 'top' || position === 'bottom';\\n\\n\\t        },\\n\\n\\t        /**\\n\\t         * @override\\n\\t         */\\n\\t        pointToData: function (point, clamp) {\\n\\t            return this.coordinateSystem.pointToData(point, clamp)[0];\\n\\t        },\\n\\n\\t        /**\\n\\t         * Convert the local coord(processed by dataToCoord())\\n\\t         * to global coord(concrete pixel coord).\\n\\t         * designated by module:echarts/coord/single/Single.\\n\\t         * @type {Function}\\n\\t         */\\n\\t        toGlobalCoord: null,\\n\\n\\t        /**\\n\\t         * Convert the global coord to local coord.\\n\\t         * designated by module:echarts/coord/single/Single.\\n\\t         * @type {Function}\\n\\t         */\\n\\t        toLocalCoord: null\\n\\n\\t    };\\n\\n\\t    zrUtil.inherits(SingleAxis, Axis);\\n\\n\\t    module.exports = SingleAxis;\\n\\n\\n/***/ },\\n/* 295 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var AxisBuilder = __webpack_require__(135);\\n\\t    var zrUtil =  __webpack_require__(4);\\n\\t    var graphic = __webpack_require__(18);\\n\\t    var singleAxisHelper = __webpack_require__(296);\\n\\t    var getInterval = AxisBuilder.getInterval;\\n\\t    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick;\\n\\n\\t    var axisBuilderAttrs = [\\n\\t        'axisLine', 'axisLabel', 'axisTick', 'axisName'\\n\\t    ];\\n\\n\\t    var selfBuilderAttr = 'splitLine';\\n\\n\\t    var SingleAxisView = __webpack_require__(136).extend({\\n\\n\\t        type: 'singleAxis',\\n\\n\\t        axisPointerClass: 'SingleAxisPointer',\\n\\n\\t        render: function (axisModel, ecModel, api, payload) {\\n\\n\\t            var group = this.group;\\n\\n\\t            group.removeAll();\\n\\n\\t            var layout =  singleAxisHelper.layout(axisModel);\\n\\n\\t            var axisBuilder = new AxisBuilder(axisModel, layout);\\n\\n\\t            zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\\n\\n\\t            group.add(axisBuilder.getGroup());\\n\\n\\t            if (axisModel.get(selfBuilderAttr + '.show')) {\\n\\t                this['_' + selfBuilderAttr](axisModel, layout.labelInterval);\\n\\t            }\\n\\n\\t            SingleAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\\n\\t        },\\n\\n\\t        _splitLine: function(axisModel, labelInterval) {\\n\\t            var axis = axisModel.axis;\\n\\n\\t            if (axis.scale.isBlank()) {\\n\\t                return;\\n\\t            }\\n\\n\\t            var splitLineModel = axisModel.getModel('splitLine');\\n\\t            var lineStyleModel = splitLineModel.getModel('lineStyle');\\n\\t            var lineWidth = lineStyleModel.get('width');\\n\\t            var lineColors = lineStyleModel.get('color');\\n\\t            var lineInterval = getInterval(splitLineModel, labelInterval);\\n\\n\\t            lineColors = lineColors instanceof Array ? lineColors : [lineColors];\\n\\n\\t            var gridRect = axisModel.coordinateSystem.getRect();\\n\\t            var isHorizontal = axis.isHorizontal();\\n\\n\\t            var splitLines = [];\\n\\t            var lineCount = 0;\\n\\n\\t            var ticksCoords = axis.getTicksCoords();\\n\\n\\t            var p1 = [];\\n\\t            var p2 = [];\\n\\n\\t            for (var i = 0; i < ticksCoords.length; ++i) {\\n\\t                if (ifIgnoreOnTick(axis, i, lineInterval)) {\\n\\t                    continue;\\n\\t                }\\n\\t                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\\n\\t                if (isHorizontal) {\\n\\t                    p1[0] = tickCoord;\\n\\t                    p1[1] = gridRect.y;\\n\\t                    p2[0] = tickCoord;\\n\\t                    p2[1] = gridRect.y + gridRect.height;\\n\\t                }\\n\\t                else {\\n\\t                    p1[0] = gridRect.x;\\n\\t                    p1[1] = tickCoord;\\n\\t                    p2[0] = gridRect.x + gridRect.width;\\n\\t                    p2[1] = tickCoord;\\n\\t                }\\n\\t                var colorIndex = (lineCount++) % lineColors.length;\\n\\t                splitLines[colorIndex] = splitLines[colorIndex] || [];\\n\\t                splitLines[colorIndex].push(new graphic.Line(\\n\\t                    graphic.subPixelOptimizeLine({\\n\\t                        shape: {\\n\\t                            x1: p1[0],\\n\\t                            y1: p1[1],\\n\\t                            x2: p2[0],\\n\\t                            y2: p2[1]\\n\\t                        },\\n\\t                        style: {\\n\\t                            lineWidth: lineWidth\\n\\t                        },\\n\\t                        silent: true\\n\\t                    })));\\n\\t            }\\n\\n\\t            for (var i = 0; i < splitLines.length; ++i) {\\n\\t                this.group.add(graphic.mergePath(splitLines[i], {\\n\\t                    style: {\\n\\t                        stroke: lineColors[i % lineColors.length],\\n\\t                        lineDash: lineStyleModel.getLineDash(lineWidth),\\n\\t                        lineWidth: lineWidth\\n\\t                    },\\n\\t                    silent: true\\n\\t                }));\\n\\t            }\\n\\t        }\\n\\t    });\\n\\n\\t    module.exports = SingleAxisView;\\n\\n\\n\\n/***/ },\\n/* 296 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\n\\t    var helper = {};\\n\\n\\t    /**\\n\\t     * @param {Object} opt {labelInside}\\n\\t     * @return {Object} {\\n\\t     *  position, rotation, labelDirection, labelOffset,\\n\\t     *  tickDirection, labelRotate, labelInterval, z2\\n\\t     * }\\n\\t     */\\n\\t    helper.layout = function (axisModel, opt) {\\n\\t        opt = opt || {};\\n\\t        var single = axisModel.coordinateSystem;\\n\\t        var axis = axisModel.axis;\\n\\t        var layout = {};\\n\\n\\t        var axisPosition = axis.position;\\n\\t        var orient = axis.orient;\\n\\n\\t        var rect = single.getRect();\\n\\t        var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\\n\\n\\t        var positionMap = {\\n\\t            horizontal: {top: rectBound[2], bottom: rectBound[3]},\\n\\t            vertical: {left: rectBound[0], right: rectBound[1]}\\n\\t        };\\n\\n\\t        layout.position = [\\n\\t            orient === 'vertical'\\n\\t                ? positionMap.vertical[axisPosition]\\n\\t                : rectBound[0],\\n\\t            orient === 'horizontal'\\n\\t                ? positionMap.horizontal[axisPosition]\\n\\t                : rectBound[3]\\n\\t        ];\\n\\n\\t        var r = {horizontal: 0, vertical: 1};\\n\\t        layout.rotation = Math.PI / 2 * r[orient];\\n\\n\\t        var directionMap = {top: -1, bottom: 1, right: 1, left: -1};\\n\\n\\t        layout.labelDirection = layout.tickDirection\\n\\t            = layout.nameDirection\\n\\t            = directionMap[axisPosition];\\n\\n\\t        if (axisModel.get('axisTick.inside')) {\\n\\t            layout.tickDirection = -layout.tickDirection;\\n\\t        }\\n\\n\\t        if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\\n\\t            layout.labelDirection = -layout.labelDirection;\\n\\t        }\\n\\n\\t        var labelRotation = opt.rotate;\\n\\t        labelRotation == null && (labelRotation = axisModel.get('axisLabel.rotate'));\\n\\t        layout.labelRotation = axisPosition === 'top' ? -labelRotation : labelRotation;\\n\\n\\t        layout.labelInterval = axis.getLabelInterval();\\n\\n\\t        layout.z2 = 1;\\n\\n\\t        return layout;\\n\\t    };\\n\\n\\t    module.exports = helper;\\n\\n\\n\\n/***/ },\\n/* 297 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var ComponentModel = __webpack_require__(69);\\n\\t    var axisModelCreator = __webpack_require__(131);\\n\\t    var zrUtil =  __webpack_require__(4);\\n\\n\\t    var AxisModel = ComponentModel.extend({\\n\\n\\t        type: 'singleAxis',\\n\\n\\t        layoutMode: 'box',\\n\\n\\t        /**\\n\\t         * @type {module:echarts/coord/single/SingleAxis}\\n\\t         */\\n\\t        axis: null,\\n\\n\\t        /**\\n\\t         * @type {module:echarts/coord/single/Single}\\n\\t         */\\n\\t        coordinateSystem: null,\\n\\n\\t        /**\\n\\t         * @override\\n\\t         */\\n\\t        getCoordSysModel: function () {\\n\\t            return this;\\n\\t        }\\n\\n\\t    });\\n\\n\\t    var defaultOption = {\\n\\n\\t        left: '5%',\\n\\t        top: '5%',\\n\\t        right: '5%',\\n\\t        bottom: '5%',\\n\\n\\t        type: 'value',\\n\\n\\t        position: 'bottom',\\n\\n\\t        orient: 'horizontal',\\n\\n\\t        axisLine: {\\n\\t            show: true,\\n\\t            lineStyle: {\\n\\t                width: 2,\\n\\t                type: 'solid'\\n\\t            }\\n\\t        },\\n\\n\\t        // Single coordinate system and single axis is the,\\n\\t        // which is used as the parent tooltip model.\\n\\t        // same model, so we set default tooltip show as true.\\n\\t        tooltip: {\\n\\t            show: true\\n\\t        },\\n\\n\\t        axisTick: {\\n\\t            show: true,\\n\\t            length: 6,\\n\\t            lineStyle: {\\n\\t                width: 2\\n\\t            }\\n\\t        },\\n\\n\\t        axisLabel: {\\n\\t            show: true,\\n\\t            interval: 'auto'\\n\\t        },\\n\\n\\t        splitLine: {\\n\\t            show: true,\\n\\t            lineStyle: {\\n\\t                type: 'dashed',\\n\\t                opacity: 0.2\\n\\t            }\\n\\t        }\\n\\t    };\\n\\n\\t    function getAxisType(axisName, option) {\\n\\t        return option.type || (option.data ? 'category' : 'value');\\n\\t    }\\n\\n\\t    zrUtil.merge(AxisModel.prototype, __webpack_require__(112));\\n\\n\\t    axisModelCreator('single', AxisModel, getAxisType, defaultOption);\\n\\n\\t    module.exports = AxisModel;\\n\\n\\n/***/ },\\n/* 298 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var echarts = __webpack_require__(1);\\n\\t    var axisPointerModelHelper = __webpack_require__(137);\\n\\t    var axisTrigger = __webpack_require__(299);\\n\\t    var zrUtil = __webpack_require__(4);\\n\\n\\t    __webpack_require__(301);\\n\\t    __webpack_require__(302);\\n\\n\\t    // CartesianAxisPointer is not supposed to be required here. But consider\\n\\t    // echarts.simple.js and online build tooltip, which only require gridSimple,\\n\\t    // CartesianAxisPointer should be able to required somewhere.\\n\\t    __webpack_require__(304);\\n\\n\\t    echarts.registerPreprocessor(function (option) {\\n\\t        // Always has a global axisPointerModel for default setting.\\n\\t        if (option) {\\n\\t            (!option.axisPointer || option.axisPointer.length === 0)\\n\\t                && (option.axisPointer = {});\\n\\n\\t            var link = option.axisPointer.link;\\n\\t            // Normalize to array to avoid object mergin. But if link\\n\\t            // is not set, remain null/undefined, otherwise it will\\n\\t            // override existent link setting.\\n\\t            if (link && !zrUtil.isArray(link)) {\\n\\t                option.axisPointer.link = [link];\\n\\t            }\\n\\t        }\\n\\t    });\\n\\n\\t    // This process should proformed after coordinate systems created\\n\\t    // and series data processed. So put it on statistic processing stage.\\n\\t    echarts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\\n\\t        // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\\n\\t        // allAxesInfo should be updated when setOption performed.\\n\\t        ecModel.getComponent('axisPointer').coordSysAxesInfo\\n\\t            = axisPointerModelHelper.collect(ecModel, api);\\n\\t    });\\n\\n\\t    // Broadcast to all views.\\n\\t    echarts.registerAction({\\n\\t        type: 'updateAxisPointer',\\n\\t        event: 'updateAxisPointer',\\n\\t        update: ':updateAxisPointer'\\n\\t    }, axisTrigger);\\n\\n\\n\\n/***/ },\\n/* 299 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var modelUtil = __webpack_require__(5);\\n\\t    var modelHelper = __webpack_require__(137);\\n\\t    var findPointFromSeries = __webpack_require__(300);\\n\\n\\t    var each = zrUtil.each;\\n\\t    var curry = zrUtil.curry;\\n\\t    var get = modelUtil.makeGetter();\\n\\n\\t    /**\\n\\t     * Basic logic: check all axis, if they do not demand show/highlight,\\n\\t     * then hide/downplay them.\\n\\t     *\\n\\t     * @param {Object} coordSysAxesInfo\\n\\t     * @param {Object} payload\\n\\t     * @param {string} [payload.currTrigger] 'click' | 'mousemove' | 'leave'\\n\\t     * @param {Array.<number>} [payload.x] x and y, which are mandatory, specify a point to\\n\\t     *              trigger axisPointer and tooltip.\\n\\t     * @param {Array.<number>} [payload.y] x and y, which are mandatory, specify a point to\\n\\t     *              trigger axisPointer and tooltip.\\n\\t     * @param {Object} [payload.seriesIndex] finder, optional, restrict target axes.\\n\\t     * @param {Object} [payload.dataIndex] finder, restrict target axes.\\n\\t     * @param {Object} [payload.axesInfo] finder, restrict target axes.\\n\\t     *        [{\\n\\t     *          axisDim: 'x'|'y'|'angle'|...,\\n\\t     *          axisIndex: ...,\\n\\t     *          value: ...\\n\\t     *        }, ...]\\n\\t     * @param {Function} [payload.dispatchAction]\\n\\t     * @param {Object} [payload.tooltipOption]\\n\\t     * @param {Object|Array.<number>|Function} [payload.position] Tooltip position,\\n\\t     *        which can be specified in dispatchAction\\n\\t     * @param {module:echarts/model/Global} ecModel\\n\\t     * @param {module:echarts/ExtensionAPI} api\\n\\t     * @return {Object} content of event obj for echarts.connect.\\n\\t     */\\n\\t    function axisTrigger(payload, ecModel, api) {\\n\\t        var currTrigger = payload.currTrigger;\\n\\t        var point = [payload.x, payload.y];\\n\\t        var finder = payload;\\n\\t        var dispatchAction = payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\\n\\t        var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\\n\\n\\t        if (illegalPoint(point)) {\\n\\t            // Used in the default behavior of `connection`: use the sample seriesIndex\\n\\t            // and dataIndex. And also used in the tooltipView trigger.\\n\\t            point = findPointFromSeries({\\n\\t                seriesIndex: finder.seriesIndex,\\n\\t                // Do not use dataIndexInside from other ec instance.\\n\\t                // FIXME: auto detect it?\\n\\t                dataIndex: finder.dataIndex\\n\\t            }, ecModel).point;\\n\\t        }\\n\\t        var isIllegalPoint = illegalPoint(point);\\n\\n\\t        // Axis and value can be specified when calling dispatchAction({type: 'updateAxisPointer'}).\\n\\t        // Notice: In this case, it is difficult to get the `point` (which is necessary to show\\n\\t        // tooltip, so if point is not given, we just use the point found by sample seriesIndex\\n\\t        // and dataIndex.\\n\\t        var inputAxesInfo = finder.axesInfo;\\n\\n\\t        var axesInfo = coordSysAxesInfo.axesInfo;\\n\\t        var shouldHide = currTrigger === 'leave' || illegalPoint(point);\\n\\t        var outputFinder = {};\\n\\n\\t        var showValueMap = {};\\n\\t        var dataByCoordSys = {list: [], map: {}};\\n\\t        var updaters = {\\n\\t            showPointer: curry(showPointer, showValueMap),\\n\\t            showTooltip: curry(showTooltip, dataByCoordSys)\\n\\t        };\\n\\n\\t        // Process for triggered axes.\\n\\t        each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\\n\\t            // If a point given, it must be contained by the coordinate system.\\n\\t            var coordSysContainsPoint = isIllegalPoint || coordSys.containPoint(point);\\n\\n\\t            each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\\n\\t                var axis = axisInfo.axis;\\n\\t                var inputAxisInfo = findInputAxisInfo(inputAxesInfo, axisInfo);\\n\\t                // If no inputAxesInfo, no axis is restricted.\\n\\t                if (!shouldHide && coordSysContainsPoint && (!inputAxesInfo || inputAxisInfo)) {\\n\\t                    var val = inputAxisInfo && inputAxisInfo.value;\\n\\t                    if (val == null && !isIllegalPoint) {\\n\\t                        val = axis.pointToData(point);\\n\\t                    }\\n\\t                    val != null && processOnAxis(axisInfo, val, updaters, false, outputFinder);\\n\\t                }\\n\\t            });\\n\\t        });\\n\\n\\t        // Process for linked axes.\\n\\t        var linkTriggers = {};\\n\\t        each(axesInfo, function (tarAxisInfo, tarKey) {\\n\\t            var linkGroup = tarAxisInfo.linkGroup;\\n\\n\\t            // If axis has been triggered in the previous stage, it should not be triggered by link.\\n\\t            if (linkGroup && !showValueMap[tarKey]) {\\n\\t                each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\\n\\t                    var srcValItem = showValueMap[srcKey];\\n\\t                    // If srcValItem exist, source axis is triggered, so link to target axis.\\n\\t                    if (srcAxisInfo !== tarAxisInfo && srcValItem) {\\n\\t                        var val = srcValItem.value;\\n\\t                        linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(\\n\\t                            val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo)\\n\\t                        )));\\n\\t                        linkTriggers[tarAxisInfo.key] = val;\\n\\t                    }\\n\\t                });\\n\\t            }\\n\\t        });\\n\\t        each(linkTriggers, function (val, tarKey) {\\n\\t            processOnAxis(axesInfo[tarKey], val, updaters, true, outputFinder);\\n\\t        });\\n\\n\\t        updateModelActually(showValueMap, axesInfo, outputFinder);\\n\\t        dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction);\\n\\t        dispatchHighDownActually(axesInfo, dispatchAction, api);\\n\\n\\t        return outputFinder;\\n\\t    }\\n\\n\\t    function processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\\n\\t        var axis = axisInfo.axis;\\n\\n\\t        if (axis.scale.isBlank() || !axis.containData(newValue)) {\\n\\t            return;\\n\\t        }\\n\\n\\t        if (!axisInfo.involveSeries) {\\n\\t            updaters.showPointer(axisInfo, newValue);\\n\\t            return;\\n\\t        }\\n\\n\\t        // Heavy calculation. So put it after axis.containData checking.\\n\\t        var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\\n\\t        var payloadBatch = payloadInfo.payloadBatch;\\n\\t        var snapToValue = payloadInfo.snapToValue;\\n\\n\\t        // Fill content of event obj for echarts.connect.\\n\\t        // By defualt use the first involved series data as a sample to connect.\\n\\t        if (payloadBatch[0] && outputFinder.seriesIndex == null) {\\n\\t            zrUtil.extend(outputFinder, payloadBatch[0]);\\n\\t        }\\n\\n\\t        // If no linkSource input, this process is for collecting link\\n\\t        // target, where snap should not be accepted.\\n\\t        if (!dontSnap && axisInfo.snap) {\\n\\t            if (axis.containData(snapToValue) && snapToValue != null) {\\n\\t                newValue = snapToValue;\\n\\t            }\\n\\t        }\\n\\n\\t        updaters.showPointer(axisInfo, newValue, payloadBatch, outputFinder);\\n\\t        // Tooltip should always be snapToValue, otherwise there will be\\n\\t        // incorrect \\\"axis value ~ series value\\\" mapping displayed in tooltip.\\n\\t        updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\\n\\t    }\\n\\n\\t    function buildPayloadsBySeries(value, axisInfo) {\\n\\t        var axis = axisInfo.axis;\\n\\t        var dim = axis.dim;\\n\\t        var snapToValue = value;\\n\\t        var payloadBatch = [];\\n\\t        var minDist = Number.MAX_VALUE;\\n\\t        var minDiff = -1;\\n\\n\\t        each(axisInfo.seriesModels, function (series, idx) {\\n\\t            var dataDim = series.coordDimToDataDim(dim);\\n\\t            var seriesNestestValue;\\n\\t            var dataIndices;\\n\\n\\t            if (series.getAxisTooltipData) {\\n\\t                var result = series.getAxisTooltipData(dataDim, value, axis);\\n\\t                dataIndices = result.dataIndices;\\n\\t                seriesNestestValue = result.nestestValue;\\n\\t            }\\n\\t            else {\\n\\t                dataIndices = series.getData().indicesOfNearest(\\n\\t                    dataDim[0],\\n\\t                    value,\\n\\t                    // Add a threshold to avoid find the wrong dataIndex\\n\\t                    // when data length is not same.\\n\\t                    false, axis.type === 'category' ? 0.5 : null\\n\\t                );\\n\\t                if (!dataIndices.length) {\\n\\t                    return;\\n\\t                }\\n\\t                seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\\n\\t            }\\n\\n\\t            if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\\n\\t                return;\\n\\t            }\\n\\n\\t            var diff = value - seriesNestestValue;\\n\\t            var dist = Math.abs(diff);\\n\\t            // Consider category case\\n\\t            if (dist <= minDist) {\\n\\t                if (dist < minDist || (diff >= 0 && minDiff < 0)) {\\n\\t                    minDist = dist;\\n\\t                    minDiff = diff;\\n\\t                    snapToValue = seriesNestestValue;\\n\\t                    payloadBatch.length = 0;\\n\\t                }\\n\\t                each(dataIndices, function (dataIndex) {\\n\\t                    payloadBatch.push({\\n\\t                        seriesIndex: series.seriesIndex,\\n\\t                        dataIndexInside: dataIndex,\\n\\t                        dataIndex: series.getData().getRawIndex(dataIndex)\\n\\t                    });\\n\\t                });\\n\\t            }\\n\\t        });\\n\\n\\t        return {\\n\\t            payloadBatch: payloadBatch,\\n\\t            snapToValue: snapToValue\\n\\t        };\\n\\t    }\\n\\n\\t    function showPointer(showValueMap, axisInfo, value, payloadBatch) {\\n\\t        showValueMap[axisInfo.key] = {value: value, payloadBatch: payloadBatch};\\n\\t    }\\n\\n\\t    function showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\\n\\t        var payloadBatch = payloadInfo.payloadBatch;\\n\\t        var axis = axisInfo.axis;\\n\\t        var axisModel = axis.model;\\n\\t        var axisPointerModel = axisInfo.axisPointerModel;\\n\\n\\t        // If no data, do not create anything in dataByCoordSys,\\n\\t        // whose length will be used to judge whether dispatch action.\\n\\t        if (!axisInfo.triggerTooltip || !payloadBatch.length) {\\n\\t            return;\\n\\t        }\\n\\n\\t        var coordSysModel = axisInfo.coordSys.model;\\n\\t        var coordSysKey = modelHelper.makeKey(coordSysModel);\\n\\t        var coordSysItem = dataByCoordSys.map[coordSysKey];\\n\\t        if (!coordSysItem) {\\n\\t            coordSysItem = dataByCoordSys.map[coordSysKey] = {\\n\\t                coordSysId: coordSysModel.id,\\n\\t                coordSysIndex: coordSysModel.componentIndex,\\n\\t                coordSysType: coordSysModel.type,\\n\\t                coordSysMainType: coordSysModel.mainType,\\n\\t                dataByAxis: []\\n\\t            };\\n\\t            dataByCoordSys.list.push(coordSysItem);\\n\\t        }\\n\\n\\t        coordSysItem.dataByAxis.push({\\n\\t            axisDim: axis.dim,\\n\\t            axisIndex: axisModel.componentIndex,\\n\\t            axisType: axisModel.type,\\n\\t            axisId: axisModel.id,\\n\\t            value: value,\\n\\t            // Caustion: viewHelper.getValueLabel is actually on \\\"view stage\\\", which\\n\\t            // depends that all models have been updated. So it should not be performed\\n\\t            // here. Considering axisPointerModel used here is volatile, which is hard\\n\\t            // to be retrieve in TooltipView, we prepare parameters here.\\n\\t            valueLabelOpt: {\\n\\t                precision: axisPointerModel.get('label.precision'),\\n\\t                formatter: axisPointerModel.get('label.formatter')\\n\\t            },\\n\\t            seriesDataIndices: payloadBatch.slice()\\n\\t        });\\n\\t    }\\n\\n\\t    function updateModelActually(showValueMap, axesInfo, outputFinder) {\\n\\t        var outputAxesInfo = outputFinder.axesInfo = [];\\n\\t        // Basic logic: If no 'show' required, 'hide' this axisPointer.\\n\\t        each(axesInfo, function (axisInfo, key) {\\n\\t            var option = axisInfo.axisPointerModel.option;\\n\\t            var valItem = showValueMap[key];\\n\\n\\t            if (valItem) {\\n\\t                !axisInfo.useHandle && (option.status = 'show');\\n\\t                option.value = valItem.value;\\n\\t                // For label formatter param and highlight.\\n\\t                option.seriesDataIndices = (valItem.payloadBatch || []).slice();\\n\\t            }\\n\\t            // When always show (e.g., handle used), remain\\n\\t            // original value and status.\\n\\t            else {\\n\\t                // If hide, value still need to be set, consider\\n\\t                // click legend to toggle axis blank.\\n\\t                !axisInfo.useHandle && (option.status = 'hide');\\n\\t            }\\n\\n\\t            // If status is 'hide', should be no info in payload.\\n\\t            option.status === 'show' && outputAxesInfo.push({\\n\\t                axisDim: axisInfo.axis.dim,\\n\\t                axisIndex: axisInfo.axis.model.componentIndex,\\n\\t                value: option.value\\n\\t            });\\n\\t        });\\n\\t    }\\n\\n\\t    function dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction) {\\n\\t        // Basic logic: If no showTip required, hideTip will be dispatched.\\n\\t        if (illegalPoint(point) || !dataByCoordSys.list.length) {\\n\\t            dispatchAction({type: 'hideTip'});\\n\\t            return;\\n\\t        }\\n\\n\\t        // In most case only one axis (or event one series is used). It is\\n\\t        // convinient to fetch payload.seriesIndex and payload.dataIndex\\n\\t        // dirtectly. So put the first seriesIndex and dataIndex of the first\\n\\t        // axis on the payload.\\n\\t        var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\\n\\n\\t        dispatchAction({\\n\\t            type: 'showTip',\\n\\t            escapeConnect: true,\\n\\t            x: point[0],\\n\\t            y: point[1],\\n\\t            tooltipOption: payload.tooltipOption,\\n\\t            position: payload.position,\\n\\t            dataIndexInside: sampleItem.dataIndexInside,\\n\\t            dataIndex: sampleItem.dataIndex,\\n\\t            seriesIndex: sampleItem.seriesIndex,\\n\\t            dataByCoordSys: dataByCoordSys.list\\n\\t        });\\n\\t    }\\n\\n\\t    function dispatchHighDownActually(axesInfo, dispatchAction, api) {\\n\\t        // FIXME\\n\\t        // highlight status modification shoule be a stage of main process?\\n\\t        // (Consider confilct (e.g., legend and axisPointer) and setOption)\\n\\n\\t        var zr = api.getZr();\\n\\t        var highDownKey = 'axisPointerLastHighlights';\\n\\t        var lastHighlights = get(zr)[highDownKey] || {};\\n\\t        var newHighlights = get(zr)[highDownKey] = {};\\n\\n\\t        // Update highlight/downplay status according to axisPointer model.\\n\\t        // Build hash map and remove duplicate incidentally.\\n\\t        each(axesInfo, function (axisInfo, key) {\\n\\t            var option = axisInfo.axisPointerModel.option;\\n\\t            option.status === 'show' && each(option.seriesDataIndices, function (batchItem) {\\n\\t                var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\\n\\t                newHighlights[key] = batchItem;\\n\\t            });\\n\\t        });\\n\\n\\t        // Diff.\\n\\t        var toHighlight = [];\\n\\t        var toDownplay = [];\\n\\t        zrUtil.each(lastHighlights, function (batchItem, key) {\\n\\t            !newHighlights[key] && toDownplay.push(batchItem);\\n\\t        });\\n\\t        zrUtil.each(newHighlights, function (batchItem, key) {\\n\\t            !lastHighlights[key] && toHighlight.push(batchItem);\\n\\t        });\\n\\n\\t        toDownplay.length && api.dispatchAction({\\n\\t            type: 'downplay', escapeConnect: true, batch: toDownplay\\n\\t        });\\n\\t        toHighlight.length && api.dispatchAction({\\n\\t            type: 'highlight', escapeConnect: true, batch: toHighlight\\n\\t        });\\n\\t    }\\n\\n\\t    function findInputAxisInfo(inputAxesInfo, axisInfo) {\\n\\t        for (var i = 0; i < (inputAxesInfo || []).length; i++) {\\n\\t            var inputAxisInfo = inputAxesInfo[i];\\n\\t            if (axisInfo.axis.dim === inputAxisInfo.axisDim\\n\\t                && axisInfo.axis.model.componentIndex === inputAxisInfo.axisIndex\\n\\t            ) {\\n\\t                return inputAxisInfo;\\n\\t            }\\n\\t        }\\n\\t    }\\n\\n\\t    function makeMapperParam(axisInfo) {\\n\\t        var axisModel = axisInfo.axis.model;\\n\\t        var item = {};\\n\\t        var dim = item.axisDim = axisInfo.axis.dim;\\n\\t        item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\\n\\t        item.axisName = item[dim + 'AxisName'] = axisModel.name;\\n\\t        item.axisId = item[dim + 'AxisId'] = axisModel.id;\\n\\t        return item;\\n\\t    }\\n\\n\\t    function illegalPoint(point) {\\n\\t        return !point || point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\\n\\t    }\\n\\n\\t    module.exports = axisTrigger;\\n\\n\\n/***/ },\\n/* 300 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var modelUtil = __webpack_require__(5);\\n\\n\\t    /**\\n\\t     * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\\n\\t     * @param {module:echarts/model/Global} ecModel\\n\\t     * @return {Object} {point: [x, y], el: ...} point Will not be null.\\n\\t     */\\n\\t    module.exports = function (finder, ecModel) {\\n\\t        var point = [];\\n\\t        var seriesIndex = finder.seriesIndex;\\n\\t        var seriesModel;\\n\\t        if (seriesIndex == null || !(\\n\\t            seriesModel = ecModel.getSeriesByIndex(seriesIndex)\\n\\t        )) {\\n\\t            return {point: []};\\n\\t        }\\n\\n\\t        var data = seriesModel.getData();\\n\\t        var dataIndex = modelUtil.queryDataIndex(data, finder);\\n\\t        if (dataIndex == null || zrUtil.isArray(dataIndex)) {\\n\\t            return {point: []};\\n\\t        }\\n\\n\\t        var el = data.getItemGraphicEl(dataIndex);\\n\\t        var coordSys = seriesModel.coordinateSystem;\\n\\n\\t        if (seriesModel.getTooltipPosition) {\\n\\t            point = seriesModel.getTooltipPosition(dataIndex) || [];\\n\\t        }\\n\\t        else if (coordSys && coordSys.dataToPoint) {\\n\\t            point = coordSys.dataToPoint(\\n\\t                data.getValues(\\n\\t                    zrUtil.map(coordSys.dimensions, function (dim) {\\n\\t                        return seriesModel.coordDimToDataDim(dim)[0];\\n\\t                    }), dataIndex, true\\n\\t                )\\n\\t            ) || [];\\n\\t        }\\n\\t        else if (el) {\\n\\t            // Use graphic bounding rect\\n\\t            var rect = el.getBoundingRect().clone();\\n\\t            rect.applyTransform(el.transform);\\n\\t            point = [\\n\\t                rect.x + rect.width / 2,\\n\\t                rect.y + rect.height / 2\\n\\t            ];\\n\\t        }\\n\\n\\t        return {point: point, el: el};\\n\\t    };\\n\\n\\n\\n\\n/***/ },\\n/* 301 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var echarts = __webpack_require__(1);\\n\\n\\t    var AxisPointerModel = echarts.extendComponentModel({\\n\\n\\t        type: 'axisPointer',\\n\\n\\t        coordSysAxesInfo: null,\\n\\n\\t        defaultOption: {\\n\\t            // 'auto' means that show when triggered by tooltip or handle.\\n\\t            show: 'auto',\\n\\t            // 'click' | 'mousemove' | 'none'\\n\\t            triggerOn: null, // set default in AxisPonterView.js\\n\\n\\t            zlevel: 0,\\n\\t            z: 50,\\n\\n\\t            type: 'line',\\n\\t            // axispointer triggered by tootip determine snap automatically,\\n\\t            // see `modelHelper`.\\n\\t            snap: false,\\n\\t            triggerTooltip: true,\\n\\n\\t            value: null,\\n\\t            status: null, // Init value depends on whether handle is used.\\n\\n\\t            // [group0, group1, ...]\\n\\t            // Each group can be: {\\n\\t            //      mapper: function () {},\\n\\t            //      singleTooltip: 'multiple',  // 'multiple' or 'single'\\n\\t            //      xAxisId: ...,\\n\\t            //      yAxisName: ...,\\n\\t            //      angleAxisIndex: ...\\n\\t            // }\\n\\t            // mapper: can be ignored.\\n\\t            //      input: {axisInfo, value}\\n\\t            //      output: {axisInfo, value}\\n\\t            link: [],\\n\\n\\t            // Do not set 'auto' here, otherwise global animation: false\\n\\t            // will not effect at this axispointer.\\n\\t            animation: null,\\n\\t            animationDurationUpdate: 200,\\n\\n\\t            lineStyle: {\\n\\t                color: '#aaa',\\n\\t                width: 1,\\n\\t                type: 'solid'\\n\\t            },\\n\\n\\t            shadowStyle: {\\n\\t                color: 'rgba(150,150,150,0.3)'\\n\\t            },\\n\\n\\t            label: {\\n\\t                show: true,\\n\\t                formatter: null, // string | Function\\n\\t                precision: 'auto', // Or a number like 0, 1, 2 ...\\n\\t                margin: 3,\\n\\t                textStyle: {\\n\\t                    color: '#fff'\\n\\t                },\\n\\t                padding: [5, 7, 5, 7],\\n\\t                backgroundColor: 'auto', // default: axis line color\\n\\t                borderColor: null,\\n\\t                borderWidth: 0,\\n\\t                shadowBlur: 3,\\n\\t                shadowColor: '#aaa'\\n\\t                // Considering applicability, common style should\\n\\t                // better not have shadowOffset.\\n\\t                // shadowOffsetX: 0,\\n\\t                // shadowOffsetY: 2\\n\\t            },\\n\\n\\t            handle: {\\n\\t                show: false,\\n\\t                icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z', // jshint ignore:line\\n\\t                size: 45,\\n\\t                // handle margin is from symbol center to axis, which is stable when circular move.\\n\\t                margin: 50,\\n\\t                // color: '#1b8bbd'\\n\\t                // color: '#2f4554'\\n\\t                color: '#333',\\n\\t                shadowBlur: 3,\\n\\t                shadowColor: '#aaa',\\n\\t                shadowOffsetX: 0,\\n\\t                shadowOffsetY: 2,\\n\\n\\t                // For mobile performance\\n\\t                throttle: 40\\n\\t            }\\n\\t        }\\n\\n\\t    });\\n\\n\\t    module.exports = AxisPointerModel;\\n\\n\\n\\n/***/ },\\n/* 302 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var globalListener = __webpack_require__(303);\\n\\n\\t    var AxisPonterView = __webpack_require__(1).extendComponentView({\\n\\n\\t        type: 'axisPointer',\\n\\n\\t        render: function (globalAxisPointerModel, ecModel, api) {\\n\\t            var globalTooltipModel = ecModel.getComponent('tooltip');\\n\\t            var triggerOn = globalAxisPointerModel.get('triggerOn')\\n\\t                || (globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click');\\n\\n\\t            // Register global listener in AxisPointerView to enable\\n\\t            // AxisPointerView to be independent to Tooltip.\\n\\t            globalListener.register(\\n\\t                'axisPointer',\\n\\t                api,\\n\\t                function (currTrigger, e, dispatchAction) {\\n\\t                    // If 'none', it is not controlled by mouse totally.\\n\\t                    if (triggerOn !== 'none'\\n\\t                        && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)\\n\\t                    ) {\\n\\t                        dispatchAction({\\n\\t                            type: 'updateAxisPointer',\\n\\t                            currTrigger: currTrigger,\\n\\t                            x: e && e.offsetX,\\n\\t                            y: e && e.offsetY\\n\\t                        });\\n\\t                    }\\n\\t                }\\n\\t            );\\n\\t        },\\n\\n\\t        /**\\n\\t         * @override\\n\\t         */\\n\\t        remove: function (ecModel, api) {\\n\\t            globalListener.disopse(api.getZr(), 'axisPointer');\\n\\t            AxisPonterView.superApply(this._model, 'remove', arguments);\\n\\t        },\\n\\n\\t        /**\\n\\t         * @override\\n\\t         */\\n\\t        dispose: function (ecModel, api) {\\n\\t            globalListener.unregister('axisPointer', api);\\n\\t            AxisPonterView.superApply(this._model, 'dispose', arguments);\\n\\t        }\\n\\n\\t    });\\n\\n\\n\\n/***/ },\\n/* 303 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var env = __webpack_require__(2);\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var get = __webpack_require__(5).makeGetter();\\n\\n\\t    var each = zrUtil.each;\\n\\n\\t    var globalListener = {};\\n\\n\\t    /**\\n\\t     * @param {string} key\\n\\t     * @param {module:echarts/ExtensionAPI} api\\n\\t     * @param {Function} handler\\n\\t     *      param: {string} currTrigger\\n\\t     *      param: {Array.<number>} point\\n\\t     */\\n\\t    globalListener.register = function (key, api, handler) {\\n\\t        if (env.node) {\\n\\t            return;\\n\\t        }\\n\\n\\t        var zr = api.getZr();\\n\\t        get(zr).records || (get(zr).records = {});\\n\\n\\t        initGlobalListeners(zr, api);\\n\\n\\t        var record = get(zr).records[key] || (get(zr).records[key] = {});\\n\\t        record.handler = handler;\\n\\t    };\\n\\n\\t    function initGlobalListeners(zr, api) {\\n\\t        if (get(zr).initialized) {\\n\\t            return;\\n\\t        }\\n\\n\\t        get(zr).initialized = true;\\n\\n\\t        useHandler('click', zrUtil.curry(doEnter, 'click'));\\n\\t        useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove'));\\n\\t        // useHandler('mouseout', onLeave);\\n\\t        useHandler('globalout', onLeave);\\n\\n\\t        function useHandler(eventType, cb) {\\n\\t            zr.on(eventType, function (e) {\\n\\t                var dis = makeDispatchAction(api);\\n\\n\\t                each(get(zr).records, function (record) {\\n\\t                    record && cb(record, e, dis.dispatchAction);\\n\\t                });\\n\\n\\t                dispatchTooltipFinally(dis.pendings, api);\\n\\t            });\\n\\t        }\\n\\t    }\\n\\n\\t    function dispatchTooltipFinally(pendings, api) {\\n\\t        var showLen = pendings.showTip.length;\\n\\t        var hideLen = pendings.hideTip.length;\\n\\n\\t        var actuallyPayload;\\n\\t        if (showLen) {\\n\\t            actuallyPayload = pendings.showTip[showLen - 1];\\n\\t        }\\n\\t        else if (hideLen) {\\n\\t            actuallyPayload = pendings.hideTip[hideLen - 1];\\n\\t        }\\n\\t        if (actuallyPayload) {\\n\\t            actuallyPayload.dispatchAction = null;\\n\\t            api.dispatchAction(actuallyPayload);\\n\\t        }\\n\\t    }\\n\\n\\t    function onLeave(record, e, dispatchAction) {\\n\\t        record.handler('leave', null, dispatchAction);\\n\\t    }\\n\\n\\t    function doEnter(currTrigger, record, e, dispatchAction) {\\n\\t        record.handler(currTrigger, e, dispatchAction);\\n\\t    }\\n\\n\\t    function makeDispatchAction(api) {\\n\\t        var pendings = {\\n\\t            showTip: [],\\n\\t            hideTip: []\\n\\t        };\\n\\t        // FIXME\\n\\t        // better approach?\\n\\t        // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\\n\\t        // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\\n\\t        // So we have to add \\\"final stage\\\" to merge those dispatched actions.\\n\\t        var dispatchAction = function (payload) {\\n\\t            var pendingList = pendings[payload.type];\\n\\t            if (pendingList) {\\n\\t                pendingList.push(payload);\\n\\t            }\\n\\t            else {\\n\\t                payload.dispatchAction = dispatchAction;\\n\\t                api.dispatchAction(payload);\\n\\t            }\\n\\t        };\\n\\n\\t        return {\\n\\t            dispatchAction: dispatchAction,\\n\\t            pendings: pendings\\n\\t        };\\n\\t    }\\n\\n\\t    /**\\n\\t     * @param {string} key\\n\\t     * @param {module:echarts/ExtensionAPI} api\\n\\t     */\\n\\t    globalListener.unregister = function (key, api) {\\n\\t        if (env.node) {\\n\\t            return;\\n\\t        }\\n\\t        var zr = api.getZr();\\n\\t        var record = (get(zr).records || {})[key];\\n\\t        if (record) {\\n\\t            get(zr).records[key] = null;\\n\\t        }\\n\\t    };\\n\\n\\t    module.exports = globalListener;\\n\\n\\n/***/ },\\n/* 304 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t'use strict';\\n\\n\\n\\t    var graphic = __webpack_require__(18);\\n\\t    var BaseAxisPointer = __webpack_require__(305);\\n\\t    var viewHelper = __webpack_require__(306);\\n\\t    var cartesianAxisHelper = __webpack_require__(138);\\n\\t    var AxisView = __webpack_require__(136);\\n\\n\\t    var CartesianAxisPointer = BaseAxisPointer.extend({\\n\\n\\t        /**\\n\\t         * @override\\n\\t         */\\n\\t        makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\\n\\t            var axis = axisModel.axis;\\n\\t            var grid = axis.grid;\\n\\t            var axisPointerType = axisPointerModel.get('type');\\n\\t            var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\\n\\t            var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\\n\\n\\t            if (axisPointerType && axisPointerType !== 'none') {\\n\\t                var elStyle = viewHelper.buildElStyle(axisPointerModel);\\n\\t                var pointerOption = pointerShapeBuilder[axisPointerType](\\n\\t                    axis, pixelValue, otherExtent, elStyle\\n\\t                );\\n\\t                pointerOption.style = elStyle;\\n\\t                elOption.graphicKey = pointerOption.type;\\n\\t                elOption.pointer = pointerOption;\\n\\t            }\\n\\n\\t            var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\\n\\t            viewHelper.buildCartesianSingleLabelElOption(\\n\\t                value, elOption, layoutInfo, axisModel, axisPointerModel, api\\n\\t            );\\n\\t        },\\n\\n\\t        /**\\n\\t         * @override\\n\\t         */\\n\\t        getHandleTransform: function (value, axisModel, axisPointerModel) {\\n\\t            var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\\n\\t                labelInside: false\\n\\t            });\\n\\t            layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\\n\\t            return {\\n\\t                position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\\n\\t                rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\\n\\t            };\\n\\t        },\\n\\n\\t        /**\\n\\t         * @override\\n\\t         */\\n\\t        updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\\n\\t            var axis = axisModel.axis;\\n\\t            var grid = axis.grid;\\n\\t            var axisExtent = axis.getGlobalExtent(true);\\n\\t            var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\\n\\t            var dimIndex = axis.dim === 'x' ? 0 : 1;\\n\\n\\t            var currPosition = transform.position;\\n\\t            currPosition[dimIndex] += delta[dimIndex];\\n\\t            currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\\n\\t            currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\\n\\n\\t            var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\\n\\t            var cursorPoint = [cursorOtherValue, cursorOtherValue];\\n\\t            cursorPoint[dimIndex] = currPosition[dimIndex];\\n\\n\\t            // Make tooltip do not overlap axisPointer and in the middle of the grid.\\n\\t            var tooltipOptions = [{verticalAlign: 'middle'}, {align: 'center'}];\\n\\n\\t            return {\\n\\t                position: currPosition,\\n\\t                rotation: transform.rotation,\\n\\t                cursorPoint: cursorPoint,\\n\\t                tooltipOption: tooltipOptions[dimIndex]\\n\\t            };\\n\\t        }\\n\\n\\t    });\\n\\n\\t    function getCartesian(grid, axis) {\\n\\t        var opt = {};\\n\\t        opt[axis.dim + 'AxisIndex'] = axis.index;\\n\\t        return grid.getCartesian(opt);\\n\\t    }\\n\\n\\t    var pointerShapeBuilder = {\\n\\n\\t        line: function (axis, pixelValue, otherExtent, elStyle) {\\n\\t            var targetShape = viewHelper.makeLineShape(\\n\\t                [pixelValue, otherExtent[0]],\\n\\t                [pixelValue, otherExtent[1]],\\n\\t                getAxisDimIndex(axis)\\n\\t            );\\n\\t            graphic.subPixelOptimizeLine({\\n\\t                shape: targetShape,\\n\\t                style: elStyle\\n\\t            });\\n\\t            return {\\n\\t                type: 'Line',\\n\\t                shape: targetShape\\n\\t            };\\n\\t        },\\n\\n\\t        shadow: function (axis, pixelValue, otherExtent, elStyle) {\\n\\t            var bandWidth = axis.getBandWidth();\\n\\t            var span = otherExtent[1] - otherExtent[0];\\n\\t            return {\\n\\t                type: 'Rect',\\n\\t                shape: viewHelper.makeRectShape(\\n\\t                    [pixelValue - bandWidth / 2, otherExtent[0]],\\n\\t                    [bandWidth, span],\\n\\t                    getAxisDimIndex(axis)\\n\\t                )\\n\\t            };\\n\\t        }\\n\\t    };\\n\\n\\t    function getAxisDimIndex(axis) {\\n\\t        return axis.dim === 'x' ? 0 : 1;\\n\\t    }\\n\\n\\t    AxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\\n\\n\\t    module.exports = CartesianAxisPointer;\\n\\n\\n/***/ },\\n/* 305 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t'use strict';\\n\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var clazzUtil = __webpack_require__(13);\\n\\t    var graphic = __webpack_require__(18);\\n\\t    var get = __webpack_require__(5).makeGetter();\\n\\t    var axisPointerModelHelper = __webpack_require__(137);\\n\\t    var eventTool = __webpack_require__(88);\\n\\t    var throttle = __webpack_require__(81);\\n\\n\\t    var clone = zrUtil.clone;\\n\\t    var bind = zrUtil.bind;\\n\\n\\t    /**\\n\\t     * Base axis pointer class in 2D.\\n\\t     * Implemenents {module:echarts/component/axis/IAxisPointer}.\\n\\t     */\\n\\t    function BaseAxisPointer () {\\n\\t    }\\n\\n\\t    BaseAxisPointer.prototype = {\\n\\n\\t        /**\\n\\t         * @private\\n\\t         */\\n\\t        _group: null,\\n\\n\\t        /**\\n\\t         * @private\\n\\t         */\\n\\t        _lastGraphicKey: null,\\n\\n\\t        /**\\n\\t         * @private\\n\\t         */\\n\\t        _handle: null,\\n\\n\\t        /**\\n\\t         * @private\\n\\t         */\\n\\t        _dragging: false,\\n\\n\\t        /**\\n\\t         * @private\\n\\t         */\\n\\t        _lastValue: null,\\n\\n\\t        /**\\n\\t         * @private\\n\\t         */\\n\\t        _lastStatus: null,\\n\\n\\t        /**\\n\\t         * @private\\n\\t         */\\n\\t        _payloadInfo: null,\\n\\n\\t        /**\\n\\t         * In px, arbitrary value. Do not set too small,\\n\\t         * no animation is ok for most cases.\\n\\t         * @protected\\n\\t         */\\n\\t        animationThreshold: 15,\\n\\n\\t        /**\\n\\t         * @implement\\n\\t         */\\n\\t        render: function (axisModel, axisPointerModel, api, forceRender) {\\n\\t            var value = axisPointerModel.get('value');\\n\\t            var status = axisPointerModel.get('status');\\n\\n\\t            // Bind them to `this`, not in closure, otherwise they will not\\n\\t            // be replaced when user calling setOption in not merge mode.\\n\\t            this._axisModel = axisModel;\\n\\t            this._axisPointerModel = axisPointerModel;\\n\\t            this._api = api;\\n\\n\\t            // Optimize: `render` will be called repeatly during mouse move.\\n\\t            // So it is power consuming if performing `render` each time,\\n\\t            // especially on mobile device.\\n\\t            if (!forceRender\\n\\t                && this._lastValue === value\\n\\t                && this._lastStatus === status\\n\\t            ) {\\n\\t                return;\\n\\t            }\\n\\t            this._lastValue = value;\\n\\t            this._lastStatus = status;\\n\\n\\t            var group = this._group;\\n\\t            var handle = this._handle;\\n\\n\\t            if (!status || status === 'hide') {\\n\\t                // Do not clear here, for animation better.\\n\\t                group && group.hide();\\n\\t                handle && handle.hide();\\n\\t                return;\\n\\t            }\\n\\t            group && group.show();\\n\\t            handle && handle.show();\\n\\n\\t            // Otherwise status is 'show'\\n\\t            var elOption = {};\\n\\t            this.makeElOption(elOption, value, axisModel, axisPointerModel, api);\\n\\n\\t            // Enable change axis pointer type.\\n\\t            var graphicKey = elOption.graphicKey;\\n\\t            if (graphicKey !== this._lastGraphicKey) {\\n\\t                this.clear(api);\\n\\t            }\\n\\t            this._lastGraphicKey = graphicKey;\\n\\n\\t            var moveAnimation = this._moveAnimation =\\n\\t                this.determineAnimation(axisModel, axisPointerModel);\\n\\n\\t            if (!group) {\\n\\t                group = this._group = new graphic.Group();\\n\\t                this.createPointerEl(group, elOption, axisModel, axisPointerModel);\\n\\t                this.createLabelEl(group, elOption, axisModel, axisPointerModel);\\n\\t                api.getZr().add(group);\\n\\t            }\\n\\t            else {\\n\\t                var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\\n\\t                this.updatePointerEl(group, elOption, doUpdateProps, axisPointerModel);\\n\\t                this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\\n\\t            }\\n\\n\\t            updateMandatoryProps(group, axisPointerModel, true);\\n\\n\\t            this._renderHandle(value);\\n\\t        },\\n\\n\\t        /**\\n\\t         * @implement\\n\\t         */\\n\\t        remove: function (api) {\\n\\t            this.clear(api);\\n\\t        },\\n\\n\\t        /**\\n\\t         * @implement\\n\\t         */\\n\\t        dispose: function (api) {\\n\\t            this.clear(api);\\n\\t        },\\n\\n\\t        /**\\n\\t         * @protected\\n\\t         */\\n\\t        determineAnimation: function (axisModel, axisPointerModel) {\\n\\t            var animation = axisPointerModel.get('animation');\\n\\t            var axis = axisModel.axis;\\n\\t            var isCategoryAxis = axis.type === 'category';\\n\\t            var useSnap = axisPointerModel.get('snap');\\n\\n\\t            // Value axis without snap always do not snap.\\n\\t            if (!useSnap && !isCategoryAxis) {\\n\\t                return false;\\n\\t            }\\n\\n\\t            if (animation === 'auto' || animation == null) {\\n\\t                var animationThreshold = this.animationThreshold;\\n\\t                if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\\n\\t                    return true;\\n\\t                }\\n\\n\\t                // It is important to auto animation when snap used. Consider if there is\\n\\t                // a dataZoom, animation will be disabled when too many points exist, while\\n\\t                // it will be enabled for better visual effect when little points exist.\\n\\t                if (useSnap) {\\n\\t                    var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\\n\\t                    var axisExtent = axis.getExtent();\\n\\t                    // Approximate band width\\n\\t                    return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\\n\\t                }\\n\\n\\t                return false;\\n\\t            }\\n\\n\\t            return animation === true;\\n\\t        },\\n\\n\\t        /**\\n\\t         * add {pointer, label, graphicKey} to elOption\\n\\t         * @protected\\n\\t         */\\n\\t        makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\\n\\t            // Shoule be implemenented by sub-class.\\n\\t        },\\n\\n\\t        /**\\n\\t         * @protected\\n\\t         */\\n\\t        createPointerEl: function (group, elOption, axisModel, axisPointerModel) {\\n\\t            var pointerOption = elOption.pointer;\\n\\t            if (pointerOption) {\\n\\t                var pointerEl = get(group).pointerEl = new graphic[pointerOption.type](\\n\\t                    clone(elOption.pointer)\\n\\t                );\\n\\t                group.add(pointerEl);\\n\\t            }\\n\\t        },\\n\\n\\t        /**\\n\\t         * @protected\\n\\t         */\\n\\t        createLabelEl: function (group, elOption, axisModel, axisPointerModel) {\\n\\t            if (elOption.label) {\\n\\t                var labelEl = get(group).labelEl = new graphic.Rect(\\n\\t                    clone(elOption.label)\\n\\t                );\\n\\n\\t                group.add(labelEl);\\n\\t                updateLabelShowHide(labelEl, axisPointerModel);\\n\\t            }\\n\\t        },\\n\\n\\t        /**\\n\\t         * @protected\\n\\t         */\\n\\t        updatePointerEl: function (group, elOption, updateProps) {\\n\\t            var pointerEl = get(group).pointerEl;\\n\\t            if (pointerEl) {\\n\\t                pointerEl.setStyle(elOption.pointer.style);\\n\\t                updateProps(pointerEl, {shape: elOption.pointer.shape});\\n\\t            }\\n\\t        },\\n\\n\\t        /**\\n\\t         * @protected\\n\\t         */\\n\\t        updateLabelEl: function (group, elOption, updateProps, axisPointerModel) {\\n\\t            var labelEl = get(group).labelEl;\\n\\t            if (labelEl) {\\n\\t                labelEl.setStyle(elOption.label.style);\\n\\t                updateProps(labelEl, {\\n\\t                    // Consider text length change in vertical axis, animation should\\n\\t                    // be used on shape, otherwise the effect will be weird.\\n\\t                    shape: elOption.label.shape,\\n\\t                    position: elOption.label.position\\n\\t                });\\n\\n\\t                updateLabelShowHide(labelEl, axisPointerModel);\\n\\t            }\\n\\t        },\\n\\n\\t        /**\\n\\t         * @private\\n\\t         */\\n\\t        _renderHandle: function (value) {\\n\\t            if (this._dragging || !this.updateHandleTransform) {\\n\\t                return;\\n\\t            }\\n\\n\\t            var axisPointerModel = this._axisPointerModel;\\n\\t            var zr = this._api.getZr();\\n\\t            var handle = this._handle;\\n\\t            var handleModel = axisPointerModel.getModel('handle');\\n\\n\\t            var status = axisPointerModel.get('status');\\n\\t            if (!handleModel.get('show') || !status || status === 'hide') {\\n\\t                handle && zr.remove(handle);\\n\\t                this._handle = null;\\n\\t                return;\\n\\t            }\\n\\n\\t            var isInit;\\n\\t            if (!this._handle) {\\n\\t                isInit = true;\\n\\t                handle = this._handle = createIcon(handleModel, {\\n\\t                    onmousemove: function (e) {\\n\\t                        // Fot mobile devicem, prevent screen slider on the button.\\n\\t                        eventTool.stop(e.event);\\n\\t                    },\\n\\t                    onmousedown: bind(this._onHandleDragMove, this, 0, 0),\\n\\t                    drift: bind(this._onHandleDragMove, this),\\n\\t                    ondragend: bind(this._onHandleDragEnd, this)\\n\\t                });\\n\\t                zr.add(handle);\\n\\t            }\\n\\n\\t            updateMandatoryProps(handle, axisPointerModel, false);\\n\\n\\t            // update style\\n\\t            var includeStyles = [\\n\\t                'color', 'borderColor', 'borderWidth', 'opacity',\\n\\t                'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'\\n\\t            ];\\n\\t            handle.setStyle(handleModel.getItemStyle(null, includeStyles));\\n\\n\\t            // update position\\n\\t            var handleSize = handleModel.get('size');\\n\\t            if (!zrUtil.isArray(handleSize)) {\\n\\t                handleSize = [handleSize, handleSize];\\n\\t            }\\n\\t            handle.attr('scale', [handleSize[0] / 2, handleSize[1] / 2]);\\n\\n\\t            throttle.createOrUpdate(\\n\\t                this,\\n\\t                '_doDispatchAxisPointer',\\n\\t                handleModel.get('throttle') || 0,\\n\\t                'fixRate'\\n\\t            );\\n\\n\\t            this._moveHandleToValue(value, isInit);\\n\\t        },\\n\\n\\t        /**\\n\\t         * @private\\n\\t         */\\n\\t        _moveHandleToValue: function (value, isInit) {\\n\\t            updateProps(\\n\\t                this._axisPointerModel,\\n\\t                !isInit && this._moveAnimation,\\n\\t                this._handle,\\n\\t                getHandleTransProps(this.getHandleTransform(\\n\\t                    value, this._axisModel, this._axisPointerModel\\n\\t                ))\\n\\t            );\\n\\t        },\\n\\n\\t        /**\\n\\t         * @private\\n\\t         */\\n\\t        _onHandleDragMove: function (dx, dy) {\\n\\t            var handle = this._handle;\\n\\t            if (!handle) {\\n\\t                return;\\n\\t            }\\n\\n\\t            this._dragging = true;\\n\\n\\t            // Persistent for throttle.\\n\\t            var trans = this.updateHandleTransform(\\n\\t                getHandleTransProps(handle),\\n\\t                [dx, dy],\\n\\t                this._axisModel,\\n\\t                this._axisPointerModel\\n\\t            );\\n\\t            this._payloadInfo = trans;\\n\\n\\t            handle.stopAnimation();\\n\\t            handle.attr(getHandleTransProps(trans));\\n\\t            get(handle).lastProp = null;\\n\\n\\t            this._doDispatchAxisPointer();\\n\\t        },\\n\\n\\t        /**\\n\\t         * Throttled method.\\n\\t         * @private\\n\\t         */\\n\\t        _doDispatchAxisPointer: function () {\\n\\t            var handle = this._handle;\\n\\t            if (!handle) {\\n\\t                return;\\n\\t            }\\n\\n\\t            var payloadInfo = this._payloadInfo;\\n\\t            var axisModel = this._axisModel;\\n\\t            this._api.dispatchAction({\\n\\t                type: 'updateAxisPointer',\\n\\t                x: payloadInfo.cursorPoint[0],\\n\\t                y: payloadInfo.cursorPoint[1],\\n\\t                tooltipOption: payloadInfo.tooltipOption,\\n\\t                axesInfo: [{\\n\\t                    axisDim: axisModel.axis.dim,\\n\\t                    axisIndex: axisModel.componentIndex\\n\\t                }]\\n\\t            });\\n\\t        },\\n\\n\\t        /**\\n\\t         * @private\\n\\t         */\\n\\t        _onHandleDragEnd: function (moveAnimation) {\\n\\t            this._dragging = false;\\n\\t            var handle = this._handle;\\n\\t            if (!handle) {\\n\\t                return;\\n\\t            }\\n\\n\\t            var value = this._axisPointerModel.get('value');\\n\\t            // Consider snap or categroy axis, handle may be not consistent with\\n\\t            // axisPointer. So move handle to align the exact value position when\\n\\t            // drag ended.\\n\\t            this._moveHandleToValue(value);\\n\\n\\t            // For the effect: tooltip will be shown when finger holding on handle\\n\\t            // button, and will be hidden after finger left handle button.\\n\\t            this._api.dispatchAction({\\n\\t                type: 'hideTip'\\n\\t            });\\n\\t        },\\n\\n\\t        /**\\n\\t         * Should be implemenented by sub-class if support `handle`.\\n\\t         * @protected\\n\\t         * @param {number} value\\n\\t         * @param {module:echarts/model/Model} axisModel\\n\\t         * @param {module:echarts/model/Model} axisPointerModel\\n\\t         * @return {Object} {position: [x, y], rotation: 0}\\n\\t         */\\n\\t        getHandleTransform: null,\\n\\n\\t        /**\\n\\t         * * Should be implemenented by sub-class if support `handle`.\\n\\t         * @protected\\n\\t         * @param {Object} transform {position, rotation}\\n\\t         * @param {Array.<number>} delta [dx, dy]\\n\\t         * @param {module:echarts/model/Model} axisModel\\n\\t         * @param {module:echarts/model/Model} axisPointerModel\\n\\t         * @return {Object} {position: [x, y], rotation: 0, cursorPoint: [x, y]}\\n\\t         */\\n\\t        updateHandleTransform: null,\\n\\n\\t        /**\\n\\t         * @private\\n\\t         */\\n\\t        clear: function (api) {\\n\\t            this._lastValue = null;\\n\\t            this._lastStatus = null;\\n\\n\\t            var zr = api.getZr();\\n\\t            var group = this._group;\\n\\t            var handle = this._handle;\\n\\t            if (zr && group) {\\n\\t                this._lastGraphicKey = null;\\n\\t                group && zr.remove(group);\\n\\t                handle && zr.remove(handle);\\n\\t                this._group = null;\\n\\t                this._handle = null;\\n\\t                this._payloadInfo = null;\\n\\t            }\\n\\t        },\\n\\n\\t        /**\\n\\t         * @protected\\n\\t         */\\n\\t        doClear: function () {\\n\\t            // Implemented by sub-class if necessary.\\n\\t        },\\n\\n\\t        /**\\n\\t         * @protected\\n\\t         * @param {Array.<number>} xy\\n\\t         * @param {Array.<number>} wh\\n\\t         * @param {number} [xDimIndex=0] or 1\\n\\t         */\\n\\t        buildLabel: function (xy, wh, xDimIndex) {\\n\\t            xDimIndex = xDimIndex || 0;\\n\\t            return {\\n\\t                x: xy[xDimIndex],\\n\\t                y: xy[1 - xDimIndex],\\n\\t                width: wh[xDimIndex],\\n\\t                height: wh[1 - xDimIndex]\\n\\t            };\\n\\t        }\\n\\t    };\\n\\n\\t    BaseAxisPointer.prototype.constructor = BaseAxisPointer;\\n\\n\\n\\t    function updateProps(animationModel, moveAnimation, el, props) {\\n\\t        // Animation optimize.\\n\\t        if (!propsEqual(get(el).lastProp, props)) {\\n\\t            get(el).lastProp = props;\\n\\t            moveAnimation\\n\\t                ? graphic.updateProps(el, props, animationModel)\\n\\t                : (el.stopAnimation(), el.attr(props));\\n\\t        }\\n\\t    }\\n\\n\\t    function propsEqual(lastProps, newProps) {\\n\\t        if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\\n\\t            var equals = true;\\n\\t            zrUtil.each(newProps, function (item, key) {\\n\\t                equals &= propsEqual(lastProps[key], item);\\n\\t            });\\n\\t            return !!equals;\\n\\t        }\\n\\t        else {\\n\\t            return lastProps === newProps;\\n\\t        }\\n\\t    }\\n\\n\\t    function updateLabelShowHide(labelEl, axisPointerModel) {\\n\\t        labelEl[axisPointerModel.get('label.show') ? 'show' : 'hide']();\\n\\t    }\\n\\n\\t    function getHandleTransProps(trans) {\\n\\t        return {\\n\\t            position: trans.position.slice(),\\n\\t            rotation: trans.rotation || 0\\n\\t        };\\n\\t    }\\n\\n\\t    function createIcon(handleModel, handlers) {\\n\\t        var iconStr = handleModel.get('icon');\\n\\t        var style = {\\n\\t            x: -1, y: -1, width: 2, height: 2\\n\\t        };\\n\\t        var opt = zrUtil.extend({\\n\\t            style: {\\n\\t                strokeNoScale: true\\n\\t            },\\n\\t            rectHover: true,\\n\\t            cursor: 'move',\\n\\t            draggable: true\\n\\t        }, handlers);\\n\\n\\t        return iconStr.indexOf('image://') === 0\\n\\t            ? (\\n\\t                style.image = iconStr.slice(8),\\n\\t                opt.style = style,\\n\\t                new graphic.Image(opt)\\n\\t            )\\n\\t            : graphic.makePath(\\n\\t                iconStr.replace('path://', ''),\\n\\t                opt,\\n\\t                style,\\n\\t                'center'\\n\\t            );\\n\\t    }\\n\\n\\t    function updateMandatoryProps(group, axisPointerModel, silent) {\\n\\t        var z = axisPointerModel.get('z');\\n\\t        var zlevel = axisPointerModel.get('zlevel');\\n\\n\\t        group && group.traverse(function (el) {\\n\\t            if (el.type !== 'group') {\\n\\t                z != null && (el.z = z);\\n\\t                zlevel != null && (el.zlevel = zlevel);\\n\\t                el.silent = silent;\\n\\t            }\\n\\t        });\\n\\t    }\\n\\n\\t    clazzUtil.enableClassExtend(BaseAxisPointer);\\n\\n\\t    module.exports = BaseAxisPointer;\\n\\n\\n/***/ },\\n/* 306 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t'use strict';\\n\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var graphic = __webpack_require__(18);\\n\\t    var textContain = __webpack_require__(8);\\n\\t    var formatUtil = __webpack_require__(6);\\n\\t    var matrix = __webpack_require__(11);\\n\\t    var axisHelper = __webpack_require__(101);\\n\\t    var AxisBuilder = __webpack_require__(135);\\n\\n\\t    var helper = {};\\n\\n\\t    /**\\n\\t     * @param {module:echarts/model/Model} axisPointerModel\\n\\t     */\\n\\t    helper.buildElStyle = function (axisPointerModel) {\\n\\t        var axisPointerType = axisPointerModel.get('type');\\n\\t        var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\\n\\t        var style;\\n\\t        if (axisPointerType === 'line') {\\n\\t            style = styleModel.getLineStyle();\\n\\t            style.fill = null;\\n\\t        }\\n\\t        else if (axisPointerType === 'shadow') {\\n\\t            style = styleModel.getAreaStyle();\\n\\t            style.stroke = null;\\n\\t        }\\n\\t        return style;\\n\\t    };\\n\\n\\t    /**\\n\\t     * @param {Function} labelPos {align, verticalAlign, position}\\n\\t     */\\n\\t    helper.buildLabelElOption = function (\\n\\t        elOption, axisModel, axisPointerModel, api, labelPos\\n\\t    ) {\\n\\t        var value = axisPointerModel.get('value');\\n\\t        var text = helper.getValueLabel(\\n\\t            value, axisModel.axis, axisModel.ecModel,\\n\\t            axisPointerModel.get('seriesDataIndices'),\\n\\t            {\\n\\t                precision: axisPointerModel.get('label.precision'),\\n\\t                formatter: axisPointerModel.get('label.formatter')\\n\\t            }\\n\\t        );\\n\\t        var labelModel = axisPointerModel.getModel('label');\\n\\t        var textStyleModel = labelModel.getModel('textStyle');\\n\\t        var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\\n\\n\\t        var font = textStyleModel.getFont();\\n\\t        var textRect = textContain.getBoundingRect(\\n\\t            text, font, labelPos.textAlign, labelPos.textBaseline\\n\\t        );\\n\\n\\t        var position = labelPos.position;\\n\\t        var width = textRect.width + paddings[1] + paddings[3];\\n\\t        var height = textRect.height + paddings[0] + paddings[2];\\n\\n\\t        // Adjust by align.\\n\\t        var align = labelPos.align;\\n\\t        align === 'right' && (position[0] -= width);\\n\\t        align === 'center' && (position[0] -= width / 2);\\n\\t        var verticalAlign = labelPos.verticalAlign;\\n\\t        verticalAlign === 'bottom' && (position[1] -= height);\\n\\t        verticalAlign === 'middle' && (position[1] -= height / 2);\\n\\n\\t        // Not overflow ec container\\n\\t        confineInContainer(position, width, height, api);\\n\\n\\t        var bgColor = labelModel.get('backgroundColor');\\n\\t        if (!bgColor || bgColor === 'auto') {\\n\\t            bgColor = axisModel.get('axisLine.lineStyle.color');\\n\\t        }\\n\\n\\t        elOption.label = {\\n\\t            shape: {x: 0, y: 0, width: width, height: height, r: labelModel.get('borderRadius')},\\n\\t            position: position.slice(),\\n\\t            style: {\\n\\t                text: text,\\n\\t                textFont: font,\\n\\t                textFill: textStyleModel.getTextColor(),\\n\\t                textPosition: 'inside',\\n\\t                fill: bgColor,\\n\\t                stroke: labelModel.get('borderColor') || 'transparent',\\n\\t                lineWidth: labelModel.get('borderWidth') || 0,\\n\\t                shadowBlur: labelModel.get('shadowBlur'),\\n\\t                shadowColor: labelModel.get('shadowColor'),\\n\\t                shadowOffsetX: labelModel.get('shadowOffsetX'),\\n\\t                shadowOffsetY: labelModel.get('shadowOffsetY')\\n\\t            },\\n\\t            // Lable should be over axisPointer.\\n\\t            z2: 10\\n\\t        };\\n\\t    };\\n\\n\\t    // Do not overflow ec container\\n\\t    function confineInContainer(position, width, height, api) {\\n\\t        var viewWidth = api.getWidth();\\n\\t        var viewHeight = api.getHeight();\\n\\t        position[0] = Math.min(position[0] + width, viewWidth) - width;\\n\\t        position[1] = Math.min(position[1] + height, viewHeight) - height;\\n\\t        position[0] = Math.max(position[0], 0);\\n\\t        position[1] = Math.max(position[1], 0);\\n\\t    }\\n\\n\\t    /**\\n\\t     * @param {number} value\\n\\t     * @param {module:echarts/coord/Axis} axis\\n\\t     * @param {module:echarts/model/Global} ecModel\\n\\t     * @param {Object} opt\\n\\t     * @param {Array.<Object>} seriesDataIndices\\n\\t     * @param {number|string} opt.precision 'auto' or a number\\n\\t     * @param {string|Function} opt.formatter label formatter\\n\\t     */\\n\\t    helper.getValueLabel = function (value, axis, ecModel, seriesDataIndices, opt) {\\n\\t        var text = axis.scale.getLabel(\\n\\t            // If `precision` is set, width can be fixed (like '12.00500'), which\\n\\t            // helps to debounce when when moving label.\\n\\t            value, {precision: opt.precision}\\n\\t        );\\n\\t        var formatter = opt.formatter;\\n\\n\\t        if (formatter) {\\n\\t            var params = {\\n\\t                value: axisHelper.getAxisRawValue(axis, value),\\n\\t                seriesData: []\\n\\t            };\\n\\t            zrUtil.each(seriesDataIndices, function (idxItem) {\\n\\t                var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\\n\\t                var dataIndex = idxItem.dataIndexInside;\\n\\t                var dataParams = series && series.getDataParams(dataIndex);\\n\\t                dataParams && params.seriesData.push(dataParams);\\n\\t            });\\n\\n\\t            if (zrUtil.isString(formatter)) {\\n\\t                text = formatter.replace('{value}', text);\\n\\t            }\\n\\t            else if (zrUtil.isFunction(formatter)) {\\n\\t                text = formatter(params);\\n\\t            }\\n\\t        }\\n\\n\\t        return text;\\n\\t    };\\n\\n\\t    /**\\n\\t     * @param {module:echarts/coord/Axis} axis\\n\\t     * @param {number} value\\n\\t     * @param {Object} layoutInfo {\\n\\t     *  rotation, position, labelOffset, labelDirection, labelMargin\\n\\t     * }\\n\\t     */\\n\\t    helper.getTransformedPosition = function (axis, value, layoutInfo) {\\n\\t        var transform = matrix.create();\\n\\t        matrix.rotate(transform, transform, layoutInfo.rotation);\\n\\t        matrix.translate(transform, transform, layoutInfo.position);\\n\\n\\t        return graphic.applyTransform([\\n\\t            axis.dataToCoord(value),\\n\\t            (layoutInfo.labelOffset || 0)\\n\\t                + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)\\n\\t        ], transform);\\n\\t    };\\n\\n\\t    helper.buildCartesianSingleLabelElOption = function (\\n\\t        value, elOption, layoutInfo, axisModel, axisPointerModel, api\\n\\t    ) {\\n\\t        var textLayout = AxisBuilder.innerTextLayout(\\n\\t            layoutInfo.rotation, 0, layoutInfo.labelDirection\\n\\t        );\\n\\t        layoutInfo.labelMargin = axisPointerModel.get('label.margin');\\n\\t        helper.buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\\n\\t            position: helper.getTransformedPosition(axisModel.axis, value, layoutInfo),\\n\\t            align: textLayout.textAlign,\\n\\t            verticalAlign: textLayout.textVerticalAlign\\n\\t        });\\n\\t    };\\n\\n\\t    /**\\n\\t     * @param {Array.<number>} p1\\n\\t     * @param {Array.<number>} p2\\n\\t     * @param {number} [xDimIndex=0] or 1\\n\\t     */\\n\\t    helper.makeLineShape = function (p1, p2, xDimIndex) {\\n\\t        xDimIndex = xDimIndex || 0;\\n\\t        return {\\n\\t            x1: p1[xDimIndex],\\n\\t            y1: p1[1 - xDimIndex],\\n\\t            x2: p2[xDimIndex],\\n\\t            y2: p2[1 - xDimIndex]\\n\\t        };\\n\\t    };\\n\\n\\t    /**\\n\\t     * @param {Array.<number>} xy\\n\\t     * @param {Array.<number>} wh\\n\\t     * @param {number} [xDimIndex=0] or 1\\n\\t     */\\n\\t    helper.makeRectShape = function (xy, wh, xDimIndex) {\\n\\t        xDimIndex = xDimIndex || 0;\\n\\t        return {\\n\\t            x: xy[xDimIndex],\\n\\t            y: xy[1 - xDimIndex],\\n\\t            width: wh[xDimIndex],\\n\\t            height: wh[1 - xDimIndex]\\n\\t        };\\n\\t    };\\n\\n\\t    helper.makeSectorShape = function (cx, cy, r0, r, startAngle, endAngle) {\\n\\t        return {\\n\\t            cx: cx,\\n\\t            cy: cy,\\n\\t            r0: r0,\\n\\t            r: r,\\n\\t            startAngle: startAngle,\\n\\t            endAngle: endAngle,\\n\\t            clockwise: true\\n\\t        };\\n\\t    };\\n\\n\\t    module.exports = helper;\\n\\n\\n/***/ },\\n/* 307 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t'use strict';\\n\\n\\n\\t    var graphic = __webpack_require__(18);\\n\\t    var BaseAxisPointer = __webpack_require__(305);\\n\\t    var viewHelper = __webpack_require__(306);\\n\\t    var singleAxisHelper = __webpack_require__(296);\\n\\t    var AxisView = __webpack_require__(136);\\n\\n\\t    var XY = ['x', 'y'];\\n\\t    var WH = ['width', 'height'];\\n\\n\\t    var SingleAxisPointer = BaseAxisPointer.extend({\\n\\n\\t        /**\\n\\t         * @override\\n\\t         */\\n\\t        makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\\n\\t            var axis = axisModel.axis;\\n\\t            var coordSys = axis.coordinateSystem;\\n\\t            var otherExtent = getGlobalExtent(coordSys, 1 - getPointDimIndex(axis));\\n\\t            var pixelValue = coordSys.dataToPoint(value)[0];\\n\\n\\t            var axisPointerType = axisPointerModel.get('type');\\n\\t            if (axisPointerType && axisPointerType !== 'none') {\\n\\t                var elStyle = viewHelper.buildElStyle(axisPointerModel);\\n\\t                var pointerOption = pointerShapeBuilder[axisPointerType](\\n\\t                    axis, pixelValue, otherExtent, elStyle\\n\\t                );\\n\\t                pointerOption.style = elStyle;\\n\\n\\t                elOption.graphicKey = pointerOption.type;\\n\\t                elOption.pointer = pointerOption;\\n\\t            }\\n\\n\\t            var layoutInfo = singleAxisHelper.layout(axisModel);\\n\\t            viewHelper.buildCartesianSingleLabelElOption(\\n\\t                value, elOption, layoutInfo, axisModel, axisPointerModel, api\\n\\t            );\\n\\t        },\\n\\n\\t        /**\\n\\t         * @override\\n\\t         */\\n\\t        getHandleTransform: function (value, axisModel, axisPointerModel) {\\n\\t            var layoutInfo = singleAxisHelper.layout(axisModel, {labelInside: false});\\n\\t            layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\\n\\t            return {\\n\\t                position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\\n\\t                rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\\n\\t            };\\n\\t        },\\n\\n\\t        /**\\n\\t         * @override\\n\\t         */\\n\\t        updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\\n\\t            var axis = axisModel.axis;\\n\\t            var coordSys = axis.coordinateSystem;\\n\\t            var dimIndex = getPointDimIndex(axis);\\n\\t            var axisExtent = getGlobalExtent(coordSys, dimIndex);\\n\\t            var currPosition = transform.position;\\n\\t            currPosition[dimIndex] += delta[dimIndex];\\n\\t            currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\\n\\t            currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\\n\\t            var otherExtent = getGlobalExtent(coordSys, 1 - dimIndex);\\n\\t            var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\\n\\t            var cursorPoint = [cursorOtherValue, cursorOtherValue];\\n\\t            cursorPoint[dimIndex] = currPosition[dimIndex];\\n\\n\\t            return {\\n\\t                position: currPosition,\\n\\t                rotation: transform.rotation,\\n\\t                cursorPoint: cursorPoint,\\n\\t                tooltipOption: {\\n\\t                    verticalAlign: 'middle'\\n\\t                }\\n\\t            };\\n\\t        }\\n\\t    });\\n\\n\\t    var pointerShapeBuilder = {\\n\\n\\t        line: function (axis, pixelValue, otherExtent, elStyle) {\\n\\t            var targetShape = viewHelper.makeLineShape(\\n\\t                [pixelValue, otherExtent[0]],\\n\\t                [pixelValue, otherExtent[1]],\\n\\t                getPointDimIndex(axis)\\n\\t            );\\n\\t            graphic.subPixelOptimizeLine({\\n\\t                shape: targetShape,\\n\\t                style: elStyle\\n\\t            });\\n\\t            return {\\n\\t                type: 'Line',\\n\\t                shape: targetShape\\n\\t            };\\n\\t        },\\n\\n\\t        shadow: function (axis, pixelValue, otherExtent, elStyle) {\\n\\t            var bandWidth = axis.getBandWidth();\\n\\t            var span = otherExtent[1] - otherExtent[0];\\n\\t            return {\\n\\t                type: 'Rect',\\n\\t                shape: viewHelper.makeRectShape(\\n\\t                    [pixelValue - bandWidth / 2, otherExtent[0]],\\n\\t                    [bandWidth, span],\\n\\t                    getPointDimIndex(axis)\\n\\t                )\\n\\t            };\\n\\t        }\\n\\t    };\\n\\n\\t    function getPointDimIndex(axis) {\\n\\t        return axis.isHorizontal() ? 0 : 1;\\n\\t    }\\n\\n\\t    function getGlobalExtent(coordSys, dimIndex) {\\n\\t        var rect = coordSys.getRect();\\n\\t        return [rect[XY[dimIndex]], rect[XY[dimIndex]] + rect[WH[dimIndex]]];\\n\\t    }\\n\\n\\t    AxisView.registerAxisPointerClass('SingleAxisPointer', SingleAxisPointer);\\n\\n\\t    module.exports = SingleAxisPointer;\\n\\n\\n/***/ },\\n/* 308 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t'use strict';\\n\\t/**\\n\\t * @file  Define the themeRiver view's series model\\n\\t * @author Deqing Li(annong035@gmail.com)\\n\\t */\\n\\n\\n\\t    var completeDimensions = __webpack_require__(110);\\n\\t    var SeriesModel = __webpack_require__(78);\\n\\t    var List = __webpack_require__(98);\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var formatUtil = __webpack_require__(6);\\n\\t    var encodeHTML = formatUtil.encodeHTML;\\n\\t    var nest = __webpack_require__(255);\\n\\n\\t    var DATA_NAME_INDEX = 2;\\n\\n\\t    var ThemeRiverSeries = SeriesModel.extend({\\n\\n\\t        type: 'series.themeRiver',\\n\\n\\t        dependencies: ['singleAxis'],\\n\\n\\t        /**\\n\\t         * @readOnly\\n\\t         * @type {module:zrender/core/util#HashMap}\\n\\t         */\\n\\t        nameMap: null,\\n\\n\\t        /**\\n\\t         * @override\\n\\t         */\\n\\t        init: function (option) {\\n\\t            ThemeRiverSeries.superApply(this, 'init', arguments);\\n\\n\\t            // Put this function here is for the sake of consistency of code\\n\\t            // Enable legend selection for each data item\\n\\t            // Use a function instead of direct access because data reference may changed\\n\\t            this.legendDataProvider = function () {\\n\\t                return this.getRawData();\\n\\t            };\\n\\t        },\\n\\n\\t        /**\\n\\t         * If there is no value of a certain point in the time for some event,set it value to 0.\\n\\t         *\\n\\t         * @param {Array} data  initial data in the option\\n\\t         * @return {Array}\\n\\t         */\\n\\t        fixData: function (data) {\\n\\t            var rawDataLength = data.length;\\n\\n\\t            // grouped data by name\\n\\t            var dataByName = nest()\\n\\t                .key(function (dataItem) {\\n\\t                    return dataItem[2];\\n\\t                })\\n\\t                .entries(data);\\n\\n\\t            // data group in each layer\\n\\t            var layData = zrUtil.map(dataByName, function (d) {\\n\\t                return {\\n\\t                    name: d.key,\\n\\t                    dataList: d.values\\n\\t                };\\n\\t            });\\n\\n\\t            var layerNum = layData.length;\\n\\t            var largestLayer = -1;\\n\\t            var index = -1;\\n\\t            for (var i = 0; i < layerNum; ++i) {\\n\\t                var len = layData[i].dataList.length;\\n\\t                if (len > largestLayer) {\\n\\t                    largestLayer = len;\\n\\t                    index = i;\\n\\t                }\\n\\t            }\\n\\n\\t            for (var k = 0; k < layerNum; ++k) {\\n\\t                if (k === index) {\\n\\t                    continue;\\n\\t                }\\n\\t                var name = layData[k].name;\\n\\t                for (var j = 0; j < largestLayer; ++j) {\\n\\t                    var timeValue = layData[index].dataList[j][0];\\n\\t                    var length = layData[k].dataList.length;\\n\\t                    var keyIndex = -1;\\n\\t                    for (var l = 0; l < length; ++l) {\\n\\t                        var value = layData[k].dataList[l][0];\\n\\t                        if (value === timeValue) {\\n\\t                            keyIndex = l;\\n\\t                            break;\\n\\t                        }\\n\\t                    }\\n\\t                    if (keyIndex === -1) {\\n\\t                        data[rawDataLength] = [];\\n\\t                        data[rawDataLength][0] = timeValue;\\n\\t                        data[rawDataLength][1] = 0;\\n\\t                        data[rawDataLength][2] = name;\\n\\t                        rawDataLength++;\\n\\n\\t                    }\\n\\t                }\\n\\t            }\\n\\t            return data;\\n\\t        },\\n\\n\\t        /**\\n\\t         * @override\\n\\t         * @param  {Object} option  the initial option that user gived\\n\\t         * @param  {module:echarts/model/Model} ecModel  the model object for themeRiver option\\n\\t         * @return {module:echarts/data/List}\\n\\t         */\\n\\t        getInitialData: function (option, ecModel) {\\n\\n\\t            var dimensions = [];\\n\\n\\t            var singleAxisModel = ecModel.queryComponents({\\n\\t                mainType: 'singleAxis',\\n\\t                index: this.get('singleAxisIndex'),\\n\\t                id: this.get('singleAxisId')\\n\\t            })[0];\\n\\n\\t            var axisType = singleAxisModel.get('type');\\n\\n\\t            dimensions = [\\n\\t                {\\n\\t                    name: 'time',\\n\\t                    // FIXME common?\\n\\t                    type: axisType === 'category'\\n\\t                        ? 'ordinal'\\n\\t                        : axisType === 'time'\\n\\t                        ? 'time'\\n\\t                        : 'float'\\n\\t                },\\n\\t                {\\n\\t                    name: 'value',\\n\\t                    type: 'float'\\n\\t                },\\n\\t                {\\n\\t                    name: 'name',\\n\\t                    type: 'ordinal'\\n\\t                }\\n\\t            ];\\n\\n\\t            // filter the data item with the value of label is undefined\\n\\t            var filterData = zrUtil.filter(option.data, function (dataItem) {\\n\\t                return dataItem[2] !== undefined;\\n\\t            });\\n\\n\\t            var data = this.fixData(filterData || []);\\n\\t            var nameList = [];\\n\\t            var nameMap = this.nameMap = zrUtil.createHashMap();\\n\\t            var count = 0;\\n\\n\\t            for (var i = 0; i < data.length; ++i) {\\n\\t                nameList.push(data[i][DATA_NAME_INDEX]);\\n\\t                if (!nameMap.get(data[i][DATA_NAME_INDEX])) {\\n\\t                    nameMap.set(data[i][DATA_NAME_INDEX], count);\\n\\t                    count++;\\n\\t                }\\n\\t            }\\n\\n\\t            dimensions = completeDimensions(dimensions, data);\\n\\n\\t            var list = new List(dimensions, this);\\n\\n\\t            list.initData(data, nameList);\\n\\n\\t            return list;\\n\\t        },\\n\\n\\t        /**\\n\\t         * Used by single coordinate\\n\\t         *\\n\\t         * @param {string} axisDim  the dimension for single coordinate\\n\\t         * @return {Array.<string> } specified dimensions on the axis.\\n\\t         */\\n\\t        coordDimToDataDim: function (axisDim) {\\n\\t            return ['time'];\\n\\t        },\\n\\n\\t        /**\\n\\t         * The raw data is divided into multiple layers and each layer\\n\\t         *     has same name.\\n\\t         *\\n\\t         * @return {Array.<Array.<number>>}\\n\\t         */\\n\\t        getLayerSeries: function () {\\n\\t            var data = this.getData();\\n\\t            var lenCount = data.count();\\n\\t            var indexArr = [];\\n\\n\\t            for (var i = 0; i < lenCount; ++i) {\\n\\t                indexArr[i] = i;\\n\\t            }\\n\\t            // data group by name\\n\\t            var dataByName = nest()\\n\\t                .key(function (index) {\\n\\t                    return data.get('name', index);\\n\\t                })\\n\\t                .entries(indexArr);\\n\\n\\t            var layerSeries = zrUtil.map(dataByName, function (d) {\\n\\t                return {\\n\\t                    name: d.key,\\n\\t                    indices: d.values\\n\\t                };\\n\\t            });\\n\\n\\t            for (var j = 0; j < layerSeries.length; ++j) {\\n\\t                layerSeries[j].indices.sort(comparer);\\n\\t            }\\n\\n\\t            function comparer(index1, index2) {\\n\\t                return data.get('time', index1) - data.get('time', index2);\\n\\t            }\\n\\n\\t            return layerSeries;\\n\\t        },\\n\\n\\t        /**\\n\\t         * Get data indices for show tooltip content\\n\\t         *\\n\\t         * @param {Array.<string>|string} dim  single coordinate dimension\\n\\t         * @param {number} value axis value\\n\\t         * @param {module:echarts/coord/single/SingleAxis} baseAxis  single Axis used\\n\\t         *     the themeRiver.\\n\\t         * @return {Object} {dataIndices, nestestValue}\\n\\t         */\\n\\t        getAxisTooltipData: function (dim, value, baseAxis) {\\n\\t            if (!zrUtil.isArray(dim)) {\\n\\t                dim = dim ? [dim] : [];\\n\\t            }\\n\\n\\t            var data = this.getData();\\n\\t            var layerSeries = this.getLayerSeries();\\n\\t            var indices = [];\\n\\t            var layerNum = layerSeries.length;\\n\\t            var nestestValue;\\n\\n\\t            for (var i = 0; i < layerNum; ++i) {\\n\\t                var minDist = Number.MAX_VALUE;\\n\\t                var nearestIdx = -1;\\n\\t                var pointNum = layerSeries[i].indices.length;\\n\\t                for (var j = 0; j < pointNum; ++j) {\\n\\t                    var theValue = data.get(dim[0], layerSeries[i].indices[j]);\\n\\t                    var dist = Math.abs(theValue - value);\\n\\t                    if (dist <= minDist) {\\n\\t                        nestestValue = theValue;\\n\\t                        minDist = dist;\\n\\t                        nearestIdx = layerSeries[i].indices[j];\\n\\t                    }\\n\\t                }\\n\\t                indices.push(nearestIdx);\\n\\t            }\\n\\n\\t            return {dataIndices: indices, nestestValue: nestestValue};\\n\\t        },\\n\\n\\t        /**\\n\\t         * @override\\n\\t         * @param {number} dataIndex  index of data\\n\\t         */\\n\\t        formatTooltip: function (dataIndex) {\\n\\t            var data = this.getData();\\n\\t            var htmlName = data.get('name', dataIndex);\\n\\t            var htmlValue = data.get('value', dataIndex);\\n\\t            if (isNaN(htmlValue) || htmlValue == null) {\\n\\t                htmlValue = '-';\\n\\t            }\\n\\t            return encodeHTML(htmlName + ' : ' + htmlValue);\\n\\t        },\\n\\n\\t        defaultOption: {\\n\\t            zlevel: 0,\\n\\t            z: 2,\\n\\n\\t            coordinateSystem: 'singleAxis',\\n\\n\\t            // gap in axis's orthogonal orientation\\n\\t            boundaryGap: ['10%', '10%'],\\n\\n\\t            // legendHoverLink: true,\\n\\n\\t            singleAxisIndex: 0,\\n\\n\\t            animationEasing: 'linear',\\n\\n\\t            label: {\\n\\t                normal: {\\n\\t                    margin: 4,\\n\\t                    textAlign: 'right',\\n\\t                    show: true,\\n\\t                    position: 'left',\\n\\t                    textStyle: {\\n\\t                        color: '#000',\\n\\t                        fontSize: 11\\n\\t                    }\\n\\t                },\\n\\t                emphasis: {\\n\\t                    show: true\\n\\t                }\\n\\t            }\\n\\t        }\\n\\t    });\\n\\n\\t    module.exports = ThemeRiverSeries;\\n\\n\\n\\n/***/ },\\n/* 309 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/* WEBPACK VAR INJECTION */(function(process) {/**\\n\\t * @file  The file used to draw themeRiver view\\n\\t * @author  Deqing Li(annong035@gmail.com)\\n\\t */\\n\\n\\n\\t    var poly = __webpack_require__(120);\\n\\t    var graphic = __webpack_require__(18);\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var DataDiffer = __webpack_require__(99);\\n\\n\\t    module.exports = __webpack_require__(1).extendChartView({\\n\\n\\t        type: 'themeRiver',\\n\\n\\t        init: function () {\\n\\t            this._layers = [];\\n\\t        },\\n\\n\\t        render: function (seriesModel, ecModel, api) {\\n\\t            var data = seriesModel.getData();\\n\\t            var rawData = seriesModel.getRawData();\\n\\n\\t            if (!data.count()) {\\n\\t                return;\\n\\t            }\\n\\n\\t            var group = this.group;\\n\\n\\t            var layerSeries = seriesModel.getLayerSeries();\\n\\n\\t            var layoutInfo = data.getLayout('layoutInfo');\\n\\t            var rect = layoutInfo.rect;\\n\\t            var boundaryGap = layoutInfo.boundaryGap;\\n\\n\\t            group.attr('position', [0, rect.y + boundaryGap[0]]);\\n\\n\\t            function keyGetter(item) {\\n\\t                return item.name;\\n\\t            }\\n\\t            var dataDiffer = new DataDiffer(\\n\\t                this._layersSeries || [], layerSeries,\\n\\t                keyGetter, keyGetter\\n\\t            );\\n\\n\\t            var newLayersGroups = {};\\n\\n\\t            dataDiffer.add(zrUtil.bind(zrUtil.curry(process, 'add'), this))\\n\\t                .update(zrUtil.bind(zrUtil.curry(process, 'update'), this))\\n\\t                .remove(zrUtil.bind(zrUtil.curry(process, 'remove'), this))\\n\\t                .execute();\\n\\n\\t            function process(status, idx, oldIdx) {\\n\\t                var oldLayersGroups = this._layers;\\n\\t                if (status === 'remove') {\\n\\t                    group.remove(oldLayersGroups[idx]);\\n\\t                    return;\\n\\t                }\\n\\t                var points0 = [];\\n\\t                var points1 = [];\\n\\t                var color;\\n\\t                var indices = layerSeries[idx].indices;\\n\\t                for (var j = 0; j < indices.length; j++) {\\n\\t                    var layout = data.getItemLayout(indices[j]);\\n\\t                    var x = layout.x;\\n\\t                    var y0 = layout.y0;\\n\\t                    var y = layout.y;\\n\\n\\t                    points0.push([x, y0]);\\n\\t                    points1.push([x, y0 + y]);\\n\\n\\t                    color = rawData.getItemVisual(indices[j], 'color');\\n\\t                }\\n\\n\\t                var polygon;\\n\\t                var text;\\n\\t                var textLayout = data.getItemLayout(indices[0]);\\n\\t                var itemModel = data.getItemModel(indices[j - 1]);\\n\\t                var labelModel = itemModel.getModel('label.normal');\\n\\t                var margin = labelModel.get('margin');\\n\\t                if (status === 'add') {\\n\\t                    var layerGroup = newLayersGroups[idx] = new graphic.Group();\\n\\t                    polygon = new poly.Polygon({\\n\\t                        shape: {\\n\\t                            points: points0,\\n\\t                            stackedOnPoints: points1,\\n\\t                            smooth: 0.4,\\n\\t                            stackedOnSmooth: 0.4,\\n\\t                            smoothConstraint: false\\n\\t                        },\\n\\t                        z2: 0\\n\\t                    });\\n\\t                    text = new graphic.Text({\\n\\t                        style: {\\n\\t                            x: textLayout.x - margin,\\n\\t                            y: textLayout.y0 + textLayout.y / 2\\n\\t                        }\\n\\t                    });\\n\\t                    layerGroup.add(polygon);\\n\\t                    layerGroup.add(text);\\n\\t                    group.add(layerGroup);\\n\\n\\t                    polygon.setClipPath(createGridClipShape(polygon.getBoundingRect(), seriesModel, function () {\\n\\t                        polygon.removeClipPath();\\n\\t                    }));\\n\\t                }\\n\\t                else {\\n\\t                    var layerGroup = oldLayersGroups[oldIdx];\\n\\t                    polygon = layerGroup.childAt(0);\\n\\t                    text = layerGroup.childAt(1);\\n\\t                    group.add(layerGroup);\\n\\n\\t                    newLayersGroups[idx] = layerGroup;\\n\\n\\t                    graphic.updateProps(polygon, {\\n\\t                        shape: {\\n\\t                            points: points0,\\n\\t                            stackedOnPoints: points1\\n\\t                        }\\n\\t                    }, seriesModel);\\n\\n\\t                    graphic.updateProps(text, {\\n\\t                        style: {\\n\\t                            x: textLayout.x - margin,\\n\\t                            y: textLayout.y0 + textLayout.y / 2\\n\\t                        }\\n\\t                    }, seriesModel);\\n\\t                }\\n\\n\\t                var hoverItemStyleModel = itemModel.getModel('itemStyle.emphasis');\\n\\t                var itemStyleModel = itemModel.getModel('itemStyle.normal');\\n\\t                var textStyleModel = labelModel.getModel('textStyle');\\n\\n\\t                text.setStyle({\\n\\t                    text: labelModel.get('show')\\n\\t                        ? seriesModel.getFormattedLabel(indices[j - 1], 'normal')\\n\\t                            || data.getName(indices[j - 1])\\n\\t                        : '',\\n\\t                    textFont: textStyleModel.getFont(),\\n\\t                    textAlign: labelModel.get('textAlign'),\\n\\t                    textVerticalAlign: 'middle'\\n\\t                });\\n\\n\\t                polygon.setStyle(zrUtil.extend({\\n\\t                    fill: color\\n\\t                }, itemStyleModel.getItemStyle(['color'])));\\n\\n\\t                graphic.setHoverStyle(polygon, hoverItemStyleModel.getItemStyle());\\n\\t            }\\n\\n\\t            this._layersSeries = layerSeries;\\n\\t            this._layers = newLayersGroups;\\n\\t        },\\n\\n\\t        dispose: function () {}\\n\\t    });\\n\\n\\t    // add animation to the view\\n\\t    function createGridClipShape(rect, seriesModel, cb) {\\n\\t        var rectEl = new graphic.Rect({\\n\\t            shape: {\\n\\t                x: rect.x - 10,\\n\\t                y: rect.y - 10,\\n\\t                width: 0,\\n\\t                height: rect.height + 20\\n\\t            }\\n\\t        });\\n\\t        graphic.initProps(rectEl, {\\n\\t            shape: {\\n\\t                width: rect.width + 20,\\n\\t                height: rect.height + 20\\n\\t            }\\n\\t        }, seriesModel, cb);\\n\\n\\t        return rectEl;\\n\\t    }\\n\\n\\n\\n\\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(310)))\\n\\n/***/ },\\n/* 310 */\\n/***/ function(module, exports) {\\n\\n\\t// shim for using process in browser\\n\\tvar process = module.exports = {};\\n\\n\\t// cached from whatever global is present so that test runners that stub it\\n\\t// don't break things.  But we need to wrap it in a try catch in case it is\\n\\t// wrapped in strict mode code which doesn't define any globals.  It's inside a\\n\\t// function because try/catches deoptimize in certain engines.\\n\\n\\tvar cachedSetTimeout;\\n\\tvar cachedClearTimeout;\\n\\n\\tfunction defaultSetTimout() {\\n\\t    throw new Error('setTimeout has not been defined');\\n\\t}\\n\\tfunction defaultClearTimeout () {\\n\\t    throw new Error('clearTimeout has not been defined');\\n\\t}\\n\\t(function () {\\n\\t    try {\\n\\t        if (typeof setTimeout === 'function') {\\n\\t            cachedSetTimeout = setTimeout;\\n\\t        } else {\\n\\t            cachedSetTimeout = defaultSetTimout;\\n\\t        }\\n\\t    } catch (e) {\\n\\t        cachedSetTimeout = defaultSetTimout;\\n\\t    }\\n\\t    try {\\n\\t        if (typeof clearTimeout === 'function') {\\n\\t            cachedClearTimeout = clearTimeout;\\n\\t        } else {\\n\\t            cachedClearTimeout = defaultClearTimeout;\\n\\t        }\\n\\t    } catch (e) {\\n\\t        cachedClearTimeout = defaultClearTimeout;\\n\\t    }\\n\\t} ())\\n\\tfunction runTimeout(fun) {\\n\\t    if (cachedSetTimeout === setTimeout) {\\n\\t        //normal enviroments in sane situations\\n\\t        return setTimeout(fun, 0);\\n\\t    }\\n\\t    // if setTimeout wasn't available but was latter defined\\n\\t    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\\n\\t        cachedSetTimeout = setTimeout;\\n\\t        return setTimeout(fun, 0);\\n\\t    }\\n\\t    try {\\n\\t        // when when somebody has screwed with setTimeout but no I.E. maddness\\n\\t        return cachedSetTimeout(fun, 0);\\n\\t    } catch(e){\\n\\t        try {\\n\\t            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\\n\\t            return cachedSetTimeout.call(null, fun, 0);\\n\\t        } catch(e){\\n\\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\\n\\t            return cachedSetTimeout.call(this, fun, 0);\\n\\t        }\\n\\t    }\\n\\n\\n\\t}\\n\\tfunction runClearTimeout(marker) {\\n\\t    if (cachedClearTimeout === clearTimeout) {\\n\\t        //normal enviroments in sane situations\\n\\t        return clearTimeout(marker);\\n\\t    }\\n\\t    // if clearTimeout wasn't available but was latter defined\\n\\t    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\\n\\t        cachedClearTimeout = clearTimeout;\\n\\t        return clearTimeout(marker);\\n\\t    }\\n\\t    try {\\n\\t        // when when somebody has screwed with setTimeout but no I.E. maddness\\n\\t        return cachedClearTimeout(marker);\\n\\t    } catch (e){\\n\\t        try {\\n\\t            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\\n\\t            return cachedClearTimeout.call(null, marker);\\n\\t        } catch (e){\\n\\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\\n\\t            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\\n\\t            return cachedClearTimeout.call(this, marker);\\n\\t        }\\n\\t    }\\n\\n\\n\\n\\t}\\n\\tvar queue = [];\\n\\tvar draining = false;\\n\\tvar currentQueue;\\n\\tvar queueIndex = -1;\\n\\n\\tfunction cleanUpNextTick() {\\n\\t    if (!draining || !currentQueue) {\\n\\t        return;\\n\\t    }\\n\\t    draining = false;\\n\\t    if (currentQueue.length) {\\n\\t        queue = currentQueue.concat(queue);\\n\\t    } else {\\n\\t        queueIndex = -1;\\n\\t    }\\n\\t    if (queue.length) {\\n\\t        drainQueue();\\n\\t    }\\n\\t}\\n\\n\\tfunction drainQueue() {\\n\\t    if (draining) {\\n\\t        return;\\n\\t    }\\n\\t    var timeout = runTimeout(cleanUpNextTick);\\n\\t    draining = true;\\n\\n\\t    var len = queue.length;\\n\\t    while(len) {\\n\\t        currentQueue = queue;\\n\\t        queue = [];\\n\\t        while (++queueIndex < len) {\\n\\t            if (currentQueue) {\\n\\t                currentQueue[queueIndex].run();\\n\\t            }\\n\\t        }\\n\\t        queueIndex = -1;\\n\\t        len = queue.length;\\n\\t    }\\n\\t    currentQueue = null;\\n\\t    draining = false;\\n\\t    runClearTimeout(timeout);\\n\\t}\\n\\n\\tprocess.nextTick = function (fun) {\\n\\t    var args = new Array(arguments.length - 1);\\n\\t    if (arguments.length > 1) {\\n\\t        for (var i = 1; i < arguments.length; i++) {\\n\\t            args[i - 1] = arguments[i];\\n\\t        }\\n\\t    }\\n\\t    queue.push(new Item(fun, args));\\n\\t    if (queue.length === 1 && !draining) {\\n\\t        runTimeout(drainQueue);\\n\\t    }\\n\\t};\\n\\n\\t// v8 likes predictible objects\\n\\tfunction Item(fun, array) {\\n\\t    this.fun = fun;\\n\\t    this.array = array;\\n\\t}\\n\\tItem.prototype.run = function () {\\n\\t    this.fun.apply(null, this.array);\\n\\t};\\n\\tprocess.title = 'browser';\\n\\tprocess.browser = true;\\n\\tprocess.env = {};\\n\\tprocess.argv = [];\\n\\tprocess.version = ''; // empty string to avoid regexp issues\\n\\tprocess.versions = {};\\n\\n\\tfunction noop() {}\\n\\n\\tprocess.on = noop;\\n\\tprocess.addListener = noop;\\n\\tprocess.once = noop;\\n\\tprocess.off = noop;\\n\\tprocess.removeListener = noop;\\n\\tprocess.removeAllListeners = noop;\\n\\tprocess.emit = noop;\\n\\n\\tprocess.binding = function (name) {\\n\\t    throw new Error('process.binding is not supported');\\n\\t};\\n\\n\\tprocess.cwd = function () { return '/' };\\n\\tprocess.chdir = function (dir) {\\n\\t    throw new Error('process.chdir is not supported');\\n\\t};\\n\\tprocess.umask = function() { return 0; };\\n\\n\\n/***/ },\\n/* 311 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * @file  Using layout algorithm transform the raw data to layout information.\\n\\t * @author Deqing Li(annong035@gmail.com)\\n\\t */\\n\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var numberUtil =  __webpack_require__(7);\\n\\n\\n\\t    module.exports = function (ecModel, api) {\\n\\n\\t        ecModel.eachSeriesByType('themeRiver', function (seriesModel) {\\n\\n\\t            var data = seriesModel.getData();\\n\\n\\t            var single = seriesModel.coordinateSystem;\\n\\n\\t            var layoutInfo = {};\\n\\n\\t            // use the axis boundingRect for view\\n\\t            var rect = single.getRect();\\n\\n\\t            layoutInfo.rect = rect;\\n\\n\\t            var boundaryGap = seriesModel.get('boundaryGap');\\n\\n\\t            var axis = single.getAxis();\\n\\n\\t            layoutInfo.boundaryGap = boundaryGap;\\n\\n\\t            if (axis.orient === 'horizontal') {\\n\\t                boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], rect.height);\\n\\t                boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], rect.height);\\n\\t                var height = rect.height - boundaryGap[0] - boundaryGap[1];\\n\\t                themeRiverLayout(data, seriesModel, height);\\n\\t            }\\n\\t            else {\\n\\t                boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], rect.width);\\n\\t                boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], rect.width);\\n\\t                var width = rect.width - boundaryGap[0] - boundaryGap[1];\\n\\t                themeRiverLayout(data, seriesModel, width);\\n\\t            }\\n\\n\\t            data.setLayout('layoutInfo', layoutInfo);\\n\\t        });\\n\\t    };\\n\\n\\t    /**\\n\\t     * The layout information about themeriver\\n\\t     *\\n\\t     * @param {module:echarts/data/List} data  data in the series\\n\\t     * @param {module:echarts/model/Series} seriesModel  the model object of themeRiver series\\n\\t     * @param {number} height  value used to compute every series height\\n\\t     */\\n\\t    function themeRiverLayout(data, seriesModel, height) {\\n\\t        if (!data.count()) {\\n\\t            return;\\n\\t        }\\n\\t        var coordSys = seriesModel.coordinateSystem;\\n\\t        // the data in each layer are organized into a series.\\n\\t        var layerSeries = seriesModel.getLayerSeries();\\n\\n\\t        // the points in each layer.\\n\\t        var layerPoints = zrUtil.map(layerSeries, function (singleLayer) {\\n\\t            return zrUtil.map(singleLayer.indices, function (idx) {\\n\\t                var pt = coordSys.dataToPoint(data.get('time', idx));\\n\\t                pt[1] = data.get('value', idx);\\n\\t                return pt;\\n\\t            });\\n\\t        });\\n\\n\\t        var base = computeBaseline(layerPoints);\\n\\t        var baseLine = base.y0;\\n\\t        var ky = height / base.max;\\n\\n\\t        // set layout information for each item.\\n\\t        var n = layerSeries.length;\\n\\t        var m = layerSeries[0].indices.length;\\n\\t        var baseY0;\\n\\t        for (var j = 0; j < m; ++j) {\\n\\t            baseY0 = baseLine[j] * ky;\\n\\t            data.setItemLayout(layerSeries[0].indices[j], {\\n\\t                layerIndex: 0,\\n\\t                x: layerPoints[0][j][0],\\n\\t                y0: baseY0,\\n\\t                y: layerPoints[0][j][1] * ky\\n\\t            });\\n\\t            for (var i = 1; i < n; ++i) {\\n\\t                baseY0 += layerPoints[i - 1][j][1] * ky;\\n\\t                data.setItemLayout(layerSeries[i].indices[j], {\\n\\t                    layerIndex: i,\\n\\t                    x: layerPoints[i][j][0],\\n\\t                    y0: baseY0,\\n\\t                    y: layerPoints[i][j][1] * ky\\n\\t                });\\n\\t            }\\n\\t        }\\n\\t    }\\n\\n\\t    /**\\n\\t     * Compute the baseLine of the rawdata\\n\\t     * Inspired by Lee Byron's paper Stacked Graphs - Geometry & Aesthetics\\n\\t     *\\n\\t     * @param  {Array.<Array>} data  the points in each layer\\n\\t     * @return {Array}\\n\\t     */\\n\\t    function computeBaseline(data) {\\n\\t        var layerNum = data.length;\\n\\t        var pointNum = data[0].length;\\n\\t        var sums = [];\\n\\t        var y0 = [];\\n\\t        var max = 0;\\n\\t        var temp;\\n\\t        var base = {};\\n\\n\\t        for (var i = 0; i < pointNum; ++i) {\\n\\t            for (var j = 0, temp = 0; j < layerNum; ++j) {\\n\\t                temp += data[j][i][1];\\n\\t            }\\n\\t            if (temp > max) {\\n\\t                max = temp;\\n\\t            }\\n\\t            sums.push(temp);\\n\\t        }\\n\\n\\t        for (var k = 0; k < pointNum; ++k) {\\n\\t            y0[k] = (max - sums[k]) / 2;\\n\\t        }\\n\\t        max = 0;\\n\\n\\t        for (var l = 0; l < pointNum; ++l) {\\n\\t            var sum = sums[l] + y0[l];\\n\\t            if (sum > max) {\\n\\t                max = sum;\\n\\t            }\\n\\t        }\\n\\t        base.y0 = y0;\\n\\t        base.max = max;\\n\\n\\t        return base;\\n\\t    }\\n\\n\\n\\n/***/ },\\n/* 312 */\\n/***/ function(module, exports) {\\n\\n\\t/**\\n\\t * @file Visual encoding for themeRiver view\\n\\t * @author  Deqing Li(annong035@gmail.com)\\n\\t */\\n\\n\\n\\t    module.exports = function (ecModel) {\\n\\t        ecModel.eachSeriesByType('themeRiver', function (seriesModel) {\\n\\t            var data = seriesModel.getData();\\n\\t            var rawData = seriesModel.getRawData();\\n\\t            var colorList = seriesModel.get('color');\\n\\n\\t            data.each(function (index) {\\n\\t                var name = data.getName(index);\\n\\t                var color = colorList[(seriesModel.nameMap.get(name) - 1) % colorList.length];\\n\\t                rawData.setItemVisual(index, 'color', color);\\n\\t            });\\n\\t        });\\n\\t    };\\n\\n\\n\\n/***/ },\\n/* 313 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var echarts = __webpack_require__(1);\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var graphicUtil = __webpack_require__(18);\\n\\t    var labelHelper = __webpack_require__(118);\\n\\t    var createListFromArray = __webpack_require__(109);\\n\\t    var barGrid = __webpack_require__(145);\\n\\n\\t    var ITEM_STYLE_NORMAL_PATH = ['itemStyle', 'normal'];\\n\\t    var ITEM_STYLE_EMPHASIS_PATH = ['itemStyle', 'emphasis'];\\n\\t    var LABEL_NORMAL = ['label', 'normal'];\\n\\t    var LABEL_EMPHASIS = ['label', 'emphasis'];\\n\\n\\t    /**\\n\\t     * To reduce total package size of each coordinate systems, the modules `prepareCustom`\\n\\t     * of each coordinate systems are not required by each coordinate systems directly, but\\n\\t     * required by the module `custom`.\\n\\t     *\\n\\t     * prepareInfoForCustomSeries {Function}: optional\\n\\t     *     @return {Object} {coordSys: {...}, api: {\\n\\t     *         coord: function (data, clamp) {}, // return point in global.\\n\\t     *         size: function (dataSize, dataItem) {} // return size of each axis in coordSys.\\n\\t     *     }}\\n\\t     */\\n\\t    var prepareCustoms = {\\n\\t        cartesian2d: __webpack_require__(314),\\n\\t        geo: __webpack_require__(315),\\n\\t        singleAxis: __webpack_require__(316),\\n\\t        polar: __webpack_require__(317),\\n\\t        calendar: __webpack_require__(318)\\n\\t    };\\n\\n\\t    // ------\\n\\t    // Model\\n\\t    // ------\\n\\n\\t    echarts.extendSeriesModel({\\n\\n\\t        type: 'series.custom',\\n\\n\\t        dependencies: ['grid', 'polar', 'geo', 'singleAxis', 'calendar'],\\n\\n\\t        defaultOption: {\\n\\t            coordinateSystem: 'cartesian2d',\\n\\t            zlevel: 0,\\n\\t            z: 2,\\n\\t            legendHoverLink: true\\n\\n\\t            // Cartesian coordinate system\\n\\t            // xAxisIndex: 0,\\n\\t            // yAxisIndex: 0,\\n\\n\\t            // Polar coordinate system\\n\\t            // polarIndex: 0,\\n\\n\\t            // Geo coordinate system\\n\\t            // geoIndex: 0,\\n\\n\\t            // label: {}\\n\\t            // itemStyle: {}\\n\\t        },\\n\\n\\t        getInitialData: function (option, ecModel) {\\n\\t            return createListFromArray(option.data, this, ecModel);\\n\\t        }\\n\\t    });\\n\\n\\t    // -----\\n\\t    // View\\n\\t    // -----\\n\\n\\t    echarts.extendChartView({\\n\\n\\t        type: 'custom',\\n\\n\\t        /**\\n\\t         * @private\\n\\t         * @type {module:echarts/data/List}\\n\\t         */\\n\\t        _data: null,\\n\\n\\t        /**\\n\\t         * @override\\n\\t         */\\n\\t        render: function (customSeries, ecModel, api) {\\n\\t            var oldData = this._data;\\n\\t            var data = customSeries.getData();\\n\\t            var group = this.group;\\n\\t            var renderItem = makeRenderItem(customSeries, data, ecModel, api);\\n\\n\\t            data.diff(oldData)\\n\\t                .add(function (newIdx) {\\n\\t                    data.hasValue(newIdx) && createOrUpdate(\\n\\t                        null, newIdx, renderItem(newIdx), customSeries, group, data\\n\\t                    );\\n\\t                })\\n\\t                .update(function (newIdx, oldIdx) {\\n\\t                    var el = oldData.getItemGraphicEl(oldIdx);\\n\\t                    data.hasValue(newIdx)\\n\\t                        ? createOrUpdate(\\n\\t                            el, newIdx, renderItem(newIdx), customSeries, group, data\\n\\t                        )\\n\\t                        : (el && group.remove(el));\\n\\t                })\\n\\t                .remove(function (oldIdx) {\\n\\t                    var el = oldData.getItemGraphicEl(oldIdx);\\n\\t                    el && group.remove(el);\\n\\t                })\\n\\t                .execute();\\n\\n\\t            this._data = data;\\n\\t        },\\n\\n\\t        /**\\n\\t         * @override\\n\\t         */\\n\\t        dispose: zrUtil.noop\\n\\t    });\\n\\n\\n\\t    function createEl(elOption) {\\n\\t        var graphicType = elOption.type;\\n\\t        var el;\\n\\n\\t        if (graphicType === 'path') {\\n\\t            var shape = elOption.shape;\\n\\t            el = graphicUtil.makePath(\\n\\t                shape.pathData,\\n\\t                null,\\n\\t                {\\n\\t                    x: shape.x || 0,\\n\\t                    y: shape.y || 0,\\n\\t                    width: shape.width || 0,\\n\\t                    height: shape.height || 0\\n\\t                },\\n\\t                'center'\\n\\t            );\\n\\t            el.__customPathData = elOption.pathData;\\n\\t        }\\n\\t        else if (graphicType === 'image') {\\n\\t            el = new graphicUtil.Image({\\n\\t            });\\n\\t            el.__customImagePath = elOption.style.image;\\n\\t        }\\n\\t        else if (graphicType === 'text') {\\n\\t            el = new graphicUtil.Text({\\n\\t            });\\n\\t            el.__customText = elOption.style.text;\\n\\t        }\\n\\t        else {\\n\\t            var Clz = graphicUtil[graphicType.charAt(0).toUpperCase() + graphicType.slice(1)];\\n\\n\\t            if (true) {\\n\\t                zrUtil.assert(Clz, 'graphic type \\\"' + graphicType + '\\\" can not be found.');\\n\\t            }\\n\\n\\t            el = new Clz();\\n\\t        }\\n\\n\\t        el.__customGraphicType = graphicType;\\n\\n\\t        return el;\\n\\t    }\\n\\n\\t    function updateEl(el, dataIndex, elOption, animatableModel, data, isInit) {\\n\\t        var targetProps = {};\\n\\t        var elOptionStyle = elOption.style || {};\\n\\n\\t        elOption.shape && (targetProps.shape = zrUtil.clone(elOption.shape));\\n\\t        elOption.position && (targetProps.position = elOption.position.slice());\\n\\t        elOption.scale && (targetProps.scale = elOption.scale.slice());\\n\\t        elOption.origin && (targetProps.origin = elOption.origin.slice());\\n\\t        elOption.rotation && (targetProps.rotation = elOption.rotation);\\n\\n\\t        if (el.type === 'image' && elOption.style) {\\n\\t            var targetStyle = targetProps.style = {};\\n\\t            zrUtil.each(['x', 'y', 'width', 'height'], function (prop) {\\n\\t                prepareStyleTransition(prop, targetStyle, elOptionStyle, el.style, isInit);\\n\\t            });\\n\\t        }\\n\\n\\t        if (el.type === 'text' && elOption.style) {\\n\\t            var targetStyle = targetProps.style = {};\\n\\t            zrUtil.each(['x', 'y'], function (prop) {\\n\\t                prepareStyleTransition(prop, targetStyle, elOptionStyle, el.style, isInit);\\n\\t            });\\n\\t        }\\n\\n\\t        if (el.type !== 'group') {\\n\\t            el.useStyle(elOptionStyle);\\n\\n\\t            // Init animation.\\n\\t            if (isInit) {\\n\\t                el.style.opacity = 0;\\n\\t                var targetOpacity = elOptionStyle.opacity;\\n\\t                targetOpacity == null && (targetOpacity = 1);\\n\\t                graphicUtil.initProps(el, {style: {opacity: targetOpacity}}, animatableModel, dataIndex);\\n\\t            }\\n\\t        }\\n\\n\\t        if (isInit) {\\n\\t            el.attr(targetProps);\\n\\t        }\\n\\t        else {\\n\\t            graphicUtil.updateProps(el, targetProps, animatableModel, dataIndex);\\n\\t        }\\n\\n\\t        // z2 must not be null/undefined, otherwise sort error may occur.\\n\\t        el.attr({z2: elOption.z2 || 0, silent: elOption.silent});\\n\\n\\t        elOption.styleEmphasis !== false && graphicUtil.setHoverStyle(el, elOption.styleEmphasis);\\n\\t    }\\n\\n\\t    function prepareStyleTransition(prop, targetStyle, elOptionStyle, oldElStyle, isInit) {\\n\\t        if (elOptionStyle[prop] != null && !isInit) {\\n\\t            targetStyle[prop] = elOptionStyle[prop];\\n\\t            elOptionStyle[prop] = oldElStyle[prop];\\n\\t        }\\n\\t    }\\n\\n\\t    function makeRenderItem(customSeries, data, ecModel, api) {\\n\\t        var renderItem = customSeries.get('renderItem');\\n\\t        var coordSys = customSeries.coordinateSystem;\\n\\n\\t        if (true) {\\n\\t            zrUtil.assert(renderItem, 'series.render is required.');\\n\\t            zrUtil.assert(\\n\\t                coordSys.prepareCustoms || prepareCustoms[coordSys.type],\\n\\t                'This coordSys does not support custom series.'\\n\\t            );\\n\\t        }\\n\\n\\t        var prepareResult = coordSys.prepareCustoms\\n\\t            ? coordSys.prepareCustoms()\\n\\t            : prepareCustoms[coordSys.type](coordSys);\\n\\n\\t        var userAPI = zrUtil.defaults({\\n\\t            getWidth: api.getWidth,\\n\\t            getHeight: api.getHeight,\\n\\t            getZr: api.getZr,\\n\\t            getDevicePixelRatio: api.getDevicePixelRatio,\\n\\t            value: value,\\n\\t            style: style,\\n\\t            styleEmphasis: styleEmphasis,\\n\\t            visual: visual,\\n\\t            barLayout: barLayout,\\n\\t            currentSeriesIndices: currentSeriesIndices,\\n\\t            font: font\\n\\t        }, prepareResult.api);\\n\\n\\t        var userParams = {\\n\\t            context: {},\\n\\t            seriesId: customSeries.id,\\n\\t            seriesName: customSeries.name,\\n\\t            seriesIndex: customSeries.seriesIndex,\\n\\t            coordSys: prepareResult.coordSys,\\n\\t            dataInsideLength: data.count(),\\n\\t            encode: wrapEncodeDef(customSeries.getData())\\n\\t        };\\n\\n\\t        // Do not support call `api` asynchronously without dataIndexInside input.\\n\\t        var currDataIndexInside;\\n\\t        var currDirty = true;\\n\\t        var currItemModel;\\n\\t        var currLabelNormalModel;\\n\\t        var currLabelEmphasisModel;\\n\\t        var currLabelValueDim;\\n\\t        var currVisualColor;\\n\\n\\t        return function (dataIndexInside) {\\n\\t            currDataIndexInside = dataIndexInside;\\n\\t            currDirty = true;\\n\\t            return renderItem && renderItem(\\n\\t                zrUtil.defaults({\\n\\t                    dataIndexInside: dataIndexInside,\\n\\t                    dataIndex: data.getRawIndex(dataIndexInside)\\n\\t                }, userParams),\\n\\t                userAPI\\n\\t            ) || {};\\n\\t        };\\n\\n\\t        // Do not update cache until api called.\\n\\t        function updateCache(dataIndexInside) {\\n\\t            dataIndexInside == null && (dataIndexInside = currDataIndexInside);\\n\\t            if (currDirty) {\\n\\t                currItemModel = data.getItemModel(dataIndexInside);\\n\\t                currLabelNormalModel = currItemModel.getModel(LABEL_NORMAL);\\n\\t                currLabelEmphasisModel = currItemModel.getModel(LABEL_EMPHASIS);\\n\\t                currLabelValueDim = labelHelper.findLabelValueDim(data);\\n\\t                currVisualColor = data.getItemVisual(dataIndexInside, 'color');\\n\\n\\t                currDirty = false;\\n\\t            }\\n\\t        }\\n\\n\\t        /**\\n\\t         * @public\\n\\t         * @param {nubmer|string} dim\\n\\t         * @param {number} [dataIndexInside=currDataIndexInside]\\n\\t         * @return {number|string} value\\n\\t         */\\n\\t        function value(dim, dataIndexInside) {\\n\\t            dataIndexInside == null && (dataIndexInside = currDataIndexInside);\\n\\t            return data.get(data.getDimension(dim || 0), dataIndexInside);\\n\\t        }\\n\\n\\t        /**\\n\\t         * By default, `visual` is applied to style (to support visualMap).\\n\\t         * `visual.color` is applied at `fill`. If user want apply visual.color on `stroke`,\\n\\t         * it can be implemented as:\\n\\t         * `api.style({stroke: api.visual('color'), fill: null})`;\\n\\t         * @public\\n\\t         * @param {Object} [extra]\\n\\t         * @param {number} [dataIndexInside=currDataIndexInside]\\n\\t         */\\n\\t        function style(extra, dataIndexInside) {\\n\\t            dataIndexInside == null && (dataIndexInside = currDataIndexInside);\\n\\t            updateCache(dataIndexInside);\\n\\n\\t            var itemStyle = currItemModel.getModel(ITEM_STYLE_NORMAL_PATH).getItemStyle();\\n\\n\\t            currVisualColor != null && (itemStyle.fill = currVisualColor);\\n\\t            var opacity = data.getItemVisual(dataIndexInside, 'opacity');\\n\\t            opacity != null && (itemStyle.opacity = opacity);\\n\\n\\t            labelHelper.setTextToStyle(\\n\\t                data, dataIndexInside, currLabelValueDim, itemStyle,\\n\\t                customSeries, currLabelNormalModel, currVisualColor\\n\\t            );\\n\\n\\t            extra && zrUtil.extend(itemStyle, extra);\\n\\t            return itemStyle;\\n\\t        }\\n\\n\\t        /**\\n\\t         * @public\\n\\t         * @param {Object} [extra]\\n\\t         * @param {number} [dataIndexInside=currDataIndexInside]\\n\\t         */\\n\\t        function styleEmphasis(extra, dataIndexInside) {\\n\\t            dataIndexInside == null && (dataIndexInside = currDataIndexInside);\\n\\t            updateCache(dataIndexInside);\\n\\n\\t            var itemStyle = currItemModel.getModel(ITEM_STYLE_EMPHASIS_PATH).getItemStyle();\\n\\n\\t            labelHelper.setTextToStyle(\\n\\t                data, dataIndexInside, currLabelValueDim, itemStyle,\\n\\t                customSeries, currLabelEmphasisModel, currVisualColor\\n\\t            );\\n\\n\\t            extra && zrUtil.extend(itemStyle, extra);\\n\\t            return itemStyle;\\n\\t        }\\n\\n\\t        /**\\n\\t         * @public\\n\\t         * @param {string} visualType\\n\\t         * @param {number} [dataIndexInside=currDataIndexInside]\\n\\t         */\\n\\t        function visual(visualType, dataIndexInside) {\\n\\t            dataIndexInside == null && (dataIndexInside = currDataIndexInside);\\n\\t            return data.getItemVisual(dataIndexInside, visualType);\\n\\t        }\\n\\n\\t        /**\\n\\t         * @public\\n\\t         * @param {number} opt.count Positive interger.\\n\\t         * @param {number} [opt.barWidth]\\n\\t         * @param {number} [opt.barMaxWidth]\\n\\t         * @param {number} [opt.barGap]\\n\\t         * @param {number} [opt.barCategoryGap]\\n\\t         * @return {Object} {width, offset, offsetCenter} is not support, return undefined.\\n\\t         */\\n\\t        function barLayout(opt) {\\n\\t            if (coordSys.getBaseAxis) {\\n\\t                var baseAxis = coordSys.getBaseAxis();\\n\\t                return barGrid.getLayoutOnAxis(zrUtil.defaults({axis: baseAxis}, opt), api);\\n\\t            }\\n\\t        }\\n\\n\\t        /**\\n\\t         * @public\\n\\t         * @return {Array.<number>}\\n\\t         */\\n\\t        function currentSeriesIndices() {\\n\\t            return ecModel.getCurrentSeriesIndices();\\n\\t        }\\n\\n\\t        /**\\n\\t         * @public\\n\\t         * @param {Object} opt\\n\\t         * @param {string} [opt.fontStyle]\\n\\t         * @param {number} [opt.fontWeight]\\n\\t         * @param {number} [opt.fontSize]\\n\\t         * @param {string} [opt.fontFamily]\\n\\t         * @return {string} font string\\n\\t         */\\n\\t        function font(opt) {\\n\\t            return graphicUtil.getFont(opt, ecModel);\\n\\t        }\\n\\t    }\\n\\n\\t    function wrapEncodeDef(data) {\\n\\t        var encodeDef = {};\\n\\t        zrUtil.each(data.dimensions, function (dimName, dataDimIndex) {\\n\\t            var dimInfo = data.getDimensionInfo(dimName);\\n\\t            if (!dimInfo.isExtraCoord) {\\n\\t                var coordDim = dimInfo.coordDim;\\n\\t                var dataDims = encodeDef[coordDim] = encodeDef[coordDim] || [];\\n\\t                dataDims[dimInfo.coordDimIndex] = dataDimIndex;\\n\\t            }\\n\\t        });\\n\\t        return encodeDef;\\n\\t    }\\n\\n\\t    function createOrUpdate(el, dataIndex, elOption, animatableModel, group, data) {\\n\\t        el = doCreateOrUpdate(el, dataIndex, elOption, animatableModel, group, data);\\n\\t        el && data.setItemGraphicEl(dataIndex, el);\\n\\t    }\\n\\n\\t    function doCreateOrUpdate(el, dataIndex, elOption, animatableModel, group, data) {\\n\\t        var elOptionType = elOption.type;\\n\\t        if (el\\n\\t            && elOptionType !== el.__customGraphicType\\n\\t            && (elOptionType !== 'path' || elOption.pathData !== el.__customPathData)\\n\\t            && (elOptionType !== 'image' || elOption.style.image !== el.__customImagePath)\\n\\t            && (elOptionType !== 'text' || elOption.style.text !== el.__customText)\\n\\t        ) {\\n\\t            group.remove(el);\\n\\t            el = null;\\n\\t        }\\n\\n\\t        // `elOption.type` is undefined when `renderItem` returns nothing.\\n\\t        if (elOptionType == null) {\\n\\t            return;\\n\\t        }\\n\\n\\t        var isInit = !el;\\n\\t        !el && (el = createEl(elOption));\\n\\t        updateEl(el, dataIndex, elOption, animatableModel, data, isInit);\\n\\n\\t        elOptionType === 'group' && zrUtil.each(elOption.children, function (childOption, index) {\\n\\t            doCreateOrUpdate(el.childAt(index), dataIndex, childOption, animatableModel, el, data);\\n\\t        });\\n\\n\\t        group.add(el);\\n\\n\\t        return el;\\n\\t    }\\n\\n\\n\\n\\n/***/ },\\n/* 314 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\n\\t    function dataToCoordSize(dataSize, dataItem) {\\n\\t        // dataItem is necessary in log axis.\\n\\t        dataItem = dataItem || [0, 0];\\n\\t        return zrUtil.map(['x', 'y'], function (dim, dimIdx) {\\n\\t            var axis = this.getAxis(dim);\\n\\t            var val = dataItem[dimIdx];\\n\\t            var halfSize = dataSize[dimIdx] / 2;\\n\\t            return axis.type === 'category'\\n\\t                ? axis.getBandWidth()\\n\\t                : Math.abs(axis.dataToCoord(val - halfSize) - axis.dataToCoord(val + halfSize));\\n\\t        }, this);\\n\\t    }\\n\\n\\t    function prepareCustom(coordSys) {\\n\\t        var rect = coordSys.grid.getRect();\\n\\t        return {\\n\\t            coordSys: {\\n\\t                // The name exposed to user is always 'cartesian2d' but not 'grid'.\\n\\t                type: 'cartesian2d',\\n\\t                x: rect.x,\\n\\t                y: rect.y,\\n\\t                width: rect.width,\\n\\t                height: rect.height\\n\\t            },\\n\\t            api: {\\n\\t                coord: zrUtil.bind(coordSys.dataToPoint, coordSys),\\n\\t                size: zrUtil.bind(dataToCoordSize, coordSys)\\n\\t            }\\n\\t        };\\n\\t    }\\n\\n\\t    module.exports = prepareCustom;\\n\\n\\n/***/ },\\n/* 315 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\n\\t    function dataToCoordSize(dataSize, dataItem) {\\n\\t        dataItem = dataItem || [0, 0];\\n\\t        return zrUtil.map([0, 1], function (dimIdx) {\\n\\t            var val = dataItem[dimIdx];\\n\\t            var halfSize = dataSize[dimIdx] / 2;\\n\\t            var p1 = [];\\n\\t            var p2 = [];\\n\\t            p1[dimIdx] = val - halfSize;\\n\\t            p2[dimIdx] = val + halfSize;\\n\\t            p1[1 - dimIdx] = p2[1 - dimIdx] = dataItem[1 - dimIdx];\\n\\t            return Math.abs(this.dataToPoint(p1)[dimIdx] - this.dataToPoint(p2)[dimIdx]);\\n\\t        }, this);\\n\\t    }\\n\\n\\t    function prepareCustom(coordSys) {\\n\\t        var rect = coordSys.getBoundingRect();\\n\\t        return {\\n\\t            coordSys: {\\n\\t                type: 'geo',\\n\\t                x: rect.x,\\n\\t                y: rect.y,\\n\\t                width: rect.width,\\n\\t                height: rect.height\\n\\t            },\\n\\t            api: {\\n\\t                coord: zrUtil.bind(coordSys.dataToPoint, coordSys),\\n\\t                size: zrUtil.bind(dataToCoordSize, coordSys)\\n\\t            }\\n\\t        };\\n\\t    }\\n\\n\\t    module.exports = prepareCustom;\\n\\n\\n/***/ },\\n/* 316 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\n\\t    function dataToCoordSize(dataSize, dataItem) {\\n\\t        // dataItem is necessary in log axis.\\n\\t        var axis = this.getAxis();\\n\\t        var val = dataItem instanceof Array ? dataItem[0] : dataItem;\\n\\t        var halfSize = (dataSize instanceof Array ? dataSize[0] : dataSize) / 2;\\n\\t        return axis.type === 'category'\\n\\t            ? axis.getBandWidth()\\n\\t            : Math.abs(axis.dataToCoord(val - halfSize) - axis.dataToCoord(val + halfSize));\\n\\t    }\\n\\n\\t    function prepareCustom(coordSys) {\\n\\t        var rect = coordSys.getRect();\\n\\n\\t        return {\\n\\t            coordSys: {\\n\\t                type: 'singleAxis',\\n\\t                x: rect.x,\\n\\t                y: rect.y,\\n\\t                width: rect.width,\\n\\t                height: rect.height\\n\\t            },\\n\\t            api: {\\n\\t                coord: zrUtil.bind(coordSys.dataToPoint, coordSys),\\n\\t                size: zrUtil.bind(dataToCoordSize, coordSys)\\n\\t            }\\n\\t        };\\n\\t    }\\n\\n\\t    module.exports = prepareCustom;\\n\\n\\n/***/ },\\n/* 317 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\n\\t    function dataToCoordSize(dataSize, dataItem) {\\n\\t        // dataItem is necessary in log axis.\\n\\t        return zrUtil.map(['Radius', 'Angle'], function (dim, dimIdx) {\\n\\t            var axis = this['get' + dim + 'Axis']();\\n\\t            var val = dataItem[dimIdx];\\n\\t            var halfSize = dataSize[dimIdx] / 2;\\n\\t            var method = 'dataTo' + dim;\\n\\n\\t            var result = axis.type === 'category'\\n\\t                ? axis.getBandWidth()\\n\\t                : Math.abs(axis[method](val - halfSize) - axis[method](val + halfSize));\\n\\n\\t            if (dim === 'Angle') {\\n\\t                result = result * Math.PI / 180;\\n\\t            }\\n\\n\\t            return result;\\n\\n\\t        }, this);\\n\\t    }\\n\\n\\t    function prepareCustom(coordSys) {\\n\\t        var radiusAxis = coordSys.getRadiusAxis();\\n\\t        var angleAxis = coordSys.getAngleAxis();\\n\\t        var radius = radiusAxis.getExtent();\\n\\t        radius[0] > radius[1] && radius.reverse();\\n\\n\\t        return {\\n\\t            coordSys: {\\n\\t                type: 'polar',\\n\\t                cx: coordSys.cx,\\n\\t                cy: coordSys.cy,\\n\\t                r: radius[1],\\n\\t                r0: radius[0]\\n\\t            },\\n\\t            api: {\\n\\t                coord: zrUtil.bind(function (data) {\\n\\t                    var radius = radiusAxis.dataToRadius(data[0]);\\n\\t                    var angle = angleAxis.dataToAngle(data[1]);\\n\\t                    var coord = coordSys.coordToPoint([radius, angle]);\\n\\t                    coord.push(radius, angle * Math.PI / 180);\\n\\t                    return coord;\\n\\t                }),\\n\\t                size: zrUtil.bind(dataToCoordSize, coordSys)\\n\\t            }\\n\\t        };\\n\\t    }\\n\\n\\t    module.exports = prepareCustom;\\n\\n\\n/***/ },\\n/* 318 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\n\\t    function prepareCustom(coordSys) {\\n\\t        var rect = coordSys.getRect();\\n\\t        var rangeInfo = coordSys.getRangeInfo();\\n\\n\\t        return {\\n\\t            coordSys: {\\n\\t                type: 'calendar',\\n\\t                x: rect.x,\\n\\t                y: rect.y,\\n\\t                width: rect.width,\\n\\t                height: rect.height,\\n\\t                cellWidth: coordSys.getCellWidth(),\\n\\t                cellHeight: coordSys.getCellHeight(),\\n\\t                rangeInfo: {\\n\\t                    start: rangeInfo.start,\\n\\t                    end: rangeInfo.end,\\n\\t                    weeks: rangeInfo.weeks,\\n\\t                    dayCount: rangeInfo.allDay\\n\\t                }\\n\\t            },\\n\\t            api: {\\n\\t                coord: zrUtil.bind(coordSys.dataToPoint, coordSys)\\n\\t            }\\n\\t        };\\n\\t    }\\n\\n\\t    module.exports = prepareCustom;\\n\\n\\n/***/ },\\n/* 319 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var echarts = __webpack_require__(1);\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var modelUtil = __webpack_require__(5);\\n\\t    var graphicUtil = __webpack_require__(18);\\n\\t    var layoutUtil = __webpack_require__(71);\\n\\n\\t    // -------------\\n\\t    // Preprocessor\\n\\t    // -------------\\n\\n\\t    echarts.registerPreprocessor(function (option) {\\n\\t        var graphicOption = option.graphic;\\n\\n\\t        // Convert\\n\\t        // {graphic: [{left: 10, type: 'circle'}, ...]}\\n\\t        // or\\n\\t        // {graphic: {left: 10, type: 'circle'}}\\n\\t        // to\\n\\t        // {graphic: [{elements: [{left: 10, type: 'circle'}, ...]}]}\\n\\t        if (zrUtil.isArray(graphicOption)) {\\n\\t            if (!graphicOption[0] || !graphicOption[0].elements) {\\n\\t                option.graphic = [{elements: graphicOption}];\\n\\t            }\\n\\t            else {\\n\\t                // Only one graphic instance can be instantiated. (We dont\\n\\t                // want that too many views are created in echarts._viewMap)\\n\\t                option.graphic = [option.graphic[0]];\\n\\t            }\\n\\t        }\\n\\t        else if (graphicOption && !graphicOption.elements) {\\n\\t            option.graphic = [{elements: [graphicOption]}];\\n\\t        }\\n\\t    });\\n\\n\\t    // ------\\n\\t    // Model\\n\\t    // ------\\n\\n\\t    var GraphicModel = echarts.extendComponentModel({\\n\\n\\t        type: 'graphic',\\n\\n\\t        defaultOption: {\\n\\n\\t            // Extra properties for each elements:\\n\\t            //\\n\\t            // left/right/top/bottom: (like 12, '22%', 'center', default undefined)\\n\\t            //      If left/rigth is set, shape.x/shape.cx/position will not be used.\\n\\t            //      If top/bottom is set, shape.y/shape.cy/position will not be used.\\n\\t            //      This mechanism is useful when you want to position a group/element\\n\\t            //      against the right side or the center of this container.\\n\\t            //\\n\\t            // width/height: (can only be pixel value, default 0)\\n\\t            //      Only be used to specify contianer(group) size, if needed. And\\n\\t            //      can not be percentage value (like '33%'). See the reason in the\\n\\t            //      layout algorithm below.\\n\\t            //\\n\\t            // bounding: (enum: 'all' (default) | 'raw')\\n\\t            //      Specify how to calculate boundingRect when locating.\\n\\t            //      'all': Get uioned and transformed boundingRect\\n\\t            //          from both itself and its descendants.\\n\\t            //          This mode simplies confining a group of elements in the bounding\\n\\t            //          of their ancester container (e.g., using 'right: 0').\\n\\t            //      'raw': Only use the boundingRect of itself and before transformed.\\n\\t            //          This mode is similar to css behavior, which is useful when you\\n\\t            //          want an element to be able to overflow its container. (Consider\\n\\t            //          a rotated circle needs to be located in a corner.)\\n\\n\\t            // Note: elements is always behind its ancestors in this elements array.\\n\\t            elements: [],\\n\\t            parentId: null\\n\\t        },\\n\\n\\t        /**\\n\\t         * Save el options for the sake of the performance (only update modified graphics).\\n\\t         * The order is the same as those in option. (ancesters -> descendants)\\n\\t         *\\n\\t         * @private\\n\\t         * @type {Array.<Object>}\\n\\t         */\\n\\t        _elOptionsToUpdate: null,\\n\\n\\t        /**\\n\\t         * @override\\n\\t         */\\n\\t        mergeOption: function (option) {\\n\\t            // Prevent default merge to elements\\n\\t            var elements = this.option.elements;\\n\\t            this.option.elements = null;\\n\\n\\t            GraphicModel.superApply(this, 'mergeOption', arguments);\\n\\n\\t            this.option.elements = elements;\\n\\t        },\\n\\n\\t        /**\\n\\t         * @override\\n\\t         */\\n\\t        optionUpdated: function (newOption, isInit) {\\n\\t            var thisOption = this.option;\\n\\t            var newList = (isInit ? thisOption : newOption).elements;\\n\\t            var existList = thisOption.elements = isInit ? [] : thisOption.elements;\\n\\n\\t            var flattenedList = [];\\n\\t            this._flatten(newList, flattenedList);\\n\\n\\t            var mappingResult = modelUtil.mappingToExists(existList, flattenedList);\\n\\t            modelUtil.makeIdAndName(mappingResult);\\n\\n\\t            // Clear elOptionsToUpdate\\n\\t            var elOptionsToUpdate = this._elOptionsToUpdate = [];\\n\\n\\t            zrUtil.each(mappingResult, function (resultItem, index) {\\n\\t                var newElOption = resultItem.option;\\n\\n\\t                if (true) {\\n\\t                    zrUtil.assert(\\n\\t                        zrUtil.isObject(newElOption) || resultItem.exist,\\n\\t                        'Empty graphic option definition'\\n\\t                    );\\n\\t                }\\n\\n\\t                if (!newElOption) {\\n\\t                    return;\\n\\t                }\\n\\n\\t                elOptionsToUpdate.push(newElOption);\\n\\n\\t                setKeyInfoToNewElOption(resultItem, newElOption);\\n\\n\\t                mergeNewElOptionToExist(existList, index, newElOption);\\n\\n\\t                setLayoutInfoToExist(existList[index], newElOption);\\n\\n\\t            }, this);\\n\\n\\t            // Clean\\n\\t            for (var i = existList.length - 1; i >= 0; i--) {\\n\\t                if (existList[i] == null) {\\n\\t                    existList.splice(i, 1);\\n\\t                }\\n\\t                else {\\n\\t                    // $action should be volatile, otherwise option gotten from\\n\\t                    // `getOption` will contain unexpected $action.\\n\\t                    delete existList[i].$action;\\n\\t                }\\n\\t            }\\n\\t        },\\n\\n\\t        /**\\n\\t         * Convert\\n\\t         * [{\\n\\t         *  type: 'group',\\n\\t         *  id: 'xx',\\n\\t         *  children: [{type: 'circle'}, {type: 'polygon'}]\\n\\t         * }]\\n\\t         * to\\n\\t         * [\\n\\t         *  {type: 'group', id: 'xx'},\\n\\t         *  {type: 'circle', parentId: 'xx'},\\n\\t         *  {type: 'polygon', parentId: 'xx'}\\n\\t         * ]\\n\\t         *\\n\\t         * @private\\n\\t         * @param {Array.<Object>} optionList option list\\n\\t         * @param {Array.<Object>} result result of flatten\\n\\t         * @param {Object} parentOption parent option\\n\\t         */\\n\\t        _flatten: function (optionList, result, parentOption) {\\n\\t            zrUtil.each(optionList, function (option) {\\n\\t                if (!option) {\\n\\t                    return;\\n\\t                }\\n\\n\\t                if (parentOption) {\\n\\t                    option.parentOption = parentOption;\\n\\t                }\\n\\n\\t                result.push(option);\\n\\n\\t                var children = option.children;\\n\\t                if (option.type === 'group' && children) {\\n\\t                    this._flatten(children, result, option);\\n\\t                }\\n\\t                // Deleting for JSON output, and for not affecting group creation.\\n\\t                delete option.children;\\n\\t            }, this);\\n\\t        },\\n\\n\\t        // FIXME\\n\\t        // Pass to view using payload? setOption has a payload?\\n\\t        useElOptionsToUpdate: function () {\\n\\t            var els = this._elOptionsToUpdate;\\n\\t            // Clear to avoid render duplicately when zooming.\\n\\t            this._elOptionsToUpdate = null;\\n\\t            return els;\\n\\t        }\\n\\t    });\\n\\n\\t    // -----\\n\\t    // View\\n\\t    // -----\\n\\n\\t    echarts.extendComponentView({\\n\\n\\t        type: 'graphic',\\n\\n\\t        /**\\n\\t         * @override\\n\\t         */\\n\\t        init: function (ecModel, api) {\\n\\n\\t            /**\\n\\t             * @private\\n\\t             * @type {module:zrender/core/util.HashMap}\\n\\t             */\\n\\t            this._elMap = zrUtil.createHashMap();\\n\\n\\t            /**\\n\\t             * @private\\n\\t             * @type {module:echarts/graphic/GraphicModel}\\n\\t             */\\n\\t            this._lastGraphicModel;\\n\\t        },\\n\\n\\t        /**\\n\\t         * @override\\n\\t         */\\n\\t        render: function (graphicModel, ecModel, api) {\\n\\n\\t            // Having leveraged between use cases and algorithm complexity, a very\\n\\t            // simple layout mechanism is used:\\n\\t            // The size(width/height) can be determined by itself or its parent (not\\n\\t            // implemented yet), but can not by its children. (Top-down travel)\\n\\t            // The location(x/y) can be determined by the bounding rect of itself\\n\\t            // (can including its descendants or not) and the size of its parent.\\n\\t            // (Bottom-up travel)\\n\\n\\t            // When `chart.clear()` or `chart.setOption({...}, true)` with the same id,\\n\\t            // view will be reused.\\n\\t            if (graphicModel !== this._lastGraphicModel) {\\n\\t                this._clear();\\n\\t            }\\n\\t            this._lastGraphicModel = graphicModel;\\n\\n\\t            this._updateElements(graphicModel, api);\\n\\t            this._relocate(graphicModel, api);\\n\\t        },\\n\\n\\t        /**\\n\\t         * Update graphic elements.\\n\\t         *\\n\\t         * @private\\n\\t         * @param {Object} graphicModel graphic model\\n\\t         * @param {module:echarts/ExtensionAPI} api extension API\\n\\t         */\\n\\t        _updateElements: function (graphicModel, api) {\\n\\t            var elOptionsToUpdate = graphicModel.useElOptionsToUpdate();\\n\\n\\t            if (!elOptionsToUpdate) {\\n\\t                return;\\n\\t            }\\n\\n\\t            var elMap = this._elMap;\\n\\t            var rootGroup = this.group;\\n\\n\\t            // Top-down tranverse to assign graphic settings to each elements.\\n\\t            zrUtil.each(elOptionsToUpdate, function (elOption) {\\n\\t                var $action = elOption.$action;\\n\\t                var id = elOption.id;\\n\\t                var existEl = elMap.get(id);\\n\\t                var parentId = elOption.parentId;\\n\\t                var targetElParent = parentId != null ? elMap.get(parentId) : rootGroup;\\n\\n\\t                // In top/bottom mode, textVertical should not be used. And textBaseline\\n\\t                // should not be 'alphabetic', which cause inaccurately locating.\\n\\t                if (elOption.hv && elOption.hv[1] && elOption.type === 'text') {\\n\\t                    elOption.style = zrUtil.defaults({textBaseline: 'middle'}, elOption.style);\\n\\t                    elOption.style.textVerticalAlign = null;\\n\\t                }\\n\\n\\t                // Remove unnecessary props to avoid potential problems.\\n\\t                var elOptionCleaned = getCleanedElOption(elOption);\\n\\n\\t                // For simple, do not support parent change, otherwise reorder is needed.\\n\\t                if (true) {\\n\\t                    existEl && zrUtil.assert(\\n\\t                        targetElParent === existEl.parent,\\n\\t                        'Changing parent is not supported.'\\n\\t                    );\\n\\t                }\\n\\n\\t                if (!$action || $action === 'merge') {\\n\\t                    existEl\\n\\t                        ? existEl.attr(elOptionCleaned)\\n\\t                        : createEl(id, targetElParent, elOptionCleaned, elMap);\\n\\t                }\\n\\t                else if ($action === 'replace') {\\n\\t                    removeEl(existEl, elMap);\\n\\t                    createEl(id, targetElParent, elOptionCleaned, elMap);\\n\\t                }\\n\\t                else if ($action === 'remove') {\\n\\t                    removeEl(existEl, elMap);\\n\\t                }\\n\\n\\t                var el = elMap.get(id);\\n\\t                if (el) {\\n\\t                    el.__ecGraphicWidth = elOption.width;\\n\\t                    el.__ecGraphicHeight = elOption.height;\\n\\t                }\\n\\t            });\\n\\t        },\\n\\n\\t        /**\\n\\t         * Locate graphic elements.\\n\\t         *\\n\\t         * @private\\n\\t         * @param {Object} graphicModel graphic model\\n\\t         * @param {module:echarts/ExtensionAPI} api extension API\\n\\t         */\\n\\t        _relocate: function (graphicModel, api) {\\n\\t            var elOptions = graphicModel.option.elements;\\n\\t            var rootGroup = this.group;\\n\\t            var elMap = this._elMap;\\n\\n\\t            // Bottom-up tranvese all elements (consider ec resize) to locate elements.\\n\\t            for (var i = elOptions.length - 1; i >= 0; i--) {\\n\\t                var elOption = elOptions[i];\\n\\t                var el = elMap.get(elOption.id);\\n\\n\\t                if (!el) {\\n\\t                    continue;\\n\\t                }\\n\\n\\t                var parentEl = el.parent;\\n\\t                var containerInfo = parentEl === rootGroup\\n\\t                    ? {\\n\\t                        width: api.getWidth(),\\n\\t                        height: api.getHeight()\\n\\t                    }\\n\\t                    : { // Like 'position:absolut' in css, default 0.\\n\\t                        width: parentEl.__ecGraphicWidth || 0,\\n\\t                        height: parentEl.__ecGraphicHeight || 0\\n\\t                    };\\n\\n\\t                layoutUtil.positionElement(\\n\\t                    el, elOption, containerInfo, null,\\n\\t                    {hv: elOption.hv, boundingMode: elOption.bounding}\\n\\t                );\\n\\t            }\\n\\t        },\\n\\n\\t        /**\\n\\t         * Clear all elements.\\n\\t         *\\n\\t         * @private\\n\\t         */\\n\\t        _clear: function () {\\n\\t            var elMap = this._elMap;\\n\\t            elMap.each(function (el) {\\n\\t                removeEl(el, elMap);\\n\\t            });\\n\\t            this._elMap = zrUtil.createHashMap();\\n\\t        },\\n\\n\\t        /**\\n\\t         * @override\\n\\t         */\\n\\t        dispose: function () {\\n\\t            this._clear();\\n\\t        }\\n\\t    });\\n\\n\\t    function createEl(id, targetElParent, elOption, elMap) {\\n\\t        var graphicType = elOption.type;\\n\\n\\t        if (true) {\\n\\t            zrUtil.assert(graphicType, 'graphic type MUST be set');\\n\\t        }\\n\\n\\t        var Clz = graphicUtil[graphicType.charAt(0).toUpperCase() + graphicType.slice(1)];\\n\\n\\t        if (true) {\\n\\t            zrUtil.assert(Clz, 'graphic type can not be found');\\n\\t        }\\n\\n\\t        var el = new Clz(elOption);\\n\\t        targetElParent.add(el);\\n\\t        elMap.set(id, el);\\n\\t        el.__ecGraphicId = id;\\n\\t    }\\n\\n\\t    function removeEl(existEl, elMap) {\\n\\t        var existElParent = existEl && existEl.parent;\\n\\t        if (existElParent) {\\n\\t            existEl.type === 'group' && existEl.traverse(function (el) {\\n\\t                removeEl(el, elMap);\\n\\t            });\\n\\t            elMap.removeKey(existEl.__ecGraphicId);\\n\\t            existElParent.remove(existEl);\\n\\t        }\\n\\t    }\\n\\n\\t    // Remove unnecessary props to avoid potential problems.\\n\\t    function getCleanedElOption(elOption) {\\n\\t        elOption = zrUtil.extend({}, elOption);\\n\\t        zrUtil.each(\\n\\t            ['id', 'parentId', '$action', 'hv', 'bounding'].concat(layoutUtil.LOCATION_PARAMS),\\n\\t            function (name) {\\n\\t                delete elOption[name];\\n\\t            }\\n\\t        );\\n\\t        return elOption;\\n\\t    }\\n\\n\\t    function isSetLoc(obj, props) {\\n\\t        var isSet;\\n\\t        zrUtil.each(props, function (prop) {\\n\\t            obj[prop] != null && obj[prop] !== 'auto' && (isSet = true);\\n\\t        });\\n\\t        return isSet;\\n\\t    }\\n\\n\\t    function setKeyInfoToNewElOption(resultItem, newElOption) {\\n\\t        var existElOption = resultItem.exist;\\n\\n\\t        // Set id and type after id assigned.\\n\\t        newElOption.id = resultItem.keyInfo.id;\\n\\t        !newElOption.type && existElOption && (newElOption.type = existElOption.type);\\n\\n\\t        // Set parent id if not specified\\n\\t        if (newElOption.parentId == null) {\\n\\t            var newElParentOption = newElOption.parentOption;\\n\\t            if (newElParentOption) {\\n\\t                newElOption.parentId = newElParentOption.id;\\n\\t            }\\n\\t            else if (existElOption) {\\n\\t                newElOption.parentId = existElOption.parentId;\\n\\t            }\\n\\t        }\\n\\n\\t        // Clear\\n\\t        newElOption.parentOption = null;\\n\\t    }\\n\\n\\t    function mergeNewElOptionToExist(existList, index, newElOption) {\\n\\t        // Update existing options, for `getOption` feature.\\n\\t        var newElOptCopy = zrUtil.extend({}, newElOption);\\n\\t        var existElOption = existList[index];\\n\\n\\t        var $action = newElOption.$action || 'merge';\\n\\t        if ($action === 'merge') {\\n\\t            if (existElOption) {\\n\\n\\t                if (true) {\\n\\t                    var newType = newElOption.type;\\n\\t                    zrUtil.assert(\\n\\t                        !newType || existElOption.type === newType,\\n\\t                        'Please set $action: \\\"replace\\\" to change `type`'\\n\\t                    );\\n\\t                }\\n\\n\\t                // We can ensure that newElOptCopy and existElOption are not\\n\\t                // the same object, so `merge` will not change newElOptCopy.\\n\\t                zrUtil.merge(existElOption, newElOptCopy, true);\\n\\t                // Rigid body, use ignoreSize.\\n\\t                layoutUtil.mergeLayoutParam(existElOption, newElOptCopy, {ignoreSize: true});\\n\\t                // Will be used in render.\\n\\t                layoutUtil.copyLayoutParams(newElOption, existElOption);\\n\\t            }\\n\\t            else {\\n\\t                existList[index] = newElOptCopy;\\n\\t            }\\n\\t        }\\n\\t        else if ($action === 'replace') {\\n\\t            existList[index] = newElOptCopy;\\n\\t        }\\n\\t        else if ($action === 'remove') {\\n\\t            // null will be cleaned later.\\n\\t            existElOption && (existList[index] = null);\\n\\t        }\\n\\t    }\\n\\n\\t    function setLayoutInfoToExist(existItem, newElOption) {\\n\\t        if (!existItem) {\\n\\t            return;\\n\\t        }\\n\\t        existItem.hv = newElOption.hv = [\\n\\t            // Rigid body, dont care `width`.\\n\\t            isSetLoc(newElOption, ['left', 'right']),\\n\\t            // Rigid body, dont care `height`.\\n\\t            isSetLoc(newElOption, ['top', 'bottom'])\\n\\t        ];\\n\\t        // Give default group size. Otherwise layout error may occur.\\n\\t        if (existItem.type === 'group') {\\n\\t            existItem.width == null && (existItem.width = newElOption.width = 0);\\n\\t            existItem.height == null && (existItem.height = newElOption.height = 0);\\n\\t        }\\n\\t    }\\n\\n\\n\\n/***/ },\\n/* 320 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    __webpack_require__(124);\\n\\n\\t    __webpack_require__(304);\\n\\n\\t    __webpack_require__(298);\\n\\n\\n\\n/***/ },\\n/* 321 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * Legend component entry file8\\n\\t */\\n\\n\\n\\t    __webpack_require__(322);\\n\\t    __webpack_require__(323);\\n\\t    __webpack_require__(324);\\n\\n\\t    var echarts = __webpack_require__(1);\\n\\t    // Series Filter\\n\\t    echarts.registerProcessor(__webpack_require__(326));\\n\\n\\n/***/ },\\n/* 322 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t'use strict';\\n\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var Model = __webpack_require__(12);\\n\\n\\t    var LegendModel = __webpack_require__(1).extendComponentModel({\\n\\n\\t        type: 'legend',\\n\\n\\t        dependencies: ['series'],\\n\\n\\t        layoutMode: {\\n\\t            type: 'box',\\n\\t            ignoreSize: true\\n\\t        },\\n\\n\\t        init: function (option, parentModel, ecModel) {\\n\\t            this.mergeDefaultAndTheme(option, ecModel);\\n\\n\\t            option.selected = option.selected || {};\\n\\t        },\\n\\n\\t        mergeOption: function (option) {\\n\\t            LegendModel.superCall(this, 'mergeOption', option);\\n\\t        },\\n\\n\\t        optionUpdated: function () {\\n\\t            this._updateData(this.ecModel);\\n\\n\\t            var legendData = this._data;\\n\\n\\t            // If selectedMode is single, try to select one\\n\\t            if (legendData[0] && this.get('selectedMode') === 'single') {\\n\\t                var hasSelected = false;\\n\\t                // If has any selected in option.selected\\n\\t                for (var i = 0; i < legendData.length; i++) {\\n\\t                    var name = legendData[i].get('name');\\n\\t                    if (this.isSelected(name)) {\\n\\t                        // Force to unselect others\\n\\t                        this.select(name);\\n\\t                        hasSelected = true;\\n\\t                        break;\\n\\t                    }\\n\\t                }\\n\\t                // Try select the first if selectedMode is single\\n\\t                !hasSelected && this.select(legendData[0].get('name'));\\n\\t            }\\n\\t        },\\n\\n\\t        _updateData: function (ecModel) {\\n\\t            var legendData = zrUtil.map(this.get('data') || [], function (dataItem) {\\n\\t                // Can be string or number\\n\\t                if (typeof dataItem === 'string' || typeof dataItem === 'number') {\\n\\t                    dataItem = {\\n\\t                        name: dataItem\\n\\t                    };\\n\\t                }\\n\\t                return new Model(dataItem, this, this.ecModel);\\n\\t            }, this);\\n\\t            this._data = legendData;\\n\\n\\t            var availableNames = zrUtil.map(ecModel.getSeries(), function (series) {\\n\\t                return series.name;\\n\\t            });\\n\\t            ecModel.eachSeries(function (seriesModel) {\\n\\t                if (seriesModel.legendDataProvider) {\\n\\t                    var data = seriesModel.legendDataProvider();\\n\\t                    availableNames = availableNames.concat(data.mapArray(data.getName));\\n\\t                }\\n\\t            });\\n\\t            /**\\n\\t             * @type {Array.<string>}\\n\\t             * @private\\n\\t             */\\n\\t            this._availableNames = availableNames;\\n\\t        },\\n\\n\\t        /**\\n\\t         * @return {Array.<module:echarts/model/Model>}\\n\\t         */\\n\\t        getData: function () {\\n\\t            return this._data;\\n\\t        },\\n\\n\\t        /**\\n\\t         * @param {string} name\\n\\t         */\\n\\t        select: function (name) {\\n\\t            var selected = this.option.selected;\\n\\t            var selectedMode = this.get('selectedMode');\\n\\t            if (selectedMode === 'single') {\\n\\t                var data = this._data;\\n\\t                zrUtil.each(data, function (dataItem) {\\n\\t                    selected[dataItem.get('name')] = false;\\n\\t                });\\n\\t            }\\n\\t            selected[name] = true;\\n\\t        },\\n\\n\\t        /**\\n\\t         * @param {string} name\\n\\t         */\\n\\t        unSelect: function (name) {\\n\\t            if (this.get('selectedMode') !== 'single') {\\n\\t                this.option.selected[name] = false;\\n\\t            }\\n\\t        },\\n\\n\\t        /**\\n\\t         * @param {string} name\\n\\t         */\\n\\t        toggleSelected: function (name) {\\n\\t            var selected = this.option.selected;\\n\\t            // Default is true\\n\\t            if (!selected.hasOwnProperty(name)) {\\n\\t                selected[name] = true;\\n\\t            }\\n\\t            this[selected[name] ? 'unSelect' : 'select'](name);\\n\\t        },\\n\\n\\t        /**\\n\\t         * @param {string} name\\n\\t         */\\n\\t        isSelected: function (name) {\\n\\t            var selected = this.option.selected;\\n\\t            return !(selected.hasOwnProperty(name) && !selected[name])\\n\\t                && zrUtil.indexOf(this._availableNames, name) >= 0;\\n\\t        },\\n\\n\\t        defaultOption: {\\n\\t            // 一级层叠\\n\\t            zlevel: 0,\\n\\t            // 二级层叠\\n\\t            z: 4,\\n\\t            show: true,\\n\\n\\t            // 布局方式，默认为水平布局，可选为：\\n\\t            // 'horizontal' | 'vertical'\\n\\t            orient: 'horizontal',\\n\\n\\t            left: 'center',\\n\\t            // right: 'center',\\n\\n\\t            top: 'top',\\n\\t            // bottom: 'top',\\n\\n\\t            // 水平对齐\\n\\t            // 'auto' | 'left' | 'right'\\n\\t            // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\\n\\t            align: 'auto',\\n\\n\\t            backgroundColor: 'rgba(0,0,0,0)',\\n\\t            // 图例边框颜色\\n\\t            borderColor: '#ccc',\\n\\t            // 图例边框线宽，单位px，默认为0（无边框）\\n\\t            borderWidth: 0,\\n\\t            // 图例内边距，单位px，默认各方向内边距为5，\\n\\t            // 接受数组分别设定上右下左边距，同css\\n\\t            padding: 5,\\n\\t            // 各个item之间的间隔，单位px，默认为10，\\n\\t            // 横向布局时为水平间隔，纵向布局时为纵向间隔\\n\\t            itemGap: 10,\\n\\t            // 图例图形宽度\\n\\t            itemWidth: 25,\\n\\t            // 图例图形高度\\n\\t            itemHeight: 14,\\n\\n\\t            // 图例关闭时候的颜色\\n\\t            inactiveColor: '#ccc',\\n\\n\\t            textStyle: {\\n\\t                // 图例文字颜色\\n\\t                color: '#333'\\n\\t            },\\n\\t            // formatter: '',\\n\\t            // 选择模式，默认开启图例开关\\n\\t            selectedMode: true,\\n\\t            // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\\n\\t            // selected: null,\\n\\t            // 图例内容（详见legend.data，数组中每一项代表一个item\\n\\t            // data: [],\\n\\n\\t            // Tooltip 相关配置\\n\\t            tooltip: {\\n\\t                show: false\\n\\t            }\\n\\t        }\\n\\t    });\\n\\n\\t    module.exports = LegendModel;\\n\\n\\n/***/ },\\n/* 323 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * @file Legend action\\n\\t */\\n\\n\\n\\t    var echarts = __webpack_require__(1);\\n\\t    var zrUtil = __webpack_require__(4);\\n\\n\\t    function legendSelectActionHandler(methodName, payload, ecModel) {\\n\\t        var selectedMap = {};\\n\\t        var isToggleSelect = methodName === 'toggleSelected';\\n\\t        var isSelected;\\n\\t        // Update all legend components\\n\\t        ecModel.eachComponent('legend', function (legendModel) {\\n\\t            if (isToggleSelect && isSelected != null) {\\n\\t                // Force other legend has same selected status\\n\\t                // Or the first is toggled to true and other are toggled to false\\n\\t                // In the case one legend has some item unSelected in option. And if other legend\\n\\t                // doesn't has the item, they will assume it is selected.\\n\\t                legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\\n\\t            }\\n\\t            else {\\n\\t                legendModel[methodName](payload.name);\\n\\t                isSelected = legendModel.isSelected(payload.name);\\n\\t            }\\n\\t            var legendData = legendModel.getData();\\n\\t            zrUtil.each(legendData, function (model) {\\n\\t                var name = model.get('name');\\n\\t                // Wrap element\\n\\t                if (name === '\\\\n' || name === '') {\\n\\t                    return;\\n\\t                }\\n\\t                var isItemSelected = legendModel.isSelected(name);\\n\\t                if (selectedMap.hasOwnProperty(name)) {\\n\\t                    // Unselected if any legend is unselected\\n\\t                    selectedMap[name] = selectedMap[name] && isItemSelected;\\n\\t                }\\n\\t                else {\\n\\t                    selectedMap[name] = isItemSelected;\\n\\t                }\\n\\t            });\\n\\t        });\\n\\t        // Return the event explicitly\\n\\t        return {\\n\\t            name: payload.name,\\n\\t            selected: selectedMap\\n\\t        };\\n\\t    }\\n\\t    /**\\n\\t     * @event legendToggleSelect\\n\\t     * @type {Object}\\n\\t     * @property {string} type 'legendToggleSelect'\\n\\t     * @property {string} [from]\\n\\t     * @property {string} name Series name or data item name\\n\\t     */\\n\\t    echarts.registerAction(\\n\\t        'legendToggleSelect', 'legendselectchanged',\\n\\t        zrUtil.curry(legendSelectActionHandler, 'toggleSelected')\\n\\t    );\\n\\n\\t    /**\\n\\t     * @event legendSelect\\n\\t     * @type {Object}\\n\\t     * @property {string} type 'legendSelect'\\n\\t     * @property {string} name Series name or data item name\\n\\t     */\\n\\t    echarts.registerAction(\\n\\t        'legendSelect', 'legendselected',\\n\\t        zrUtil.curry(legendSelectActionHandler, 'select')\\n\\t    );\\n\\n\\t    /**\\n\\t     * @event legendUnSelect\\n\\t     * @type {Object}\\n\\t     * @property {string} type 'legendUnSelect'\\n\\t     * @property {string} name Series name or data item name\\n\\t     */\\n\\t    echarts.registerAction(\\n\\t        'legendUnSelect', 'legendunselected',\\n\\t        zrUtil.curry(legendSelectActionHandler, 'unSelect')\\n\\t    );\\n\\n\\n/***/ },\\n/* 324 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var symbolCreator = __webpack_require__(111);\\n\\t    var graphic = __webpack_require__(18);\\n\\t    var listComponentHelper = __webpack_require__(325);\\n\\n\\t    var curry = zrUtil.curry;\\n\\n\\t    function dispatchSelectAction(name, api) {\\n\\t        api.dispatchAction({\\n\\t            type: 'legendToggleSelect',\\n\\t            name: name\\n\\t        });\\n\\t    }\\n\\n\\t    function dispatchHighlightAction(seriesModel, dataName, api) {\\n\\t        // If element hover will move to a hoverLayer.\\n\\t        var el = api.getZr().storage.getDisplayList()[0];\\n\\t        if (!(el && el.useHoverLayer)) {\\n\\t            seriesModel.get('legendHoverLink') && api.dispatchAction({\\n\\t                type: 'highlight',\\n\\t                seriesName: seriesModel.name,\\n\\t                name: dataName\\n\\t            });\\n\\t        }\\n\\t    }\\n\\n\\t    function dispatchDownplayAction(seriesModel, dataName, api) {\\n\\t        // If element hover will move to a hoverLayer.\\n\\t        var el = api.getZr().storage.getDisplayList()[0];\\n\\t        if (!(el && el.useHoverLayer)) {\\n\\t            seriesModel.get('legendHoverLink') && api.dispatchAction({\\n\\t                type: 'downplay',\\n\\t                seriesName: seriesModel.name,\\n\\t                name: dataName\\n\\t            });\\n\\t        }\\n\\t    }\\n\\n\\t    module.exports = __webpack_require__(1).extendComponentView({\\n\\n\\t        type: 'legend',\\n\\n\\t        init: function () {\\n\\t            this._symbolTypeStore = {};\\n\\t        },\\n\\n\\t        render: function (legendModel, ecModel, api) {\\n\\t            var group = this.group;\\n\\t            group.removeAll();\\n\\n\\t            if (!legendModel.get('show')) {\\n\\t                return;\\n\\t            }\\n\\n\\t            var selectMode = legendModel.get('selectedMode');\\n\\t            var itemAlign = legendModel.get('align');\\n\\n\\t            if (itemAlign === 'auto') {\\n\\t                itemAlign = (legendModel.get('left') === 'right'\\n\\t                    && legendModel.get('orient') === 'vertical')\\n\\t                    ? 'right' : 'left';\\n\\t            }\\n\\n\\t            var legendDrawedMap = zrUtil.createHashMap();\\n\\n\\t            zrUtil.each(legendModel.getData(), function (itemModel) {\\n\\t                var name = itemModel.get('name');\\n\\n\\t                // Use empty string or \\\\n as a newline string\\n\\t                if (name === '' || name === '\\\\n') {\\n\\t                    group.add(new graphic.Group({\\n\\t                        newline: true\\n\\t                    }));\\n\\t                    return;\\n\\t                }\\n\\n\\t                var seriesModel = ecModel.getSeriesByName(name)[0];\\n\\n\\t                if (legendDrawedMap.get(name)) {\\n\\t                    // Have been drawed\\n\\t                    return;\\n\\t                }\\n\\n\\t                // Series legend\\n\\t                if (seriesModel) {\\n\\t                    var data = seriesModel.getData();\\n\\t                    var color = data.getVisual('color');\\n\\n\\t                    // If color is a callback function\\n\\t                    if (typeof color === 'function') {\\n\\t                        // Use the first data\\n\\t                        color = color(seriesModel.getDataParams(0));\\n\\t                    }\\n\\n\\t                    // Using rect symbol defaultly\\n\\t                    var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\\n\\t                    var symbolType = data.getVisual('symbol');\\n\\n\\t                    var itemGroup = this._createItem(\\n\\t                        name, itemModel, legendModel,\\n\\t                        legendSymbolType, symbolType,\\n\\t                        itemAlign, color,\\n\\t                        selectMode\\n\\t                    );\\n\\n\\t                    itemGroup.on('click', curry(dispatchSelectAction, name, api))\\n\\t                        .on('mouseover', curry(dispatchHighlightAction, seriesModel, null, api))\\n\\t                        .on('mouseout', curry(dispatchDownplayAction, seriesModel, null, api));\\n\\n\\t                    legendDrawedMap.set(name, true);\\n\\t                }\\n\\t                else {\\n\\t                    // Data legend of pie, funnel\\n\\t                    ecModel.eachRawSeries(function (seriesModel) {\\n\\t                        // In case multiple series has same data name\\n\\t                        if (legendDrawedMap.get(name)) {\\n\\t                            return;\\n\\t                        }\\n\\t                        if (seriesModel.legendDataProvider) {\\n\\t                            var data = seriesModel.legendDataProvider();\\n\\t                            var idx = data.indexOfName(name);\\n\\t                            if (idx < 0) {\\n\\t                                return;\\n\\t                            }\\n\\n\\t                            var color = data.getItemVisual(idx, 'color');\\n\\n\\t                            var legendSymbolType = 'roundRect';\\n\\n\\t                            var itemGroup = this._createItem(\\n\\t                                name, itemModel, legendModel,\\n\\t                                legendSymbolType, null,\\n\\t                                itemAlign, color,\\n\\t                                selectMode\\n\\t                            );\\n\\n\\t                            itemGroup.on('click', curry(dispatchSelectAction, name, api))\\n\\t                                // FIXME Should not specify the series name\\n\\t                                .on('mouseover', curry(dispatchHighlightAction, seriesModel, name, api))\\n\\t                                .on('mouseout', curry(dispatchDownplayAction, seriesModel, name, api));\\n\\n\\t                            legendDrawedMap.set(name, true);\\n\\t                        }\\n\\t                    }, this);\\n\\t                }\\n\\n\\t                if (true) {\\n\\t                    if (!legendDrawedMap.get(name)) {\\n\\t                        console.warn(name + ' series not exists. Legend data should be same with series name or data name.');\\n\\t                    }\\n\\t                }\\n\\t            }, this);\\n\\n\\t            listComponentHelper.layout(group, legendModel, api);\\n\\t            // Render background after group is layout\\n\\t            // FIXME\\n\\t            listComponentHelper.addBackground(group, legendModel);\\n\\t        },\\n\\n\\t        _createItem: function (\\n\\t            name, itemModel, legendModel,\\n\\t            legendSymbolType, symbolType,\\n\\t            itemAlign, color, selectMode\\n\\t        ) {\\n\\t            var itemWidth = legendModel.get('itemWidth');\\n\\t            var itemHeight = legendModel.get('itemHeight');\\n\\t            var inactiveColor = legendModel.get('inactiveColor');\\n\\n\\t            var isSelected = legendModel.isSelected(name);\\n\\t            var itemGroup = new graphic.Group();\\n\\n\\t            var textStyleModel = itemModel.getModel('textStyle');\\n\\n\\t            var itemIcon = itemModel.get('icon');\\n\\n\\t            var tooltipModel = itemModel.getModel('tooltip');\\n\\t            var legendGlobalTooltipModel = tooltipModel.parentModel;\\n\\n\\t            // Use user given icon first\\n\\t            legendSymbolType = itemIcon || legendSymbolType;\\n\\t            itemGroup.add(symbolCreator.createSymbol(\\n\\t                legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor\\n\\t            ));\\n\\n\\t            // Compose symbols\\n\\t            // PENDING\\n\\t            if (!itemIcon && symbolType\\n\\t                // At least show one symbol, can't be all none\\n\\t                && ((symbolType !== legendSymbolType) || symbolType == 'none')\\n\\t            ) {\\n\\t                var size = itemHeight * 0.8;\\n\\t                if (symbolType === 'none') {\\n\\t                    symbolType = 'circle';\\n\\t                }\\n\\t                // Put symbol in the center\\n\\t                itemGroup.add(symbolCreator.createSymbol(\\n\\t                    symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size,\\n\\t                    isSelected ? color : inactiveColor\\n\\t                ));\\n\\t            }\\n\\n\\t            // Text\\n\\t            var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\\n\\t            var textAlign = itemAlign;\\n\\n\\t            var formatter = legendModel.get('formatter');\\n\\t            var content = name;\\n\\t            if (typeof formatter === 'string' && formatter) {\\n\\t                content = formatter.replace('{name}', name != null ? name : '');\\n\\t            }\\n\\t            else if (typeof formatter === 'function') {\\n\\t                content = formatter(name);\\n\\t            }\\n\\n\\t            var text = new graphic.Text({\\n\\t                style: {\\n\\t                    text: content,\\n\\t                    x: textX,\\n\\t                    y: itemHeight / 2,\\n\\t                    fill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\\n\\t                    textFont: textStyleModel.getFont(),\\n\\t                    textAlign: textAlign,\\n\\t                    textVerticalAlign: 'middle'\\n\\t                }\\n\\t            });\\n\\t            itemGroup.add(text);\\n\\n\\t            // Add a invisible rect to increase the area of mouse hover\\n\\t            var hitRect = new graphic.Rect({\\n\\t                shape: itemGroup.getBoundingRect(),\\n\\t                invisible: true,\\n\\t                tooltip: tooltipModel.get('show') ? zrUtil.extend({\\n\\t                    content: name,\\n\\t                    // Defaul formatter\\n\\t                    formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\\n\\t                        return name;\\n\\t                    },\\n\\t                    formatterParams: {\\n\\t                        componentType: 'legend',\\n\\t                        legendIndex: legendModel.componentIndex,\\n\\t                        name: name,\\n\\t                        $vars: ['name']\\n\\t                    }\\n\\t                }, tooltipModel.option) : null\\n\\t            });\\n\\t            itemGroup.add(hitRect);\\n\\n\\t            itemGroup.eachChild(function (child) {\\n\\t                child.silent = true;\\n\\t            });\\n\\n\\t            hitRect.silent = !selectMode;\\n\\n\\n\\n\\t            this.group.add(itemGroup);\\n\\n\\t            graphic.setHoverStyle(itemGroup);\\n\\n\\t            return itemGroup;\\n\\t        }\\n\\t    });\\n\\n\\n/***/ },\\n/* 325 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\t    // List layout\\n\\t    var layout = __webpack_require__(71);\\n\\t    var formatUtil = __webpack_require__(6);\\n\\t    var graphic = __webpack_require__(18);\\n\\n\\t    function positionGroup(group, model, api) {\\n\\t        layout.positionElement(\\n\\t            group, model.getBoxLayoutParams(),\\n\\t            {\\n\\t                width: api.getWidth(),\\n\\t                height: api.getHeight()\\n\\t            },\\n\\t            model.get('padding')\\n\\t        );\\n\\t    }\\n\\n\\t    module.exports = {\\n\\t        /**\\n\\t         * Layout list like component.\\n\\t         * It will box layout each items in group of component and then position the whole group in the viewport\\n\\t         * @param {module:zrender/group/Group} group\\n\\t         * @param {module:echarts/model/Component} componentModel\\n\\t         * @param {module:echarts/ExtensionAPI}\\n\\t         */\\n\\t        layout: function (group, componentModel, api) {\\n\\t            var rect = layout.getLayoutRect(componentModel.getBoxLayoutParams(), {\\n\\t                width: api.getWidth(),\\n\\t                height: api.getHeight()\\n\\t            }, componentModel.get('padding'));\\n\\t            layout.box(\\n\\t                componentModel.get('orient'),\\n\\t                group,\\n\\t                componentModel.get('itemGap'),\\n\\t                rect.width,\\n\\t                rect.height\\n\\t            );\\n\\n\\t            positionGroup(group, componentModel, api);\\n\\t        },\\n\\n\\t        addBackground: function (group, componentModel) {\\n\\t            var padding = formatUtil.normalizeCssArray(\\n\\t                componentModel.get('padding')\\n\\t            );\\n\\t            var boundingRect = group.getBoundingRect();\\n\\t            var style = componentModel.getItemStyle(['color', 'opacity']);\\n\\t            style.fill = componentModel.get('backgroundColor');\\n\\t            var rect = new graphic.Rect({\\n\\t                shape: {\\n\\t                    x: boundingRect.x - padding[3],\\n\\t                    y: boundingRect.y - padding[0],\\n\\t                    width: boundingRect.width + padding[1] + padding[3],\\n\\t                    height: boundingRect.height + padding[0] + padding[2]\\n\\t                },\\n\\t                style: style,\\n\\t                silent: true,\\n\\t                z2: -1\\n\\t            });\\n\\t            graphic.subPixelOptimizeRect(rect);\\n\\n\\t            group.add(rect);\\n\\t        }\\n\\t    };\\n\\n\\n/***/ },\\n/* 326 */\\n/***/ function(module, exports) {\\n\\n\\t\\n\\t   module.exports = function (ecModel) {\\n\\t        var legendModels = ecModel.findComponents({\\n\\t            mainType: 'legend'\\n\\t        });\\n\\t        if (legendModels && legendModels.length) {\\n\\t            ecModel.filterSeries(function (series) {\\n\\t                // If in any legend component the status is not selected.\\n\\t                // Because in legend series is assumed selected when it is not in the legend data.\\n\\t                for (var i = 0; i < legendModels.length; i++) {\\n\\t                    if (!legendModels[i].isSelected(series.name)) {\\n\\t                        return false;\\n\\t                    }\\n\\t                }\\n\\t                return true;\\n\\t            });\\n\\t        }\\n\\t    };\\n\\n\\n/***/ },\\n/* 327 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t// FIXME Better way to pack data in graphic element\\n\\n\\n\\t    __webpack_require__(298);\\n\\n\\t    __webpack_require__(328);\\n\\n\\t    __webpack_require__(329);\\n\\n\\n\\t    // Show tip action\\n\\t    /**\\n\\t     * @action\\n\\t     * @property {string} type\\n\\t     * @property {number} seriesIndex\\n\\t     * @property {number} dataIndex\\n\\t     * @property {number} [x]\\n\\t     * @property {number} [y]\\n\\t     */\\n\\t    __webpack_require__(1).registerAction(\\n\\t        {\\n\\t            type: 'showTip',\\n\\t            event: 'showTip',\\n\\t            update: 'tooltip:manuallyShowTip'\\n\\t        },\\n\\t        // noop\\n\\t        function () {}\\n\\t    );\\n\\t    // Hide tip action\\n\\t    __webpack_require__(1).registerAction(\\n\\t        {\\n\\t            type: 'hideTip',\\n\\t            event: 'hideTip',\\n\\t            update: 'tooltip:manuallyHideTip'\\n\\t        },\\n\\t        // noop\\n\\t        function () {}\\n\\t    );\\n\\n\\n/***/ },\\n/* 328 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    __webpack_require__(1).extendComponentModel({\\n\\n\\t        type: 'tooltip',\\n\\n\\t        dependencies: ['axisPointer'],\\n\\n\\t        defaultOption: {\\n\\t            zlevel: 0,\\n\\n\\t            z: 8,\\n\\n\\t            show: true,\\n\\n\\t            // tooltip主体内容\\n\\t            showContent: true,\\n\\n\\t            // 'trigger' only works on coordinate system.\\n\\t            // 'item' | 'axis' | 'none'\\n\\t            trigger: 'item',\\n\\n\\t            // 'click' | 'mousemove' | 'none'\\n\\t            triggerOn: 'mousemove|click',\\n\\n\\t            alwaysShowContent: false,\\n\\n\\t            displayMode: 'single', // 'single' | 'multipleByCoordSys'\\n\\n\\t            // 位置 {Array} | {Function}\\n\\t            // position: null\\n\\t            // Consider triggered from axisPointer handle, verticalAlign should be 'middle'\\n\\t            // align: null,\\n\\t            // verticalAlign: null,\\n\\n\\t            // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\\n\\t            confine: false,\\n\\n\\t            // 内容格式器：{string}（Template） ¦ {Function}\\n\\t            // formatter: null\\n\\n\\t            showDelay: 0,\\n\\n\\t            // 隐藏延迟，单位ms\\n\\t            hideDelay: 100,\\n\\n\\t            // 动画变换时间，单位s\\n\\t            transitionDuration: 0.4,\\n\\n\\t            enterable: false,\\n\\n\\t            // 提示背景颜色，默认为透明度为0.7的黑色\\n\\t            backgroundColor: 'rgba(50,50,50,0.7)',\\n\\n\\t            // 提示边框颜色\\n\\t            borderColor: '#333',\\n\\n\\t            // 提示边框圆角，单位px，默认为4\\n\\t            borderRadius: 4,\\n\\n\\t            // 提示边框线宽，单位px，默认为0（无边框）\\n\\t            borderWidth: 0,\\n\\n\\t            // 提示内边距，单位px，默认各方向内边距为5，\\n\\t            // 接受数组分别设定上右下左边距，同css\\n\\t            padding: 5,\\n\\n\\t            // Extra css text\\n\\t            extraCssText: '',\\n\\n\\t            // 坐标轴指示器，坐标轴触发有效\\n\\t            axisPointer: {\\n\\t                // 默认为直线\\n\\t                // 可选为：'line' | 'shadow' | 'cross'\\n\\t                type: 'line',\\n\\n\\t                // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\\n\\t                // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\\n\\t                // 默认 'auto'，会选择类型为 cateogry 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\\n\\t                // 极坐标系会默认选择 angle 轴\\n\\t                axis: 'auto',\\n\\n\\t                animation: 'auto',\\n\\t                animationDurationUpdate: 200,\\n\\t                animationEasingUpdate: 'exponentialOut',\\n\\n\\t                crossStyle: {\\n\\t                    color: '#999',\\n\\t                    width: 1,\\n\\t                    type: 'dashed',\\n\\n\\t                    // TODO formatter\\n\\t                    textStyle: {}\\n\\t                }\\n\\n\\t                // lineStyle and shadowStyle should not be specified here,\\n\\t                // otherwise it will always override those styles on option.axisPointer.\\n\\t            },\\n\\t            textStyle: {\\n\\t                color: '#fff',\\n\\t                fontSize: 14\\n\\t            }\\n\\t        }\\n\\t    });\\n\\n\\n/***/ },\\n/* 329 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var TooltipContent = __webpack_require__(330);\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var formatUtil = __webpack_require__(6);\\n\\t    var numberUtil = __webpack_require__(7);\\n\\t    var graphic = __webpack_require__(18);\\n\\t    var findPointFromSeries = __webpack_require__(300);\\n\\t    var layoutUtil = __webpack_require__(71);\\n\\t    var env = __webpack_require__(2);\\n\\t    var Model = __webpack_require__(12);\\n\\t    var globalListener = __webpack_require__(303);\\n\\t    var axisHelper = __webpack_require__(101);\\n\\t    var axisPointerViewHelper = __webpack_require__(306);\\n\\n\\t    var bind = zrUtil.bind;\\n\\t    var each = zrUtil.each;\\n\\t    var parsePercent = numberUtil.parsePercent;\\n\\n\\n\\t    var proxyRect = new graphic.Rect({\\n\\t        shape: {x: -1, y: -1, width: 2, height: 2}\\n\\t    });\\n\\n\\t    __webpack_require__(1).extendComponentView({\\n\\n\\t        type: 'tooltip',\\n\\n\\t        init: function (ecModel, api) {\\n\\t            if (env.node) {\\n\\t                return;\\n\\t            }\\n\\t            var tooltipContent = new TooltipContent(api.getDom(), api);\\n\\t            this._tooltipContent = tooltipContent;\\n\\t        },\\n\\n\\t        render: function (tooltipModel, ecModel, api) {\\n\\t            if (env.node) {\\n\\t                return;\\n\\t            }\\n\\n\\t            // Reset\\n\\t            this.group.removeAll();\\n\\n\\t            /**\\n\\t             * @private\\n\\t             * @type {module:echarts/component/tooltip/TooltipModel}\\n\\t             */\\n\\t            this._tooltipModel = tooltipModel;\\n\\n\\t            /**\\n\\t             * @private\\n\\t             * @type {module:echarts/model/Global}\\n\\t             */\\n\\t            this._ecModel = ecModel;\\n\\n\\t            /**\\n\\t             * @private\\n\\t             * @type {module:echarts/ExtensionAPI}\\n\\t             */\\n\\t            this._api = api;\\n\\n\\t            /**\\n\\t             * Should be cleaned when render.\\n\\t             * @private\\n\\t             * @type {Array.<Array.<Object>>}\\n\\t             */\\n\\t            this._lastDataByCoordSys = null;\\n\\n\\t            /**\\n\\t             * @private\\n\\t             * @type {boolean}\\n\\t             */\\n\\t            this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\\n\\n\\t            var tooltipContent = this._tooltipContent;\\n\\t            tooltipContent.update();\\n\\t            tooltipContent.setEnterable(tooltipModel.get('enterable'));\\n\\n\\t            this._initGlobalListener();\\n\\n\\t            this._keepShow();\\n\\t        },\\n\\n\\t        _initGlobalListener: function () {\\n\\t            var tooltipModel = this._tooltipModel;\\n\\t            var triggerOn = tooltipModel.get('triggerOn');\\n\\n\\t            globalListener.register(\\n\\t                'itemTooltip',\\n\\t                this._api,\\n\\t                bind(function (currTrigger, e, dispatchAction) {\\n\\t                    // If 'none', it is not controlled by mouse totally.\\n\\t                    if (triggerOn !== 'none') {\\n\\t                        if (triggerOn.indexOf(currTrigger) >= 0) {\\n\\t                            this._tryShow(e, dispatchAction);\\n\\t                        }\\n\\t                        else if (currTrigger === 'leave') {\\n\\t                            this._hide(dispatchAction);\\n\\t                        }\\n\\t                    }\\n\\t                }, this)\\n\\t            );\\n\\t        },\\n\\n\\t        _keepShow: function () {\\n\\t            var tooltipModel = this._tooltipModel;\\n\\t            var ecModel = this._ecModel;\\n\\t            var api = this._api;\\n\\n\\t            // Try to keep the tooltip show when refreshing\\n\\t            if (this._lastX != null\\n\\t                && this._lastY != null\\n\\t                // When user is willing to control tooltip totally using API,\\n\\t                // self.manuallyShowTip({x, y}) might cause tooltip hide,\\n\\t                // which is not expected.\\n\\t                && tooltipModel.get('triggerOn') !== 'none'\\n\\t            ) {\\n\\t                var self = this;\\n\\t                clearTimeout(this._refreshUpdateTimeout);\\n\\t                this._refreshUpdateTimeout = setTimeout(function () {\\n\\t                    // Show tip next tick after other charts are rendered\\n\\t                    // In case highlight action has wrong result\\n\\t                    // FIXME\\n\\t                    self.manuallyShowTip(tooltipModel, ecModel, api, {\\n\\t                        x: self._lastX,\\n\\t                        y: self._lastY\\n\\t                    });\\n\\t                });\\n\\t            }\\n\\t        },\\n\\n\\t        /**\\n\\t         * Show tip manually by\\n\\t         * dispatchAction({\\n\\t         *     type: 'showTip',\\n\\t         *     x: 10,\\n\\t         *     y: 10\\n\\t         * });\\n\\t         * Or\\n\\t         * dispatchAction({\\n\\t         *      type: 'showTip',\\n\\t         *      seriesIndex: 0,\\n\\t         *      dataIndex or dataIndexInside or name\\n\\t         * });\\n\\t         *\\n\\t         *  TODO Batch\\n\\t         */\\n\\t        manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\\n\\t            if (payload.from === this.uid || env.node) {\\n\\t                return;\\n\\t            }\\n\\n\\t            var dispatchAction = makeDispatchAction(payload, api);\\n\\n\\t            // Reset ticket\\n\\t            this._ticket = '';\\n\\n\\t            // When triggered from axisPointer.\\n\\t            var dataByCoordSys = payload.dataByCoordSys;\\n\\n\\t            if (payload.tooltip && payload.x != null && payload.y != null) {\\n\\t                var el = proxyRect;\\n\\t                el.position = [payload.x, payload.y];\\n\\t                el.update();\\n\\t                el.tooltip = payload.tooltip;\\n\\t                // Manually show tooltip while view is not using zrender elements.\\n\\t                this._tryShow({\\n\\t                    offsetX: payload.x,\\n\\t                    offsetY: payload.y,\\n\\t                    target: el\\n\\t                }, dispatchAction);\\n\\t            }\\n\\t            else if (dataByCoordSys) {\\n\\t                this._tryShow({\\n\\t                    offsetX: payload.x,\\n\\t                    offsetY: payload.y,\\n\\t                    position: payload.position,\\n\\t                    event: {},\\n\\t                    dataByCoordSys: payload.dataByCoordSys,\\n\\t                    tooltipOption: payload.tooltipOption\\n\\t                }, dispatchAction);\\n\\t            }\\n\\t            else if (payload.seriesIndex != null) {\\n\\n\\t                if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\\n\\t                    return;\\n\\t                }\\n\\n\\t                var pointInfo = findPointFromSeries(payload, ecModel);\\n\\t                var cx = pointInfo.point[0];\\n\\t                var cy = pointInfo.point[1];\\n\\t                if (cx != null && cy != null) {\\n\\t                    this._tryShow({\\n\\t                        offsetX: cx,\\n\\t                        offsetY: cy,\\n\\t                        position: payload.position,\\n\\t                        target: pointInfo.el,\\n\\t                        event: {}\\n\\t                    }, dispatchAction);\\n\\t                }\\n\\t            }\\n\\t            else if (payload.x != null && payload.y != null) {\\n\\t                // FIXME\\n\\t                // should wrap dispatchAction like `axisPointer/globalListener` ?\\n\\t                api.dispatchAction({\\n\\t                    type: 'updateAxisPointer',\\n\\t                    x: payload.x,\\n\\t                    y: payload.y\\n\\t                });\\n\\n\\t                this._tryShow({\\n\\t                    offsetX: payload.x,\\n\\t                    offsetY: payload.y,\\n\\t                    position: payload.position,\\n\\t                    target: api.getZr().findHover(payload.x, payload.y).target,\\n\\t                    event: {}\\n\\t                }, dispatchAction);\\n\\t            }\\n\\t        },\\n\\n\\t        manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\\n\\t            var tooltipContent = this._tooltipContent;\\n\\n\\t            if (!this._alwaysShowContent) {\\n\\t                tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\\n\\t            }\\n\\n\\t            this._lastX = this._lastY = null;\\n\\n\\t            if (payload.from !== this.uid) {\\n\\t                this._hide(makeDispatchAction(payload, api));\\n\\t            }\\n\\t        },\\n\\n\\t        // Be compatible with previous design, that is, when tooltip.type is 'axis' and\\n\\t        // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\\n\\t        // and tooltip.\\n\\t        _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\\n\\t            var seriesIndex = payload.seriesIndex;\\n\\t            var dataIndex = payload.dataIndex;\\n\\t            var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\\n\\n\\t            if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\\n\\t                return;\\n\\t            }\\n\\n\\t            var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\\n\\t            if (!seriesModel) {\\n\\t                return;\\n\\t            }\\n\\n\\t            var data = seriesModel.getData();\\n\\t            var tooltipModel = buildTooltipModel([\\n\\t                data.getItemModel(dataIndex),\\n\\t                seriesModel,\\n\\t                (seriesModel.coordinateSystem || {}).model,\\n\\t                tooltipModel\\n\\t            ]);\\n\\n\\t            if (tooltipModel.get('trigger') !== 'axis') {\\n\\t                return;\\n\\t            }\\n\\n\\t            api.dispatchAction({\\n\\t                type: 'updateAxisPointer',\\n\\t                seriesIndex: seriesIndex,\\n\\t                dataIndex: dataIndex,\\n\\t                position: payload.position\\n\\t            });\\n\\n\\t            return true;\\n\\t        },\\n\\n\\t        _tryShow: function (e, dispatchAction) {\\n\\t            var el = e.target;\\n\\t            var tooltipModel = this._tooltipModel;\\n\\n\\t            if (!tooltipModel) {\\n\\t                return;\\n\\t            }\\n\\n\\t            // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\\n\\t            this._lastX = e.offsetX;\\n\\t            this._lastY = e.offsetY;\\n\\n\\t            var dataByCoordSys = e.dataByCoordSys;\\n\\t            if (dataByCoordSys && dataByCoordSys.length) {\\n\\t                this._showAxisTooltip(dataByCoordSys, e);\\n\\t            }\\n\\t            // Always show item tooltip if mouse is on the element with dataIndex\\n\\t            else if (el && el.dataIndex != null) {\\n\\t                this._lastDataByCoordSys = null;\\n\\t                this._showSeriesItemTooltip(e, el, dispatchAction);\\n\\t            }\\n\\t            // Tooltip provided directly. Like legend.\\n\\t            else if (el && el.tooltip) {\\n\\t                this._lastDataByCoordSys = null;\\n\\t                this._showComponentItemTooltip(e, el, dispatchAction);\\n\\t            }\\n\\t            else {\\n\\t                this._lastDataByCoordSys = null;\\n\\t                this._hide(dispatchAction);\\n\\t            }\\n\\t        },\\n\\n\\t        _showOrMove: function (tooltipModel, cb) {\\n\\t            // showDelay is used in this case: tooltip.enterable is set\\n\\t            // as true. User intent to move mouse into tooltip and click\\n\\t            // something. `showDelay` makes it easyer to enter the content\\n\\t            // but tooltip do not move immediately.\\n\\t            var delay = tooltipModel.get('showDelay');\\n\\t            cb = zrUtil.bind(cb, this);\\n\\t            clearTimeout(this._showTimout);\\n\\t            delay > 0\\n\\t                ? (this._showTimout = setTimeout(cb, delay))\\n\\t                : cb();\\n\\t        },\\n\\n\\t        _showAxisTooltip: function (dataByCoordSys, e) {\\n\\t            var ecModel = this._ecModel;\\n\\t            var globalTooltipModel = this._tooltipModel;\\n\\t            var point = [e.offsetX, e.offsetY];\\n\\t            var singleDefaultHTML = [];\\n\\t            var singleParamsList = [];\\n\\t            var singleTooltipModel = buildTooltipModel([\\n\\t                e.tooltipOption,\\n\\t                globalTooltipModel\\n\\t            ]);\\n\\n\\t            each(dataByCoordSys, function (itemCoordSys) {\\n\\t                // var coordParamList = [];\\n\\t                // var coordDefaultHTML = [];\\n\\t                // var coordTooltipModel = buildTooltipModel([\\n\\t                //     e.tooltipOption,\\n\\t                //     itemCoordSys.tooltipOption,\\n\\t                //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\\n\\t                //     globalTooltipModel\\n\\t                // ]);\\n\\t                // var displayMode = coordTooltipModel.get('displayMode');\\n\\t                // var paramsList = displayMode === 'single' ? singleParamsList : [];\\n\\n\\t                each(itemCoordSys.dataByAxis, function (item) {\\n\\t                    var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\\n\\t                    var axisValue = item.value;\\n\\t                    var seriesDefaultHTML = [];\\n\\n\\t                    if (!axisModel || axisValue == null) {\\n\\t                        return;\\n\\t                    }\\n\\n\\t                    var valueLabel = axisPointerViewHelper.getValueLabel(\\n\\t                        axisValue, axisModel.axis, ecModel,\\n\\t                        item.seriesDataIndices,\\n\\t                        item.valueLabelOpt\\n\\t                    );\\n\\n\\t                    zrUtil.each(item.seriesDataIndices, function (idxItem) {\\n\\t                        var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\\n\\t                        var dataIndex = idxItem.dataIndexInside;\\n\\t                        var dataParams = series && series.getDataParams(dataIndex);\\n\\t                        dataParams.axisDim = item.axisDim;\\n\\t                        dataParams.axisIndex = item.axisIndex;\\n\\t                        dataParams.axisType = item.axisType;\\n\\t                        dataParams.axisId = item.axisId;\\n\\t                        dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\\n\\t                        dataParams.axisValueLabel = valueLabel;\\n\\n\\t                        if (dataParams) {\\n\\t                            singleParamsList.push(dataParams);\\n\\t                            seriesDefaultHTML.push(series.formatTooltip(dataIndex, true));\\n\\t                        }\\n\\t                    });\\n\\n\\t                    // Default tooltip content\\n\\t                    // FIXME\\n\\t                    // (1) shold be the first data which has name?\\n\\t                    // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\\n\\t                    var firstLine = valueLabel;\\n\\t                    singleDefaultHTML.push(\\n\\t                        (firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '')\\n\\t                        + seriesDefaultHTML.join('<br />')\\n\\t                    );\\n\\t                });\\n\\t            }, this);\\n\\n\\t            // In most case, the second axis is shown upper than the first one.\\n\\t            singleDefaultHTML.reverse();\\n\\t            singleDefaultHTML = singleDefaultHTML.join('<br /><br />');\\n\\n\\t            var positionExpr = e.position;\\n\\t            this._showOrMove(singleTooltipModel, function () {\\n\\t                if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\\n\\t                    this._updatePosition(\\n\\t                        singleTooltipModel,\\n\\t                        positionExpr,\\n\\t                        point[0], point[1],\\n\\t                        this._tooltipContent,\\n\\t                        singleParamsList\\n\\t                    );\\n\\t                }\\n\\t                else {\\n\\t                    this._showTooltipContent(\\n\\t                        singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(),\\n\\t                        point[0], point[1], positionExpr\\n\\t                    );\\n\\t                }\\n\\t            });\\n\\n\\t            // Do not trigger events here, because this branch only be entered\\n\\t            // from dispatchAction.\\n\\t        },\\n\\n\\t        _showSeriesItemTooltip: function (e, el, dispatchAction) {\\n\\t            var ecModel = this._ecModel;\\n\\t            // Use dataModel in element if possible\\n\\t            // Used when mouseover on a element like markPoint or edge\\n\\t            // In which case, the data is not main data in series.\\n\\t            var seriesIndex = el.seriesIndex;\\n\\t            var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\\n\\n\\t            // For example, graph link.\\n\\t            var dataModel = el.dataModel || seriesModel;\\n\\t            var dataIndex = el.dataIndex;\\n\\t            var dataType = el.dataType;\\n\\t            var data = dataModel.getData();\\n\\n\\t            var tooltipModel = buildTooltipModel([\\n\\t                data.getItemModel(dataIndex),\\n\\t                dataModel,\\n\\t                seriesModel && (seriesModel.coordinateSystem || {}).model,\\n\\t                this._tooltipModel\\n\\t            ]);\\n\\n\\t            var tooltipTrigger = tooltipModel.get('trigger');\\n\\t            if (tooltipTrigger != null && tooltipTrigger !== 'item') {\\n\\t                return;\\n\\t            }\\n\\n\\t            var params = dataModel.getDataParams(dataIndex, dataType);\\n\\t            var defaultHtml = dataModel.formatTooltip(dataIndex, false, dataType);\\n\\t            var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\\n\\n\\t            this._showOrMove(tooltipModel, function () {\\n\\t                this._showTooltipContent(\\n\\t                    tooltipModel, defaultHtml, params, asyncTicket,\\n\\t                    e.offsetX, e.offsetY, e.position, e.target\\n\\t                );\\n\\t            });\\n\\n\\t            // FIXME\\n\\t            // duplicated showtip if manuallyShowTip is called from dispatchAction.\\n\\t            dispatchAction({\\n\\t                type: 'showTip',\\n\\t                dataIndexInside: dataIndex,\\n\\t                dataIndex: data.getRawIndex(dataIndex),\\n\\t                seriesIndex: seriesIndex,\\n\\t                from: this.uid\\n\\t            });\\n\\t        },\\n\\n\\t        _showComponentItemTooltip: function (e, el, dispatchAction) {\\n\\t            var tooltipOpt = el.tooltip;\\n\\t            if (typeof tooltipOpt === 'string') {\\n\\t                var content = tooltipOpt;\\n\\t                tooltipOpt = {\\n\\t                    content: content,\\n\\t                    // Fixed formatter\\n\\t                    formatter: content\\n\\t                };\\n\\t            }\\n\\t            var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\\n\\t            var defaultHtml = subTooltipModel.get('content');\\n\\t            var asyncTicket = Math.random();\\n\\n\\t            // Do not check whether `trigger` is 'none' here, because `trigger`\\n\\t            // only works on cooridinate system. In fact, we have not found case\\n\\t            // that requires setting `trigger` nothing on component yet.\\n\\n\\t            this._showOrMove(subTooltipModel, function () {\\n\\t                this._showTooltipContent(\\n\\t                    subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {},\\n\\t                    asyncTicket, e.offsetX, e.offsetY, e.position, el\\n\\t                );\\n\\t            });\\n\\n\\t            // If not dispatch showTip, tip may be hide triggered by axis.\\n\\t            dispatchAction({\\n\\t                type: 'showTip',\\n\\t                from: this.uid\\n\\t            });\\n\\t        },\\n\\n\\t        _showTooltipContent: function (\\n\\t            tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el\\n\\t        ) {\\n\\t            // Reset ticket\\n\\t            this._ticket = '';\\n\\n\\t            if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\\n\\t                return;\\n\\t            }\\n\\n\\t            var tooltipContent = this._tooltipContent;\\n\\n\\t            var formatter = tooltipModel.get('formatter');\\n\\t            positionExpr = positionExpr || tooltipModel.get('position');\\n\\t            var html = defaultHtml;\\n\\n\\t            if (formatter && typeof formatter === 'string') {\\n\\t                html = formatUtil.formatTpl(formatter, params, true);\\n\\t            }\\n\\t            else if (typeof formatter === 'function') {\\n\\t                var callback = bind(function (cbTicket, html) {\\n\\t                    if (cbTicket === this._ticket) {\\n\\t                        tooltipContent.setContent(html);\\n\\t                        this._updatePosition(\\n\\t                            tooltipModel, positionExpr, x, y, tooltipContent, params, el\\n\\t                        );\\n\\t                    }\\n\\t                }, this);\\n\\t                this._ticket = asyncTicket;\\n\\t                html = formatter(params, asyncTicket, callback);\\n\\t            }\\n\\n\\t            tooltipContent.setContent(html);\\n\\t            tooltipContent.show(tooltipModel);\\n\\n\\t            this._updatePosition(\\n\\t                tooltipModel, positionExpr, x, y, tooltipContent, params, el\\n\\t            );\\n\\t        },\\n\\n\\t        /**\\n\\t         * @param  {string|Function|Array.<number>} positionExpr\\n\\t         * @param  {number} x Mouse x\\n\\t         * @param  {number} y Mouse y\\n\\t         * @param  {boolean} confine Whether confine tooltip content in view rect.\\n\\t         * @param  {Object|<Array.<Object>} params\\n\\t         * @param  {module:zrender/Element} el target element\\n\\t         * @param  {module:echarts/ExtensionAPI} api\\n\\t         * @return {Array.<number>}\\n\\t         */\\n\\t        _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\\n\\t            var viewWidth = this._api.getWidth();\\n\\t            var viewHeight = this._api.getHeight();\\n\\t            positionExpr = positionExpr || tooltipModel.get('position');\\n\\n\\t            var contentSize = content.getSize();\\n\\t            var align = tooltipModel.get('align');\\n\\t            var vAlign = tooltipModel.get('verticalAlign');\\n\\t            var rect = el && el.getBoundingRect().clone();\\n\\t            el && rect.applyTransform(el.transform);\\n\\n\\t            if (typeof positionExpr === 'function') {\\n\\t                // Callback of position can be an array or a string specify the position\\n\\t                positionExpr = positionExpr([x, y], params, content.el, rect, {\\n\\t                    viewSize: [viewWidth, viewHeight],\\n\\t                    contentSize: contentSize.slice()\\n\\t                });\\n\\t            }\\n\\n\\t            if (zrUtil.isArray(positionExpr)) {\\n\\t                x = parsePercent(positionExpr[0], viewWidth);\\n\\t                y = parsePercent(positionExpr[1], viewHeight);\\n\\t            }\\n\\t            else if (zrUtil.isObject(positionExpr)) {\\n\\t                positionExpr.width = contentSize[0];\\n\\t                positionExpr.height = contentSize[1];\\n\\t                var layoutRect = layoutUtil.getLayoutRect(\\n\\t                    positionExpr, {width: viewWidth, height: viewHeight}\\n\\t                );\\n\\t                x = layoutRect.x;\\n\\t                y = layoutRect.y;\\n\\t                align = null;\\n\\t                // When positionExpr is left/top/right/bottom,\\n\\t                // align and verticalAlign will not work.\\n\\t                vAlign = null;\\n\\t            }\\n\\t            // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\\n\\t            else if (typeof positionExpr === 'string' && el) {\\n\\t                var pos = calcTooltipPosition(\\n\\t                    positionExpr, rect, contentSize\\n\\t                );\\n\\t                x = pos[0];\\n\\t                y = pos[1];\\n\\t            }\\n\\t            else {\\n\\t                var pos = refixTooltipPosition(\\n\\t                    x, y, content.el, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20\\n\\t                );\\n\\t                x = pos[0];\\n\\t                y = pos[1];\\n\\t            }\\n\\n\\t            align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\\n\\t            vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\\n\\n\\t            if (tooltipModel.get('confine')) {\\n\\t                var pos = confineTooltipPosition(\\n\\t                    x, y, content.el, viewWidth, viewHeight\\n\\t                );\\n\\t                x = pos[0];\\n\\t                y = pos[1];\\n\\t            }\\n\\n\\t            content.moveTo(x, y);\\n\\t        },\\n\\n\\t        // FIXME\\n\\t        // Should we remove this but leave this to user?\\n\\t        _updateContentNotChangedOnAxis: function (dataByCoordSys) {\\n\\t            var lastCoordSys = this._lastDataByCoordSys;\\n\\t            var contentNotChanged = !!lastCoordSys\\n\\t                && lastCoordSys.length === dataByCoordSys.length;\\n\\n\\t            contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\\n\\t                var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\\n\\t                var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\\n\\t                var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\\n\\t                contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\\n\\n\\t                contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\\n\\t                    var thisItem = thisDataByAxis[indexAxis] || {};\\n\\t                    var lastIndices = lastItem.seriesDataIndices || [];\\n\\t                    var newIndices = thisItem.seriesDataIndices || [];\\n\\n\\t                    contentNotChanged &=\\n\\t                        lastItem.value === thisItem.value\\n\\t                        && lastItem.axisType === thisItem.axisType\\n\\t                        && lastItem.axisId === thisItem.axisId\\n\\t                        && lastIndices.length === newIndices.length;\\n\\n\\t                    contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\\n\\t                        var newIdxItem = newIndices[j];\\n\\t                        contentNotChanged &=\\n\\t                            lastIdxItem.seriesIndex === newIdxItem.seriesIndex\\n\\t                            && lastIdxItem.dataIndex === newIdxItem.dataIndex;\\n\\t                    });\\n\\t                });\\n\\t            });\\n\\n\\t            this._lastDataByCoordSys = dataByCoordSys;\\n\\n\\t            return !!contentNotChanged;\\n\\t        },\\n\\n\\t        _hide: function (dispatchAction) {\\n\\t            // Do not directly hideLater here, because this behavior may be prevented\\n\\t            // in dispatchAction when showTip is dispatched.\\n\\n\\t            // FIXME\\n\\t            // duplicated hideTip if manuallyHideTip is called from dispatchAction.\\n\\t            this._lastDataByCoordSys = null;\\n\\t            dispatchAction({\\n\\t                type: 'hideTip',\\n\\t                from: this.uid\\n\\t            });\\n\\t        },\\n\\n\\t        dispose: function (ecModel, api) {\\n\\t            if (env.node) {\\n\\t                return;\\n\\t            }\\n\\t            this._tooltipContent.hide();\\n\\t            globalListener.unregister('itemTooltip', api);\\n\\t        }\\n\\t    });\\n\\n\\n\\t    /**\\n\\t     * @param {Array.<Object|module:echarts/model/Model>} modelCascade\\n\\t     * From top to bottom. (the last one should be globalTooltipModel);\\n\\t     */\\n\\t    function buildTooltipModel(modelCascade) {\\n\\t        var resultModel = modelCascade.pop();\\n\\t        while (modelCascade.length) {\\n\\t            var tooltipOpt = modelCascade.pop();\\n\\t            if (tooltipOpt) {\\n\\t                if (tooltipOpt instanceof Model) {\\n\\t                    tooltipOpt = tooltipOpt.get('tooltip', true);\\n\\t                }\\n\\t                // In each data item tooltip can be simply write:\\n\\t                // {\\n\\t                //  value: 10,\\n\\t                //  tooltip: 'Something you need to know'\\n\\t                // }\\n\\t                if (typeof tooltipOpt === 'string') {\\n\\t                    tooltipOpt = {formatter: tooltipOpt};\\n\\t                }\\n\\t                resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\\n\\t            }\\n\\t        }\\n\\t        return resultModel;\\n\\t    }\\n\\n\\t    function makeDispatchAction(payload, api) {\\n\\t        return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\\n\\t    }\\n\\n\\t    function refixTooltipPosition(x, y, el, viewWidth, viewHeight, gapH, gapV) {\\n\\t        var width = el.clientWidth;\\n\\t        var height = el.clientHeight;\\n\\n\\t        if (gapH != null) {\\n\\t            if (x + width + gapH > viewWidth) {\\n\\t                x -= width + gapH;\\n\\t            }\\n\\t            else {\\n\\t                x += gapH;\\n\\t            }\\n\\t        }\\n\\t        if (gapV != null) {\\n\\t            if (y + height + gapV > viewHeight) {\\n\\t                y -= height + gapV;\\n\\t            }\\n\\t            else {\\n\\t                y += gapV;\\n\\t            }\\n\\t        }\\n\\t        return [x, y];\\n\\t    }\\n\\n\\t    function confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\\n\\t        var width = el.clientWidth;\\n\\t        var height = el.clientHeight;\\n\\n\\t        x = Math.min(x + width, viewWidth) - width;\\n\\t        y = Math.min(y + height, viewHeight) - height;\\n\\t        x = Math.max(x, 0);\\n\\t        y = Math.max(y, 0);\\n\\n\\t        return [x, y];\\n\\t    }\\n\\n\\t    function calcTooltipPosition(position, rect, contentSize) {\\n\\t        var domWidth = contentSize[0];\\n\\t        var domHeight = contentSize[1];\\n\\t        var gap = 5;\\n\\t        var x = 0;\\n\\t        var y = 0;\\n\\t        var rectWidth = rect.width;\\n\\t        var rectHeight = rect.height;\\n\\t        switch (position) {\\n\\t            case 'inside':\\n\\t                x = rect.x + rectWidth / 2 - domWidth / 2;\\n\\t                y = rect.y + rectHeight / 2 - domHeight / 2;\\n\\t                break;\\n\\t            case 'top':\\n\\t                x = rect.x + rectWidth / 2 - domWidth / 2;\\n\\t                y = rect.y - domHeight - gap;\\n\\t                break;\\n\\t            case 'bottom':\\n\\t                x = rect.x + rectWidth / 2 - domWidth / 2;\\n\\t                y = rect.y + rectHeight + gap;\\n\\t                break;\\n\\t            case 'left':\\n\\t                x = rect.x - domWidth - gap;\\n\\t                y = rect.y + rectHeight / 2 - domHeight / 2;\\n\\t                break;\\n\\t            case 'right':\\n\\t                x = rect.x + rectWidth + gap;\\n\\t                y = rect.y + rectHeight / 2 - domHeight / 2;\\n\\t        }\\n\\t        return [x, y];\\n\\t    }\\n\\n\\t    function isCenterAlign(align) {\\n\\t        return align === 'center' || align === 'middle';\\n\\t    }\\n\\n\\n\\n/***/ },\\n/* 330 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * @module echarts/component/tooltip/TooltipContent\\n\\t */\\n\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var zrColor = __webpack_require__(31);\\n\\t    var eventUtil = __webpack_require__(88);\\n\\t    var formatUtil = __webpack_require__(6);\\n\\t    var each = zrUtil.each;\\n\\t    var toCamelCase = formatUtil.toCamelCase;\\n\\t    var env = __webpack_require__(2);\\n\\n\\t    var vendors = ['', '-webkit-', '-moz-', '-o-'];\\n\\n\\t    var gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\\n\\n\\t    /**\\n\\t     * @param {number} duration\\n\\t     * @return {string}\\n\\t     * @inner\\n\\t     */\\n\\t    function assembleTransition(duration) {\\n\\t        var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\\n\\t        var transitionText = 'left ' + duration + 's ' + transitionCurve + ','\\n\\t                            + 'top ' + duration + 's ' + transitionCurve;\\n\\t        return zrUtil.map(vendors, function (vendorPrefix) {\\n\\t            return vendorPrefix + 'transition:' + transitionText;\\n\\t        }).join(';');\\n\\t    }\\n\\n\\t    /**\\n\\t     * @param {Object} textStyle\\n\\t     * @return {string}\\n\\t     * @inner\\n\\t     */\\n\\t    function assembleFont(textStyleModel) {\\n\\t        var cssText = [];\\n\\n\\t        var fontSize = textStyleModel.get('fontSize');\\n\\t        var color = textStyleModel.getTextColor();\\n\\n\\t        color && cssText.push('color:' + color);\\n\\n\\t        cssText.push('font:' + textStyleModel.getFont());\\n\\n\\t        fontSize &&\\n\\t            cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\\n\\n\\t        each(['decoration', 'align'], function (name) {\\n\\t            var val = textStyleModel.get(name);\\n\\t            val && cssText.push('text-' + name + ':' + val);\\n\\t        });\\n\\n\\t        return cssText.join(';');\\n\\t    }\\n\\n\\t    /**\\n\\t     * @param {Object} tooltipModel\\n\\t     * @return {string}\\n\\t     * @inner\\n\\t     */\\n\\t    function assembleCssText(tooltipModel) {\\n\\n\\t        var cssText = [];\\n\\n\\t        var transitionDuration = tooltipModel.get('transitionDuration');\\n\\t        var backgroundColor = tooltipModel.get('backgroundColor');\\n\\t        var textStyleModel = tooltipModel.getModel('textStyle');\\n\\t        var padding = tooltipModel.get('padding');\\n\\n\\t        // Animation transition. Do not animate when transitionDuration is 0.\\n\\t        transitionDuration &&\\n\\t            cssText.push(assembleTransition(transitionDuration));\\n\\n\\t        if (backgroundColor) {\\n\\t            if (env.canvasSupported) {\\n\\t                cssText.push('background-Color:' + backgroundColor);\\n\\t            }\\n\\t            else {\\n\\t                // for ie\\n\\t                cssText.push(\\n\\t                    'background-Color:#' + zrColor.toHex(backgroundColor)\\n\\t                );\\n\\t                cssText.push('filter:alpha(opacity=70)');\\n\\t            }\\n\\t        }\\n\\n\\t        // Border style\\n\\t        each(['width', 'color', 'radius'], function (name) {\\n\\t            var borderName = 'border-' + name;\\n\\t            var camelCase = toCamelCase(borderName);\\n\\t            var val = tooltipModel.get(camelCase);\\n\\t            val != null &&\\n\\t                cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\\n\\t        });\\n\\n\\t        // Text style\\n\\t        cssText.push(assembleFont(textStyleModel));\\n\\n\\t        // Padding\\n\\t        if (padding != null) {\\n\\t            cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\\n\\t        }\\n\\n\\t        return cssText.join(';') + ';';\\n\\t    }\\n\\n\\t    /**\\n\\t     * @alias module:echarts/component/tooltip/TooltipContent\\n\\t     * @constructor\\n\\t     */\\n\\t    function TooltipContent(container, api) {\\n\\t        var el = document.createElement('div');\\n\\t        var zr = this._zr = api.getZr();\\n\\n\\t        this.el = el;\\n\\n\\t        this._x = api.getWidth() / 2;\\n\\t        this._y = api.getHeight() / 2;\\n\\n\\t        container.appendChild(el);\\n\\n\\t        this._container = container;\\n\\n\\t        this._show = false;\\n\\n\\t        /**\\n\\t         * @private\\n\\t         */\\n\\t        this._hideTimeout;\\n\\n\\t        var self = this;\\n\\t        el.onmouseenter = function () {\\n\\t            // clear the timeout in hideLater and keep showing tooltip\\n\\t            if (self._enterable) {\\n\\t                clearTimeout(self._hideTimeout);\\n\\t                self._show = true;\\n\\t            }\\n\\t            self._inContent = true;\\n\\t        };\\n\\t        el.onmousemove = function (e) {\\n\\t            e = e || window.event;\\n\\t            if (!self._enterable) {\\n\\t                // Try trigger zrender event to avoid mouse\\n\\t                // in and out shape too frequently\\n\\t                var handler = zr.handler;\\n\\t                eventUtil.normalizeEvent(container, e, true);\\n\\t                handler.dispatch('mousemove', e);\\n\\t            }\\n\\t        };\\n\\t        el.onmouseleave = function () {\\n\\t            if (self._enterable) {\\n\\t                if (self._show) {\\n\\t                    self.hideLater(self._hideDelay);\\n\\t                }\\n\\t            }\\n\\t            self._inContent = false;\\n\\t        };\\n\\t    }\\n\\n\\t    TooltipContent.prototype = {\\n\\n\\t        constructor: TooltipContent,\\n\\n\\t        /**\\n\\t         * @private\\n\\t         * @type {boolean}\\n\\t         */\\n\\t        _enterable: true,\\n\\n\\t        /**\\n\\t         * Update when tooltip is rendered\\n\\t         */\\n\\t        update: function () {\\n\\t            // FIXME\\n\\t            // Move this logic to ec main?\\n\\t            var container = this._container;\\n\\t            var stl = container.currentStyle\\n\\t                || document.defaultView.getComputedStyle(container);\\n\\t            var domStyle = container.style;\\n\\t            if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\\n\\t                domStyle.position = 'relative';\\n\\t            }\\n\\t            // Hide the tooltip\\n\\t            // PENDING\\n\\t            // this.hide();\\n\\t        },\\n\\n\\t        show: function (tooltipModel) {\\n\\t            clearTimeout(this._hideTimeout);\\n\\t            var el = this.el;\\n\\n\\t            el.style.cssText = gCssText + assembleCssText(tooltipModel)\\n\\t                // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\\n\\t                + ';left:' + this._x + 'px;top:' + this._y + 'px;'\\n\\t                + (tooltipModel.get('extraCssText') || '');\\n\\n\\t            el.style.display = el.innerHTML ?  'block' : 'none';\\n\\n\\t            this._show = true;\\n\\t        },\\n\\n\\t        setContent: function (content) {\\n\\t            this.el.innerHTML = content == null ? '' : content;\\n\\t        },\\n\\n\\t        setEnterable: function (enterable) {\\n\\t            this._enterable = enterable;\\n\\t        },\\n\\n\\t        getSize: function () {\\n\\t            var el = this.el;\\n\\t            return [el.clientWidth, el.clientHeight];\\n\\t        },\\n\\n\\t        moveTo: function (x, y) {\\n\\t            // xy should be based on canvas root. But tooltipContent is\\n\\t            // the sibling of canvas root. So padding of ec container\\n\\t            // should be considered here.\\n\\t            var zr = this._zr;\\n\\t            var viewportRoot;\\n\\t            if (zr && zr.painter && (viewportRoot = zr.painter.getViewportRoot())) {\\n\\t                x += viewportRoot.offsetLeft || 0;\\n\\t                y += viewportRoot.offsetTop || 0;\\n\\t            }\\n\\n\\t            var style = this.el.style;\\n\\t            style.left = x + 'px';\\n\\t            style.top = y + 'px';\\n\\n\\t            this._x = x;\\n\\t            this._y = y;\\n\\t        },\\n\\n\\t        hide: function () {\\n\\t            this.el.style.display = 'none';\\n\\t            this._show = false;\\n\\t        },\\n\\n\\t        hideLater: function (time) {\\n\\t            if (this._show && !(this._inContent && this._enterable)) {\\n\\t                if (time) {\\n\\t                    this._hideDelay = time;\\n\\t                    // Set show false to avoid invoke hideLater mutiple times\\n\\t                    this._show = false;\\n\\t                    this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\\n\\t                }\\n\\t                else {\\n\\t                    this.hide();\\n\\t                }\\n\\t            }\\n\\t        },\\n\\n\\t        isShow: function () {\\n\\t            return this._show;\\n\\t        }\\n\\t    };\\n\\n\\t    module.exports = TooltipContent;\\n\\n\\n/***/ },\\n/* 331 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t'use strict';\\n\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\n\\t    __webpack_require__(332);\\n\\t    __webpack_require__(338);\\n\\t    __webpack_require__(340);\\n\\t    __webpack_require__(298);\\n\\n\\t    __webpack_require__(342);\\n\\n\\t    // For reducing size of echarts.min, barLayoutPolar is required by polar.\\n\\t    __webpack_require__(1).registerLayout(zrUtil.curry(__webpack_require__(343), 'bar'));\\n\\n\\t    // Polar view\\n\\t    __webpack_require__(1).extendComponentView({\\n\\t        type: 'polar'\\n\\t    });\\n\\n\\n/***/ },\\n/* 332 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t// TODO Axis scale\\n\\n\\n\\t    var Polar = __webpack_require__(333);\\n\\t    var numberUtil = __webpack_require__(7);\\n\\t    var zrUtil = __webpack_require__(4);\\n\\n\\t    var axisHelper = __webpack_require__(101);\\n\\t    var niceScaleExtent = axisHelper.niceScaleExtent;\\n\\n\\t    // 依赖 PolarModel 做预处理\\n\\t    __webpack_require__(336);\\n\\n\\t    /**\\n\\t     * Resize method bound to the polar\\n\\t     * @param {module:echarts/coord/polar/PolarModel} polarModel\\n\\t     * @param {module:echarts/ExtensionAPI} api\\n\\t     */\\n\\t    function resizePolar(polarModel, api) {\\n\\t        var center = polarModel.get('center');\\n\\t        var radius = polarModel.get('radius');\\n\\t        var width = api.getWidth();\\n\\t        var height = api.getHeight();\\n\\t        var parsePercent = numberUtil.parsePercent;\\n\\n\\t        this.cx = parsePercent(center[0], width);\\n\\t        this.cy = parsePercent(center[1], height);\\n\\n\\t        var radiusAxis = this.getRadiusAxis();\\n\\t        var size = Math.min(width, height) / 2;\\n\\t        // var idx = radiusAxis.inverse ? 1 : 0;\\n\\t        radiusAxis.setExtent(0, parsePercent(radius, size));\\n\\t    }\\n\\n\\t    /**\\n\\t     * Update polar\\n\\t     */\\n\\t    function updatePolarScale(ecModel, api) {\\n\\t        var polar = this;\\n\\t        var angleAxis = polar.getAngleAxis();\\n\\t        var radiusAxis = polar.getRadiusAxis();\\n\\t        // Reset scale\\n\\t        angleAxis.scale.setExtent(Infinity, -Infinity);\\n\\t        radiusAxis.scale.setExtent(Infinity, -Infinity);\\n\\n\\t        ecModel.eachSeries(function (seriesModel) {\\n\\t            if (seriesModel.coordinateSystem === polar) {\\n\\t                var data = seriesModel.getData();\\n\\t                radiusAxis.scale.unionExtentFromData(data, 'radius');\\n\\t                angleAxis.scale.unionExtentFromData(data, 'angle');\\n\\t            }\\n\\t        });\\n\\n\\t        niceScaleExtent(angleAxis.scale, angleAxis.model);\\n\\t        niceScaleExtent(radiusAxis.scale, radiusAxis.model);\\n\\n\\t        // Fix extent of category angle axis\\n\\t        if (angleAxis.type === 'category' && !angleAxis.onBand) {\\n\\t            var extent = angleAxis.getExtent();\\n\\t            var diff = 360 / angleAxis.scale.count();\\n\\t            angleAxis.inverse ? (extent[1] += diff) : (extent[1] -= diff);\\n\\t            angleAxis.setExtent(extent[0], extent[1]);\\n\\t        }\\n\\t    }\\n\\n\\t    /**\\n\\t     * Set common axis properties\\n\\t     * @param {module:echarts/coord/polar/AngleAxis|module:echarts/coord/polar/RadiusAxis}\\n\\t     * @param {module:echarts/coord/polar/AxisModel}\\n\\t     * @inner\\n\\t     */\\n\\t    function setAxis(axis, axisModel) {\\n\\t        axis.type = axisModel.get('type');\\n\\t        axis.scale = axisHelper.createScaleByModel(axisModel);\\n\\t        axis.onBand = axisModel.get('boundaryGap') && axis.type === 'category';\\n\\n\\t        // FIXME Radius axis not support inverse axis\\n\\t        if (axisModel.mainType === 'angleAxis') {\\n\\t            var startAngle = axisModel.get('startAngle');\\n\\t            axis.inverse = axisModel.get('inverse') ^ axisModel.get('clockwise');\\n\\t            axis.setExtent(startAngle, startAngle + (axis.inverse ? -360 : 360));\\n\\t        }\\n\\n\\t        // Inject axis instance\\n\\t        axisModel.axis = axis;\\n\\t        axis.model = axisModel;\\n\\t    }\\n\\n\\n\\t    var polarCreator = {\\n\\n\\t        dimensions: Polar.prototype.dimensions,\\n\\n\\t        create: function (ecModel, api) {\\n\\t            var polarList = [];\\n\\t            ecModel.eachComponent('polar', function (polarModel, idx) {\\n\\t                var polar = new Polar(idx);\\n\\t                // Inject resize and update method\\n\\t                polar.resize = resizePolar;\\n\\t                polar.update = updatePolarScale;\\n\\n\\t                var radiusAxis = polar.getRadiusAxis();\\n\\t                var angleAxis = polar.getAngleAxis();\\n\\n\\t                var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\\n\\t                var angleAxisModel = polarModel.findAxisModel('angleAxis');\\n\\n\\t                setAxis(radiusAxis, radiusAxisModel);\\n\\t                setAxis(angleAxis, angleAxisModel);\\n\\n\\t                polar.resize(polarModel, api);\\n\\t                polarList.push(polar);\\n\\n\\t                polarModel.coordinateSystem = polar;\\n\\t                polar.model = polarModel;\\n\\t            });\\n\\t            // Inject coordinateSystem to series\\n\\t            ecModel.eachSeries(function (seriesModel) {\\n\\t                if (seriesModel.get('coordinateSystem') === 'polar') {\\n\\t                    var polarModel = ecModel.queryComponents({\\n\\t                        mainType: 'polar',\\n\\t                        index: seriesModel.get('polarIndex'),\\n\\t                        id: seriesModel.get('polarId')\\n\\t                    })[0];\\n\\n\\t                    if (true) {\\n\\t                        if (!polarModel) {\\n\\t                            throw new Error(\\n\\t                                'Polar \\\"' + zrUtil.retrieve(\\n\\t                                    seriesModel.get('polarIndex'),\\n\\t                                    seriesModel.get('polarId'),\\n\\t                                    0\\n\\t                                ) + '\\\" not found'\\n\\t                            );\\n\\t                        }\\n\\t                    }\\n\\t                    seriesModel.coordinateSystem = polarModel.coordinateSystem;\\n\\t                }\\n\\t            });\\n\\n\\t            return polarList;\\n\\t        }\\n\\t    };\\n\\n\\t    __webpack_require__(76).register('polar', polarCreator);\\n\\n\\n/***/ },\\n/* 333 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t'use strict';\\n\\t/**\\n\\t * @module echarts/coord/polar/Polar\\n\\t */\\n\\n\\n\\t    var RadiusAxis = __webpack_require__(334);\\n\\t    var AngleAxis = __webpack_require__(335);\\n\\n\\t    /**\\n\\t     * @alias {module:echarts/coord/polar/Polar}\\n\\t     * @constructor\\n\\t     * @param {string} name\\n\\t     */\\n\\t    var Polar = function (name) {\\n\\n\\t        /**\\n\\t         * @type {string}\\n\\t         */\\n\\t        this.name = name || '';\\n\\n\\t        /**\\n\\t         * x of polar center\\n\\t         * @type {number}\\n\\t         */\\n\\t        this.cx = 0;\\n\\n\\t        /**\\n\\t         * y of polar center\\n\\t         * @type {number}\\n\\t         */\\n\\t        this.cy = 0;\\n\\n\\t        /**\\n\\t         * @type {module:echarts/coord/polar/RadiusAxis}\\n\\t         * @private\\n\\t         */\\n\\t        this._radiusAxis = new RadiusAxis();\\n\\n\\t        /**\\n\\t         * @type {module:echarts/coord/polar/AngleAxis}\\n\\t         * @private\\n\\t         */\\n\\t        this._angleAxis = new AngleAxis();\\n\\n\\t        this._radiusAxis.polar = this._angleAxis.polar = this;\\n\\t    };\\n\\n\\t    Polar.prototype = {\\n\\n\\t        type: 'polar',\\n\\n\\t        axisPointerEnabled: true,\\n\\n\\t        constructor: Polar,\\n\\n\\t        /**\\n\\t         * @param {Array.<string>}\\n\\t         * @readOnly\\n\\t         */\\n\\t        dimensions: ['radius', 'angle'],\\n\\n\\t        /**\\n\\t         * @type {module:echarts/coord/PolarModel}\\n\\t         */\\n\\t        model: null,\\n\\n\\t        /**\\n\\t         * If contain coord\\n\\t         * @param {Array.<number>} point\\n\\t         * @return {boolean}\\n\\t         */\\n\\t        containPoint: function (point) {\\n\\t            var coord = this.pointToCoord(point);\\n\\t            return this._radiusAxis.contain(coord[0])\\n\\t                && this._angleAxis.contain(coord[1]);\\n\\t        },\\n\\n\\t        /**\\n\\t         * If contain data\\n\\t         * @param {Array.<number>} data\\n\\t         * @return {boolean}\\n\\t         */\\n\\t        containData: function (data) {\\n\\t            return this._radiusAxis.containData(data[0])\\n\\t                && this._angleAxis.containData(data[1]);\\n\\t        },\\n\\n\\t        /**\\n\\t         * @param {string} dim\\n\\t         * @return {module:echarts/coord/polar/AngleAxis|module:echarts/coord/polar/RadiusAxis}\\n\\t         */\\n\\t        getAxis: function (dim) {\\n\\t            return this['_' + dim + 'Axis'];\\n\\t        },\\n\\n\\t        /**\\n\\t         * @return {Array.<module:echarts/coord/Axis>}\\n\\t         */\\n\\t        getAxes: function () {\\n\\t            return [this._radiusAxis, this._angleAxis];\\n\\t        },\\n\\n\\t        /**\\n\\t         * Get axes by type of scale\\n\\t         * @param {string} scaleType\\n\\t         * @return {module:echarts/coord/polar/AngleAxis|module:echarts/coord/polar/RadiusAxis}\\n\\t         */\\n\\t        getAxesByScale: function (scaleType) {\\n\\t            var axes = [];\\n\\t            var angleAxis = this._angleAxis;\\n\\t            var radiusAxis = this._radiusAxis;\\n\\t            angleAxis.scale.type === scaleType && axes.push(angleAxis);\\n\\t            radiusAxis.scale.type === scaleType && axes.push(radiusAxis);\\n\\n\\t            return axes;\\n\\t        },\\n\\n\\t        /**\\n\\t         * @return {module:echarts/coord/polar/AngleAxis}\\n\\t         */\\n\\t        getAngleAxis: function () {\\n\\t            return this._angleAxis;\\n\\t        },\\n\\n\\t        /**\\n\\t         * @return {module:echarts/coord/polar/RadiusAxis}\\n\\t         */\\n\\t        getRadiusAxis: function () {\\n\\t            return this._radiusAxis;\\n\\t        },\\n\\n\\t        /**\\n\\t         * @param {module:echarts/coord/polar/Axis}\\n\\t         * @return {module:echarts/coord/polar/Axis}\\n\\t         */\\n\\t        getOtherAxis: function (axis) {\\n\\t            var angleAxis = this._angleAxis;\\n\\t            return axis === angleAxis ? this._radiusAxis : angleAxis;\\n\\t        },\\n\\n\\t        /**\\n\\t         * Base axis will be used on stacking.\\n\\t         *\\n\\t         * @return {module:echarts/coord/polar/Axis}\\n\\t         */\\n\\t        getBaseAxis: function () {\\n\\t            return this.getAxesByScale('ordinal')[0]\\n\\t                || this.getAxesByScale('time')[0]\\n\\t                || this.getAngleAxis();\\n\\t        },\\n\\n\\t        /**\\n\\t         * @param {string} [dim] 'radius' or 'angle' or 'auto' or null/undefined\\n\\t         * @return {Object} {baseAxes: [], otherAxes: []}\\n\\t         */\\n\\t        getTooltipAxes: function (dim) {\\n\\t            var baseAxis = (dim != null && dim !== 'auto')\\n\\t                ? this.getAxis(dim) : this.getBaseAxis();\\n\\t            return {\\n\\t                baseAxes: [baseAxis],\\n\\t                otherAxes: [this.getOtherAxis(baseAxis)]\\n\\t            };\\n\\t        },\\n\\n\\t        /**\\n\\t         * Convert series data to a list of (x, y) points\\n\\t         * @param {module:echarts/data/List} data\\n\\t         * @return {Array}\\n\\t         *  Return list of coordinates. For example:\\n\\t         *  `[[10, 10], [20, 20], [30, 30]]`\\n\\t         */\\n\\t        dataToPoints: function (data) {\\n\\t            return data.mapArray(this.dimensions, function (radius, angle) {\\n\\t                return this.dataToPoint([radius, angle]);\\n\\t            }, true, this);\\n\\t        },\\n\\n\\t        /**\\n\\t         * Convert a single data item to (x, y) point.\\n\\t         * Parameter data is an array which the first element is radius and the second is angle\\n\\t         * @param {Array.<number>} data\\n\\t         * @param {boolean} [clamp=false]\\n\\t         * @return {Array.<number>}\\n\\t         */\\n\\t        dataToPoint: function (data, clamp) {\\n\\t            return this.coordToPoint([\\n\\t                this._radiusAxis.dataToRadius(data[0], clamp),\\n\\t                this._angleAxis.dataToAngle(data[1], clamp)\\n\\t            ]);\\n\\t        },\\n\\n\\t        /**\\n\\t         * Convert a (x, y) point to data\\n\\t         * @param {Array.<number>} point\\n\\t         * @param {boolean} [clamp=false]\\n\\t         * @return {Array.<number>}\\n\\t         */\\n\\t        pointToData: function (point, clamp) {\\n\\t            var coord = this.pointToCoord(point);\\n\\t            return [\\n\\t                this._radiusAxis.radiusToData(coord[0], clamp),\\n\\t                this._angleAxis.angleToData(coord[1], clamp)\\n\\t            ];\\n\\t        },\\n\\n\\t        /**\\n\\t         * Convert a (x, y) point to (radius, angle) coord\\n\\t         * @param {Array.<number>} point\\n\\t         * @return {Array.<number>}\\n\\t         */\\n\\t        pointToCoord: function (point) {\\n\\t            var dx = point[0] - this.cx;\\n\\t            var dy = point[1] - this.cy;\\n\\t            var angleAxis = this.getAngleAxis();\\n\\t            var extent = angleAxis.getExtent();\\n\\t            var minAngle = Math.min(extent[0], extent[1]);\\n\\t            var maxAngle = Math.max(extent[0], extent[1]);\\n\\t            // Fix fixed extent in polarCreator\\n\\t            // FIXME\\n\\t            angleAxis.inverse\\n\\t                ? (minAngle = maxAngle - 360)\\n\\t                : (maxAngle = minAngle + 360);\\n\\n\\t            var radius = Math.sqrt(dx * dx + dy * dy);\\n\\t            dx /= radius;\\n\\t            dy /= radius;\\n\\n\\t            var radian = Math.atan2(-dy, dx) / Math.PI * 180;\\n\\n\\t            // move to angleExtent\\n\\t            var dir = radian < minAngle ? 1 : -1;\\n\\t            while (radian < minAngle || radian > maxAngle) {\\n\\t                radian += dir * 360;\\n\\t            }\\n\\n\\t            return [radius, radian];\\n\\t        },\\n\\n\\t        /**\\n\\t         * Convert a (radius, angle) coord to (x, y) point\\n\\t         * @param {Array.<number>} coord\\n\\t         * @return {Array.<number>}\\n\\t         */\\n\\t        coordToPoint: function (coord) {\\n\\t            var radius = coord[0];\\n\\t            var radian = coord[1] / 180 * Math.PI;\\n\\t            var x = Math.cos(radian) * radius + this.cx;\\n\\t            // Inverse the y\\n\\t            var y = -Math.sin(radian) * radius + this.cy;\\n\\n\\t            return [x, y];\\n\\t        }\\n\\n\\t    };\\n\\n\\t    module.exports = Polar;\\n\\n\\n/***/ },\\n/* 334 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t'use strict';\\n\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var Axis = __webpack_require__(100);\\n\\n\\t    function RadiusAxis(scale, radiusExtent) {\\n\\n\\t        Axis.call(this, 'radius', scale, radiusExtent);\\n\\n\\t        /**\\n\\t         * Axis type\\n\\t         *  - 'category'\\n\\t         *  - 'value'\\n\\t         *  - 'time'\\n\\t         *  - 'log'\\n\\t         * @type {string}\\n\\t         */\\n\\t        this.type = 'category';\\n\\t    }\\n\\n\\t    RadiusAxis.prototype = {\\n\\n\\t        constructor: RadiusAxis,\\n\\n\\t        /**\\n\\t         * @override\\n\\t         */\\n\\t        pointToData: function (point, clamp) {\\n\\t            return this.polar.pointToData(point, clamp)[this.dim === 'radius' ? 0 : 1];\\n\\t        },\\n\\n\\t        dataToRadius: Axis.prototype.dataToCoord,\\n\\n\\t        radiusToData: Axis.prototype.coordToData\\n\\t    };\\n\\n\\t    zrUtil.inherits(RadiusAxis, Axis);\\n\\n\\t    module.exports = RadiusAxis;\\n\\n\\n/***/ },\\n/* 335 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t'use strict';\\n\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var Axis = __webpack_require__(100);\\n\\n\\t    function AngleAxis(scale, angleExtent) {\\n\\n\\t        angleExtent = angleExtent || [0, 360];\\n\\n\\t        Axis.call(this, 'angle', scale, angleExtent);\\n\\n\\t        /**\\n\\t         * Axis type\\n\\t         *  - 'category'\\n\\t         *  - 'value'\\n\\t         *  - 'time'\\n\\t         *  - 'log'\\n\\t         * @type {string}\\n\\t         */\\n\\t        this.type = 'category';\\n\\t    }\\n\\n\\t    AngleAxis.prototype = {\\n\\n\\t        constructor: AngleAxis,\\n\\n\\t        /**\\n\\t         * @override\\n\\t         */\\n\\t        pointToData: function (point, clamp) {\\n\\t            return this.polar.pointToData(point, clamp)[this.dim === 'radius' ? 0 : 1];\\n\\t        },\\n\\n\\t        dataToAngle: Axis.prototype.dataToCoord,\\n\\n\\t        angleToData: Axis.prototype.coordToData\\n\\t    };\\n\\n\\t    zrUtil.inherits(AngleAxis, Axis);\\n\\n\\t    module.exports = AngleAxis;\\n\\n\\n/***/ },\\n/* 336 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t'use strict';\\n\\n\\n\\t    __webpack_require__(337);\\n\\n\\t    __webpack_require__(1).extendComponentModel({\\n\\n\\t        type: 'polar',\\n\\n\\t        dependencies: ['polarAxis', 'angleAxis'],\\n\\n\\t        /**\\n\\t         * @type {module:echarts/coord/polar/Polar}\\n\\t         */\\n\\t        coordinateSystem: null,\\n\\n\\t        /**\\n\\t         * @param {string} axisType\\n\\t         * @return {module:echarts/coord/polar/AxisModel}\\n\\t         */\\n\\t        findAxisModel: function (axisType) {\\n\\t            var foundAxisModel;\\n\\t            var ecModel = this.ecModel;\\n\\n\\t            ecModel.eachComponent(axisType, function (axisModel) {\\n\\t                if (axisModel.getCoordSysModel() === this) {\\n\\t                    foundAxisModel = axisModel;\\n\\t                }\\n\\t            }, this);\\n\\t            return foundAxisModel;\\n\\t        },\\n\\n\\t        defaultOption: {\\n\\n\\t            zlevel: 0,\\n\\n\\t            z: 0,\\n\\n\\t            center: ['50%', '50%'],\\n\\n\\t            radius: '80%'\\n\\t        }\\n\\t    });\\n\\n\\n/***/ },\\n/* 337 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t'use strict';\\n\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var ComponentModel = __webpack_require__(69);\\n\\t    var axisModelCreator = __webpack_require__(131);\\n\\n\\t    var PolarAxisModel = ComponentModel.extend({\\n\\n\\t        type: 'polarAxis',\\n\\n\\t        /**\\n\\t         * @type {module:echarts/coord/polar/AngleAxis|module:echarts/coord/polar/RadiusAxis}\\n\\t         */\\n\\t        axis: null,\\n\\n\\t        /**\\n\\t         * @override\\n\\t         */\\n\\t        getCoordSysModel: function () {\\n\\t            return this.ecModel.queryComponents({\\n\\t                mainType: 'polar',\\n\\t                index: this.option.polarIndex,\\n\\t                id: this.option.polarId\\n\\t            })[0];\\n\\t        }\\n\\n\\t    });\\n\\n\\t    zrUtil.merge(PolarAxisModel.prototype, __webpack_require__(112));\\n\\n\\t    var polarAxisDefaultExtendedOption = {\\n\\t        angle: {\\n\\t            // polarIndex: 0,\\n\\t            // polarId: '',\\n\\n\\t            startAngle: 90,\\n\\n\\t            clockwise: true,\\n\\n\\t            splitNumber: 12,\\n\\n\\t            axisLabel: {\\n\\t                rotate: false\\n\\t            }\\n\\t        },\\n\\t        radius: {\\n\\t            // polarIndex: 0,\\n\\t            // polarId: '',\\n\\n\\t            splitNumber: 5\\n\\t        }\\n\\t    };\\n\\n\\t    function getAxisType(axisDim, option) {\\n\\t        // Default axis with data is category axis\\n\\t        return option.type || (option.data ? 'category' : 'value');\\n\\t    }\\n\\n\\t    axisModelCreator('angle', PolarAxisModel, getAxisType, polarAxisDefaultExtendedOption.angle);\\n\\t    axisModelCreator('radius', PolarAxisModel, getAxisType, polarAxisDefaultExtendedOption.radius);\\n\\n\\n\\n/***/ },\\n/* 338 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t'use strict';\\n\\n\\n\\t    __webpack_require__(332);\\n\\n\\t    __webpack_require__(339);\\n\\n\\n/***/ },\\n/* 339 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t'use strict';\\n\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var graphic = __webpack_require__(18);\\n\\t    var Model = __webpack_require__(12);\\n\\n\\t    var elementList = ['axisLine', 'axisLabel', 'axisTick', 'splitLine', 'splitArea'];\\n\\n\\t    function getAxisLineShape(polar, r0, r, angle) {\\n\\t        var start = polar.coordToPoint([r0, angle]);\\n\\t        var end = polar.coordToPoint([r, angle]);\\n\\n\\t        return {\\n\\t            x1: start[0],\\n\\t            y1: start[1],\\n\\t            x2: end[0],\\n\\t            y2: end[1]\\n\\t        };\\n\\t    }\\n\\n\\t    __webpack_require__(136).extend({\\n\\n\\t        type: 'angleAxis',\\n\\n\\t        axisPointerClass: 'PolarAxisPointer',\\n\\n\\t        render: function (angleAxisModel, ecModel) {\\n\\t            this.group.removeAll();\\n\\t            if (!angleAxisModel.get('show')) {\\n\\t                return;\\n\\t            }\\n\\n\\t            var angleAxis = angleAxisModel.axis;\\n\\t            var polar = angleAxis.polar;\\n\\t            var radiusExtent = polar.getRadiusAxis().getExtent();\\n\\t            var ticksAngles = angleAxis.getTicksCoords();\\n\\n\\t            if (angleAxis.type !== 'category') {\\n\\t                // Remove the last tick which will overlap the first tick\\n\\t                ticksAngles.pop();\\n\\t            }\\n\\n\\t            zrUtil.each(elementList, function (name) {\\n\\t                if (angleAxisModel.get(name +'.show')\\n\\t                    && (!angleAxis.scale.isBlank() || name === 'axisLine')\\n\\t                ) {\\n\\t                    this['_' + name](angleAxisModel, polar, ticksAngles, radiusExtent);\\n\\t                }\\n\\t            }, this);\\n\\t        },\\n\\n\\t        /**\\n\\t         * @private\\n\\t         */\\n\\t        _axisLine: function (angleAxisModel, polar, ticksAngles, radiusExtent) {\\n\\t            var lineStyleModel = angleAxisModel.getModel('axisLine.lineStyle');\\n\\n\\t            var circle = new graphic.Circle({\\n\\t                shape: {\\n\\t                    cx: polar.cx,\\n\\t                    cy: polar.cy,\\n\\t                    r: radiusExtent[1]\\n\\t                },\\n\\t                style: lineStyleModel.getLineStyle(),\\n\\t                z2: 1,\\n\\t                silent: true\\n\\t            });\\n\\t            circle.style.fill = null;\\n\\n\\t            this.group.add(circle);\\n\\t        },\\n\\n\\t        /**\\n\\t         * @private\\n\\t         */\\n\\t        _axisTick: function (angleAxisModel, polar, ticksAngles, radiusExtent) {\\n\\t            var tickModel = angleAxisModel.getModel('axisTick');\\n\\n\\t            var tickLen = (tickModel.get('inside') ? -1 : 1) * tickModel.get('length');\\n\\n\\t            var lines = zrUtil.map(ticksAngles, function (tickAngle) {\\n\\t                return new graphic.Line({\\n\\t                    shape: getAxisLineShape(polar, radiusExtent[1], radiusExtent[1] + tickLen, tickAngle)\\n\\t                });\\n\\t            });\\n\\t            this.group.add(graphic.mergePath(\\n\\t                lines, {\\n\\t                    style: zrUtil.defaults(\\n\\t                        tickModel.getModel('lineStyle').getLineStyle(),\\n\\t                        {\\n\\t                            stroke: angleAxisModel.get('axisLine.lineStyle.color')\\n\\t                        }\\n\\t                    )\\n\\t                }\\n\\t            ));\\n\\t        },\\n\\n\\t        /**\\n\\t         * @private\\n\\t         */\\n\\t        _axisLabel: function (angleAxisModel, polar, ticksAngles, radiusExtent) {\\n\\t            var axis = angleAxisModel.axis;\\n\\n\\t            var categoryData = angleAxisModel.get('data');\\n\\n\\t            var labelModel = angleAxisModel.getModel('axisLabel');\\n\\t            var axisTextStyleModel = labelModel.getModel('textStyle');\\n\\n\\t            var labels = angleAxisModel.getFormattedLabels();\\n\\n\\t            var labelMargin = labelModel.get('margin');\\n\\t            var labelsAngles = axis.getLabelsCoords();\\n\\n\\t            // Use length of ticksAngles because it may remove the last tick to avoid overlapping\\n\\t            for (var i = 0; i < ticksAngles.length; i++) {\\n\\t                var r = radiusExtent[1];\\n\\t                var p = polar.coordToPoint([r + labelMargin, labelsAngles[i]]);\\n\\t                var cx = polar.cx;\\n\\t                var cy = polar.cy;\\n\\n\\t                var labelTextAlign = Math.abs(p[0] - cx) / r < 0.3\\n\\t                    ? 'center' : (p[0] > cx ? 'left' : 'right');\\n\\t                var labelTextBaseline = Math.abs(p[1] - cy) / r < 0.3\\n\\t                    ? 'middle' : (p[1] > cy ? 'top' : 'bottom');\\n\\n\\t                var textStyleModel = axisTextStyleModel;\\n\\t                if (categoryData && categoryData[i] && categoryData[i].textStyle) {\\n\\t                    textStyleModel = new Model(\\n\\t                        categoryData[i].textStyle, axisTextStyleModel\\n\\t                    );\\n\\t                }\\n\\t                this.group.add(new graphic.Text({\\n\\t                    style: {\\n\\t                        x: p[0],\\n\\t                        y: p[1],\\n\\t                        fill: textStyleModel.getTextColor() || angleAxisModel.get('axisLine.lineStyle.color'),\\n\\t                        text: labels[i],\\n\\t                        textAlign: labelTextAlign,\\n\\t                        textVerticalAlign: labelTextBaseline,\\n\\t                        textFont: textStyleModel.getFont()\\n\\t                    },\\n\\t                    silent: true\\n\\t                }));\\n\\t            }\\n\\t        },\\n\\n\\t        /**\\n\\t         * @private\\n\\t         */\\n\\t        _splitLine: function (angleAxisModel, polar, ticksAngles, radiusExtent) {\\n\\t            var splitLineModel = angleAxisModel.getModel('splitLine');\\n\\t            var lineStyleModel = splitLineModel.getModel('lineStyle');\\n\\t            var lineColors = lineStyleModel.get('color');\\n\\t            var lineCount = 0;\\n\\n\\t            lineColors = lineColors instanceof Array ? lineColors : [lineColors];\\n\\n\\t            var splitLines = [];\\n\\n\\t            for (var i = 0; i < ticksAngles.length; i++) {\\n\\t                var colorIndex = (lineCount++) % lineColors.length;\\n\\t                splitLines[colorIndex] = splitLines[colorIndex] || [];\\n\\t                splitLines[colorIndex].push(new graphic.Line({\\n\\t                    shape: getAxisLineShape(polar, radiusExtent[0], radiusExtent[1], ticksAngles[i])\\n\\t                }));\\n\\t            }\\n\\n\\t            // Simple optimization\\n\\t            // Batching the lines if color are the same\\n\\t            for (var i = 0; i < splitLines.length; i++) {\\n\\t                this.group.add(graphic.mergePath(splitLines[i], {\\n\\t                    style: zrUtil.defaults({\\n\\t                        stroke: lineColors[i % lineColors.length]\\n\\t                    }, lineStyleModel.getLineStyle()),\\n\\t                    silent: true,\\n\\t                    z: angleAxisModel.get('z')\\n\\t                }));\\n\\t            }\\n\\t        },\\n\\n\\t        /**\\n\\t         * @private\\n\\t         */\\n\\t        _splitArea: function (angleAxisModel, polar, ticksAngles, radiusExtent) {\\n\\n\\t            var splitAreaModel = angleAxisModel.getModel('splitArea');\\n\\t            var areaStyleModel = splitAreaModel.getModel('areaStyle');\\n\\t            var areaColors = areaStyleModel.get('color');\\n\\t            var lineCount = 0;\\n\\n\\t            areaColors = areaColors instanceof Array ? areaColors : [areaColors];\\n\\n\\t            var splitAreas = [];\\n\\n\\t            var RADIAN = Math.PI / 180;\\n\\t            var prevAngle = -ticksAngles[0] * RADIAN;\\n\\t            var r0 = Math.min(radiusExtent[0], radiusExtent[1]);\\n\\t            var r1 = Math.max(radiusExtent[0], radiusExtent[1]);\\n\\n\\t            var clockwise = angleAxisModel.get('clockwise');\\n\\n\\t            for (var i = 1; i < ticksAngles.length; i++) {\\n\\t                var colorIndex = (lineCount++) % areaColors.length;\\n\\t                splitAreas[colorIndex] = splitAreas[colorIndex] || [];\\n\\t                splitAreas[colorIndex].push(new graphic.Sector({\\n\\t                    shape: {\\n\\t                        cx: polar.cx,\\n\\t                        cy: polar.cy,\\n\\t                        r0: r0,\\n\\t                        r: r1,\\n\\t                        startAngle: prevAngle,\\n\\t                        endAngle: -ticksAngles[i] * RADIAN,\\n\\t                        clockwise: clockwise\\n\\t                    },\\n\\t                    silent: true\\n\\t                }));\\n\\t                prevAngle = -ticksAngles[i] * RADIAN;\\n\\t            }\\n\\n\\t            // Simple optimization\\n\\t            // Batching the lines if color are the same\\n\\t            for (var i = 0; i < splitAreas.length; i++) {\\n\\t                this.group.add(graphic.mergePath(splitAreas[i], {\\n\\t                    style: zrUtil.defaults({\\n\\t                        fill: areaColors[i % areaColors.length]\\n\\t                    }, areaStyleModel.getAreaStyle()),\\n\\t                    silent: true\\n\\t                }));\\n\\t            }\\n\\t        }\\n\\t    });\\n\\n\\n/***/ },\\n/* 340 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    __webpack_require__(332);\\n\\n\\t    __webpack_require__(341);\\n\\n\\n/***/ },\\n/* 341 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t'use strict';\\n\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var graphic = __webpack_require__(18);\\n\\t    var AxisBuilder = __webpack_require__(135);\\n\\n\\t    var axisBuilderAttrs = [\\n\\t        'axisLine', 'axisLabel', 'axisTick', 'axisName'\\n\\t    ];\\n\\t    var selfBuilderAttrs = [\\n\\t        'splitLine', 'splitArea'\\n\\t    ];\\n\\n\\t    __webpack_require__(136).extend({\\n\\n\\t        type: 'radiusAxis',\\n\\n\\t        axisPointerClass: 'PolarAxisPointer',\\n\\n\\t        render: function (radiusAxisModel, ecModel) {\\n\\t            this.group.removeAll();\\n\\t            if (!radiusAxisModel.get('show')) {\\n\\t                return;\\n\\t            }\\n\\t            var radiusAxis = radiusAxisModel.axis;\\n\\t            var polar = radiusAxis.polar;\\n\\t            var angleAxis = polar.getAngleAxis();\\n\\t            var ticksCoords = radiusAxis.getTicksCoords();\\n\\t            var axisAngle = angleAxis.getExtent()[0];\\n\\t            var radiusExtent = radiusAxis.getExtent();\\n\\n\\t            var layout = layoutAxis(polar, radiusAxisModel, axisAngle);\\n\\t            var axisBuilder = new AxisBuilder(radiusAxisModel, layout);\\n\\t            zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\\n\\t            this.group.add(axisBuilder.getGroup());\\n\\n\\t            zrUtil.each(selfBuilderAttrs, function (name) {\\n\\t                if (radiusAxisModel.get(name +'.show') && !radiusAxis.scale.isBlank()) {\\n\\t                    this['_' + name](radiusAxisModel, polar, axisAngle, radiusExtent, ticksCoords);\\n\\t                }\\n\\t            }, this);\\n\\t        },\\n\\n\\t        /**\\n\\t         * @private\\n\\t         */\\n\\t        _splitLine: function (radiusAxisModel, polar, axisAngle, radiusExtent, ticksCoords) {\\n\\t            var splitLineModel = radiusAxisModel.getModel('splitLine');\\n\\t            var lineStyleModel = splitLineModel.getModel('lineStyle');\\n\\t            var lineColors = lineStyleModel.get('color');\\n\\t            var lineCount = 0;\\n\\n\\t            lineColors = lineColors instanceof Array ? lineColors : [lineColors];\\n\\n\\t            var splitLines = [];\\n\\n\\t            for (var i = 0; i < ticksCoords.length; i++) {\\n\\t                var colorIndex = (lineCount++) % lineColors.length;\\n\\t                splitLines[colorIndex] = splitLines[colorIndex] || [];\\n\\t                splitLines[colorIndex].push(new graphic.Circle({\\n\\t                    shape: {\\n\\t                        cx: polar.cx,\\n\\t                        cy: polar.cy,\\n\\t                        r: ticksCoords[i]\\n\\t                    },\\n\\t                    silent: true\\n\\t                }));\\n\\t            }\\n\\n\\t            // Simple optimization\\n\\t            // Batching the lines if color are the same\\n\\t            for (var i = 0; i < splitLines.length; i++) {\\n\\t                this.group.add(graphic.mergePath(splitLines[i], {\\n\\t                    style: zrUtil.defaults({\\n\\t                        stroke: lineColors[i % lineColors.length],\\n\\t                        fill: null\\n\\t                    }, lineStyleModel.getLineStyle()),\\n\\t                    silent: true\\n\\t                }));\\n\\t            }\\n\\t        },\\n\\n\\t        /**\\n\\t         * @private\\n\\t         */\\n\\t        _splitArea: function (radiusAxisModel, polar, axisAngle, radiusExtent, ticksCoords) {\\n\\n\\t            var splitAreaModel = radiusAxisModel.getModel('splitArea');\\n\\t            var areaStyleModel = splitAreaModel.getModel('areaStyle');\\n\\t            var areaColors = areaStyleModel.get('color');\\n\\t            var lineCount = 0;\\n\\n\\t            areaColors = areaColors instanceof Array ? areaColors : [areaColors];\\n\\n\\t            var splitAreas = [];\\n\\n\\t            var prevRadius = ticksCoords[0];\\n\\t            for (var i = 1; i < ticksCoords.length; i++) {\\n\\t                var colorIndex = (lineCount++) % areaColors.length;\\n\\t                splitAreas[colorIndex] = splitAreas[colorIndex] || [];\\n\\t                splitAreas[colorIndex].push(new graphic.Sector({\\n\\t                    shape: {\\n\\t                        cx: polar.cx,\\n\\t                        cy: polar.cy,\\n\\t                        r0: prevRadius,\\n\\t                        r: ticksCoords[i],\\n\\t                        startAngle: 0,\\n\\t                        endAngle: Math.PI * 2\\n\\t                    },\\n\\t                    silent: true\\n\\t                }));\\n\\t                prevRadius = ticksCoords[i];\\n\\t            }\\n\\n\\t            // Simple optimization\\n\\t            // Batching the lines if color are the same\\n\\t            for (var i = 0; i < splitAreas.length; i++) {\\n\\t                this.group.add(graphic.mergePath(splitAreas[i], {\\n\\t                    style: zrUtil.defaults({\\n\\t                        fill: areaColors[i % areaColors.length]\\n\\t                    }, areaStyleModel.getAreaStyle()),\\n\\t                    silent: true\\n\\t                }));\\n\\t            }\\n\\t        }\\n\\t    });\\n\\n\\t    /**\\n\\t     * @inner\\n\\t     */\\n\\t    function layoutAxis(polar, radiusAxisModel, axisAngle) {\\n\\t        return {\\n\\t            position: [polar.cx, polar.cy],\\n\\t            rotation: axisAngle / 180 * Math.PI,\\n\\t            labelDirection: -1,\\n\\t            tickDirection: -1,\\n\\t            nameDirection: 1,\\n\\t            labelRotate: radiusAxisModel.getModel('axisLabel').get('rotate'),\\n\\t            // Over splitLine and splitArea\\n\\t            z2: 1\\n\\t        };\\n\\t    }\\n\\n\\n/***/ },\\n/* 342 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t'use strict';\\n\\n\\n\\t    var formatUtil = __webpack_require__(6);\\n\\t    var BaseAxisPointer = __webpack_require__(305);\\n\\t    var graphic = __webpack_require__(18);\\n\\t    var viewHelper = __webpack_require__(306);\\n\\t    var matrix = __webpack_require__(11);\\n\\t    var AxisBuilder = __webpack_require__(135);\\n\\t    var AxisView = __webpack_require__(136);\\n\\n\\t    var PolarAxisPointer = BaseAxisPointer.extend({\\n\\n\\t        /**\\n\\t         * @override\\n\\t         */\\n\\t        makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\\n\\t            var axis = axisModel.axis;\\n\\n\\t            if (axis.dim === 'angle') {\\n\\t                this.animationThreshold = Math.PI / 18;\\n\\t            }\\n\\n\\t            var polar = axis.polar;\\n\\t            var otherAxis = polar.getOtherAxis(axis);\\n\\t            var otherExtent = otherAxis.getExtent();\\n\\n\\t            var coordValue;\\n\\t            coordValue = axis['dataTo' + formatUtil.capitalFirst(axis.dim)](value);\\n\\n\\t            var axisPointerType = axisPointerModel.get('type');\\n\\t            if (axisPointerType && axisPointerType !== 'none') {\\n\\t                var elStyle = viewHelper.buildElStyle(axisPointerModel);\\n\\t                var pointerOption = pointerShapeBuilder[axisPointerType](\\n\\t                    axis, polar, coordValue, otherExtent, elStyle\\n\\t                );\\n\\t                pointerOption.style = elStyle;\\n\\t                elOption.graphicKey = pointerOption.type;\\n\\t                elOption.pointer = pointerOption;\\n\\t            }\\n\\n\\t            var labelMargin = axisPointerModel.get('label.margin');\\n\\t            var labelPos = getLabelPosition(value, axisModel, axisPointerModel, polar, labelMargin);\\n\\t            viewHelper.buildLabelElOption(elOption, axisModel, axisPointerModel, api, labelPos);\\n\\t        }\\n\\n\\t        // Do not support handle, utill any user requires it.\\n\\n\\t    });\\n\\n\\t    function getLabelPosition(value, axisModel, axisPointerModel, polar, labelMargin) {\\n\\t        var axis = axisModel.axis;\\n\\t        var coord = axis.dataToCoord(value);\\n\\t        var axisAngle = polar.getAngleAxis().getExtent()[0];\\n\\t        axisAngle = axisAngle / 180 * Math.PI;\\n\\t        var radiusExtent = polar.getRadiusAxis().getExtent();\\n\\t        var position;\\n\\t        var align;\\n\\t        var verticalAlign;\\n\\n\\t        if (axis.dim === 'radius') {\\n\\t            var transform = matrix.create();\\n\\t            matrix.rotate(transform, transform, axisAngle);\\n\\t            matrix.translate(transform, transform, [polar.cx, polar.cy]);\\n\\t            position = graphic.applyTransform([coord, -labelMargin], transform);\\n\\n\\t            var labelRotation = axisModel.getModel('axisLabel').get('rotate') || 0;\\n\\t            var labelLayout = AxisBuilder.innerTextLayout(\\n\\t                axisAngle, labelRotation * Math.PI / 180, -1\\n\\t            );\\n\\t            align = labelLayout.textAlign;\\n\\t            verticalAlign = labelLayout.textVerticalAlign;\\n\\t        }\\n\\t        else { // angle axis\\n\\t            var r = radiusExtent[1];\\n\\t            position = polar.coordToPoint([r + labelMargin, coord]);\\n\\t            var cx = polar.cx;\\n\\t            var cy = polar.cy;\\n\\t            align = Math.abs(position[0] - cx) / r < 0.3\\n\\t                ? 'center' : (position[0] > cx ? 'left' : 'right');\\n\\t            verticalAlign = Math.abs(position[1] - cy) / r < 0.3\\n\\t                ? 'middle' : (position[1] > cy ? 'top' : 'bottom');\\n\\t        }\\n\\n\\t        return {\\n\\t            position: position,\\n\\t            align: align,\\n\\t            verticalAlign: verticalAlign\\n\\t        };\\n\\t    }\\n\\n\\n\\t    var pointerShapeBuilder = {\\n\\n\\t        line: function (axis, polar, coordValue, otherExtent, elStyle) {\\n\\t            return axis.dim === 'angle'\\n\\t                ? {\\n\\t                    type: 'Line',\\n\\t                    shape: viewHelper.makeLineShape(\\n\\t                        polar.coordToPoint([otherExtent[0], coordValue]),\\n\\t                        polar.coordToPoint([otherExtent[1], coordValue])\\n\\t                    )\\n\\t                }\\n\\t                : {\\n\\t                    type: 'Circle',\\n\\t                    shape: {\\n\\t                        cx: polar.cx,\\n\\t                        cy: polar.cy,\\n\\t                        r: coordValue\\n\\t                    }\\n\\t                };\\n\\t        },\\n\\n\\t        shadow: function (axis, polar, coordValue, otherExtent, elStyle) {\\n\\t            var bandWidth = axis.getBandWidth();\\n\\t            var radian = Math.PI / 180;\\n\\n\\t            return axis.dim === 'angle'\\n\\t                ? {\\n\\t                    type: 'Sector',\\n\\t                    shape: viewHelper.makeSectorShape(\\n\\t                        polar.cx, polar.cy,\\n\\t                        otherExtent[0], otherExtent[1],\\n\\t                        // In ECharts y is negative if angle is positive\\n\\t                        (-coordValue - bandWidth / 2) * radian,\\n\\t                        (-coordValue + bandWidth / 2) * radian\\n\\t                    )\\n\\t                }\\n\\t                : {\\n\\t                    type: 'Sector',\\n\\t                    shape: viewHelper.makeSectorShape(\\n\\t                        polar.cx, polar.cy,\\n\\t                        coordValue - bandWidth / 2,\\n\\t                        coordValue + bandWidth / 2,\\n\\t                        0, Math.PI * 2\\n\\t                    )\\n\\t                };\\n\\t        }\\n\\t    };\\n\\n\\t    AxisView.registerAxisPointerClass('PolarAxisPointer', PolarAxisPointer);\\n\\n\\t    module.exports = PolarAxisPointer;\\n\\n\\n/***/ },\\n/* 343 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t'use strict';\\n\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var parsePercent = __webpack_require__(7).parsePercent;\\n\\n\\t    function getSeriesStackId(seriesModel) {\\n\\t        return seriesModel.get('stack')\\n\\t            || '__ec_stack_' + seriesModel.seriesIndex;\\n\\t    }\\n\\n\\t    function getAxisKey(axis) {\\n\\t        return axis.dim;\\n\\t    }\\n\\n\\t    /**\\n\\t     * @param {string} seriesType\\n\\t     * @param {module:echarts/model/Global} ecModel\\n\\t     * @param {module:echarts/ExtensionAPI} api\\n\\t     */\\n\\t    function barLayoutPolar(seriesType, ecModel, api) {\\n\\n\\t        var width = api.getWidth();\\n\\t        var height = api.getHeight();\\n\\n\\t        var lastStackCoords = {};\\n\\t        var lastStackCoordsOrigin = {};\\n\\n\\t        var barWidthAndOffset = calRadialBar(\\n\\t            zrUtil.filter(\\n\\t                ecModel.getSeriesByType(seriesType),\\n\\t                function (seriesModel) {\\n\\t                    return !ecModel.isSeriesFiltered(seriesModel)\\n\\t                        && seriesModel.coordinateSystem\\n\\t                        && seriesModel.coordinateSystem.type === 'polar';\\n\\t                }\\n\\t            )\\n\\t        );\\n\\n\\t        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\\n\\t            // Check series coordinate, do layout for polar only\\n\\t            if (seriesModel.coordinateSystem.type !== 'polar') {\\n\\t                return;\\n\\t            }\\n\\n\\t            var data = seriesModel.getData();\\n\\t            var polar = seriesModel.coordinateSystem;\\n\\t            var angleAxis = polar.getAngleAxis();\\n\\t            var baseAxis = polar.getBaseAxis();\\n\\n\\t            var stackId = getSeriesStackId(seriesModel);\\n\\t            var columnLayoutInfo\\n\\t                = barWidthAndOffset[getAxisKey(baseAxis)][stackId];\\n\\t            var columnOffset = columnLayoutInfo.offset;\\n\\t            var columnWidth = columnLayoutInfo.width;\\n\\t            var valueAxis = polar.getOtherAxis(baseAxis);\\n\\n\\t            var center = seriesModel.get('center') || ['50%', '50%'];\\n\\t            var cx = parsePercent(center[0], width);\\n\\t            var cy = parsePercent(center[1], height);\\n\\n\\t            var barMinHeight = seriesModel.get('barMinHeight') || 0;\\n\\t            var barMinAngle = seriesModel.get('barMinAngle') || 0;\\n\\n\\t            var valueAxisStart = valueAxis.getExtent()[0];\\n\\t            var valueMax = valueAxis.model.get('max');\\n\\t            var valueMin = valueAxis.model.get('min');\\n\\n\\t            var coords = polar.dataToPoints(data);\\n\\t            lastStackCoords[stackId] = lastStackCoords[stackId] || [];\\n\\t            lastStackCoordsOrigin[stackId] = lastStackCoordsOrigin[stackId] || []; // Fix #4243\\n\\n\\t            data.each(valueAxis.dim, function (value, idx) {\\n\\t                if (isNaN(value)) {\\n\\t                    return;\\n\\t                }\\n\\n\\t                if (!lastStackCoords[stackId][idx]) {\\n\\t                    lastStackCoords[stackId][idx] = {\\n\\t                        p: valueAxisStart, // Positive stack\\n\\t                        n: valueAxisStart  // Negative stack\\n\\t                    };\\n\\t                    lastStackCoordsOrigin[stackId][idx] = {\\n\\t                        p: valueAxisStart, // Positive stack\\n\\t                        n: valueAxisStart  // Negative stack\\n\\t                    };\\n\\t                }\\n\\t                var sign = value >= 0 ? 'p' : 'n';\\n\\t                var coord = polar.pointToCoord(coords[idx]);\\n\\n\\t                var lastCoordOrigin = lastStackCoordsOrigin[stackId][idx][sign];\\n\\t                var r0;\\n\\t                var r;\\n\\t                var startAngle;\\n\\t                var endAngle;\\n\\n\\t                if (valueAxis.dim === 'radius') {\\n\\t                    // radial sector\\n\\t                    r0 = lastCoordOrigin;\\n\\t                    r = coord[0];\\n\\t                    startAngle = (-coord[1] + columnOffset) * Math.PI / 180;\\n\\t                    endAngle = startAngle + columnWidth * Math.PI / 180;\\n\\n\\t                    if (Math.abs(r) < barMinHeight) {\\n\\t                        r = r0 + (r < 0 ? -1 : 1) * barMinHeight;\\n\\t                    }\\n\\n\\t                    lastStackCoordsOrigin[stackId][idx][sign] = r;\\n\\t                }\\n\\t                else {\\n\\t                    // tangential sector\\n\\t                    r0 = coord[0] + columnOffset;\\n\\t                    r = r0 + columnWidth;\\n\\n\\t                    // clamp data if min or max is defined for valueAxis\\n\\t                    if (valueMax != null) {\\n\\t                        value = Math.min(value, valueMax);\\n\\t                    }\\n\\t                    if (valueMin != null) {\\n\\t                        value = Math.max(value, valueMin);\\n\\t                    }\\n\\n\\t                    var angle = angleAxis.dataToAngle(value);\\n\\t                    if (Math.abs(angle - lastCoordOrigin) < barMinAngle) {\\n\\t                        angle = lastCoordOrigin - (value < 0 ? -1 : 1)\\n\\t                            * barMinAngle;\\n\\t                    }\\n\\n\\t                    startAngle = -lastCoordOrigin * Math.PI / 180;\\n\\t                    endAngle = -angle * Math.PI / 180;\\n\\n\\t                    // if the previous stack is at the end of the ring,\\n\\t                    // add a round to differentiate it from origin\\n\\t                    var extent = angleAxis.getExtent();\\n\\t                    var stackCoord = angle;\\n\\t                    if (stackCoord === extent[0] && value > 0) {\\n\\t                        stackCoord = extent[1];\\n\\t                    }\\n\\t                    else if (stackCoord === extent[1] && value < 0) {\\n\\t                        stackCoord = extent[0];\\n\\t                    }\\n\\t                    lastStackCoordsOrigin[stackId][idx][sign] = stackCoord;\\n\\t                }\\n\\n\\t                data.setItemLayout(idx, {\\n\\t                    cx: cx,\\n\\t                    cy: cy,\\n\\t                    r0: r0,\\n\\t                    r: r,\\n\\t                    startAngle: startAngle,\\n\\t                    endAngle: endAngle\\n\\t                });\\n\\n\\t            }, true);\\n\\n\\t        }, this);\\n\\n\\t    }\\n\\n\\t    /**\\n\\t     * Calculate bar width and offset for radial bar charts\\n\\t     */\\n\\t    function calRadialBar(barSeries, api) {\\n\\t        // Columns info on each category axis. Key is polar name\\n\\t        var columnsMap = {};\\n\\n\\t        zrUtil.each(barSeries, function (seriesModel, idx) {\\n\\t            var data = seriesModel.getData();\\n\\t            var polar = seriesModel.coordinateSystem;\\n\\n\\t            var baseAxis = polar.getBaseAxis();\\n\\n\\t            var axisExtent = baseAxis.getExtent();\\n\\t            var bandWidth = baseAxis.type === 'category'\\n\\t                ? baseAxis.getBandWidth()\\n\\t                : (Math.abs(axisExtent[1] - axisExtent[0]) / data.count());\\n\\n\\t            var columnsOnAxis = columnsMap[getAxisKey(baseAxis)] || {\\n\\t                bandWidth: bandWidth,\\n\\t                remainedWidth: bandWidth,\\n\\t                autoWidthCount: 0,\\n\\t                categoryGap: '20%',\\n\\t                gap: '30%',\\n\\t                stacks: {}\\n\\t            };\\n\\t            var stacks = columnsOnAxis.stacks;\\n\\t            columnsMap[getAxisKey(baseAxis)] = columnsOnAxis;\\n\\n\\t            var stackId = getSeriesStackId(seriesModel);\\n\\n\\t            if (!stacks[stackId]) {\\n\\t                columnsOnAxis.autoWidthCount++;\\n\\t            }\\n\\t            stacks[stackId] = stacks[stackId] || {\\n\\t                width: 0,\\n\\t                maxWidth: 0\\n\\t            };\\n\\n\\t            var barWidth = parsePercent(\\n\\t                seriesModel.get('barWidth'),\\n\\t                bandWidth\\n\\t            );\\n\\t            var barMaxWidth = parsePercent(\\n\\t                seriesModel.get('barMaxWidth'),\\n\\t                bandWidth\\n\\t            );\\n\\t            var barGap = seriesModel.get('barGap');\\n\\t            var barCategoryGap = seriesModel.get('barCategoryGap');\\n\\n\\t            if (barWidth && !stacks[stackId].width) {\\n\\t                barWidth = Math.min(columnsOnAxis.remainedWidth, barWidth);\\n\\t                stacks[stackId].width = barWidth;\\n\\t                columnsOnAxis.remainedWidth -= barWidth;\\n\\t            }\\n\\n\\t            barMaxWidth && (stacks[stackId].maxWidth = barMaxWidth);\\n\\t            (barGap != null) && (columnsOnAxis.gap = barGap);\\n\\t            (barCategoryGap != null) && (columnsOnAxis.categoryGap = barCategoryGap);\\n\\t        });\\n\\n\\n\\t        var result = {};\\n\\n\\t        zrUtil.each(columnsMap, function (columnsOnAxis, coordSysName) {\\n\\n\\t            result[coordSysName] = {};\\n\\n\\t            var stacks = columnsOnAxis.stacks;\\n\\t            var bandWidth = columnsOnAxis.bandWidth;\\n\\t            var categoryGap = parsePercent(columnsOnAxis.categoryGap, bandWidth);\\n\\t            var barGapPercent = parsePercent(columnsOnAxis.gap, 1);\\n\\n\\t            var remainedWidth = columnsOnAxis.remainedWidth;\\n\\t            var autoWidthCount = columnsOnAxis.autoWidthCount;\\n\\t            var autoWidth = (remainedWidth - categoryGap)\\n\\t                / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\\n\\t            autoWidth = Math.max(autoWidth, 0);\\n\\n\\t            // Find if any auto calculated bar exceeded maxBarWidth\\n\\t            zrUtil.each(stacks, function (column, stack) {\\n\\t                var maxWidth = column.maxWidth;\\n\\t                if (maxWidth && maxWidth < autoWidth) {\\n\\t                    maxWidth = Math.min(maxWidth, remainedWidth);\\n\\t                    if (column.width) {\\n\\t                        maxWidth = Math.min(maxWidth, column.width);\\n\\t                    }\\n\\t                    remainedWidth -= maxWidth;\\n\\t                    column.width = maxWidth;\\n\\t                    autoWidthCount--;\\n\\t                }\\n\\t            });\\n\\n\\t            // Recalculate width again\\n\\t            autoWidth = (remainedWidth - categoryGap)\\n\\t                / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\\n\\t            autoWidth = Math.max(autoWidth, 0);\\n\\n\\t            var widthSum = 0;\\n\\t            var lastColumn;\\n\\t            zrUtil.each(stacks, function (column, idx) {\\n\\t                if (!column.width) {\\n\\t                    column.width = autoWidth;\\n\\t                }\\n\\t                lastColumn = column;\\n\\t                widthSum += column.width * (1 + barGapPercent);\\n\\t            });\\n\\t            if (lastColumn) {\\n\\t                widthSum -= lastColumn.width * barGapPercent;\\n\\t            }\\n\\n\\t            var offset = -widthSum / 2;\\n\\t            zrUtil.each(stacks, function (column, stackId) {\\n\\t                result[coordSysName][stackId] = result[coordSysName][stackId] || {\\n\\t                    offset: offset,\\n\\t                    width: column.width\\n\\t                };\\n\\n\\t                offset += column.width * (1 + barGapPercent);\\n\\t            });\\n\\t        });\\n\\n\\t        return result;\\n\\t    }\\n\\n\\t    module.exports = barLayoutPolar;\\n\\n\\n\\n/***/ },\\n/* 344 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    __webpack_require__(345);\\n\\n\\t    __webpack_require__(171);\\n\\n\\t    __webpack_require__(346);\\n\\n\\t    __webpack_require__(187);\\n\\n\\t    var echarts = __webpack_require__(1);\\n\\t    var zrUtil = __webpack_require__(4);\\n\\n\\t    function makeAction(method, actionInfo) {\\n\\t        actionInfo.update = 'updateView';\\n\\t        echarts.registerAction(actionInfo, function (payload, ecModel) {\\n\\t            var selected = {};\\n\\n\\t            ecModel.eachComponent(\\n\\t                { mainType: 'geo', query: payload},\\n\\t                function (geoModel) {\\n\\t                    geoModel[method](payload.name);\\n\\t                    var geo = geoModel.coordinateSystem;\\n\\t                    zrUtil.each(geo.regions, function (region) {\\n\\t                        selected[region.name] = geoModel.isSelected(region.name) || false;\\n\\t                    });\\n\\t                }\\n\\t            );\\n\\n\\t            return {\\n\\t                selected: selected,\\n\\t                name: payload.name\\n\\t            };\\n\\t        });\\n\\t    }\\n\\n\\t    makeAction('toggleSelected', {\\n\\t        type: 'geoToggleSelect',\\n\\t        event: 'geoselectchanged'\\n\\t    });\\n\\t    makeAction('select', {\\n\\t        type: 'geoSelect',\\n\\t        event: 'geoselected'\\n\\t    });\\n\\t    makeAction('unSelect', {\\n\\t        type: 'geoUnSelect',\\n\\t        event: 'geounselected'\\n\\t    });\\n\\n\\n/***/ },\\n/* 345 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t'use strict';\\n\\n\\t    var modelUtil = __webpack_require__(5);\\n\\t    var ComponentModel = __webpack_require__(69);\\n\\t    var Model = __webpack_require__(12);\\n\\t    var zrUtil = __webpack_require__(4);\\n\\n\\t    var selectableMixin = __webpack_require__(148);\\n\\n\\t    var geoCreator = __webpack_require__(171);\\n\\n\\t    var GeoModel = ComponentModel.extend({\\n\\n\\t        type: 'geo',\\n\\n\\t        /**\\n\\t         * @type {module:echarts/coord/geo/Geo}\\n\\t         */\\n\\t        coordinateSystem: null,\\n\\n\\t        layoutMode: 'box',\\n\\n\\t        init: function (option) {\\n\\t            ComponentModel.prototype.init.apply(this, arguments);\\n\\n\\t            // Default label emphasis `position` and `show`\\n\\t            modelUtil.defaultEmphasis(\\n\\t                option.label, ['position', 'show', 'textStyle', 'distance', 'formatter']\\n\\t            );\\n\\t        },\\n\\n\\t        optionUpdated: function () {\\n\\t            var option = this.option;\\n\\t            var self = this;\\n\\n\\t            option.regions = geoCreator.getFilledRegions(option.regions, option.map);\\n\\n\\t            this._optionModelMap = zrUtil.reduce(option.regions || [], function (optionModelMap, regionOpt) {\\n\\t                if (regionOpt.name) {\\n\\t                    optionModelMap.set(regionOpt.name, new Model(regionOpt, self));\\n\\t                }\\n\\t                return optionModelMap;\\n\\t            }, zrUtil.createHashMap());\\n\\n\\t            this.updateSelectedMap(option.regions);\\n\\t        },\\n\\n\\t        defaultOption: {\\n\\n\\t            zlevel: 0,\\n\\n\\t            z: 0,\\n\\n\\t            show: true,\\n\\n\\t            left: 'center',\\n\\n\\t            top: 'center',\\n\\n\\n\\t            // width:,\\n\\t            // height:,\\n\\t            // right\\n\\t            // bottom\\n\\n\\t            // Aspect is width / height. Inited to be geoJson bbox aspect\\n\\t            // This parameter is used for scale this aspect\\n\\t            aspectScale: 0.75,\\n\\n\\t            ///// Layout with center and size\\n\\t            // If you wan't to put map in a fixed size box with right aspect ratio\\n\\t            // This two properties may more conveninet\\n\\t            // layoutCenter: [50%, 50%]\\n\\t            // layoutSize: 100\\n\\n\\n\\t            silent: false,\\n\\n\\t            // Map type\\n\\t            map: '',\\n\\n\\t            // Define left-top, right-bottom coords to control view\\n\\t            // For example, [ [180, 90], [-180, -90] ]\\n\\t            boundingCoords: null,\\n\\n\\t            // Default on center of map\\n\\t            center: null,\\n\\n\\t            zoom: 1,\\n\\n\\t            scaleLimit: null,\\n\\n\\t            // selectedMode: false\\n\\n\\t            label: {\\n\\t                normal: {\\n\\t                    show: false,\\n\\t                    textStyle: {\\n\\t                        color: '#000'\\n\\t                    }\\n\\t                },\\n\\t                emphasis: {\\n\\t                    show: true,\\n\\t                    textStyle: {\\n\\t                        color: 'rgb(100,0,0)'\\n\\t                    }\\n\\t                }\\n\\t            },\\n\\n\\t            itemStyle: {\\n\\t                normal: {\\n\\t                    // color: 各异,\\n\\t                    borderWidth: 0.5,\\n\\t                    borderColor: '#444',\\n\\t                    color: '#eee'\\n\\t                },\\n\\t                emphasis: {                 // 也是选中样式\\n\\t                    color: 'rgba(255,215,0,0.8)'\\n\\t                }\\n\\t            },\\n\\n\\t            regions: []\\n\\t        },\\n\\n\\t        /**\\n\\t         * Get model of region\\n\\t         * @param  {string} name\\n\\t         * @return {module:echarts/model/Model}\\n\\t         */\\n\\t        getRegionModel: function (name) {\\n\\t            return this._optionModelMap.get(name) || new Model(null, this, this.ecModel);\\n\\t        },\\n\\n\\t        /**\\n\\t         * Format label\\n\\t         * @param {string} name Region name\\n\\t         * @param {string} [status='normal'] 'normal' or 'emphasis'\\n\\t         * @return {string}\\n\\t         */\\n\\t        getFormattedLabel: function (name, status) {\\n\\t            var regionModel = this.getRegionModel(name);\\n\\t            var formatter = regionModel.get('label.' + status + '.formatter');\\n\\t            var params = {\\n\\t                name: name\\n\\t            };\\n\\t            if (typeof formatter === 'function') {\\n\\t                params.status = status;\\n\\t                return formatter(params);\\n\\t            }\\n\\t            else if (typeof formatter === 'string') {\\n\\t                var serName = params.seriesName;\\n\\t                return formatter.replace('{a}', serName != null ? serName : '');\\n\\t            }\\n\\t        },\\n\\n\\t        setZoom: function (zoom) {\\n\\t            this.option.zoom = zoom;\\n\\t        },\\n\\n\\t        setCenter: function (center) {\\n\\t            this.option.center = center;\\n\\t        }\\n\\t    });\\n\\n\\t    zrUtil.mixin(GeoModel, selectableMixin);\\n\\n\\t    module.exports = GeoModel;\\n\\n\\n/***/ },\\n/* 346 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t'use strict';\\n\\n\\n\\t    var MapDraw = __webpack_require__(182);\\n\\n\\t    module.exports = __webpack_require__(1).extendComponentView({\\n\\n\\t        type: 'geo',\\n\\n\\t        init: function (ecModel, api) {\\n\\t            var mapDraw = new MapDraw(api, true);\\n\\t            this._mapDraw = mapDraw;\\n\\n\\t            this.group.add(mapDraw.group);\\n\\t        },\\n\\n\\t        render: function (geoModel, ecModel, api, payload) {\\n\\t            // Not render if it is an toggleSelect action from self\\n\\t            if (payload && payload.type === 'geoToggleSelect'\\n\\t                && payload.from === this.uid\\n\\t            ) {\\n\\t                return;\\n\\t            }\\n\\n\\t            var mapDraw = this._mapDraw;\\n\\t            if (geoModel.get('show')) {\\n\\t                mapDraw.draw(geoModel, ecModel, api, this, payload);\\n\\t            }\\n\\t            else {\\n\\t                this._mapDraw.group.removeAll();\\n\\t            }\\n\\n\\t            this.group.silent = geoModel.get('silent');\\n\\t        },\\n\\n\\t        dispose: function () {\\n\\t            this._mapDraw && this._mapDraw.remove();\\n\\t        }\\n\\n\\t    });\\n\\n\\n/***/ },\\n/* 347 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * Brush component entry\\n\\t */\\n\\n\\n\\t    __webpack_require__(1).registerPreprocessor(\\n\\t        __webpack_require__(348)\\n\\t    );\\n\\n\\t    __webpack_require__(349);\\n\\t    __webpack_require__(353);\\n\\t    __webpack_require__(354);\\n\\t    __webpack_require__(355);\\n\\n\\t    __webpack_require__(356);\\n\\n\\n\\n/***/ },\\n/* 348 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * @file brush preprocessor\\n\\t */\\n\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\n\\t    var DEFAULT_TOOLBOX_BTNS = ['rect', 'polygon', 'keep', 'clear'];\\n\\n\\t    module.exports = function (option, isNew) {\\n\\t        var brushComponents = option && option.brush;\\n\\t        if (!zrUtil.isArray(brushComponents)) {\\n\\t            brushComponents = brushComponents ? [brushComponents] : [];\\n\\t        }\\n\\n\\t        if (!brushComponents.length) {\\n\\t            return;\\n\\t        }\\n\\n\\t        var brushComponentSpecifiedBtns = [];\\n\\n\\t        zrUtil.each(brushComponents, function (brushOpt) {\\n\\t            var tbs = brushOpt.hasOwnProperty('toolbox')\\n\\t                ? brushOpt.toolbox : [];\\n\\n\\t            if (tbs instanceof Array) {\\n\\t                brushComponentSpecifiedBtns = brushComponentSpecifiedBtns.concat(tbs);\\n\\t            }\\n\\t        });\\n\\n\\t        var toolbox = option && option.toolbox;\\n\\n\\t        if (zrUtil.isArray(toolbox)) {\\n\\t            toolbox = toolbox[0];\\n\\t        }\\n\\t        if (!toolbox) {\\n\\t            toolbox = {feature: {}};\\n\\t            option.toolbox = [toolbox];\\n\\t        }\\n\\n\\t        var toolboxFeature = (toolbox.feature || (toolbox.feature = {}));\\n\\t        var toolboxBrush = toolboxFeature.brush || (toolboxFeature.brush = {});\\n\\t        var brushTypes = toolboxBrush.type || (toolboxBrush.type = []);\\n\\n\\t        brushTypes.push.apply(brushTypes, brushComponentSpecifiedBtns);\\n\\n\\t        removeDuplicate(brushTypes);\\n\\n\\t        if (isNew && !brushTypes.length) {\\n\\t            brushTypes.push.apply(brushTypes, DEFAULT_TOOLBOX_BTNS);\\n\\t        }\\n\\t    };\\n\\n\\t    function removeDuplicate(arr) {\\n\\t        var map = {};\\n\\t        zrUtil.each(arr, function (val) {\\n\\t            map[val] = 1;\\n\\t        });\\n\\t        arr.length = 0;\\n\\t        zrUtil.each(map, function (flag, val) {\\n\\t            arr.push(val);\\n\\t        });\\n\\t    }\\n\\n\\n\\n/***/ },\\n/* 349 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * @file Brush visual coding.\\n\\t */\\n\\n\\n\\t    var echarts = __webpack_require__(1);\\n\\t    var visualSolution = __webpack_require__(350);\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var BoundingRect = __webpack_require__(9);\\n\\t    var selector = __webpack_require__(351);\\n\\t    var throttle = __webpack_require__(81);\\n\\t    var BrushTargetManager = __webpack_require__(352);\\n\\n\\t    var STATE_LIST = ['inBrush', 'outOfBrush'];\\n\\t    var DISPATCH_METHOD = '__ecBrushSelect';\\n\\t    var DISPATCH_FLAG = '__ecInBrushSelectEvent';\\n\\t    var PRIORITY_BRUSH = echarts.PRIORITY.VISUAL.BRUSH;\\n\\n\\t    /**\\n\\t     * Layout for visual, the priority higher than other layout, and before brush visual.\\n\\t     */\\n\\t    echarts.registerLayout(PRIORITY_BRUSH, function (ecModel, api, payload) {\\n\\t        ecModel.eachComponent({mainType: 'brush'}, function (brushModel) {\\n\\n\\t            payload && payload.type === 'takeGlobalCursor' && brushModel.setBrushOption(\\n\\t                payload.key === 'brush' ? payload.brushOption : {brushType: false}\\n\\t            );\\n\\n\\t            var brushTargetManager = brushModel.brushTargetManager = new BrushTargetManager(brushModel.option, ecModel);\\n\\n\\t            brushTargetManager.setInputRanges(brushModel.areas, ecModel);\\n\\t        });\\n\\t    });\\n\\n\\t    /**\\n\\t     * Register the visual encoding if this modules required.\\n\\t     */\\n\\t    echarts.registerVisual(PRIORITY_BRUSH, function (ecModel, api, payload) {\\n\\n\\t        var brushSelected = [];\\n\\t        var throttleType;\\n\\t        var throttleDelay;\\n\\n\\t        ecModel.eachComponent({mainType: 'brush'}, function (brushModel, brushIndex) {\\n\\n\\t            var thisBrushSelected = {\\n\\t                brushId: brushModel.id,\\n\\t                brushIndex: brushIndex,\\n\\t                brushName: brushModel.name,\\n\\t                areas: zrUtil.clone(brushModel.areas),\\n\\t                selected: []\\n\\t            };\\n\\t            // Every brush component exists in event params, convenient\\n\\t            // for user to find by index.\\n\\t            brushSelected.push(thisBrushSelected);\\n\\n\\t            var brushOption = brushModel.option;\\n\\t            var brushLink = brushOption.brushLink;\\n\\t            var linkedSeriesMap = [];\\n\\t            var selectedDataIndexForLink = [];\\n\\t            var rangeInfoBySeries = [];\\n\\t            var hasBrushExists = 0;\\n\\n\\t            if (!brushIndex) { // Only the first throttle setting works.\\n\\t                throttleType = brushOption.throttleType;\\n\\t                throttleDelay = brushOption.throttleDelay;\\n\\t            }\\n\\n\\t            // Add boundingRect and selectors to range.\\n\\t            var areas = zrUtil.map(brushModel.areas, function (area) {\\n\\t                return bindSelector(\\n\\t                    zrUtil.defaults(\\n\\t                        {boundingRect: boundingRectBuilders[area.brushType](area)},\\n\\t                        area\\n\\t                    )\\n\\t                );\\n\\t            });\\n\\n\\t            var visualMappings = visualSolution.createVisualMappings(\\n\\t                brushModel.option, STATE_LIST, function (mappingOption) {\\n\\t                    mappingOption.mappingMethod = 'fixed';\\n\\t                }\\n\\t            );\\n\\n\\t            zrUtil.isArray(brushLink) && zrUtil.each(brushLink, function (seriesIndex) {\\n\\t                linkedSeriesMap[seriesIndex] = 1;\\n\\t            });\\n\\n\\t            function linkOthers(seriesIndex) {\\n\\t                return brushLink === 'all' || linkedSeriesMap[seriesIndex];\\n\\t            }\\n\\n\\t            // If no supported brush or no brush on the series,\\n\\t            // all visuals should be in original state.\\n\\t            function brushed(rangeInfoList) {\\n\\t                return !!rangeInfoList.length;\\n\\t            }\\n\\n\\t            /**\\n\\t             * Logic for each series: (If the logic has to be modified one day, do it carefully!)\\n\\t             *\\n\\t             * ( brushed ┬ && ┬hasBrushExist ┬ && linkOthers  ) => StepA: ┬record, ┬ StepB: ┬visualByRecord.\\n\\t             *   !brushed┘    ├hasBrushExist ┤                            └nothing,┘        ├visualByRecord.\\n\\t             *                └!hasBrushExist┘                                              └nothing.\\n\\t             * ( !brushed  && ┬hasBrushExist ┬ && linkOthers  ) => StepA:  nothing,  StepB: ┬visualByRecord.\\n\\t             *                └!hasBrushExist┘                                              └nothing.\\n\\t             * ( brushed ┬ &&                     !linkOthers ) => StepA:  nothing,  StepB: ┬visualByCheck.\\n\\t             *   !brushed┘                                                                  └nothing.\\n\\t             * ( !brushed  &&                     !linkOthers ) => StepA:  nothing,  StepB:  nothing.\\n\\t             */\\n\\n\\t            // Step A\\n\\t            ecModel.eachSeries(function (seriesModel, seriesIndex) {\\n\\t                var rangeInfoList = rangeInfoBySeries[seriesIndex] = [];\\n\\n\\t                seriesModel.subType === 'parallel'\\n\\t                    ? stepAParallel(seriesModel, seriesIndex, rangeInfoList)\\n\\t                    : stepAOthers(seriesModel, seriesIndex, rangeInfoList);\\n\\t            });\\n\\n\\t            function stepAParallel(seriesModel, seriesIndex) {\\n\\t                var coordSys = seriesModel.coordinateSystem;\\n\\t                hasBrushExists |= coordSys.hasAxisBrushed();\\n\\n\\t                linkOthers(seriesIndex) && coordSys.eachActiveState(\\n\\t                    seriesModel.getData(),\\n\\t                    function (activeState, dataIndex) {\\n\\t                        activeState === 'active' && (selectedDataIndexForLink[dataIndex] = 1);\\n\\t                    }\\n\\t                );\\n\\t            }\\n\\n\\t            function stepAOthers(seriesModel, seriesIndex, rangeInfoList) {\\n\\t                var selectorsByBrushType = getSelectorsByBrushType(seriesModel);\\n\\t                if (!selectorsByBrushType || brushModelNotControll(brushModel, seriesIndex)) {\\n\\t                    return;\\n\\t                }\\n\\n\\t                zrUtil.each(areas, function (area) {\\n\\t                    selectorsByBrushType[area.brushType]\\n\\t                        && brushModel.brushTargetManager.controlSeries(area, seriesModel, ecModel)\\n\\t                        && rangeInfoList.push(area);\\n\\t                    hasBrushExists |= brushed(rangeInfoList);\\n\\t                });\\n\\n\\t                if (linkOthers(seriesIndex) && brushed(rangeInfoList)) {\\n\\t                    var data = seriesModel.getData();\\n\\t                    data.each(function (dataIndex) {\\n\\t                        if (checkInRange(selectorsByBrushType, rangeInfoList, data, dataIndex)) {\\n\\t                            selectedDataIndexForLink[dataIndex] = 1;\\n\\t                        }\\n\\t                    });\\n\\t                }\\n\\t            }\\n\\n\\t            // Step B\\n\\t            ecModel.eachSeries(function (seriesModel, seriesIndex) {\\n\\t                var seriesBrushSelected = {\\n\\t                    seriesId: seriesModel.id,\\n\\t                    seriesIndex: seriesIndex,\\n\\t                    seriesName: seriesModel.name,\\n\\t                    dataIndex: []\\n\\t                };\\n\\t                // Every series exists in event params, convenient\\n\\t                // for user to find series by seriesIndex.\\n\\t                thisBrushSelected.selected.push(seriesBrushSelected);\\n\\n\\t                var selectorsByBrushType = getSelectorsByBrushType(seriesModel);\\n\\t                var rangeInfoList = rangeInfoBySeries[seriesIndex];\\n\\n\\t                var data = seriesModel.getData();\\n\\t                var getValueState = linkOthers(seriesIndex)\\n\\t                    ? function (dataIndex) {\\n\\t                        return selectedDataIndexForLink[dataIndex]\\n\\t                            ? (seriesBrushSelected.dataIndex.push(data.getRawIndex(dataIndex)), 'inBrush')\\n\\t                            : 'outOfBrush';\\n\\t                    }\\n\\t                    : function (dataIndex) {\\n\\t                        return checkInRange(selectorsByBrushType, rangeInfoList, data, dataIndex)\\n\\t                            ? (seriesBrushSelected.dataIndex.push(data.getRawIndex(dataIndex)), 'inBrush')\\n\\t                            : 'outOfBrush';\\n\\t                    };\\n\\n\\t                // If no supported brush or no brush, all visuals are in original state.\\n\\t                (linkOthers(seriesIndex) ? hasBrushExists : brushed(rangeInfoList))\\n\\t                    && visualSolution.applyVisual(\\n\\t                        STATE_LIST, visualMappings, data, getValueState\\n\\t                    );\\n\\t            });\\n\\n\\t        });\\n\\n\\t        dispatchAction(api, throttleType, throttleDelay, brushSelected, payload);\\n\\t    });\\n\\n\\t    function dispatchAction(api, throttleType, throttleDelay, brushSelected, payload) {\\n\\t        // This event will not be triggered when `setOpion`, otherwise dead lock may\\n\\t        // triggered when do `setOption` in event listener, which we do not find\\n\\t        // satisfactory way to solve yet. Some considered resolutions:\\n\\t        // (a) Diff with prevoius selected data ant only trigger event when changed.\\n\\t        // But store previous data and diff precisely (i.e., not only by dataIndex, but\\n\\t        // also detect value changes in selected data) might bring complexity or fragility.\\n\\t        // (b) Use spectial param like `silent` to suppress event triggering.\\n\\t        // But such kind of volatile param may be weird in `setOption`.\\n\\t        if (!payload) {\\n\\t            return;\\n\\t        }\\n\\n\\t        var zr = api.getZr();\\n\\t        if (zr[DISPATCH_FLAG]) {\\n\\t            return;\\n\\t        }\\n\\n\\t        if (!zr[DISPATCH_METHOD]) {\\n\\t            zr[DISPATCH_METHOD] = doDispatch;\\n\\t        }\\n\\n\\t        var fn = throttle.createOrUpdate(zr, DISPATCH_METHOD, throttleDelay, throttleType);\\n\\n\\t        fn(api, brushSelected);\\n\\t    }\\n\\n\\t    function doDispatch(api, brushSelected) {\\n\\t        if (!api.isDisposed()) {\\n\\t            var zr = api.getZr();\\n\\t            zr[DISPATCH_FLAG] = true;\\n\\t            api.dispatchAction({\\n\\t                type: 'brushSelect',\\n\\t                batch: brushSelected\\n\\t            });\\n\\t            zr[DISPATCH_FLAG] = false;\\n\\t        }\\n\\t    }\\n\\n\\t    function checkInRange(selectorsByBrushType, rangeInfoList, data, dataIndex) {\\n\\t        for (var i = 0, len = rangeInfoList.length; i < len; i++) {\\n\\t            var area = rangeInfoList[i];\\n\\t            if (selectorsByBrushType[area.brushType](\\n\\t                dataIndex, data, area.selectors, area\\n\\t            )) {\\n\\t                return true;\\n\\t            }\\n\\t        }\\n\\t    }\\n\\n\\t    function getSelectorsByBrushType(seriesModel) {\\n\\t        var brushSelector = seriesModel.brushSelector;\\n\\t        if (zrUtil.isString(brushSelector)) {\\n\\t            var sels = [];\\n\\t            zrUtil.each(selector, function (selectorsByElementType, brushType) {\\n\\t                sels[brushType] = function (dataIndex, data, selectors, area) {\\n\\t                    var itemLayout = data.getItemLayout(dataIndex);\\n\\t                    return selectorsByElementType[brushSelector](itemLayout, selectors, area);\\n\\t                };\\n\\t            });\\n\\t            return sels;\\n\\t        }\\n\\t        else if (zrUtil.isFunction(brushSelector)) {\\n\\t            var bSelector = {};\\n\\t            zrUtil.each(selector, function (sel, brushType) {\\n\\t                bSelector[brushType] = brushSelector;\\n\\t            });\\n\\t            return bSelector;\\n\\t        }\\n\\t        return brushSelector;\\n\\t    }\\n\\n\\t    function brushModelNotControll(brushModel, seriesIndex) {\\n\\t        var seriesIndices = brushModel.option.seriesIndex;\\n\\t        return seriesIndices != null\\n\\t            && seriesIndices !== 'all'\\n\\t            && (\\n\\t                zrUtil.isArray(seriesIndices)\\n\\t                ? zrUtil.indexOf(seriesIndices, seriesIndex) < 0\\n\\t                : seriesIndex !== seriesIndices\\n\\t            );\\n\\t    }\\n\\n\\t    function bindSelector(area) {\\n\\t        var selectors = area.selectors = {};\\n\\t        zrUtil.each(selector[area.brushType], function (selFn, elType) {\\n\\t            // Do not use function binding or curry for performance.\\n\\t            selectors[elType] = function (itemLayout) {\\n\\t                return selFn(itemLayout, selectors, area);\\n\\t            };\\n\\t        });\\n\\t        return area;\\n\\t    }\\n\\n\\t    var boundingRectBuilders = {\\n\\n\\t        lineX: zrUtil.noop,\\n\\n\\t        lineY: zrUtil.noop,\\n\\n\\t        rect: function (area) {\\n\\t            return getBoundingRectFromMinMax(area.range);\\n\\t        },\\n\\n\\t        polygon: function (area) {\\n\\t            var minMax;\\n\\t            var range = area.range;\\n\\n\\t            for (var i = 0, len = range.length; i < len; i++) {\\n\\t                minMax = minMax || [[Infinity, -Infinity], [Infinity, -Infinity]];\\n\\t                var rg = range[i];\\n\\t                rg[0] < minMax[0][0] && (minMax[0][0] = rg[0]);\\n\\t                rg[0] > minMax[0][1] && (minMax[0][1] = rg[0]);\\n\\t                rg[1] < minMax[1][0] && (minMax[1][0] = rg[1]);\\n\\t                rg[1] > minMax[1][1] && (minMax[1][1] = rg[1]);\\n\\t            }\\n\\n\\t            return minMax && getBoundingRectFromMinMax(minMax);\\n\\t        }\\n\\t    };\\n\\n\\t    function getBoundingRectFromMinMax(minMax) {\\n\\t        return new BoundingRect(\\n\\t            minMax[0][0],\\n\\t            minMax[1][0],\\n\\t            minMax[0][1] - minMax[0][0],\\n\\t            minMax[1][1] - minMax[1][0]\\n\\t        );\\n\\t    }\\n\\n\\n\\n/***/ },\\n/* 350 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * @file Visual solution, for consistent option specification.\\n\\t */\\n\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var VisualMapping = __webpack_require__(203);\\n\\t    var each = zrUtil.each;\\n\\n\\t    function hasKeys(obj) {\\n\\t        if (obj) {\\n\\t            for (var name in obj){\\n\\t                if (obj.hasOwnProperty(name)) {\\n\\t                    return true;\\n\\t                }\\n\\t            }\\n\\t        }\\n\\t    }\\n\\n\\t    var visualSolution = {\\n\\n\\t        /**\\n\\t         * @param {Object} option\\n\\t         * @param {Array.<string>} stateList\\n\\t         * @param {Function} [supplementVisualOption]\\n\\t         * @return {Object} visualMappings <state, <visualType, module:echarts/visual/VisualMapping>>\\n\\t         */\\n\\t        createVisualMappings: function (option, stateList, supplementVisualOption) {\\n\\t            var visualMappings = {};\\n\\n\\t            each(stateList, function (state) {\\n\\t                var mappings = visualMappings[state] = createMappings();\\n\\n\\t                each(option[state], function (visualData, visualType) {\\n\\t                    if (!VisualMapping.isValidType(visualType)) {\\n\\t                        return;\\n\\t                    }\\n\\t                    var mappingOption = {\\n\\t                        type: visualType,\\n\\t                        visual: visualData\\n\\t                    };\\n\\t                    supplementVisualOption && supplementVisualOption(mappingOption, state);\\n\\t                    mappings[visualType] = new VisualMapping(mappingOption);\\n\\n\\t                    // Prepare a alpha for opacity, for some case that opacity\\n\\t                    // is not supported, such as rendering using gradient color.\\n\\t                    if (visualType === 'opacity') {\\n\\t                        mappingOption = zrUtil.clone(mappingOption);\\n\\t                        mappingOption.type = 'colorAlpha';\\n\\t                        mappings.__hidden.__alphaForOpacity = new VisualMapping(mappingOption);\\n\\t                    }\\n\\t                });\\n\\t            });\\n\\n\\t            return visualMappings;\\n\\n\\t            function createMappings() {\\n\\t                var Creater = function () {};\\n\\t                // Make sure hidden fields will not be visited by\\n\\t                // object iteration (with hasOwnProperty checking).\\n\\t                Creater.prototype.__hidden = Creater.prototype;\\n\\t                var obj = new Creater();\\n\\t                return obj;\\n\\t            }\\n\\t        },\\n\\n\\t        /**\\n\\t         * @param {Object} thisOption\\n\\t         * @param {Object} newOption\\n\\t         * @param {Array.<string>} keys\\n\\t         */\\n\\t        replaceVisualOption: function (thisOption, newOption, keys) {\\n\\t            // Visual attributes merge is not supported, otherwise it\\n\\t            // brings overcomplicated merge logic. See #2853. So if\\n\\t            // newOption has anyone of these keys, all of these keys\\n\\t            // will be reset. Otherwise, all keys remain.\\n\\t            var has;\\n\\t            zrUtil.each(keys, function (key) {\\n\\t                if (newOption.hasOwnProperty(key) && hasKeys(newOption[key])) {\\n\\t                    has = true;\\n\\t                }\\n\\t            });\\n\\t            has && zrUtil.each(keys, function (key) {\\n\\t                if (newOption.hasOwnProperty(key) && hasKeys(newOption[key])) {\\n\\t                    thisOption[key] = zrUtil.clone(newOption[key]);\\n\\t                }\\n\\t                else {\\n\\t                    delete thisOption[key];\\n\\t                }\\n\\t            });\\n\\t        },\\n\\n\\t        /**\\n\\t         * @param {Array.<string>} stateList\\n\\t         * @param {Object} visualMappings <state, Object.<visualType, module:echarts/visual/VisualMapping>>\\n\\t         * @param {module:echarts/data/List} list\\n\\t         * @param {Function} getValueState param: valueOrIndex, return: state.\\n\\t         * @param {object} [scope] Scope for getValueState\\n\\t         * @param {string} [dimension] Concrete dimension, if used.\\n\\t         */\\n\\t        applyVisual: function (stateList, visualMappings, data, getValueState, scope, dimension) {\\n\\t            var visualTypesMap = {};\\n\\t            zrUtil.each(stateList, function (state) {\\n\\t                var visualTypes = VisualMapping.prepareVisualTypes(visualMappings[state]);\\n\\t                visualTypesMap[state] = visualTypes;\\n\\t            });\\n\\n\\t            var dataIndex;\\n\\n\\t            function getVisual(key) {\\n\\t                return data.getItemVisual(dataIndex, key);\\n\\t            }\\n\\n\\t            function setVisual(key, value) {\\n\\t                data.setItemVisual(dataIndex, key, value);\\n\\t            }\\n\\n\\t            if (dimension == null) {\\n\\t                data.each(eachItem, true);\\n\\t            }\\n\\t            else {\\n\\t                data.each([dimension], eachItem, true);\\n\\t            }\\n\\n\\t            function eachItem(valueOrIndex, index) {\\n\\t                dataIndex = dimension == null ? valueOrIndex : index;\\n\\n\\t                var rawDataItem = data.getRawDataItem(dataIndex);\\n\\t                // Consider performance\\n\\t                if (rawDataItem && rawDataItem.visualMap === false) {\\n\\t                    return;\\n\\t                }\\n\\n\\t                var valueState = getValueState.call(scope, valueOrIndex);\\n\\t                var mappings = visualMappings[valueState];\\n\\t                var visualTypes = visualTypesMap[valueState];\\n\\n\\t                for (var i = 0, len = visualTypes.length; i < len; i++) {\\n\\t                    var type = visualTypes[i];\\n\\t                    mappings[type] && mappings[type].applyVisual(\\n\\t                        valueOrIndex, getVisual, setVisual\\n\\t                    );\\n\\t                }\\n\\t            }\\n\\t        }\\n\\t    };\\n\\n\\t    module.exports = visualSolution;\\n\\n\\n\\n/***/ },\\n/* 351 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var polygonContain = __webpack_require__(175).contain;\\n\\t    var BoundingRect = __webpack_require__(9);\\n\\n\\t    // Key of the first level is brushType: `line`, `rect`, `polygon`.\\n\\t    // Key of the second level is chart element type: `point`, `rect`.\\n\\t    // See moudule:echarts/component/helper/BrushController\\n\\t    // function param:\\n\\t    //      {Object} itemLayout fetch from data.getItemLayout(dataIndex)\\n\\t    //      {Object} selectors {point: selector, rect: selector, ...}\\n\\t    //      {Object} area {range: [[], [], ..], boudingRect}\\n\\t    // function return:\\n\\t    //      {boolean} Whether in the given brush.\\n\\t    var selector = {\\n\\t        lineX: getLineSelectors(0),\\n\\t        lineY: getLineSelectors(1),\\n\\t        rect: {\\n\\t            point: function (itemLayout, selectors, area) {\\n\\t                return area.boundingRect.contain(itemLayout[0], itemLayout[1]);\\n\\t            },\\n\\t            rect: function (itemLayout, selectors, area) {\\n\\t                return area.boundingRect.intersect(itemLayout);\\n\\t            }\\n\\t        },\\n\\t        polygon: {\\n\\t            point: function (itemLayout, selectors, area) {\\n\\t                return area.boundingRect.contain(itemLayout[0], itemLayout[1])\\n\\t                    && polygonContain(area.range, itemLayout[0], itemLayout[1]);\\n\\t            },\\n\\t            rect: function (itemLayout, selectors, area) {\\n\\t                var points = area.range;\\n\\n\\t                if (points.length <= 1) {\\n\\t                    return false;\\n\\t                }\\n\\n\\t                var x = itemLayout.x;\\n\\t                var y = itemLayout.y;\\n\\t                var width = itemLayout.width;\\n\\t                var height = itemLayout.height;\\n\\t                var p = points[0];\\n\\n\\t                if (polygonContain(points, x, y)\\n\\t                    || polygonContain(points, x + width, y)\\n\\t                    || polygonContain(points, x, y + height)\\n\\t                    || polygonContain(points, x + width, y + height)\\n\\t                    || BoundingRect.create(itemLayout).contain(p[0], p[1])\\n\\t                    || lineIntersectPolygon(x, y, x + width, y, points)\\n\\t                    || lineIntersectPolygon(x, y, x, y + height, points)\\n\\t                    || lineIntersectPolygon(x + width, y, x + width, y + height, points)\\n\\t                    || lineIntersectPolygon(x, y + height, x + width, y + height, points)\\n\\t                ) {\\n\\t                    return true;\\n\\t                }\\n\\t            }\\n\\t        }\\n\\t    };\\n\\n\\t    function getLineSelectors(xyIndex) {\\n\\t        var xy = ['x', 'y'];\\n\\t        var wh = ['width', 'height'];\\n\\n\\t        return {\\n\\t            point: function (itemLayout, selectors, area) {\\n\\t                var range = area.range;\\n\\t                var p = itemLayout[xyIndex];\\n\\t                return inLineRange(p, range);\\n\\t            },\\n\\t            rect: function (itemLayout, selectors, area) {\\n\\t                var range = area.range;\\n\\t                var layoutRange = [\\n\\t                    itemLayout[xy[xyIndex]],\\n\\t                    itemLayout[xy[xyIndex]] + itemLayout[wh[xyIndex]]\\n\\t                ];\\n\\t                layoutRange[1] < layoutRange[0] && layoutRange.reverse();\\n\\t                return inLineRange(layoutRange[0], range)\\n\\t                    || inLineRange(layoutRange[1], range)\\n\\t                    || inLineRange(range[0], layoutRange)\\n\\t                    || inLineRange(range[1], layoutRange);\\n\\t            }\\n\\t        };\\n\\t    }\\n\\n\\t    function inLineRange(p, range) {\\n\\t        return range[0] <= p && p <= range[1];\\n\\t    }\\n\\n\\t    function lineIntersectPolygon(lx, ly, l2x, l2y, points) {\\n\\t        for (var i = 0, p2 = points[points.length - 1]; i < points.length; i++) {\\n\\t            var p = points[i];\\n\\t            if (lineIntersect(lx, ly, l2x, l2y, p[0], p[1], p2[0], p2[1])) {\\n\\t                return true;\\n\\t            }\\n\\t            p2 = p;\\n\\t        }\\n\\t    }\\n\\n\\t    // Code from <http://blog.csdn.net/rickliuxiao/article/details/6259322> with some fix.\\n\\t    // See <https://en.wikipedia.org/wiki/Line%E2%80%93line_intersection>\\n\\t    function lineIntersect(a1x, a1y, a2x, a2y, b1x, b1y, b2x, b2y) {\\n\\t        var delta = determinant(a2x - a1x, b1x - b2x, a2y - a1y, b1y - b2y);\\n\\t        if (nearZero(delta)) { // parallel\\n\\t            return false;\\n\\t        }\\n\\t        var namenda = determinant(b1x - a1x, b1x - b2x, b1y - a1y, b1y - b2y) / delta;\\n\\t        if (namenda < 0 || namenda > 1) {\\n\\t            return false;\\n\\t        }\\n\\t        var miu = determinant(a2x - a1x, b1x - a1x, a2y - a1y, b1y - a1y) / delta;\\n\\t        if (miu < 0 || miu > 1) {\\n\\t            return false;\\n\\t        }\\n\\t        return true;\\n\\t    }\\n\\n\\t    function nearZero(val) {\\n\\t        return val <= (1e-6) && val >= -(1e-6);\\n\\t    }\\n\\n\\t    function determinant(v1, v2, v3, v4) {\\n\\t        return v1 * v4 - v2 * v3;\\n\\t    }\\n\\n\\t    module.exports = selector;\\n\\n\\n\\n/***/ },\\n/* 352 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var graphic = __webpack_require__(18);\\n\\t    var modelUtil = __webpack_require__(5);\\n\\t    var brushHelper = __webpack_require__(246);\\n\\n\\t    var each = zrUtil.each;\\n\\t    var indexOf = zrUtil.indexOf;\\n\\t    var curry = zrUtil.curry;\\n\\n\\t    var COORD_CONVERTS = ['dataToPoint', 'pointToData'];\\n\\n\\t    // FIXME\\n\\t    // how to genarialize to more coordinate systems.\\n\\t    var INCLUDE_FINDER_MAIN_TYPES = [\\n\\t        'grid', 'xAxis', 'yAxis', 'geo', 'graph',\\n\\t        'polar', 'radiusAxis', 'angleAxis', 'bmap'\\n\\t    ];\\n\\n\\t    /**\\n\\t     * [option in constructor]:\\n\\t     * {\\n\\t     *     Index/Id/Name of geo, xAxis, yAxis, grid: See util/model#parseFinder.\\n\\t     * }\\n\\t     *\\n\\t     *\\n\\t     * [targetInfo]:\\n\\t     *\\n\\t     * There can be multiple axes in a single targetInfo. Consider the case\\n\\t     * of `grid` component, a targetInfo represents a grid which contains one or more\\n\\t     * cartesian and one or more axes. And consider the case of parallel system,\\n\\t     * which has multiple axes in a coordinate system.\\n\\t     * Can be {\\n\\t     *     panelId: ...,\\n\\t     *     coordSys: <a representitive cartesian in grid (first cartesian by default)>,\\n\\t     *     coordSyses: all cartesians.\\n\\t     *     gridModel: <grid component>\\n\\t     *     xAxes: correspond to coordSyses on index\\n\\t     *     yAxes: correspond to coordSyses on index\\n\\t     * }\\n\\t     * or {\\n\\t     *     panelId: ...,\\n\\t     *     coordSys: <geo coord sys>\\n\\t     *     coordSyses: [<geo coord sys>]\\n\\t     *     geoModel: <geo component>\\n\\t     * }\\n\\t     *\\n\\t     *\\n\\t     * [panelOpt]:\\n\\t     *\\n\\t     * Make from targetInfo. Input to BrushController.\\n\\t     * {\\n\\t     *     panelId: ...,\\n\\t     *     rect: ...\\n\\t     * }\\n\\t     *\\n\\t     *\\n\\t     * [area]:\\n\\t     *\\n\\t     * Generated by BrushController or user input.\\n\\t     * {\\n\\t     *     panelId: Used to locate coordInfo directly. If user inpput, no panelId.\\n\\t     *     brushType: determine how to convert to/from coord('rect' or 'polygon' or 'lineX/Y').\\n\\t     *     Index/Id/Name of geo, xAxis, yAxis, grid: See util/model#parseFinder.\\n\\t     *     range: pixel range.\\n\\t     *     coordRange: representitive coord range (the first one of coordRanges).\\n\\t     *     coordRanges: <Array> coord ranges, used in multiple cartesian in one grid.\\n\\t     * }\\n\\t     */\\n\\n\\t    /**\\n\\t     * @param {Object} option contains Index/Id/Name of xAxis/yAxis/geo/grid\\n\\t     *        Each can be {number|Array.<number>}. like: {xAxisIndex: [3, 4]}\\n\\t     * @param {module:echarts/model/Global} ecModel\\n\\t     * @param {Object} [opt]\\n\\t     * @param {Array.<string>} [opt.include] include coordinate system types.\\n\\t     */\\n\\t    function BrushTargetManager(option, ecModel, opt) {\\n\\t        /**\\n\\t         * @private\\n\\t         * @type {Array.<Object>}\\n\\t         */\\n\\t        var targetInfoList = this._targetInfoList = [];\\n\\t        var info = {};\\n\\t        var foundCpts = parseFinder(ecModel, option);\\n\\n\\t        each(targetInfoBuilders, function (builder, type) {\\n\\t            if (!opt || !opt.include || indexOf(opt.include, type) >= 0) {\\n\\t                builder(foundCpts, targetInfoList, info);\\n\\t            }\\n\\t        });\\n\\t    }\\n\\n\\t    var proto = BrushTargetManager.prototype;\\n\\n\\t    proto.setOutputRanges = function (areas, ecModel) {\\n\\t        this.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\\n\\t            (area.coordRanges || (area.coordRanges = [])).push(coordRange);\\n\\t            // area.coordRange is the first of area.coordRanges\\n\\t            if (!area.coordRange) {\\n\\t                area.coordRange = coordRange;\\n\\t                // In 'category' axis, coord to pixel is not reversible, so we can not\\n\\t                // rebuild range by coordRange accrately, which may bring trouble when\\n\\t                // brushing only one item. So we use __rangeOffset to rebuilding range\\n\\t                // by coordRange. And this it only used in brush component so it is no\\n\\t                // need to be adapted to coordRanges.\\n\\t                var result = coordConvert[area.brushType](0, coordSys, coordRange);\\n\\t                area.__rangeOffset = {\\n\\t                    offset: diffProcessor[area.brushType](result.values, area.range, [1, 1]),\\n\\t                    xyMinMax: result.xyMinMax\\n\\t                };\\n\\t            }\\n\\t        });\\n\\t    };\\n\\n\\t    proto.matchOutputRanges = function (areas, ecModel, cb) {\\n\\t        each(areas, function (area) {\\n\\t            var targetInfo = this.findTargetInfo(area, ecModel);\\n\\n\\t            if (targetInfo && targetInfo !== true) {\\n\\t                zrUtil.each(\\n\\t                    targetInfo.coordSyses,\\n\\t                    function (coordSys) {\\n\\t                        var result = coordConvert[area.brushType](1, coordSys, area.range);\\n\\t                        cb(area, result.values, coordSys, ecModel);\\n\\t                    }\\n\\t                );\\n\\t            }\\n\\t        }, this);\\n\\t    };\\n\\n\\t    proto.setInputRanges = function (areas, ecModel) {\\n\\t        each(areas, function (area) {\\n\\t            var targetInfo = this.findTargetInfo(area, ecModel);\\n\\n\\t            if (true) {\\n\\t                zrUtil.assert(\\n\\t                    !targetInfo || targetInfo === true || area.coordRange,\\n\\t                    'coordRange must be specified when coord index specified.'\\n\\t                );\\n\\t                zrUtil.assert(\\n\\t                    !targetInfo || targetInfo !== true || area.range,\\n\\t                    'range must be specified in global brush.'\\n\\t                );\\n\\t            }\\n\\n\\t            area.range = area.range || [];\\n\\n\\t            // convert coordRange to global range and set panelId.\\n\\t            if (targetInfo && targetInfo !== true) {\\n\\t                area.panelId = targetInfo.panelId;\\n\\t                // (1) area.range shoule always be calculate from coordRange but does\\n\\t                // not keep its original value, for the sake of the dataZoom scenario,\\n\\t                // where area.coordRange remains unchanged but area.range may be changed.\\n\\t                // (2) Only support converting one coordRange to pixel range in brush\\n\\t                // component. So do not consider `coordRanges`.\\n\\t                // (3) About __rangeOffset, see comment above.\\n\\t                var result = coordConvert[area.brushType](0, targetInfo.coordSys, area.coordRange);\\n\\t                var rangeOffset = area.__rangeOffset;\\n\\t                area.range = rangeOffset\\n\\t                    ? diffProcessor[area.brushType](\\n\\t                        result.values,\\n\\t                        rangeOffset.offset,\\n\\t                        getScales(result.xyMinMax, rangeOffset.xyMinMax)\\n\\t                    )\\n\\t                    : result.values;\\n\\t            }\\n\\t        }, this);\\n\\t    };\\n\\n\\t    proto.makePanelOpts = function (api, getDefaultBrushType) {\\n\\t        return zrUtil.map(this._targetInfoList, function (targetInfo) {\\n\\t            var rect = targetInfo.getPanelRect();\\n\\t            return {\\n\\t                panelId: targetInfo.panelId,\\n\\t                defaultBrushType: getDefaultBrushType && getDefaultBrushType(targetInfo),\\n\\t                clipPath: brushHelper.makeRectPanelClipPath(rect),\\n\\t                isTargetByCursor: brushHelper.makeRectIsTargetByCursor(\\n\\t                    rect, api, targetInfo.coordSysModel\\n\\t                ),\\n\\t                getLinearBrushOtherExtent: brushHelper.makeLinearBrushOtherExtent(rect)\\n\\t            };\\n\\t        });\\n\\t    };\\n\\n\\t    proto.controlSeries = function (area, seriesModel, ecModel) {\\n\\t        // Check whether area is bound in coord, and series do not belong to that coord.\\n\\t        // If do not do this check, some brush (like lineX) will controll all axes.\\n\\t        var targetInfo = this.findTargetInfo(area, ecModel);\\n\\t        return targetInfo === true || (\\n\\t            targetInfo && indexOf(targetInfo.coordSyses, seriesModel.coordinateSystem) >= 0\\n\\t        );\\n\\t    };\\n\\n\\t    /**\\n\\t     * If return Object, a coord found.\\n\\t     * If reutrn true, global found.\\n\\t     * Otherwise nothing found.\\n\\t     *\\n\\t     * @param {Object} area\\n\\t     * @param {Array} targetInfoList\\n\\t     * @return {Obejct|boolean}\\n\\t     */\\n\\t    proto.findTargetInfo = function (area, ecModel) {\\n\\t        var targetInfoList = this._targetInfoList;\\n\\t        var foundCpts = parseFinder(ecModel, area);\\n\\n\\t        for (var i = 0; i < targetInfoList.length; i++) {\\n\\t            var targetInfo = targetInfoList[i];\\n\\t            var areaPanelId = area.panelId;\\n\\t            if (areaPanelId) {\\n\\t                if (targetInfo.panelId === areaPanelId) {\\n\\t                    return targetInfo;\\n\\t                }\\n\\t            }\\n\\t            else {\\n\\t                for (var i = 0; i < targetInfoMatchers.length; i++) {\\n\\t                    if (targetInfoMatchers[i](foundCpts, targetInfo)) {\\n\\t                        return targetInfo;\\n\\t                    }\\n\\t                }\\n\\t            }\\n\\t        }\\n\\n\\t        return true;\\n\\t    };\\n\\n\\t    function formatMinMax(minMax) {\\n\\t        minMax[0] > minMax[1] && minMax.reverse();\\n\\t        return minMax;\\n\\t    }\\n\\n\\t    function parseFinder(ecModel, option) {\\n\\t        return modelUtil.parseFinder(\\n\\t            ecModel, option, {includeMainTypes: INCLUDE_FINDER_MAIN_TYPES}\\n\\t        );\\n\\t    }\\n\\n\\t    var targetInfoBuilders = {\\n\\n\\t        grid: function (foundCpts, targetInfoList) {\\n\\t            var xAxisModels = foundCpts.xAxisModels;\\n\\t            var yAxisModels = foundCpts.yAxisModels;\\n\\t            var gridModels = foundCpts.gridModels;\\n\\t            // Remove duplicated.\\n\\t            var gridModelMap = zrUtil.createHashMap();\\n\\t            var xAxesHas = {};\\n\\t            var yAxesHas = {};\\n\\n\\t            if (!xAxisModels && !yAxisModels && !gridModels) {\\n\\t                return;\\n\\t            }\\n\\n\\t            each(xAxisModels, function (axisModel) {\\n\\t                var gridModel = axisModel.axis.grid.model;\\n\\t                gridModelMap.set(gridModel.id, gridModel);\\n\\t                xAxesHas[gridModel.id] = true;\\n\\t            });\\n\\t            each(yAxisModels, function (axisModel) {\\n\\t                var gridModel = axisModel.axis.grid.model;\\n\\t                gridModelMap.set(gridModel.id, gridModel);\\n\\t                yAxesHas[gridModel.id] = true;\\n\\t            });\\n\\t            each(gridModels, function (gridModel) {\\n\\t                gridModelMap.set(gridModel.id, gridModel);\\n\\t                xAxesHas[gridModel.id] = true;\\n\\t                yAxesHas[gridModel.id] = true;\\n\\t            });\\n\\n\\t            gridModelMap.each(function (gridModel) {\\n\\t                var grid = gridModel.coordinateSystem;\\n\\t                var cartesians = [];\\n\\n\\t                each(grid.getCartesians(), function (cartesian, index) {\\n\\t                    if (indexOf(xAxisModels, cartesian.getAxis('x').model) >= 0\\n\\t                        || indexOf(yAxisModels, cartesian.getAxis('y').model) >= 0\\n\\t                    ) {\\n\\t                        cartesians.push(cartesian);\\n\\t                    }\\n\\t                });\\n\\t                targetInfoList.push({\\n\\t                    panelId: 'grid--' + gridModel.id,\\n\\t                    gridModel: gridModel,\\n\\t                    coordSysModel: gridModel,\\n\\t                    // Use the first one as the representitive coordSys.\\n\\t                    coordSys: cartesians[0],\\n\\t                    coordSyses: cartesians,\\n\\t                    getPanelRect: panelRectBuilder.grid,\\n\\t                    xAxisDeclared: xAxesHas[gridModel.id],\\n\\t                    yAxisDeclared: yAxesHas[gridModel.id]\\n\\t                });\\n\\t            });\\n\\t        },\\n\\n\\t        geo: function (foundCpts, targetInfoList) {\\n\\t            each(foundCpts.geoModels, function (geoModel) {\\n\\t                var coordSys = geoModel.coordinateSystem;\\n\\t                targetInfoList.push({\\n\\t                    panelId: 'geo--' + geoModel.id,\\n\\t                    geoModel: geoModel,\\n\\t                    coordSysModel: geoModel,\\n\\t                    coordSys: coordSys,\\n\\t                    coordSyses: [coordSys],\\n\\t                    getPanelRect: panelRectBuilder.geo\\n\\t                });\\n\\t            });\\n\\t        }\\n\\t    };\\n\\n\\t    var targetInfoMatchers = [\\n\\n\\t        // grid\\n\\t        function (foundCpts, targetInfo) {\\n\\t            var xAxisModel = foundCpts.xAxisModel;\\n\\t            var yAxisModel = foundCpts.yAxisModel;\\n\\t            var gridModel = foundCpts.gridModel;\\n\\n\\t            !gridModel && xAxisModel && (gridModel = xAxisModel.axis.grid.model);\\n\\t            !gridModel && yAxisModel && (gridModel = yAxisModel.axis.grid.model);\\n\\n\\t            return gridModel && gridModel === targetInfo.gridModel;\\n\\t        },\\n\\n\\t        // geo\\n\\t        function (foundCpts, targetInfo) {\\n\\t            var geoModel = foundCpts.geoModel;\\n\\t            return geoModel && geoModel === targetInfo.geoModel;\\n\\t        }\\n\\t    ];\\n\\n\\t    var panelRectBuilder = {\\n\\n\\t        grid: function () {\\n\\t            // grid is not Transformable.\\n\\t            return this.coordSys.grid.getRect().clone();\\n\\t        },\\n\\n\\t        geo: function () {\\n\\t            var coordSys = this.coordSys;\\n\\t            var rect = coordSys.getBoundingRect().clone();\\n\\t            // geo roam and zoom transform\\n\\t            rect.applyTransform(graphic.getTransform(coordSys));\\n\\t            return rect;\\n\\t        }\\n\\t    };\\n\\n\\t    var coordConvert = {\\n\\n\\t        lineX: curry(axisConvert, 0),\\n\\n\\t        lineY: curry(axisConvert, 1),\\n\\n\\t        rect: function (to, coordSys, rangeOrCoordRange) {\\n\\t            var xminymin = coordSys[COORD_CONVERTS[to]]([rangeOrCoordRange[0][0], rangeOrCoordRange[1][0]]);\\n\\t            var xmaxymax = coordSys[COORD_CONVERTS[to]]([rangeOrCoordRange[0][1], rangeOrCoordRange[1][1]]);\\n\\t            var values = [\\n\\t                formatMinMax([xminymin[0], xmaxymax[0]]),\\n\\t                formatMinMax([xminymin[1], xmaxymax[1]])\\n\\t            ];\\n\\t            return {values: values, xyMinMax: values};\\n\\t        },\\n\\n\\t        polygon: function (to, coordSys, rangeOrCoordRange) {\\n\\t            var xyMinMax = [[Infinity, -Infinity], [Infinity, -Infinity]];\\n\\t            var values = zrUtil.map(rangeOrCoordRange, function (item) {\\n\\t                var p = coordSys[COORD_CONVERTS[to]](item);\\n\\t                xyMinMax[0][0] = Math.min(xyMinMax[0][0], p[0]);\\n\\t                xyMinMax[1][0] = Math.min(xyMinMax[1][0], p[1]);\\n\\t                xyMinMax[0][1] = Math.max(xyMinMax[0][1], p[0]);\\n\\t                xyMinMax[1][1] = Math.max(xyMinMax[1][1], p[1]);\\n\\t                return p;\\n\\t            });\\n\\t            return {values: values, xyMinMax: xyMinMax};\\n\\t        }\\n\\t    };\\n\\n\\t    function axisConvert(axisNameIndex, to, coordSys, rangeOrCoordRange) {\\n\\t        if (true) {\\n\\t            zrUtil.assert(\\n\\t                coordSys.type === 'cartesian2d',\\n\\t                'lineX/lineY brush is available only in cartesian2d.'\\n\\t            );\\n\\t        }\\n\\n\\t        var axis = coordSys.getAxis(['x', 'y'][axisNameIndex]);\\n\\t        var values = formatMinMax(zrUtil.map([0, 1], function (i) {\\n\\t            return to\\n\\t                ? axis.coordToData(axis.toLocalCoord(rangeOrCoordRange[i]))\\n\\t                : axis.toGlobalCoord(axis.dataToCoord(rangeOrCoordRange[i]));\\n\\t        }));\\n\\t        var xyMinMax = [];\\n\\t        xyMinMax[axisNameIndex] = values;\\n\\t        xyMinMax[1 - axisNameIndex] = [NaN, NaN];\\n\\n\\t        return {values: values, xyMinMax: xyMinMax};\\n\\t    }\\n\\n\\t    var diffProcessor = {\\n\\t        lineX: curry(axisDiffProcessor, 0),\\n\\n\\t        lineY: curry(axisDiffProcessor, 1),\\n\\n\\t        rect: function (values, refer, scales) {\\n\\t            return [\\n\\t                [values[0][0] - scales[0] * refer[0][0], values[0][1] - scales[0] * refer[0][1]],\\n\\t                [values[1][0] - scales[1] * refer[1][0], values[1][1] - scales[1] * refer[1][1]]\\n\\t            ];\\n\\t        },\\n\\n\\t        polygon: function (values, refer, scales) {\\n\\t            return zrUtil.map(values, function (item, idx) {\\n\\t                return [item[0] - scales[0] * refer[idx][0], item[1] - scales[1] * refer[idx][1]];\\n\\t            });\\n\\t        }\\n\\t    };\\n\\n\\t    function axisDiffProcessor(axisNameIndex, values, refer, scales) {\\n\\t        return [\\n\\t            values[0] - scales[axisNameIndex] * refer[0],\\n\\t            values[1] - scales[axisNameIndex] * refer[1]\\n\\t        ];\\n\\t    }\\n\\n\\t    // We have to process scale caused by dataZoom manually,\\n\\t    // although it might be not accurate.\\n\\t    function getScales(xyMinMaxCurr, xyMinMaxOrigin) {\\n\\t        var sizeCurr = getSize(xyMinMaxCurr);\\n\\t        var sizeOrigin = getSize(xyMinMaxOrigin);\\n\\t        var scales = [sizeCurr[0] / sizeOrigin[0], sizeCurr[1] / sizeOrigin[1]];\\n\\t        isNaN(scales[0]) && (scales[0] = 1);\\n\\t        isNaN(scales[1]) && (scales[1] = 1);\\n\\t        return scales;\\n\\t    }\\n\\n\\t    function getSize(xyMinMax) {\\n\\t        return xyMinMax\\n\\t            ? [xyMinMax[0][1] - xyMinMax[0][0], xyMinMax[1][1] - xyMinMax[1][0]]\\n\\t            : [NaN, NaN];\\n\\t    }\\n\\n\\t    module.exports = BrushTargetManager;\\n\\n\\n/***/ },\\n/* 353 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * @file Brush model\\n\\t */\\n\\n\\n\\t    var echarts = __webpack_require__(1);\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var visualSolution = __webpack_require__(350);\\n\\t    var Model = __webpack_require__(12);\\n\\n\\t    var DEFAULT_OUT_OF_BRUSH_COLOR = ['#ddd'];\\n\\n\\t    var BrushModel = echarts.extendComponentModel({\\n\\n\\t        type: 'brush',\\n\\n\\t        dependencies: ['geo', 'grid', 'xAxis', 'yAxis', 'parallel', 'series'],\\n\\n\\t        /**\\n\\t         * @protected\\n\\t         */\\n\\t        defaultOption: {\\n\\t            // inBrush: null,\\n\\t            // outOfBrush: null,\\n\\t            toolbox: null,          // Default value see preprocessor.\\n\\t            brushLink: null,        // Series indices array, broadcast using dataIndex.\\n\\t                                    // or 'all', which means all series. 'none' or null means no series.\\n\\t            seriesIndex: 'all',     // seriesIndex array, specify series controlled by this brush component.\\n\\t            geoIndex: null,         //\\n\\t            xAxisIndex: null,\\n\\t            yAxisIndex: null,\\n\\n\\t            brushType: 'rect',      // Default brushType, see BrushController.\\n\\t            brushMode: 'single',    // Default brushMode, 'single' or 'multiple'\\n\\t            transformable: true,    // Default transformable.\\n\\t            brushStyle: {           // Default brushStyle\\n\\t                borderWidth: 1,\\n\\t                color: 'rgba(120,140,180,0.3)',\\n\\t                borderColor: 'rgba(120,140,180,0.8)'\\n\\t            },\\n\\n\\t            throttleType: 'fixRate',// Throttle in brushSelected event. 'fixRate' or 'debounce'.\\n\\t                                    // If null, no throttle. Valid only in the first brush component\\n\\t            throttleDelay: 0,       // Unit: ms, 0 means every event will be triggered.\\n\\n\\t            // FIXME\\n\\t            // 试验效果\\n\\t            removeOnClick: true,\\n\\n\\t            z: 10000\\n\\t        },\\n\\n\\t        /**\\n\\t         * @readOnly\\n\\t         * @type {Array.<Object>}\\n\\t         */\\n\\t        areas: [],\\n\\n\\t        /**\\n\\t         * Current activated brush type.\\n\\t         * If null, brush is inactived.\\n\\t         * see module:echarts/component/helper/BrushController\\n\\t         * @readOnly\\n\\t         * @type {string}\\n\\t         */\\n\\t        brushType: null,\\n\\n\\t        /**\\n\\t         * Current brush opt.\\n\\t         * see module:echarts/component/helper/BrushController\\n\\t         * @readOnly\\n\\t         * @type {Object}\\n\\t         */\\n\\t        brushOption: {},\\n\\n\\t        /**\\n\\t         * @readOnly\\n\\t         * @type {Array.<Object>}\\n\\t         */\\n\\t        coordInfoList: [],\\n\\n\\t        optionUpdated: function (newOption, isInit) {\\n\\t            var thisOption = this.option;\\n\\n\\t            !isInit && visualSolution.replaceVisualOption(\\n\\t                thisOption, newOption, ['inBrush', 'outOfBrush']\\n\\t            );\\n\\n\\t            thisOption.inBrush = thisOption.inBrush || {};\\n\\t            // Always give default visual, consider setOption at the second time.\\n\\t            thisOption.outOfBrush = thisOption.outOfBrush || {color: DEFAULT_OUT_OF_BRUSH_COLOR};\\n\\t        },\\n\\n\\t        /**\\n\\t         * If ranges is null/undefined, range state remain.\\n\\t         *\\n\\t         * @param {Array.<Object>} [ranges]\\n\\t         */\\n\\t        setAreas: function (areas) {\\n\\t            if (true) {\\n\\t                zrUtil.assert(zrUtil.isArray(areas));\\n\\t                zrUtil.each(areas, function (area) {\\n\\t                    zrUtil.assert(area.brushType, 'Illegal areas');\\n\\t                });\\n\\t            }\\n\\n\\t            // If ranges is null/undefined, range state remain.\\n\\t            // This helps user to dispatchAction({type: 'brush'}) with no areas\\n\\t            // set but just want to get the current brush select info from a `brush` event.\\n\\t            if (!areas) {\\n\\t                return;\\n\\t            }\\n\\n\\t            this.areas = zrUtil.map(areas, function (area) {\\n\\t                return generateBrushOption(this.option, area);\\n\\t            }, this);\\n\\t        },\\n\\n\\t        /**\\n\\t         * see module:echarts/component/helper/BrushController\\n\\t         * @param {Object} brushOption\\n\\t         */\\n\\t        setBrushOption: function (brushOption) {\\n\\t            this.brushOption = generateBrushOption(this.option, brushOption);\\n\\t            this.brushType = this.brushOption.brushType;\\n\\t        }\\n\\n\\t    });\\n\\n\\t    function generateBrushOption(option, brushOption) {\\n\\t        return zrUtil.merge(\\n\\t            {\\n\\t                brushType: option.brushType,\\n\\t                brushMode: option.brushMode,\\n\\t                transformable: option.transformable,\\n\\t                brushStyle: new Model(option.brushStyle).getItemStyle(),\\n\\t                removeOnClick: option.removeOnClick,\\n\\t                z: option.z\\n\\t            },\\n\\t            brushOption,\\n\\t            true\\n\\t        );\\n\\t    }\\n\\n\\t    module.exports = BrushModel;\\n\\n\\n\\n/***/ },\\n/* 354 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var BrushController = __webpack_require__(245);\\n\\t    var echarts = __webpack_require__(1);\\n\\n\\t    module.exports = echarts.extendComponentView({\\n\\n\\t        type: 'brush',\\n\\n\\t        init: function (ecModel, api) {\\n\\n\\t            /**\\n\\t             * @readOnly\\n\\t             * @type {module:echarts/model/Global}\\n\\t             */\\n\\t            this.ecModel = ecModel;\\n\\n\\t            /**\\n\\t             * @readOnly\\n\\t             * @type {module:echarts/ExtensionAPI}\\n\\t             */\\n\\t            this.api = api;\\n\\n\\t            /**\\n\\t             * @readOnly\\n\\t             * @type {module:echarts/component/brush/BrushModel}\\n\\t             */\\n\\t            this.model;\\n\\n\\t            /**\\n\\t             * @private\\n\\t             * @type {module:echarts/component/helper/BrushController}\\n\\t             */\\n\\t            (this._brushController = new BrushController(api.getZr()))\\n\\t                .on('brush', zrUtil.bind(this._onBrush, this))\\n\\t                .mount();\\n\\t        },\\n\\n\\t        /**\\n\\t         * @override\\n\\t         */\\n\\t        render: function (brushModel) {\\n\\t            this.model = brushModel;\\n\\t            return updateController.apply(this, arguments);\\n\\t        },\\n\\n\\t        /**\\n\\t         * @override\\n\\t         */\\n\\t        updateView: updateController,\\n\\n\\t        /**\\n\\t         * @override\\n\\t         */\\n\\t        updateLayout: updateController,\\n\\n\\t        /**\\n\\t         * @override\\n\\t         */\\n\\t        updateVisual: updateController,\\n\\n\\t        /**\\n\\t         * @override\\n\\t         */\\n\\t        dispose: function () {\\n\\t            this._brushController.dispose();\\n\\t        },\\n\\n\\t        /**\\n\\t         * @private\\n\\t         */\\n\\t        _onBrush: function (areas, opt) {\\n\\t            var modelId = this.model.id;\\n\\n\\t            this.model.brushTargetManager.setOutputRanges(areas, this.ecModel);\\n\\n\\t            // Action is not dispatched on drag end, because the drag end\\n\\t            // emits the same params with the last drag move event, and\\n\\t            // may have some delay when using touch pad, which makes\\n\\t            // animation not smooth (when using debounce).\\n\\t            (!opt.isEnd || opt.removeOnClick) && this.api.dispatchAction({\\n\\t                type: 'brush',\\n\\t                brushId: modelId,\\n\\t                areas: zrUtil.clone(areas),\\n\\t                $from: modelId\\n\\t            });\\n\\t        }\\n\\n\\t    });\\n\\n\\t    function updateController(brushModel, ecModel, api, payload) {\\n\\t        // Do not update controller when drawing.\\n\\t        (!payload || payload.$from !== brushModel.id) && this._brushController\\n\\t            .setPanels(brushModel.brushTargetManager.makePanelOpts(api))\\n\\t            .enableBrush(brushModel.brushOption)\\n\\t            .updateCovers(brushModel.areas.slice());\\n\\t    }\\n\\n\\n\\n/***/ },\\n/* 355 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * @file Brush action\\n\\t */\\n\\n\\n\\t    var echarts = __webpack_require__(1);\\n\\n\\t    /**\\n\\t     * payload: {\\n\\t     *      brushIndex: number, or,\\n\\t     *      brushId: string, or,\\n\\t     *      brushName: string,\\n\\t     *      globalRanges: Array\\n\\t     * }\\n\\t     */\\n\\t    echarts.registerAction(\\n\\t         {type: 'brush', event: 'brush', update: 'updateView'},\\n\\t        function (payload, ecModel) {\\n\\t            ecModel.eachComponent({mainType: 'brush', query: payload}, function (brushModel) {\\n\\t                brushModel.setAreas(payload.areas);\\n\\t            });\\n\\t        }\\n\\t    );\\n\\n\\t    /**\\n\\t     * payload: {\\n\\t     *      brushComponents: [\\n\\t     *          {\\n\\t     *              brushId,\\n\\t     *              brushIndex,\\n\\t     *              brushName,\\n\\t     *              series: [\\n\\t     *                  {\\n\\t     *                      seriesId,\\n\\t     *                      seriesIndex,\\n\\t     *                      seriesName,\\n\\t     *                      rawIndices: [21, 34, ...]\\n\\t     *                  },\\n\\t     *                  ...\\n\\t     *              ]\\n\\t     *          },\\n\\t     *          ...\\n\\t     *      ]\\n\\t     * }\\n\\t     */\\n\\t    echarts.registerAction(\\n\\t         {type: 'brushSelect', event: 'brushSelected', update: 'none'},\\n\\t        function () {}\\n\\t    );\\n\\n\\n/***/ },\\n/* 356 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t'use strict';\\n\\n\\n\\t    var featureManager = __webpack_require__(357);\\n\\t    var zrUtil = __webpack_require__(4);\\n\\n\\t    function Brush(model, ecModel, api) {\\n\\t        this.model = model;\\n\\t        this.ecModel = ecModel;\\n\\t        this.api = api;\\n\\n\\t        /**\\n\\t         * @private\\n\\t         * @type {string}\\n\\t         */\\n\\t        this._brushType;\\n\\n\\t        /**\\n\\t         * @private\\n\\t         * @type {string}\\n\\t         */\\n\\t        this._brushMode;\\n\\t    }\\n\\n\\t    Brush.defaultOption = {\\n\\t        show: true,\\n\\t        type: ['rect', 'polygon', 'lineX', 'lineY', 'keep', 'clear'],\\n\\t        icon: {\\n\\t            rect: 'M7.3,34.7 M0.4,10V-0.2h9.8 M89.6,10V-0.2h-9.8 M0.4,60v10.2h9.8 M89.6,60v10.2h-9.8 M12.3,22.4V10.5h13.1 M33.6,10.5h7.8 M49.1,10.5h7.8 M77.5,22.4V10.5h-13 M12.3,31.1v8.2 M77.7,31.1v8.2 M12.3,47.6v11.9h13.1 M33.6,59.5h7.6 M49.1,59.5 h7.7 M77.5,47.6v11.9h-13', // jshint ignore:line\\n\\t            polygon: 'M55.2,34.9c1.7,0,3.1,1.4,3.1,3.1s-1.4,3.1-3.1,3.1 s-3.1-1.4-3.1-3.1S53.5,34.9,55.2,34.9z M50.4,51c1.7,0,3.1,1.4,3.1,3.1c0,1.7-1.4,3.1-3.1,3.1c-1.7,0-3.1-1.4-3.1-3.1 C47.3,52.4,48.7,51,50.4,51z M55.6,37.1l1.5-7.8 M60.1,13.5l1.6-8.7l-7.8,4 M59,19l-1,5.3 M24,16.1l6.4,4.9l6.4-3.3 M48.5,11.6 l-5.9,3.1 M19.1,12.8L9.7,5.1l1.1,7.7 M13.4,29.8l1,7.3l6.6,1.6 M11.6,18.4l1,6.1 M32.8,41.9 M26.6,40.4 M27.3,40.2l6.1,1.6 M49.9,52.1l-5.6-7.6l-4.9-1.2', // jshint ignore:line\\n\\t            lineX: 'M15.2,30 M19.7,15.6V1.9H29 M34.8,1.9H40.4 M55.3,15.6V1.9H45.9 M19.7,44.4V58.1H29 M34.8,58.1H40.4 M55.3,44.4 V58.1H45.9 M12.5,20.3l-9.4,9.6l9.6,9.8 M3.1,29.9h16.5 M62.5,20.3l9.4,9.6L62.3,39.7 M71.9,29.9H55.4', // jshint ignore:line\\n\\t            lineY: 'M38.8,7.7 M52.7,12h13.2v9 M65.9,26.6V32 M52.7,46.3h13.2v-9 M24.9,12H11.8v9 M11.8,26.6V32 M24.9,46.3H11.8v-9 M48.2,5.1l-9.3-9l-9.4,9.2 M38.9-3.9V12 M48.2,53.3l-9.3,9l-9.4-9.2 M38.9,62.3V46.4', // jshint ignore:line\\n\\t            keep: 'M4,10.5V1h10.3 M20.7,1h6.1 M33,1h6.1 M55.4,10.5V1H45.2 M4,17.3v6.6 M55.6,17.3v6.6 M4,30.5V40h10.3 M20.7,40 h6.1 M33,40h6.1 M55.4,30.5V40H45.2 M21,18.9h62.9v48.6H21V18.9z', // jshint ignore:line\\n\\t            clear: 'M22,14.7l30.9,31 M52.9,14.7L22,45.7 M4.7,16.8V4.2h13.1 M26,4.2h7.8 M41.6,4.2h7.8 M70.3,16.8V4.2H57.2 M4.7,25.9v8.6 M70.3,25.9v8.6 M4.7,43.2v12.6h13.1 M26,55.8h7.8 M41.6,55.8h7.8 M70.3,43.2v12.6H57.2' // jshint ignore:line\\n\\t        },\\n\\t        title: {\\n\\t            rect: '矩形选择',\\n\\t            polygon: '圈选',\\n\\t            lineX: '横向选择',\\n\\t            lineY: '纵向选择',\\n\\t            keep: '保持选择',\\n\\t            clear: '清除选择'\\n\\t        }\\n\\t    };\\n\\n\\t    var proto = Brush.prototype;\\n\\n\\t    proto.render =\\n\\t    proto.updateView =\\n\\t    proto.updateLayout = function (featureModel, ecModel, api) {\\n\\t        var brushType;\\n\\t        var brushMode;\\n\\t        var isBrushed;\\n\\n\\t        ecModel.eachComponent({mainType: 'brush'}, function (brushModel) {\\n\\t            brushType = brushModel.brushType;\\n\\t            brushMode = brushModel.brushOption.brushMode || 'single';\\n\\t            isBrushed |= brushModel.areas.length;\\n\\t        });\\n\\t        this._brushType = brushType;\\n\\t        this._brushMode = brushMode;\\n\\n\\t        zrUtil.each(featureModel.get('type', true), function (type) {\\n\\t            featureModel.setIconStatus(\\n\\t                type,\\n\\t                (\\n\\t                    type === 'keep'\\n\\t                    ? brushMode === 'multiple'\\n\\t                    : type === 'clear'\\n\\t                    ? isBrushed\\n\\t                    : type === brushType\\n\\t                ) ? 'emphasis' : 'normal'\\n\\t            );\\n\\t        });\\n\\t    };\\n\\n\\t    proto.getIcons = function () {\\n\\t        var model = this.model;\\n\\t        var availableIcons = model.get('icon', true);\\n\\t        var icons = {};\\n\\t        zrUtil.each(model.get('type', true), function (type) {\\n\\t            if (availableIcons[type]) {\\n\\t                icons[type] = availableIcons[type];\\n\\t            }\\n\\t        });\\n\\t        return icons;\\n\\t    };\\n\\n\\t    proto.onclick = function (ecModel, api, type) {\\n\\t        var api = this.api;\\n\\t        var brushType = this._brushType;\\n\\t        var brushMode = this._brushMode;\\n\\n\\t        if (type === 'clear') {\\n\\t            // Trigger parallel action firstly\\n\\t            api.dispatchAction({\\n\\t                type: 'axisAreaSelect',\\n\\t                intervals: []\\n\\t            });\\n\\n\\t            api.dispatchAction({\\n\\t                type: 'brush',\\n\\t                command: 'clear',\\n\\t                // Clear all areas of all brush components.\\n\\t                areas: []\\n\\t            });\\n\\t        }\\n\\t        else {\\n\\t            api.dispatchAction({\\n\\t                type: 'takeGlobalCursor',\\n\\t                key: 'brush',\\n\\t                brushOption: {\\n\\t                    brushType: type === 'keep'\\n\\t                        ? brushType\\n\\t                        : (brushType === type ? false : type),\\n\\t                    brushMode: type === 'keep'\\n\\t                        ? (brushMode === 'multiple' ? 'single' : 'multiple')\\n\\t                        : brushMode\\n\\t                }\\n\\t            });\\n\\t        }\\n\\t    };\\n\\n\\t    featureManager.register('brush', Brush);\\n\\n\\t    module.exports = Brush;\\n\\n\\n/***/ },\\n/* 357 */\\n/***/ function(module, exports) {\\n\\n\\t'use strict';\\n\\n\\n\\t    var features = {};\\n\\n\\t    module.exports = {\\n\\t        register: function (name, ctor) {\\n\\t            features[name] = ctor;\\n\\t        },\\n\\n\\t        get: function (name) {\\n\\t            return features[name];\\n\\t        }\\n\\t    };\\n\\n\\n/***/ },\\n/* 358 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t'use strict';\\n\\t/**\\n\\t * @file calendar.js\\n\\t * @author dxh\\n\\t */\\n\\n\\n\\n\\t    __webpack_require__(359);\\n\\t    __webpack_require__(360);\\n\\t    __webpack_require__(361);\\n\\n\\n\\n\\n/***/ },\\n/* 359 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t'use strict';\\n\\n\\n\\t    var layout = __webpack_require__(71);\\n\\t    var numberUtil = __webpack_require__(7);\\n\\t    var zrUtil = __webpack_require__(4);\\n\\n\\t    // (24*60*60*1000)\\n\\t    var ONE_DAY = 86400000;\\n\\n\\t    /**\\n\\t     * Calendar\\n\\t     *\\n\\t     * @constructor\\n\\t     *\\n\\t     * @param {Object} calendarModel calendarModel\\n\\t     * @param {Object} ecModel       ecModel\\n\\t     * @param {Object} api           api\\n\\t     */\\n\\t    function Calendar(calendarModel, ecModel, api) {\\n\\t        this._model = calendarModel;\\n\\t    }\\n\\n\\t    Calendar.prototype = {\\n\\n\\t        constructor: Calendar,\\n\\n\\t        type: 'calendar',\\n\\n\\t        dimensions: ['time', 'value'],\\n\\n\\t        // Required in createListFromData\\n\\t        getDimensionsInfo: function () {\\n\\t            return [{name: 'time', type: 'time'}];\\n\\t        },\\n\\n\\t        getRangeInfo: function () {\\n\\t            return this._rangeInfo;\\n\\t        },\\n\\n\\t        getModel: function () {\\n\\t            return this._model;\\n\\t        },\\n\\n\\t        getRect: function () {\\n\\t            return this._rect;\\n\\t        },\\n\\n\\t        getCellWidth: function () {\\n\\t            return this._sw;\\n\\t        },\\n\\n\\t        getCellHeight: function () {\\n\\t            return this._sh;\\n\\t        },\\n\\n\\t        getOrient: function () {\\n\\t            return this._orient;\\n\\t        },\\n\\n\\t        /**\\n\\t         * getFirstDayOfWeek\\n\\t         *\\n\\t         * @example\\n\\t         *     0 : start at Sunday\\n\\t         *     1 : start at Monday\\n\\t         *\\n\\t         * @return {number}\\n\\t         */\\n\\t        getFirstDayOfWeek: function () {\\n\\t            return this._firstDayOfWeek;\\n\\t        },\\n\\n\\t        /**\\n\\t         * get date info\\n\\t         *\\n\\t         * @param  {string|number} date date\\n\\t         * @return {Object}      info\\n\\t         */\\n\\t        getDateInfo: function (date) {\\n\\n\\t            date = numberUtil.parseDate(date);\\n\\n\\t            var y = date.getFullYear();\\n\\n\\t            var m = date.getMonth() + 1;\\n\\t            m = m < 10 ? '0' + m : m;\\n\\n\\t            var d = date.getDate();\\n\\t            d = d < 10 ? '0' + d : d;\\n\\n\\t            var day = date.getDay();\\n\\n\\t            day = Math.abs((day + 7 - this.getFirstDayOfWeek()) % 7);\\n\\n\\t            return {\\n\\t                y: y,\\n\\t                m: m,\\n\\t                d: d,\\n\\t                day: day,\\n\\t                time: date.getTime(),\\n\\t                formatedDate: y + '-' + m + '-' + d,\\n\\t                date: date\\n\\t            };\\n\\t        },\\n\\n\\t        getNextNDay: function (date, n) {\\n\\t            n = n || 0;\\n\\t            if (n === 0) {\\n\\t                return this.getDateInfo(date);\\n\\t            }\\n\\n\\t            var time = this.getDateInfo(date).time;\\n\\n\\t            return this.getDateInfo(time + ONE_DAY * n);\\n\\t        },\\n\\n\\t        update: function (ecModel, api) {\\n\\n\\t            this._firstDayOfWeek = this._model.getModel('dayLabel').get('firstDay');\\n\\t            this._orient = this._model.get('orient');\\n\\t            this._lineWidth = this._model.getModel('itemStyle.normal').getItemStyle().lineWidth || 0;\\n\\n\\n\\t            this._rangeInfo = this._getRangeInfo(this._initRangeOption());\\n\\t            var weeks = this._rangeInfo.weeks || 1;\\n\\t            var whNames = ['width', 'height'];\\n\\t            var cellSize = this._model.get('cellSize').slice();\\n\\t            var layoutParams = this._model.getBoxLayoutParams();\\n\\t            var cellNumbers = this._orient === 'horizontal' ? [weeks, 7] : [7, weeks];\\n\\n\\t            zrUtil.each([0, 1], function (idx) {\\n\\t                if (cellSizeSpecified(cellSize, idx)) {\\n\\t                    layoutParams[whNames[idx]] = cellSize[idx] * cellNumbers[idx];\\n\\t                }\\n\\t            });\\n\\n\\t            var whGlobal = {\\n\\t                width: api.getWidth(),\\n\\t                height: api.getHeight()\\n\\t            };\\n\\t            var calendarRect = this._rect = layout.getLayoutRect(layoutParams, whGlobal);\\n\\n\\t            zrUtil.each([0, 1], function (idx) {\\n\\t                if (!cellSizeSpecified(cellSize, idx)) {\\n\\t                    cellSize[idx] = calendarRect[whNames[idx]] / cellNumbers[idx];\\n\\t                }\\n\\t            });\\n\\n\\t            function cellSizeSpecified(cellSize, idx) {\\n\\t                return cellSize[idx] != null && cellSize[idx] !== 'auto';\\n\\t            }\\n\\n\\t            this._sw = cellSize[0];\\n\\t            this._sh = cellSize[1];\\n\\t        },\\n\\n\\n\\t        /**\\n\\t         * Convert a time data(time, value) item to (x, y) point.\\n\\t         *\\n\\t         * @override\\n\\t         * @param  {Array|number} data data\\n\\t         * @param  {boolean} [clamp=true] out of range\\n\\t         * @return {Array} point\\n\\t         */\\n\\t        dataToPoint: function (data, clamp) {\\n\\t            zrUtil.isArray(data) && (data = data[0]);\\n\\t            clamp == null && (clamp = true);\\n\\n\\t            var dayInfo = this.getDateInfo(data);\\n\\t            var range = this._rangeInfo;\\n\\t            var date = dayInfo.formatedDate;\\n\\n\\t            // if not in range return [NaN, NaN]\\n\\t            if (clamp && !(dayInfo.time >= range.start.time && dayInfo.time <= range.end.time)) {\\n\\t                return [NaN, NaN];\\n\\t            }\\n\\n\\t            var week = dayInfo.day;\\n\\t            var nthWeek = this._getRangeInfo([range.start.time, date]).weeks;\\n\\n\\t            if (this._orient === 'vertical') {\\n\\t                return [\\n\\t                    this._rect.x + week * this._sw + this._sw / 2,\\n\\t                    this._rect.y + (nthWeek - 1) * this._sh + this._sh / 2\\n\\t                ];\\n\\n\\t            }\\n\\n\\t            return [\\n\\t                this._rect.x + (nthWeek - 1) * this._sw + this._sw / 2,\\n\\t                this._rect.y + week * this._sh + this._sh / 2\\n\\t            ];\\n\\n\\t        },\\n\\n\\t        /**\\n\\t         * Convert a (x, y) point to time data\\n\\t         *\\n\\t         * @override\\n\\t         * @param  {string} point point\\n\\t         * @return {string}       data\\n\\t         */\\n\\t        pointToData: function (point) {\\n\\n\\t            var date = this.pointToDate(point);\\n\\n\\t            return date && date.time;\\n\\t        },\\n\\n\\t        /**\\n\\t         * Convert a time date item to (x, y) four point.\\n\\t         *\\n\\t         * @param  {Array} data  date[0] is date\\n\\t         * @param  {boolean} [clamp=true]  out of range\\n\\t         * @return {Object}       point\\n\\t         */\\n\\t        dataToRect: function (data, clamp) {\\n\\t            var point = this.dataToPoint(data, clamp);\\n\\n\\t            return {\\n\\t                contentShape: {\\n\\t                    x: point[0] - (this._sw - this._lineWidth) / 2,\\n\\t                    y: point[1] - (this._sh - this._lineWidth) / 2,\\n\\t                    width: this._sw - this._lineWidth,\\n\\t                    height: this._sh - this._lineWidth\\n\\t                },\\n\\n\\t                center: point,\\n\\n\\t                tl: [\\n\\t                    point[0] - this._sw / 2,\\n\\t                    point[1] - this._sh / 2\\n\\t                ],\\n\\n\\t                tr: [\\n\\t                    point[0] + this._sw / 2,\\n\\t                    point[1] - this._sh / 2\\n\\t                ],\\n\\n\\t                br: [\\n\\t                    point[0] + this._sw / 2,\\n\\t                    point[1] + this._sh / 2\\n\\t                ],\\n\\n\\t                bl: [\\n\\t                    point[0] - this._sw / 2,\\n\\t                    point[1] + this._sh / 2\\n\\t                ]\\n\\n\\t            };\\n\\t        },\\n\\n\\t        /**\\n\\t         * Convert a (x, y) point to time date\\n\\t         *\\n\\t         * @param  {string} point point\\n\\t         * @return {Object}       date\\n\\t         */\\n\\t        pointToDate: function (point) {\\n\\t            var nthX = Math.floor((point[0] - this._rect.x) / this._sw) + 1;\\n\\t            var nthY = Math.floor((point[1] - this._rect.y) / this._sh) + 1;\\n\\t            var range = this._rangeInfo.range;\\n\\n\\t            if (this._orient === 'vertical') {\\n\\t                return this._getDateByWeeksAndDay(nthY, nthX - 1, range);\\n\\t            }\\n\\n\\t            return this._getDateByWeeksAndDay(nthX, nthY - 1, range);\\n\\t        },\\n\\n\\t        /**\\n\\t         * @inheritDoc\\n\\t         */\\n\\t        convertToPixel: zrUtil.curry(doConvert, 'dataToPoint'),\\n\\n\\t        /**\\n\\t         * @inheritDoc\\n\\t         */\\n\\t        convertFromPixel: zrUtil.curry(doConvert, 'pointToData'),\\n\\n\\t        /**\\n\\t         * initRange\\n\\t         *\\n\\t         * @private\\n\\t         * @return {Array} [start, end]\\n\\t         */\\n\\t        _initRangeOption: function () {\\n\\t            var range = this._model.get('range');\\n\\n\\t            var rg = range;\\n\\n\\t            if (zrUtil.isArray(rg) && rg.length === 1) {\\n\\t                rg = rg[0];\\n\\t            }\\n\\n\\t            if (/^\\\\d{4}$/.test(rg)) {\\n\\t                range = [rg + '-01-01', rg + '-12-31'];\\n\\t            }\\n\\n\\t            if (/^\\\\d{4}[\\\\/|-]\\\\d{1,2}$/.test(rg)) {\\n\\n\\t                var start = this.getDateInfo(rg);\\n\\t                var firstDay = start.date;\\n\\t                firstDay.setMonth(firstDay.getMonth() + 1);\\n\\n\\t                var end = this.getNextNDay(firstDay, -1);\\n\\t                range = [start.formatedDate, end.formatedDate];\\n\\t            }\\n\\n\\t            if (/^\\\\d{4}[\\\\/|-]\\\\d{1,2}[\\\\/|-]\\\\d{1,2}$/.test(rg)) {\\n\\t                range = [rg, rg];\\n\\t            }\\n\\n\\t            var tmp = this._getRangeInfo(range);\\n\\n\\t            if (tmp.start.time > tmp.end.time) {\\n\\t                range.reverse();\\n\\t            }\\n\\n\\t            return range;\\n\\t        },\\n\\n\\t        /**\\n\\t         * range info\\n\\t         *\\n\\t         * @private\\n\\t         * @param  {Array} range range ['2017-01-01', '2017-07-08']\\n\\t         * @return {Object}       obj\\n\\t         */\\n\\t        _getRangeInfo: function (range) {\\n\\n\\t            var start = this.getDateInfo(range[0]);\\n\\t            var end = this.getDateInfo(range[1]);\\n\\n\\t            var allDay = Math.floor(end.time / ONE_DAY) - Math.floor(start.time / ONE_DAY) + 1;\\n\\n\\t            var weeks = Math.floor((allDay + start.day + 6) / 7);\\n\\n\\t            return {\\n\\t                range: [start.formatedDate, end.formatedDate],\\n\\t                start: start,\\n\\t                end: end,\\n\\t                allDay: allDay,\\n\\t                weeks: weeks,\\n\\t                fweek: start.day,\\n\\t                lweek: end.day\\n\\t            };\\n\\t        },\\n\\n\\t        /**\\n\\t         * get date by nthWeeks and week day in range\\n\\t         *\\n\\t         * @private\\n\\t         * @param  {number} nthWeek the week\\n\\t         * @param  {number} day   the week day\\n\\t         * @param  {Array} range [d1, d2]\\n\\t         * @return {Object}\\n\\t         */\\n\\t        _getDateByWeeksAndDay: function (nthWeek, day, range) {\\n\\t            var rangeInfo = this._getRangeInfo(range);\\n\\n\\t            if (nthWeek > rangeInfo.weeks\\n\\t                || (nthWeek === 0 && day < rangeInfo.fweek)\\n\\t                || (nthWeek === rangeInfo.weeks && day > rangeInfo.lweek)\\n\\t            ) {\\n\\t                return false;\\n\\t            }\\n\\n\\t            var nthDay = (nthWeek - 1) * 7 - rangeInfo.fweek + day;\\n\\n\\t            var time = rangeInfo.start.time + nthDay * ONE_DAY;\\n\\n\\t            return this.getDateInfo(time);\\n\\n\\t        }\\n\\t    };\\n\\n\\t    Calendar.dimensions =  Calendar.prototype.dimensions;\\n\\n\\t    Calendar.getDimensionsInfo =  Calendar.prototype.getDimensionsInfo;\\n\\n\\t    Calendar.create = function (ecModel, api) {\\n\\t        var calendarList = [];\\n\\n\\t        ecModel.eachComponent('calendar', function (calendarModel) {\\n\\t            var calendar = new Calendar(calendarModel, ecModel, api);\\n\\t            calendarList.push(calendar);\\n\\t            calendarModel.coordinateSystem = calendar;\\n\\t        });\\n\\n\\t        ecModel.eachSeries(function (calendarSeries) {\\n\\t            if (calendarSeries.get('coordinateSystem') === 'calendar') {\\n\\t                // Inject coordinate system\\n\\t                calendarSeries.coordinateSystem = calendarList[calendarSeries.get('calendarIndex') || 0];\\n\\t            }\\n\\t        });\\n\\t        return calendarList;\\n\\t    };\\n\\n\\t    function doConvert(methodName, ecModel, finder, value) {\\n\\t        var calendarModel = finder.calendarModel;\\n\\t        var seriesModel = finder.seriesModel;\\n\\n\\t        var coordSys = calendarModel\\n\\t            ? calendarModel.coordinateSystem\\n\\t            : seriesModel\\n\\t            ? seriesModel.coordinateSystem\\n\\t            : null;\\n\\n\\t        return coordSys === this ? coordSys[methodName](value) : null;\\n\\t    }\\n\\n\\t    __webpack_require__(76).register('calendar', Calendar);\\n\\n\\t    module.exports = Calendar;\\n\\n\\n\\n/***/ },\\n/* 360 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t'use strict';\\n\\n\\n\\t    var ComponentModel = __webpack_require__(69);\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var layout = __webpack_require__(71);\\n\\n\\t    var CalendarModel = ComponentModel.extend({\\n\\n\\t        type: 'calendar',\\n\\n\\t        /**\\n\\t         * @type {module:echarts/coord/calendar/Calendar}\\n\\t         */\\n\\t        coordinateSystem: null,\\n\\n\\t        defaultOption: {\\n\\t            zlevel: 0,\\n\\t            z: 2,\\n\\t            left: 80,\\n\\t            top: 60,\\n\\n\\t            cellSize: 20,\\n\\n\\t            // horizontal vertical\\n\\t            orient: 'horizontal',\\n\\n\\t            // month separate line style\\n\\t            splitLine: {\\n\\t                show: true,\\n\\t                lineStyle: {\\n\\t                    color: '#000',\\n\\t                    width: 1,\\n\\t                    type: 'solid'\\n\\t                }\\n\\t            },\\n\\n\\t            // rect style  temporarily unused emphasis\\n\\t            itemStyle: {\\n\\t                normal: {\\n\\t                    color: '#fff',\\n\\t                    borderWidth: 1,\\n\\t                    borderColor: '#ccc'\\n\\t                }\\n\\t            },\\n\\n\\t            // week text style\\n\\t            dayLabel: {\\n\\t                show: true,\\n\\n\\t                // a week first day\\n\\t                firstDay: 0,\\n\\n\\t                // start end\\n\\t                position: 'start',\\n\\t                margin: '50%', // 50% of cellSize\\n\\t                nameMap: 'en',\\n\\t                textStyle: {\\n\\t                    color: '#000'\\n\\t                }\\n\\t            },\\n\\n\\t            // month text style\\n\\t            monthLabel: {\\n\\t                show: true,\\n\\n\\t                // start end\\n\\t                position: 'start',\\n\\t                margin: 5,\\n\\n\\t                // center or left\\n\\t                align: 'center',\\n\\n\\t                // cn en []\\n\\t                nameMap: 'en',\\n\\t                formatter: null,\\n\\t                textStyle: {\\n\\t                    color: '#000'\\n\\t                }\\n\\t            },\\n\\n\\t            // year text style\\n\\t            yearLabel: {\\n\\t                show: true,\\n\\n\\t                // top bottom left right\\n\\t                position: null,\\n\\t                margin: 30,\\n\\t                formatter: null,\\n\\t                textStyle: {\\n\\t                    color: '#ccc',\\n\\t                    fontFamily: 'sans-serif',\\n\\t                    fontWeight: 'bolder',\\n\\t                    fontSize: 20\\n\\t                }\\n\\t            }\\n\\t        },\\n\\n\\t        /**\\n\\t         * @override\\n\\t         */\\n\\t        init: function (option, parentModel, ecModel, extraOpt) {\\n\\t            var inputPositionParams = layout.getLayoutParams(option);\\n\\n\\t            CalendarModel.superApply(this, 'init', arguments);\\n\\n\\t            mergeAndNormalizeLayoutParams(option, inputPositionParams);\\n\\t        },\\n\\n\\t        /**\\n\\t         * @override\\n\\t         */\\n\\t        mergeOption: function (option, extraOpt) {\\n\\t            CalendarModel.superApply(this, 'mergeOption', arguments);\\n\\n\\t            mergeAndNormalizeLayoutParams(this.option, option);\\n\\t        }\\n\\t    });\\n\\n\\t    function mergeAndNormalizeLayoutParams(target, raw) {\\n\\t        // Normalize cellSize\\n\\t        var cellSize = target.cellSize;\\n\\n\\t        if (!zrUtil.isArray(cellSize)) {\\n\\t            cellSize = target.cellSize = [cellSize, cellSize];\\n\\t        }\\n\\t        else if (cellSize.length === 1) {\\n\\t            cellSize[1] = cellSize[0];\\n\\t        }\\n\\n\\t        var ignoreSize = zrUtil.map([0, 1], function (hvIdx) {\\n\\t            // If user have set `width` or both `left` and `right`, cellSize\\n\\t            // will be automatically set to 'auto', otherwise the default\\n\\t            // setting of cellSize will make `width` setting not work.\\n\\t            if (layout.sizeCalculable(raw, hvIdx)) {\\n\\t                cellSize[hvIdx] = 'auto';\\n\\t            }\\n\\t            return cellSize[hvIdx] != null && cellSize[hvIdx] !== 'auto';\\n\\t        });\\n\\n\\t        layout.mergeLayoutParam(target, raw, {\\n\\t            type: 'box', ignoreSize: ignoreSize\\n\\t        });\\n\\t    }\\n\\n\\t    module.exports = CalendarModel;\\n\\n\\n\\n\\n/***/ },\\n/* 361 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t'use strict';\\n\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var graphic = __webpack_require__(18);\\n\\t    var formatUtil = __webpack_require__(6);\\n\\t    var numberUtil = __webpack_require__(7);\\n\\n\\t    var MONTH_TEXT = {\\n\\t        EN: [\\n\\t                'Jan', 'Feb', 'Mar',\\n\\t                'Apr', 'May', 'Jun',\\n\\t                'Jul', 'Aug', 'Sep',\\n\\t                'Oct', 'Nov', 'Dec'\\n\\t            ],\\n\\t        CN: [\\n\\t                '一月', '二月', '三月',\\n\\t                '四月', '五月', '六月',\\n\\t                '七月', '八月', '九月',\\n\\t                '十月', '十一月', '十二月'\\n\\t            ]\\n\\t    };\\n\\n\\t    var WEEK_TEXT = {\\n\\t        EN: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\\n\\t        CN: ['日', '一', '二', '三', '四', '五', '六']\\n\\t    };\\n\\n\\t    module.exports = __webpack_require__(1).extendComponentView({\\n\\n\\t        type: 'calendar',\\n\\n\\t        /**\\n\\t         * top/left line points\\n\\t         *  @private\\n\\t         */\\n\\t        _tlpoints: null,\\n\\n\\t        /**\\n\\t         * bottom/right line points\\n\\t         *  @private\\n\\t         */\\n\\t        _blpoints: null,\\n\\n\\t        /**\\n\\t         * first day of month\\n\\t         *  @private\\n\\t         */\\n\\t        _firstDayOfMonth: null,\\n\\n\\t        /**\\n\\t         * first day point of month\\n\\t         *  @private\\n\\t         */\\n\\t        _firstDayPoints: null,\\n\\n\\t        render: function (calendarModel, ecModel, api) {\\n\\n\\t            var group = this.group;\\n\\n\\t            group.removeAll();\\n\\n\\t            var coordSys = calendarModel.coordinateSystem;\\n\\n\\t            // range info\\n\\t            var rangeData = coordSys.getRangeInfo();\\n\\t            var orient = coordSys.getOrient();\\n\\n\\t            this._renderDayRect(calendarModel, rangeData, group);\\n\\n\\t            // _renderLines must be called prior to following function\\n\\t            this._renderLines(calendarModel, rangeData, orient, group);\\n\\n\\t            this._renderYearText(calendarModel, rangeData, orient, group);\\n\\n\\t            this._renderMonthText(calendarModel, orient, group);\\n\\n\\t            this._renderWeekText(calendarModel, rangeData, orient, group);\\n\\t        },\\n\\n\\t        // render day rect\\n\\t        _renderDayRect: function (calendarModel, rangeData, group) {\\n\\t            var coordSys = calendarModel.coordinateSystem;\\n\\t            var itemRectStyleModel = calendarModel.getModel('itemStyle.normal').getItemStyle();\\n\\t            var sw = coordSys.getCellWidth();\\n\\t            var sh = coordSys.getCellHeight();\\n\\n\\t            for (var i = rangeData.start.time;\\n\\t                i <= rangeData.end.time;\\n\\t                i = coordSys.getNextNDay(i, 1).time\\n\\t            ) {\\n\\n\\t                var point = coordSys.dataToRect([i], false).tl;\\n\\n\\t                // every rect\\n\\t                var rect = new graphic.Rect({\\n\\t                    shape: {\\n\\t                        x: point[0],\\n\\t                        y: point[1],\\n\\t                        width: sw,\\n\\t                        height: sh\\n\\t                    },\\n\\t                    cursor: 'default',\\n\\t                    style: itemRectStyleModel\\n\\t                });\\n\\n\\t                group.add(rect);\\n\\t            }\\n\\n\\t        },\\n\\n\\t        // render separate line\\n\\t        _renderLines: function (calendarModel, rangeData, orient, group) {\\n\\n\\t            var self = this;\\n\\n\\t            var coordSys = calendarModel.coordinateSystem;\\n\\n\\t            var lineStyleModel = calendarModel.getModel('splitLine.lineStyle').getLineStyle();\\n\\t            var show = calendarModel.get('splitLine.show');\\n\\n\\t            var lineWidth = lineStyleModel.lineWidth;\\n\\n\\t            this._tlpoints = [];\\n\\t            this._blpoints = [];\\n\\t            this._firstDayOfMonth = [];\\n\\t            this._firstDayPoints = [];\\n\\n\\n\\t            var firstDay = rangeData.start;\\n\\n\\t            for (var i = 0; firstDay.time <= rangeData.end.time; i++) {\\n\\t                addPoints(firstDay.formatedDate);\\n\\n\\t                if (i === 0) {\\n\\t                    firstDay = coordSys.getDateInfo(rangeData.start.y + '-' + rangeData.start.m);\\n\\t                }\\n\\n\\t                var date = firstDay.date;\\n\\t                date.setMonth(date.getMonth() + 1);\\n\\t                firstDay = coordSys.getDateInfo(date);\\n\\t            }\\n\\n\\t            addPoints(coordSys.getNextNDay(rangeData.end.time, 1).formatedDate);\\n\\n\\t            function addPoints(date) {\\n\\n\\t                self._firstDayOfMonth.push(coordSys.getDateInfo(date));\\n\\t                self._firstDayPoints.push(coordSys.dataToRect([date], false).tl);\\n\\n\\t                var points = self._getLinePointsOfOneWeek(calendarModel, date, orient);\\n\\n\\t                self._tlpoints.push(points[0]);\\n\\t                self._blpoints.push(points[points.length - 1]);\\n\\n\\t                show && self._drawSplitline(points, lineStyleModel, group);\\n\\t            }\\n\\n\\n\\t            // render top/left line\\n\\t            show && this._drawSplitline(self._getEdgesPoints(self._tlpoints, lineWidth, orient), lineStyleModel, group);\\n\\n\\t            // render bottom/right line\\n\\t            show && this._drawSplitline(self._getEdgesPoints(self._blpoints, lineWidth, orient), lineStyleModel, group);\\n\\n\\t        },\\n\\n\\t        // get points at both ends\\n\\t        _getEdgesPoints: function (points, lineWidth, orient) {\\n\\t            var rs = [points[0].slice(), points[points.length - 1].slice()];\\n\\t            var idx = orient === 'horizontal' ? 0 : 1;\\n\\n\\t            // both ends of the line are extend half lineWidth\\n\\t            rs[0][idx] = rs[0][idx] - lineWidth / 2;\\n\\t            rs[1][idx] = rs[1][idx] + lineWidth / 2;\\n\\n\\t            return rs;\\n\\t        },\\n\\n\\t        // render split line\\n\\t        _drawSplitline: function (points, lineStyleModel, group) {\\n\\n\\t            var poyline = new graphic.Polyline({\\n\\t                z2: 20,\\n\\t                shape: {\\n\\t                    points: points\\n\\t                },\\n\\t                style: lineStyleModel\\n\\t            });\\n\\n\\t            group.add(poyline);\\n\\t        },\\n\\n\\t        // render month line of one week points\\n\\t        _getLinePointsOfOneWeek: function (calendarModel, date, orient) {\\n\\n\\t            var coordSys = calendarModel.coordinateSystem;\\n\\t            date = coordSys.getDateInfo(date);\\n\\n\\t            var points = [];\\n\\n\\t            for (var i = 0; i < 7; i++) {\\n\\n\\t                var tmpD = coordSys.getNextNDay(date.time, i);\\n\\t                var point = coordSys.dataToRect([tmpD.time], false);\\n\\n\\t                points[2 * tmpD.day] = point.tl;\\n\\t                points[2 * tmpD.day + 1] = point[orient === 'horizontal' ? 'bl' : 'tr'];\\n\\t            }\\n\\n\\t            return points;\\n\\n\\t        },\\n\\n\\t        _formatterLabel: function (formatter, params) {\\n\\n\\t            if (typeof formatter === 'string' && formatter) {\\n\\t                return formatUtil.formatTplSimple(formatter, params);\\n\\t            }\\n\\n\\t            if (typeof formatter === 'function') {\\n\\t                return formatter(params);\\n\\t            }\\n\\n\\t            return params.nameMap;\\n\\n\\t        },\\n\\n\\t        _yearTextPositionControl: function (point, orient, position, margin) {\\n\\n\\t            point = point.slice();\\n\\t            var aligns = ['center', 'bottom'];\\n\\n\\t            if (position === 'top') {\\n\\t                point[1] -= margin;\\n\\t            }\\n\\t            if (position === 'bottom') {\\n\\t                point[1] += margin;\\n\\t                aligns = ['center', 'top'];\\n\\t            }\\n\\t            if (position === 'left') {\\n\\t                point[0] -= margin;\\n\\t            }\\n\\t            if (position === 'right') {\\n\\t                point[0] += margin;\\n\\t                aligns = ['center', 'top'];\\n\\t            }\\n\\n\\t            var rotate = 0;\\n\\t            if (position === 'left' || position === 'right') {\\n\\t                rotate = Math.PI / 2;\\n\\t            }\\n\\n\\t            return {\\n\\t                rotation: rotate,\\n\\t                origin: point,\\n\\t                style: {\\n\\t                    x: point[0],\\n\\t                    y: point[1],\\n\\t                    textAlign: aligns[0],\\n\\t                    textVerticalAlign: aligns[1]\\n\\t                }\\n\\t            };\\n\\t        },\\n\\n\\t        // render year\\n\\t        _renderYearText: function (calendarModel, rangeData, orient, group) {\\n\\t            var yearLabel = calendarModel.getModel('yearLabel');\\n\\n\\t            if (!yearLabel.get('show')) {\\n\\t                return;\\n\\t            }\\n\\n\\t            var yearLabelStyleModel = calendarModel.getModel('yearLabel.textStyle');\\n\\t            var margin = yearLabel.get('margin');\\n\\t            var pos = yearLabel.get('position');\\n\\n\\t            if (!pos) {\\n\\t                pos = orient !== 'horizontal' ? 'top' : 'left';\\n\\t            }\\n\\n\\t            var points = [this._tlpoints[this._tlpoints.length - 1], this._blpoints[0]];\\n\\t            var xc = (points[0][0] + points[1][0]) / 2;\\n\\t            var yc = (points[0][1] + points[1][1]) / 2;\\n\\n\\t            var idx = orient === 'horizontal' ? 0 : 1;\\n\\n\\n\\t            var posPoints = {\\n\\t                top: [xc, points[idx][1]],\\n\\t                bottom: [xc, points[1 - idx][1]],\\n\\t                left: [points[1 - idx][0], yc],\\n\\t                right: [points[idx][0], yc]\\n\\t            };\\n\\n\\t            var name = rangeData.start.y;\\n\\n\\t            if (+rangeData.end.y > +rangeData.start.y) {\\n\\t                name = name + '-' + rangeData.end.y;\\n\\t            }\\n\\n\\t            var formatter = yearLabel.get('formatter');\\n\\n\\t            var params = {\\n\\t                start: rangeData.start.y,\\n\\t                end: rangeData.end.y,\\n\\t                nameMap: name\\n\\t            };\\n\\n\\t            var content = this._formatterLabel(formatter, params);\\n\\n\\t            var yearText = new graphic.Text(\\n\\t                zrUtil.merge({\\n\\t                    z2: 30,\\n\\t                    style: {\\n\\t                        text: content,\\n\\t                        font: yearLabelStyleModel.getFont(),\\n\\t                        fill: yearLabelStyleModel.getTextColor()\\n\\t                    }\\n\\t                }, this._yearTextPositionControl(posPoints[pos], orient, pos, margin))\\n\\t            );\\n\\n\\t            group.add(yearText);\\n\\t        },\\n\\n\\t        _monthTextPositionControl: function (point, isCenter, orient, position, margin) {\\n\\t            var align = 'left';\\n\\t            var vAlign = 'top';\\n\\t            var x = point[0];\\n\\t            var y = point[1];\\n\\n\\t            if (orient === 'horizontal') {\\n\\t                y = y + margin;\\n\\n\\t                if (isCenter) {\\n\\t                    align = 'center';\\n\\t                }\\n\\n\\t                if (position === 'start') {\\n\\t                    vAlign = 'bottom';\\n\\t                }\\n\\t            }\\n\\t            else {\\n\\t                x = x + margin;\\n\\n\\t                if (isCenter) {\\n\\t                    vAlign = 'middle';\\n\\t                }\\n\\n\\t                if (position === 'start') {\\n\\t                    align = 'right';\\n\\t                }\\n\\t            }\\n\\n\\t            return {\\n\\t                x: x,\\n\\t                y: y,\\n\\t                textAlign: align,\\n\\t                textVerticalAlign: vAlign\\n\\t            };\\n\\t        },\\n\\n\\t        // render month and year text\\n\\t        _renderMonthText: function (calendarModel, orient, group) {\\n\\t            var monthLabel = calendarModel.getModel('monthLabel');\\n\\n\\t            if (!monthLabel.get('show')) {\\n\\t                return;\\n\\t            }\\n\\n\\t            var monthLabelStyleModel = calendarModel.getModel('monthLabel.textStyle');\\n\\t            var nameMap = monthLabel.get('nameMap');\\n\\t            var margin = monthLabel.get('margin');\\n\\t            var pos = monthLabel.get('position');\\n\\t            var align = monthLabel.get('align');\\n\\n\\t            var termPoints = [this._tlpoints, this._blpoints];\\n\\n\\t            if (zrUtil.isString(nameMap)) {\\n\\t                nameMap = MONTH_TEXT[nameMap.toUpperCase()] || [];\\n\\t            }\\n\\n\\t            var idx = pos === 'start' ? 0 : 1;\\n\\t            var axis = orient === 'horizontal' ? 0 : 1;\\n\\t            margin = pos === 'start' ? -margin : margin;\\n\\t            var isCenter = (align === 'center');\\n\\n\\t            for (var i = 0; i < termPoints[idx].length - 1; i++) {\\n\\n\\t                var tmp = termPoints[idx][i].slice();\\n\\t                var firstDay = this._firstDayOfMonth[i];\\n\\n\\t                if (isCenter) {\\n\\t                    var firstDayPoints = this._firstDayPoints[i];\\n\\t                    tmp[axis] = (firstDayPoints[axis] + termPoints[0][i + 1][axis]) / 2;\\n\\t                }\\n\\n\\t                var formatter = monthLabel.get('formatter');\\n\\t                var name = nameMap[+firstDay.m - 1];\\n\\t                var params = {\\n\\t                    yyyy: firstDay.y,\\n\\t                    yy: (firstDay.y + '').slice(2),\\n\\t                    MM: firstDay.m,\\n\\t                    M: +firstDay.m,\\n\\t                    nameMap: name\\n\\t                };\\n\\n\\t                var content = this._formatterLabel(formatter, params);\\n\\n\\t                var monthText = new graphic.Text({\\n\\t                    z2: 30,\\n\\t                    style: zrUtil.extend({\\n\\t                        text: content,\\n\\t                        font: monthLabelStyleModel.getFont(),\\n\\t                        fill: monthLabelStyleModel.getTextColor()\\n\\t                    }, this._monthTextPositionControl(tmp, isCenter, orient, pos, margin))\\n\\t                });\\n\\n\\t                group.add(monthText);\\n\\t            }\\n\\t        },\\n\\n\\t        _weekTextPositionControl: function (point, orient, position, margin, cellSize) {\\n\\t            var align = 'center';\\n\\t            var vAlign = 'middle';\\n\\t            var x = point[0];\\n\\t            var y = point[1];\\n\\t            var isStart = position === 'start';\\n\\n\\t            if (orient === 'horizontal') {\\n\\t                x = x + margin + (isStart ? 1 : -1) * cellSize[0] / 2;\\n\\t                align = isStart ? 'right' : 'left';\\n\\t            }\\n\\t            else {\\n\\t                y = y + margin + (isStart ? 1 : -1) * cellSize[1] / 2;\\n\\t                vAlign = isStart ? 'bottom' : 'top';\\n\\t            }\\n\\n\\t            return {\\n\\t                x: x,\\n\\t                y: y,\\n\\t                textAlign: align,\\n\\t                textVerticalAlign: vAlign\\n\\t            };\\n\\t        },\\n\\n\\t        // render weeks\\n\\t        _renderWeekText: function (calendarModel, rangeData, orient, group) {\\n\\t            var dayLabel = calendarModel.getModel('dayLabel');\\n\\n\\t            if (!dayLabel.get('show')) {\\n\\t                return;\\n\\t            }\\n\\n\\t            var coordSys = calendarModel.coordinateSystem;\\n\\t            var dayLabelStyleModel = calendarModel.getModel('dayLabel.textStyle');\\n\\t            var pos = dayLabel.get('position');\\n\\t            var nameMap = dayLabel.get('nameMap');\\n\\t            var margin = dayLabel.get('margin');\\n\\t            var firstDayOfWeek = coordSys.getFirstDayOfWeek();\\n\\n\\t            if (zrUtil.isString(nameMap)) {\\n\\t                nameMap = WEEK_TEXT[nameMap.toUpperCase()] || [];\\n\\t            }\\n\\n\\t            var start = coordSys.getNextNDay(\\n\\t                rangeData.end.time, (7 - rangeData.lweek)\\n\\t            ).time;\\n\\n\\t            var cellSize = [coordSys.getCellWidth(), coordSys.getCellHeight()];\\n\\t            margin = numberUtil.parsePercent(margin, cellSize[orient === 'horizontal' ? 0 : 1]);\\n\\n\\t            if (pos === 'start') {\\n\\t                start = coordSys.getNextNDay(\\n\\t                    rangeData.start.time, -(7 + rangeData.fweek)\\n\\t                ).time;\\n\\t                margin = -margin;\\n\\t            }\\n\\n\\t            for (var i = 0; i < 7; i++) {\\n\\n\\t                var tmpD = coordSys.getNextNDay(start, i);\\n\\t                var point = coordSys.dataToRect([tmpD.time], false).center;\\n\\t                var day = i;\\n\\t                day = Math.abs((i + firstDayOfWeek) % 7);\\n\\t                var weekText = new graphic.Text({\\n\\t                    z2: 30,\\n\\t                    style: zrUtil.extend({\\n\\t                        text: nameMap[day],\\n\\t                        font: dayLabelStyleModel.getFont(),\\n\\t                        fill: dayLabelStyleModel.getTextColor()\\n\\t                    }, this._weekTextPositionControl(point, orient, pos, margin, cellSize))\\n\\t                });\\n\\t                group.add(weekText);\\n\\t            }\\n\\t        }\\n\\t    });\\n\\n\\n\\n/***/ },\\n/* 362 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t'use strict';\\n\\n\\n\\t    var echarts = __webpack_require__(1);\\n\\t    var graphic = __webpack_require__(18);\\n\\t    var layout = __webpack_require__(71);\\n\\n\\t    // Model\\n\\t    echarts.extendComponentModel({\\n\\n\\t        type: 'title',\\n\\n\\t        layoutMode: {type: 'box', ignoreSize: true},\\n\\n\\t        defaultOption: {\\n\\t            // 一级层叠\\n\\t            zlevel: 0,\\n\\t            // 二级层叠\\n\\t            z: 6,\\n\\t            show: true,\\n\\n\\t            text: '',\\n\\t            // 超链接跳转\\n\\t            // link: null,\\n\\t            // 仅支持self | blank\\n\\t            target: 'blank',\\n\\t            subtext: '',\\n\\n\\t            // 超链接跳转\\n\\t            // sublink: null,\\n\\t            // 仅支持self | blank\\n\\t            subtarget: 'blank',\\n\\n\\t            // 'center' ¦ 'left' ¦ 'right'\\n\\t            // ¦ {number}（x坐标，单位px）\\n\\t            left: 0,\\n\\t            // 'top' ¦ 'bottom' ¦ 'center'\\n\\t            // ¦ {number}（y坐标，单位px）\\n\\t            top: 0,\\n\\n\\t            // 水平对齐\\n\\t            // 'auto' | 'left' | 'right' | 'center'\\n\\t            // 默认根据 left 的位置判断是左对齐还是右对齐\\n\\t            // textAlign: null\\n\\t            //\\n\\t            // 垂直对齐\\n\\t            // 'auto' | 'top' | 'bottom' | 'middle'\\n\\t            // 默认根据 top 位置判断是上对齐还是下对齐\\n\\t            // textBaseline: null\\n\\n\\t            backgroundColor: 'rgba(0,0,0,0)',\\n\\n\\t            // 标题边框颜色\\n\\t            borderColor: '#ccc',\\n\\n\\t            // 标题边框线宽，单位px，默认为0（无边框）\\n\\t            borderWidth: 0,\\n\\n\\t            // 标题内边距，单位px，默认各方向内边距为5，\\n\\t            // 接受数组分别设定上右下左边距，同css\\n\\t            padding: 5,\\n\\n\\t            // 主副标题纵向间隔，单位px，默认为10，\\n\\t            itemGap: 10,\\n\\t            textStyle: {\\n\\t                fontSize: 18,\\n\\t                fontWeight: 'bolder',\\n\\t                color: '#333'\\n\\t            },\\n\\t            subtextStyle: {\\n\\t                color: '#aaa'\\n\\t            }\\n\\t        }\\n\\t    });\\n\\n\\t    // View\\n\\t    echarts.extendComponentView({\\n\\n\\t        type: 'title',\\n\\n\\t        render: function (titleModel, ecModel, api) {\\n\\t            this.group.removeAll();\\n\\n\\t            if (!titleModel.get('show')) {\\n\\t                return;\\n\\t            }\\n\\n\\t            var group = this.group;\\n\\n\\t            var textStyleModel = titleModel.getModel('textStyle');\\n\\t            var subtextStyleModel = titleModel.getModel('subtextStyle');\\n\\n\\t            var textAlign = titleModel.get('textAlign');\\n\\t            var textBaseline = titleModel.get('textBaseline');\\n\\n\\t            var textEl = new graphic.Text({\\n\\t                style: {\\n\\t                    text: titleModel.get('text'),\\n\\t                    textFont: textStyleModel.getFont(),\\n\\t                    fill: textStyleModel.getTextColor()\\n\\t                },\\n\\t                z2: 10\\n\\t            });\\n\\n\\t            var textRect = textEl.getBoundingRect();\\n\\n\\t            var subText = titleModel.get('subtext');\\n\\t            var subTextEl = new graphic.Text({\\n\\t                style: {\\n\\t                    text: subText,\\n\\t                    textFont: subtextStyleModel.getFont(),\\n\\t                    fill: subtextStyleModel.getTextColor(),\\n\\t                    y: textRect.height + titleModel.get('itemGap'),\\n\\t                    textBaseline: 'top'\\n\\t                },\\n\\t                z2: 10\\n\\t            });\\n\\n\\t            var link = titleModel.get('link');\\n\\t            var sublink = titleModel.get('sublink');\\n\\n\\t            textEl.silent = !link;\\n\\t            subTextEl.silent = !sublink;\\n\\n\\t            if (link) {\\n\\t                textEl.on('click', function () {\\n\\t                    window.open(link, '_' + titleModel.get('target'));\\n\\t                });\\n\\t            }\\n\\t            if (sublink) {\\n\\t                subTextEl.on('click', function () {\\n\\t                    window.open(sublink, '_' + titleModel.get('subtarget'));\\n\\t                });\\n\\t            }\\n\\n\\t            group.add(textEl);\\n\\t            subText && group.add(subTextEl);\\n\\t            // If no subText, but add subTextEl, there will be an empty line.\\n\\n\\t            var groupRect = group.getBoundingRect();\\n\\t            var layoutOption = titleModel.getBoxLayoutParams();\\n\\t            layoutOption.width = groupRect.width;\\n\\t            layoutOption.height = groupRect.height;\\n\\t            var layoutRect = layout.getLayoutRect(\\n\\t                layoutOption, {\\n\\t                    width: api.getWidth(),\\n\\t                    height: api.getHeight()\\n\\t                }, titleModel.get('padding')\\n\\t            );\\n\\t            // Adjust text align based on position\\n\\t            if (!textAlign) {\\n\\t                // Align left if title is on the left. center and right is same\\n\\t                textAlign = titleModel.get('left') || titleModel.get('right');\\n\\t                if (textAlign === 'middle') {\\n\\t                    textAlign = 'center';\\n\\t                }\\n\\t                // Adjust layout by text align\\n\\t                if (textAlign === 'right') {\\n\\t                    layoutRect.x += layoutRect.width;\\n\\t                }\\n\\t                else if (textAlign === 'center') {\\n\\t                    layoutRect.x += layoutRect.width / 2;\\n\\t                }\\n\\t            }\\n\\t            if (!textBaseline) {\\n\\t                textBaseline = titleModel.get('top') || titleModel.get('bottom');\\n\\t                if (textBaseline === 'center') {\\n\\t                    textBaseline = 'middle';\\n\\t                }\\n\\t                if (textBaseline === 'bottom') {\\n\\t                    layoutRect.y += layoutRect.height;\\n\\t                }\\n\\t                else if (textBaseline === 'middle') {\\n\\t                    layoutRect.y += layoutRect.height / 2;\\n\\t                }\\n\\n\\t                textBaseline = textBaseline || 'top';\\n\\t            }\\n\\n\\t            group.attr('position', [layoutRect.x, layoutRect.y]);\\n\\t            var alignStyle = {\\n\\t                textAlign: textAlign,\\n\\t                textVerticalAlign: textBaseline\\n\\t            };\\n\\t            textEl.setStyle(alignStyle);\\n\\t            subTextEl.setStyle(alignStyle);\\n\\n\\t            // Render background\\n\\t            // Get groupRect again because textAlign has been changed\\n\\t            groupRect = group.getBoundingRect();\\n\\t            var padding = layoutRect.margin;\\n\\t            var style = titleModel.getItemStyle(['color', 'opacity']);\\n\\t            style.fill = titleModel.get('backgroundColor');\\n\\t            var rect = new graphic.Rect({\\n\\t                shape: {\\n\\t                    x: groupRect.x - padding[3],\\n\\t                    y: groupRect.y - padding[0],\\n\\t                    width: groupRect.width + padding[1] + padding[3],\\n\\t                    height: groupRect.height + padding[0] + padding[2]\\n\\t                },\\n\\t                style: style,\\n\\t                silent: true\\n\\t            });\\n\\t            graphic.subPixelOptimizeRect(rect);\\n\\n\\t            group.add(rect);\\n\\t        }\\n\\t    });\\n\\n\\n/***/ },\\n/* 363 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * DataZoom component entry\\n\\t */\\n\\n\\n\\t    __webpack_require__(364);\\n\\n\\t    __webpack_require__(365);\\n\\t    __webpack_require__(368);\\n\\n\\t    __webpack_require__(369);\\n\\t    __webpack_require__(370);\\n\\n\\t    __webpack_require__(371);\\n\\t    __webpack_require__(372);\\n\\n\\t    __webpack_require__(374);\\n\\t    __webpack_require__(375);\\n\\n\\n\\n/***/ },\\n/* 364 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    __webpack_require__(69).registerSubTypeDefaulter('dataZoom', function (option) {\\n\\t        // Default 'slider' when no type specified.\\n\\t        return 'slider';\\n\\t    });\\n\\n\\n\\n/***/ },\\n/* 365 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * @file Data zoom model\\n\\t */\\n\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var env = __webpack_require__(2);\\n\\t    var echarts = __webpack_require__(1);\\n\\t    var modelUtil = __webpack_require__(5);\\n\\t    var helper = __webpack_require__(366);\\n\\t    var AxisProxy = __webpack_require__(367);\\n\\t    var each = zrUtil.each;\\n\\t    var eachAxisDim = helper.eachAxisDim;\\n\\n\\t    var DataZoomModel = echarts.extendComponentModel({\\n\\n\\t        type: 'dataZoom',\\n\\n\\t        dependencies: [\\n\\t            'xAxis', 'yAxis', 'zAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'series'\\n\\t        ],\\n\\n\\t        /**\\n\\t         * @protected\\n\\t         */\\n\\t        defaultOption: {\\n\\t            zlevel: 0,\\n\\t            z: 4,                   // Higher than normal component (z: 2).\\n\\t            orient: null,           // Default auto by axisIndex. Possible value: 'horizontal', 'vertical'.\\n\\t            xAxisIndex: null,       // Default the first horizontal category axis.\\n\\t            yAxisIndex: null,       // Default the first vertical category axis.\\n\\n\\t            filterMode: 'filter',   // Possible values: 'filter' or 'empty' or 'weakFilter'.\\n\\t                                    // 'filter': data items which are out of window will be removed. This option is\\n\\t                                    //          applicable when filtering outliers. For each data item, it will be\\n\\t                                    //          filtered if one of the relevant dimensions is out of the window.\\n\\t                                    // 'weakFilter': data items which are out of window will be removed. This option\\n\\t                                    //          is applicable when filtering outliers. For each data item, it will be\\n\\t                                    //          filtered only if all  of the relevant dimensions are out of the same\\n\\t                                    //          side of the window.\\n\\t                                    // 'empty': data items which are out of window will be set to empty.\\n\\t                                    //          This option is applicable when user should not neglect\\n\\t                                    //          that there are some data items out of window.\\n\\t                                    // 'none': Do not filter.\\n\\t                                    // Taking line chart as an example, line will be broken in\\n\\t                                    // the filtered points when filterModel is set to 'empty', but\\n\\t                                    // be connected when set to 'filter'.\\n\\n\\t            throttle: null,         // Dispatch action by the fixed rate, avoid frequency.\\n\\t                                    // default 100. Do not throttle when use null/undefined.\\n\\t                                    // If animation === true and animationDurationUpdate > 0,\\n\\t                                    // default value is 100, otherwise 20.\\n\\t            start: 0,               // Start percent. 0 ~ 100\\n\\t            end: 100,               // End percent. 0 ~ 100\\n\\t            startValue: null,       // Start value. If startValue specified, start is ignored.\\n\\t            endValue: null,         // End value. If endValue specified, end is ignored.\\n\\t            minSpan: null,          // 0 ~ 100\\n\\t            maxSpan: null,          // 0 ~ 100\\n\\t            minValueSpan: null,     // The range of dataZoom can not be smaller than that.\\n\\t            maxValueSpan: null      // The range of dataZoom can not be larger than that.\\n\\t        },\\n\\n\\t        /**\\n\\t         * @override\\n\\t         */\\n\\t        init: function (option, parentModel, ecModel) {\\n\\n\\t            /**\\n\\t             * key like x_0, y_1\\n\\t             * @private\\n\\t             * @type {Object}\\n\\t             */\\n\\t            this._dataIntervalByAxis = {};\\n\\n\\t            /**\\n\\t             * @private\\n\\t             */\\n\\t            this._dataInfo = {};\\n\\n\\t            /**\\n\\t             * key like x_0, y_1\\n\\t             * @private\\n\\t             */\\n\\t            this._axisProxies = {};\\n\\n\\t            /**\\n\\t             * @readOnly\\n\\t             */\\n\\t            this.textStyleModel;\\n\\n\\t            /**\\n\\t             * @private\\n\\t             */\\n\\t            this._autoThrottle = true;\\n\\n\\t            /**\\n\\t             * 'percent' or 'value'\\n\\t             * @private\\n\\t             */\\n\\t            this._rangePropMode = ['percent', 'percent'];\\n\\n\\t            var rawOption = retrieveRaw(option);\\n\\n\\t            this.mergeDefaultAndTheme(option, ecModel);\\n\\n\\t            this.doInit(rawOption);\\n\\t        },\\n\\n\\t        /**\\n\\t         * @override\\n\\t         */\\n\\t        mergeOption: function (newOption) {\\n\\t            var rawOption = retrieveRaw(newOption);\\n\\n\\t            //FIX #2591\\n\\t            zrUtil.merge(this.option, newOption, true);\\n\\n\\t            this.doInit(rawOption);\\n\\t        },\\n\\n\\t        /**\\n\\t         * @protected\\n\\t         */\\n\\t        doInit: function (rawOption) {\\n\\t            var thisOption = this.option;\\n\\n\\t            // Disable realtime view update if canvas is not supported.\\n\\t            if (!env.canvasSupported) {\\n\\t                thisOption.realtime = false;\\n\\t            }\\n\\n\\t            this._setDefaultThrottle(rawOption);\\n\\n\\t            updateRangeUse(this, rawOption);\\n\\n\\t            each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\\n\\t                // start/end has higher priority over startValue/endValue if they\\n\\t                // both set, but we should make chart.setOption({endValue: 1000})\\n\\t                // effective, rather than chart.setOption({endValue: 1000, end: null}).\\n\\t                if (this._rangePropMode[index] === 'value') {\\n\\t                    thisOption[names[0]] = null;\\n\\t                }\\n\\t                // Otherwise do nothing and use the merge result.\\n\\t            }, this);\\n\\n\\t            this.textStyleModel = this.getModel('textStyle');\\n\\n\\t            this._resetTarget();\\n\\n\\t            this._giveAxisProxies();\\n\\t        },\\n\\n\\t        /**\\n\\t         * @private\\n\\t         */\\n\\t        _giveAxisProxies: function () {\\n\\t            var axisProxies = this._axisProxies;\\n\\n\\t            this.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel, ecModel) {\\n\\t                var axisModel = this.dependentModels[dimNames.axis][axisIndex];\\n\\n\\t                // If exists, share axisProxy with other dataZoomModels.\\n\\t                var axisProxy = axisModel.__dzAxisProxy || (\\n\\t                    // Use the first dataZoomModel as the main model of axisProxy.\\n\\t                    axisModel.__dzAxisProxy = new AxisProxy(\\n\\t                        dimNames.name, axisIndex, this, ecModel\\n\\t                    )\\n\\t                );\\n\\t                // FIXME\\n\\t                // dispose __dzAxisProxy\\n\\n\\t                axisProxies[dimNames.name + '_' + axisIndex] = axisProxy;\\n\\t            }, this);\\n\\t        },\\n\\n\\t        /**\\n\\t         * @private\\n\\t         */\\n\\t        _resetTarget: function () {\\n\\t            var thisOption = this.option;\\n\\n\\t            var autoMode = this._judgeAutoMode();\\n\\n\\t            eachAxisDim(function (dimNames) {\\n\\t                var axisIndexName = dimNames.axisIndex;\\n\\t                thisOption[axisIndexName] = modelUtil.normalizeToArray(\\n\\t                    thisOption[axisIndexName]\\n\\t                );\\n\\t            }, this);\\n\\n\\t            if (autoMode === 'axisIndex') {\\n\\t                this._autoSetAxisIndex();\\n\\t            }\\n\\t            else if (autoMode === 'orient') {\\n\\t                this._autoSetOrient();\\n\\t            }\\n\\t        },\\n\\n\\t        /**\\n\\t         * @private\\n\\t         */\\n\\t        _judgeAutoMode: function () {\\n\\t            // Auto set only works for setOption at the first time.\\n\\t            // The following is user's reponsibility. So using merged\\n\\t            // option is OK.\\n\\t            var thisOption = this.option;\\n\\n\\t            var hasIndexSpecified = false;\\n\\t            eachAxisDim(function (dimNames) {\\n\\t                // When user set axisIndex as a empty array, we think that user specify axisIndex\\n\\t                // but do not want use auto mode. Because empty array may be encountered when\\n\\t                // some error occured.\\n\\t                if (thisOption[dimNames.axisIndex] != null) {\\n\\t                    hasIndexSpecified = true;\\n\\t                }\\n\\t            }, this);\\n\\n\\t            var orient = thisOption.orient;\\n\\n\\t            if (orient == null && hasIndexSpecified) {\\n\\t                return 'orient';\\n\\t            }\\n\\t            else if (!hasIndexSpecified) {\\n\\t                if (orient == null) {\\n\\t                    thisOption.orient = 'horizontal';\\n\\t                }\\n\\t                return 'axisIndex';\\n\\t            }\\n\\t        },\\n\\n\\t        /**\\n\\t         * @private\\n\\t         */\\n\\t        _autoSetAxisIndex: function () {\\n\\t            var autoAxisIndex = true;\\n\\t            var orient = this.get('orient', true);\\n\\t            var thisOption = this.option;\\n\\t            var dependentModels = this.dependentModels;\\n\\n\\t            if (autoAxisIndex) {\\n\\t                // Find axis that parallel to dataZoom as default.\\n\\t                var dimName = orient === 'vertical' ? 'y' : 'x';\\n\\n\\t                if (dependentModels[dimName + 'Axis'].length) {\\n\\t                    thisOption[dimName + 'AxisIndex'] = [0];\\n\\t                    autoAxisIndex = false;\\n\\t                }\\n\\t                else {\\n\\t                    each(dependentModels.singleAxis, function (singleAxisModel) {\\n\\t                        if (autoAxisIndex && singleAxisModel.get('orient', true) === orient) {\\n\\t                            thisOption.singleAxisIndex = [singleAxisModel.componentIndex];\\n\\t                            autoAxisIndex = false;\\n\\t                        }\\n\\t                    });\\n\\t                }\\n\\t            }\\n\\n\\t            if (autoAxisIndex) {\\n\\t                // Find the first category axis as default. (consider polar)\\n\\t                eachAxisDim(function (dimNames) {\\n\\t                    if (!autoAxisIndex) {\\n\\t                        return;\\n\\t                    }\\n\\t                    var axisIndices = [];\\n\\t                    var axisModels = this.dependentModels[dimNames.axis];\\n\\t                    if (axisModels.length && !axisIndices.length) {\\n\\t                        for (var i = 0, len = axisModels.length; i < len; i++) {\\n\\t                            if (axisModels[i].get('type') === 'category') {\\n\\t                                axisIndices.push(i);\\n\\t                            }\\n\\t                        }\\n\\t                    }\\n\\t                    thisOption[dimNames.axisIndex] = axisIndices;\\n\\t                    if (axisIndices.length) {\\n\\t                        autoAxisIndex = false;\\n\\t                    }\\n\\t                }, this);\\n\\t            }\\n\\n\\t            if (autoAxisIndex) {\\n\\t                // FIXME\\n\\t                // 这里是兼容ec2的写法（没指定xAxisIndex和yAxisIndex时把scatter和双数值轴折柱纳入dataZoom控制），\\n\\t                // 但是实际是否需要Grid.js#getScaleByOption来判断（考虑time，log等axis type）？\\n\\n\\t                // If both dataZoom.xAxisIndex and dataZoom.yAxisIndex is not specified,\\n\\t                // dataZoom component auto adopts series that reference to\\n\\t                // both xAxis and yAxis which type is 'value'.\\n\\t                this.ecModel.eachSeries(function (seriesModel) {\\n\\t                    if (this._isSeriesHasAllAxesTypeOf(seriesModel, 'value')) {\\n\\t                        eachAxisDim(function (dimNames) {\\n\\t                            var axisIndices = thisOption[dimNames.axisIndex];\\n\\n\\t                            var axisIndex = seriesModel.get(dimNames.axisIndex);\\n\\t                            var axisId = seriesModel.get(dimNames.axisId);\\n\\n\\t                            var axisModel = seriesModel.ecModel.queryComponents({\\n\\t                                mainType: dimNames.axis,\\n\\t                                index: axisIndex,\\n\\t                                id: axisId\\n\\t                            })[0];\\n\\n\\t                            if (true) {\\n\\t                                if (!axisModel) {\\n\\t                                    throw new Error(\\n\\t                                        dimNames.axis + ' \\\"' + zrUtil.retrieve(\\n\\t                                            axisIndex,\\n\\t                                            axisId,\\n\\t                                            0\\n\\t                                        ) + '\\\" not found'\\n\\t                                    );\\n\\t                                }\\n\\t                            }\\n\\t                            axisIndex = axisModel.componentIndex;\\n\\n\\t                            if (zrUtil.indexOf(axisIndices, axisIndex) < 0) {\\n\\t                                axisIndices.push(axisIndex);\\n\\t                            }\\n\\t                        });\\n\\t                    }\\n\\t                }, this);\\n\\t            }\\n\\t        },\\n\\n\\t        /**\\n\\t         * @private\\n\\t         */\\n\\t        _autoSetOrient: function () {\\n\\t            var dim;\\n\\n\\t            // Find the first axis\\n\\t            this.eachTargetAxis(function (dimNames) {\\n\\t                !dim && (dim = dimNames.name);\\n\\t            }, this);\\n\\n\\t            this.option.orient = dim === 'y' ? 'vertical' : 'horizontal';\\n\\t        },\\n\\n\\t        /**\\n\\t         * @private\\n\\t         */\\n\\t        _isSeriesHasAllAxesTypeOf: function (seriesModel, axisType) {\\n\\t            // FIXME\\n\\t            // 需要series的xAxisIndex和yAxisIndex都首先自动设置上。\\n\\t            // 例如series.type === scatter时。\\n\\n\\t            var is = true;\\n\\t            eachAxisDim(function (dimNames) {\\n\\t                var seriesAxisIndex = seriesModel.get(dimNames.axisIndex);\\n\\t                var axisModel = this.dependentModels[dimNames.axis][seriesAxisIndex];\\n\\n\\t                if (!axisModel || axisModel.get('type') !== axisType) {\\n\\t                    is = false;\\n\\t                }\\n\\t            }, this);\\n\\t            return is;\\n\\t        },\\n\\n\\t        /**\\n\\t         * @private\\n\\t         */\\n\\t        _setDefaultThrottle: function (rawOption) {\\n\\t            // When first time user set throttle, auto throttle ends.\\n\\t            if (rawOption.hasOwnProperty('throttle')) {\\n\\t                this._autoThrottle = false;\\n\\t            }\\n\\t            if (this._autoThrottle) {\\n\\t                var globalOption = this.ecModel.option;\\n\\t                this.option.throttle =\\n\\t                    (globalOption.animation && globalOption.animationDurationUpdate > 0)\\n\\t                    ? 100 : 20;\\n\\t            }\\n\\t        },\\n\\n\\t        /**\\n\\t         * @public\\n\\t         */\\n\\t        getFirstTargetAxisModel: function () {\\n\\t            var firstAxisModel;\\n\\t            eachAxisDim(function (dimNames) {\\n\\t                if (firstAxisModel == null) {\\n\\t                    var indices = this.get(dimNames.axisIndex);\\n\\t                    if (indices.length) {\\n\\t                        firstAxisModel = this.dependentModels[dimNames.axis][indices[0]];\\n\\t                    }\\n\\t                }\\n\\t            }, this);\\n\\n\\t            return firstAxisModel;\\n\\t        },\\n\\n\\t        /**\\n\\t         * @public\\n\\t         * @param {Function} callback param: axisModel, dimNames, axisIndex, dataZoomModel, ecModel\\n\\t         */\\n\\t        eachTargetAxis: function (callback, context) {\\n\\t            var ecModel = this.ecModel;\\n\\t            eachAxisDim(function (dimNames) {\\n\\t                each(\\n\\t                    this.get(dimNames.axisIndex),\\n\\t                    function (axisIndex) {\\n\\t                        callback.call(context, dimNames, axisIndex, this, ecModel);\\n\\t                    },\\n\\t                    this\\n\\t                );\\n\\t            }, this);\\n\\t        },\\n\\n\\t        /**\\n\\t         * @param {string} dimName\\n\\t         * @param {number} axisIndex\\n\\t         * @return {module:echarts/component/dataZoom/AxisProxy} If not found, return null/undefined.\\n\\t         */\\n\\t        getAxisProxy: function (dimName, axisIndex) {\\n\\t            return this._axisProxies[dimName + '_' + axisIndex];\\n\\t        },\\n\\n\\t        /**\\n\\t         * @param {string} dimName\\n\\t         * @param {number} axisIndex\\n\\t         * @return {module:echarts/model/Model} If not found, return null/undefined.\\n\\t         */\\n\\t        getAxisModel: function (dimName, axisIndex) {\\n\\t            var axisProxy = this.getAxisProxy(dimName, axisIndex);\\n\\t            return axisProxy && axisProxy.getAxisModel();\\n\\t        },\\n\\n\\t        /**\\n\\t         * If not specified, set to undefined.\\n\\t         *\\n\\t         * @public\\n\\t         * @param {Object} opt\\n\\t         * @param {number} [opt.start]\\n\\t         * @param {number} [opt.end]\\n\\t         * @param {number} [opt.startValue]\\n\\t         * @param {number} [opt.endValue]\\n\\t         * @param {boolean} [ignoreUpdateRangeUsg=false]\\n\\t         */\\n\\t        setRawRange: function (opt, ignoreUpdateRangeUsg) {\\n\\t            each(['start', 'end', 'startValue', 'endValue'], function (name) {\\n\\t                // If any of those prop is null/undefined, we should alos set\\n\\t                // them, because only one pair between start/end and\\n\\t                // startValue/endValue can work.\\n\\t                this.option[name] = opt[name];\\n\\t            }, this);\\n\\n\\t            !ignoreUpdateRangeUsg && updateRangeUse(this, opt);\\n\\t        },\\n\\n\\t        /**\\n\\t         * @public\\n\\t         * @return {Array.<number>} [startPercent, endPercent]\\n\\t         */\\n\\t        getPercentRange: function () {\\n\\t            var axisProxy = this.findRepresentativeAxisProxy();\\n\\t            if (axisProxy) {\\n\\t                return axisProxy.getDataPercentWindow();\\n\\t            }\\n\\t        },\\n\\n\\t        /**\\n\\t         * @public\\n\\t         * For example, chart.getModel().getComponent('dataZoom').getValueRange('y', 0);\\n\\t         *\\n\\t         * @param {string} [axisDimName]\\n\\t         * @param {number} [axisIndex]\\n\\t         * @return {Array.<number>} [startValue, endValue] value can only be '-' or finite number.\\n\\t         */\\n\\t        getValueRange: function (axisDimName, axisIndex) {\\n\\t            if (axisDimName == null && axisIndex == null) {\\n\\t                var axisProxy = this.findRepresentativeAxisProxy();\\n\\t                if (axisProxy) {\\n\\t                    return axisProxy.getDataValueWindow();\\n\\t                }\\n\\t            }\\n\\t            else {\\n\\t                return this.getAxisProxy(axisDimName, axisIndex).getDataValueWindow();\\n\\t            }\\n\\t        },\\n\\n\\t        /**\\n\\t         * @public\\n\\t         * @param {module:echarts/model/Model} [axisModel] If axisModel given, find axisProxy\\n\\t         *      corresponding to the axisModel\\n\\t         * @return {module:echarts/component/dataZoom/AxisProxy}\\n\\t         */\\n\\t        findRepresentativeAxisProxy: function (axisModel) {\\n\\t            if (axisModel) {\\n\\t                return axisModel.__dzAxisProxy;\\n\\t            }\\n\\n\\t            // Find the first hosted axisProxy\\n\\t            var axisProxies = this._axisProxies;\\n\\t            for (var key in axisProxies) {\\n\\t                if (axisProxies.hasOwnProperty(key) && axisProxies[key].hostedBy(this)) {\\n\\t                    return axisProxies[key];\\n\\t                }\\n\\t            }\\n\\n\\t            // If no hosted axis find not hosted axisProxy.\\n\\t            // Consider this case: dataZoomModel1 and dataZoomModel2 control the same axis,\\n\\t            // and the option.start or option.end settings are different. The percentRange\\n\\t            // should follow axisProxy.\\n\\t            // (We encounter this problem in toolbox data zoom.)\\n\\t            for (var key in axisProxies) {\\n\\t                if (axisProxies.hasOwnProperty(key) && !axisProxies[key].hostedBy(this)) {\\n\\t                    return axisProxies[key];\\n\\t                }\\n\\t            }\\n\\t        },\\n\\n\\t        /**\\n\\t         * @return {Array.<string>}\\n\\t         */\\n\\t        getRangePropMode: function () {\\n\\t            return this._rangePropMode.slice();\\n\\t        }\\n\\t    });\\n\\n\\t    function retrieveRaw(option) {\\n\\t        var ret = {};\\n\\t        each(\\n\\t            ['start', 'end', 'startValue', 'endValue', 'throttle'],\\n\\t            function (name) {\\n\\t                option.hasOwnProperty(name) && (ret[name] = option[name]);\\n\\t            }\\n\\t        );\\n\\t        return ret;\\n\\t    }\\n\\n\\t    function updateRangeUse(dataZoomModel, rawOption) {\\n\\t        each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\\n\\t            var rangePropMode = dataZoomModel._rangePropMode;\\n\\t            if (rawOption[names[0]] != null) {\\n\\t                rangePropMode[index] = 'percent';\\n\\t            }\\n\\t            else if (rawOption[names[1]] != null) {\\n\\t                rangePropMode[index] = 'value';\\n\\t            }\\n\\t            // else remain its original setting.\\n\\t        });\\n\\t    }\\n\\n\\t    module.exports = DataZoomModel;\\n\\n\\n\\n/***/ },\\n/* 366 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\t    var formatUtil = __webpack_require__(6);\\n\\t    var zrUtil = __webpack_require__(4);\\n\\n\\t    var helper = {};\\n\\n\\t    var AXIS_DIMS = ['x', 'y', 'z', 'radius', 'angle', 'single'];\\n\\t    // Supported coords.\\n\\t    var COORDS = ['cartesian2d', 'polar', 'singleAxis'];\\n\\n\\t    /**\\n\\t     * @param {string} coordType\\n\\t     * @return {boolean}\\n\\t     */\\n\\t    helper.isCoordSupported = function (coordType) {\\n\\t        return zrUtil.indexOf(COORDS, coordType) >= 0;\\n\\t    };\\n\\n\\t    /**\\n\\t     * Create \\\"each\\\" method to iterate names.\\n\\t     *\\n\\t     * @pubilc\\n\\t     * @param  {Array.<string>} names\\n\\t     * @param  {Array.<string>=} attrs\\n\\t     * @return {Function}\\n\\t     */\\n\\t    helper.createNameEach = function (names, attrs) {\\n\\t        names = names.slice();\\n\\t        var capitalNames = zrUtil.map(names, formatUtil.capitalFirst);\\n\\t        attrs = (attrs || []).slice();\\n\\t        var capitalAttrs = zrUtil.map(attrs, formatUtil.capitalFirst);\\n\\n\\t        return function (callback, context) {\\n\\t            zrUtil.each(names, function (name, index) {\\n\\t                var nameObj = {name: name, capital: capitalNames[index]};\\n\\n\\t                for (var j = 0; j < attrs.length; j++) {\\n\\t                    nameObj[attrs[j]] = name + capitalAttrs[j];\\n\\t                }\\n\\n\\t                callback.call(context, nameObj);\\n\\t            });\\n\\t        };\\n\\t    };\\n\\n\\t    /**\\n\\t     * Iterate each dimension name.\\n\\t     *\\n\\t     * @public\\n\\t     * @param {Function} callback The parameter is like:\\n\\t     *                            {\\n\\t     *                                name: 'angle',\\n\\t     *                                capital: 'Angle',\\n\\t     *                                axis: 'angleAxis',\\n\\t     *                                axisIndex: 'angleAixs',\\n\\t     *                                index: 'angleIndex'\\n\\t     *                            }\\n\\t     * @param {Object} context\\n\\t     */\\n\\t    helper.eachAxisDim = helper.createNameEach(AXIS_DIMS, ['axisIndex', 'axis', 'index', 'id']);\\n\\n\\t    /**\\n\\t     * If tow dataZoomModels has the same axis controlled, we say that they are 'linked'.\\n\\t     * dataZoomModels and 'links' make up one or more graphics.\\n\\t     * This function finds the graphic where the source dataZoomModel is in.\\n\\t     *\\n\\t     * @public\\n\\t     * @param {Function} forEachNode Node iterator.\\n\\t     * @param {Function} forEachEdgeType edgeType iterator\\n\\t     * @param {Function} edgeIdGetter Giving node and edgeType, return an array of edge id.\\n\\t     * @return {Function} Input: sourceNode, Output: Like {nodes: [], dims: {}}\\n\\t     */\\n\\t    helper.createLinkedNodesFinder = function (forEachNode, forEachEdgeType, edgeIdGetter) {\\n\\n\\t        return function (sourceNode) {\\n\\t            var result = {\\n\\t                nodes: [],\\n\\t                records: {} // key: edgeType.name, value: Object (key: edge id, value: boolean).\\n\\t            };\\n\\n\\t            forEachEdgeType(function (edgeType) {\\n\\t                result.records[edgeType.name] = {};\\n\\t            });\\n\\n\\t            if (!sourceNode) {\\n\\t                return result;\\n\\t            }\\n\\n\\t            absorb(sourceNode, result);\\n\\n\\t            var existsLink;\\n\\t            do {\\n\\t                existsLink = false;\\n\\t                forEachNode(processSingleNode);\\n\\t            }\\n\\t            while (existsLink);\\n\\n\\t            function processSingleNode(node) {\\n\\t                if (!isNodeAbsorded(node, result) && isLinked(node, result)) {\\n\\t                    absorb(node, result);\\n\\t                    existsLink = true;\\n\\t                }\\n\\t            }\\n\\n\\t            return result;\\n\\t        };\\n\\n\\t        function isNodeAbsorded(node, result) {\\n\\t            return zrUtil.indexOf(result.nodes, node) >= 0;\\n\\t        }\\n\\n\\t        function isLinked(node, result) {\\n\\t            var hasLink = false;\\n\\t            forEachEdgeType(function (edgeType) {\\n\\t                zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\\n\\t                    result.records[edgeType.name][edgeId] && (hasLink = true);\\n\\t                });\\n\\t            });\\n\\t            return hasLink;\\n\\t        }\\n\\n\\t        function absorb(node, result) {\\n\\t            result.nodes.push(node);\\n\\t            forEachEdgeType(function (edgeType) {\\n\\t                zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\\n\\t                    result.records[edgeType.name][edgeId] = true;\\n\\t                });\\n\\t            });\\n\\t        }\\n\\t    };\\n\\n\\t    module.exports = helper;\\n\\n\\n/***/ },\\n/* 367 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * @file Axis operator\\n\\t */\\n\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var numberUtil = __webpack_require__(7);\\n\\t    var helper = __webpack_require__(366);\\n\\t    var each = zrUtil.each;\\n\\t    var asc = numberUtil.asc;\\n\\n\\t    /**\\n\\t     * Operate single axis.\\n\\t     * One axis can only operated by one axis operator.\\n\\t     * Different dataZoomModels may be defined to operate the same axis.\\n\\t     * (i.e. 'inside' data zoom and 'slider' data zoom components)\\n\\t     * So dataZoomModels share one axisProxy in that case.\\n\\t     *\\n\\t     * @class\\n\\t     */\\n\\t    var AxisProxy = function (dimName, axisIndex, dataZoomModel, ecModel) {\\n\\n\\t        /**\\n\\t         * @private\\n\\t         * @type {string}\\n\\t         */\\n\\t        this._dimName = dimName;\\n\\n\\t        /**\\n\\t         * @private\\n\\t         */\\n\\t        this._axisIndex = axisIndex;\\n\\n\\t        /**\\n\\t         * @private\\n\\t         * @type {Array.<number>}\\n\\t         */\\n\\t        this._valueWindow;\\n\\n\\t        /**\\n\\t         * @private\\n\\t         * @type {Array.<number>}\\n\\t         */\\n\\t        this._percentWindow;\\n\\n\\t        /**\\n\\t         * @private\\n\\t         * @type {Array.<number>}\\n\\t         */\\n\\t        this._dataExtent;\\n\\n\\t        /**\\n\\t         * {minSpan, maxSpan, minValueSpan, maxValueSpan}\\n\\t         * @private\\n\\t         * @type {Object}\\n\\t         */\\n\\t        this._minMaxSpan;\\n\\n\\t        /**\\n\\t         * @readOnly\\n\\t         * @type {module: echarts/model/Global}\\n\\t         */\\n\\t        this.ecModel = ecModel;\\n\\n\\t        /**\\n\\t         * @private\\n\\t         * @type {module: echarts/component/dataZoom/DataZoomModel}\\n\\t         */\\n\\t        this._dataZoomModel = dataZoomModel;\\n\\t    };\\n\\n\\t    AxisProxy.prototype = {\\n\\n\\t        constructor: AxisProxy,\\n\\n\\t        /**\\n\\t         * Whether the axisProxy is hosted by dataZoomModel.\\n\\t         *\\n\\t         * @public\\n\\t         * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\\n\\t         * @return {boolean}\\n\\t         */\\n\\t        hostedBy: function (dataZoomModel) {\\n\\t            return this._dataZoomModel === dataZoomModel;\\n\\t        },\\n\\n\\t        /**\\n\\t         * @return {Array.<number>} Value can only be NaN or finite value.\\n\\t         */\\n\\t        getDataValueWindow: function () {\\n\\t            return this._valueWindow.slice();\\n\\t        },\\n\\n\\t        /**\\n\\t         * @return {Array.<number>}\\n\\t         */\\n\\t        getDataPercentWindow: function () {\\n\\t            return this._percentWindow.slice();\\n\\t        },\\n\\n\\t        /**\\n\\t         * @public\\n\\t         * @param {number} axisIndex\\n\\t         * @return {Array} seriesModels\\n\\t         */\\n\\t        getTargetSeriesModels: function () {\\n\\t            var seriesModels = [];\\n\\t            var ecModel = this.ecModel;\\n\\n\\t            ecModel.eachSeries(function (seriesModel) {\\n\\t                if (helper.isCoordSupported(seriesModel.get('coordinateSystem'))) {\\n\\t                    var dimName = this._dimName;\\n\\t                    var axisModel = ecModel.queryComponents({\\n\\t                        mainType: dimName + 'Axis',\\n\\t                        index: seriesModel.get(dimName + 'AxisIndex'),\\n\\t                        id: seriesModel.get(dimName + 'AxisId')\\n\\t                    })[0];\\n\\t                    if (this._axisIndex === (axisModel && axisModel.componentIndex)) {\\n\\t                        seriesModels.push(seriesModel);\\n\\t                    }\\n\\t                }\\n\\t            }, this);\\n\\n\\t            return seriesModels;\\n\\t        },\\n\\n\\t        getAxisModel: function () {\\n\\t            return this.ecModel.getComponent(this._dimName + 'Axis', this._axisIndex);\\n\\t        },\\n\\n\\t        getOtherAxisModel: function () {\\n\\t            var axisDim = this._dimName;\\n\\t            var ecModel = this.ecModel;\\n\\t            var axisModel = this.getAxisModel();\\n\\t            var isCartesian = axisDim === 'x' || axisDim === 'y';\\n\\t            var otherAxisDim;\\n\\t            var coordSysIndexName;\\n\\t            if (isCartesian) {\\n\\t                coordSysIndexName = 'gridIndex';\\n\\t                otherAxisDim = axisDim === 'x' ? 'y' : 'x';\\n\\t            }\\n\\t            else {\\n\\t                coordSysIndexName = 'polarIndex';\\n\\t                otherAxisDim = axisDim === 'angle' ? 'radius' : 'angle';\\n\\t            }\\n\\t            var foundOtherAxisModel;\\n\\t            ecModel.eachComponent(otherAxisDim + 'Axis', function (otherAxisModel) {\\n\\t                if ((otherAxisModel.get(coordSysIndexName) || 0)\\n\\t                    === (axisModel.get(coordSysIndexName) || 0)\\n\\t                ) {\\n\\t                    foundOtherAxisModel = otherAxisModel;\\n\\t                }\\n\\t            });\\n\\t            return foundOtherAxisModel;\\n\\t        },\\n\\n\\t        getMinMaxSpan: function () {\\n\\t            return zrUtil.clone(this._minMaxSpan);\\n\\t        },\\n\\n\\t        /**\\n\\t         * Only calculate by given range and this._dataExtent, do not change anything.\\n\\t         *\\n\\t         * @param {Object} opt\\n\\t         * @param {number} [opt.start]\\n\\t         * @param {number} [opt.end]\\n\\t         * @param {number} [opt.startValue]\\n\\t         * @param {number} [opt.endValue]\\n\\t         */\\n\\t        calculateDataWindow: function (opt) {\\n\\t            var dataExtent = this._dataExtent;\\n\\t            var axisModel = this.getAxisModel();\\n\\t            var scale = axisModel.axis.scale;\\n\\t            var rangePropMode = this._dataZoomModel.getRangePropMode();\\n\\t            var percentExtent = [0, 100];\\n\\t            var percentWindow = [\\n\\t                opt.start,\\n\\t                opt.end\\n\\t            ];\\n\\t            var valueWindow = [];\\n\\n\\t            each(['startValue', 'endValue'], function (prop) {\\n\\t                valueWindow.push(opt[prop] != null ? scale.parse(opt[prop]) : null);\\n\\t            });\\n\\n\\t            // Normalize bound.\\n\\t            each([0, 1], function (idx) {\\n\\t                var boundValue = valueWindow[idx];\\n\\t                var boundPercent = percentWindow[idx];\\n\\n\\t                // Notice: dataZoom is based either on `percentProp` ('start', 'end') or\\n\\t                // on `valueProp` ('startValue', 'endValue'). The former one is suitable\\n\\t                // for cases that a dataZoom component controls multiple axes with different\\n\\t                // unit or extent, and the latter one is suitable for accurate zoom by pixel\\n\\t                // (e.g., in dataZoomSelect). `valueProp` can be calculated from `percentProp`,\\n\\t                // but it is awkward that `percentProp` can not be obtained from `valueProp`\\n\\t                // accurately (because all of values that are overflow the `dataExtent` will\\n\\t                // be calculated to percent '100%'). So we have to use\\n\\t                // `dataZoom.getRangePropMode()` to mark which prop is used.\\n\\t                // `rangePropMode` is updated only when setOption or dispatchAction, otherwise\\n\\t                // it remains its original value.\\n\\n\\t                if (rangePropMode[idx] === 'percent') {\\n\\t                    if (boundPercent == null) {\\n\\t                        boundPercent = percentExtent[idx];\\n\\t                    }\\n\\t                    // Use scale.parse to math round for category or time axis.\\n\\t                    boundValue = scale.parse(numberUtil.linearMap(\\n\\t                        boundPercent, percentExtent, dataExtent, true\\n\\t                    ));\\n\\t                }\\n\\t                else {\\n\\t                    // Calculating `percent` from `value` may be not accurate, because\\n\\t                    // This calculation can not be inversed, because all of values that\\n\\t                    // are overflow the `dataExtent` will be calculated to percent '100%'\\n\\t                    boundPercent = numberUtil.linearMap(\\n\\t                        boundValue, dataExtent, percentExtent, true\\n\\t                    );\\n\\t                }\\n\\n\\t                // valueWindow[idx] = round(boundValue);\\n\\t                // percentWindow[idx] = round(boundPercent);\\n\\t                valueWindow[idx] = boundValue;\\n\\t                percentWindow[idx] = boundPercent;\\n\\t            });\\n\\n\\t            return {\\n\\t                valueWindow: asc(valueWindow),\\n\\t                percentWindow: asc(percentWindow)\\n\\t            };\\n\\t        },\\n\\n\\t        /**\\n\\t         * Notice: reset should not be called before series.restoreData() called,\\n\\t         * so it is recommanded to be called in \\\"process stage\\\" but not \\\"model init\\n\\t         * stage\\\".\\n\\t         *\\n\\t         * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\\n\\t         */\\n\\t        reset: function (dataZoomModel) {\\n\\t            if (dataZoomModel !== this._dataZoomModel) {\\n\\t                return;\\n\\t            }\\n\\n\\t            // Culculate data window and data extent, and record them.\\n\\t            this._dataExtent = calculateDataExtent(\\n\\t                this, this._dimName, this.getTargetSeriesModels()\\n\\t            );\\n\\n\\t            var dataWindow = this.calculateDataWindow(dataZoomModel.option);\\n\\n\\t            this._valueWindow = dataWindow.valueWindow;\\n\\t            this._percentWindow = dataWindow.percentWindow;\\n\\n\\t            setMinMaxSpan(this);\\n\\n\\t            // Update axis setting then.\\n\\t            setAxisModel(this);\\n\\t        },\\n\\n\\t        /**\\n\\t         * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\\n\\t         */\\n\\t        restore: function (dataZoomModel) {\\n\\t            if (dataZoomModel !== this._dataZoomModel) {\\n\\t                return;\\n\\t            }\\n\\n\\t            this._valueWindow = this._percentWindow = null;\\n\\t            setAxisModel(this, true);\\n\\t        },\\n\\n\\t        /**\\n\\t         * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\\n\\t         */\\n\\t        filterData: function (dataZoomModel) {\\n\\t            if (dataZoomModel !== this._dataZoomModel) {\\n\\t                return;\\n\\t            }\\n\\n\\t            var axisDim = this._dimName;\\n\\t            var seriesModels = this.getTargetSeriesModels();\\n\\t            var filterMode = dataZoomModel.get('filterMode');\\n\\t            var valueWindow = this._valueWindow;\\n\\n\\t            if (filterMode === 'none') {\\n\\t                return;\\n\\t            }\\n\\n\\t            // FIXME\\n\\t            // Toolbox may has dataZoom injected. And if there are stacked bar chart\\n\\t            // with NaN data, NaN will be filtered and stack will be wrong.\\n\\t            // So we need to force the mode to be set empty.\\n\\t            // In fect, it is not a big deal that do not support filterMode-'filter'\\n\\t            // when using toolbox#dataZoom, utill tooltip#dataZoom support \\\"single axis\\n\\t            // selection\\\" some day, which might need \\\"adapt to data extent on the\\n\\t            // otherAxis\\\", which is disabled by filterMode-'empty'.\\n\\t            var otherAxisModel = this.getOtherAxisModel();\\n\\t            if (dataZoomModel.get('$fromToolbox')\\n\\t                && otherAxisModel\\n\\t                && otherAxisModel.get('type') === 'category'\\n\\t            ) {\\n\\t                filterMode = 'empty';\\n\\t            }\\n\\n\\t            // Process series data\\n\\t            each(seriesModels, function (seriesModel) {\\n\\t                var seriesData = seriesModel.getData();\\n\\t                var dataDims = seriesModel.coordDimToDataDim(axisDim);\\n\\n\\t                if (filterMode === 'weakFilter') {\\n\\t                    seriesData && seriesData.filterSelf(function (dataIndex) {\\n\\t                        var leftOut;\\n\\t                        var rightOut;\\n\\t                        var hasValue;\\n\\t                        for (var i = 0; i < dataDims.length; i++) {\\n\\t                            var value = seriesData.get(dataDims[i], dataIndex);\\n\\t                            var thisHasValue = !isNaN(value);\\n\\t                            var thisLeftOut = value < valueWindow[0];\\n\\t                            var thisRightOut = value > valueWindow[1];\\n\\t                            if (thisHasValue && !thisLeftOut && !thisRightOut) {\\n\\t                                return true;\\n\\t                            }\\n\\t                            thisHasValue && (hasValue = true);\\n\\t                            thisLeftOut && (leftOut = true);\\n\\t                            thisRightOut && (rightOut = true);\\n\\t                        }\\n\\t                        // If both left out and right out, do not filter.\\n\\t                        return hasValue && leftOut && rightOut;\\n\\t                    });\\n\\t                }\\n\\t                else {\\n\\t                    seriesData && each(dataDims, function (dim) {\\n\\t                        if (filterMode === 'empty') {\\n\\t                            seriesModel.setData(\\n\\t                                seriesData.map(dim, function (value) {\\n\\t                                    return !isInWindow(value) ? NaN : value;\\n\\t                                })\\n\\t                            );\\n\\t                        }\\n\\t                        else {\\n\\t                            seriesData.filterSelf(dim, isInWindow);\\n\\t                        }\\n\\t                    });\\n\\t                }\\n\\t            });\\n\\n\\t            function isInWindow(value) {\\n\\t                return value >= valueWindow[0] && value <= valueWindow[1];\\n\\t            }\\n\\t        }\\n\\t    };\\n\\n\\t    function calculateDataExtent(axisProxy, axisDim, seriesModels) {\\n\\t        var dataExtent = [Infinity, -Infinity];\\n\\n\\t        each(seriesModels, function (seriesModel) {\\n\\t            var seriesData = seriesModel.getData();\\n\\t            if (seriesData) {\\n\\t                each(seriesModel.coordDimToDataDim(axisDim), function (dim) {\\n\\t                    var seriesExtent = seriesData.getDataExtent(dim);\\n\\t                    seriesExtent[0] < dataExtent[0] && (dataExtent[0] = seriesExtent[0]);\\n\\t                    seriesExtent[1] > dataExtent[1] && (dataExtent[1] = seriesExtent[1]);\\n\\t                });\\n\\t            }\\n\\t        });\\n\\n\\t        if (dataExtent[1] < dataExtent[0]) {\\n\\t            dataExtent = [NaN, NaN];\\n\\t        }\\n\\n\\t        // It is important to get \\\"consistent\\\" extent when more then one axes is\\n\\t        // controlled by a `dataZoom`, otherwise those axes will not be synchronized\\n\\t        // when zooming. But it is difficult to know what is \\\"consistent\\\", considering\\n\\t        // axes have different type or even different meanings (For example, two\\n\\t        // time axes are used to compare data of the same date in different years).\\n\\t        // So basically dataZoom just obtains extent by series.data (in category axis\\n\\t        // extent can be obtained from axis.data).\\n\\t        // Nevertheless, user can set min/max/scale on axes to make extent of axes\\n\\t        // consistent.\\n\\t        fixExtentByAxis(axisProxy, dataExtent);\\n\\n\\t        return dataExtent;\\n\\t    }\\n\\n\\t    function fixExtentByAxis(axisProxy, dataExtent) {\\n\\t        var axisModel = axisProxy.getAxisModel();\\n\\t        var min = axisModel.getMin(true);\\n\\n\\t        // For category axis, if min/max/scale are not set, extent is determined\\n\\t        // by axis.data by default.\\n\\t        var isCategoryAxis = axisModel.get('type') === 'category';\\n\\t        var axisDataLen = isCategoryAxis && (axisModel.get('data') || []).length;\\n\\n\\t        if (min != null && min !== 'dataMin') {\\n\\t            dataExtent[0] = min;\\n\\t        }\\n\\t        else if (isCategoryAxis) {\\n\\t            dataExtent[0] = axisDataLen > 0 ? 0 : NaN;\\n\\t        }\\n\\n\\t        var max = axisModel.getMax(true);\\n\\t        if (max != null && max !== 'dataMax') {\\n\\t            dataExtent[1] = max;\\n\\t        }\\n\\t        else if (isCategoryAxis) {\\n\\t            dataExtent[1] = axisDataLen > 0 ? axisDataLen - 1 : NaN;\\n\\t        }\\n\\n\\t        if (!axisModel.get('scale', true)) {\\n\\t            dataExtent[0] > 0 && (dataExtent[0] = 0);\\n\\t            dataExtent[1] < 0 && (dataExtent[1] = 0);\\n\\t        }\\n\\n\\t        // For value axis, if min/max/scale are not set, we just use the extent obtained\\n\\t        // by series data, which may be a little different from the extent calculated by\\n\\t        // `axisHelper.getScaleExtent`. But the different just affects the experience a\\n\\t        // little when zooming. So it will not be fixed until some users require it strongly.\\n\\n\\t        return dataExtent;\\n\\t    }\\n\\n\\t    function setAxisModel(axisProxy, isRestore) {\\n\\t        var axisModel = axisProxy.getAxisModel();\\n\\n\\t        var percentWindow = axisProxy._percentWindow;\\n\\t        var valueWindow = axisProxy._valueWindow;\\n\\n\\t        if (!percentWindow) {\\n\\t            return;\\n\\t        }\\n\\n\\t        // [0, 500]: arbitrary value, guess axis extent.\\n\\t        var precision = numberUtil.getPixelPrecision(valueWindow, [0, 500]);\\n\\t        // isRestore or isFull\\n\\t        var useOrigin = isRestore || (percentWindow[0] === 0 && percentWindow[1] === 100);\\n\\n\\t        axisModel.setRange(\\n\\t            useOrigin ? null : +valueWindow[0].toFixed(precision),\\n\\t            useOrigin ? null : +valueWindow[1].toFixed(precision)\\n\\t        );\\n\\t    }\\n\\n\\t    function setMinMaxSpan(axisProxy) {\\n\\t        var minMaxSpan = axisProxy._minMaxSpan = {};\\n\\t        var dataZoomModel = axisProxy._dataZoomModel;\\n\\n\\t        each(['min', 'max'], function (minMax) {\\n\\t            minMaxSpan[minMax + 'Span'] = dataZoomModel.get(minMax + 'Span');\\n\\n\\t            // minValueSpan and maxValueSpan has higher priority than minSpan and maxSpan\\n\\t            var valueSpan = dataZoomModel.get(minMax + 'ValueSpan');\\n\\t            if (valueSpan != null) {\\n\\t                minMaxSpan[minMax + 'ValueSpan'] = valueSpan;\\n\\n\\t                valueSpan = axisProxy.getAxisModel().axis.scale.parse(valueSpan);\\n\\t                if (valueSpan != null) {\\n\\t                    minMaxSpan[minMax + 'Span'] = numberUtil.linearMap(\\n\\t                        valueSpan, axisProxy._dataExtent, [0, 100], true\\n\\t                    );\\n\\t                }\\n\\t            }\\n\\t        });\\n\\t    }\\n\\n\\t    module.exports = AxisProxy;\\n\\n\\n\\n/***/ },\\n/* 368 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var ComponentView = __webpack_require__(79);\\n\\n\\t    module.exports = ComponentView.extend({\\n\\n\\t        type: 'dataZoom',\\n\\n\\t        render: function (dataZoomModel, ecModel, api, payload) {\\n\\t            this.dataZoomModel = dataZoomModel;\\n\\t            this.ecModel = ecModel;\\n\\t            this.api = api;\\n\\t        },\\n\\n\\t        /**\\n\\t         * Find the first target coordinate system.\\n\\t         *\\n\\t         * @protected\\n\\t         * @return {Object} {\\n\\t         *                   grid: [\\n\\t         *                       {model: coord0, axisModels: [axis1, axis3], coordIndex: 1},\\n\\t         *                       {model: coord1, axisModels: [axis0, axis2], coordIndex: 0},\\n\\t         *                       ...\\n\\t         *                   ],  // cartesians must not be null/undefined.\\n\\t         *                   polar: [\\n\\t         *                       {model: coord0, axisModels: [axis4], coordIndex: 0},\\n\\t         *                       ...\\n\\t         *                   ],  // polars must not be null/undefined.\\n\\t         *                   singleAxis: [\\n\\t         *                       {model: coord0, axisModels: [], coordIndex: 0}\\n\\t         *                   ]\\n\\t         */\\n\\t        getTargetCoordInfo: function () {\\n\\t            var dataZoomModel = this.dataZoomModel;\\n\\t            var ecModel = this.ecModel;\\n\\t            var coordSysLists = {};\\n\\n\\t            dataZoomModel.eachTargetAxis(function (dimNames, axisIndex) {\\n\\t                var axisModel = ecModel.getComponent(dimNames.axis, axisIndex);\\n\\t                if (axisModel) {\\n\\t                    var coordModel = axisModel.getCoordSysModel();\\n\\t                    coordModel && save(\\n\\t                        coordModel,\\n\\t                        axisModel,\\n\\t                        coordSysLists[coordModel.mainType] || (coordSysLists[coordModel.mainType] = []),\\n\\t                        coordModel.componentIndex\\n\\t                    );\\n\\t                }\\n\\t            }, this);\\n\\n\\t            function save(coordModel, axisModel, store, coordIndex) {\\n\\t                var item;\\n\\t                for (var i = 0; i < store.length; i++) {\\n\\t                    if (store[i].model === coordModel) {\\n\\t                        item = store[i];\\n\\t                        break;\\n\\t                    }\\n\\t                }\\n\\t                if (!item) {\\n\\t                    store.push(item = {\\n\\t                        model: coordModel, axisModels: [], coordIndex: coordIndex\\n\\t                    });\\n\\t                }\\n\\t                item.axisModels.push(axisModel);\\n\\t            }\\n\\n\\t            return coordSysLists;\\n\\t        }\\n\\n\\t    });\\n\\n\\n\\n/***/ },\\n/* 369 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * @file Data zoom model\\n\\t */\\n\\n\\n\\t    var DataZoomModel = __webpack_require__(365);\\n\\n\\t    var SliderZoomModel = DataZoomModel.extend({\\n\\n\\t        type: 'dataZoom.slider',\\n\\n\\t        layoutMode: 'box',\\n\\n\\t        /**\\n\\t         * @protected\\n\\t         */\\n\\t        defaultOption: {\\n\\t            show: true,\\n\\n\\t            // ph => placeholder. Using placehoder here because\\n\\t            // deault value can only be drived in view stage.\\n\\t            right: 'ph',  // Default align to grid rect.\\n\\t            top: 'ph',    // Default align to grid rect.\\n\\t            width: 'ph',  // Default align to grid rect.\\n\\t            height: 'ph', // Default align to grid rect.\\n\\t            left: null,   // Default align to grid rect.\\n\\t            bottom: null, // Default align to grid rect.\\n\\n\\t            backgroundColor: 'rgba(47,69,84,0)',    // Background of slider zoom component.\\n\\t            // dataBackgroundColor: '#ddd',         // Background coor of data shadow and border of box,\\n\\t                                                    // highest priority, remain for compatibility of\\n\\t                                                    // previous version, but not recommended any more.\\n\\t            dataBackground: {\\n\\t                lineStyle: {\\n\\t                    color: '#2f4554',\\n\\t                    width: 0.5,\\n\\t                    opacity: 0.3\\n\\t                },\\n\\t                areaStyle: {\\n\\t                    color: 'rgba(47,69,84,0.3)',\\n\\t                    opacity: 0.3\\n\\t                }\\n\\t            },\\n\\t            borderColor: '#ddd',                    // border color of the box. For compatibility,\\n\\t                                                    // if dataBackgroundColor is set, borderColor\\n\\t                                                    // is ignored.\\n\\n\\t            fillerColor: 'rgba(167,183,204,0.4)',     // Color of selected area.\\n\\t            // handleColor: 'rgba(89,170,216,0.95)',     // Color of handle.\\n\\t            // handleIcon: 'path://M4.9,17.8c0-1.4,4.5-10.5,5.5-12.4c0-0.1,0.6-1.1,0.9-1.1c0.4,0,0.9,1,0.9,1.1c1.1,2.2,5.4,11,5.4,12.4v17.8c0,1.5-0.6,2.1-1.3,2.1H6.1c-0.7,0-1.3-0.6-1.3-2.1V17.8z',\\n\\t            handleIcon: 'M8.2,13.6V3.9H6.3v9.7H3.1v14.9h3.3v9.7h1.8v-9.7h3.3V13.6H8.2z M9.7,24.4H4.8v-1.4h4.9V24.4z M9.7,19.1H4.8v-1.4h4.9V19.1z',\\n\\t            // Percent of the slider height\\n\\t            handleSize: '100%',\\n\\n\\t            handleStyle: {\\n\\t                color: '#a7b7cc'\\n\\t            },\\n\\n\\t            labelPrecision: null,\\n\\t            labelFormatter: null,\\n\\t            showDetail: true,\\n\\t            showDataShadow: 'auto',                 // Default auto decision.\\n\\t            realtime: true,\\n\\t            zoomLock: false,                        // Whether disable zoom.\\n\\t            textStyle: {\\n\\t                color: '#333'\\n\\t            }\\n\\t        }\\n\\n\\t    });\\n\\n\\t    module.exports = SliderZoomModel;\\n\\n\\n\\n/***/ },\\n/* 370 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var graphic = __webpack_require__(18);\\n\\t    var throttle = __webpack_require__(81);\\n\\t    var DataZoomView = __webpack_require__(368);\\n\\t    var Rect = graphic.Rect;\\n\\t    var numberUtil = __webpack_require__(7);\\n\\t    var linearMap = numberUtil.linearMap;\\n\\t    var layout = __webpack_require__(71);\\n\\t    var sliderMove = __webpack_require__(239);\\n\\t    var eventTool = __webpack_require__(88);\\n\\n\\t    var asc = numberUtil.asc;\\n\\t    var bind = zrUtil.bind;\\n\\t    // var mathMax = Math.max;\\n\\t    var each = zrUtil.each;\\n\\n\\t    // Constants\\n\\t    var DEFAULT_LOCATION_EDGE_GAP = 7;\\n\\t    var DEFAULT_FRAME_BORDER_WIDTH = 1;\\n\\t    var DEFAULT_FILLER_SIZE = 30;\\n\\t    var HORIZONTAL = 'horizontal';\\n\\t    var VERTICAL = 'vertical';\\n\\t    var LABEL_GAP = 5;\\n\\t    var SHOW_DATA_SHADOW_SERIES_TYPE = ['line', 'bar', 'candlestick', 'scatter'];\\n\\n\\t    var SliderZoomView = DataZoomView.extend({\\n\\n\\t        type: 'dataZoom.slider',\\n\\n\\t        init: function (ecModel, api) {\\n\\n\\t            /**\\n\\t             * @private\\n\\t             * @type {Object}\\n\\t             */\\n\\t            this._displayables = {};\\n\\n\\t            /**\\n\\t             * @private\\n\\t             * @type {string}\\n\\t             */\\n\\t            this._orient;\\n\\n\\t            /**\\n\\t             * [0, 100]\\n\\t             * @private\\n\\t             */\\n\\t            this._range;\\n\\n\\t            /**\\n\\t             * [coord of the first handle, coord of the second handle]\\n\\t             * @private\\n\\t             */\\n\\t            this._handleEnds;\\n\\n\\t            /**\\n\\t             * [length, thick]\\n\\t             * @private\\n\\t             * @type {Array.<number>}\\n\\t             */\\n\\t            this._size;\\n\\n\\t            /**\\n\\t             * @private\\n\\t             * @type {number}\\n\\t             */\\n\\t            this._handleWidth;\\n\\n\\t            /**\\n\\t             * @private\\n\\t             * @type {number}\\n\\t             */\\n\\t            this._handleHeight;\\n\\n\\t            /**\\n\\t             * @private\\n\\t             */\\n\\t            this._location;\\n\\n\\t            /**\\n\\t             * @private\\n\\t             */\\n\\t            this._dragging;\\n\\n\\t            /**\\n\\t             * @private\\n\\t             */\\n\\t            this._dataShadowInfo;\\n\\n\\t            this.api = api;\\n\\t        },\\n\\n\\t        /**\\n\\t         * @override\\n\\t         */\\n\\t        render: function (dataZoomModel, ecModel, api, payload) {\\n\\t            SliderZoomView.superApply(this, 'render', arguments);\\n\\n\\t            throttle.createOrUpdate(\\n\\t                this,\\n\\t                '_dispatchZoomAction',\\n\\t                this.dataZoomModel.get('throttle'),\\n\\t                'fixRate'\\n\\t            );\\n\\n\\t            this._orient = dataZoomModel.get('orient');\\n\\n\\t            if (this.dataZoomModel.get('show') === false) {\\n\\t                this.group.removeAll();\\n\\t                return;\\n\\t            }\\n\\n\\t            // Notice: this._resetInterval() should not be executed when payload.type\\n\\t            // is 'dataZoom', origin this._range should be maintained, otherwise 'pan'\\n\\t            // or 'zoom' info will be missed because of 'throttle' of this.dispatchAction,\\n\\t            if (!payload || payload.type !== 'dataZoom' || payload.from !== this.uid) {\\n\\t                this._buildView();\\n\\t            }\\n\\n\\t            this._updateView();\\n\\t        },\\n\\n\\t        /**\\n\\t         * @override\\n\\t         */\\n\\t        remove: function () {\\n\\t            SliderZoomView.superApply(this, 'remove', arguments);\\n\\t            throttle.clear(this, '_dispatchZoomAction');\\n\\t        },\\n\\n\\t        /**\\n\\t         * @override\\n\\t         */\\n\\t        dispose: function () {\\n\\t            SliderZoomView.superApply(this, 'dispose', arguments);\\n\\t            throttle.clear(this, '_dispatchZoomAction');\\n\\t        },\\n\\n\\t        _buildView: function () {\\n\\t            var thisGroup = this.group;\\n\\n\\t            thisGroup.removeAll();\\n\\n\\t            this._resetLocation();\\n\\t            this._resetInterval();\\n\\n\\t            var barGroup = this._displayables.barGroup = new graphic.Group();\\n\\n\\t            this._renderBackground();\\n\\n\\t            this._renderHandle();\\n\\n\\t            this._renderDataShadow();\\n\\n\\t            thisGroup.add(barGroup);\\n\\n\\t            this._positionGroup();\\n\\t        },\\n\\n\\t        /**\\n\\t         * @private\\n\\t         */\\n\\t        _resetLocation: function () {\\n\\t            var dataZoomModel = this.dataZoomModel;\\n\\t            var api = this.api;\\n\\n\\t            // If some of x/y/width/height are not specified,\\n\\t            // auto-adapt according to target grid.\\n\\t            var coordRect = this._findCoordRect();\\n\\t            var ecSize = {width: api.getWidth(), height: api.getHeight()};\\n\\t            // Default align by coordinate system rect.\\n\\t            var positionInfo = this._orient === HORIZONTAL\\n\\t                ? {\\n\\t                    // Why using 'right', because right should be used in vertical,\\n\\t                    // and it is better to be consistent for dealing with position param merge.\\n\\t                    right: ecSize.width - coordRect.x - coordRect.width,\\n\\t                    top: (ecSize.height - DEFAULT_FILLER_SIZE - DEFAULT_LOCATION_EDGE_GAP),\\n\\t                    width: coordRect.width,\\n\\t                    height: DEFAULT_FILLER_SIZE\\n\\t                }\\n\\t                : { // vertical\\n\\t                    right: DEFAULT_LOCATION_EDGE_GAP,\\n\\t                    top: coordRect.y,\\n\\t                    width: DEFAULT_FILLER_SIZE,\\n\\t                    height: coordRect.height\\n\\t                };\\n\\n\\t            // Do not write back to option and replace value 'ph', because\\n\\t            // the 'ph' value should be recalculated when resize.\\n\\t            var layoutParams = layout.getLayoutParams(dataZoomModel.option);\\n\\n\\t            // Replace the placeholder value.\\n\\t            zrUtil.each(['right', 'top', 'width', 'height'], function (name) {\\n\\t                if (layoutParams[name] === 'ph') {\\n\\t                    layoutParams[name] = positionInfo[name];\\n\\t                }\\n\\t            });\\n\\n\\t            var layoutRect = layout.getLayoutRect(\\n\\t                layoutParams,\\n\\t                ecSize,\\n\\t                dataZoomModel.padding\\n\\t            );\\n\\n\\t            this._location = {x: layoutRect.x, y: layoutRect.y};\\n\\t            this._size = [layoutRect.width, layoutRect.height];\\n\\t            this._orient === VERTICAL && this._size.reverse();\\n\\t        },\\n\\n\\t        /**\\n\\t         * @private\\n\\t         */\\n\\t        _positionGroup: function () {\\n\\t            var thisGroup = this.group;\\n\\t            var location = this._location;\\n\\t            var orient = this._orient;\\n\\n\\t            // Just use the first axis to determine mapping.\\n\\t            var targetAxisModel = this.dataZoomModel.getFirstTargetAxisModel();\\n\\t            var inverse = targetAxisModel && targetAxisModel.get('inverse');\\n\\n\\t            var barGroup = this._displayables.barGroup;\\n\\t            var otherAxisInverse = (this._dataShadowInfo || {}).otherAxisInverse;\\n\\n\\t            // Transform barGroup.\\n\\t            barGroup.attr(\\n\\t                (orient === HORIZONTAL && !inverse)\\n\\t                ? {scale: otherAxisInverse ? [1, 1] : [1, -1]}\\n\\t                : (orient === HORIZONTAL && inverse)\\n\\t                ? {scale: otherAxisInverse ? [-1, 1] : [-1, -1]}\\n\\t                : (orient === VERTICAL && !inverse)\\n\\t                ? {scale: otherAxisInverse ? [1, -1] : [1, 1], rotation: Math.PI / 2}\\n\\t                // Dont use Math.PI, considering shadow direction.\\n\\t                : {scale: otherAxisInverse ? [-1, -1] : [-1, 1], rotation: Math.PI / 2}\\n\\t            );\\n\\n\\t            // Position barGroup\\n\\t            var rect = thisGroup.getBoundingRect([barGroup]);\\n\\t            thisGroup.attr('position', [location.x - rect.x, location.y - rect.y]);\\n\\t        },\\n\\n\\t        /**\\n\\t         * @private\\n\\t         */\\n\\t        _getViewExtent: function () {\\n\\t            return [0, this._size[0]];\\n\\t        },\\n\\n\\t        _renderBackground: function () {\\n\\t            var dataZoomModel = this.dataZoomModel;\\n\\t            var size = this._size;\\n\\t            var barGroup = this._displayables.barGroup;\\n\\n\\t            barGroup.add(new Rect({\\n\\t                silent: true,\\n\\t                shape: {\\n\\t                    x: 0, y: 0, width: size[0], height: size[1]\\n\\t                },\\n\\t                style: {\\n\\t                    fill: dataZoomModel.get('backgroundColor')\\n\\t                },\\n\\t                z2: -40\\n\\t            }));\\n\\n\\t            // Click panel, over shadow, below handles.\\n\\t            barGroup.add(new Rect({\\n\\t                shape: {\\n\\t                    x: 0, y: 0, width: size[0], height: size[1]\\n\\t                },\\n\\t                style: {\\n\\t                    fill: 'transparent'\\n\\t                },\\n\\t                z2: 0,\\n\\t                onclick: zrUtil.bind(this._onClickPanelClick, this)\\n\\t            }));\\n\\t        },\\n\\n\\t        _renderDataShadow: function () {\\n\\t            var info = this._dataShadowInfo = this._prepareDataShadowInfo();\\n\\n\\t            if (!info) {\\n\\t                return;\\n\\t            }\\n\\n\\t            var size = this._size;\\n\\t            var seriesModel = info.series;\\n\\t            var data = seriesModel.getRawData();\\n\\t            var otherDim = seriesModel.getShadowDim\\n\\t                ? seriesModel.getShadowDim() // @see candlestick\\n\\t                : info.otherDim;\\n\\n\\t            if (otherDim == null) {\\n\\t                return;\\n\\t            }\\n\\n\\t            var otherDataExtent = data.getDataExtent(otherDim);\\n\\t            // Nice extent.\\n\\t            var otherOffset = (otherDataExtent[1] - otherDataExtent[0]) * 0.3;\\n\\t            otherDataExtent = [\\n\\t                otherDataExtent[0] - otherOffset,\\n\\t                otherDataExtent[1] + otherOffset\\n\\t            ];\\n\\t            var otherShadowExtent = [0, size[1]];\\n\\n\\t            var thisShadowExtent = [0, size[0]];\\n\\n\\t            var areaPoints = [[size[0], 0], [0, 0]];\\n\\t            var linePoints = [];\\n\\t            var step = thisShadowExtent[1] / (data.count() - 1);\\n\\t            var thisCoord = 0;\\n\\n\\t            // Optimize for large data shadow\\n\\t            var stride = Math.round(data.count() / size[0]);\\n\\t            var lastIsEmpty;\\n\\t            data.each([otherDim], function (value, index) {\\n\\t                if (stride > 0 && (index % stride)) {\\n\\t                    thisCoord += step;\\n\\t                    return;\\n\\t                }\\n\\n\\t                // FIXME\\n\\t                // Should consider axis.min/axis.max when drawing dataShadow.\\n\\n\\t                // FIXME\\n\\t                // 应该使用统一的空判断？还是在list里进行空判断？\\n\\t                var isEmpty = value == null || isNaN(value) || value === '';\\n\\t                // See #4235.\\n\\t                var otherCoord = isEmpty\\n\\t                    ? 0 : linearMap(value, otherDataExtent, otherShadowExtent, true);\\n\\n\\t                // Attempt to draw data shadow precisely when there are empty value.\\n\\t                if (isEmpty && !lastIsEmpty && index) {\\n\\t                    areaPoints.push([areaPoints[areaPoints.length - 1][0], 0]);\\n\\t                    linePoints.push([linePoints[linePoints.length - 1][0], 0]);\\n\\t                }\\n\\t                else if (!isEmpty && lastIsEmpty) {\\n\\t                    areaPoints.push([thisCoord, 0]);\\n\\t                    linePoints.push([thisCoord, 0]);\\n\\t                }\\n\\n\\t                areaPoints.push([thisCoord, otherCoord]);\\n\\t                linePoints.push([thisCoord, otherCoord]);\\n\\n\\t                thisCoord += step;\\n\\t                lastIsEmpty = isEmpty;\\n\\t            });\\n\\n\\t            var dataZoomModel = this.dataZoomModel;\\n\\t            // var dataBackgroundModel = dataZoomModel.getModel('dataBackground');\\n\\t            this._displayables.barGroup.add(new graphic.Polygon({\\n\\t                shape: {points: areaPoints},\\n\\t                style: zrUtil.defaults(\\n\\t                    {fill: dataZoomModel.get('dataBackgroundColor')},\\n\\t                    dataZoomModel.getModel('dataBackground.areaStyle').getAreaStyle()\\n\\t                ),\\n\\t                silent: true,\\n\\t                z2: -20\\n\\t            }));\\n\\t            this._displayables.barGroup.add(new graphic.Polyline({\\n\\t                shape: {points: linePoints},\\n\\t                style: dataZoomModel.getModel('dataBackground.lineStyle').getLineStyle(),\\n\\t                silent: true,\\n\\t                z2: -19\\n\\t            }));\\n\\t        },\\n\\n\\t        _prepareDataShadowInfo: function () {\\n\\t            var dataZoomModel = this.dataZoomModel;\\n\\t            var showDataShadow = dataZoomModel.get('showDataShadow');\\n\\n\\t            if (showDataShadow === false) {\\n\\t                return;\\n\\t            }\\n\\n\\t            // Find a representative series.\\n\\t            var result;\\n\\t            var ecModel = this.ecModel;\\n\\n\\t            dataZoomModel.eachTargetAxis(function (dimNames, axisIndex) {\\n\\t                var seriesModels = dataZoomModel\\n\\t                    .getAxisProxy(dimNames.name, axisIndex)\\n\\t                    .getTargetSeriesModels();\\n\\n\\t                zrUtil.each(seriesModels, function (seriesModel) {\\n\\t                    if (result) {\\n\\t                        return;\\n\\t                    }\\n\\n\\t                    if (showDataShadow !== true && zrUtil.indexOf(\\n\\t                            SHOW_DATA_SHADOW_SERIES_TYPE, seriesModel.get('type')\\n\\t                        ) < 0\\n\\t                    ) {\\n\\t                        return;\\n\\t                    }\\n\\n\\t                    var thisAxis = ecModel.getComponent(dimNames.axis, axisIndex).axis;\\n\\t                    var otherDim = getOtherDim(dimNames.name);\\n\\t                    var otherAxisInverse;\\n\\t                    var coordSys = seriesModel.coordinateSystem;\\n\\t                    if (otherDim != null && coordSys.getOtherAxis) {\\n\\t                        otherAxisInverse = coordSys.getOtherAxis(thisAxis).inverse;\\n\\t                    }\\n\\n\\t                    result = {\\n\\t                        thisAxis: thisAxis,\\n\\t                        series: seriesModel,\\n\\t                        thisDim: dimNames.name,\\n\\t                        otherDim: otherDim,\\n\\t                        otherAxisInverse: otherAxisInverse\\n\\t                    };\\n\\n\\t                }, this);\\n\\n\\t            }, this);\\n\\n\\t            return result;\\n\\t        },\\n\\n\\t        _renderHandle: function () {\\n\\t            var displaybles = this._displayables;\\n\\t            var handles = displaybles.handles = [];\\n\\t            var handleLabels = displaybles.handleLabels = [];\\n\\t            var barGroup = this._displayables.barGroup;\\n\\t            var size = this._size;\\n\\t            var dataZoomModel = this.dataZoomModel;\\n\\n\\t            barGroup.add(displaybles.filler = new Rect({\\n\\t                draggable: true,\\n\\t                cursor: 'move',\\n\\t                drift: bind(this._onDragMove, this, 'all'),\\n\\t                onmousemove: function (e) {\\n\\t                    // Fot mobile devicem, prevent screen slider on the button.\\n\\t                    eventTool.stop(e.event);\\n\\t                },\\n\\t                ondragstart: bind(this._showDataInfo, this, true),\\n\\t                ondragend: bind(this._onDragEnd, this),\\n\\t                onmouseover: bind(this._showDataInfo, this, true),\\n\\t                onmouseout: bind(this._showDataInfo, this, false),\\n\\t                style: {\\n\\t                    fill: dataZoomModel.get('fillerColor'),\\n\\t                    textPosition : 'inside'\\n\\t                }\\n\\t            }));\\n\\n\\t            // Frame border.\\n\\t            barGroup.add(new Rect(graphic.subPixelOptimizeRect({\\n\\t                silent: true,\\n\\t                shape: {\\n\\t                    x: 0,\\n\\t                    y: 0,\\n\\t                    width: size[0],\\n\\t                    height: size[1]\\n\\t                },\\n\\t                style: {\\n\\t                    stroke: dataZoomModel.get('dataBackgroundColor')\\n\\t                        || dataZoomModel.get('borderColor'),\\n\\t                    lineWidth: DEFAULT_FRAME_BORDER_WIDTH,\\n\\t                    fill: 'rgba(0,0,0,0)'\\n\\t                }\\n\\t            })));\\n\\n\\t            var iconStr = dataZoomModel.get('handleIcon');\\n\\t            each([0, 1], function (handleIndex) {\\n\\t                var iconOpt = {\\n\\t                    style: {\\n\\t                        strokeNoScale: true\\n\\t                    },\\n\\t                    rectHover: true,\\n\\t                    cursor: this._orient === 'vertical' ? 'ns-resize' : 'ew-resize',\\n\\t                    draggable: true,\\n\\t                    drift: bind(this._onDragMove, this, handleIndex),\\n\\t                    onmousemove: function (e) {\\n\\t                        // Fot mobile devicem, prevent screen slider on the button.\\n\\t                        eventTool.stop(e.event);\\n\\t                    },\\n\\t                    ondragend: bind(this._onDragEnd, this),\\n\\t                    onmouseover: bind(this._showDataInfo, this, true),\\n\\t                    onmouseout: bind(this._showDataInfo, this, false)\\n\\t                };\\n\\t                var iconStyle = {x: -1, y: 0, width: 2, height: 2};\\n\\n\\t                var path = iconStr.indexOf('image://') === 0\\n\\t                    ? (\\n\\t                        iconStyle.image = iconStr.slice(8),\\n\\t                        iconOpt.style = iconStyle,\\n\\t                        new graphic.Image(iconOpt)\\n\\t                    )\\n\\t                    : graphic.makePath(\\n\\t                        iconStr.replace('path://', ''),\\n\\t                        iconOpt,\\n\\t                        iconStyle,\\n\\t                        'center'\\n\\t                    );\\n\\n\\t                var bRect = path.getBoundingRect();\\n\\t                this._handleHeight = numberUtil.parsePercent(dataZoomModel.get('handleSize'), this._size[1]);\\n\\t                this._handleWidth = bRect.width / bRect.height * this._handleHeight;\\n\\n\\t                path.setStyle(dataZoomModel.getModel('handleStyle').getItemStyle());\\n\\t                var handleColor = dataZoomModel.get('handleColor');\\n\\t                // Compatitable with previous version\\n\\t                if (handleColor != null) {\\n\\t                    path.style.fill = handleColor;\\n\\t                }\\n\\n\\t                barGroup.add(handles[handleIndex] = path);\\n\\n\\t                var textStyleModel = dataZoomModel.textStyleModel;\\n\\n\\t                this.group.add(\\n\\t                    handleLabels[handleIndex] = new graphic.Text({\\n\\t                    silent: true,\\n\\t                    invisible: true,\\n\\t                    style: {\\n\\t                        x: 0, y: 0, text: '',\\n\\t                        textVerticalAlign: 'middle',\\n\\t                        textAlign: 'center',\\n\\t                        fill: textStyleModel.getTextColor(),\\n\\t                        textFont: textStyleModel.getFont()\\n\\t                    },\\n\\t                    z2: 10\\n\\t                }));\\n\\n\\t            }, this);\\n\\t        },\\n\\n\\t        /**\\n\\t         * @private\\n\\t         */\\n\\t        _resetInterval: function () {\\n\\t            var range = this._range = this.dataZoomModel.getPercentRange();\\n\\t            var viewExtent = this._getViewExtent();\\n\\n\\t            this._handleEnds = [\\n\\t                linearMap(range[0], [0, 100], viewExtent, true),\\n\\t                linearMap(range[1], [0, 100], viewExtent, true)\\n\\t            ];\\n\\t        },\\n\\n\\t        /**\\n\\t         * @private\\n\\t         * @param {(number|string)} handleIndex 0 or 1 or 'all'\\n\\t         * @param {number} delta\\n\\t         */\\n\\t        _updateInterval: function (handleIndex, delta) {\\n\\t            var dataZoomModel = this.dataZoomModel;\\n\\t            var handleEnds = this._handleEnds;\\n\\t            var viewExtend = this._getViewExtent();\\n\\t            var minMaxSpan = dataZoomModel.findRepresentativeAxisProxy().getMinMaxSpan();\\n\\t            var percentExtent = [0, 100];\\n\\n\\t            sliderMove(\\n\\t                delta,\\n\\t                handleEnds,\\n\\t                viewExtend,\\n\\t                dataZoomModel.get('zoomLock') ? 'all' : handleIndex,\\n\\t                minMaxSpan.minSpan != null\\n\\t                    ? linearMap(minMaxSpan.minSpan, percentExtent, viewExtend, true) : null,\\n\\t                minMaxSpan.maxSpan != null\\n\\t                    ? linearMap(minMaxSpan.maxSpan, percentExtent, viewExtend, true) : null\\n\\t            );\\n\\n\\t            this._range = asc([\\n\\t                linearMap(handleEnds[0], viewExtend, percentExtent, true),\\n\\t                linearMap(handleEnds[1], viewExtend, percentExtent, true)\\n\\t            ]);\\n\\t        },\\n\\n\\t        /**\\n\\t         * @private\\n\\t         */\\n\\t        _updateView: function (nonRealtime) {\\n\\t            var displaybles = this._displayables;\\n\\t            var handleEnds = this._handleEnds;\\n\\t            var handleInterval = asc(handleEnds.slice());\\n\\t            var size = this._size;\\n\\n\\t            each([0, 1], function (handleIndex) {\\n\\t                // Handles\\n\\t                var handle = displaybles.handles[handleIndex];\\n\\t                var handleHeight = this._handleHeight;\\n\\t                handle.attr({\\n\\t                    scale: [handleHeight / 2, handleHeight / 2],\\n\\t                    position: [handleEnds[handleIndex], size[1] / 2 - handleHeight / 2]\\n\\t                });\\n\\t            }, this);\\n\\n\\t            // Filler\\n\\t            displaybles.filler.setShape({\\n\\t                x: handleInterval[0],\\n\\t                y: 0,\\n\\t                width: handleInterval[1] - handleInterval[0],\\n\\t                height: size[1]\\n\\t            });\\n\\n\\t            this._updateDataInfo(nonRealtime);\\n\\t        },\\n\\n\\t        /**\\n\\t         * @private\\n\\t         */\\n\\t        _updateDataInfo: function (nonRealtime) {\\n\\t            var dataZoomModel = this.dataZoomModel;\\n\\t            var displaybles = this._displayables;\\n\\t            var handleLabels = displaybles.handleLabels;\\n\\t            var orient = this._orient;\\n\\t            var labelTexts = ['', ''];\\n\\n\\t            // FIXME\\n\\t            // date型，支持formatter，autoformatter（ec2 date.getAutoFormatter）\\n\\t            if (dataZoomModel.get('showDetail')) {\\n\\t                var axisProxy = dataZoomModel.findRepresentativeAxisProxy();\\n\\n\\t                if (axisProxy) {\\n\\t                    var axis = axisProxy.getAxisModel().axis;\\n\\t                    var range = this._range;\\n\\n\\t                    var dataInterval = nonRealtime\\n\\t                        // See #4434, data and axis are not processed and reset yet in non-realtime mode.\\n\\t                        ? axisProxy.calculateDataWindow({\\n\\t                            start: range[0], end: range[1]\\n\\t                        }).valueWindow\\n\\t                        : axisProxy.getDataValueWindow();\\n\\n\\t                    labelTexts = [\\n\\t                        this._formatLabel(dataInterval[0], axis),\\n\\t                        this._formatLabel(dataInterval[1], axis)\\n\\t                    ];\\n\\t                }\\n\\t            }\\n\\n\\t            var orderedHandleEnds = asc(this._handleEnds.slice());\\n\\n\\t            setLabel.call(this, 0);\\n\\t            setLabel.call(this, 1);\\n\\n\\t            function setLabel(handleIndex) {\\n\\t                // Label\\n\\t                // Text should not transform by barGroup.\\n\\t                // Ignore handlers transform\\n\\t                var barTransform = graphic.getTransform(\\n\\t                    displaybles.handles[handleIndex].parent, this.group\\n\\t                );\\n\\t                var direction = graphic.transformDirection(\\n\\t                    handleIndex === 0 ? 'right' : 'left', barTransform\\n\\t                );\\n\\t                var offset = this._handleWidth / 2 + LABEL_GAP;\\n\\t                var textPoint = graphic.applyTransform(\\n\\t                    [\\n\\t                        orderedHandleEnds[handleIndex] + (handleIndex === 0 ? -offset : offset),\\n\\t                        this._size[1] / 2\\n\\t                    ],\\n\\t                    barTransform\\n\\t                );\\n\\t                handleLabels[handleIndex].setStyle({\\n\\t                    x: textPoint[0],\\n\\t                    y: textPoint[1],\\n\\t                    textVerticalAlign: orient === HORIZONTAL ? 'middle' : direction,\\n\\t                    textAlign: orient === HORIZONTAL ? direction : 'center',\\n\\t                    text: labelTexts[handleIndex]\\n\\t                });\\n\\t            }\\n\\t        },\\n\\n\\t        /**\\n\\t         * @private\\n\\t         */\\n\\t        _formatLabel: function (value, axis) {\\n\\t            var dataZoomModel = this.dataZoomModel;\\n\\t            var labelFormatter = dataZoomModel.get('labelFormatter');\\n\\n\\t            var labelPrecision = dataZoomModel.get('labelPrecision');\\n\\t            if (labelPrecision == null || labelPrecision === 'auto') {\\n\\t                labelPrecision = axis.getPixelPrecision();\\n\\t            }\\n\\n\\t            var valueStr = (value == null || isNaN(value))\\n\\t                ? ''\\n\\t                // FIXME Glue code\\n\\t                : (axis.type === 'category' || axis.type === 'time')\\n\\t                    ? axis.scale.getLabel(Math.round(value))\\n\\t                    // param of toFixed should less then 20.\\n\\t                    : value.toFixed(Math.min(labelPrecision, 20));\\n\\n\\t            return zrUtil.isFunction(labelFormatter)\\n\\t                ? labelFormatter(value, valueStr)\\n\\t                : zrUtil.isString(labelFormatter)\\n\\t                ? labelFormatter.replace('{value}', valueStr)\\n\\t                : valueStr;\\n\\t        },\\n\\n\\t        /**\\n\\t         * @private\\n\\t         * @param {boolean} showOrHide true: show, false: hide\\n\\t         */\\n\\t        _showDataInfo: function (showOrHide) {\\n\\t            // Always show when drgging.\\n\\t            showOrHide = this._dragging || showOrHide;\\n\\n\\t            var handleLabels = this._displayables.handleLabels;\\n\\t            handleLabels[0].attr('invisible', !showOrHide);\\n\\t            handleLabels[1].attr('invisible', !showOrHide);\\n\\t        },\\n\\n\\t        _onDragMove: function (handleIndex, dx, dy) {\\n\\t            this._dragging = true;\\n\\n\\t            // Transform dx, dy to bar coordination.\\n\\t            var barTransform = this._displayables.barGroup.getLocalTransform();\\n\\t            var vertex = graphic.applyTransform([dx, dy], barTransform, true);\\n\\n\\t            this._updateInterval(handleIndex, vertex[0]);\\n\\n\\t            var realtime = this.dataZoomModel.get('realtime');\\n\\n\\t            this._updateView(!realtime);\\n\\n\\t            if (realtime) {\\n\\t                realtime && this._dispatchZoomAction();\\n\\t            }\\n\\t        },\\n\\n\\t        _onDragEnd: function () {\\n\\t            this._dragging = false;\\n\\t            this._showDataInfo(false);\\n\\t            this._dispatchZoomAction();\\n\\t        },\\n\\n\\t        _onClickPanelClick: function (e) {\\n\\t            var size = this._size;\\n\\t            var localPoint = this._displayables.barGroup.transformCoordToLocal(e.offsetX, e.offsetY);\\n\\n\\t            if (localPoint[0] < 0 || localPoint[0] > size[0]\\n\\t                || localPoint[1] < 0 || localPoint[1] > size[1]\\n\\t            ) {\\n\\t                return;\\n\\t            }\\n\\n\\t            var handleEnds = this._handleEnds;\\n\\t            var center = (handleEnds[0] + handleEnds[1]) / 2;\\n\\n\\t            this._updateInterval('all', localPoint[0] - center);\\n\\t            this._updateView();\\n\\t            this._dispatchZoomAction();\\n\\t        },\\n\\n\\t        /**\\n\\t         * This action will be throttled.\\n\\t         * @private\\n\\t         */\\n\\t        _dispatchZoomAction: function () {\\n\\t            var range = this._range;\\n\\n\\t            this.api.dispatchAction({\\n\\t                type: 'dataZoom',\\n\\t                from: this.uid,\\n\\t                dataZoomId: this.dataZoomModel.id,\\n\\t                start: range[0],\\n\\t                end: range[1]\\n\\t            });\\n\\t        },\\n\\n\\t        /**\\n\\t         * @private\\n\\t         */\\n\\t        _findCoordRect: function () {\\n\\t            // Find the grid coresponding to the first axis referred by dataZoom.\\n\\t            var rect;\\n\\t            each(this.getTargetCoordInfo(), function (coordInfoList) {\\n\\t                if (!rect && coordInfoList.length) {\\n\\t                    var coordSys = coordInfoList[0].model.coordinateSystem;\\n\\t                    rect = coordSys.getRect && coordSys.getRect();\\n\\t                }\\n\\t            });\\n\\t            if (!rect) {\\n\\t                var width = this.api.getWidth();\\n\\t                var height = this.api.getHeight();\\n\\t                rect = {\\n\\t                    x: width * 0.2,\\n\\t                    y: height * 0.2,\\n\\t                    width: width * 0.6,\\n\\t                    height: height * 0.6\\n\\t                };\\n\\t            }\\n\\n\\t            return rect;\\n\\t        }\\n\\n\\t    });\\n\\n\\t    function getOtherDim(thisDim) {\\n\\t        // FIXME\\n\\t        // 这个逻辑和getOtherAxis里一致，但是写在这里是否不好\\n\\t        var map = {x: 'y', y: 'x', radius: 'angle', angle: 'radius'};\\n\\t        return map[thisDim];\\n\\t    }\\n\\n\\t    module.exports = SliderZoomView;\\n\\n\\n\\n/***/ },\\n/* 371 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * @file Data zoom model\\n\\t */\\n\\n\\n\\t    module.exports = __webpack_require__(365).extend({\\n\\n\\t        type: 'dataZoom.inside',\\n\\n\\t        /**\\n\\t         * @protected\\n\\t         */\\n\\t        defaultOption: {\\n\\t            disabled: false,   // Whether disable this inside zoom.\\n\\t            zoomLock: false,   // Whether disable zoom but only pan.\\n\\t            zoomOnMouseWheel: true, // Can be: true / false / 'shift' / 'ctrl' / 'alt'.\\n\\t            moveOnMouseMove: true,   // Can be: true / false / 'shift' / 'ctrl' / 'alt'.\\n\\t            preventDefaultMouseMove: true\\n\\t        }\\n\\t    });\\n\\n\\n/***/ },\\n/* 372 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var DataZoomView = __webpack_require__(368);\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var sliderMove = __webpack_require__(239);\\n\\t    var roams = __webpack_require__(373);\\n\\t    var bind = zrUtil.bind;\\n\\n\\t    var InsideZoomView = DataZoomView.extend({\\n\\n\\t        type: 'dataZoom.inside',\\n\\n\\t        /**\\n\\t         * @override\\n\\t         */\\n\\t        init: function (ecModel, api) {\\n\\t            /**\\n\\t             * 'throttle' is used in this.dispatchAction, so we save range\\n\\t             * to avoid missing some 'pan' info.\\n\\t             * @private\\n\\t             * @type {Array.<number>}\\n\\t             */\\n\\t            this._range;\\n\\t        },\\n\\n\\t        /**\\n\\t         * @override\\n\\t         */\\n\\t        render: function (dataZoomModel, ecModel, api, payload) {\\n\\t            InsideZoomView.superApply(this, 'render', arguments);\\n\\n\\t            // Notice: origin this._range should be maintained, and should not be re-fetched\\n\\t            // from dataZoomModel when payload.type is 'dataZoom', otherwise 'pan' or 'zoom'\\n\\t            // info will be missed because of 'throttle' of this.dispatchAction.\\n\\t            if (roams.shouldRecordRange(payload, dataZoomModel.id)) {\\n\\t                this._range = dataZoomModel.getPercentRange();\\n\\t            }\\n\\n\\t            // Reset controllers.\\n\\t            zrUtil.each(this.getTargetCoordInfo(), function (coordInfoList, coordSysName) {\\n\\n\\t                var allCoordIds = zrUtil.map(coordInfoList, function (coordInfo) {\\n\\t                    return roams.generateCoordId(coordInfo.model);\\n\\t                });\\n\\n\\t                zrUtil.each(coordInfoList, function (coordInfo) {\\n\\t                    var coordModel = coordInfo.model;\\n\\t                    var dataZoomOption = dataZoomModel.option;\\n\\n\\t                    roams.register(\\n\\t                        api,\\n\\t                        {\\n\\t                            coordId: roams.generateCoordId(coordModel),\\n\\t                            allCoordIds: allCoordIds,\\n\\t                            containsPoint: function (e, x, y) {\\n\\t                                return coordModel.coordinateSystem.containPoint([x, y]);\\n\\t                            },\\n\\t                            dataZoomId: dataZoomModel.id,\\n\\t                            throttleRate: dataZoomModel.get('throttle', true),\\n\\t                            panGetRange: bind(this._onPan, this, coordInfo, coordSysName),\\n\\t                            zoomGetRange: bind(this._onZoom, this, coordInfo, coordSysName),\\n\\t                            zoomLock: dataZoomOption.zoomLock,\\n\\t                            disabled: dataZoomOption.disabled,\\n\\t                            roamControllerOpt: {\\n\\t                                zoomOnMouseWheel: dataZoomOption.zoomOnMouseWheel,\\n\\t                                moveOnMouseMove: dataZoomOption.moveOnMouseMove,\\n\\t                                preventDefaultMouseMove: dataZoomOption.preventDefaultMouseMove\\n\\t                            }\\n\\t                        }\\n\\t                    );\\n\\t                }, this);\\n\\n\\t            }, this);\\n\\t        },\\n\\n\\t        /**\\n\\t         * @override\\n\\t         */\\n\\t        dispose: function () {\\n\\t            roams.unregister(this.api, this.dataZoomModel.id);\\n\\t            InsideZoomView.superApply(this, 'dispose', arguments);\\n\\t            this._range = null;\\n\\t        },\\n\\n\\t        /**\\n\\t         * @private\\n\\t         */\\n\\t        _onPan: function (coordInfo, coordSysName, controller, dx, dy, oldX, oldY, newX, newY) {\\n\\t            var range = this._range.slice();\\n\\n\\t            // Calculate transform by the first axis.\\n\\t            var axisModel = coordInfo.axisModels[0];\\n\\t            if (!axisModel) {\\n\\t                return;\\n\\t            }\\n\\n\\t            var directionInfo = getDirectionInfo[coordSysName](\\n\\t                [oldX, oldY], [newX, newY], axisModel, controller, coordInfo\\n\\t            );\\n\\n\\t            var percentDelta = directionInfo.signal\\n\\t                * (range[1] - range[0])\\n\\t                * directionInfo.pixel / directionInfo.pixelLength;\\n\\n\\t            sliderMove(percentDelta, range, [0, 100], 'all');\\n\\n\\t            return (this._range = range);\\n\\t        },\\n\\n\\t        /**\\n\\t         * @private\\n\\t         */\\n\\t        _onZoom: function (coordInfo, coordSysName, controller, scale, mouseX, mouseY) {\\n\\t            var range = this._range.slice();\\n\\n\\t            // Calculate transform by the first axis.\\n\\t            var axisModel = coordInfo.axisModels[0];\\n\\t            if (!axisModel) {\\n\\t                return;\\n\\t            }\\n\\n\\t            var directionInfo = getDirectionInfo[coordSysName](\\n\\t                null, [mouseX, mouseY], axisModel, controller, coordInfo\\n\\t            );\\n\\t            var percentPoint = (\\n\\t                directionInfo.signal > 0\\n\\t                    ? (directionInfo.pixelStart + directionInfo.pixelLength - directionInfo.pixel)\\n\\t                    : (directionInfo.pixel - directionInfo.pixelStart)\\n\\t                ) / directionInfo.pixelLength * (range[1] - range[0]) + range[0];\\n\\n\\t            scale = Math.max(1 / scale, 0);\\n\\t            range[0] = (range[0] - percentPoint) * scale + percentPoint;\\n\\t            range[1] = (range[1] - percentPoint) * scale + percentPoint;\\n\\n\\t            // Restrict range.\\n\\t            var minMaxSpan = this.dataZoomModel.findRepresentativeAxisProxy().getMinMaxSpan();\\n\\t            sliderMove(0, range, [0, 100], 0, minMaxSpan.minSpan, minMaxSpan.maxSpan);\\n\\n\\t            return (this._range = range);\\n\\t        }\\n\\n\\t    });\\n\\n\\t    var getDirectionInfo = {\\n\\n\\t        grid: function (oldPoint, newPoint, axisModel, controller, coordInfo) {\\n\\t            var axis = axisModel.axis;\\n\\t            var ret = {};\\n\\t            var rect = coordInfo.model.coordinateSystem.getRect();\\n\\t            oldPoint = oldPoint || [0, 0];\\n\\n\\t            if (axis.dim === 'x') {\\n\\t                ret.pixel = newPoint[0] - oldPoint[0];\\n\\t                ret.pixelLength = rect.width;\\n\\t                ret.pixelStart = rect.x;\\n\\t                ret.signal = axis.inverse ? 1 : -1;\\n\\t            }\\n\\t            else { // axis.dim === 'y'\\n\\t                ret.pixel = newPoint[1] - oldPoint[1];\\n\\t                ret.pixelLength = rect.height;\\n\\t                ret.pixelStart = rect.y;\\n\\t                ret.signal = axis.inverse ? -1 : 1;\\n\\t            }\\n\\n\\t            return ret;\\n\\t        },\\n\\n\\t        polar: function (oldPoint, newPoint, axisModel, controller, coordInfo) {\\n\\t            var axis = axisModel.axis;\\n\\t            var ret = {};\\n\\t            var polar = coordInfo.model.coordinateSystem;\\n\\t            var radiusExtent = polar.getRadiusAxis().getExtent();\\n\\t            var angleExtent = polar.getAngleAxis().getExtent();\\n\\n\\t            oldPoint = oldPoint ? polar.pointToCoord(oldPoint) : [0, 0];\\n\\t            newPoint = polar.pointToCoord(newPoint);\\n\\n\\t            if (axisModel.mainType === 'radiusAxis') {\\n\\t                ret.pixel = newPoint[0] - oldPoint[0];\\n\\t                // ret.pixelLength = Math.abs(radiusExtent[1] - radiusExtent[0]);\\n\\t                // ret.pixelStart = Math.min(radiusExtent[0], radiusExtent[1]);\\n\\t                ret.pixelLength = radiusExtent[1] - radiusExtent[0];\\n\\t                ret.pixelStart = radiusExtent[0];\\n\\t                ret.signal = axis.inverse ? 1 : -1;\\n\\t            }\\n\\t            else { // 'angleAxis'\\n\\t                ret.pixel = newPoint[1] - oldPoint[1];\\n\\t                // ret.pixelLength = Math.abs(angleExtent[1] - angleExtent[0]);\\n\\t                // ret.pixelStart = Math.min(angleExtent[0], angleExtent[1]);\\n\\t                ret.pixelLength = angleExtent[1] - angleExtent[0];\\n\\t                ret.pixelStart = angleExtent[0];\\n\\t                ret.signal = axis.inverse ? -1 : 1;\\n\\t            }\\n\\n\\t            return ret;\\n\\t        },\\n\\n\\t        singleAxis: function (oldPoint, newPoint, axisModel, controller, coordInfo) {\\n\\t            var axis = axisModel.axis;\\n\\t            var rect = coordInfo.model.coordinateSystem.getRect();\\n\\t            var ret = {};\\n\\n\\t            oldPoint = oldPoint || [0, 0];\\n\\n\\t            if (axis.orient === 'horizontal') {\\n\\t                ret.pixel = newPoint[0] - oldPoint[0];\\n\\t                ret.pixelLength = rect.width;\\n\\t                ret.pixelStart = rect.x;\\n\\t                ret.signal = axis.inverse ? 1 : -1;\\n\\t            }\\n\\t            else { // 'vertical'\\n\\t                ret.pixel = newPoint[1] - oldPoint[1];\\n\\t                ret.pixelLength = rect.height;\\n\\t                ret.pixelStart = rect.y;\\n\\t                ret.signal = axis.inverse ? -1 : 1;\\n\\t            }\\n\\n\\t            return ret;\\n\\t        }\\n\\t    };\\n\\n\\t    module.exports = InsideZoomView;\\n\\n\\n/***/ },\\n/* 373 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * @file Roam controller manager.\\n\\t */\\n\\n\\n\\t    // Only create one roam controller for each coordinate system.\\n\\t    // one roam controller might be refered by two inside data zoom\\n\\t    // components (for example, one for x and one for y). When user\\n\\t    // pan or zoom, only dispatch one action for those data zoom\\n\\t    // components.\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var RoamController = __webpack_require__(183);\\n\\t    var throttle = __webpack_require__(81);\\n\\t    var curry = zrUtil.curry;\\n\\n\\t    var ATTR = '\\\\0_ec_dataZoom_roams';\\n\\n\\t    var roams = {\\n\\n\\t        /**\\n\\t         * @public\\n\\t         * @param {module:echarts/ExtensionAPI} api\\n\\t         * @param {Object} dataZoomInfo\\n\\t         * @param {string} dataZoomInfo.coordId\\n\\t         * @param {Function} dataZoomInfo.containsPoint\\n\\t         * @param {Array.<string>} dataZoomInfo.allCoordIds\\n\\t         * @param {string} dataZoomInfo.dataZoomId\\n\\t         * @param {number} dataZoomInfo.throttleRate\\n\\t         * @param {Function} dataZoomInfo.panGetRange\\n\\t         * @param {Function} dataZoomInfo.zoomGetRange\\n\\t         * @param {boolean} [dataZoomInfo.zoomLock]\\n\\t         * @param {boolean} [dataZoomInfo.disabled]\\n\\t         */\\n\\t        register: function (api, dataZoomInfo) {\\n\\t            var store = giveStore(api);\\n\\t            var theDataZoomId = dataZoomInfo.dataZoomId;\\n\\t            var theCoordId = dataZoomInfo.coordId;\\n\\n\\t            // Do clean when a dataZoom changes its target coordnate system.\\n\\t            // Avoid memory leak, dispose all not-used-registered.\\n\\t            zrUtil.each(store, function (record, coordId) {\\n\\t                var dataZoomInfos = record.dataZoomInfos;\\n\\t                if (dataZoomInfos[theDataZoomId]\\n\\t                    && zrUtil.indexOf(dataZoomInfo.allCoordIds, theCoordId) < 0\\n\\t                ) {\\n\\t                    delete dataZoomInfos[theDataZoomId];\\n\\t                    record.count--;\\n\\t                }\\n\\t            });\\n\\n\\t            cleanStore(store);\\n\\n\\t            var record = store[theCoordId];\\n\\t            // Create if needed.\\n\\t            if (!record) {\\n\\t                record = store[theCoordId] = {\\n\\t                    coordId: theCoordId,\\n\\t                    dataZoomInfos: {},\\n\\t                    count: 0\\n\\t                };\\n\\t                record.controller = createController(api, record);\\n\\t                record.dispatchAction = zrUtil.curry(dispatchAction, api);\\n\\t            }\\n\\n\\t            // Update reference of dataZoom.\\n\\t            !(record.dataZoomInfos[theDataZoomId]) && record.count++;\\n\\t            record.dataZoomInfos[theDataZoomId] = dataZoomInfo;\\n\\n\\t            var controllerParams = mergeControllerParams(record.dataZoomInfos);\\n\\t            record.controller.enable(controllerParams.controlType, controllerParams.opt);\\n\\n\\t            // Consider resize, area should be always updated.\\n\\t            record.controller.setPointerChecker(dataZoomInfo.containsPoint);\\n\\n\\t            // Update throttle.\\n\\t            throttle.createOrUpdate(\\n\\t                record,\\n\\t                'dispatchAction',\\n\\t                dataZoomInfo.throttleRate,\\n\\t                'fixRate'\\n\\t            );\\n\\t        },\\n\\n\\t        /**\\n\\t         * @public\\n\\t         * @param {module:echarts/ExtensionAPI} api\\n\\t         * @param {string} dataZoomId\\n\\t         */\\n\\t        unregister: function (api, dataZoomId) {\\n\\t            var store = giveStore(api);\\n\\n\\t            zrUtil.each(store, function (record) {\\n\\t                record.controller.dispose();\\n\\t                var dataZoomInfos = record.dataZoomInfos;\\n\\t                if (dataZoomInfos[dataZoomId]) {\\n\\t                    delete dataZoomInfos[dataZoomId];\\n\\t                    record.count--;\\n\\t                }\\n\\t            });\\n\\n\\t            cleanStore(store);\\n\\t        },\\n\\n\\t        /**\\n\\t         * @public\\n\\t         */\\n\\t        shouldRecordRange: function (payload, dataZoomId) {\\n\\t            if (payload && payload.type === 'dataZoom' && payload.batch) {\\n\\t                for (var i = 0, len = payload.batch.length; i < len; i++) {\\n\\t                    if (payload.batch[i].dataZoomId === dataZoomId) {\\n\\t                        return false;\\n\\t                    }\\n\\t                }\\n\\t            }\\n\\t            return true;\\n\\t        },\\n\\n\\t        /**\\n\\t         * @public\\n\\t         */\\n\\t        generateCoordId: function (coordModel) {\\n\\t            return coordModel.type + '\\\\0_' + coordModel.id;\\n\\t        }\\n\\t    };\\n\\n\\t    /**\\n\\t     * Key: coordId, value: {dataZoomInfos: [], count, controller}\\n\\t     * @type {Array.<Object>}\\n\\t     */\\n\\t    function giveStore(api) {\\n\\t        // Mount store on zrender instance, so that we do not\\n\\t        // need to worry about dispose.\\n\\t        var zr = api.getZr();\\n\\t        return zr[ATTR] || (zr[ATTR] = {});\\n\\t    }\\n\\n\\t    function createController(api, newRecord) {\\n\\t        var controller = new RoamController(api.getZr());\\n\\t        controller.on('pan', curry(onPan, newRecord));\\n\\t        controller.on('zoom', curry(onZoom, newRecord));\\n\\n\\t        return controller;\\n\\t    }\\n\\n\\t    function cleanStore(store) {\\n\\t        zrUtil.each(store, function (record, coordId) {\\n\\t            if (!record.count) {\\n\\t                record.controller.dispose();\\n\\t                delete store[coordId];\\n\\t            }\\n\\t        });\\n\\t    }\\n\\n\\t    function onPan(record, dx, dy, oldX, oldY, newX, newY) {\\n\\t        wrapAndDispatch(record, function (info) {\\n\\t            return info.panGetRange(record.controller, dx, dy, oldX, oldY, newX, newY);\\n\\t        });\\n\\t    }\\n\\n\\t    function onZoom(record, scale, mouseX, mouseY) {\\n\\t        wrapAndDispatch(record, function (info) {\\n\\t            return info.zoomGetRange(record.controller, scale, mouseX, mouseY);\\n\\t        });\\n\\t    }\\n\\n\\t    function wrapAndDispatch(record, getRange) {\\n\\t        var batch = [];\\n\\n\\t        zrUtil.each(record.dataZoomInfos, function (info) {\\n\\t            var range = getRange(info);\\n\\t            !info.disabled && range && batch.push({\\n\\t                dataZoomId: info.dataZoomId,\\n\\t                start: range[0],\\n\\t                end: range[1]\\n\\t            });\\n\\t        });\\n\\n\\t        record.dispatchAction(batch);\\n\\t    }\\n\\n\\t    /**\\n\\t     * This action will be throttled.\\n\\t     */\\n\\t    function dispatchAction(api, batch) {\\n\\t        api.dispatchAction({\\n\\t            type: 'dataZoom',\\n\\t            batch: batch\\n\\t        });\\n\\t    }\\n\\n\\t    /**\\n\\t     * Merge roamController settings when multiple dataZooms share one roamController.\\n\\t     */\\n\\t    function mergeControllerParams(dataZoomInfos) {\\n\\t        var controlType;\\n\\t        var opt = {};\\n\\t        var typePriority = {\\n\\t            'true': 2,\\n\\t            'move': 1,\\n\\t            'false': 0,\\n\\t            'undefined': -1\\n\\t        };\\n\\t        zrUtil.each(dataZoomInfos, function (dataZoomInfo) {\\n\\t            var oneType = dataZoomInfo.disabled ? false : dataZoomInfo.zoomLock ? 'move' : true;\\n\\t            typePriority[oneType] > typePriority[controlType] && (controlType = oneType);\\n\\t            // Do not support that different 'shift'/'ctrl'/'alt' setting used in one coord sys.\\n\\t            zrUtil.extend(opt, dataZoomInfo.roamControllerOpt);\\n\\t        });\\n\\n\\t        return {\\n\\t            controlType: controlType,\\n\\t            opt: opt\\n\\t        };\\n\\t    }\\n\\n\\t    module.exports = roams;\\n\\n\\n\\n/***/ },\\n/* 374 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * @file Data zoom processor\\n\\t */\\n\\n\\n\\t    var echarts = __webpack_require__(1);\\n\\n\\t    echarts.registerProcessor(function (ecModel, api) {\\n\\n\\t        ecModel.eachComponent('dataZoom', function (dataZoomModel) {\\n\\t            // We calculate window and reset axis here but not in model\\n\\t            // init stage and not after action dispatch handler, because\\n\\t            // reset should be called after seriesData.restoreData.\\n\\t            dataZoomModel.eachTargetAxis(resetSingleAxis);\\n\\n\\t            // Caution: data zoom filtering is order sensitive when using\\n\\t            // percent range and no min/max/scale set on axis.\\n\\t            // For example, we have dataZoom definition:\\n\\t            // [\\n\\t            //      {xAxisIndex: 0, start: 30, end: 70},\\n\\t            //      {yAxisIndex: 0, start: 20, end: 80}\\n\\t            // ]\\n\\t            // In this case, [20, 80] of y-dataZoom should be based on data\\n\\t            // that have filtered by x-dataZoom using range of [30, 70],\\n\\t            // but should not be based on full raw data. Thus sliding\\n\\t            // x-dataZoom will change both ranges of xAxis and yAxis,\\n\\t            // while sliding y-dataZoom will only change the range of yAxis.\\n\\t            // So we should filter x-axis after reset x-axis immediately,\\n\\t            // and then reset y-axis and filter y-axis.\\n\\t            dataZoomModel.eachTargetAxis(filterSingleAxis);\\n\\t        });\\n\\n\\t        ecModel.eachComponent('dataZoom', function (dataZoomModel) {\\n\\t            // Fullfill all of the range props so that user\\n\\t            // is able to get them from chart.getOption().\\n\\t            var axisProxy = dataZoomModel.findRepresentativeAxisProxy();\\n\\t            var percentRange = axisProxy.getDataPercentWindow();\\n\\t            var valueRange = axisProxy.getDataValueWindow();\\n\\n\\t            dataZoomModel.setRawRange({\\n\\t                start: percentRange[0],\\n\\t                end: percentRange[1],\\n\\t                startValue: valueRange[0],\\n\\t                endValue: valueRange[1]\\n\\t            }, true);\\n\\t        });\\n\\t    });\\n\\n\\t    function resetSingleAxis(dimNames, axisIndex, dataZoomModel) {\\n\\t        dataZoomModel.getAxisProxy(dimNames.name, axisIndex).reset(dataZoomModel);\\n\\t    }\\n\\n\\t    function filterSingleAxis(dimNames, axisIndex, dataZoomModel) {\\n\\t        dataZoomModel.getAxisProxy(dimNames.name, axisIndex).filterData(dataZoomModel);\\n\\t    }\\n\\n\\n\\n\\n/***/ },\\n/* 375 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * @file Data zoom action\\n\\t */\\n\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var helper = __webpack_require__(366);\\n\\t    var echarts = __webpack_require__(1);\\n\\n\\n\\t    echarts.registerAction('dataZoom', function (payload, ecModel) {\\n\\n\\t        var linkedNodesFinder = helper.createLinkedNodesFinder(\\n\\t            zrUtil.bind(ecModel.eachComponent, ecModel, 'dataZoom'),\\n\\t            helper.eachAxisDim,\\n\\t            function (model, dimNames) {\\n\\t                return model.get(dimNames.axisIndex);\\n\\t            }\\n\\t        );\\n\\n\\t        var effectedModels = [];\\n\\n\\t        ecModel.eachComponent(\\n\\t            {mainType: 'dataZoom', query: payload},\\n\\t            function (model, index) {\\n\\t                effectedModels.push.apply(\\n\\t                    effectedModels, linkedNodesFinder(model).nodes\\n\\t                );\\n\\t            }\\n\\t        );\\n\\n\\t        zrUtil.each(effectedModels, function (dataZoomModel, index) {\\n\\t            dataZoomModel.setRawRange({\\n\\t                start: payload.start,\\n\\t                end: payload.end,\\n\\t                startValue: payload.startValue,\\n\\t                endValue: payload.endValue\\n\\t            });\\n\\t        });\\n\\n\\t    });\\n\\n\\n\\n/***/ },\\n/* 376 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * visualMap component entry\\n\\t */\\n\\n\\n\\t    __webpack_require__(377);\\n\\t    __webpack_require__(388);\\n\\n\\n\\n/***/ },\\n/* 377 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * DataZoom component entry\\n\\t */\\n\\n\\n\\t    __webpack_require__(1).registerPreprocessor(\\n\\t        __webpack_require__(378)\\n\\t    );\\n\\n\\t    __webpack_require__(379);\\n\\t    __webpack_require__(380);\\n\\t    __webpack_require__(381);\\n\\t    __webpack_require__(384);\\n\\t    __webpack_require__(387);\\n\\n\\n\\n/***/ },\\n/* 378 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * @file VisualMap preprocessor\\n\\t */\\n\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var each = zrUtil.each;\\n\\n\\t    module.exports = function (option) {\\n\\t        var visualMap = option && option.visualMap;\\n\\n\\t        if (!zrUtil.isArray(visualMap)) {\\n\\t            visualMap = visualMap ? [visualMap] : [];\\n\\t        }\\n\\n\\t        each(visualMap, function (opt) {\\n\\t            if (!opt) {\\n\\t                return;\\n\\t            }\\n\\n\\t            // rename splitList to pieces\\n\\t            if (has(opt, 'splitList') && !has(opt, 'pieces')) {\\n\\t                opt.pieces = opt.splitList;\\n\\t                delete opt.splitList;\\n\\t            }\\n\\n\\t            var pieces = opt.pieces;\\n\\t            if (pieces && zrUtil.isArray(pieces)) {\\n\\t                each(pieces, function (piece) {\\n\\t                    if (zrUtil.isObject(piece)) {\\n\\t                        if (has(piece, 'start') && !has(piece, 'min')) {\\n\\t                            piece.min = piece.start;\\n\\t                        }\\n\\t                        if (has(piece, 'end') && !has(piece, 'max')) {\\n\\t                            piece.max = piece.end;\\n\\t                        }\\n\\t                    }\\n\\t                });\\n\\t            }\\n\\t        });\\n\\t    };\\n\\n\\t    function has(obj, name) {\\n\\t        return obj && obj.hasOwnProperty && obj.hasOwnProperty(name);\\n\\t    }\\n\\n\\n\\n/***/ },\\n/* 379 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    __webpack_require__(69).registerSubTypeDefaulter('visualMap', function (option) {\\n\\t        // Compatible with ec2, when splitNumber === 0, continuous visualMap will be used.\\n\\t        return (\\n\\t                !option.categories\\n\\t                && (\\n\\t                    !(\\n\\t                        option.pieces\\n\\t                            ? option.pieces.length > 0\\n\\t                            : option.splitNumber > 0\\n\\t                    )\\n\\t                    || option.calculable\\n\\t                )\\n\\t            )\\n\\t            ? 'continuous' : 'piecewise';\\n\\t    });\\n\\n\\n\\n/***/ },\\n/* 380 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * @file Data range visual coding.\\n\\t */\\n\\n\\n\\t    var echarts = __webpack_require__(1);\\n\\t    var visualSolution = __webpack_require__(350);\\n\\t    var VisualMapping = __webpack_require__(203);\\n\\t    var zrUtil = __webpack_require__(4);\\n\\n\\t    echarts.registerVisual(echarts.PRIORITY.VISUAL.COMPONENT, function (ecModel) {\\n\\t        ecModel.eachComponent('visualMap', function (visualMapModel) {\\n\\t            processSingleVisualMap(visualMapModel, ecModel);\\n\\t        });\\n\\n\\t        prepareVisualMeta(ecModel);\\n\\t    });\\n\\n\\t    function processSingleVisualMap(visualMapModel, ecModel) {\\n\\t        visualMapModel.eachTargetSeries(function (seriesModel) {\\n\\t            var data = seriesModel.getData();\\n\\n\\t            visualSolution.applyVisual(\\n\\t                visualMapModel.stateList,\\n\\t                visualMapModel.targetVisuals,\\n\\t                data,\\n\\t                visualMapModel.getValueState,\\n\\t                visualMapModel,\\n\\t                visualMapModel.getDataDimension(data)\\n\\t            );\\n\\t        });\\n\\t    }\\n\\n\\t    // Only support color.\\n\\t    function prepareVisualMeta(ecModel) {\\n\\t        ecModel.eachSeries(function (seriesModel) {\\n\\t            var data = seriesModel.getData();\\n\\t            var visualMetaList = [];\\n\\n\\t            ecModel.eachComponent('visualMap', function (visualMapModel) {\\n\\t                if (visualMapModel.isTargetSeries(seriesModel)) {\\n\\t                    var visualMeta = visualMapModel.getVisualMeta(\\n\\t                        zrUtil.bind(getColorVisual, null, seriesModel, visualMapModel)\\n\\t                    ) || {stops: [], outerColors: []};\\n\\t                    visualMeta.dimension = visualMapModel.getDataDimension(data);\\n\\t                    visualMetaList.push(visualMeta);\\n\\t                }\\n\\t            });\\n\\n\\t            // console.log(JSON.stringify(visualMetaList.map(a => a.stops)));\\n\\t            seriesModel.getData().setVisual('visualMeta', visualMetaList);\\n\\t        });\\n\\t    }\\n\\n\\t    // FIXME\\n\\t    // performance and export for heatmap?\\n\\t    // value can be Infinity or -Infinity\\n\\t    function getColorVisual(seriesModel, visualMapModel, value, valueState) {\\n\\t        var mappings = visualMapModel.targetVisuals[valueState];\\n\\t        var visualTypes = VisualMapping.prepareVisualTypes(mappings);\\n\\t        var resultVisual = {\\n\\t            color: seriesModel.getData().getVisual('color') // default color.\\n\\t        };\\n\\n\\t        for (var i = 0, len = visualTypes.length; i < len; i++) {\\n\\t            var type = visualTypes[i];\\n\\t            var mapping = mappings[\\n\\t                type === 'opacity' ? '__alphaForOpacity' : type\\n\\t            ];\\n\\t            mapping && mapping.applyVisual(value, getVisual, setVisual);\\n\\t        }\\n\\n\\t        return resultVisual.color;\\n\\n\\t        function getVisual(key) {\\n\\t            return resultVisual[key];\\n\\t        }\\n\\n\\t        function setVisual(key, value) {\\n\\t            resultVisual[key] = value;\\n\\t        }\\n\\t    }\\n\\n\\n\\n\\n/***/ },\\n/* 381 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * @file Data zoom model\\n\\t */\\n\\n\\n\\t    var VisualMapModel = __webpack_require__(382);\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var numberUtil = __webpack_require__(7);\\n\\n\\t    // Constant\\n\\t    var DEFAULT_BAR_BOUND = [20, 140];\\n\\n\\t    var ContinuousModel = VisualMapModel.extend({\\n\\n\\t        type: 'visualMap.continuous',\\n\\n\\t        /**\\n\\t         * @protected\\n\\t         */\\n\\t        defaultOption: {\\n\\t            align: 'auto',          // 'auto', 'left', 'right', 'top', 'bottom'\\n\\t            calculable: false,      // This prop effect default component type determine,\\n\\t                                    // See echarts/component/visualMap/typeDefaulter.\\n\\t            range: null,            // selected range. In default case `range` is [min, max]\\n\\t                                    // and can auto change along with modification of min max,\\n\\t                                    // util use specifid a range.\\n\\t            realtime: true,         // Whether realtime update.\\n\\t            itemHeight: null,       // The length of the range control edge.\\n\\t            itemWidth: null,        // The length of the other side.\\n\\t            hoverLink: true,        // Enable hover highlight.\\n\\t            hoverLinkDataSize: null,// The size of hovered data.\\n\\t            hoverLinkOnHandle: true // Whether trigger hoverLink when hover handle.\\n\\t        },\\n\\n\\t        /**\\n\\t         * @override\\n\\t         */\\n\\t        optionUpdated: function (newOption, isInit) {\\n\\t            ContinuousModel.superApply(this, 'optionUpdated', arguments);\\n\\n\\t            this.resetTargetSeries();\\n\\t            this.resetExtent();\\n\\n\\t            this.resetVisual(function (mappingOption) {\\n\\t                mappingOption.mappingMethod = 'linear';\\n\\t                mappingOption.dataExtent = this.getExtent();\\n\\t            });\\n\\n\\t            this._resetRange();\\n\\t        },\\n\\n\\t        /**\\n\\t         * @protected\\n\\t         * @override\\n\\t         */\\n\\t        resetItemSize: function () {\\n\\t            ContinuousModel.superApply(this, 'resetItemSize', arguments);\\n\\n\\t            var itemSize = this.itemSize;\\n\\n\\t            this._orient === 'horizontal' && itemSize.reverse();\\n\\n\\t            (itemSize[0] == null || isNaN(itemSize[0])) && (itemSize[0] = DEFAULT_BAR_BOUND[0]);\\n\\t            (itemSize[1] == null || isNaN(itemSize[1])) && (itemSize[1] = DEFAULT_BAR_BOUND[1]);\\n\\t        },\\n\\n\\t        /**\\n\\t         * @private\\n\\t         */\\n\\t        _resetRange: function () {\\n\\t            var dataExtent = this.getExtent();\\n\\t            var range = this.option.range;\\n\\n\\t            if (!range || range.auto) {\\n\\t                // `range` should always be array (so we dont use other\\n\\t                // value like 'auto') for user-friend. (consider getOption).\\n\\t                dataExtent.auto = 1;\\n\\t                this.option.range = dataExtent;\\n\\t            }\\n\\t            else if (zrUtil.isArray(range)) {\\n\\t                if (range[0] > range[1]) {\\n\\t                    range.reverse();\\n\\t                }\\n\\t                range[0] = Math.max(range[0], dataExtent[0]);\\n\\t                range[1] = Math.min(range[1], dataExtent[1]);\\n\\t            }\\n\\t        },\\n\\n\\t        /**\\n\\t         * @protected\\n\\t         * @override\\n\\t         */\\n\\t        completeVisualOption: function () {\\n\\t            VisualMapModel.prototype.completeVisualOption.apply(this, arguments);\\n\\n\\t            zrUtil.each(this.stateList, function (state) {\\n\\t                var symbolSize = this.option.controller[state].symbolSize;\\n\\t                if (symbolSize && symbolSize[0] !== symbolSize[1]) {\\n\\t                    symbolSize[0] = 0; // For good looking.\\n\\t                }\\n\\t            }, this);\\n\\t        },\\n\\n\\t        /**\\n\\t         * @override\\n\\t         */\\n\\t        setSelected: function (selected) {\\n\\t            this.option.range = selected.slice();\\n\\t            this._resetRange();\\n\\t        },\\n\\n\\t        /**\\n\\t         * @public\\n\\t         */\\n\\t        getSelected: function () {\\n\\t            var dataExtent = this.getExtent();\\n\\n\\t            var dataInterval = numberUtil.asc(\\n\\t                (this.get('range') || []).slice()\\n\\t            );\\n\\n\\t            // Clamp\\n\\t            dataInterval[0] > dataExtent[1] && (dataInterval[0] = dataExtent[1]);\\n\\t            dataInterval[1] > dataExtent[1] && (dataInterval[1] = dataExtent[1]);\\n\\t            dataInterval[0] < dataExtent[0] && (dataInterval[0] = dataExtent[0]);\\n\\t            dataInterval[1] < dataExtent[0] && (dataInterval[1] = dataExtent[0]);\\n\\n\\t            return dataInterval;\\n\\t        },\\n\\n\\t        /**\\n\\t         * @override\\n\\t         */\\n\\t        getValueState: function (value) {\\n\\t            var range = this.option.range;\\n\\t            var dataExtent = this.getExtent();\\n\\n\\t            // When range[0] === dataExtent[0], any value larger than dataExtent[0] maps to 'inRange'.\\n\\t            // range[1] is processed likewise.\\n\\t            return (\\n\\t                (range[0] <= dataExtent[0] || range[0] <= value)\\n\\t                && (range[1] >= dataExtent[1] || value <= range[1])\\n\\t            ) ? 'inRange' : 'outOfRange';\\n\\t        },\\n\\n\\t        /**\\n\\t         * @params {Array.<number>} range target value: range[0] <= value && value <= range[1]\\n\\t         * @return {Array.<Object>} [{seriesId, dataIndices: <Array.<number>>}, ...]\\n\\t         */\\n\\t        findTargetDataIndices: function (range) {\\n\\t            var result = [];\\n\\n\\t            this.eachTargetSeries(function (seriesModel) {\\n\\t                var dataIndices = [];\\n\\t                var data = seriesModel.getData();\\n\\n\\t                data.each(this.getDataDimension(data), function (value, dataIndex) {\\n\\t                    range[0] <= value && value <= range[1] && dataIndices.push(dataIndex);\\n\\t                }, true, this);\\n\\n\\t                result.push({seriesId: seriesModel.id, dataIndex: dataIndices});\\n\\t            }, this);\\n\\n\\t            return result;\\n\\t        },\\n\\n\\t        /**\\n\\t         * @implement\\n\\t         */\\n\\t        getVisualMeta: function (getColorVisual) {\\n\\t            var oVals = getColorStopValues(this, 'outOfRange', this.getExtent());\\n\\t            var iVals = getColorStopValues(this, 'inRange', this.option.range.slice());\\n\\t            var stops = [];\\n\\n\\t            function setStop(value, valueState) {\\n\\t                stops.push({\\n\\t                    value: value,\\n\\t                    color: getColorVisual(value, valueState)\\n\\t                });\\n\\t            }\\n\\n\\t            // Format to: outOfRange -- inRange -- outOfRange.\\n\\t            var iIdx = 0;\\n\\t            var oIdx = 0;\\n\\t            var iLen = iVals.length;\\n\\t            var oLen = oVals.length;\\n\\n\\t            for (; oIdx < oLen && (!iVals.length || oVals[oIdx] <= iVals[0]); oIdx++) {\\n\\t                // If oVal[oIdx] === iVals[iIdx], oVal[oIdx] should be ignored.\\n\\t                if (oVals[oIdx] < iVals[iIdx]) {\\n\\t                    setStop(oVals[oIdx], 'outOfRange');\\n\\t                }\\n\\t            }\\n\\t            for (var first = 1; iIdx < iLen; iIdx++, first = 0) {\\n\\t                // If range is full, value beyond min, max will be clamped.\\n\\t                // make a singularity\\n\\t                first && stops.length && setStop(iVals[iIdx], 'outOfRange');\\n\\t                setStop(iVals[iIdx], 'inRange');\\n\\t            }\\n\\t            for (var first = 1; oIdx < oLen; oIdx++) {\\n\\t                if (!iVals.length || iVals[iVals.length - 1] < oVals[oIdx]) {\\n\\t                    // make a singularity\\n\\t                    if (first) {\\n\\t                        stops.length && setStop(stops[stops.length - 1].value, 'outOfRange');\\n\\t                        first = 0;\\n\\t                    }\\n\\t                    setStop(oVals[oIdx], 'outOfRange');\\n\\t                }\\n\\t            }\\n\\n\\t            var stopsLen = stops.length;\\n\\n\\t            return {\\n\\t                stops: stops,\\n\\t                outerColors: [\\n\\t                    stopsLen ? stops[0].color : 'transparent',\\n\\t                    stopsLen ? stops[stopsLen - 1].color : 'transparent'\\n\\t                ]\\n\\t            };\\n\\t        }\\n\\n\\t    });\\n\\n\\t    function getColorStopValues(visualMapModel, valueState, dataExtent) {\\n\\t        if (dataExtent[0] === dataExtent[1]) {\\n\\t            return dataExtent.slice();\\n\\t        }\\n\\n\\t        // When using colorHue mapping, it is not linear color any more.\\n\\t        // Moreover, canvas gradient seems not to be accurate linear.\\n\\t        // FIXME\\n\\t        // Should be arbitrary value 100? or based on pixel size?\\n\\t        var count = 200;\\n\\t        var step = (dataExtent[1] - dataExtent[0]) / count;\\n\\n\\t        var value = dataExtent[0];\\n\\t        var stopValues = [];\\n\\t        for (var i = 0; i <= count && value < dataExtent[1]; i++) {\\n\\t            stopValues.push(value);\\n\\t            value += step;\\n\\t        }\\n\\t        stopValues.push(dataExtent[1]);\\n\\n\\t        return stopValues;\\n\\t    }\\n\\n\\t    module.exports = ContinuousModel;\\n\\n\\n\\n/***/ },\\n/* 382 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * @file Controller visual map model\\n\\t */\\n\\n\\n\\t    var echarts = __webpack_require__(1);\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var env = __webpack_require__(2);\\n\\t    var visualDefault = __webpack_require__(383);\\n\\t    var VisualMapping = __webpack_require__(203);\\n\\t    var visualSolution = __webpack_require__(350);\\n\\t    var mapVisual = VisualMapping.mapVisual;\\n\\t    var modelUtil = __webpack_require__(5);\\n\\t    var eachVisual = VisualMapping.eachVisual;\\n\\t    var numberUtil = __webpack_require__(7);\\n\\t    var isArray = zrUtil.isArray;\\n\\t    var each = zrUtil.each;\\n\\t    var asc = numberUtil.asc;\\n\\t    var linearMap = numberUtil.linearMap;\\n\\t    var noop = zrUtil.noop;\\n\\n\\t    var DEFAULT_COLOR = ['#f6efa6', '#d88273', '#bf444c'];\\n\\n\\t    var VisualMapModel = echarts.extendComponentModel({\\n\\n\\t        type: 'visualMap',\\n\\n\\t        dependencies: ['series'],\\n\\n\\t        /**\\n\\t         * @readOnly\\n\\t         * @type {Array.<string>}\\n\\t         */\\n\\t        stateList: ['inRange', 'outOfRange'],\\n\\n\\t        /**\\n\\t         * @readOnly\\n\\t         * @type {Array.<string>}\\n\\t         */\\n\\t        replacableOptionKeys: [\\n\\t            'inRange', 'outOfRange', 'target', 'controller', 'color'\\n\\t        ],\\n\\n\\t        /**\\n\\t         * [lowerBound, upperBound]\\n\\t         *\\n\\t         * @readOnly\\n\\t         * @type {Array.<number>}\\n\\t         */\\n\\t        dataBound: [-Infinity, Infinity],\\n\\n\\t        /**\\n\\t         * @readOnly\\n\\t         * @type {string|Object}\\n\\t         */\\n\\t        layoutMode: {type: 'box', ignoreSize: true},\\n\\n\\t        /**\\n\\t         * @protected\\n\\t         */\\n\\t        defaultOption: {\\n\\t            show: true,\\n\\n\\t            zlevel: 0,\\n\\t            z: 4,\\n\\n\\t            seriesIndex: null,       // 所控制的series indices，默认所有有value的series.\\n\\n\\t                                    // set min: 0, max: 200, only for campatible with ec2.\\n\\t                                    // In fact min max should not have default value.\\n\\t            min: 0,                 // min value, must specified if pieces is not specified.\\n\\t            max: 200,               // max value, must specified if pieces is not specified.\\n\\n\\t            dimension: null,\\n\\t            inRange: null,          // 'color', 'colorHue', 'colorSaturation', 'colorLightness', 'colorAlpha',\\n\\t                                    // 'symbol', 'symbolSize'\\n\\t            outOfRange: null,       // 'color', 'colorHue', 'colorSaturation',\\n\\t                                    // 'colorLightness', 'colorAlpha',\\n\\t                                    // 'symbol', 'symbolSize'\\n\\n\\t            left: 0,                // 'center' ¦ 'left' ¦ 'right' ¦ {number} (px)\\n\\t            right: null,            // The same as left.\\n\\t            top: null,              // 'top' ¦ 'bottom' ¦ 'center' ¦ {number} (px)\\n\\t            bottom: 0,              // The same as top.\\n\\n\\t            itemWidth: null,\\n\\t            itemHeight: null,\\n\\t            inverse: false,\\n\\t            orient: 'vertical',        // 'horizontal' ¦ 'vertical'\\n\\n\\t            backgroundColor: 'rgba(0,0,0,0)',\\n\\t            borderColor: '#ccc',       // 值域边框颜色\\n\\t            contentColor: '#5793f3',\\n\\t            inactiveColor: '#aaa',\\n\\t            borderWidth: 0,            // 值域边框线宽，单位px，默认为0（无边框）\\n\\t            padding: 5,                // 值域内边距，单位px，默认各方向内边距为5，\\n\\t                                       // 接受数组分别设定上右下左边距，同css\\n\\t            textGap: 10,               //\\n\\t            precision: 0,              // 小数精度，默认为0，无小数点\\n\\t            color: null,               //颜色（deprecated，兼容ec2，顺序同pieces，不同于inRange/outOfRange）\\n\\n\\t            formatter: null,\\n\\t            text: null,                // 文本，如['高', '低']，兼容ec2，text[0]对应高值，text[1]对应低值\\n\\t            textStyle: {\\n\\t                color: '#333'          // 值域文字颜色\\n\\t            }\\n\\t        },\\n\\n\\t        /**\\n\\t         * @protected\\n\\t         */\\n\\t        init: function (option, parentModel, ecModel) {\\n\\n\\t            /**\\n\\t             * @private\\n\\t             * @type {Array.<number>}\\n\\t             */\\n\\t            this._dataExtent;\\n\\n\\t            /**\\n\\t             * @readOnly\\n\\t             */\\n\\t            this.targetVisuals = {};\\n\\n\\t            /**\\n\\t             * @readOnly\\n\\t             */\\n\\t            this.controllerVisuals = {};\\n\\n\\t            /**\\n\\t             * @readOnly\\n\\t             */\\n\\t            this.textStyleModel;\\n\\n\\t            /**\\n\\t             * [width, height]\\n\\t             * @readOnly\\n\\t             * @type {Array.<number>}\\n\\t             */\\n\\t            this.itemSize;\\n\\n\\t            this.mergeDefaultAndTheme(option, ecModel);\\n\\t        },\\n\\n\\t        /**\\n\\t         * @protected\\n\\t         */\\n\\t        optionUpdated: function (newOption, isInit) {\\n\\t            var thisOption = this.option;\\n\\n\\t            // FIXME\\n\\t            // necessary?\\n\\t            // Disable realtime view update if canvas is not supported.\\n\\t            if (!env.canvasSupported) {\\n\\t                thisOption.realtime = false;\\n\\t            }\\n\\n\\t            !isInit && visualSolution.replaceVisualOption(\\n\\t                thisOption, newOption, this.replacableOptionKeys\\n\\t            );\\n\\n\\t            this.textStyleModel = this.getModel('textStyle');\\n\\n\\t            this.resetItemSize();\\n\\n\\t            this.completeVisualOption();\\n\\t        },\\n\\n\\t        /**\\n\\t         * @protected\\n\\t         */\\n\\t        resetVisual: function (supplementVisualOption) {\\n\\t            var stateList = this.stateList;\\n\\t            supplementVisualOption = zrUtil.bind(supplementVisualOption, this);\\n\\n\\t            this.controllerVisuals = visualSolution.createVisualMappings(\\n\\t                this.option.controller, stateList, supplementVisualOption\\n\\t            );\\n\\t            this.targetVisuals = visualSolution.createVisualMappings(\\n\\t                this.option.target, stateList, supplementVisualOption\\n\\t            );\\n\\t        },\\n\\n\\n\\t        /**\\n\\t         * @protected\\n\\t         */\\n\\t        resetTargetSeries: function () {\\n\\t            var thisOption = this.option;\\n\\t            var allSeriesIndex = thisOption.seriesIndex == null;\\n\\t            thisOption.seriesIndex = allSeriesIndex\\n\\t                ? [] : modelUtil.normalizeToArray(thisOption.seriesIndex);\\n\\n\\t            allSeriesIndex && this.ecModel.eachSeries(function (seriesModel, index) {\\n\\t                thisOption.seriesIndex.push(index);\\n\\t            });\\n\\t        },\\n\\n\\t        /**\\n\\t         * @public\\n\\t         */\\n\\t        eachTargetSeries: function (callback, context) {\\n\\t            zrUtil.each(this.option.seriesIndex, function (seriesIndex) {\\n\\t                callback.call(context, this.ecModel.getSeriesByIndex(seriesIndex));\\n\\t            }, this);\\n\\t        },\\n\\n\\t        /**\\n\\t         * @pubilc\\n\\t         */\\n\\t        isTargetSeries: function (seriesModel) {\\n\\t            var is = false;\\n\\t            this.eachTargetSeries(function (model) {\\n\\t                model === seriesModel && (is = true);\\n\\t            });\\n\\t            return is;\\n\\t        },\\n\\n\\t        /**\\n\\t         * @example\\n\\t         * this.formatValueText(someVal); // format single numeric value to text.\\n\\t         * this.formatValueText(someVal, true); // format single category value to text.\\n\\t         * this.formatValueText([min, max]); // format numeric min-max to text.\\n\\t         * this.formatValueText([this.dataBound[0], max]); // using data lower bound.\\n\\t         * this.formatValueText([min, this.dataBound[1]]); // using data upper bound.\\n\\t         *\\n\\t         * @param {number|Array.<number>} value Real value, or this.dataBound[0 or 1].\\n\\t         * @param {boolean} [isCategory=false] Only available when value is number.\\n\\t         * @param {Array.<string>} edgeSymbols Open-close symbol when value is interval.\\n\\t         * @return {string}\\n\\t         * @protected\\n\\t         */\\n\\t        formatValueText: function(value, isCategory, edgeSymbols) {\\n\\t            var option = this.option;\\n\\t            var precision = option.precision;\\n\\t            var dataBound = this.dataBound;\\n\\t            var formatter = option.formatter;\\n\\t            var isMinMax;\\n\\t            var textValue;\\n\\t            edgeSymbols = edgeSymbols || ['<', '>'];\\n\\n\\t            if (zrUtil.isArray(value)) {\\n\\t                value = value.slice();\\n\\t                isMinMax = true;\\n\\t            }\\n\\n\\t            textValue = isCategory\\n\\t                ? value\\n\\t                : (isMinMax\\n\\t                    ? [toFixed(value[0]), toFixed(value[1])]\\n\\t                    : toFixed(value)\\n\\t                );\\n\\n\\t            if (zrUtil.isString(formatter)) {\\n\\t                return formatter\\n\\t                    .replace('{value}', isMinMax ? textValue[0] : textValue)\\n\\t                    .replace('{value2}', isMinMax ? textValue[1] : textValue);\\n\\t            }\\n\\t            else if (zrUtil.isFunction(formatter)) {\\n\\t                return isMinMax\\n\\t                    ? formatter(value[0], value[1])\\n\\t                    : formatter(value);\\n\\t            }\\n\\n\\t            if (isMinMax) {\\n\\t                if (value[0] === dataBound[0]) {\\n\\t                    return edgeSymbols[0] + ' ' + textValue[1];\\n\\t                }\\n\\t                else if (value[1] === dataBound[1]) {\\n\\t                    return edgeSymbols[1] + ' ' + textValue[0];\\n\\t                }\\n\\t                else {\\n\\t                    return textValue[0] + ' - ' + textValue[1];\\n\\t                }\\n\\t            }\\n\\t            else { // Format single value (includes category case).\\n\\t                return textValue;\\n\\t            }\\n\\n\\t            function toFixed(val) {\\n\\t                return val === dataBound[0]\\n\\t                    ? 'min'\\n\\t                    : val === dataBound[1]\\n\\t                    ? 'max'\\n\\t                    : (+val).toFixed(precision);\\n\\t            }\\n\\t        },\\n\\n\\t        /**\\n\\t         * @protected\\n\\t         */\\n\\t        resetExtent: function () {\\n\\t            var thisOption = this.option;\\n\\n\\t            // Can not calculate data extent by data here.\\n\\t            // Because series and data may be modified in processing stage.\\n\\t            // So we do not support the feature \\\"auto min/max\\\".\\n\\n\\t            var extent = asc([thisOption.min, thisOption.max]);\\n\\n\\t            this._dataExtent = extent;\\n\\t        },\\n\\n\\t        /**\\n\\t         * @public\\n\\t         * @param {module:echarts/data/List} list\\n\\t         * @return {string} Concrete dimention. If return null/undefined,\\n\\t         *                  no dimension used.\\n\\t         */\\n\\t        getDataDimension: function (list) {\\n\\t            var optDim = this.option.dimension;\\n\\t            return optDim != null\\n\\t                ? optDim : list.dimensions.length - 1;\\n\\t        },\\n\\n\\t        /**\\n\\t         * @public\\n\\t         * @override\\n\\t         */\\n\\t        getExtent: function () {\\n\\t            return this._dataExtent.slice();\\n\\t        },\\n\\n\\t        /**\\n\\t         * @protected\\n\\t         */\\n\\t        completeVisualOption: function () {\\n\\t            var thisOption = this.option;\\n\\t            var base = {inRange: thisOption.inRange, outOfRange: thisOption.outOfRange};\\n\\n\\t            var target = thisOption.target || (thisOption.target = {});\\n\\t            var controller = thisOption.controller || (thisOption.controller = {});\\n\\n\\t            zrUtil.merge(target, base); // Do not override\\n\\t            zrUtil.merge(controller, base); // Do not override\\n\\n\\t            var isCategory = this.isCategory();\\n\\n\\t            completeSingle.call(this, target);\\n\\t            completeSingle.call(this, controller);\\n\\t            completeInactive.call(this, target, 'inRange', 'outOfRange');\\n\\t            // completeInactive.call(this, target, 'outOfRange', 'inRange');\\n\\t            completeController.call(this, controller);\\n\\n\\t            function completeSingle(base) {\\n\\t                // Compatible with ec2 dataRange.color.\\n\\t                // The mapping order of dataRange.color is: [high value, ..., low value]\\n\\t                // whereas inRange.color and outOfRange.color is [low value, ..., high value]\\n\\t                // Notice: ec2 has no inverse.\\n\\t                if (isArray(thisOption.color)\\n\\t                    // If there has been inRange: {symbol: ...}, adding color is a mistake.\\n\\t                    // So adding color only when no inRange defined.\\n\\t                    && !base.inRange\\n\\t                ) {\\n\\t                    base.inRange = {color: thisOption.color.slice().reverse()};\\n\\t                }\\n\\n\\t                // Compatible with previous logic, always give a defautl color, otherwise\\n\\t                // simple config with no inRange and outOfRange will not work.\\n\\t                // Originally we use visualMap.color as the default color, but setOption at\\n\\t                // the second time the default color will be erased. So we change to use\\n\\t                // constant DEFAULT_COLOR.\\n\\t                // If user do not want the defualt color, set inRange: {color: null}.\\n\\t                base.inRange = base.inRange || {color: DEFAULT_COLOR};\\n\\n\\t                // If using shortcut like: {inRange: 'symbol'}, complete default value.\\n\\t                each(this.stateList, function (state) {\\n\\t                    var visualType = base[state];\\n\\n\\t                    if (zrUtil.isString(visualType)) {\\n\\t                        var defa = visualDefault.get(visualType, 'active', isCategory);\\n\\t                        if (defa) {\\n\\t                            base[state] = {};\\n\\t                            base[state][visualType] = defa;\\n\\t                        }\\n\\t                        else {\\n\\t                            // Mark as not specified.\\n\\t                            delete base[state];\\n\\t                        }\\n\\t                    }\\n\\t                }, this);\\n\\t            }\\n\\n\\t            function completeInactive(base, stateExist, stateAbsent) {\\n\\t                var optExist = base[stateExist];\\n\\t                var optAbsent = base[stateAbsent];\\n\\n\\t                if (optExist && !optAbsent) {\\n\\t                    optAbsent = base[stateAbsent] = {};\\n\\t                    each(optExist, function (visualData, visualType) {\\n\\t                        if (!VisualMapping.isValidType(visualType)) {\\n\\t                            return;\\n\\t                        }\\n\\n\\t                        var defa = visualDefault.get(visualType, 'inactive', isCategory);\\n\\n\\t                        if (defa != null) {\\n\\t                            optAbsent[visualType] = defa;\\n\\n\\t                            // Compatibable with ec2:\\n\\t                            // Only inactive color to rgba(0,0,0,0) can not\\n\\t                            // make label transparent, so use opacity also.\\n\\t                            if (visualType === 'color'\\n\\t                                && !optAbsent.hasOwnProperty('opacity')\\n\\t                                && !optAbsent.hasOwnProperty('colorAlpha')\\n\\t                            ) {\\n\\t                                optAbsent.opacity = [0, 0];\\n\\t                            }\\n\\t                        }\\n\\t                    });\\n\\t                }\\n\\t            }\\n\\n\\t            function completeController(controller) {\\n\\t                var symbolExists = (controller.inRange || {}).symbol\\n\\t                    || (controller.outOfRange || {}).symbol;\\n\\t                var symbolSizeExists = (controller.inRange || {}).symbolSize\\n\\t                    || (controller.outOfRange || {}).symbolSize;\\n\\t                var inactiveColor = this.get('inactiveColor');\\n\\n\\t                each(this.stateList, function (state) {\\n\\n\\t                    var itemSize = this.itemSize;\\n\\t                    var visuals = controller[state];\\n\\n\\t                    // Set inactive color for controller if no other color\\n\\t                    // attr (like colorAlpha) specified.\\n\\t                    if (!visuals) {\\n\\t                        visuals = controller[state] = {\\n\\t                            color: isCategory ? inactiveColor : [inactiveColor]\\n\\t                        };\\n\\t                    }\\n\\n\\t                    // Consistent symbol and symbolSize if not specified.\\n\\t                    if (visuals.symbol == null) {\\n\\t                        visuals.symbol = symbolExists\\n\\t                            && zrUtil.clone(symbolExists)\\n\\t                            || (isCategory ? 'roundRect' : ['roundRect']);\\n\\t                    }\\n\\t                    if (visuals.symbolSize == null) {\\n\\t                        visuals.symbolSize = symbolSizeExists\\n\\t                            && zrUtil.clone(symbolSizeExists)\\n\\t                            || (isCategory ? itemSize[0] : [itemSize[0], itemSize[0]]);\\n\\t                    }\\n\\n\\t                    // Filter square and none.\\n\\t                    visuals.symbol = mapVisual(visuals.symbol, function (symbol) {\\n\\t                        return (symbol === 'none' || symbol === 'square') ? 'roundRect' : symbol;\\n\\t                    });\\n\\n\\t                    // Normalize symbolSize\\n\\t                    var symbolSize = visuals.symbolSize;\\n\\n\\t                    if (symbolSize != null) {\\n\\t                        var max = -Infinity;\\n\\t                        // symbolSize can be object when categories defined.\\n\\t                        eachVisual(symbolSize, function (value) {\\n\\t                            value > max && (max = value);\\n\\t                        });\\n\\t                        visuals.symbolSize = mapVisual(symbolSize, function (value) {\\n\\t                            return linearMap(value, [0, max], [0, itemSize[0]], true);\\n\\t                        });\\n\\t                    }\\n\\n\\t                }, this);\\n\\t            }\\n\\t        },\\n\\n\\t        /**\\n\\t         * @protected\\n\\t         */\\n\\t        resetItemSize: function () {\\n\\t            this.itemSize = [\\n\\t                parseFloat(this.get('itemWidth')),\\n\\t                parseFloat(this.get('itemHeight'))\\n\\t            ];\\n\\t        },\\n\\n\\t        /**\\n\\t         * @public\\n\\t         */\\n\\t        isCategory: function () {\\n\\t            return !!this.option.categories;\\n\\t        },\\n\\n\\t        /**\\n\\t         * @public\\n\\t         * @abstract\\n\\t         */\\n\\t        setSelected: noop,\\n\\n\\t        /**\\n\\t         * @public\\n\\t         * @abstract\\n\\t         * @param {*|module:echarts/data/List} valueOrData\\n\\t         * @param {number} dataIndex\\n\\t         * @return {string} state See this.stateList\\n\\t         */\\n\\t        getValueState: noop,\\n\\n\\t        /**\\n\\t         * FIXME\\n\\t         * Do not publish to thirt-part-dev temporarily\\n\\t         * util the interface is stable. (Should it return\\n\\t         * a function but not visual meta?)\\n\\t         *\\n\\t         * @pubilc\\n\\t         * @abstract\\n\\t         * @param {Function} getColorVisual\\n\\t         *        params: value, valueState\\n\\t         *        return: color\\n\\t         * @return {Object} visualMeta\\n\\t         *        should includes {stops, outerColors}\\n\\t         *        outerColor means [colorBeyondMinValue, colorBeyondMaxValue]\\n\\t         */\\n\\t        getVisualMeta: noop\\n\\n\\t    });\\n\\n\\t    module.exports = VisualMapModel;\\n\\n\\n\\n/***/ },\\n/* 383 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * @file Visual mapping.\\n\\t */\\n\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\n\\t    var visualDefault = {\\n\\n\\t        /**\\n\\t         * @public\\n\\t         */\\n\\t        get: function (visualType, key, isCategory) {\\n\\t            var value = zrUtil.clone(\\n\\t                (defaultOption[visualType] || {})[key]\\n\\t            );\\n\\n\\t            return isCategory\\n\\t                ? (zrUtil.isArray(value) ? value[value.length - 1] : value)\\n\\t                : value;\\n\\t        }\\n\\n\\t    };\\n\\n\\t    var defaultOption = {\\n\\n\\t        color: {\\n\\t            active: ['#006edd', '#e0ffff'],\\n\\t            inactive: ['rgba(0,0,0,0)']\\n\\t        },\\n\\n\\t        colorHue: {\\n\\t            active: [0, 360],\\n\\t            inactive: [0, 0]\\n\\t        },\\n\\n\\t        colorSaturation: {\\n\\t            active: [0.3, 1],\\n\\t            inactive: [0, 0]\\n\\t        },\\n\\n\\t        colorLightness: {\\n\\t            active: [0.9, 0.5],\\n\\t            inactive: [0, 0]\\n\\t        },\\n\\n\\t        colorAlpha: {\\n\\t            active: [0.3, 1],\\n\\t            inactive: [0, 0]\\n\\t        },\\n\\n\\t        opacity: {\\n\\t            active: [0.3, 1],\\n\\t            inactive: [0, 0]\\n\\t        },\\n\\n\\t        symbol: {\\n\\t            active: ['circle', 'roundRect', 'diamond'],\\n\\t            inactive: ['none']\\n\\t        },\\n\\n\\t        symbolSize: {\\n\\t            active: [10, 50],\\n\\t            inactive: [0, 0]\\n\\t        }\\n\\t    };\\n\\n\\t    module.exports = visualDefault;\\n\\n\\n\\n\\n/***/ },\\n/* 384 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var VisualMapView = __webpack_require__(385);\\n\\t    var graphic = __webpack_require__(18);\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var numberUtil = __webpack_require__(7);\\n\\t    var sliderMove = __webpack_require__(239);\\n\\t    var LinearGradient = __webpack_require__(65);\\n\\t    var helper = __webpack_require__(386);\\n\\t    var modelUtil = __webpack_require__(5);\\n\\t    var eventTool = __webpack_require__(88);\\n\\n\\t    var linearMap = numberUtil.linearMap;\\n\\t    var each = zrUtil.each;\\n\\t    var mathMin = Math.min;\\n\\t    var mathMax = Math.max;\\n\\n\\t    // Arbitrary value\\n\\t    var HOVER_LINK_SIZE = 12;\\n\\t    var HOVER_LINK_OUT = 6;\\n\\n\\t    // Notice:\\n\\t    // Any \\\"interval\\\" should be by the order of [low, high].\\n\\t    // \\\"handle0\\\" (handleIndex === 0) maps to\\n\\t    // low data value: this._dataInterval[0] and has low coord.\\n\\t    // \\\"handle1\\\" (handleIndex === 1) maps to\\n\\t    // high data value: this._dataInterval[1] and has high coord.\\n\\t    // The logic of transform is implemented in this._createBarGroup.\\n\\n\\t    var ContinuousView = VisualMapView.extend({\\n\\n\\t        type: 'visualMap.continuous',\\n\\n\\t        /**\\n\\t         * @override\\n\\t         */\\n\\t        init: function () {\\n\\n\\t            ContinuousView.superApply(this, 'init', arguments);\\n\\n\\t            /**\\n\\t             * @private\\n\\t             */\\n\\t            this._shapes = {};\\n\\n\\t            /**\\n\\t             * @private\\n\\t             */\\n\\t            this._dataInterval = [];\\n\\n\\t            /**\\n\\t             * @private\\n\\t             */\\n\\t            this._handleEnds = [];\\n\\n\\t            /**\\n\\t             * @private\\n\\t             */\\n\\t            this._orient;\\n\\n\\t            /**\\n\\t             * @private\\n\\t             */\\n\\t            this._useHandle;\\n\\n\\t            /**\\n\\t             * @private\\n\\t             */\\n\\t            this._hoverLinkDataIndices = [];\\n\\n\\t            /**\\n\\t             * @private\\n\\t             */\\n\\t            this._dragging;\\n\\n\\t            /**\\n\\t             * @private\\n\\t             */\\n\\t            this._hovering;\\n\\t        },\\n\\n\\t        /**\\n\\t         * @protected\\n\\t         * @override\\n\\t         */\\n\\t        doRender: function (visualMapModel, ecModel, api, payload) {\\n\\t            if (!payload || payload.type !== 'selectDataRange' || payload.from !== this.uid) {\\n\\t                this._buildView();\\n\\t            }\\n\\t        },\\n\\n\\t        /**\\n\\t         * @private\\n\\t         */\\n\\t        _buildView: function () {\\n\\t            this.group.removeAll();\\n\\n\\t            var visualMapModel = this.visualMapModel;\\n\\t            var thisGroup = this.group;\\n\\n\\t            this._orient = visualMapModel.get('orient');\\n\\t            this._useHandle = visualMapModel.get('calculable');\\n\\n\\t            this._resetInterval();\\n\\n\\t            this._renderBar(thisGroup);\\n\\n\\t            var dataRangeText = visualMapModel.get('text');\\n\\t            this._renderEndsText(thisGroup, dataRangeText, 0);\\n\\t            this._renderEndsText(thisGroup, dataRangeText, 1);\\n\\n\\t            // Do this for background size calculation.\\n\\t            this._updateView(true);\\n\\n\\t            // After updating view, inner shapes is built completely,\\n\\t            // and then background can be rendered.\\n\\t            this.renderBackground(thisGroup);\\n\\n\\t            // Real update view\\n\\t            this._updateView();\\n\\n\\t            this._enableHoverLinkToSeries();\\n\\t            this._enableHoverLinkFromSeries();\\n\\n\\t            this.positionGroup(thisGroup);\\n\\t        },\\n\\n\\t        /**\\n\\t         * @private\\n\\t         */\\n\\t        _renderEndsText: function (group, dataRangeText, endsIndex) {\\n\\t            if (!dataRangeText) {\\n\\t                return;\\n\\t            }\\n\\n\\t            // Compatible with ec2, text[0] map to high value, text[1] map low value.\\n\\t            var text = dataRangeText[1 - endsIndex];\\n\\t            text = text != null ? text + '' : '';\\n\\n\\t            var visualMapModel = this.visualMapModel;\\n\\t            var textGap = visualMapModel.get('textGap');\\n\\t            var itemSize = visualMapModel.itemSize;\\n\\n\\t            var barGroup = this._shapes.barGroup;\\n\\t            var position = this._applyTransform(\\n\\t                [\\n\\t                    itemSize[0] / 2,\\n\\t                    endsIndex === 0 ? -textGap : itemSize[1] + textGap\\n\\t                ],\\n\\t                barGroup\\n\\t            );\\n\\t            var align = this._applyTransform(\\n\\t                endsIndex === 0 ? 'bottom' : 'top',\\n\\t                barGroup\\n\\t            );\\n\\t            var orient = this._orient;\\n\\t            var textStyleModel = this.visualMapModel.textStyleModel;\\n\\n\\t            this.group.add(new graphic.Text({\\n\\t                style: {\\n\\t                    x: position[0],\\n\\t                    y: position[1],\\n\\t                    textVerticalAlign: orient === 'horizontal' ? 'middle' : align,\\n\\t                    textAlign: orient === 'horizontal' ? align : 'center',\\n\\t                    text: text,\\n\\t                    textFont: textStyleModel.getFont(),\\n\\t                    fill: textStyleModel.getTextColor()\\n\\t                }\\n\\t            }));\\n\\t        },\\n\\n\\t        /**\\n\\t         * @private\\n\\t         */\\n\\t        _renderBar: function (targetGroup) {\\n\\t            var visualMapModel = this.visualMapModel;\\n\\t            var shapes = this._shapes;\\n\\t            var itemSize = visualMapModel.itemSize;\\n\\t            var orient = this._orient;\\n\\t            var useHandle = this._useHandle;\\n\\t            var itemAlign = helper.getItemAlign(visualMapModel, this.api, itemSize);\\n\\t            var barGroup = shapes.barGroup = this._createBarGroup(itemAlign);\\n\\n\\t            // Bar\\n\\t            barGroup.add(shapes.outOfRange = createPolygon());\\n\\t            barGroup.add(shapes.inRange = createPolygon(\\n\\t                null,\\n\\t                useHandle ? 'move' : null,\\n\\t                zrUtil.bind(this._dragHandle, this, 'all', false),\\n\\t                zrUtil.bind(this._dragHandle, this, 'all', true)\\n\\t            ));\\n\\n\\t            var textRect = visualMapModel.textStyleModel.getTextRect('国');\\n\\t            var textSize = mathMax(textRect.width, textRect.height);\\n\\n\\t            // Handle\\n\\t            if (useHandle) {\\n\\t                shapes.handleThumbs = [];\\n\\t                shapes.handleLabels = [];\\n\\t                shapes.handleLabelPoints = [];\\n\\n\\t                this._createHandle(barGroup, 0, itemSize, textSize, orient, itemAlign);\\n\\t                this._createHandle(barGroup, 1, itemSize, textSize, orient, itemAlign);\\n\\t            }\\n\\n\\t            this._createIndicator(barGroup, itemSize, textSize, orient);\\n\\n\\t            targetGroup.add(barGroup);\\n\\t        },\\n\\n\\t        /**\\n\\t         * @private\\n\\t         */\\n\\t        _createHandle: function (barGroup, handleIndex, itemSize, textSize, orient) {\\n\\t            var onDrift = zrUtil.bind(this._dragHandle, this, handleIndex, false);\\n\\t            var onDragEnd = zrUtil.bind(this._dragHandle, this, handleIndex, true);\\n\\t            var handleThumb = createPolygon(\\n\\t                createHandlePoints(handleIndex, textSize),\\n\\t                'move',\\n\\t                onDrift,\\n\\t                onDragEnd\\n\\t            );\\n\\t            handleThumb.position[0] = itemSize[0];\\n\\t            barGroup.add(handleThumb);\\n\\n\\t            // Text is always horizontal layout but should not be effected by\\n\\t            // transform (orient/inverse). So label is built separately but not\\n\\t            // use zrender/graphic/helper/RectText, and is located based on view\\n\\t            // group (according to handleLabelPoint) but not barGroup.\\n\\t            var textStyleModel = this.visualMapModel.textStyleModel;\\n\\t            var handleLabel = new graphic.Text({\\n\\t                draggable: true,\\n\\t                drift: onDrift,\\n\\t                onmousemove: function (e) {\\n\\t                    // Fot mobile devicem, prevent screen slider on the button.\\n\\t                    eventTool.stop(e.event);\\n\\t                },\\n\\t                ondragend: onDragEnd,\\n\\t                style: {\\n\\t                    x: 0, y: 0, text: '',\\n\\t                    textFont: textStyleModel.getFont(),\\n\\t                    fill: textStyleModel.getTextColor()\\n\\t                }\\n\\t            });\\n\\t            this.group.add(handleLabel);\\n\\n\\t            var handleLabelPoint = [\\n\\t                orient === 'horizontal'\\n\\t                    ? textSize / 2\\n\\t                    : textSize * 1.5,\\n\\t                orient === 'horizontal'\\n\\t                    ? (handleIndex === 0 ? -(textSize * 1.5) : (textSize * 1.5))\\n\\t                    : (handleIndex === 0 ? -textSize / 2 : textSize / 2)\\n\\t            ];\\n\\n\\t            var shapes = this._shapes;\\n\\t            shapes.handleThumbs[handleIndex] = handleThumb;\\n\\t            shapes.handleLabelPoints[handleIndex] = handleLabelPoint;\\n\\t            shapes.handleLabels[handleIndex] = handleLabel;\\n\\t        },\\n\\n\\t        /**\\n\\t         * @private\\n\\t         */\\n\\t        _createIndicator: function (barGroup, itemSize, textSize, orient) {\\n\\t            var indicator = createPolygon([[0, 0]], 'move');\\n\\t            indicator.position[0] = itemSize[0];\\n\\t            indicator.attr({invisible: true, silent: true});\\n\\t            barGroup.add(indicator);\\n\\n\\t            var textStyleModel = this.visualMapModel.textStyleModel;\\n\\t            var indicatorLabel = new graphic.Text({\\n\\t                silent: true,\\n\\t                invisible: true,\\n\\t                style: {\\n\\t                    x: 0, y: 0, text: '',\\n\\t                    textFont: textStyleModel.getFont(),\\n\\t                    fill: textStyleModel.getTextColor()\\n\\t                }\\n\\t            });\\n\\t            this.group.add(indicatorLabel);\\n\\n\\t            var indicatorLabelPoint = [\\n\\t                orient === 'horizontal' ? textSize / 2 : HOVER_LINK_OUT + 3,\\n\\t                0\\n\\t            ];\\n\\n\\t            var shapes = this._shapes;\\n\\t            shapes.indicator = indicator;\\n\\t            shapes.indicatorLabel = indicatorLabel;\\n\\t            shapes.indicatorLabelPoint = indicatorLabelPoint;\\n\\t        },\\n\\n\\t        /**\\n\\t         * @private\\n\\t         */\\n\\t        _dragHandle: function (handleIndex, isEnd, dx, dy) {\\n\\t            if (!this._useHandle) {\\n\\t                return;\\n\\t            }\\n\\n\\t            this._dragging = !isEnd;\\n\\n\\t            if (!isEnd) {\\n\\t                // Transform dx, dy to bar coordination.\\n\\t                var vertex = this._applyTransform([dx, dy], this._shapes.barGroup, true);\\n\\t                this._updateInterval(handleIndex, vertex[1]);\\n\\n\\t                // Considering realtime, update view should be executed\\n\\t                // before dispatch action.\\n\\t                this._updateView();\\n\\t            }\\n\\n\\t            // dragEnd do not dispatch action when realtime.\\n\\t            if (isEnd === !this.visualMapModel.get('realtime')) { // jshint ignore:line\\n\\t                this.api.dispatchAction({\\n\\t                    type: 'selectDataRange',\\n\\t                    from: this.uid,\\n\\t                    visualMapId: this.visualMapModel.id,\\n\\t                    selected: this._dataInterval.slice()\\n\\t                });\\n\\t            }\\n\\n\\t            if (isEnd) {\\n\\t                !this._hovering && this._clearHoverLinkToSeries();\\n\\t            }\\n\\t            else if (useHoverLinkOnHandle(this.visualMapModel)) {\\n\\t                this._doHoverLinkToSeries(this._handleEnds[handleIndex], false);\\n\\t            }\\n\\t        },\\n\\n\\t        /**\\n\\t         * @private\\n\\t         */\\n\\t        _resetInterval: function () {\\n\\t            var visualMapModel = this.visualMapModel;\\n\\n\\t            var dataInterval = this._dataInterval = visualMapModel.getSelected();\\n\\t            var dataExtent = visualMapModel.getExtent();\\n\\t            var sizeExtent = [0, visualMapModel.itemSize[1]];\\n\\n\\t            this._handleEnds = [\\n\\t                linearMap(dataInterval[0], dataExtent, sizeExtent, true),\\n\\t                linearMap(dataInterval[1], dataExtent, sizeExtent, true)\\n\\t            ];\\n\\t        },\\n\\n\\t        /**\\n\\t         * @private\\n\\t         * @param {(number|string)} handleIndex 0 or 1 or 'all'\\n\\t         * @param {number} dx\\n\\t         * @param {number} dy\\n\\t         */\\n\\t        _updateInterval: function (handleIndex, delta) {\\n\\t            delta = delta || 0;\\n\\t            var visualMapModel = this.visualMapModel;\\n\\t            var handleEnds = this._handleEnds;\\n\\t            var sizeExtent = [0, visualMapModel.itemSize[1]];\\n\\n\\t            sliderMove(\\n\\t                delta,\\n\\t                handleEnds,\\n\\t                sizeExtent,\\n\\t                handleIndex,\\n\\t                // cross is forbiden\\n\\t                0\\n\\t            );\\n\\n\\t            var dataExtent = visualMapModel.getExtent();\\n\\t            // Update data interval.\\n\\t            this._dataInterval = [\\n\\t                linearMap(handleEnds[0], sizeExtent, dataExtent, true),\\n\\t                linearMap(handleEnds[1], sizeExtent, dataExtent, true)\\n\\t            ];\\n\\t        },\\n\\n\\t        /**\\n\\t         * @private\\n\\t         */\\n\\t        _updateView: function (forSketch) {\\n\\t            var visualMapModel = this.visualMapModel;\\n\\t            var dataExtent = visualMapModel.getExtent();\\n\\t            var shapes = this._shapes;\\n\\n\\t            var outOfRangeHandleEnds = [0, visualMapModel.itemSize[1]];\\n\\t            var inRangeHandleEnds = forSketch ? outOfRangeHandleEnds : this._handleEnds;\\n\\n\\t            var visualInRange = this._createBarVisual(\\n\\t                this._dataInterval, dataExtent, inRangeHandleEnds, 'inRange'\\n\\t            );\\n\\t            var visualOutOfRange = this._createBarVisual(\\n\\t                dataExtent, dataExtent, outOfRangeHandleEnds, 'outOfRange'\\n\\t            );\\n\\n\\t            shapes.inRange\\n\\t                .setStyle({\\n\\t                    fill: visualInRange.barColor,\\n\\t                    opacity: visualInRange.opacity\\n\\t                })\\n\\t                .setShape('points', visualInRange.barPoints);\\n\\t            shapes.outOfRange\\n\\t                .setStyle({\\n\\t                    fill: visualOutOfRange.barColor,\\n\\t                    opacity: visualOutOfRange.opacity\\n\\t                })\\n\\t                .setShape('points', visualOutOfRange.barPoints);\\n\\n\\t            this._updateHandle(inRangeHandleEnds, visualInRange);\\n\\t        },\\n\\n\\t        /**\\n\\t         * @private\\n\\t         */\\n\\t        _createBarVisual: function (dataInterval, dataExtent, handleEnds, forceState) {\\n\\t            var opts = {\\n\\t                forceState: forceState,\\n\\t                convertOpacityToAlpha: true\\n\\t            };\\n\\t            var colorStops = this._makeColorGradient(dataInterval, opts);\\n\\n\\t            var symbolSizes = [\\n\\t                this.getControllerVisual(dataInterval[0], 'symbolSize', opts),\\n\\t                this.getControllerVisual(dataInterval[1], 'symbolSize', opts)\\n\\t            ];\\n\\t            var barPoints = this._createBarPoints(handleEnds, symbolSizes);\\n\\n\\t            return {\\n\\t                barColor: new LinearGradient(0, 0, 0, 1, colorStops),\\n\\t                barPoints: barPoints,\\n\\t                handlesColor: [\\n\\t                    colorStops[0].color,\\n\\t                    colorStops[colorStops.length - 1].color\\n\\t                ]\\n\\t            };\\n\\t        },\\n\\n\\t        /**\\n\\t         * @private\\n\\t         */\\n\\t        _makeColorGradient: function (dataInterval, opts) {\\n\\t            // Considering colorHue, which is not linear, so we have to sample\\n\\t            // to calculate gradient color stops, but not only caculate head\\n\\t            // and tail.\\n\\t            var sampleNumber = 100; // Arbitrary value.\\n\\t            var colorStops = [];\\n\\t            var step = (dataInterval[1] - dataInterval[0]) / sampleNumber;\\n\\n\\t            colorStops.push({\\n\\t                color: this.getControllerVisual(dataInterval[0], 'color', opts),\\n\\t                offset: 0\\n\\t            });\\n\\n\\t            for (var i = 1; i < sampleNumber; i++) {\\n\\t                var currValue = dataInterval[0] + step * i;\\n\\t                if (currValue > dataInterval[1]) {\\n\\t                    break;\\n\\t                }\\n\\t                colorStops.push({\\n\\t                    color: this.getControllerVisual(currValue, 'color', opts),\\n\\t                    offset: i / sampleNumber\\n\\t                });\\n\\t            }\\n\\n\\t            colorStops.push({\\n\\t                color: this.getControllerVisual(dataInterval[1], 'color', opts),\\n\\t                offset: 1\\n\\t            });\\n\\n\\t            return colorStops;\\n\\t        },\\n\\n\\t        /**\\n\\t         * @private\\n\\t         */\\n\\t        _createBarPoints: function (handleEnds, symbolSizes) {\\n\\t            var itemSize = this.visualMapModel.itemSize;\\n\\n\\t            return [\\n\\t                [itemSize[0] - symbolSizes[0], handleEnds[0]],\\n\\t                [itemSize[0], handleEnds[0]],\\n\\t                [itemSize[0], handleEnds[1]],\\n\\t                [itemSize[0] - symbolSizes[1], handleEnds[1]]\\n\\t            ];\\n\\t        },\\n\\n\\t        /**\\n\\t         * @private\\n\\t         */\\n\\t        _createBarGroup: function (itemAlign) {\\n\\t            var orient = this._orient;\\n\\t            var inverse = this.visualMapModel.get('inverse');\\n\\n\\t            return new graphic.Group(\\n\\t                (orient === 'horizontal' && !inverse)\\n\\t                ? {scale: itemAlign === 'bottom' ? [1, 1] : [-1, 1], rotation: Math.PI / 2}\\n\\t                : (orient === 'horizontal' && inverse)\\n\\t                ? {scale: itemAlign === 'bottom' ? [-1, 1] : [1, 1], rotation: -Math.PI / 2}\\n\\t                : (orient === 'vertical' && !inverse)\\n\\t                ? {scale: itemAlign === 'left' ? [1, -1] : [-1, -1]}\\n\\t                : {scale: itemAlign === 'left' ? [1, 1] : [-1, 1]}\\n\\t            );\\n\\t        },\\n\\n\\t        /**\\n\\t         * @private\\n\\t         */\\n\\t        _updateHandle: function (handleEnds, visualInRange) {\\n\\t            if (!this._useHandle) {\\n\\t                return;\\n\\t            }\\n\\n\\t            var shapes = this._shapes;\\n\\t            var visualMapModel = this.visualMapModel;\\n\\t            var handleThumbs = shapes.handleThumbs;\\n\\t            var handleLabels = shapes.handleLabels;\\n\\n\\t            each([0, 1], function (handleIndex) {\\n\\t                var handleThumb = handleThumbs[handleIndex];\\n\\t                handleThumb.setStyle('fill', visualInRange.handlesColor[handleIndex]);\\n\\t                handleThumb.position[1] = handleEnds[handleIndex];\\n\\n\\t                // Update handle label position.\\n\\t                var textPoint = graphic.applyTransform(\\n\\t                    shapes.handleLabelPoints[handleIndex],\\n\\t                    graphic.getTransform(handleThumb, this.group)\\n\\t                );\\n\\t                handleLabels[handleIndex].setStyle({\\n\\t                    x: textPoint[0],\\n\\t                    y: textPoint[1],\\n\\t                    text: visualMapModel.formatValueText(this._dataInterval[handleIndex]),\\n\\t                    textVerticalAlign: 'middle',\\n\\t                    textAlign: this._applyTransform(\\n\\t                        this._orient === 'horizontal'\\n\\t                            ? (handleIndex === 0 ? 'bottom' : 'top')\\n\\t                            : 'left',\\n\\t                        shapes.barGroup\\n\\t                    )\\n\\t                });\\n\\t            }, this);\\n\\t        },\\n\\n\\t        /**\\n\\t         * @private\\n\\t         * @param {number} cursorValue\\n\\t         * @param {number} textValue\\n\\t         * @param {string} [rangeSymbol]\\n\\t         * @param {number} [halfHoverLinkSize]\\n\\t         */\\n\\t        _showIndicator: function (cursorValue, textValue, rangeSymbol, halfHoverLinkSize) {\\n\\t            var visualMapModel = this.visualMapModel;\\n\\t            var dataExtent = visualMapModel.getExtent();\\n\\t            var itemSize = visualMapModel.itemSize;\\n\\t            var sizeExtent = [0, itemSize[1]];\\n\\t            var pos = linearMap(cursorValue, dataExtent, sizeExtent, true);\\n\\n\\t            var shapes = this._shapes;\\n\\t            var indicator = shapes.indicator;\\n\\t            if (!indicator) {\\n\\t                return;\\n\\t            }\\n\\n\\t            indicator.position[1] = pos;\\n\\t            indicator.attr('invisible', false);\\n\\t            indicator.setShape('points', createIndicatorPoints(\\n\\t                !!rangeSymbol, halfHoverLinkSize, pos, itemSize[1]\\n\\t            ));\\n\\n\\t            var opts = {convertOpacityToAlpha: true};\\n\\t            var color = this.getControllerVisual(cursorValue, 'color', opts);\\n\\t            indicator.setStyle('fill', color);\\n\\n\\t            // Update handle label position.\\n\\t            var textPoint = graphic.applyTransform(\\n\\t                shapes.indicatorLabelPoint,\\n\\t                graphic.getTransform(indicator, this.group)\\n\\t            );\\n\\n\\t            var indicatorLabel = shapes.indicatorLabel;\\n\\t            indicatorLabel.attr('invisible', false);\\n\\t            var align = this._applyTransform('left', shapes.barGroup);\\n\\t            var orient = this._orient;\\n\\t            indicatorLabel.setStyle({\\n\\t                text: (rangeSymbol ? rangeSymbol : '') + visualMapModel.formatValueText(textValue),\\n\\t                textVerticalAlign: orient === 'horizontal' ? align : 'middle',\\n\\t                textAlign: orient === 'horizontal' ? 'center' : align,\\n\\t                x: textPoint[0],\\n\\t                y: textPoint[1]\\n\\t            });\\n\\t        },\\n\\n\\t        /**\\n\\t         * @private\\n\\t         */\\n\\t        _enableHoverLinkToSeries: function () {\\n\\t            var self = this;\\n\\t            this._shapes.barGroup\\n\\n\\t                .on('mousemove', function (e) {\\n\\t                    self._hovering = true;\\n\\n\\t                    if (!self._dragging) {\\n\\t                        var itemSize = self.visualMapModel.itemSize;\\n\\t                        var pos = self._applyTransform(\\n\\t                            [e.offsetX, e.offsetY], self._shapes.barGroup, true, true\\n\\t                        );\\n\\t                        // For hover link show when hover handle, which might be\\n\\t                        // below or upper than sizeExtent.\\n\\t                        pos[1] = mathMin(mathMax(0, pos[1]), itemSize[1]);\\n\\n\\t                        self._doHoverLinkToSeries(\\n\\t                            pos[1],\\n\\t                            0 <= pos[0] && pos[0] <= itemSize[0]\\n\\t                        );\\n\\t                    }\\n\\t                })\\n\\n\\t                .on('mouseout', function () {\\n\\t                    // When mouse is out of handle, hoverLink still need\\n\\t                    // to be displayed when realtime is set as false.\\n\\t                    self._hovering = false;\\n\\t                    !self._dragging && self._clearHoverLinkToSeries();\\n\\t                });\\n\\t        },\\n\\n\\t        /**\\n\\t         * @private\\n\\t         */\\n\\t        _enableHoverLinkFromSeries: function () {\\n\\t            var zr = this.api.getZr();\\n\\n\\t            if (this.visualMapModel.option.hoverLink) {\\n\\t                zr.on('mouseover', this._hoverLinkFromSeriesMouseOver, this);\\n\\t                zr.on('mouseout', this._hideIndicator, this);\\n\\t            }\\n\\t            else {\\n\\t                this._clearHoverLinkFromSeries();\\n\\t            }\\n\\t        },\\n\\n\\t        /**\\n\\t         * @private\\n\\t         */\\n\\t        _doHoverLinkToSeries: function (cursorPos, hoverOnBar) {\\n\\t            var visualMapModel = this.visualMapModel;\\n\\t            var itemSize = visualMapModel.itemSize;\\n\\n\\t            if (!visualMapModel.option.hoverLink) {\\n\\t                return;\\n\\t            }\\n\\n\\t            var sizeExtent = [0, itemSize[1]];\\n\\t            var dataExtent = visualMapModel.getExtent();\\n\\n\\t            // For hover link show when hover handle, which might be below or upper than sizeExtent.\\n\\t            cursorPos = mathMin(mathMax(sizeExtent[0], cursorPos), sizeExtent[1]);\\n\\n\\t            var halfHoverLinkSize = getHalfHoverLinkSize(visualMapModel, dataExtent, sizeExtent);\\n\\t            var hoverRange = [cursorPos - halfHoverLinkSize, cursorPos + halfHoverLinkSize];\\n\\t            var cursorValue = linearMap(cursorPos, sizeExtent, dataExtent, true);\\n\\t            var valueRange = [\\n\\t                linearMap(hoverRange[0], sizeExtent, dataExtent, true),\\n\\t                linearMap(hoverRange[1], sizeExtent, dataExtent, true)\\n\\t            ];\\n\\t            // Consider data range is out of visualMap range, see test/visualMap-continuous.html,\\n\\t            // where china and india has very large population.\\n\\t            hoverRange[0] < sizeExtent[0] && (valueRange[0] = -Infinity);\\n\\t            hoverRange[1] > sizeExtent[1] && (valueRange[1] = Infinity);\\n\\n\\t            // Do not show indicator when mouse is over handle,\\n\\t            // otherwise labels overlap, especially when dragging.\\n\\t            if (hoverOnBar) {\\n\\t                if (valueRange[0] === -Infinity) {\\n\\t                    this._showIndicator(cursorValue, valueRange[1], '< ', halfHoverLinkSize);\\n\\t                }\\n\\t                else if (valueRange[1] === Infinity) {\\n\\t                    this._showIndicator(cursorValue, valueRange[0], '> ', halfHoverLinkSize);\\n\\t                }\\n\\t                else {\\n\\t                    this._showIndicator(cursorValue, cursorValue, '≈ ', halfHoverLinkSize);\\n\\t                }\\n\\t            }\\n\\n\\t            // When realtime is set as false, handles, which are in barGroup,\\n\\t            // also trigger hoverLink, which help user to realize where they\\n\\t            // focus on when dragging. (see test/heatmap-large.html)\\n\\t            // When realtime is set as true, highlight will not show when hover\\n\\t            // handle, because the label on handle, which displays a exact value\\n\\t            // but not range, might mislead users.\\n\\t            var oldBatch = this._hoverLinkDataIndices;\\n\\t            var newBatch = [];\\n\\t            if (hoverOnBar || useHoverLinkOnHandle(visualMapModel)) {\\n\\t                newBatch = this._hoverLinkDataIndices = visualMapModel.findTargetDataIndices(valueRange);\\n\\t            }\\n\\n\\t            var resultBatches = modelUtil.compressBatches(oldBatch, newBatch);\\n\\t            this._dispatchHighDown('downplay', helper.convertDataIndex(resultBatches[0]));\\n\\t            this._dispatchHighDown('highlight', helper.convertDataIndex(resultBatches[1]));\\n\\t        },\\n\\n\\t        /**\\n\\t         * @private\\n\\t         */\\n\\t        _hoverLinkFromSeriesMouseOver: function (e) {\\n\\t            var el = e.target;\\n\\t            var visualMapModel = this.visualMapModel;\\n\\n\\t            if (!el || el.dataIndex == null) {\\n\\t                return;\\n\\t            }\\n\\n\\t            var dataModel = this.ecModel.getSeriesByIndex(el.seriesIndex);\\n\\n\\t            if (!visualMapModel.isTargetSeries(dataModel)) {\\n\\t                return;\\n\\t            }\\n\\n\\t            var data = dataModel.getData(el.dataType);\\n\\t            var dim = data.getDimension(visualMapModel.getDataDimension(data));\\n\\t            var value = data.get(dim, el.dataIndex, true);\\n\\n\\t            if (!isNaN(value)) {\\n\\t                this._showIndicator(value, value);\\n\\t            }\\n\\t        },\\n\\n\\t        /**\\n\\t         * @private\\n\\t         */\\n\\t        _hideIndicator: function () {\\n\\t            var shapes = this._shapes;\\n\\t            shapes.indicator && shapes.indicator.attr('invisible', true);\\n\\t            shapes.indicatorLabel && shapes.indicatorLabel.attr('invisible', true);\\n\\t        },\\n\\n\\t        /**\\n\\t         * @private\\n\\t         */\\n\\t        _clearHoverLinkToSeries: function () {\\n\\t            this._hideIndicator();\\n\\n\\t            var indices = this._hoverLinkDataIndices;\\n\\n\\t            this._dispatchHighDown('downplay', helper.convertDataIndex(indices));\\n\\n\\t            indices.length = 0;\\n\\t        },\\n\\n\\t        /**\\n\\t         * @private\\n\\t         */\\n\\t        _clearHoverLinkFromSeries: function () {\\n\\t            this._hideIndicator();\\n\\n\\t            var zr = this.api.getZr();\\n\\t            zr.off('mouseover', this._hoverLinkFromSeriesMouseOver);\\n\\t            zr.off('mouseout', this._hideIndicator);\\n\\t        },\\n\\n\\t        /**\\n\\t         * @private\\n\\t         */\\n\\t        _applyTransform: function (vertex, element, inverse, global) {\\n\\t            var transform = graphic.getTransform(element, global ? null : this.group);\\n\\n\\t            return graphic[\\n\\t                zrUtil.isArray(vertex) ? 'applyTransform' : 'transformDirection'\\n\\t            ](vertex, transform, inverse);\\n\\t        },\\n\\n\\t        /**\\n\\t         * @private\\n\\t         */\\n\\t        _dispatchHighDown: function (type, batch) {\\n\\t            batch && batch.length && this.api.dispatchAction({\\n\\t                type: type,\\n\\t                batch: batch\\n\\t            });\\n\\t        },\\n\\n\\t        /**\\n\\t         * @override\\n\\t         */\\n\\t        dispose: function () {\\n\\t            this._clearHoverLinkFromSeries();\\n\\t            this._clearHoverLinkToSeries();\\n\\t        },\\n\\n\\t        /**\\n\\t         * @override\\n\\t         */\\n\\t        remove: function () {\\n\\t            this._clearHoverLinkFromSeries();\\n\\t            this._clearHoverLinkToSeries();\\n\\t        }\\n\\n\\t    });\\n\\n\\t    function createPolygon(points, cursor, onDrift, onDragEnd) {\\n\\t        return new graphic.Polygon({\\n\\t            shape: {points: points},\\n\\t            draggable: !!onDrift,\\n\\t            cursor: cursor,\\n\\t            drift: onDrift,\\n\\t            onmousemove: function (e) {\\n\\t                // Fot mobile devicem, prevent screen slider on the button.\\n\\t                eventTool.stop(e.event);\\n\\t            },\\n\\t            ondragend: onDragEnd\\n\\t        });\\n\\t    }\\n\\n\\t    function createHandlePoints(handleIndex, textSize) {\\n\\t        return handleIndex === 0\\n\\t            ? [[0, 0], [textSize, 0], [textSize, -textSize]]\\n\\t            : [[0, 0], [textSize, 0], [textSize, textSize]];\\n\\t    }\\n\\n\\t    function createIndicatorPoints(isRange, halfHoverLinkSize, pos, extentMax) {\\n\\t        return isRange\\n\\t            ? [ // indicate range\\n\\t                [0, -mathMin(halfHoverLinkSize, mathMax(pos, 0))],\\n\\t                [HOVER_LINK_OUT, 0],\\n\\t                [0, mathMin(halfHoverLinkSize, mathMax(extentMax - pos, 0))]\\n\\t            ]\\n\\t            : [ // indicate single value\\n\\t                [0, 0], [5, -5], [5, 5]\\n\\t            ];\\n\\t    }\\n\\n\\t    function getHalfHoverLinkSize(visualMapModel, dataExtent, sizeExtent) {\\n\\t        var halfHoverLinkSize = HOVER_LINK_SIZE / 2;\\n\\t        var hoverLinkDataSize = visualMapModel.get('hoverLinkDataSize');\\n\\t        if (hoverLinkDataSize) {\\n\\t            halfHoverLinkSize = linearMap(hoverLinkDataSize, dataExtent, sizeExtent, true) / 2;\\n\\t        }\\n\\t        return halfHoverLinkSize;\\n\\t    }\\n\\n\\t    function useHoverLinkOnHandle(visualMapModel) {\\n\\t        return !visualMapModel.get('realtime') && visualMapModel.get('hoverLinkOnHandle');\\n\\t    }\\n\\n\\t    module.exports = ContinuousView;\\n\\n\\n\\n/***/ },\\n/* 385 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var graphic = __webpack_require__(18);\\n\\t    var formatUtil = __webpack_require__(6);\\n\\t    var layout = __webpack_require__(71);\\n\\t    var echarts = __webpack_require__(1);\\n\\t    var VisualMapping = __webpack_require__(203);\\n\\n\\t    module.exports = echarts.extendComponentView({\\n\\n\\t        type: 'visualMap',\\n\\n\\t        /**\\n\\t         * @readOnly\\n\\t         * @type {Object}\\n\\t         */\\n\\t        autoPositionValues: {left: 1, right: 1, top: 1, bottom: 1},\\n\\n\\t        init: function (ecModel, api) {\\n\\t            /**\\n\\t             * @readOnly\\n\\t             * @type {module:echarts/model/Global}\\n\\t             */\\n\\t            this.ecModel = ecModel;\\n\\n\\t            /**\\n\\t             * @readOnly\\n\\t             * @type {module:echarts/ExtensionAPI}\\n\\t             */\\n\\t            this.api = api;\\n\\n\\t            /**\\n\\t             * @readOnly\\n\\t             * @type {module:echarts/component/visualMap/visualMapModel}\\n\\t             */\\n\\t            this.visualMapModel;\\n\\t        },\\n\\n\\t        /**\\n\\t         * @protected\\n\\t         */\\n\\t        render: function (visualMapModel, ecModel, api, payload) {\\n\\t            this.visualMapModel = visualMapModel;\\n\\n\\t            if (visualMapModel.get('show') === false) {\\n\\t                this.group.removeAll();\\n\\t                return;\\n\\t            }\\n\\n\\t            this.doRender.apply(this, arguments);\\n\\t        },\\n\\n\\t        /**\\n\\t         * @protected\\n\\t         */\\n\\t        renderBackground: function (group) {\\n\\t            var visualMapModel = this.visualMapModel;\\n\\t            var padding = formatUtil.normalizeCssArray(visualMapModel.get('padding') || 0);\\n\\t            var rect = group.getBoundingRect();\\n\\n\\t            group.add(new graphic.Rect({\\n\\t                z2: -1, // Lay background rect on the lowest layer.\\n\\t                silent: true,\\n\\t                shape: {\\n\\t                    x: rect.x - padding[3],\\n\\t                    y: rect.y - padding[0],\\n\\t                    width: rect.width + padding[3] + padding[1],\\n\\t                    height: rect.height + padding[0] + padding[2]\\n\\t                },\\n\\t                style: {\\n\\t                    fill: visualMapModel.get('backgroundColor'),\\n\\t                    stroke: visualMapModel.get('borderColor'),\\n\\t                    lineWidth: visualMapModel.get('borderWidth')\\n\\t                }\\n\\t            }));\\n\\t        },\\n\\n\\t        /**\\n\\t         * @protected\\n\\t         * @param {number} targetValue can be Infinity or -Infinity\\n\\t         * @param {string=} visualCluster Only can be 'color' 'opacity' 'symbol' 'symbolSize'\\n\\t         * @param {Object} [opts]\\n\\t         * @param {string=} [opts.forceState] Specify state, instead of using getValueState method.\\n\\t         * @param {string=} [opts.convertOpacityToAlpha=false] For color gradient in controller widget.\\n\\t         * @return {*} Visual value.\\n\\t         */\\n\\t        getControllerVisual: function (targetValue, visualCluster, opts) {\\n\\t            opts = opts || {};\\n\\n\\t            var forceState = opts.forceState;\\n\\t            var visualMapModel = this.visualMapModel;\\n\\t            var visualObj = {};\\n\\n\\t            // Default values.\\n\\t            if (visualCluster === 'symbol') {\\n\\t                visualObj.symbol = visualMapModel.get('itemSymbol');\\n\\t            }\\n\\t            if (visualCluster === 'color') {\\n\\t                var defaultColor = visualMapModel.get('contentColor');\\n\\t                visualObj.color = defaultColor;\\n\\t            }\\n\\n\\t            function getter(key) {\\n\\t                return visualObj[key];\\n\\t            }\\n\\n\\t            function setter(key, value) {\\n\\t                visualObj[key] = value;\\n\\t            }\\n\\n\\t            var mappings = visualMapModel.controllerVisuals[\\n\\t                forceState || visualMapModel.getValueState(targetValue)\\n\\t            ];\\n\\t            var visualTypes = VisualMapping.prepareVisualTypes(mappings);\\n\\n\\t            zrUtil.each(visualTypes, function (type) {\\n\\t                var visualMapping = mappings[type];\\n\\t                if (opts.convertOpacityToAlpha && type === 'opacity') {\\n\\t                    type = 'colorAlpha';\\n\\t                    visualMapping = mappings.__alphaForOpacity;\\n\\t                }\\n\\t                if (VisualMapping.dependsOn(type, visualCluster)) {\\n\\t                    visualMapping && visualMapping.applyVisual(\\n\\t                        targetValue, getter, setter\\n\\t                    );\\n\\t                }\\n\\t            });\\n\\n\\t            return visualObj[visualCluster];\\n\\t        },\\n\\n\\t        /**\\n\\t         * @protected\\n\\t         */\\n\\t        positionGroup: function (group) {\\n\\t            var model = this.visualMapModel;\\n\\t            var api = this.api;\\n\\n\\t            layout.positionElement(\\n\\t                group,\\n\\t                model.getBoxLayoutParams(),\\n\\t                {width: api.getWidth(), height: api.getHeight()}\\n\\t            );\\n\\t        },\\n\\n\\t        /**\\n\\t         * @protected\\n\\t         * @abstract\\n\\t         */\\n\\t        doRender: zrUtil.noop\\n\\n\\t    });\\n\\n\\n\\n/***/ },\\n/* 386 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var layout = __webpack_require__(71);\\n\\n\\t    var helper = {\\n\\n\\t        /**\\n\\t         * @param {module:echarts/component/visualMap/VisualMapModel} visualMapModel\\\\\\n\\t         * @param {module:echarts/ExtensionAPI} api\\n\\t         * @param {Array.<number>} itemSize always [short, long]\\n\\t         * @return {string} 'left' or 'right' or 'top' or 'bottom'\\n\\t         */\\n\\t        getItemAlign: function (visualMapModel, api, itemSize) {\\n\\t            var modelOption = visualMapModel.option;\\n\\t            var itemAlign = modelOption.align;\\n\\n\\t            if (itemAlign != null && itemAlign !== 'auto') {\\n\\t                return itemAlign;\\n\\t            }\\n\\n\\t            // Auto decision align.\\n\\t            var ecSize = {width: api.getWidth(), height: api.getHeight()};\\n\\t            var realIndex = modelOption.orient === 'horizontal' ? 1 : 0;\\n\\n\\t            var paramsSet = [\\n\\t                ['left', 'right', 'width'],\\n\\t                ['top', 'bottom', 'height']\\n\\t            ];\\n\\t            var reals = paramsSet[realIndex];\\n\\t            var fakeValue = [0, null, 10];\\n\\n\\t            var layoutInput = {};\\n\\t            for (var i = 0; i < 3; i++) {\\n\\t                layoutInput[paramsSet[1 - realIndex][i]] = fakeValue[i];\\n\\t                layoutInput[reals[i]] = i === 2 ? itemSize[0] : modelOption[reals[i]];\\n\\t            }\\n\\n\\t            var rParam = [['x', 'width', 3], ['y', 'height', 0]][realIndex];\\n\\t            var rect = layout.getLayoutRect(layoutInput, ecSize, modelOption.padding);\\n\\n\\t            return reals[\\n\\t                (rect.margin[rParam[2]] || 0) + rect[rParam[0]] + rect[rParam[1]] * 0.5\\n\\t                    < ecSize[rParam[1]] * 0.5 ? 0 : 1\\n\\t            ];\\n\\t        },\\n\\n\\t        /**\\n\\t         * Prepare dataIndex for outside usage, where dataIndex means rawIndex, and\\n\\t         * dataIndexInside means filtered index.\\n\\t         */\\n\\t        convertDataIndex: function (batch) {\\n\\t            zrUtil.each(batch || [], function (batchItem) {\\n\\t                if (batch.dataIndex != null) {\\n\\t                    batch.dataIndexInside = batch.dataIndex;\\n\\t                    batch.dataIndex = null;\\n\\t                }\\n\\t            });\\n\\t            return batch;\\n\\t        }\\n\\n\\t    };\\n\\n\\n\\t    module.exports = helper;\\n\\n\\n\\n/***/ },\\n/* 387 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * @file Data range action\\n\\t */\\n\\n\\n\\t    var echarts = __webpack_require__(1);\\n\\n\\t    var actionInfo = {\\n\\t        type: 'selectDataRange',\\n\\t        event: 'dataRangeSelected',\\n\\t        // FIXME use updateView appears wrong\\n\\t        update: 'update'\\n\\t    };\\n\\n\\t    echarts.registerAction(actionInfo, function (payload, ecModel) {\\n\\n\\t        ecModel.eachComponent({mainType: 'visualMap', query: payload}, function (model) {\\n\\t            model.setSelected(payload.selected);\\n\\t        });\\n\\n\\t    });\\n\\n\\n\\n/***/ },\\n/* 388 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * DataZoom component entry\\n\\t */\\n\\n\\n\\t    __webpack_require__(1).registerPreprocessor(\\n\\t        __webpack_require__(378)\\n\\t    );\\n\\n\\t    __webpack_require__(379);\\n\\t    __webpack_require__(380);\\n\\t    __webpack_require__(389);\\n\\t    __webpack_require__(390);\\n\\t    __webpack_require__(387);\\n\\n\\n\\n/***/ },\\n/* 389 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var VisualMapModel = __webpack_require__(382);\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var VisualMapping = __webpack_require__(203);\\n\\t    var visualDefault = __webpack_require__(383);\\n\\t    var reformIntervals = __webpack_require__(7).reformIntervals;\\n\\n\\t    var PiecewiseModel = VisualMapModel.extend({\\n\\n\\t        type: 'visualMap.piecewise',\\n\\n\\t        /**\\n\\t         * Order Rule:\\n\\t         *\\n\\t         * option.categories / option.pieces / option.text / option.selected:\\n\\t         *     If !option.inverse,\\n\\t         *     Order when vertical: ['top', ..., 'bottom'].\\n\\t         *     Order when horizontal: ['left', ..., 'right'].\\n\\t         *     If option.inverse, the meaning of\\n\\t         *     the order should be reversed.\\n\\t         *\\n\\t         * this._pieceList:\\n\\t         *     The order is always [low, ..., high].\\n\\t         *\\n\\t         * Mapping from location to low-high:\\n\\t         *     If !option.inverse\\n\\t         *     When vertical, top is high.\\n\\t         *     When horizontal, right is high.\\n\\t         *     If option.inverse, reverse.\\n\\t         */\\n\\n\\t        /**\\n\\t         * @protected\\n\\t         */\\n\\t        defaultOption: {\\n\\t            selected: null,             // Object. If not specified, means selected.\\n\\t                                        // When pieces and splitNumber: {'0': true, '5': true}\\n\\t                                        // When categories: {'cate1': false, 'cate3': true}\\n\\t                                        // When selected === false, means all unselected.\\n\\n\\t            minOpen: false,             // Whether include values that smaller than `min`.\\n\\t            maxOpen: false,             // Whether include values that bigger than `max`.\\n\\n\\t            align: 'auto',              // 'auto', 'left', 'right'\\n\\t            itemWidth: 20,              // When put the controller vertically, it is the length of\\n\\t                                        // horizontal side of each item. Otherwise, vertical side.\\n\\t            itemHeight: 14,             // When put the controller vertically, it is the length of\\n\\t                                        // vertical side of each item. Otherwise, horizontal side.\\n\\t            itemSymbol: 'roundRect',\\n\\t            pieceList: null,            // Each item is Object, with some of those attrs:\\n\\t                                        // {min, max, lt, gt, lte, gte, value,\\n\\t                                        // color, colorSaturation, colorAlpha, opacity,\\n\\t                                        // symbol, symbolSize}, which customize the range or visual\\n\\t                                        // coding of the certain piece. Besides, see \\\"Order Rule\\\".\\n\\t            categories: null,           // category names, like: ['some1', 'some2', 'some3'].\\n\\t                                        // Attr min/max are ignored when categories set. See \\\"Order Rule\\\"\\n\\t            splitNumber: 5,             // If set to 5, auto split five pieces equally.\\n\\t                                        // If set to 0 and component type not set, component type will be\\n\\t                                        // determined as \\\"continuous\\\". (It is less reasonable but for ec2\\n\\t                                        // compatibility, see echarts/component/visualMap/typeDefaulter)\\n\\t            selectedMode: 'multiple',   // Can be 'multiple' or 'single'.\\n\\t            itemGap: 10,                // The gap between two items, in px.\\n\\t            hoverLink: true,            // Enable hover highlight.\\n\\n\\t            showLabel: null             // By default, when text is used, label will hide (the logic\\n\\t                                        // is remained for compatibility reason)\\n\\t        },\\n\\n\\t        /**\\n\\t         * @override\\n\\t         */\\n\\t        optionUpdated: function (newOption, isInit) {\\n\\t            PiecewiseModel.superApply(this, 'optionUpdated', arguments);\\n\\n\\t            /**\\n\\t             * The order is always [low, ..., high].\\n\\t             * [{text: string, interval: Array.<number>}, ...]\\n\\t             * @private\\n\\t             * @type {Array.<Object>}\\n\\t             */\\n\\t            this._pieceList = [];\\n\\n\\t            this.resetTargetSeries();\\n\\t            this.resetExtent();\\n\\n\\t            /**\\n\\t             * 'pieces', 'categories', 'splitNumber'\\n\\t             * @type {string}\\n\\t             */\\n\\t            var mode = this._mode = this._determineMode();\\n\\n\\t            resetMethods[this._mode].call(this);\\n\\n\\t            this._resetSelected(newOption, isInit);\\n\\n\\t            var categories = this.option.categories;\\n\\n\\t            this.resetVisual(function (mappingOption, state) {\\n\\t                if (mode === 'categories') {\\n\\t                    mappingOption.mappingMethod = 'category';\\n\\t                    mappingOption.categories = zrUtil.clone(categories);\\n\\t                }\\n\\t                else {\\n\\t                    mappingOption.dataExtent = this.getExtent();\\n\\t                    mappingOption.mappingMethod = 'piecewise';\\n\\t                    mappingOption.pieceList = zrUtil.map(this._pieceList, function (piece) {\\n\\t                        var piece = zrUtil.clone(piece);\\n\\t                        if (state !== 'inRange') {\\n\\t                            // FIXME\\n\\t                            // outOfRange do not support special visual in pieces.\\n\\t                            piece.visual = null;\\n\\t                        }\\n\\t                        return piece;\\n\\t                    });\\n\\t                }\\n\\t            });\\n\\t        },\\n\\n\\t        /**\\n\\t         * @protected\\n\\t         * @override\\n\\t         */\\n\\t        completeVisualOption: function () {\\n\\t            // Consider this case:\\n\\t            // visualMap: {\\n\\t            //      pieces: [{symbol: 'circle', lt: 0}, {symbol: 'rect', gte: 0}]\\n\\t            // }\\n\\t            // where no inRange/outOfRange set but only pieces. So we should make\\n\\t            // default inRange/outOfRange for this case, otherwise visuals that only\\n\\t            // appear in `pieces` will not be taken into account in visual encoding.\\n\\n\\t            var option = this.option;\\n\\t            var visualTypesInPieces = {};\\n\\t            var visualTypes = VisualMapping.listVisualTypes();\\n\\t            var isCategory = this.isCategory();\\n\\n\\t            zrUtil.each(option.pieces, function (piece) {\\n\\t                zrUtil.each(visualTypes, function (visualType) {\\n\\t                    if (piece.hasOwnProperty(visualType)) {\\n\\t                        visualTypesInPieces[visualType] = 1;\\n\\t                    }\\n\\t                });\\n\\t            });\\n\\n\\t            zrUtil.each(visualTypesInPieces, function (v, visualType) {\\n\\t                var exists = 0;\\n\\t                zrUtil.each(this.stateList, function (state) {\\n\\t                    exists |= has(option, state, visualType)\\n\\t                        || has(option.target, state, visualType);\\n\\t                }, this);\\n\\n\\t                !exists && zrUtil.each(this.stateList, function (state) {\\n\\t                    (option[state] || (option[state] = {}))[visualType] = visualDefault.get(\\n\\t                        visualType, state === 'inRange' ? 'active' : 'inactive', isCategory\\n\\t                    );\\n\\t                });\\n\\t            }, this);\\n\\n\\t            function has(obj, state, visualType) {\\n\\t                return obj && obj[state] && (\\n\\t                    zrUtil.isObject(obj[state])\\n\\t                        ? obj[state].hasOwnProperty(visualType)\\n\\t                        : obj[state] === visualType // e.g., inRange: 'symbol'\\n\\t                );\\n\\t            }\\n\\n\\t            VisualMapModel.prototype.completeVisualOption.apply(this, arguments);\\n\\t        },\\n\\n\\t        _resetSelected: function (newOption, isInit) {\\n\\t            var thisOption = this.option;\\n\\t            var pieceList = this._pieceList;\\n\\n\\t            // Selected do not merge but all override.\\n\\t            var selected = (isInit ? thisOption : newOption).selected || {};\\n\\t            thisOption.selected = selected;\\n\\n\\t            // Consider 'not specified' means true.\\n\\t            zrUtil.each(pieceList, function (piece, index) {\\n\\t                var key = this.getSelectedMapKey(piece);\\n\\t                if (!selected.hasOwnProperty(key)) {\\n\\t                    selected[key] = true;\\n\\t                }\\n\\t            }, this);\\n\\n\\t            if (thisOption.selectedMode === 'single') {\\n\\t                // Ensure there is only one selected.\\n\\t                var hasSel = false;\\n\\n\\t                zrUtil.each(pieceList, function (piece, index) {\\n\\t                    var key = this.getSelectedMapKey(piece);\\n\\t                    if (selected[key]) {\\n\\t                        hasSel\\n\\t                            ? (selected[key] = false)\\n\\t                            : (hasSel = true);\\n\\t                    }\\n\\t                }, this);\\n\\t            }\\n\\t            // thisOption.selectedMode === 'multiple', default: all selected.\\n\\t        },\\n\\n\\t        /**\\n\\t         * @public\\n\\t         */\\n\\t        getSelectedMapKey: function (piece) {\\n\\t            return this._mode === 'categories'\\n\\t                ? piece.value + '' : piece.index + '';\\n\\t        },\\n\\n\\t        /**\\n\\t         * @public\\n\\t         */\\n\\t        getPieceList: function () {\\n\\t            return this._pieceList;\\n\\t        },\\n\\n\\t        /**\\n\\t         * @private\\n\\t         * @return {string}\\n\\t         */\\n\\t        _determineMode: function () {\\n\\t            var option = this.option;\\n\\n\\t            return option.pieces && option.pieces.length > 0\\n\\t                ? 'pieces'\\n\\t                : this.option.categories\\n\\t                ? 'categories'\\n\\t                : 'splitNumber';\\n\\t        },\\n\\n\\t        /**\\n\\t         * @public\\n\\t         * @override\\n\\t         */\\n\\t        setSelected: function (selected) {\\n\\t            this.option.selected = zrUtil.clone(selected);\\n\\t        },\\n\\n\\t        /**\\n\\t         * @public\\n\\t         * @override\\n\\t         */\\n\\t        getValueState: function (value) {\\n\\t            var index = VisualMapping.findPieceIndex(value, this._pieceList);\\n\\n\\t            return index != null\\n\\t                ? (this.option.selected[this.getSelectedMapKey(this._pieceList[index])]\\n\\t                    ? 'inRange' : 'outOfRange'\\n\\t                )\\n\\t                : 'outOfRange';\\n\\t        },\\n\\n\\t        /**\\n\\t         * @public\\n\\t         * @params {number} pieceIndex piece index in visualMapModel.getPieceList()\\n\\t         * @return {Array.<Object>} [{seriesId, dataIndices: <Array.<number>>}, ...]\\n\\t         */\\n\\t        findTargetDataIndices: function (pieceIndex) {\\n\\t            var result = [];\\n\\n\\t            this.eachTargetSeries(function (seriesModel) {\\n\\t                var dataIndices = [];\\n\\t                var data = seriesModel.getData();\\n\\n\\t                data.each(this.getDataDimension(data), function (value, dataIndex) {\\n\\t                    // Should always base on model pieceList, because it is order sensitive.\\n\\t                    var pIdx = VisualMapping.findPieceIndex(value, this._pieceList);\\n\\t                    pIdx === pieceIndex && dataIndices.push(dataIndex);\\n\\t                }, true, this);\\n\\n\\t                result.push({seriesId: seriesModel.id, dataIndex: dataIndices});\\n\\t            }, this);\\n\\n\\t            return result;\\n\\t        },\\n\\n\\t        /**\\n\\t         * @private\\n\\t         * @param {Object} piece piece.value or piece.interval is required.\\n\\t         * @return {number} Can be Infinity or -Infinity\\n\\t         */\\n\\t        getRepresentValue: function (piece) {\\n\\t            var representValue;\\n\\t            if (this.isCategory()) {\\n\\t                representValue = piece.value;\\n\\t            }\\n\\t            else {\\n\\t                if (piece.value != null) {\\n\\t                    representValue = piece.value;\\n\\t                }\\n\\t                else {\\n\\t                    var pieceInterval = piece.interval || [];\\n\\t                    representValue = (pieceInterval[0] === -Infinity && pieceInterval[1] === Infinity)\\n\\t                        ? 0\\n\\t                        : (pieceInterval[0] + pieceInterval[1]) / 2;\\n\\t                }\\n\\t            }\\n\\t            return representValue;\\n\\t        },\\n\\n\\t        getVisualMeta: function (getColorVisual) {\\n\\t            // Do not support category. (category axis is ordinal, numerical)\\n\\t            if (this.isCategory()) {\\n\\t                return;\\n\\t            }\\n\\n\\t            var stops = [];\\n\\t            var outerColors = [];\\n\\t            var visualMapModel = this;\\n\\n\\t            function setStop(interval, valueState) {\\n\\t                var representValue = visualMapModel.getRepresentValue({interval: interval});\\n\\t                if (!valueState) {\\n\\t                    valueState = visualMapModel.getValueState(representValue);\\n\\t                }\\n\\t                var color = getColorVisual(representValue, valueState);\\n\\t                if (interval[0] === -Infinity) {\\n\\t                    outerColors[0] = color;\\n\\t                }\\n\\t                else if (interval[1] === Infinity) {\\n\\t                    outerColors[1] = color;\\n\\t                }\\n\\t                else {\\n\\t                    stops.push(\\n\\t                        {value: interval[0], color: color},\\n\\t                        {value: interval[1], color: color}\\n\\t                    );\\n\\t                }\\n\\t            }\\n\\n\\t            // Suplement\\n\\t            var pieceList = this._pieceList.slice();\\n\\t            if (!pieceList.length) {\\n\\t                pieceList.push({interval: [-Infinity, Infinity]});\\n\\t            }\\n\\t            else {\\n\\t                var edge = pieceList[0].interval[0];\\n\\t                edge !== -Infinity && pieceList.unshift({interval: [-Infinity, edge]});\\n\\t                edge = pieceList[pieceList.length - 1].interval[1];\\n\\t                edge !== Infinity && pieceList.push({interval: [edge, Infinity]});\\n\\t            }\\n\\n\\t            var curr = -Infinity;\\n\\t            zrUtil.each(pieceList, function (piece) {\\n\\t                var interval = piece.interval;\\n\\t                if (interval) {\\n\\t                    // Fulfill gap.\\n\\t                    interval[0] > curr && setStop([curr, interval[0]], 'outOfRange');\\n\\t                    setStop(interval.slice());\\n\\t                    curr = interval[1];\\n\\t                }\\n\\t            }, this);\\n\\n\\t            return {stops: stops, outerColors: outerColors};\\n\\t        }\\n\\n\\t    });\\n\\n\\t    /**\\n\\t     * Key is this._mode\\n\\t     * @type {Object}\\n\\t     * @this {module:echarts/component/viusalMap/PiecewiseMode}\\n\\t     */\\n\\t    var resetMethods = {\\n\\n\\t        splitNumber: function () {\\n\\t            var thisOption = this.option;\\n\\t            var pieceList = this._pieceList;\\n\\t            var precision = thisOption.precision;\\n\\t            var dataExtent = this.getExtent();\\n\\t            var splitNumber = thisOption.splitNumber;\\n\\t            splitNumber = Math.max(parseInt(splitNumber, 10), 1);\\n\\t            thisOption.splitNumber = splitNumber;\\n\\n\\t            var splitStep = (dataExtent[1] - dataExtent[0]) / splitNumber;\\n\\t            // Precision auto-adaption\\n\\t            while (+splitStep.toFixed(precision) !== splitStep && precision < 5) {\\n\\t                precision++;\\n\\t            }\\n\\t            thisOption.precision = precision;\\n\\t            splitStep = +splitStep.toFixed(precision);\\n\\n\\t            var index = 0;\\n\\n\\t            if (thisOption.minOpen) {\\n\\t                pieceList.push({\\n\\t                    index: index++,\\n\\t                    interval: [-Infinity, dataExtent[0]],\\n\\t                    close: [0, 0]\\n\\t                });\\n\\t            }\\n\\n\\t            for (\\n\\t                var curr = dataExtent[0], len = index + splitNumber;\\n\\t                index < len;\\n\\t                curr += splitStep\\n\\t            ) {\\n\\t                var max = index === splitNumber - 1 ? dataExtent[1] : (curr + splitStep);\\n\\n\\t                pieceList.push({\\n\\t                    index: index++,\\n\\t                    interval: [curr, max],\\n\\t                    close: [1, 1]\\n\\t                });\\n\\t            }\\n\\n\\t            if (thisOption.maxOpen) {\\n\\t                pieceList.push({\\n\\t                    index: index++,\\n\\t                    interval: [dataExtent[1], Infinity],\\n\\t                    close: [0, 0]\\n\\t                });\\n\\t            }\\n\\n\\t            reformIntervals(pieceList);\\n\\n\\t            zrUtil.each(pieceList, function (piece) {\\n\\t                piece.text = this.formatValueText(piece.interval);\\n\\t            }, this);\\n\\t        },\\n\\n\\t        categories: function () {\\n\\t            var thisOption = this.option;\\n\\t            zrUtil.each(thisOption.categories, function (cate) {\\n\\t                // FIXME category模式也使用pieceList，但在visualMapping中不是使用pieceList。\\n\\t                // 是否改一致。\\n\\t                this._pieceList.push({\\n\\t                    text: this.formatValueText(cate, true),\\n\\t                    value: cate\\n\\t                });\\n\\t            }, this);\\n\\n\\t            // See \\\"Order Rule\\\".\\n\\t            normalizeReverse(thisOption, this._pieceList);\\n\\t        },\\n\\n\\t        pieces: function () {\\n\\t            var thisOption = this.option;\\n\\t            var pieceList = this._pieceList;\\n\\n\\t            zrUtil.each(thisOption.pieces, function (pieceListItem, index) {\\n\\n\\t                if (!zrUtil.isObject(pieceListItem)) {\\n\\t                    pieceListItem = {value: pieceListItem};\\n\\t                }\\n\\n\\t                var item = {text: '', index: index};\\n\\n\\t                if (pieceListItem.label != null) {\\n\\t                    item.text = pieceListItem.label;\\n\\t                }\\n\\n\\t                if (pieceListItem.hasOwnProperty('value')) {\\n\\t                    var value = item.value = pieceListItem.value;\\n\\t                    item.interval = [value, value];\\n\\t                    item.close = [1, 1];\\n\\t                }\\n\\t                else {\\n\\t                    // `min` `max` is legacy option.\\n\\t                    // `lt` `gt` `lte` `gte` is recommanded.\\n\\t                    var interval = item.interval = [];\\n\\t                    var close = item.close = [0, 0];\\n\\n\\t                    var closeList = [1, 0, 1];\\n\\t                    var infinityList = [-Infinity, Infinity];\\n\\n\\t                    var useMinMax = [];\\n\\t                    for (var lg = 0; lg < 2; lg++) {\\n\\t                        var names = [['gte', 'gt', 'min'], ['lte', 'lt', 'max']][lg];\\n\\t                        for (var i = 0; i < 3 && interval[lg] == null; i++) {\\n\\t                            interval[lg] = pieceListItem[names[i]];\\n\\t                            close[lg] = closeList[i];\\n\\t                            useMinMax[lg] = i === 2;\\n\\t                        }\\n\\t                        interval[lg] == null && (interval[lg] = infinityList[lg]);\\n\\t                    }\\n\\t                    useMinMax[0] && interval[1] === Infinity && (close[0] = 0);\\n\\t                    useMinMax[1] && interval[0] === -Infinity && (close[1] = 0);\\n\\n\\t                    if (true) {\\n\\t                        if (interval[0] > interval[1]) {\\n\\t                            console.warn(\\n\\t                                'Piece ' + index + 'is illegal: ' + interval\\n\\t                                + ' lower bound should not greater then uppper bound.'\\n\\t                            );\\n\\t                        }\\n\\t                    }\\n\\n\\t                    if (interval[0] === interval[1] && close[0] && close[1]) {\\n\\t                        // Consider: [{min: 5, max: 5, visual: {...}}, {min: 0, max: 5}],\\n\\t                        // we use value to lift the priority when min === max\\n\\t                        item.value = interval[0];\\n\\t                    }\\n\\t                }\\n\\n\\t                item.visual = VisualMapping.retrieveVisuals(pieceListItem);\\n\\n\\t                pieceList.push(item);\\n\\n\\t            }, this);\\n\\n\\t            // See \\\"Order Rule\\\".\\n\\t            normalizeReverse(thisOption, pieceList);\\n\\t            // Only pieces\\n\\t            reformIntervals(pieceList);\\n\\n\\t            zrUtil.each(pieceList, function (piece) {\\n\\t                var close = piece.close;\\n\\t                var edgeSymbols = [['<', '≤'][close[1]], ['>', '≥'][close[0]]];\\n\\t                piece.text = piece.text || this.formatValueText(\\n\\t                    piece.value != null ? piece.value : piece.interval,\\n\\t                    false,\\n\\t                    edgeSymbols\\n\\t                );\\n\\t            }, this);\\n\\t        }\\n\\t    };\\n\\n\\t    function normalizeReverse(thisOption, pieceList) {\\n\\t        var inverse = thisOption.inverse;\\n\\t        if (thisOption.orient === 'vertical' ? !inverse : inverse) {\\n\\t             pieceList.reverse();\\n\\t        }\\n\\t    }\\n\\n\\t    module.exports = PiecewiseModel;\\n\\n\\n/***/ },\\n/* 390 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var VisualMapView = __webpack_require__(385);\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var graphic = __webpack_require__(18);\\n\\t    var symbolCreators = __webpack_require__(111);\\n\\t    var layout = __webpack_require__(71);\\n\\t    var helper = __webpack_require__(386);\\n\\n\\t    var PiecewiseVisualMapView = VisualMapView.extend({\\n\\n\\t        type: 'visualMap.piecewise',\\n\\n\\t        /**\\n\\t         * @protected\\n\\t         * @override\\n\\t         */\\n\\t        doRender: function () {\\n\\t            var thisGroup = this.group;\\n\\n\\t            thisGroup.removeAll();\\n\\n\\t            var visualMapModel = this.visualMapModel;\\n\\t            var textGap = visualMapModel.get('textGap');\\n\\t            var textStyleModel = visualMapModel.textStyleModel;\\n\\t            var textFont = textStyleModel.getFont();\\n\\t            var textFill = textStyleModel.getTextColor();\\n\\t            var itemAlign = this._getItemAlign();\\n\\t            var itemSize = visualMapModel.itemSize;\\n\\t            var viewData = this._getViewData();\\n\\t            var endsText = viewData.endsText;\\n\\t            var showLabel = zrUtil.retrieve(visualMapModel.get('showLabel', true), !endsText);\\n\\n\\t            endsText && this._renderEndsText(\\n\\t                thisGroup, endsText[0], itemSize, showLabel, itemAlign\\n\\t            );\\n\\n\\t            zrUtil.each(viewData.viewPieceList, renderItem, this);\\n\\n\\t            endsText && this._renderEndsText(\\n\\t                thisGroup, endsText[1], itemSize, showLabel, itemAlign\\n\\t            );\\n\\n\\t            layout.box(\\n\\t                visualMapModel.get('orient'), thisGroup, visualMapModel.get('itemGap')\\n\\t            );\\n\\n\\t            this.renderBackground(thisGroup);\\n\\n\\t            this.positionGroup(thisGroup);\\n\\n\\t            function renderItem(item) {\\n\\t                var piece = item.piece;\\n\\n\\t                var itemGroup = new graphic.Group();\\n\\t                itemGroup.onclick = zrUtil.bind(this._onItemClick, this, piece);\\n\\n\\t                this._enableHoverLink(itemGroup, item.indexInModelPieceList);\\n\\n\\t                var representValue = visualMapModel.getRepresentValue(piece);\\n\\n\\t                this._createItemSymbol(\\n\\t                    itemGroup, representValue, [0, 0, itemSize[0], itemSize[1]]\\n\\t                );\\n\\n\\t                if (showLabel) {\\n\\t                    var visualState = this.visualMapModel.getValueState(representValue);\\n\\n\\t                    itemGroup.add(new graphic.Text({\\n\\t                        style: {\\n\\t                            x: itemAlign === 'right' ? -textGap : itemSize[0] + textGap,\\n\\t                            y: itemSize[1] / 2,\\n\\t                            text: piece.text,\\n\\t                            textVerticalAlign: 'middle',\\n\\t                            textAlign: itemAlign,\\n\\t                            textFont: textFont,\\n\\t                            fill: textFill,\\n\\t                            opacity: visualState === 'outOfRange' ? 0.5 : 1\\n\\t                        }\\n\\t                    }));\\n\\t                }\\n\\n\\t                thisGroup.add(itemGroup);\\n\\t            }\\n\\t        },\\n\\n\\t        /**\\n\\t         * @private\\n\\t         */\\n\\t        _enableHoverLink: function (itemGroup, pieceIndex) {\\n\\t            itemGroup\\n\\t                .on('mouseover', zrUtil.bind(onHoverLink, this, 'highlight'))\\n\\t                .on('mouseout', zrUtil.bind(onHoverLink, this, 'downplay'));\\n\\n\\t            function onHoverLink(method) {\\n\\t                var visualMapModel = this.visualMapModel;\\n\\n\\t                visualMapModel.option.hoverLink && this.api.dispatchAction({\\n\\t                    type: method,\\n\\t                    batch: helper.convertDataIndex(\\n\\t                        visualMapModel.findTargetDataIndices(pieceIndex)\\n\\t                    )\\n\\t                });\\n\\t            }\\n\\t        },\\n\\n\\t        /**\\n\\t         * @private\\n\\t         */\\n\\t        _getItemAlign: function () {\\n\\t            var visualMapModel = this.visualMapModel;\\n\\t            var modelOption = visualMapModel.option;\\n\\n\\t            if (modelOption.orient === 'vertical') {\\n\\t                return helper.getItemAlign(\\n\\t                    visualMapModel, this.api, visualMapModel.itemSize\\n\\t                );\\n\\t            }\\n\\t            else { // horizontal, most case left unless specifying right.\\n\\t                var align = modelOption.align;\\n\\t                if (!align || align === 'auto') {\\n\\t                    align = 'left';\\n\\t                }\\n\\t                return align;\\n\\t            }\\n\\t        },\\n\\n\\t        /**\\n\\t         * @private\\n\\t         */\\n\\t        _renderEndsText: function (group, text, itemSize, showLabel, itemAlign) {\\n\\t            if (!text) {\\n\\t                return;\\n\\t            }\\n\\n\\t            var itemGroup = new graphic.Group();\\n\\t            var textStyleModel = this.visualMapModel.textStyleModel;\\n\\n\\t            itemGroup.add(new graphic.Text({\\n\\t                style: {\\n\\t                    x: showLabel ? (itemAlign === 'right' ? itemSize[0] : 0) : itemSize[0] / 2,\\n\\t                    y: itemSize[1] / 2,\\n\\t                    textVerticalAlign: 'middle',\\n\\t                    textAlign: showLabel ? itemAlign : 'center',\\n\\t                    text: text,\\n\\t                    textFont: textStyleModel.getFont(),\\n\\t                    fill: textStyleModel.getTextColor()\\n\\t                }\\n\\t            }));\\n\\n\\t            group.add(itemGroup);\\n\\t        },\\n\\n\\t        /**\\n\\t         * @private\\n\\t         * @return {Object} {peiceList, endsText} The order is the same as screen pixel order.\\n\\t         */\\n\\t        _getViewData: function () {\\n\\t            var visualMapModel = this.visualMapModel;\\n\\n\\t            var viewPieceList = zrUtil.map(visualMapModel.getPieceList(), function (piece, index) {\\n\\t                return {piece: piece, indexInModelPieceList: index};\\n\\t            });\\n\\t            var endsText = visualMapModel.get('text');\\n\\n\\t            // Consider orient and inverse.\\n\\t            var orient = visualMapModel.get('orient');\\n\\t            var inverse = visualMapModel.get('inverse');\\n\\n\\t            // Order of model pieceList is always [low, ..., high]\\n\\t            if (orient === 'horizontal' ? inverse : !inverse) {\\n\\t                viewPieceList.reverse();\\n\\t            }\\n\\t            // Origin order of endsText is [high, low]\\n\\t            else if (endsText) {\\n\\t                endsText = endsText.slice().reverse();\\n\\t            }\\n\\n\\t            return {viewPieceList: viewPieceList, endsText: endsText};\\n\\t        },\\n\\n\\t        /**\\n\\t         * @private\\n\\t         */\\n\\t        _createItemSymbol: function (group, representValue, shapeParam) {\\n\\t            group.add(symbolCreators.createSymbol(\\n\\t                this.getControllerVisual(representValue, 'symbol'),\\n\\t                shapeParam[0], shapeParam[1], shapeParam[2], shapeParam[3],\\n\\t                this.getControllerVisual(representValue, 'color')\\n\\t            ));\\n\\t        },\\n\\n\\t        /**\\n\\t         * @private\\n\\t         */\\n\\t        _onItemClick: function (piece) {\\n\\t            var visualMapModel = this.visualMapModel;\\n\\t            var option = visualMapModel.option;\\n\\t            var selected = zrUtil.clone(option.selected);\\n\\t            var newKey = visualMapModel.getSelectedMapKey(piece);\\n\\n\\t            if (option.selectedMode === 'single') {\\n\\t                selected[newKey] = true;\\n\\t                zrUtil.each(selected, function (o, key) {\\n\\t                    selected[key] = key === newKey;\\n\\t                });\\n\\t            }\\n\\t            else {\\n\\t                selected[newKey] = !selected[newKey];\\n\\t            }\\n\\n\\t            this.api.dispatchAction({\\n\\t                type: 'selectDataRange',\\n\\t                from: this.uid,\\n\\t                visualMapId: this.visualMapModel.id,\\n\\t                selected: selected\\n\\t            });\\n\\t        }\\n\\t    });\\n\\n\\t    module.exports = PiecewiseVisualMapView;\\n\\n\\n\\n/***/ },\\n/* 391 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t// HINT Markpoint can't be used too much\\n\\n\\n\\t    __webpack_require__(392);\\n\\t    __webpack_require__(394);\\n\\n\\t    __webpack_require__(1).registerPreprocessor(function (opt) {\\n\\t        // Make sure markPoint component is enabled\\n\\t        opt.markPoint = opt.markPoint || {};\\n\\t    });\\n\\n\\n/***/ },\\n/* 392 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    module.exports = __webpack_require__(393).extend({\\n\\n\\t        type: 'markPoint',\\n\\n\\t        defaultOption: {\\n\\t            zlevel: 0,\\n\\t            z: 5,\\n\\t            symbol: 'pin',\\n\\t            symbolSize: 50,\\n\\t            //symbolRotate: 0,\\n\\t            //symbolOffset: [0, 0]\\n\\t            tooltip: {\\n\\t                trigger: 'item'\\n\\t            },\\n\\t            label: {\\n\\t                normal: {\\n\\t                    show: true,\\n\\t                    position: 'inside'\\n\\t                },\\n\\t                emphasis: {\\n\\t                    show: true\\n\\t                }\\n\\t            },\\n\\t            itemStyle: {\\n\\t                normal: {\\n\\t                    borderWidth: 2\\n\\t                }\\n\\t            }\\n\\t        }\\n\\t    });\\n\\n\\n/***/ },\\n/* 393 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var modelUtil = __webpack_require__(5);\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var env = __webpack_require__(2);\\n\\n\\t    var formatUtil = __webpack_require__(6);\\n\\t    var addCommas = formatUtil.addCommas;\\n\\t    var encodeHTML = formatUtil.encodeHTML;\\n\\n\\t    function fillLabel(opt) {\\n\\t        modelUtil.defaultEmphasis(\\n\\t            opt.label,\\n\\t            modelUtil.LABEL_OPTIONS\\n\\t        );\\n\\t    }\\n\\t    var MarkerModel = __webpack_require__(1).extendComponentModel({\\n\\n\\t        type: 'marker',\\n\\n\\t        dependencies: ['series', 'grid', 'polar', 'geo'],\\n\\t        /**\\n\\t         * @overrite\\n\\t         */\\n\\t        init: function (option, parentModel, ecModel, extraOpt) {\\n\\n\\t            if (true) {\\n\\t                if (this.type === 'marker') {\\n\\t                    throw new Error('Marker component is abstract component. Use markLine, markPoint, markArea instead.');\\n\\t                }\\n\\t            }\\n\\t            this.mergeDefaultAndTheme(option, ecModel);\\n\\t            this.mergeOption(option, ecModel, extraOpt.createdBySelf, true);\\n\\t        },\\n\\n\\t        /**\\n\\t         * @return {boolean}\\n\\t         */\\n\\t        isAnimationEnabled: function () {\\n\\t            if (env.node) {\\n\\t                return false;\\n\\t            }\\n\\n\\t            var hostSeries = this.__hostSeries;\\n\\t            return this.getShallow('animation') && hostSeries && hostSeries.isAnimationEnabled();\\n\\t        },\\n\\n\\t        mergeOption: function (newOpt, ecModel, createdBySelf, isInit) {\\n\\t            var MarkerModel = this.constructor;\\n\\t            var modelPropName = this.mainType + 'Model';\\n\\t            if (!createdBySelf) {\\n\\t                ecModel.eachSeries(function (seriesModel) {\\n\\n\\t                    var markerOpt = seriesModel.get(this.mainType);\\n\\n\\t                    var markerModel = seriesModel[modelPropName];\\n\\t                    if (!markerOpt || !markerOpt.data) {\\n\\t                        seriesModel[modelPropName] = null;\\n\\t                        return;\\n\\t                    }\\n\\t                    if (!markerModel) {\\n\\t                        if (isInit) {\\n\\t                            // Default label emphasis `position` and `show`\\n\\t                            fillLabel(markerOpt);\\n\\t                        }\\n\\t                        zrUtil.each(markerOpt.data, function (item) {\\n\\t                            // FIXME Overwrite fillLabel method ?\\n\\t                            if (item instanceof Array) {\\n\\t                                fillLabel(item[0]);\\n\\t                                fillLabel(item[1]);\\n\\t                            }\\n\\t                            else {\\n\\t                                fillLabel(item);\\n\\t                            }\\n\\t                        });\\n\\n\\t                        markerModel = new MarkerModel(\\n\\t                            markerOpt, this, ecModel\\n\\t                        );\\n\\n\\t                        zrUtil.extend(markerModel, {\\n\\t                            mainType: this.mainType,\\n\\t                            // Use the same series index and name\\n\\t                            seriesIndex: seriesModel.seriesIndex,\\n\\t                            name: seriesModel.name,\\n\\t                            createdBySelf: true\\n\\t                        });\\n\\n\\t                        markerModel.__hostSeries = seriesModel;\\n\\t                    }\\n\\t                    else {\\n\\t                        markerModel.mergeOption(markerOpt, ecModel, true);\\n\\t                    }\\n\\t                    seriesModel[modelPropName] = markerModel;\\n\\t                }, this);\\n\\t            }\\n\\t        },\\n\\n\\t        formatTooltip: function (dataIndex) {\\n\\t            var data = this.getData();\\n\\t            var value = this.getRawValue(dataIndex);\\n\\t            var formattedValue = zrUtil.isArray(value)\\n\\t                ? zrUtil.map(value, addCommas).join(', ') : addCommas(value);\\n\\t            var name = data.getName(dataIndex);\\n\\t            var html = encodeHTML(this.name);\\n\\t            if (value != null || name) {\\n\\t                html += '<br />';\\n\\t            }\\n\\t            if (name) {\\n\\t                html += encodeHTML(name);\\n\\t                if (value != null) {\\n\\t                    html += ' : ';\\n\\t                }\\n\\t            }\\n\\t            if (value != null) {\\n\\t                html += encodeHTML(formattedValue);\\n\\t            }\\n\\t            return html;\\n\\t        },\\n\\n\\t        getData: function () {\\n\\t            return this._data;\\n\\t        },\\n\\n\\t        setData: function (data) {\\n\\t            this._data = data;\\n\\t        }\\n\\t    });\\n\\n\\t    zrUtil.mixin(MarkerModel, modelUtil.dataFormatMixin);\\n\\n\\t    module.exports = MarkerModel;\\n\\n\\n/***/ },\\n/* 394 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var SymbolDraw = __webpack_require__(116);\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var numberUtil = __webpack_require__(7);\\n\\n\\t    var List = __webpack_require__(98);\\n\\n\\t    var markerHelper = __webpack_require__(395);\\n\\n\\t    function updateMarkerLayout(mpData, seriesModel, api) {\\n\\t        var coordSys = seriesModel.coordinateSystem;\\n\\t        mpData.each(function (idx) {\\n\\t            var itemModel = mpData.getItemModel(idx);\\n\\t            var point;\\n\\t            var xPx = numberUtil.parsePercent(itemModel.get('x'), api.getWidth());\\n\\t            var yPx = numberUtil.parsePercent(itemModel.get('y'), api.getHeight());\\n\\t            if (!isNaN(xPx) && !isNaN(yPx)) {\\n\\t                point = [xPx, yPx];\\n\\t            }\\n\\t            // Chart like bar may have there own marker positioning logic\\n\\t            else if (seriesModel.getMarkerPosition) {\\n\\t                // Use the getMarkerPoisition\\n\\t                point = seriesModel.getMarkerPosition(\\n\\t                    mpData.getValues(mpData.dimensions, idx)\\n\\t                );\\n\\t            }\\n\\t            else if (coordSys) {\\n\\t                var x = mpData.get(coordSys.dimensions[0], idx);\\n\\t                var y = mpData.get(coordSys.dimensions[1], idx);\\n\\t                point = coordSys.dataToPoint([x, y]);\\n\\n\\t            }\\n\\n\\t            // Use x, y if has any\\n\\t            if (!isNaN(xPx)) {\\n\\t                point[0] = xPx;\\n\\t            }\\n\\t            if (!isNaN(yPx)) {\\n\\t                point[1] = yPx;\\n\\t            }\\n\\n\\t            mpData.setItemLayout(idx, point);\\n\\t        });\\n\\t    }\\n\\n\\t    __webpack_require__(396).extend({\\n\\n\\t        type: 'markPoint',\\n\\n\\t        updateLayout: function (markPointModel, ecModel, api) {\\n\\t            ecModel.eachSeries(function (seriesModel) {\\n\\t                var mpModel = seriesModel.markPointModel;\\n\\t                if (mpModel) {\\n\\t                    updateMarkerLayout(mpModel.getData(), seriesModel, api);\\n\\t                    this.markerGroupMap.get(seriesModel.id).updateLayout(mpModel);\\n\\t                }\\n\\t            }, this);\\n\\t        },\\n\\n\\t        renderSeries: function (seriesModel, mpModel, ecModel, api) {\\n\\t            var coordSys = seriesModel.coordinateSystem;\\n\\t            var seriesId = seriesModel.id;\\n\\t            var seriesData = seriesModel.getData();\\n\\n\\t            var symbolDrawMap = this.markerGroupMap;\\n\\t            var symbolDraw = symbolDrawMap.get(seriesId)\\n\\t                || symbolDrawMap.set(seriesId, new SymbolDraw());\\n\\n\\t            var mpData = createList(coordSys, seriesModel, mpModel);\\n\\n\\t            // FIXME\\n\\t            mpModel.setData(mpData);\\n\\n\\t            updateMarkerLayout(mpModel.getData(), seriesModel, api);\\n\\n\\t            mpData.each(function (idx) {\\n\\t                var itemModel = mpData.getItemModel(idx);\\n\\t                var symbolSize = itemModel.getShallow('symbolSize');\\n\\t                if (typeof symbolSize === 'function') {\\n\\t                    // FIXME 这里不兼容 ECharts 2.x，2.x 貌似参数是整个数据？\\n\\t                    symbolSize = symbolSize(\\n\\t                        mpModel.getRawValue(idx), mpModel.getDataParams(idx)\\n\\t                    );\\n\\t                }\\n\\t                mpData.setItemVisual(idx, {\\n\\t                    symbolSize: symbolSize,\\n\\t                    color: itemModel.get('itemStyle.normal.color')\\n\\t                        || seriesData.getVisual('color'),\\n\\t                    symbol: itemModel.getShallow('symbol')\\n\\t                });\\n\\t            });\\n\\n\\t            // TODO Text are wrong\\n\\t            symbolDraw.updateData(mpData);\\n\\t            this.group.add(symbolDraw.group);\\n\\n\\t            // Set host model for tooltip\\n\\t            // FIXME\\n\\t            mpData.eachItemGraphicEl(function (el) {\\n\\t                el.traverse(function (child) {\\n\\t                    child.dataModel = mpModel;\\n\\t                });\\n\\t            });\\n\\n\\t            symbolDraw.__keep = true;\\n\\n\\t            symbolDraw.group.silent = mpModel.get('silent') || seriesModel.get('silent');\\n\\t        }\\n\\t    });\\n\\n\\t    /**\\n\\t     * @inner\\n\\t     * @param {module:echarts/coord/*} [coordSys]\\n\\t     * @param {module:echarts/model/Series} seriesModel\\n\\t     * @param {module:echarts/model/Model} mpModel\\n\\t     */\\n\\t    function createList(coordSys, seriesModel, mpModel) {\\n\\t        var coordDimsInfos;\\n\\t        if (coordSys) {\\n\\t            coordDimsInfos = zrUtil.map(coordSys && coordSys.dimensions, function (coordDim) {\\n\\t                var info = seriesModel.getData().getDimensionInfo(\\n\\t                    seriesModel.coordDimToDataDim(coordDim)[0]\\n\\t                ) || {}; // In map series data don't have lng and lat dimension. Fallback to same with coordSys\\n\\t                info.name = coordDim;\\n\\t                return info;\\n\\t            });\\n\\t        }\\n\\t        else {\\n\\t            coordDimsInfos =[{\\n\\t                name: 'value',\\n\\t                type: 'float'\\n\\t            }];\\n\\t        }\\n\\n\\t        var mpData = new List(coordDimsInfos, mpModel);\\n\\t        var dataOpt = zrUtil.map(mpModel.get('data'), zrUtil.curry(\\n\\t                markerHelper.dataTransform, seriesModel\\n\\t            ));\\n\\t        if (coordSys) {\\n\\t            dataOpt = zrUtil.filter(\\n\\t                dataOpt, zrUtil.curry(markerHelper.dataFilter, coordSys)\\n\\t            );\\n\\t        }\\n\\n\\t        mpData.initData(dataOpt, null,\\n\\t            coordSys ? markerHelper.dimValueGetter : function (item) {\\n\\t                return item.value;\\n\\t            }\\n\\t        );\\n\\t        return mpData;\\n\\t    }\\n\\n\\n\\n/***/ },\\n/* 395 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var numberUtil = __webpack_require__(7);\\n\\t    var indexOf = zrUtil.indexOf;\\n\\n\\t    function hasXOrY(item) {\\n\\t        return !(isNaN(parseFloat(item.x)) && isNaN(parseFloat(item.y)));\\n\\t    }\\n\\n\\t    function hasXAndY(item) {\\n\\t        return !isNaN(parseFloat(item.x)) && !isNaN(parseFloat(item.y));\\n\\t    }\\n\\n\\t    function getPrecision(data, valueAxisDim, dataIndex) {\\n\\t        var precision = -1;\\n\\t        do {\\n\\t            precision = Math.max(\\n\\t                numberUtil.getPrecision(data.get(\\n\\t                    valueAxisDim, dataIndex\\n\\t                )),\\n\\t                precision\\n\\t            );\\n\\t            data = data.stackedOn;\\n\\t        } while (data);\\n\\n\\t        return precision;\\n\\t    }\\n\\n\\t    function markerTypeCalculatorWithExtent(\\n\\t        mlType, data, otherDataDim, targetDataDim, otherCoordIndex, targetCoordIndex\\n\\t    ) {\\n\\t        var coordArr = [];\\n\\t        var value = numCalculate(data, targetDataDim, mlType);\\n\\n\\t        var dataIndex = data.indicesOfNearest(targetDataDim, value, true)[0];\\n\\t        coordArr[otherCoordIndex] = data.get(otherDataDim, dataIndex, true);\\n\\t        coordArr[targetCoordIndex] = data.get(targetDataDim, dataIndex, true);\\n\\n\\t        var precision = getPrecision(data, targetDataDim, dataIndex);\\n\\t        if (precision >= 0) {\\n\\t            coordArr[targetCoordIndex] = +coordArr[targetCoordIndex].toFixed(precision);\\n\\t        }\\n\\n\\t        return coordArr;\\n\\t    }\\n\\n\\t    var curry = zrUtil.curry;\\n\\t    // TODO Specified percent\\n\\t    var markerTypeCalculator = {\\n\\t        /**\\n\\t         * @method\\n\\t         * @param {module:echarts/data/List} data\\n\\t         * @param {string} baseAxisDim\\n\\t         * @param {string} valueAxisDim\\n\\t         */\\n\\t        min: curry(markerTypeCalculatorWithExtent, 'min'),\\n\\t        /**\\n\\t         * @method\\n\\t         * @param {module:echarts/data/List} data\\n\\t         * @param {string} baseAxisDim\\n\\t         * @param {string} valueAxisDim\\n\\t         */\\n\\t        max: curry(markerTypeCalculatorWithExtent, 'max'),\\n\\n\\t        /**\\n\\t         * @method\\n\\t         * @param {module:echarts/data/List} data\\n\\t         * @param {string} baseAxisDim\\n\\t         * @param {string} valueAxisDim\\n\\t         */\\n\\t        average: curry(markerTypeCalculatorWithExtent, 'average')\\n\\t    };\\n\\n\\t    /**\\n\\t     * Transform markPoint data item to format used in List by do the following\\n\\t     * 1. Calculate statistic like `max`, `min`, `average`\\n\\t     * 2. Convert `item.xAxis`, `item.yAxis` to `item.coord` array\\n\\t     * @param  {module:echarts/model/Series} seriesModel\\n\\t     * @param  {module:echarts/coord/*} [coordSys]\\n\\t     * @param  {Object} item\\n\\t     * @return {Object}\\n\\t     */\\n\\t    var dataTransform = function (seriesModel, item) {\\n\\t        var data = seriesModel.getData();\\n\\t        var coordSys = seriesModel.coordinateSystem;\\n\\n\\t        // 1. If not specify the position with pixel directly\\n\\t        // 2. If `coord` is not a data array. Which uses `xAxis`,\\n\\t        // `yAxis` to specify the coord on each dimension\\n\\n\\t        // parseFloat first because item.x and item.y can be percent string like '20%'\\n\\t        if (item && !hasXAndY(item) && !zrUtil.isArray(item.coord) && coordSys) {\\n\\t            var dims = coordSys.dimensions;\\n\\t            var axisInfo = getAxisInfo(item, data, coordSys, seriesModel);\\n\\n\\t            // Clone the option\\n\\t            // Transform the properties xAxis, yAxis, radiusAxis, angleAxis, geoCoord to value\\n\\t            item = zrUtil.clone(item);\\n\\n\\t            if (item.type\\n\\t                && markerTypeCalculator[item.type]\\n\\t                && axisInfo.baseAxis && axisInfo.valueAxis\\n\\t            ) {\\n\\t                var otherCoordIndex = indexOf(dims, axisInfo.baseAxis.dim);\\n\\t                var targetCoordIndex = indexOf(dims, axisInfo.valueAxis.dim);\\n\\n\\t                item.coord = markerTypeCalculator[item.type](\\n\\t                    data, axisInfo.baseDataDim, axisInfo.valueDataDim,\\n\\t                    otherCoordIndex, targetCoordIndex\\n\\t                );\\n\\t                // Force to use the value of calculated value.\\n\\t                item.value = item.coord[targetCoordIndex];\\n\\t            }\\n\\t            else {\\n\\t                // FIXME Only has one of xAxis and yAxis.\\n\\t                var coord = [\\n\\t                    item.xAxis != null ? item.xAxis : item.radiusAxis,\\n\\t                    item.yAxis != null ? item.yAxis : item.angleAxis\\n\\t                ];\\n\\t                // Each coord support max, min, average\\n\\t                for (var i = 0; i < 2; i++) {\\n\\t                    if (markerTypeCalculator[coord[i]]) {\\n\\t                        var dataDim = seriesModel.coordDimToDataDim(dims[i])[0];\\n\\t                        coord[i] = numCalculate(data, dataDim, coord[i]);\\n\\t                    }\\n\\t                }\\n\\t                item.coord = coord;\\n\\t            }\\n\\t        }\\n\\t        return item;\\n\\t    };\\n\\n\\t    var getAxisInfo = function (item, data, coordSys, seriesModel) {\\n\\t        var ret = {};\\n\\n\\t        if (item.valueIndex != null || item.valueDim != null) {\\n\\t            ret.valueDataDim = item.valueIndex != null\\n\\t                ? data.getDimension(item.valueIndex) : item.valueDim;\\n\\t            ret.valueAxis = coordSys.getAxis(seriesModel.dataDimToCoordDim(ret.valueDataDim));\\n\\t            ret.baseAxis = coordSys.getOtherAxis(ret.valueAxis);\\n\\t            ret.baseDataDim = seriesModel.coordDimToDataDim(ret.baseAxis.dim)[0];\\n\\t        }\\n\\t        else {\\n\\t            ret.baseAxis = seriesModel.getBaseAxis();\\n\\t            ret.valueAxis = coordSys.getOtherAxis(ret.baseAxis);\\n\\t            ret.baseDataDim = seriesModel.coordDimToDataDim(ret.baseAxis.dim)[0];\\n\\t            ret.valueDataDim = seriesModel.coordDimToDataDim(ret.valueAxis.dim)[0];\\n\\t        }\\n\\n\\t        return ret;\\n\\t    };\\n\\n\\t    /**\\n\\t     * Filter data which is out of coordinateSystem range\\n\\t     * [dataFilter description]\\n\\t     * @param  {module:echarts/coord/*} [coordSys]\\n\\t     * @param  {Object} item\\n\\t     * @return {boolean}\\n\\t     */\\n\\t    var dataFilter = function (coordSys, item) {\\n\\t        // Alwalys return true if there is no coordSys\\n\\t        return (coordSys && coordSys.containData && item.coord && !hasXOrY(item))\\n\\t            ? coordSys.containData(item.coord) : true;\\n\\t    };\\n\\n\\t    var dimValueGetter = function (item, dimName, dataIndex, dimIndex) {\\n\\t        // x, y, radius, angle\\n\\t        if (dimIndex < 2) {\\n\\t            return item.coord && item.coord[dimIndex];\\n\\t        }\\n\\t        return item.value;\\n\\t    };\\n\\n\\t    var numCalculate = function (data, valueDataDim, type) {\\n\\t        if (type === 'average') {\\n\\t            var sum = 0;\\n\\t            var count = 0;\\n\\t            data.each(valueDataDim, function (val, idx) {\\n\\t                if (!isNaN(val)) {\\n\\t                    sum += val;\\n\\t                    count++;\\n\\t                }\\n\\t            }, true);\\n\\t            return sum / count;\\n\\t        }\\n\\t        else {\\n\\t            return data.getDataExtent(valueDataDim, true)[type === 'max' ? 1 : 0];\\n\\t        }\\n\\t    };\\n\\n\\t    module.exports = {\\n\\t        dataTransform: dataTransform,\\n\\t        dataFilter: dataFilter,\\n\\t        dimValueGetter: dimValueGetter,\\n\\t        getAxisInfo: getAxisInfo,\\n\\t        numCalculate: numCalculate\\n\\t    };\\n\\n\\n/***/ },\\n/* 396 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\n\\t    module.exports = __webpack_require__(1).extendComponentView({\\n\\n\\t        type: 'marker',\\n\\n\\t        init: function () {\\n\\t            /**\\n\\t             * Markline grouped by series\\n\\t             * @private\\n\\t             * @type {module:zrender/core/util.HashMap}\\n\\t             */\\n\\t            this.markerGroupMap = zrUtil.createHashMap();\\n\\t        },\\n\\n\\t        render: function (markerModel, ecModel, api) {\\n\\t            var markerGroupMap = this.markerGroupMap;\\n\\t            markerGroupMap.each(function (item) {\\n\\t                item.__keep = false;\\n\\t            });\\n\\n\\t            var markerModelKey = this.type + 'Model';\\n\\t            ecModel.eachSeries(function (seriesModel) {\\n\\t                var markerModel = seriesModel[markerModelKey];\\n\\t                markerModel && this.renderSeries(seriesModel, markerModel, ecModel, api);\\n\\t            }, this);\\n\\n\\t            markerGroupMap.each(function (item) {\\n\\t                !item.__keep && this.group.remove(item.group);\\n\\t            }, this);\\n\\t        },\\n\\n\\t        renderSeries: function () {}\\n\\t    });\\n\\n\\n/***/ },\\n/* 397 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    __webpack_require__(398);\\n\\t    __webpack_require__(399);\\n\\n\\t    __webpack_require__(1).registerPreprocessor(function (opt) {\\n\\t        // Make sure markLine component is enabled\\n\\t        opt.markLine = opt.markLine || {};\\n\\t    });\\n\\n\\n/***/ },\\n/* 398 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    module.exports = __webpack_require__(393).extend({\\n\\n\\t        type: 'markLine',\\n\\n\\t        defaultOption: {\\n\\t            zlevel: 0,\\n\\t            z: 5,\\n\\n\\t            symbol: ['circle', 'arrow'],\\n\\t            symbolSize: [8, 16],\\n\\n\\t            //symbolRotate: 0,\\n\\n\\t            precision: 2,\\n\\t            tooltip: {\\n\\t                trigger: 'item'\\n\\t            },\\n\\t            label: {\\n\\t                normal: {\\n\\t                    show: true,\\n\\t                    position: 'end'\\n\\t                },\\n\\t                emphasis: {\\n\\t                    show: true\\n\\t                }\\n\\t            },\\n\\t            lineStyle: {\\n\\t                normal: {\\n\\t                    type: 'dashed'\\n\\t                },\\n\\t                emphasis: {\\n\\t                    width: 3\\n\\t                }\\n\\t            },\\n\\t            animationEasing: 'linear'\\n\\t        }\\n\\t    });\\n\\n\\n/***/ },\\n/* 399 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var List = __webpack_require__(98);\\n\\t    var numberUtil = __webpack_require__(7);\\n\\n\\t    var markerHelper = __webpack_require__(395);\\n\\n\\t    var LineDraw = __webpack_require__(210);\\n\\n\\t    var markLineTransform = function (seriesModel, coordSys, mlModel, item) {\\n\\t        var data = seriesModel.getData();\\n\\t        // Special type markLine like 'min', 'max', 'average'\\n\\t        var mlType = item.type;\\n\\n\\t        if (!zrUtil.isArray(item)\\n\\t            && (\\n\\t                mlType === 'min' || mlType === 'max' || mlType === 'average'\\n\\t                // In case\\n\\t                // data: [{\\n\\t                //   yAxis: 10\\n\\t                // }]\\n\\t                || (item.xAxis != null || item.yAxis != null)\\n\\t            )\\n\\t        ) {\\n\\t            var valueAxis;\\n\\t            var valueDataDim;\\n\\t            var value;\\n\\n\\t            if (item.yAxis != null || item.xAxis != null) {\\n\\t                valueDataDim = item.yAxis != null ? 'y' : 'x';\\n\\t                valueAxis = coordSys.getAxis(valueDataDim);\\n\\n\\t                value = zrUtil.retrieve(item.yAxis, item.xAxis);\\n\\t            }\\n\\t            else {\\n\\t                var axisInfo = markerHelper.getAxisInfo(item, data, coordSys, seriesModel);\\n\\t                valueDataDim = axisInfo.valueDataDim;\\n\\t                valueAxis = axisInfo.valueAxis;\\n\\t                value = markerHelper.numCalculate(data, valueDataDim, mlType);\\n\\t            }\\n\\t            var valueIndex = valueDataDim === 'x' ? 0 : 1;\\n\\t            var baseIndex = 1 - valueIndex;\\n\\n\\t            var mlFrom = zrUtil.clone(item);\\n\\t            var mlTo = {};\\n\\n\\t            mlFrom.type = null;\\n\\n\\t            mlFrom.coord = [];\\n\\t            mlTo.coord = [];\\n\\t            mlFrom.coord[baseIndex] = -Infinity;\\n\\t            mlTo.coord[baseIndex] = Infinity;\\n\\n\\t            var precision = mlModel.get('precision');\\n\\t            if (precision >= 0 && typeof value === 'number') {\\n\\t                value = +value.toFixed(precision);\\n\\t            }\\n\\n\\t            mlFrom.coord[valueIndex] = mlTo.coord[valueIndex] = value;\\n\\n\\t            item = [mlFrom, mlTo, { // Extra option for tooltip and label\\n\\t                type: mlType,\\n\\t                valueIndex: item.valueIndex,\\n\\t                // Force to use the value of calculated value.\\n\\t                value: value\\n\\t            }];\\n\\t        }\\n\\n\\t        item = [\\n\\t            markerHelper.dataTransform(seriesModel, item[0]),\\n\\t            markerHelper.dataTransform(seriesModel, item[1]),\\n\\t            zrUtil.extend({}, item[2])\\n\\t        ];\\n\\n\\t        // Avoid line data type is extended by from(to) data type\\n\\t        item[2].type = item[2].type || '';\\n\\n\\t        // Merge from option and to option into line option\\n\\t        zrUtil.merge(item[2], item[0]);\\n\\t        zrUtil.merge(item[2], item[1]);\\n\\n\\t        return item;\\n\\t    };\\n\\n\\t    function isInifinity(val) {\\n\\t        return !isNaN(val) && !isFinite(val);\\n\\t    }\\n\\n\\t    // If a markLine has one dim\\n\\t    function ifMarkLineHasOnlyDim(dimIndex, fromCoord, toCoord, coordSys) {\\n\\t        var otherDimIndex = 1 - dimIndex;\\n\\t        var dimName = coordSys.dimensions[dimIndex];\\n\\t        return isInifinity(fromCoord[otherDimIndex]) && isInifinity(toCoord[otherDimIndex])\\n\\t            && fromCoord[dimIndex] === toCoord[dimIndex] && coordSys.getAxis(dimName).containData(fromCoord[dimIndex]);\\n\\t    }\\n\\n\\t    function markLineFilter(coordSys, item) {\\n\\t        if (coordSys.type === 'cartesian2d') {\\n\\t            var fromCoord = item[0].coord;\\n\\t            var toCoord = item[1].coord;\\n\\t            // In case\\n\\t            // {\\n\\t            //  markLine: {\\n\\t            //    data: [{ yAxis: 2 }]\\n\\t            //  }\\n\\t            // }\\n\\t            if (\\n\\t                fromCoord && toCoord &&\\n\\t                (ifMarkLineHasOnlyDim(1, fromCoord, toCoord, coordSys)\\n\\t                || ifMarkLineHasOnlyDim(0, fromCoord, toCoord, coordSys))\\n\\t            ) {\\n\\t                return true;\\n\\t            }\\n\\t        }\\n\\t        return markerHelper.dataFilter(coordSys, item[0])\\n\\t            && markerHelper.dataFilter(coordSys, item[1]);\\n\\t    }\\n\\n\\t    function updateSingleMarkerEndLayout(\\n\\t        data, idx, isFrom, seriesModel, api\\n\\t    ) {\\n\\t        var coordSys = seriesModel.coordinateSystem;\\n\\t        var itemModel = data.getItemModel(idx);\\n\\n\\t        var point;\\n\\t        var xPx = numberUtil.parsePercent(itemModel.get('x'), api.getWidth());\\n\\t        var yPx = numberUtil.parsePercent(itemModel.get('y'), api.getHeight());\\n\\t        if (!isNaN(xPx) && !isNaN(yPx)) {\\n\\t            point = [xPx, yPx];\\n\\t        }\\n\\t        else {\\n\\t            // Chart like bar may have there own marker positioning logic\\n\\t            if (seriesModel.getMarkerPosition) {\\n\\t                // Use the getMarkerPoisition\\n\\t                point = seriesModel.getMarkerPosition(\\n\\t                    data.getValues(data.dimensions, idx)\\n\\t                );\\n\\t            }\\n\\t            else {\\n\\t                var dims = coordSys.dimensions;\\n\\t                var x = data.get(dims[0], idx);\\n\\t                var y = data.get(dims[1], idx);\\n\\t                point = coordSys.dataToPoint([x, y]);\\n\\t            }\\n\\t            // Expand line to the edge of grid if value on one axis is Inifnity\\n\\t            // In case\\n\\t            //  markLine: {\\n\\t            //    data: [{\\n\\t            //      yAxis: 2\\n\\t            //      // or\\n\\t            //      type: 'average'\\n\\t            //    }]\\n\\t            //  }\\n\\t            if (coordSys.type === 'cartesian2d') {\\n\\t                var xAxis = coordSys.getAxis('x');\\n\\t                var yAxis = coordSys.getAxis('y');\\n\\t                var dims = coordSys.dimensions;\\n\\t                if (isInifinity(data.get(dims[0], idx))) {\\n\\t                    point[0] = xAxis.toGlobalCoord(xAxis.getExtent()[isFrom ? 0 : 1]);\\n\\t                }\\n\\t                else if (isInifinity(data.get(dims[1], idx))) {\\n\\t                    point[1] = yAxis.toGlobalCoord(yAxis.getExtent()[isFrom ? 0 : 1]);\\n\\t                }\\n\\t            }\\n\\n\\t            // Use x, y if has any\\n\\t            if (!isNaN(xPx)) {\\n\\t                point[0] = xPx;\\n\\t            }\\n\\t            if (!isNaN(yPx)) {\\n\\t                point[1] = yPx;\\n\\t            }\\n\\t        }\\n\\n\\t        data.setItemLayout(idx, point);\\n\\t    }\\n\\n\\t    __webpack_require__(396).extend({\\n\\n\\t        type: 'markLine',\\n\\n\\t        updateLayout: function (markLineModel, ecModel, api) {\\n\\t            ecModel.eachSeries(function (seriesModel) {\\n\\t                var mlModel = seriesModel.markLineModel;\\n\\t                if (mlModel) {\\n\\t                    var mlData = mlModel.getData();\\n\\t                    var fromData = mlModel.__from;\\n\\t                    var toData = mlModel.__to;\\n\\t                    // Update visual and layout of from symbol and to symbol\\n\\t                    fromData.each(function (idx) {\\n\\t                        updateSingleMarkerEndLayout(fromData, idx, true, seriesModel, api);\\n\\t                        updateSingleMarkerEndLayout(toData, idx, false, seriesModel, api);\\n\\t                    });\\n\\t                    // Update layout of line\\n\\t                    mlData.each(function (idx) {\\n\\t                        mlData.setItemLayout(idx, [\\n\\t                            fromData.getItemLayout(idx),\\n\\t                            toData.getItemLayout(idx)\\n\\t                        ]);\\n\\t                    });\\n\\n\\t                    this.markerGroupMap.get(seriesModel.id).updateLayout();\\n\\n\\t                }\\n\\t            }, this);\\n\\t        },\\n\\n\\t        renderSeries: function (seriesModel, mlModel, ecModel, api) {\\n\\t            var coordSys = seriesModel.coordinateSystem;\\n\\t            var seriesId = seriesModel.id;\\n\\t            var seriesData = seriesModel.getData();\\n\\n\\t            var lineDrawMap = this.markerGroupMap;\\n\\t            var lineDraw = lineDrawMap.get(seriesId)\\n\\t                || lineDrawMap.set(seriesId, new LineDraw());\\n\\t            this.group.add(lineDraw.group);\\n\\n\\t            var mlData = createList(coordSys, seriesModel, mlModel);\\n\\n\\t            var fromData = mlData.from;\\n\\t            var toData = mlData.to;\\n\\t            var lineData = mlData.line;\\n\\n\\t            mlModel.__from = fromData;\\n\\t            mlModel.__to = toData;\\n\\t            // Line data for tooltip and formatter\\n\\t            mlModel.setData(lineData);\\n\\n\\t            var symbolType = mlModel.get('symbol');\\n\\t            var symbolSize = mlModel.get('symbolSize');\\n\\t            if (!zrUtil.isArray(symbolType)) {\\n\\t                symbolType = [symbolType, symbolType];\\n\\t            }\\n\\t            if (typeof symbolSize === 'number') {\\n\\t                symbolSize = [symbolSize, symbolSize];\\n\\t            }\\n\\n\\t            // Update visual and layout of from symbol and to symbol\\n\\t            mlData.from.each(function (idx) {\\n\\t                updateDataVisualAndLayout(fromData, idx, true);\\n\\t                updateDataVisualAndLayout(toData, idx, false);\\n\\t            });\\n\\n\\t            // Update visual and layout of line\\n\\t            lineData.each(function (idx) {\\n\\t                var lineColor = lineData.getItemModel(idx).get('lineStyle.normal.color');\\n\\t                lineData.setItemVisual(idx, {\\n\\t                    color: lineColor || fromData.getItemVisual(idx, 'color')\\n\\t                });\\n\\t                lineData.setItemLayout(idx, [\\n\\t                    fromData.getItemLayout(idx),\\n\\t                    toData.getItemLayout(idx)\\n\\t                ]);\\n\\n\\t                lineData.setItemVisual(idx, {\\n\\t                    'fromSymbolSize': fromData.getItemVisual(idx, 'symbolSize'),\\n\\t                    'fromSymbol': fromData.getItemVisual(idx, 'symbol'),\\n\\t                    'toSymbolSize': toData.getItemVisual(idx, 'symbolSize'),\\n\\t                    'toSymbol': toData.getItemVisual(idx, 'symbol')\\n\\t                });\\n\\t            });\\n\\n\\t            lineDraw.updateData(lineData);\\n\\n\\t            // Set host model for tooltip\\n\\t            // FIXME\\n\\t            mlData.line.eachItemGraphicEl(function (el, idx) {\\n\\t                el.traverse(function (child) {\\n\\t                    child.dataModel = mlModel;\\n\\t                });\\n\\t            });\\n\\n\\t            function updateDataVisualAndLayout(data, idx, isFrom) {\\n\\t                var itemModel = data.getItemModel(idx);\\n\\n\\t                updateSingleMarkerEndLayout(\\n\\t                    data, idx, isFrom, seriesModel, api\\n\\t                );\\n\\n\\t                data.setItemVisual(idx, {\\n\\t                    symbolSize: itemModel.get('symbolSize') || symbolSize[isFrom ? 0 : 1],\\n\\t                    symbol: itemModel.get('symbol', true) || symbolType[isFrom ? 0 : 1],\\n\\t                    color: itemModel.get('itemStyle.normal.color') || seriesData.getVisual('color')\\n\\t                });\\n\\t            }\\n\\n\\t            lineDraw.__keep = true;\\n\\n\\t            lineDraw.group.silent = mlModel.get('silent') || seriesModel.get('silent');\\n\\t        }\\n\\t    });\\n\\n\\t    /**\\n\\t     * @inner\\n\\t     * @param {module:echarts/coord/*} coordSys\\n\\t     * @param {module:echarts/model/Series} seriesModel\\n\\t     * @param {module:echarts/model/Model} mpModel\\n\\t     */\\n\\t    function createList(coordSys, seriesModel, mlModel) {\\n\\n\\t        var coordDimsInfos;\\n\\t        if (coordSys) {\\n\\t            coordDimsInfos = zrUtil.map(coordSys && coordSys.dimensions, function (coordDim) {\\n\\t                var info = seriesModel.getData().getDimensionInfo(\\n\\t                    seriesModel.coordDimToDataDim(coordDim)[0]\\n\\t                ) || {}; // In map series data don't have lng and lat dimension. Fallback to same with coordSys\\n\\t                info.name = coordDim;\\n\\t                return info;\\n\\t            });\\n\\t        }\\n\\t        else {\\n\\t            coordDimsInfos =[{\\n\\t                name: 'value',\\n\\t                type: 'float'\\n\\t            }];\\n\\t        }\\n\\n\\t        var fromData = new List(coordDimsInfos, mlModel);\\n\\t        var toData = new List(coordDimsInfos, mlModel);\\n\\t        // No dimensions\\n\\t        var lineData = new List([], mlModel);\\n\\n\\t        var optData = zrUtil.map(mlModel.get('data'), zrUtil.curry(\\n\\t            markLineTransform, seriesModel, coordSys, mlModel\\n\\t        ));\\n\\t        if (coordSys) {\\n\\t            optData = zrUtil.filter(\\n\\t                optData, zrUtil.curry(markLineFilter, coordSys)\\n\\t            );\\n\\t        }\\n\\t        var dimValueGetter = coordSys ? markerHelper.dimValueGetter : function (item) {\\n\\t            return item.value;\\n\\t        };\\n\\t        fromData.initData(\\n\\t            zrUtil.map(optData, function (item) { return item[0]; }),\\n\\t            null, dimValueGetter\\n\\t        );\\n\\t        toData.initData(\\n\\t            zrUtil.map(optData, function (item) { return item[1]; }),\\n\\t            null, dimValueGetter\\n\\t        );\\n\\t        lineData.initData(\\n\\t            zrUtil.map(optData, function (item) { return item[2]; })\\n\\t        );\\n\\t        lineData.hasItemOption = true;\\n\\t        return {\\n\\t            from: fromData,\\n\\t            to: toData,\\n\\t            line: lineData\\n\\t        };\\n\\t    }\\n\\n\\n/***/ },\\n/* 400 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    __webpack_require__(401);\\n\\t    __webpack_require__(402);\\n\\n\\t    __webpack_require__(1).registerPreprocessor(function (opt) {\\n\\t        // Make sure markArea component is enabled\\n\\t        opt.markArea = opt.markArea || {};\\n\\t    });\\n\\n\\n/***/ },\\n/* 401 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    module.exports = __webpack_require__(393).extend({\\n\\n\\t        type: 'markArea',\\n\\n\\t        defaultOption: {\\n\\t            zlevel: 0,\\n\\t            // PENDING\\n\\t            z: 1,\\n\\t            tooltip: {\\n\\t                trigger: 'item'\\n\\t            },\\n\\t            // markArea should fixed on the coordinate system\\n\\t            animation: false,\\n\\t            label: {\\n\\t                normal: {\\n\\t                    show: true,\\n\\t                    position: 'top'\\n\\t                },\\n\\t                emphasis: {\\n\\t                    show: true,\\n\\t                    position: 'top'\\n\\t                }\\n\\t            },\\n\\t            itemStyle: {\\n\\t                normal: {\\n\\t                    // color and borderColor default to use color from series\\n\\t                    // color: 'auto'\\n\\t                    // borderColor: 'auto'\\n\\t                    borderWidth: 0\\n\\t                }\\n\\t            }\\n\\t        }\\n\\t    });\\n\\n\\n/***/ },\\n/* 402 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t// TODO Better on polar\\n\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var List = __webpack_require__(98);\\n\\t    var numberUtil = __webpack_require__(7);\\n\\t    var graphic = __webpack_require__(18);\\n\\t    var colorUtil = __webpack_require__(31);\\n\\n\\t    var markerHelper = __webpack_require__(395);\\n\\n\\t    var markAreaTransform = function (seriesModel, coordSys, maModel, item) {\\n\\t        var lt = markerHelper.dataTransform(seriesModel, item[0]);\\n\\t        var rb = markerHelper.dataTransform(seriesModel, item[1]);\\n\\t        var retrieve = zrUtil.retrieve;\\n\\n\\t        // FIXME make sure lt is less than rb\\n\\t        var ltCoord = lt.coord;\\n\\t        var rbCoord = rb.coord;\\n\\t        ltCoord[0] = retrieve(ltCoord[0], -Infinity);\\n\\t        ltCoord[1] = retrieve(ltCoord[1], -Infinity);\\n\\n\\t        rbCoord[0] = retrieve(rbCoord[0], Infinity);\\n\\t        rbCoord[1] = retrieve(rbCoord[1], Infinity);\\n\\n\\t        // Merge option into one\\n\\t        var result = zrUtil.mergeAll([{}, lt, rb]);\\n\\n\\t        result.coord = [\\n\\t            lt.coord, rb.coord\\n\\t        ];\\n\\t        result.x0 = lt.x;\\n\\t        result.y0 = lt.y;\\n\\t        result.x1 = rb.x;\\n\\t        result.y1 = rb.y;\\n\\t        return result;\\n\\t    };\\n\\n\\t    function isInifinity(val) {\\n\\t        return !isNaN(val) && !isFinite(val);\\n\\t    }\\n\\n\\t    // If a markArea has one dim\\n\\t    function ifMarkLineHasOnlyDim(dimIndex, fromCoord, toCoord, coordSys) {\\n\\t        var otherDimIndex = 1 - dimIndex;\\n\\t        return isInifinity(fromCoord[otherDimIndex]) && isInifinity(toCoord[otherDimIndex]);\\n\\t    }\\n\\n\\t    function markAreaFilter(coordSys, item) {\\n\\t        var fromCoord = item.coord[0];\\n\\t        var toCoord = item.coord[1];\\n\\t        if (coordSys.type === 'cartesian2d') {\\n\\t            // In case\\n\\t            // {\\n\\t            //  markArea: {\\n\\t            //    data: [{ yAxis: 2 }]\\n\\t            //  }\\n\\t            // }\\n\\t            if (\\n\\t                fromCoord && toCoord &&\\n\\t                (ifMarkLineHasOnlyDim(1, fromCoord, toCoord, coordSys)\\n\\t                || ifMarkLineHasOnlyDim(0, fromCoord, toCoord, coordSys))\\n\\t            ) {\\n\\t                return true;\\n\\t            }\\n\\t        }\\n\\t        return markerHelper.dataFilter(coordSys, {\\n\\t                coord: fromCoord,\\n\\t                x: item.x0,\\n\\t                y: item.y0\\n\\t            })\\n\\t            || markerHelper.dataFilter(coordSys, {\\n\\t                coord: toCoord,\\n\\t                x: item.x1,\\n\\t                y: item.y1\\n\\t            });\\n\\t    }\\n\\n\\t    // dims can be ['x0', 'y0'], ['x1', 'y1'], ['x0', 'y1'], ['x1', 'y0']\\n\\t    function getSingleMarkerEndPoint(data, idx, dims, seriesModel, api) {\\n\\t        var coordSys = seriesModel.coordinateSystem;\\n\\t        var itemModel = data.getItemModel(idx);\\n\\n\\t        var point;\\n\\t        var xPx = numberUtil.parsePercent(itemModel.get(dims[0]), api.getWidth());\\n\\t        var yPx = numberUtil.parsePercent(itemModel.get(dims[1]), api.getHeight());\\n\\t        if (!isNaN(xPx) && !isNaN(yPx)) {\\n\\t            point = [xPx, yPx];\\n\\t        }\\n\\t        else {\\n\\t            // Chart like bar may have there own marker positioning logic\\n\\t            if (seriesModel.getMarkerPosition) {\\n\\t                // Use the getMarkerPoisition\\n\\t                point = seriesModel.getMarkerPosition(\\n\\t                    data.getValues(dims, idx)\\n\\t                );\\n\\t            }\\n\\t            else {\\n\\t                var x = data.get(dims[0], idx);\\n\\t                var y = data.get(dims[1], idx);\\n\\t                point = coordSys.dataToPoint([x, y], true);\\n\\t            }\\n\\t            if (coordSys.type === 'cartesian2d') {\\n\\t                var xAxis = coordSys.getAxis('x');\\n\\t                var yAxis = coordSys.getAxis('y');\\n\\t                var x = data.get(dims[0], idx);\\n\\t                var y = data.get(dims[1], idx);\\n\\t                if (isInifinity(x)) {\\n\\t                    point[0] = xAxis.toGlobalCoord(xAxis.getExtent()[dims[0] === 'x0' ? 0 : 1]);\\n\\t                }\\n\\t                else if (isInifinity(y)) {\\n\\t                    point[1] = yAxis.toGlobalCoord(yAxis.getExtent()[dims[1] === 'y0' ? 0 : 1]);\\n\\t                }\\n\\t            }\\n\\n\\t            // Use x, y if has any\\n\\t            if (!isNaN(xPx)) {\\n\\t                point[0] = xPx;\\n\\t            }\\n\\t            if (!isNaN(yPx)) {\\n\\t                point[1] = yPx;\\n\\t            }\\n\\t        }\\n\\n\\t        return point;\\n\\t    }\\n\\n\\t    var dimPermutations = [['x0', 'y0'], ['x1', 'y0'], ['x1', 'y1'], ['x0', 'y1']];\\n\\n\\t    __webpack_require__(396).extend({\\n\\n\\t        type: 'markArea',\\n\\n\\t        updateLayout: function (markAreaModel, ecModel, api) {\\n\\t            ecModel.eachSeries(function (seriesModel) {\\n\\t                var maModel = seriesModel.markAreaModel;\\n\\t                if (maModel) {\\n\\t                    var areaData = maModel.getData();\\n\\t                    areaData.each(function (idx) {\\n\\t                        var points = zrUtil.map(dimPermutations, function (dim) {\\n\\t                            return getSingleMarkerEndPoint(areaData, idx, dim, seriesModel, api);\\n\\t                        });\\n\\t                        // Layout\\n\\t                        areaData.setItemLayout(idx, points);\\n\\t                        var el = areaData.getItemGraphicEl(idx);\\n\\t                        el.setShape('points', points);\\n\\t                    });\\n\\t                }\\n\\t            }, this);\\n\\t        },\\n\\n\\t        renderSeries: function (seriesModel, maModel, ecModel, api) {\\n\\t            var coordSys = seriesModel.coordinateSystem;\\n\\t            var seriesName = seriesModel.name;\\n\\t            var seriesData = seriesModel.getData();\\n\\n\\t            var areaGroupMap = this.markerGroupMap;\\n\\t            var polygonGroup = areaGroupMap.get(seriesName)\\n\\t                || areaGroupMap.set(seriesName, {group: new graphic.Group()});\\n\\n\\t            this.group.add(polygonGroup.group);\\n\\t            polygonGroup.__keep = true;\\n\\n\\t            var areaData = createList(coordSys, seriesModel, maModel);\\n\\n\\t            // Line data for tooltip and formatter\\n\\t            maModel.setData(areaData);\\n\\n\\t            // Update visual and layout of line\\n\\t            areaData.each(function (idx) {\\n\\t                // Layout\\n\\t                areaData.setItemLayout(idx, zrUtil.map(dimPermutations, function (dim) {\\n\\t                    return getSingleMarkerEndPoint(areaData, idx, dim, seriesModel, api);\\n\\t                }));\\n\\n\\t                // Visual\\n\\t                areaData.setItemVisual(idx, {\\n\\t                    color: seriesData.getVisual('color')\\n\\t                });\\n\\t            });\\n\\n\\n\\t            areaData.diff(polygonGroup.__data)\\n\\t                .add(function (idx) {\\n\\t                    var polygon = new graphic.Polygon({\\n\\t                        shape: {\\n\\t                            points: areaData.getItemLayout(idx)\\n\\t                        }\\n\\t                    });\\n\\t                    areaData.setItemGraphicEl(idx, polygon);\\n\\t                    polygonGroup.group.add(polygon);\\n\\t                })\\n\\t                .update(function (newIdx, oldIdx) {\\n\\t                    var polygon = polygonGroup.__data.getItemGraphicEl(oldIdx);\\n\\t                    graphic.updateProps(polygon, {\\n\\t                        shape: {\\n\\t                            points: areaData.getItemLayout(newIdx)\\n\\t                        }\\n\\t                    }, maModel, newIdx);\\n\\t                    polygonGroup.group.add(polygon);\\n\\t                    areaData.setItemGraphicEl(newIdx, polygon);\\n\\t                })\\n\\t                .remove(function (idx) {\\n\\t                    var polygon = polygonGroup.__data.getItemGraphicEl(idx);\\n\\t                    polygonGroup.group.remove(polygon);\\n\\t                })\\n\\t                .execute();\\n\\n\\t            areaData.eachItemGraphicEl(function (polygon, idx) {\\n\\t                var itemModel = areaData.getItemModel(idx);\\n\\t                var labelModel = itemModel.getModel('label.normal');\\n\\t                var labelHoverModel = itemModel.getModel('label.emphasis');\\n\\t                var color = areaData.getItemVisual(idx, 'color');\\n\\t                polygon.useStyle(\\n\\t                    zrUtil.defaults(\\n\\t                        itemModel.getModel('itemStyle.normal').getItemStyle(),\\n\\t                        {\\n\\t                            fill: colorUtil.modifyAlpha(color, 0.4),\\n\\t                            stroke: color\\n\\t                        }\\n\\t                    )\\n\\t                );\\n\\n\\t                polygon.hoverStyle = itemModel.getModel('itemStyle.normal').getItemStyle();\\n\\n\\t                var defaultValue = areaData.getName(idx) || '';\\n\\t                var textColor = color || polygon.style.fill;\\n\\n\\t                if (labelModel.getShallow('show')) {\\n\\t                    graphic.setText(polygon.style, labelModel, textColor);\\n\\t                    polygon.style.text = zrUtil.retrieve(\\n\\t                        maModel.getFormattedLabel(idx, 'normal'),\\n\\t                        defaultValue\\n\\t                    );\\n\\t                }\\n\\t                else {\\n\\t                    polygon.style.text = '';\\n\\t                }\\n\\n\\t                if (labelHoverModel.getShallow('show')) {\\n\\t                    graphic.setText(polygon.hoverStyle, labelHoverModel, textColor);\\n\\t                    polygon.hoverStyle.text = zrUtil.retrieve(\\n\\t                        maModel.getFormattedLabel(idx, 'emphasis'),\\n\\t                        defaultValue\\n\\t                    );\\n\\t                }\\n\\t                else {\\n\\t                    polygon.hoverStyle.text = '';\\n\\t                }\\n\\n\\t                graphic.setHoverStyle(polygon, {});\\n\\n\\t                polygon.dataModel = maModel;\\n\\t            });\\n\\n\\t            polygonGroup.__data = areaData;\\n\\n\\t            polygonGroup.group.silent = maModel.get('silent') || seriesModel.get('silent');\\n\\t        }\\n\\t    });\\n\\n\\t    /**\\n\\t     * @inner\\n\\t     * @param {module:echarts/coord/*} coordSys\\n\\t     * @param {module:echarts/model/Series} seriesModel\\n\\t     * @param {module:echarts/model/Model} mpModel\\n\\t     */\\n\\t    function createList(coordSys, seriesModel, maModel) {\\n\\n\\t        var coordDimsInfos;\\n\\t        var areaData;\\n\\t        var dims = ['x0', 'y0', 'x1', 'y1'];\\n\\t        if (coordSys) {\\n\\t            coordDimsInfos = zrUtil.map(coordSys && coordSys.dimensions, function (coordDim) {\\n\\t                var info = seriesModel.getData().getDimensionInfo(\\n\\t                    seriesModel.coordDimToDataDim(coordDim)[0]\\n\\t                ) || {}; // In map series data don't have lng and lat dimension. Fallback to same with coordSys\\n\\t                info.name = coordDim;\\n\\t                return info;\\n\\t            });\\n\\t            areaData = new List(zrUtil.map(dims, function (dim, idx) {\\n\\t                return {\\n\\t                    name: dim,\\n\\t                    type: coordDimsInfos[idx % 2].type\\n\\t                };\\n\\t            }), maModel);\\n\\t        }\\n\\t        else {\\n\\t            coordDimsInfos =[{\\n\\t                name: 'value',\\n\\t                type: 'float'\\n\\t            }];\\n\\t            areaData = new List(coordDimsInfos, maModel);\\n\\t        }\\n\\n\\t        var optData = zrUtil.map(maModel.get('data'), zrUtil.curry(\\n\\t            markAreaTransform, seriesModel, coordSys, maModel\\n\\t        ));\\n\\t        if (coordSys) {\\n\\t            optData = zrUtil.filter(\\n\\t                optData, zrUtil.curry(markAreaFilter, coordSys)\\n\\t            );\\n\\t        }\\n\\n\\t        var dimValueGetter = coordSys ? function (item, dimName, dataIndex, dimIndex) {\\n\\t            return item.coord[Math.floor(dimIndex / 2)][dimIndex % 2];\\n\\t        } : function (item) {\\n\\t            return item.value;\\n\\t        };\\n\\t        areaData.initData(optData, null, dimValueGetter);\\n\\t        areaData.hasItemOption = true;\\n\\t        return areaData;\\n\\t    }\\n\\n\\n/***/ },\\n/* 403 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * DataZoom component entry\\n\\t */\\n\\n\\n\\t    var echarts = __webpack_require__(1);\\n\\n\\t    echarts.registerPreprocessor(__webpack_require__(404));\\n\\n\\t    __webpack_require__(405);\\n\\t    __webpack_require__(406);\\n\\t    __webpack_require__(407);\\n\\t    __webpack_require__(409);\\n\\n\\n\\n/***/ },\\n/* 404 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * @file Timeline preprocessor\\n\\t */\\n\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\n\\t    module.exports = function (option) {\\n\\t        var timelineOpt = option && option.timeline;\\n\\n\\t        if (!zrUtil.isArray(timelineOpt)) {\\n\\t            timelineOpt = timelineOpt ? [timelineOpt] : [];\\n\\t        }\\n\\n\\t        zrUtil.each(timelineOpt, function (opt) {\\n\\t            if (!opt) {\\n\\t                return;\\n\\t            }\\n\\n\\t            compatibleEC2(opt);\\n\\t        });\\n\\t    };\\n\\n\\t    function compatibleEC2(opt) {\\n\\t        var type = opt.type;\\n\\n\\t        var ec2Types = {'number': 'value', 'time': 'time'};\\n\\n\\t        // Compatible with ec2\\n\\t        if (ec2Types[type]) {\\n\\t            opt.axisType = ec2Types[type];\\n\\t            delete opt.type;\\n\\t        }\\n\\n\\t        transferItem(opt);\\n\\n\\t        if (has(opt, 'controlPosition')) {\\n\\t            var controlStyle = opt.controlStyle || (opt.controlStyle = {});\\n\\t            if (!has(controlStyle, 'position')) {\\n\\t                controlStyle.position = opt.controlPosition;\\n\\t            }\\n\\t            if (controlStyle.position === 'none' && !has(controlStyle, 'show')) {\\n\\t                controlStyle.show = false;\\n\\t                delete controlStyle.position;\\n\\t            }\\n\\t            delete opt.controlPosition;\\n\\t        }\\n\\n\\t        zrUtil.each(opt.data || [], function (dataItem) {\\n\\t            if (zrUtil.isObject(dataItem) && !zrUtil.isArray(dataItem)) {\\n\\t                if (!has(dataItem, 'value') && has(dataItem, 'name')) {\\n\\t                    // In ec2, using name as value.\\n\\t                    dataItem.value = dataItem.name;\\n\\t                }\\n\\t                transferItem(dataItem);\\n\\t            }\\n\\t        });\\n\\t    }\\n\\n\\t    function transferItem(opt) {\\n\\t        var itemStyle = opt.itemStyle || (opt.itemStyle = {});\\n\\n\\t        var itemStyleEmphasis = itemStyle.emphasis || (itemStyle.emphasis = {});\\n\\n\\t        // Transfer label out\\n\\t        var label = opt.label || (opt.label || {});\\n\\t        var labelNormal = label.normal || (label.normal = {});\\n\\t        var excludeLabelAttr = {normal: 1, emphasis: 1};\\n\\n\\t        zrUtil.each(label, function (value, name) {\\n\\t            if (!excludeLabelAttr[name] && !has(labelNormal, name)) {\\n\\t                labelNormal[name] = value;\\n\\t            }\\n\\t        });\\n\\n\\t        if (itemStyleEmphasis.label && !has(label, 'emphasis')) {\\n\\t            label.emphasis = itemStyleEmphasis.label;\\n\\t            delete itemStyleEmphasis.label;\\n\\t        }\\n\\t    }\\n\\n\\t    function has(obj, attr) {\\n\\t        return obj.hasOwnProperty(attr);\\n\\t    }\\n\\n\\n\\n/***/ },\\n/* 405 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    __webpack_require__(69).registerSubTypeDefaulter('timeline', function () {\\n\\t        // Only slider now.\\n\\t        return 'slider';\\n\\t    });\\n\\n\\n\\n/***/ },\\n/* 406 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * @file Timeilne action\\n\\t */\\n\\n\\n\\t    var echarts = __webpack_require__(1);\\n\\t    var zrUtil = __webpack_require__(4);\\n\\n\\t    echarts.registerAction(\\n\\n\\t        {type: 'timelineChange', event: 'timelineChanged', update: 'prepareAndUpdate'},\\n\\n\\t        function (payload, ecModel) {\\n\\n\\t            var timelineModel = ecModel.getComponent('timeline');\\n\\t            if (timelineModel && payload.currentIndex != null) {\\n\\t                timelineModel.setCurrentIndex(payload.currentIndex);\\n\\n\\t                if (!timelineModel.get('loop', true) && timelineModel.isIndexMax()) {\\n\\t                    timelineModel.setPlayState(false);\\n\\t                }\\n\\t            }\\n\\n\\t            // Set normalized currentIndex to payload.\\n\\t            ecModel.resetOption('timeline');\\n\\n\\t            return zrUtil.defaults({\\n\\t                currentIndex: timelineModel.option.currentIndex\\n\\t            }, payload);\\n\\t        }\\n\\t    );\\n\\n\\t    echarts.registerAction(\\n\\n\\t        {type: 'timelinePlayChange', event: 'timelinePlayChanged', update: 'update'},\\n\\n\\t        function (payload, ecModel) {\\n\\t            var timelineModel = ecModel.getComponent('timeline');\\n\\t            if (timelineModel && payload.playState != null) {\\n\\t                timelineModel.setPlayState(payload.playState);\\n\\t            }\\n\\t        }\\n\\t    );\\n\\n\\n\\n/***/ },\\n/* 407 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * @file Silder timeline model\\n\\t */\\n\\n\\n\\t    var TimelineModel = __webpack_require__(408);\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var modelUtil = __webpack_require__(5);\\n\\n\\t    var SliderTimelineModel = TimelineModel.extend({\\n\\n\\t        type: 'timeline.slider',\\n\\n\\t        /**\\n\\t         * @protected\\n\\t         */\\n\\t        defaultOption: {\\n\\n\\t            backgroundColor: 'rgba(0,0,0,0)',   // 时间轴背景颜色\\n\\t            borderColor: '#ccc',               // 时间轴边框颜色\\n\\t            borderWidth: 0,                    // 时间轴边框线宽，单位px，默认为0（无边框）\\n\\n\\t            orient: 'horizontal',              // 'vertical'\\n\\t            inverse: false,\\n\\n\\t            tooltip: {                          // boolean or Object\\n\\t                trigger: 'item'                 // data item may also have tootip attr.\\n\\t            },\\n\\n\\t            symbol: 'emptyCircle',\\n\\t            symbolSize: 10,\\n\\n\\t            lineStyle: {\\n\\t                show: true,\\n\\t                width: 2,\\n\\t                color: '#304654'\\n\\t            },\\n\\t            label: {                            // 文本标签\\n\\t                position: 'auto',           // auto left right top bottom\\n\\t                                            // When using number, label position is not\\n\\t                                            // restricted by viewRect.\\n\\t                                            // positive: right/bottom, negative: left/top\\n\\t                normal: {\\n\\t                    show: true,\\n\\t                    interval: 'auto',\\n\\t                    rotate: 0,\\n\\t                    // formatter: null,\\n\\t                    textStyle: {                // 其余属性默认使用全局文本样式，详见TEXTSTYLE\\n\\t                        color: '#304654'\\n\\t                    }\\n\\t                },\\n\\t                emphasis: {\\n\\t                    show: true,\\n\\t                    textStyle: {                // 其余属性默认使用全局文本样式，详见TEXTSTYLE\\n\\t                        color: '#c23531'\\n\\t                    }\\n\\t                }\\n\\t            },\\n\\t            itemStyle: {\\n\\t                normal: {\\n\\t                    color: '#304654',\\n\\t                    borderWidth: 1\\n\\t                },\\n\\t                emphasis: {\\n\\t                    color: '#c23531'\\n\\t                }\\n\\t            },\\n\\n\\t            checkpointStyle: {\\n\\t                symbol: 'circle',\\n\\t                symbolSize: 13,\\n\\t                color: '#c23531',\\n\\t                borderWidth: 5,\\n\\t                borderColor: 'rgba(194,53,49, 0.5)',\\n\\t                animation: true,\\n\\t                animationDuration: 300,\\n\\t                animationEasing: 'quinticInOut'\\n\\t            },\\n\\n\\t            controlStyle: {\\n\\t                show: true,\\n\\t                showPlayBtn: true,\\n\\t                showPrevBtn: true,\\n\\t                showNextBtn: true,\\n\\t                itemSize: 22,\\n\\t                itemGap: 12,\\n\\t                position: 'left',  // 'left' 'right' 'top' 'bottom'\\n\\t                playIcon: 'path://M31.6,53C17.5,53,6,41.5,6,27.4S17.5,1.8,31.6,1.8C45.7,1.8,57.2,13.3,57.2,27.4S45.7,53,31.6,53z M31.6,3.3 C18.4,3.3,7.5,14.1,7.5,27.4c0,13.3,10.8,24.1,24.1,24.1C44.9,51.5,55.7,40.7,55.7,27.4C55.7,14.1,44.9,3.3,31.6,3.3z M24.9,21.3 c0-2.2,1.6-3.1,3.5-2l10.5,6.1c1.899,1.1,1.899,2.9,0,4l-10.5,6.1c-1.9,1.1-3.5,0.2-3.5-2V21.3z', // jshint ignore:line\\n\\t                stopIcon: 'path://M30.9,53.2C16.8,53.2,5.3,41.7,5.3,27.6S16.8,2,30.9,2C45,2,56.4,13.5,56.4,27.6S45,53.2,30.9,53.2z M30.9,3.5C17.6,3.5,6.8,14.4,6.8,27.6c0,13.3,10.8,24.1,24.101,24.1C44.2,51.7,55,40.9,55,27.6C54.9,14.4,44.1,3.5,30.9,3.5z M36.9,35.8c0,0.601-0.4,1-0.9,1h-1.3c-0.5,0-0.9-0.399-0.9-1V19.5c0-0.6,0.4-1,0.9-1H36c0.5,0,0.9,0.4,0.9,1V35.8z M27.8,35.8 c0,0.601-0.4,1-0.9,1h-1.3c-0.5,0-0.9-0.399-0.9-1V19.5c0-0.6,0.4-1,0.9-1H27c0.5,0,0.9,0.4,0.9,1L27.8,35.8L27.8,35.8z', // jshint ignore:line\\n\\t                nextIcon: 'path://M18.6,50.8l22.5-22.5c0.2-0.2,0.3-0.4,0.3-0.7c0-0.3-0.1-0.5-0.3-0.7L18.7,4.4c-0.1-0.1-0.2-0.3-0.2-0.5 c0-0.4,0.3-0.8,0.8-0.8c0.2,0,0.5,0.1,0.6,0.3l23.5,23.5l0,0c0.2,0.2,0.3,0.4,0.3,0.7c0,0.3-0.1,0.5-0.3,0.7l-0.1,0.1L19.7,52 c-0.1,0.1-0.3,0.2-0.5,0.2c-0.4,0-0.8-0.3-0.8-0.8C18.4,51.2,18.5,51,18.6,50.8z', // jshint ignore:line\\n\\t                prevIcon: 'path://M43,52.8L20.4,30.3c-0.2-0.2-0.3-0.4-0.3-0.7c0-0.3,0.1-0.5,0.3-0.7L42.9,6.4c0.1-0.1,0.2-0.3,0.2-0.5 c0-0.4-0.3-0.8-0.8-0.8c-0.2,0-0.5,0.1-0.6,0.3L18.3,28.8l0,0c-0.2,0.2-0.3,0.4-0.3,0.7c0,0.3,0.1,0.5,0.3,0.7l0.1,0.1L41.9,54 c0.1,0.1,0.3,0.2,0.5,0.2c0.4,0,0.8-0.3,0.8-0.8C43.2,53.2,43.1,53,43,52.8z', // jshint ignore:line\\n\\t                normal: {\\n\\t                    color: '#304654',\\n\\t                    borderColor: '#304654',\\n\\t                    borderWidth: 1\\n\\t                },\\n\\t                emphasis: {\\n\\t                    color: '#c23531',\\n\\t                    borderColor: '#c23531',\\n\\t                    borderWidth: 2\\n\\t                }\\n\\t            },\\n\\t            data: []\\n\\t        }\\n\\n\\t    });\\n\\n\\t    zrUtil.mixin(SliderTimelineModel, modelUtil.dataFormatMixin);\\n\\n\\t    module.exports = SliderTimelineModel;\\n\\n\\n/***/ },\\n/* 408 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * @file Timeline model\\n\\t */\\n\\n\\n\\t    var ComponentModel = __webpack_require__(69);\\n\\t    var List = __webpack_require__(98);\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var modelUtil = __webpack_require__(5);\\n\\n\\t    var TimelineModel = ComponentModel.extend({\\n\\n\\t        type: 'timeline',\\n\\n\\t        layoutMode: 'box',\\n\\n\\t        /**\\n\\t         * @protected\\n\\t         */\\n\\t        defaultOption: {\\n\\n\\t            zlevel: 0,                  // 一级层叠\\n\\t            z: 4,                       // 二级层叠\\n\\t            show: true,\\n\\n\\t            axisType: 'time',  // 模式是时间类型，支持 value, category\\n\\n\\t            realtime: true,\\n\\n\\t            left: '20%',\\n\\t            top: null,\\n\\t            right: '20%',\\n\\t            bottom: 0,\\n\\t            width: null,\\n\\t            height: 40,\\n\\t            padding: 5,\\n\\n\\t            controlPosition: 'left',           // 'left' 'right' 'top' 'bottom' 'none'\\n\\t            autoPlay: false,\\n\\t            rewind: false,                     // 反向播放\\n\\t            loop: true,\\n\\t            playInterval: 2000,                // 播放时间间隔，单位ms\\n\\n\\t            currentIndex: 0,\\n\\n\\t            itemStyle: {\\n\\t                normal: {},\\n\\t                emphasis: {}\\n\\t            },\\n\\t            label: {\\n\\t                normal: {\\n\\t                    textStyle: {\\n\\t                        color: '#000'\\n\\t                    }\\n\\t                },\\n\\t                emphasis: {}\\n\\t            },\\n\\n\\t            data: []\\n\\t        },\\n\\n\\t        /**\\n\\t         * @override\\n\\t         */\\n\\t        init: function (option, parentModel, ecModel) {\\n\\n\\t            /**\\n\\t             * @private\\n\\t             * @type {module:echarts/data/List}\\n\\t             */\\n\\t            this._data;\\n\\n\\t            /**\\n\\t             * @private\\n\\t             * @type {Array.<string>}\\n\\t             */\\n\\t            this._names;\\n\\n\\t            this.mergeDefaultAndTheme(option, ecModel);\\n\\t            this._initData();\\n\\t        },\\n\\n\\t        /**\\n\\t         * @override\\n\\t         */\\n\\t        mergeOption: function (option) {\\n\\t            TimelineModel.superApply(this, 'mergeOption', arguments);\\n\\t            this._initData();\\n\\t        },\\n\\n\\t        /**\\n\\t         * @param {number} [currentIndex]\\n\\t         */\\n\\t        setCurrentIndex: function (currentIndex) {\\n\\t            if (currentIndex == null) {\\n\\t                currentIndex = this.option.currentIndex;\\n\\t            }\\n\\t            var count = this._data.count();\\n\\n\\t            if (this.option.loop) {\\n\\t                currentIndex = (currentIndex % count + count) % count;\\n\\t            }\\n\\t            else {\\n\\t                currentIndex >= count && (currentIndex = count - 1);\\n\\t                currentIndex < 0 && (currentIndex = 0);\\n\\t            }\\n\\n\\t            this.option.currentIndex = currentIndex;\\n\\t        },\\n\\n\\t        /**\\n\\t         * @return {number} currentIndex\\n\\t         */\\n\\t        getCurrentIndex: function () {\\n\\t            return this.option.currentIndex;\\n\\t        },\\n\\n\\t        /**\\n\\t         * @return {boolean}\\n\\t         */\\n\\t        isIndexMax: function () {\\n\\t            return this.getCurrentIndex() >= this._data.count() - 1;\\n\\t        },\\n\\n\\t        /**\\n\\t         * @param {boolean} state true: play, false: stop\\n\\t         */\\n\\t        setPlayState: function (state) {\\n\\t            this.option.autoPlay = !!state;\\n\\t        },\\n\\n\\t        /**\\n\\t         * @return {boolean} true: play, false: stop\\n\\t         */\\n\\t        getPlayState: function () {\\n\\t            return !!this.option.autoPlay;\\n\\t        },\\n\\n\\t        /**\\n\\t         * @private\\n\\t         */\\n\\t        _initData: function () {\\n\\t            var thisOption = this.option;\\n\\t            var dataArr = thisOption.data || [];\\n\\t            var axisType = thisOption.axisType;\\n\\t            var names = this._names = [];\\n\\n\\t            if (axisType === 'category') {\\n\\t                var idxArr = [];\\n\\t                zrUtil.each(dataArr, function (item, index) {\\n\\t                    var value = modelUtil.getDataItemValue(item);\\n\\t                    var newItem;\\n\\n\\t                    if (zrUtil.isObject(item)) {\\n\\t                        newItem = zrUtil.clone(item);\\n\\t                        newItem.value = index;\\n\\t                    }\\n\\t                    else {\\n\\t                        newItem = index;\\n\\t                    }\\n\\n\\t                    idxArr.push(newItem);\\n\\n\\t                    if (!zrUtil.isString(value) && (value == null || isNaN(value))) {\\n\\t                        value = '';\\n\\t                    }\\n\\n\\t                    names.push(value + '');\\n\\t                });\\n\\t                dataArr = idxArr;\\n\\t            }\\n\\n\\t            var dimType = ({category: 'ordinal', time: 'time'})[axisType] || 'number';\\n\\n\\t            var data = this._data = new List([{name: 'value', type: dimType}], this);\\n\\n\\t            data.initData(dataArr, names);\\n\\t        },\\n\\n\\t        getData: function () {\\n\\t            return this._data;\\n\\t        },\\n\\n\\t        /**\\n\\t         * @public\\n\\t         * @return {Array.<string>} categoreis\\n\\t         */\\n\\t        getCategories: function () {\\n\\t            if (this.get('axisType') === 'category') {\\n\\t                return this._names.slice();\\n\\t            }\\n\\t        }\\n\\n\\t    });\\n\\n\\t    module.exports = TimelineModel;\\n\\n\\n/***/ },\\n/* 409 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * @file Silder timeline view\\n\\t */\\n\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var graphic = __webpack_require__(18);\\n\\t    var layout = __webpack_require__(71);\\n\\t    var TimelineView = __webpack_require__(410);\\n\\t    var TimelineAxis = __webpack_require__(411);\\n\\t    var symbolUtil = __webpack_require__(111);\\n\\t    var axisHelper = __webpack_require__(101);\\n\\t    var BoundingRect = __webpack_require__(9);\\n\\t    var matrix = __webpack_require__(11);\\n\\t    var numberUtil = __webpack_require__(7);\\n\\t    var formatUtil = __webpack_require__(6);\\n\\t    var encodeHTML = formatUtil.encodeHTML;\\n\\n\\t    var bind = zrUtil.bind;\\n\\t    var each = zrUtil.each;\\n\\n\\t    var PI = Math.PI;\\n\\n\\t    module.exports = TimelineView.extend({\\n\\n\\t        type: 'timeline.slider',\\n\\n\\t        init: function (ecModel, api) {\\n\\n\\t            this.api = api;\\n\\n\\t            /**\\n\\t             * @private\\n\\t             * @type {module:echarts/component/timeline/TimelineAxis}\\n\\t             */\\n\\t            this._axis;\\n\\n\\t            /**\\n\\t             * @private\\n\\t             * @type {module:zrender/core/BoundingRect}\\n\\t             */\\n\\t            this._viewRect;\\n\\n\\t            /**\\n\\t             * @type {number}\\n\\t             */\\n\\t            this._timer;\\n\\n\\t            /**\\n\\t             * @type {module:zrender/Element}\\n\\t             */\\n\\t            this._currentPointer;\\n\\n\\t            /**\\n\\t             * @type {module:zrender/container/Group}\\n\\t             */\\n\\t            this._mainGroup;\\n\\n\\t            /**\\n\\t             * @type {module:zrender/container/Group}\\n\\t             */\\n\\t            this._labelGroup;\\n\\t        },\\n\\n\\t        /**\\n\\t         * @override\\n\\t         */\\n\\t        render: function (timelineModel, ecModel, api, payload) {\\n\\t            this.model = timelineModel;\\n\\t            this.api = api;\\n\\t            this.ecModel = ecModel;\\n\\n\\t            this.group.removeAll();\\n\\n\\t            if (timelineModel.get('show', true)) {\\n\\n\\t                var layoutInfo = this._layout(timelineModel, api);\\n\\t                var mainGroup = this._createGroup('mainGroup');\\n\\t                var labelGroup = this._createGroup('labelGroup');\\n\\n\\t                /**\\n\\t                 * @private\\n\\t                 * @type {module:echarts/component/timeline/TimelineAxis}\\n\\t                 */\\n\\t                var axis = this._axis = this._createAxis(layoutInfo, timelineModel);\\n\\n\\t                timelineModel.formatTooltip = function (dataIndex) {\\n\\t                    return encodeHTML(axis.scale.getLabel(dataIndex));\\n\\t                };\\n\\n\\t                each(\\n\\t                    ['AxisLine', 'AxisTick', 'Control', 'CurrentPointer'],\\n\\t                    function (name) {\\n\\t                        this['_render' + name](layoutInfo, mainGroup, axis, timelineModel);\\n\\t                    },\\n\\t                    this\\n\\t                );\\n\\n\\t                this._renderAxisLabel(layoutInfo, labelGroup, axis, timelineModel);\\n\\t                this._position(layoutInfo, timelineModel);\\n\\t            }\\n\\n\\t            this._doPlayStop();\\n\\t        },\\n\\n\\t        /**\\n\\t         * @override\\n\\t         */\\n\\t        remove: function () {\\n\\t            this._clearTimer();\\n\\t            this.group.removeAll();\\n\\t        },\\n\\n\\t        /**\\n\\t         * @override\\n\\t         */\\n\\t        dispose: function () {\\n\\t            this._clearTimer();\\n\\t        },\\n\\n\\t        _layout: function (timelineModel, api) {\\n\\t            var labelPosOpt = timelineModel.get('label.normal.position');\\n\\t            var orient = timelineModel.get('orient');\\n\\t            var viewRect = getViewRect(timelineModel, api);\\n\\t            // Auto label offset.\\n\\t            if (labelPosOpt == null || labelPosOpt === 'auto') {\\n\\t                labelPosOpt = orient === 'horizontal'\\n\\t                    ? ((viewRect.y + viewRect.height / 2) < api.getHeight() / 2 ? '-' : '+')\\n\\t                    : ((viewRect.x + viewRect.width / 2) < api.getWidth() / 2 ? '+' : '-');\\n\\t            }\\n\\t            else if (isNaN(labelPosOpt)) {\\n\\t                labelPosOpt = ({\\n\\t                    horizontal: {top: '-', bottom: '+'},\\n\\t                    vertical: {left: '-', right: '+'}\\n\\t                })[orient][labelPosOpt];\\n\\t            }\\n\\n\\t            var labelAlignMap = {\\n\\t                horizontal: 'center',\\n\\t                vertical: (labelPosOpt >= 0 || labelPosOpt === '+') ? 'left' : 'right'\\n\\t            };\\n\\n\\t            var labelBaselineMap = {\\n\\t                horizontal: (labelPosOpt >= 0 || labelPosOpt === '+') ? 'top' : 'bottom',\\n\\t                vertical: 'middle'\\n\\t            };\\n\\t            var rotationMap = {\\n\\t                horizontal: 0,\\n\\t                vertical: PI / 2\\n\\t            };\\n\\n\\t            // Position\\n\\t            var mainLength = orient === 'vertical' ? viewRect.height : viewRect.width;\\n\\n\\t            var controlModel = timelineModel.getModel('controlStyle');\\n\\t            var showControl = controlModel.get('show');\\n\\t            var controlSize = showControl ? controlModel.get('itemSize') : 0;\\n\\t            var controlGap = showControl ? controlModel.get('itemGap') : 0;\\n\\t            var sizePlusGap = controlSize + controlGap;\\n\\n\\t            // Special label rotate.\\n\\t            var labelRotation = timelineModel.get('label.normal.rotate') || 0;\\n\\t            labelRotation = labelRotation * PI / 180; // To radian.\\n\\n\\t            var playPosition;\\n\\t            var prevBtnPosition;\\n\\t            var nextBtnPosition;\\n\\t            var axisExtent;\\n\\t            var controlPosition = controlModel.get('position', true);\\n\\t            var showControl = controlModel.get('show', true);\\n\\t            var showPlayBtn = showControl && controlModel.get('showPlayBtn', true);\\n\\t            var showPrevBtn = showControl && controlModel.get('showPrevBtn', true);\\n\\t            var showNextBtn = showControl && controlModel.get('showNextBtn', true);\\n\\t            var xLeft = 0;\\n\\t            var xRight = mainLength;\\n\\n\\t            // position[0] means left, position[1] means middle.\\n\\t            if (controlPosition === 'left' || controlPosition === 'bottom') {\\n\\t                showPlayBtn && (playPosition = [0, 0], xLeft += sizePlusGap);\\n\\t                showPrevBtn && (prevBtnPosition = [xLeft, 0], xLeft += sizePlusGap);\\n\\t                showNextBtn && (nextBtnPosition = [xRight - controlSize, 0], xRight -= sizePlusGap);\\n\\t            }\\n\\t            else { // 'top' 'right'\\n\\t                showPlayBtn && (playPosition = [xRight - controlSize, 0], xRight -= sizePlusGap);\\n\\t                showPrevBtn && (prevBtnPosition = [0, 0], xLeft += sizePlusGap);\\n\\t                showNextBtn && (nextBtnPosition = [xRight - controlSize, 0], xRight -= sizePlusGap);\\n\\t            }\\n\\t            axisExtent = [xLeft, xRight];\\n\\n\\t            if (timelineModel.get('inverse')) {\\n\\t                axisExtent.reverse();\\n\\t            }\\n\\n\\t            return {\\n\\t                viewRect: viewRect,\\n\\t                mainLength: mainLength,\\n\\t                orient: orient,\\n\\n\\t                rotation: rotationMap[orient],\\n\\t                labelRotation: labelRotation,\\n\\t                labelPosOpt: labelPosOpt,\\n\\t                labelAlign: timelineModel.get('label.normal.textStyle.align') || labelAlignMap[orient],\\n\\t                labelBaseline: timelineModel.get('label.normal.textStyle.baseline') || labelBaselineMap[orient],\\n\\n\\t                // Based on mainGroup.\\n\\t                playPosition: playPosition,\\n\\t                prevBtnPosition: prevBtnPosition,\\n\\t                nextBtnPosition: nextBtnPosition,\\n\\t                axisExtent: axisExtent,\\n\\n\\t                controlSize: controlSize,\\n\\t                controlGap: controlGap\\n\\t            };\\n\\t        },\\n\\n\\t        _position: function (layoutInfo, timelineModel) {\\n\\t            // Position is be called finally, because bounding rect is needed for\\n\\t            // adapt content to fill viewRect (auto adapt offset).\\n\\n\\t            // Timeline may be not all in the viewRect when 'offset' is specified\\n\\t            // as a number, because it is more appropriate that label aligns at\\n\\t            // 'offset' but not the other edge defined by viewRect.\\n\\n\\t            var mainGroup = this._mainGroup;\\n\\t            var labelGroup = this._labelGroup;\\n\\n\\t            var viewRect = layoutInfo.viewRect;\\n\\t            if (layoutInfo.orient === 'vertical') {\\n\\t                // transfrom to horizontal, inverse rotate by left-top point.\\n\\t                var m = matrix.create();\\n\\t                var rotateOriginX = viewRect.x;\\n\\t                var rotateOriginY = viewRect.y + viewRect.height;\\n\\t                matrix.translate(m, m, [-rotateOriginX, -rotateOriginY]);\\n\\t                matrix.rotate(m, m, -PI / 2);\\n\\t                matrix.translate(m, m, [rotateOriginX, rotateOriginY]);\\n\\t                viewRect = viewRect.clone();\\n\\t                viewRect.applyTransform(m);\\n\\t            }\\n\\n\\t            var viewBound = getBound(viewRect);\\n\\t            var mainBound = getBound(mainGroup.getBoundingRect());\\n\\t            var labelBound = getBound(labelGroup.getBoundingRect());\\n\\n\\t            var mainPosition = mainGroup.position;\\n\\t            var labelsPosition = labelGroup.position;\\n\\n\\t            labelsPosition[0] = mainPosition[0] = viewBound[0][0];\\n\\n\\t            var labelPosOpt = layoutInfo.labelPosOpt;\\n\\n\\t            if (isNaN(labelPosOpt)) { // '+' or '-'\\n\\t                var mainBoundIdx = labelPosOpt === '+' ? 0 : 1;\\n\\t                toBound(mainPosition, mainBound, viewBound, 1, mainBoundIdx);\\n\\t                toBound(labelsPosition, labelBound, viewBound, 1, 1 - mainBoundIdx);\\n\\t            }\\n\\t            else {\\n\\t                var mainBoundIdx = labelPosOpt >= 0 ? 0 : 1;\\n\\t                toBound(mainPosition, mainBound, viewBound, 1, mainBoundIdx);\\n\\t                labelsPosition[1] = mainPosition[1] + labelPosOpt;\\n\\t            }\\n\\n\\t            mainGroup.attr('position', mainPosition);\\n\\t            labelGroup.attr('position', labelsPosition);\\n\\t            mainGroup.rotation = labelGroup.rotation = layoutInfo.rotation;\\n\\n\\t            setOrigin(mainGroup);\\n\\t            setOrigin(labelGroup);\\n\\n\\t            function setOrigin(targetGroup) {\\n\\t                var pos = targetGroup.position;\\n\\t                targetGroup.origin = [\\n\\t                    viewBound[0][0] - pos[0],\\n\\t                    viewBound[1][0] - pos[1]\\n\\t                ];\\n\\t            }\\n\\n\\t            function getBound(rect) {\\n\\t                // [[xmin, xmax], [ymin, ymax]]\\n\\t                return [\\n\\t                    [rect.x, rect.x + rect.width],\\n\\t                    [rect.y, rect.y + rect.height]\\n\\t                ];\\n\\t            }\\n\\n\\t            function toBound(fromPos, from, to, dimIdx, boundIdx) {\\n\\t                fromPos[dimIdx] += to[dimIdx][boundIdx] - from[dimIdx][boundIdx];\\n\\t            }\\n\\t        },\\n\\n\\t        _createAxis: function (layoutInfo, timelineModel) {\\n\\t            var data = timelineModel.getData();\\n\\t            var axisType = timelineModel.get('axisType');\\n\\n\\t            var scale = axisHelper.createScaleByModel(timelineModel, axisType);\\n\\t            var dataExtent = data.getDataExtent('value');\\n\\t            scale.setExtent(dataExtent[0], dataExtent[1]);\\n\\t            this._customizeScale(scale, data);\\n\\t            scale.niceTicks();\\n\\n\\t            var axis = new TimelineAxis('value', scale, layoutInfo.axisExtent, axisType);\\n\\t            axis.model = timelineModel;\\n\\n\\t            return axis;\\n\\t        },\\n\\n\\t        _customizeScale: function (scale, data) {\\n\\n\\t            scale.getTicks = function () {\\n\\t                return data.mapArray(['value'], function (value) {\\n\\t                    return value;\\n\\t                });\\n\\t            };\\n\\n\\t            scale.getTicksLabels = function () {\\n\\t                return zrUtil.map(this.getTicks(), scale.getLabel, scale);\\n\\t            };\\n\\t        },\\n\\n\\t        _createGroup: function (name) {\\n\\t            var newGroup = this['_' + name] = new graphic.Group();\\n\\t            this.group.add(newGroup);\\n\\t            return newGroup;\\n\\t        },\\n\\n\\t        _renderAxisLine: function (layoutInfo, group, axis, timelineModel) {\\n\\t            var axisExtent = axis.getExtent();\\n\\n\\t            if (!timelineModel.get('lineStyle.show')) {\\n\\t                return;\\n\\t            }\\n\\n\\t            group.add(new graphic.Line({\\n\\t                shape: {\\n\\t                    x1: axisExtent[0], y1: 0,\\n\\t                    x2: axisExtent[1], y2: 0\\n\\t                },\\n\\t                style: zrUtil.extend(\\n\\t                    {lineCap: 'round'},\\n\\t                    timelineModel.getModel('lineStyle').getLineStyle()\\n\\t                ),\\n\\t                silent: true,\\n\\t                z2: 1\\n\\t            }));\\n\\t        },\\n\\n\\t        /**\\n\\t         * @private\\n\\t         */\\n\\t        _renderAxisTick: function (layoutInfo, group, axis, timelineModel) {\\n\\t            var data = timelineModel.getData();\\n\\t            var ticks = axis.scale.getTicks();\\n\\n\\t            each(ticks, function (value, dataIndex) {\\n\\n\\t                var tickCoord = axis.dataToCoord(value);\\n\\t                var itemModel = data.getItemModel(dataIndex);\\n\\t                var itemStyleModel = itemModel.getModel('itemStyle.normal');\\n\\t                var hoverStyleModel = itemModel.getModel('itemStyle.emphasis');\\n\\t                var symbolOpt = {\\n\\t                    position: [tickCoord, 0],\\n\\t                    onclick: bind(this._changeTimeline, this, dataIndex)\\n\\t                };\\n\\t                var el = giveSymbol(itemModel, itemStyleModel, group, symbolOpt);\\n\\t                graphic.setHoverStyle(el, hoverStyleModel.getItemStyle());\\n\\n\\t                if (itemModel.get('tooltip')) {\\n\\t                    el.dataIndex = dataIndex;\\n\\t                    el.dataModel = timelineModel;\\n\\t                }\\n\\t                else {\\n\\t                    el.dataIndex = el.dataModel = null;\\n\\t                }\\n\\n\\t            }, this);\\n\\t        },\\n\\n\\t        /**\\n\\t         * @private\\n\\t         */\\n\\t        _renderAxisLabel: function (layoutInfo, group, axis, timelineModel) {\\n\\t            var labelModel = timelineModel.getModel('label.normal');\\n\\n\\t            if (!labelModel.get('show')) {\\n\\t                return;\\n\\t            }\\n\\n\\t            var data = timelineModel.getData();\\n\\t            var ticks = axis.scale.getTicks();\\n\\t            var labels = axisHelper.getFormattedLabels(\\n\\t                axis, labelModel.get('formatter')\\n\\t            );\\n\\t            var labelInterval = axis.getLabelInterval();\\n\\n\\t            each(ticks, function (tick, dataIndex) {\\n\\t                if (axis.isLabelIgnored(dataIndex, labelInterval)) {\\n\\t                    return;\\n\\t                }\\n\\n\\t                var itemModel = data.getItemModel(dataIndex);\\n\\t                var itemTextStyleModel = itemModel.getModel('label.normal.textStyle');\\n\\t                var hoverTextStyleModel = itemModel.getModel('label.emphasis.textStyle');\\n\\t                var tickCoord = axis.dataToCoord(tick);\\n\\t                var textEl = new graphic.Text({\\n\\t                    style: {\\n\\t                        text: labels[dataIndex],\\n\\t                        textAlign: layoutInfo.labelAlign,\\n\\t                        textVerticalAlign: layoutInfo.labelBaseline,\\n\\t                        textFont: itemTextStyleModel.getFont(),\\n\\t                        fill: itemTextStyleModel.getTextColor()\\n\\t                    },\\n\\t                    position: [tickCoord, 0],\\n\\t                    rotation: layoutInfo.labelRotation - layoutInfo.rotation,\\n\\t                    onclick: bind(this._changeTimeline, this, dataIndex),\\n\\t                    silent: false\\n\\t                });\\n\\n\\t                group.add(textEl);\\n\\t                graphic.setHoverStyle(textEl, hoverTextStyleModel.getItemStyle());\\n\\n\\t            }, this);\\n\\t        },\\n\\n\\t        /**\\n\\t         * @private\\n\\t         */\\n\\t        _renderControl: function (layoutInfo, group, axis, timelineModel) {\\n\\t            var controlSize = layoutInfo.controlSize;\\n\\t            var rotation = layoutInfo.rotation;\\n\\n\\t            var itemStyle = timelineModel.getModel('controlStyle.normal').getItemStyle();\\n\\t            var hoverStyle = timelineModel.getModel('controlStyle.emphasis').getItemStyle();\\n\\t            var rect = [0, -controlSize / 2, controlSize, controlSize];\\n\\t            var playState = timelineModel.getPlayState();\\n\\t            var inverse = timelineModel.get('inverse', true);\\n\\n\\t            makeBtn(\\n\\t                layoutInfo.nextBtnPosition,\\n\\t                'controlStyle.nextIcon',\\n\\t                bind(this._changeTimeline, this, inverse ? '-' : '+')\\n\\t            );\\n\\t            makeBtn(\\n\\t                layoutInfo.prevBtnPosition,\\n\\t                'controlStyle.prevIcon',\\n\\t                bind(this._changeTimeline, this, inverse ? '+' : '-')\\n\\t            );\\n\\t            makeBtn(\\n\\t                layoutInfo.playPosition,\\n\\t                'controlStyle.' + (playState ? 'stopIcon' : 'playIcon'),\\n\\t                bind(this._handlePlayClick, this, !playState),\\n\\t                true\\n\\t            );\\n\\n\\t            function makeBtn(position, iconPath, onclick, willRotate) {\\n\\t                if (!position) {\\n\\t                    return;\\n\\t                }\\n\\t                var opt = {\\n\\t                    position: position,\\n\\t                    origin: [controlSize / 2, 0],\\n\\t                    rotation: willRotate ? -rotation : 0,\\n\\t                    rectHover: true,\\n\\t                    style: itemStyle,\\n\\t                    onclick: onclick\\n\\t                };\\n\\t                var btn = makeIcon(timelineModel, iconPath, rect, opt);\\n\\t                group.add(btn);\\n\\t                graphic.setHoverStyle(btn, hoverStyle);\\n\\t            }\\n\\t        },\\n\\n\\t        _renderCurrentPointer: function (layoutInfo, group, axis, timelineModel) {\\n\\t            var data = timelineModel.getData();\\n\\t            var currentIndex = timelineModel.getCurrentIndex();\\n\\t            var pointerModel = data.getItemModel(currentIndex).getModel('checkpointStyle');\\n\\t            var me = this;\\n\\n\\t            var callback = {\\n\\t                onCreate: function (pointer) {\\n\\t                    pointer.draggable = true;\\n\\t                    pointer.drift = bind(me._handlePointerDrag, me);\\n\\t                    pointer.ondragend = bind(me._handlePointerDragend, me);\\n\\t                    pointerMoveTo(pointer, currentIndex, axis, timelineModel, true);\\n\\t                },\\n\\t                onUpdate: function (pointer) {\\n\\t                    pointerMoveTo(pointer, currentIndex, axis, timelineModel);\\n\\t                }\\n\\t            };\\n\\n\\t            // Reuse when exists, for animation and drag.\\n\\t            this._currentPointer = giveSymbol(\\n\\t                pointerModel, pointerModel, this._mainGroup, {}, this._currentPointer, callback\\n\\t            );\\n\\t        },\\n\\n\\t        _handlePlayClick: function (nextState) {\\n\\t            this._clearTimer();\\n\\t            this.api.dispatchAction({\\n\\t                type: 'timelinePlayChange',\\n\\t                playState: nextState,\\n\\t                from: this.uid\\n\\t            });\\n\\t        },\\n\\n\\t        _handlePointerDrag: function (dx, dy, e) {\\n\\t            this._clearTimer();\\n\\t            this._pointerChangeTimeline([e.offsetX, e.offsetY]);\\n\\t        },\\n\\n\\t        _handlePointerDragend: function (e) {\\n\\t            this._pointerChangeTimeline([e.offsetX, e.offsetY], true);\\n\\t        },\\n\\n\\t        _pointerChangeTimeline: function (mousePos, trigger) {\\n\\t            var toCoord = this._toAxisCoord(mousePos)[0];\\n\\n\\t            var axis = this._axis;\\n\\t            var axisExtent = numberUtil.asc(axis.getExtent().slice());\\n\\n\\t            toCoord > axisExtent[1] && (toCoord = axisExtent[1]);\\n\\t            toCoord < axisExtent[0] && (toCoord = axisExtent[0]);\\n\\n\\t            this._currentPointer.position[0] = toCoord;\\n\\t            this._currentPointer.dirty();\\n\\n\\t            var targetDataIndex = this._findNearestTick(toCoord);\\n\\t            var timelineModel = this.model;\\n\\n\\t            if (trigger || (\\n\\t                targetDataIndex !== timelineModel.getCurrentIndex()\\n\\t                && timelineModel.get('realtime')\\n\\t            )) {\\n\\t                this._changeTimeline(targetDataIndex);\\n\\t            }\\n\\t        },\\n\\n\\t        _doPlayStop: function () {\\n\\t            this._clearTimer();\\n\\n\\t            if (this.model.getPlayState()) {\\n\\t                this._timer = setTimeout(\\n\\t                    bind(handleFrame, this),\\n\\t                    this.model.get('playInterval')\\n\\t                );\\n\\t            }\\n\\n\\t            function handleFrame() {\\n\\t                // Do not cache\\n\\t                var timelineModel = this.model;\\n\\t                this._changeTimeline(\\n\\t                    timelineModel.getCurrentIndex()\\n\\t                    + (timelineModel.get('rewind', true) ? -1 : 1)\\n\\t                );\\n\\t            }\\n\\t        },\\n\\n\\t        _toAxisCoord: function (vertex) {\\n\\t            var trans = this._mainGroup.getLocalTransform();\\n\\t            return graphic.applyTransform(vertex, trans, true);\\n\\t        },\\n\\n\\t        _findNearestTick: function (axisCoord) {\\n\\t            var data = this.model.getData();\\n\\t            var dist = Infinity;\\n\\t            var targetDataIndex;\\n\\t            var axis = this._axis;\\n\\n\\t            data.each(['value'], function (value, dataIndex) {\\n\\t                var coord = axis.dataToCoord(value);\\n\\t                var d = Math.abs(coord - axisCoord);\\n\\t                if (d < dist) {\\n\\t                    dist = d;\\n\\t                    targetDataIndex = dataIndex;\\n\\t                }\\n\\t            });\\n\\n\\t            return targetDataIndex;\\n\\t        },\\n\\n\\t        _clearTimer: function () {\\n\\t            if (this._timer) {\\n\\t                clearTimeout(this._timer);\\n\\t                this._timer = null;\\n\\t            }\\n\\t        },\\n\\n\\t        _changeTimeline: function (nextIndex) {\\n\\t            var currentIndex = this.model.getCurrentIndex();\\n\\n\\t            if (nextIndex === '+') {\\n\\t                nextIndex = currentIndex + 1;\\n\\t            }\\n\\t            else if (nextIndex === '-') {\\n\\t                nextIndex = currentIndex - 1;\\n\\t            }\\n\\n\\t            this.api.dispatchAction({\\n\\t                type: 'timelineChange',\\n\\t                currentIndex: nextIndex,\\n\\t                from: this.uid\\n\\t            });\\n\\t        }\\n\\n\\t    });\\n\\n\\t    function getViewRect(model, api) {\\n\\t        return layout.getLayoutRect(\\n\\t            model.getBoxLayoutParams(),\\n\\t            {\\n\\t                width: api.getWidth(),\\n\\t                height: api.getHeight()\\n\\t            },\\n\\t            model.get('padding')\\n\\t        );\\n\\t    }\\n\\n\\t    function makeIcon(timelineModel, objPath, rect, opts) {\\n\\t        var icon = graphic.makePath(\\n\\t            timelineModel.get(objPath).replace(/^path:\\\\/\\\\//, ''),\\n\\t            zrUtil.clone(opts || {}),\\n\\t            new BoundingRect(rect[0], rect[1], rect[2], rect[3]),\\n\\t            'center'\\n\\t        );\\n\\n\\t        return icon;\\n\\t    }\\n\\n\\t    /**\\n\\t     * Create symbol or update symbol\\n\\t     * opt: basic position and event handlers\\n\\t     */\\n\\t    function giveSymbol(hostModel, itemStyleModel, group, opt, symbol, callback) {\\n\\t        var color = itemStyleModel.get('color');\\n\\n\\t        if (!symbol) {\\n\\t            var symbolType = hostModel.get('symbol');\\n\\t            symbol = symbolUtil.createSymbol(symbolType, -1, -1, 2, 2, color);\\n\\t            symbol.setStyle('strokeNoScale', true);\\n\\t            group.add(symbol);\\n\\t            callback && callback.onCreate(symbol);\\n\\t        }\\n\\t        else {\\n\\t            symbol.setColor(color);\\n\\t            group.add(symbol); // Group may be new, also need to add.\\n\\t            callback && callback.onUpdate(symbol);\\n\\t        }\\n\\n\\t        // Style\\n\\t        var itemStyle = itemStyleModel.getItemStyle(['color', 'symbol', 'symbolSize']);\\n\\t        symbol.setStyle(itemStyle);\\n\\n\\t        // Transform and events.\\n\\t        opt = zrUtil.merge({\\n\\t            rectHover: true,\\n\\t            z2: 100\\n\\t        }, opt, true);\\n\\n\\t        var symbolSize = hostModel.get('symbolSize');\\n\\t        symbolSize = symbolSize instanceof Array\\n\\t            ? symbolSize.slice()\\n\\t            : [+symbolSize, +symbolSize];\\n\\t        symbolSize[0] /= 2;\\n\\t        symbolSize[1] /= 2;\\n\\t        opt.scale = symbolSize;\\n\\n\\t        var symbolOffset = hostModel.get('symbolOffset');\\n\\t        if (symbolOffset) {\\n\\t            var pos = opt.position = opt.position || [0, 0];\\n\\t            pos[0] += numberUtil.parsePercent(symbolOffset[0], symbolSize[0]);\\n\\t            pos[1] += numberUtil.parsePercent(symbolOffset[1], symbolSize[1]);\\n\\t        }\\n\\n\\t        var symbolRotate = hostModel.get('symbolRotate');\\n\\t        opt.rotation = (symbolRotate || 0) * Math.PI / 180 || 0;\\n\\n\\t        symbol.attr(opt);\\n\\n\\t        // FIXME\\n\\t        // (1) When symbol.style.strokeNoScale is true and updateTransform is not performed,\\n\\t        // getBoundingRect will return wrong result.\\n\\t        // (This is supposed to be resolved in zrender, but it is a little difficult to\\n\\t        // leverage performance and auto updateTransform)\\n\\t        // (2) All of ancesters of symbol do not scale, so we can just updateTransform symbol.\\n\\t        symbol.updateTransform();\\n\\n\\t        return symbol;\\n\\t    }\\n\\n\\t    function pointerMoveTo(pointer, dataIndex, axis, timelineModel, noAnimation) {\\n\\t        if (pointer.dragging) {\\n\\t            return;\\n\\t        }\\n\\n\\t        var pointerModel = timelineModel.getModel('checkpointStyle');\\n\\t        var toCoord = axis.dataToCoord(timelineModel.getData().get(['value'], dataIndex));\\n\\n\\t        if (noAnimation || !pointerModel.get('animation', true)) {\\n\\t            pointer.attr({position: [toCoord, 0]});\\n\\t        }\\n\\t        else {\\n\\t            pointer.stopAnimation(true);\\n\\t            pointer.animateTo(\\n\\t                {position: [toCoord, 0]},\\n\\t                pointerModel.get('animationDuration', true),\\n\\t                pointerModel.get('animationEasing', true)\\n\\t            );\\n\\t        }\\n\\t    }\\n\\n\\n\\n/***/ },\\n/* 410 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * @file Timeline view\\n\\t */\\n\\n\\n\\t    // var zrUtil = require('zrender/lib/core/util');\\n\\t    // var graphic = require('../../util/graphic');\\n\\t    var ComponentView = __webpack_require__(79);\\n\\n\\t    module.exports = ComponentView.extend({\\n\\n\\t        type: 'timeline'\\n\\t    });\\n\\n\\n\\n/***/ },\\n/* 411 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var Axis = __webpack_require__(100);\\n\\t    var axisHelper = __webpack_require__(101);\\n\\n\\t    /**\\n\\t     * Extend axis 2d\\n\\t     * @constructor module:echarts/coord/cartesian/Axis2D\\n\\t     * @extends {module:echarts/coord/cartesian/Axis}\\n\\t     * @param {string} dim\\n\\t     * @param {*} scale\\n\\t     * @param {Array.<number>} coordExtent\\n\\t     * @param {string} axisType\\n\\t     * @param {string} position\\n\\t     */\\n\\t    var TimelineAxis = function (dim, scale, coordExtent, axisType) {\\n\\n\\t        Axis.call(this, dim, scale, coordExtent);\\n\\n\\t        /**\\n\\t         * Axis type\\n\\t         *  - 'category'\\n\\t         *  - 'value'\\n\\t         *  - 'time'\\n\\t         *  - 'log'\\n\\t         * @type {string}\\n\\t         */\\n\\t        this.type = axisType || 'value';\\n\\n\\t        /**\\n\\t         * @private\\n\\t         * @type {number}\\n\\t         */\\n\\t        this._autoLabelInterval;\\n\\n\\t        /**\\n\\t         * Axis model\\n\\t         * @param {module:echarts/component/TimelineModel}\\n\\t         */\\n\\t        this.model = null;\\n\\t    };\\n\\n\\t    TimelineAxis.prototype = {\\n\\n\\t        constructor: TimelineAxis,\\n\\n\\t        /**\\n\\t         * @public\\n\\t         * @return {number}\\n\\t         */\\n\\t        getLabelInterval: function () {\\n\\t            var timelineModel = this.model;\\n\\t            var labelModel = timelineModel.getModel('label.normal');\\n\\t            var labelInterval = labelModel.get('interval');\\n\\n\\t            if (labelInterval != null && labelInterval != 'auto') {\\n\\t                return labelInterval;\\n\\t            }\\n\\n\\t            var labelInterval = this._autoLabelInterval;\\n\\n\\t            if (!labelInterval) {\\n\\t                labelInterval = this._autoLabelInterval = axisHelper.getAxisLabelInterval(\\n\\t                    zrUtil.map(this.scale.getTicks(), this.dataToCoord, this),\\n\\t                    axisHelper.getFormattedLabels(this, labelModel.get('formatter')),\\n\\t                    labelModel.getModel('textStyle').getFont(),\\n\\t                    timelineModel.get('orient') === 'horizontal'\\n\\t                );\\n\\t            }\\n\\n\\t            return labelInterval;\\n\\t        },\\n\\n\\t        /**\\n\\t         * If label is ignored.\\n\\t         * Automatically used when axis is category and label can not be all shown\\n\\t         * @public\\n\\t         * @param  {number} idx\\n\\t         * @return {boolean}\\n\\t         */\\n\\t        isLabelIgnored: function (idx) {\\n\\t            if (this.type === 'category') {\\n\\t                var labelInterval = this.getLabelInterval();\\n\\t                return ((typeof labelInterval === 'function')\\n\\t                    && !labelInterval(idx, this.scale.getLabel(idx)))\\n\\t                    || idx % (labelInterval + 1);\\n\\t            }\\n\\t        }\\n\\n\\t    };\\n\\n\\t    zrUtil.inherits(TimelineAxis, Axis);\\n\\n\\t    module.exports = TimelineAxis;\\n\\n\\n/***/ },\\n/* 412 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    __webpack_require__(413);\\n\\t    __webpack_require__(414);\\n\\n\\t    __webpack_require__(415);\\n\\t    __webpack_require__(416);\\n\\t    __webpack_require__(417);\\n\\t    __webpack_require__(418);\\n\\t    __webpack_require__(423);\\n\\n\\n/***/ },\\n/* 413 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var featureManager = __webpack_require__(357);\\n\\t    var zrUtil = __webpack_require__(4);\\n\\n\\t    var ToolboxModel = __webpack_require__(1).extendComponentModel({\\n\\n\\t        type: 'toolbox',\\n\\n\\t        layoutMode: {\\n\\t            type: 'box',\\n\\t            ignoreSize: true\\n\\t        },\\n\\n\\t        mergeDefaultAndTheme: function (option) {\\n\\t            ToolboxModel.superApply(this, 'mergeDefaultAndTheme', arguments);\\n\\n\\t            zrUtil.each(this.option.feature, function (featureOpt, featureName) {\\n\\t                var Feature = featureManager.get(featureName);\\n\\t                Feature && zrUtil.merge(featureOpt, Feature.defaultOption);\\n\\t            });\\n\\t        },\\n\\n\\t        defaultOption: {\\n\\n\\t            show: true,\\n\\n\\t            z: 6,\\n\\n\\t            zlevel: 0,\\n\\n\\t            orient: 'horizontal',\\n\\n\\t            left: 'right',\\n\\n\\t            top: 'top',\\n\\n\\t            // right\\n\\t            // bottom\\n\\n\\t            backgroundColor: 'transparent',\\n\\n\\t            borderColor: '#ccc',\\n\\n\\t            borderWidth: 0,\\n\\n\\t            padding: 5,\\n\\n\\t            itemSize: 15,\\n\\n\\t            itemGap: 8,\\n\\n\\t            showTitle: true,\\n\\n\\t            iconStyle: {\\n\\t                normal: {\\n\\t                    borderColor: '#666',\\n\\t                    color: 'none'\\n\\t                },\\n\\t                emphasis: {\\n\\t                    borderColor: '#3E98C5'\\n\\t                }\\n\\t            }\\n\\t            // textStyle: {},\\n\\n\\t            // feature\\n\\t        }\\n\\t    });\\n\\n\\t    module.exports = ToolboxModel;\\n\\n\\n/***/ },\\n/* 414 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/* WEBPACK VAR INJECTION */(function(process) {\\n\\n\\t    var featureManager = __webpack_require__(357);\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var graphic = __webpack_require__(18);\\n\\t    var Model = __webpack_require__(12);\\n\\t    var DataDiffer = __webpack_require__(99);\\n\\t    var listComponentHelper = __webpack_require__(325);\\n\\t    var textContain = __webpack_require__(8);\\n\\n\\t    module.exports = __webpack_require__(1).extendComponentView({\\n\\n\\t        type: 'toolbox',\\n\\n\\t        render: function (toolboxModel, ecModel, api, payload) {\\n\\t            var group = this.group;\\n\\t            group.removeAll();\\n\\n\\t            if (!toolboxModel.get('show')) {\\n\\t                return;\\n\\t            }\\n\\n\\t            var itemSize = +toolboxModel.get('itemSize');\\n\\t            var featureOpts = toolboxModel.get('feature') || {};\\n\\t            var features = this._features || (this._features = {});\\n\\n\\t            var featureNames = [];\\n\\t            zrUtil.each(featureOpts, function (opt, name) {\\n\\t                featureNames.push(name);\\n\\t            });\\n\\n\\t            (new DataDiffer(this._featureNames || [], featureNames))\\n\\t                .add(process)\\n\\t                .update(process)\\n\\t                .remove(zrUtil.curry(process, null))\\n\\t                .execute();\\n\\n\\t            // Keep for diff.\\n\\t            this._featureNames = featureNames;\\n\\n\\t            function process(newIndex, oldIndex) {\\n\\t                var featureName = featureNames[newIndex];\\n\\t                var oldName = featureNames[oldIndex];\\n\\t                var featureOpt = featureOpts[featureName];\\n\\t                var featureModel = new Model(featureOpt, toolboxModel, toolboxModel.ecModel);\\n\\t                var feature;\\n\\n\\t                if (featureName && !oldName) { // Create\\n\\t                    if (isUserFeatureName(featureName)) {\\n\\t                        feature = {\\n\\t                            model: featureModel,\\n\\t                            onclick: featureModel.option.onclick,\\n\\t                            featureName: featureName\\n\\t                        };\\n\\t                    }\\n\\t                    else {\\n\\t                        var Feature = featureManager.get(featureName);\\n\\t                        if (!Feature) {\\n\\t                            return;\\n\\t                        }\\n\\t                        feature = new Feature(featureModel, ecModel, api);\\n\\t                    }\\n\\t                    features[featureName] = feature;\\n\\t                }\\n\\t                else {\\n\\t                    feature = features[oldName];\\n\\t                    // If feature does not exsit.\\n\\t                    if (!feature) {\\n\\t                        return;\\n\\t                    }\\n\\t                    feature.model = featureModel;\\n\\t                    feature.ecModel = ecModel;\\n\\t                    feature.api = api;\\n\\t                }\\n\\n\\t                if (!featureName && oldName) {\\n\\t                    feature.dispose && feature.dispose(ecModel, api);\\n\\t                    return;\\n\\t                }\\n\\n\\t                if (!featureModel.get('show') || feature.unusable) {\\n\\t                    feature.remove && feature.remove(ecModel, api);\\n\\t                    return;\\n\\t                }\\n\\n\\t                createIconPaths(featureModel, feature, featureName);\\n\\n\\t                featureModel.setIconStatus = function (iconName, status) {\\n\\t                    var option = this.option;\\n\\t                    var iconPaths = this.iconPaths;\\n\\t                    option.iconStatus = option.iconStatus || {};\\n\\t                    option.iconStatus[iconName] = status;\\n\\t                    // FIXME\\n\\t                    iconPaths[iconName] && iconPaths[iconName].trigger(status);\\n\\t                };\\n\\n\\t                if (feature.render) {\\n\\t                    feature.render(featureModel, ecModel, api, payload);\\n\\t                }\\n\\t            }\\n\\n\\t            function createIconPaths(featureModel, feature, featureName) {\\n\\t                var iconStyleModel = featureModel.getModel('iconStyle');\\n\\n\\t                // If one feature has mutiple icon. they are orginaized as\\n\\t                // {\\n\\t                //     icon: {\\n\\t                //         foo: '',\\n\\t                //         bar: ''\\n\\t                //     },\\n\\t                //     title: {\\n\\t                //         foo: '',\\n\\t                //         bar: ''\\n\\t                //     }\\n\\t                // }\\n\\t                var icons = feature.getIcons ? feature.getIcons() : featureModel.get('icon');\\n\\t                var titles = featureModel.get('title') || {};\\n\\t                if (typeof icons === 'string') {\\n\\t                    var icon = icons;\\n\\t                    var title = titles;\\n\\t                    icons = {};\\n\\t                    titles = {};\\n\\t                    icons[featureName] = icon;\\n\\t                    titles[featureName] = title;\\n\\t                }\\n\\t                var iconPaths = featureModel.iconPaths = {};\\n\\t                zrUtil.each(icons, function (icon, iconName) {\\n\\t                    var normalStyle = iconStyleModel.getModel('normal').getItemStyle();\\n\\t                    var hoverStyle = iconStyleModel.getModel('emphasis').getItemStyle();\\n\\n\\t                    var style = {\\n\\t                        x: -itemSize / 2,\\n\\t                        y: -itemSize / 2,\\n\\t                        width: itemSize,\\n\\t                        height: itemSize\\n\\t                    };\\n\\t                    var path = icon.indexOf('image://') === 0\\n\\t                        ? (\\n\\t                            style.image = icon.slice(8),\\n\\t                            new graphic.Image({style: style})\\n\\t                        )\\n\\t                        : graphic.makePath(\\n\\t                            icon.replace('path://', ''),\\n\\t                            {\\n\\t                                style: normalStyle,\\n\\t                                hoverStyle: hoverStyle,\\n\\t                                rectHover: true\\n\\t                            },\\n\\t                            style,\\n\\t                            'center'\\n\\t                        );\\n\\n\\t                    graphic.setHoverStyle(path);\\n\\n\\t                    if (toolboxModel.get('showTitle')) {\\n\\t                        path.__title = titles[iconName];\\n\\t                        path.on('mouseover', function () {\\n\\t                                // Should not reuse above hoverStyle, which might be modified.\\n\\t                                var hoverStyle = iconStyleModel.getModel('emphasis').getItemStyle();\\n\\t                                path.setStyle({\\n\\t                                    text: titles[iconName],\\n\\t                                    textPosition: hoverStyle.textPosition || 'bottom',\\n\\t                                    textFill: hoverStyle.fill || hoverStyle.stroke || '#000',\\n\\t                                    textAlign: hoverStyle.textAlign || 'center'\\n\\t                                });\\n\\t                            })\\n\\t                            .on('mouseout', function () {\\n\\t                                path.setStyle({\\n\\t                                    textFill: null\\n\\t                                });\\n\\t                            });\\n\\t                    }\\n\\t                    path.trigger(featureModel.get('iconStatus.' + iconName) || 'normal');\\n\\n\\t                    group.add(path);\\n\\t                    path.on('click', zrUtil.bind(\\n\\t                        feature.onclick, feature, ecModel, api, iconName\\n\\t                    ));\\n\\n\\t                    iconPaths[iconName] = path;\\n\\t                });\\n\\t            }\\n\\n\\t            listComponentHelper.layout(group, toolboxModel, api);\\n\\t            // Render background after group is layout\\n\\t            // FIXME\\n\\t            listComponentHelper.addBackground(group, toolboxModel);\\n\\n\\t            // Adjust icon title positions to avoid them out of screen\\n\\t            group.eachChild(function (icon) {\\n\\t                var titleText = icon.__title;\\n\\t                var hoverStyle = icon.hoverStyle;\\n\\t                // May be background element\\n\\t                if (hoverStyle && titleText) {\\n\\t                    var rect = textContain.getBoundingRect(\\n\\t                        titleText, hoverStyle.font\\n\\t                    );\\n\\t                    var offsetX = icon.position[0] + group.position[0];\\n\\t                    var offsetY = icon.position[1] + group.position[1] + itemSize;\\n\\n\\t                    var needPutOnTop = false;\\n\\t                    if (offsetY + rect.height > api.getHeight()) {\\n\\t                        hoverStyle.textPosition = 'top';\\n\\t                        needPutOnTop = true;\\n\\t                    }\\n\\t                    var topOffset = needPutOnTop ? (-5 - rect.height) : (itemSize + 8);\\n\\t                    if (offsetX + rect.width /  2 > api.getWidth()) {\\n\\t                        hoverStyle.textPosition = ['100%', topOffset];\\n\\t                        hoverStyle.textAlign = 'right';\\n\\t                    }\\n\\t                    else if (offsetX - rect.width / 2 < 0) {\\n\\t                        hoverStyle.textPosition = [0, topOffset];\\n\\t                        hoverStyle.textAlign = 'left';\\n\\t                    }\\n\\t                }\\n\\t            });\\n\\t        },\\n\\n\\t        updateView: function (toolboxModel, ecModel, api, payload) {\\n\\t            zrUtil.each(this._features, function (feature) {\\n\\t                feature.updateView && feature.updateView(feature.model, ecModel, api, payload);\\n\\t            });\\n\\t        },\\n\\n\\t        updateLayout: function (toolboxModel, ecModel, api, payload) {\\n\\t            zrUtil.each(this._features, function (feature) {\\n\\t                feature.updateLayout && feature.updateLayout(feature.model, ecModel, api, payload);\\n\\t            });\\n\\t        },\\n\\n\\t        remove: function (ecModel, api) {\\n\\t            zrUtil.each(this._features, function (feature) {\\n\\t                feature.remove && feature.remove(ecModel, api);\\n\\t            });\\n\\t            this.group.removeAll();\\n\\t        },\\n\\n\\t        dispose: function (ecModel, api) {\\n\\t            zrUtil.each(this._features, function (feature) {\\n\\t                feature.dispose && feature.dispose(ecModel, api);\\n\\t            });\\n\\t        }\\n\\t    });\\n\\n\\t    function isUserFeatureName(featureName) {\\n\\t        return featureName.indexOf('my') === 0;\\n\\t    }\\n\\n\\n\\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(310)))\\n\\n/***/ },\\n/* 415 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    var env = __webpack_require__(2);\\n\\n\\t    function SaveAsImage (model) {\\n\\t        this.model = model;\\n\\t    }\\n\\n\\t    SaveAsImage.defaultOption = {\\n\\t        show: true,\\n\\t        icon: 'M4.7,22.9L29.3,45.5L54.7,23.4M4.6,43.6L4.6,58L53.8,58L53.8,43.6M29.2,45.1L29.2,0',\\n\\t        title: '保存为图片',\\n\\t        type: 'png',\\n\\t        // Default use option.backgroundColor\\n\\t        // backgroundColor: '#fff',\\n\\t        name: '',\\n\\t        excludeComponents: ['toolbox'],\\n\\t        pixelRatio: 1,\\n\\t        lang: ['右键另存为图片']\\n\\t    };\\n\\n\\t    SaveAsImage.prototype.unusable = !env.canvasSupported;\\n\\n\\t    var proto = SaveAsImage.prototype;\\n\\n\\t    proto.onclick = function (ecModel, api) {\\n\\t        var model = this.model;\\n\\t        var title = model.get('name') || ecModel.get('title.0.text') || 'echarts';\\n\\t        var $a = document.createElement('a');\\n\\t        var type = model.get('type', true) || 'png';\\n\\t        $a.download = title + '.' + type;\\n\\t        $a.target = '_blank';\\n\\t        var url = api.getConnectedDataURL({\\n\\t            type: type,\\n\\t            backgroundColor: model.get('backgroundColor', true)\\n\\t                || ecModel.get('backgroundColor') || '#fff',\\n\\t            excludeComponents: model.get('excludeComponents'),\\n\\t            pixelRatio: model.get('pixelRatio')\\n\\t        });\\n\\t        $a.href = url;\\n\\t        // Chrome and Firefox\\n\\t        if (typeof MouseEvent === 'function' && !env.browser.ie && !env.browser.edge) {\\n\\t            var evt = new MouseEvent('click', {\\n\\t                view: window,\\n\\t                bubbles: true,\\n\\t                cancelable: false\\n\\t            });\\n\\t            $a.dispatchEvent(evt);\\n\\t        }\\n\\t        // IE\\n\\t        else {\\n\\t            var lang = model.get('lang');\\n\\t            var html = ''\\n\\t                + '<body style=\\\"margin:0;\\\">'\\n\\t                + '<img src=\\\"' + url + '\\\" style=\\\"max-width:100%;\\\" title=\\\"' + ((lang && lang[0]) || '') + '\\\" />'\\n\\t                + '</body>';\\n\\t            var tab = window.open();\\n\\t            tab.document.write(html);\\n\\t        }\\n\\t    };\\n\\n\\t    __webpack_require__(357).register(\\n\\t        'saveAsImage', SaveAsImage\\n\\t    );\\n\\n\\t    module.exports = SaveAsImage;\\n\\n\\n/***/ },\\n/* 416 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t'use strict';\\n\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\n\\t    function MagicType(model) {\\n\\t        this.model = model;\\n\\t    }\\n\\n\\t    MagicType.defaultOption = {\\n\\t        show: true,\\n\\t        type: [],\\n\\t        // Icon group\\n\\t        icon: {\\n\\t            line: 'M4.1,28.9h7.1l9.3-22l7.4,38l9.7-19.7l3,12.8h14.9M4.1,58h51.4',\\n\\t            bar: 'M6.7,22.9h10V48h-10V22.9zM24.9,13h10v35h-10V13zM43.2,2h10v46h-10V2zM3.1,58h53.7',\\n\\t            stack: 'M8.2,38.4l-8.4,4.1l30.6,15.3L60,42.5l-8.1-4.1l-21.5,11L8.2,38.4z M51.9,30l-8.1,4.2l-13.4,6.9l-13.9-6.9L8.2,30l-8.4,4.2l8.4,4.2l22.2,11l21.5-11l8.1-4.2L51.9,30z M51.9,21.7l-8.1,4.2L35.7,30l-5.3,2.8L24.9,30l-8.4-4.1l-8.3-4.2l-8.4,4.2L8.2,30l8.3,4.2l13.9,6.9l13.4-6.9l8.1-4.2l8.1-4.1L51.9,21.7zM30.4,2.2L-0.2,17.5l8.4,4.1l8.3,4.2l8.4,4.2l5.5,2.7l5.3-2.7l8.1-4.2l8.1-4.2l8.1-4.1L30.4,2.2z', // jshint ignore:line\\n\\t            tiled: 'M2.3,2.2h22.8V25H2.3V2.2z M35,2.2h22.8V25H35V2.2zM2.3,35h22.8v22.8H2.3V35z M35,35h22.8v22.8H35V35z'\\n\\t        },\\n\\t        title: {\\n\\t            line: '切换为折线图',\\n\\t            bar: '切换为柱状图',\\n\\t            stack: '切换为堆叠',\\n\\t            tiled: '切换为平铺'\\n\\t        },\\n\\t        option: {},\\n\\t        seriesIndex: {}\\n\\t    };\\n\\n\\t    var proto = MagicType.prototype;\\n\\n\\t    proto.getIcons = function () {\\n\\t        var model = this.model;\\n\\t        var availableIcons = model.get('icon');\\n\\t        var icons = {};\\n\\t        zrUtil.each(model.get('type'), function (type) {\\n\\t            if (availableIcons[type]) {\\n\\t                icons[type] = availableIcons[type];\\n\\t            }\\n\\t        });\\n\\t        return icons;\\n\\t    };\\n\\n\\t    var seriesOptGenreator = {\\n\\t        'line': function (seriesType, seriesId, seriesModel, model) {\\n\\t            if (seriesType === 'bar') {\\n\\t                return zrUtil.merge({\\n\\t                    id: seriesId,\\n\\t                    type: 'line',\\n\\t                    // Preserve data related option\\n\\t                    data: seriesModel.get('data'),\\n\\t                    stack: seriesModel.get('stack'),\\n\\t                    markPoint: seriesModel.get('markPoint'),\\n\\t                    markLine: seriesModel.get('markLine')\\n\\t                }, model.get('option.line') || {}, true);\\n\\t            }\\n\\t        },\\n\\t        'bar': function (seriesType, seriesId, seriesModel, model) {\\n\\t            if (seriesType === 'line') {\\n\\t                return zrUtil.merge({\\n\\t                    id: seriesId,\\n\\t                    type: 'bar',\\n\\t                    // Preserve data related option\\n\\t                    data: seriesModel.get('data'),\\n\\t                    stack: seriesModel.get('stack'),\\n\\t                    markPoint: seriesModel.get('markPoint'),\\n\\t                    markLine: seriesModel.get('markLine')\\n\\t                }, model.get('option.bar') || {}, true);\\n\\t            }\\n\\t        },\\n\\t        'stack': function (seriesType, seriesId, seriesModel, model) {\\n\\t            if (seriesType === 'line' || seriesType === 'bar') {\\n\\t                return zrUtil.merge({\\n\\t                    id: seriesId,\\n\\t                    stack: '__ec_magicType_stack__'\\n\\t                }, model.get('option.stack') || {}, true);\\n\\t            }\\n\\t        },\\n\\t        'tiled': function (seriesType, seriesId, seriesModel, model) {\\n\\t            if (seriesType === 'line' || seriesType === 'bar') {\\n\\t                return zrUtil.merge({\\n\\t                    id: seriesId,\\n\\t                    stack: ''\\n\\t                }, model.get('option.tiled') || {}, true);\\n\\t            }\\n\\t        }\\n\\t    };\\n\\n\\t    var radioTypes = [\\n\\t        ['line', 'bar'],\\n\\t        ['stack', 'tiled']\\n\\t    ];\\n\\n\\t    proto.onclick = function (ecModel, api, type) {\\n\\t        var model = this.model;\\n\\t        var seriesIndex = model.get('seriesIndex.' + type);\\n\\t        // Not supported magicType\\n\\t        if (!seriesOptGenreator[type]) {\\n\\t            return;\\n\\t        }\\n\\t        var newOption = {\\n\\t            series: []\\n\\t        };\\n\\t        var generateNewSeriesTypes = function (seriesModel) {\\n\\t            var seriesType = seriesModel.subType;\\n\\t            var seriesId = seriesModel.id;\\n\\t            var newSeriesOpt = seriesOptGenreator[type](\\n\\t                seriesType, seriesId, seriesModel, model\\n\\t            );\\n\\t            if (newSeriesOpt) {\\n\\t                // PENDING If merge original option?\\n\\t                zrUtil.defaults(newSeriesOpt, seriesModel.option);\\n\\t                newOption.series.push(newSeriesOpt);\\n\\t            }\\n\\t            // Modify boundaryGap\\n\\t            var coordSys = seriesModel.coordinateSystem;\\n\\t            if (coordSys && coordSys.type === 'cartesian2d' && (type === 'line' || type === 'bar')) {\\n\\t                var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\\n\\t                if (categoryAxis) {\\n\\t                    var axisDim = categoryAxis.dim;\\n\\t                    var axisType = axisDim + 'Axis';\\n\\t                    var axisModel = ecModel.queryComponents({\\n\\t                        mainType: axisType,\\n\\t                        index: seriesModel.get(name + 'Index'),\\n\\t                        id: seriesModel.get(name + 'Id')\\n\\t                    })[0];\\n\\t                    var axisIndex = axisModel.componentIndex;\\n\\n\\t                    newOption[axisType] = newOption[axisType] || [];\\n\\t                    for (var i = 0; i <= axisIndex; i++) {\\n\\t                        newOption[axisType][axisIndex] = newOption[axisType][axisIndex] || {};\\n\\t                    }\\n\\t                    newOption[axisType][axisIndex].boundaryGap = type === 'bar' ? true : false;\\n\\t                }\\n\\t            }\\n\\t        };\\n\\n\\t        zrUtil.each(radioTypes, function (radio) {\\n\\t            if (zrUtil.indexOf(radio, type) >= 0) {\\n\\t                zrUtil.each(radio, function (item) {\\n\\t                    model.setIconStatus(item, 'normal');\\n\\t                });\\n\\t            }\\n\\t        });\\n\\n\\t        model.setIconStatus(type, 'emphasis');\\n\\n\\t        ecModel.eachComponent(\\n\\t            {\\n\\t                mainType: 'series',\\n\\t                query: seriesIndex == null ? null : {\\n\\t                    seriesIndex: seriesIndex\\n\\t                }\\n\\t            }, generateNewSeriesTypes\\n\\t        );\\n\\t        api.dispatchAction({\\n\\t            type: 'changeMagicType',\\n\\t            currentType: type,\\n\\t            newOption: newOption\\n\\t        });\\n\\t    };\\n\\n\\t    var echarts = __webpack_require__(1);\\n\\t    echarts.registerAction({\\n\\t        type: 'changeMagicType',\\n\\t        event: 'magicTypeChanged',\\n\\t        update: 'prepareAndUpdate'\\n\\t    }, function (payload, ecModel) {\\n\\t        ecModel.mergeOption(payload.newOption);\\n\\t    });\\n\\n\\t    __webpack_require__(357).register('magicType', MagicType);\\n\\n\\t    module.exports = MagicType;\\n\\n\\n/***/ },\\n/* 417 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * @module echarts/component/toolbox/feature/DataView\\n\\t */\\n\\n\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var eventTool = __webpack_require__(88);\\n\\n\\n\\t    var BLOCK_SPLITER = new Array(60).join('-');\\n\\t    var ITEM_SPLITER = '\\\\t';\\n\\t    /**\\n\\t     * Group series into two types\\n\\t     *  1. on category axis, like line, bar\\n\\t     *  2. others, like scatter, pie\\n\\t     * @param {module:echarts/model/Global} ecModel\\n\\t     * @return {Object}\\n\\t     * @inner\\n\\t     */\\n\\t    function groupSeries(ecModel) {\\n\\t        var seriesGroupByCategoryAxis = {};\\n\\t        var otherSeries = [];\\n\\t        var meta = [];\\n\\t        ecModel.eachRawSeries(function (seriesModel) {\\n\\t            var coordSys = seriesModel.coordinateSystem;\\n\\n\\t            if (coordSys && (coordSys.type === 'cartesian2d' || coordSys.type === 'polar')) {\\n\\t                var baseAxis = coordSys.getBaseAxis();\\n\\t                if (baseAxis.type === 'category') {\\n\\t                    var key = baseAxis.dim + '_' + baseAxis.index;\\n\\t                    if (!seriesGroupByCategoryAxis[key]) {\\n\\t                        seriesGroupByCategoryAxis[key] = {\\n\\t                            categoryAxis: baseAxis,\\n\\t                            valueAxis: coordSys.getOtherAxis(baseAxis),\\n\\t                            series: []\\n\\t                        };\\n\\t                        meta.push({\\n\\t                            axisDim: baseAxis.dim,\\n\\t                            axisIndex: baseAxis.index\\n\\t                        });\\n\\t                    }\\n\\t                    seriesGroupByCategoryAxis[key].series.push(seriesModel);\\n\\t                }\\n\\t                else {\\n\\t                    otherSeries.push(seriesModel);\\n\\t                }\\n\\t            }\\n\\t            else {\\n\\t                otherSeries.push(seriesModel);\\n\\t            }\\n\\t        });\\n\\n\\t        return {\\n\\t            seriesGroupByCategoryAxis: seriesGroupByCategoryAxis,\\n\\t            other: otherSeries,\\n\\t            meta: meta\\n\\t        };\\n\\t    }\\n\\n\\t    /**\\n\\t     * Assemble content of series on cateogory axis\\n\\t     * @param {Array.<module:echarts/model/Series>} series\\n\\t     * @return {string}\\n\\t     * @inner\\n\\t     */\\n\\t    function assembleSeriesWithCategoryAxis(series) {\\n\\t        var tables = [];\\n\\t        zrUtil.each(series, function (group, key) {\\n\\t            var categoryAxis = group.categoryAxis;\\n\\t            var valueAxis = group.valueAxis;\\n\\t            var valueAxisDim = valueAxis.dim;\\n\\n\\t            var headers = [' '].concat(zrUtil.map(group.series, function (series) {\\n\\t                return series.name;\\n\\t            }));\\n\\t            var columns = [categoryAxis.model.getCategories()];\\n\\t            zrUtil.each(group.series, function (series) {\\n\\t                columns.push(series.getRawData().mapArray(valueAxisDim, function (val) {\\n\\t                    return val;\\n\\t                }));\\n\\t            });\\n\\t            // Assemble table content\\n\\t            var lines = [headers.join(ITEM_SPLITER)];\\n\\t            for (var i = 0; i < columns[0].length; i++) {\\n\\t                var items = [];\\n\\t                for (var j = 0; j < columns.length; j++) {\\n\\t                    items.push(columns[j][i]);\\n\\t                }\\n\\t                lines.push(items.join(ITEM_SPLITER));\\n\\t            }\\n\\t            tables.push(lines.join('\\\\n'));\\n\\t        });\\n\\t        return tables.join('\\\\n\\\\n' +  BLOCK_SPLITER + '\\\\n\\\\n');\\n\\t    }\\n\\n\\t    /**\\n\\t     * Assemble content of other series\\n\\t     * @param {Array.<module:echarts/model/Series>} series\\n\\t     * @return {string}\\n\\t     * @inner\\n\\t     */\\n\\t    function assembleOtherSeries(series) {\\n\\t        return zrUtil.map(series, function (series) {\\n\\t            var data = series.getRawData();\\n\\t            var lines = [series.name];\\n\\t            var vals = [];\\n\\t            data.each(data.dimensions, function () {\\n\\t                var argLen = arguments.length;\\n\\t                var dataIndex = arguments[argLen - 1];\\n\\t                var name = data.getName(dataIndex);\\n\\t                for (var i = 0; i < argLen - 1; i++) {\\n\\t                    vals[i] = arguments[i];\\n\\t                }\\n\\t                lines.push((name ? (name + ITEM_SPLITER) : '') + vals.join(ITEM_SPLITER));\\n\\t            });\\n\\t            return lines.join('\\\\n');\\n\\t        }).join('\\\\n\\\\n' + BLOCK_SPLITER + '\\\\n\\\\n');\\n\\t    }\\n\\n\\t    /**\\n\\t     * @param {module:echarts/model/Global}\\n\\t     * @return {string}\\n\\t     * @inner\\n\\t     */\\n\\t    function getContentFromModel(ecModel) {\\n\\n\\t        var result = groupSeries(ecModel);\\n\\n\\t        return {\\n\\t            value: zrUtil.filter([\\n\\t                    assembleSeriesWithCategoryAxis(result.seriesGroupByCategoryAxis),\\n\\t                    assembleOtherSeries(result.other)\\n\\t                ], function (str) {\\n\\t                    return str.replace(/[\\\\n\\\\t\\\\s]/g, '');\\n\\t                }).join('\\\\n\\\\n' + BLOCK_SPLITER + '\\\\n\\\\n'),\\n\\n\\t            meta: result.meta\\n\\t        };\\n\\t    }\\n\\n\\n\\t    function trim(str) {\\n\\t        return str.replace(/^\\\\s\\\\s*/, '').replace(/\\\\s\\\\s*$/, '');\\n\\t    }\\n\\t    /**\\n\\t     * If a block is tsv format\\n\\t     */\\n\\t    function isTSVFormat(block) {\\n\\t        // Simple method to find out if a block is tsv format\\n\\t        var firstLine = block.slice(0, block.indexOf('\\\\n'));\\n\\t        if (firstLine.indexOf(ITEM_SPLITER) >= 0) {\\n\\t            return true;\\n\\t        }\\n\\t    }\\n\\n\\t    var itemSplitRegex = new RegExp('[' + ITEM_SPLITER + ']+', 'g');\\n\\t    /**\\n\\t     * @param {string} tsv\\n\\t     * @return {Array.<Object>}\\n\\t     */\\n\\t    function parseTSVContents(tsv) {\\n\\t        var tsvLines = tsv.split(/\\\\n+/g);\\n\\t        var headers = trim(tsvLines.shift()).split(itemSplitRegex);\\n\\n\\t        var categories = [];\\n\\t        var series = zrUtil.map(headers, function (header) {\\n\\t            return {\\n\\t                name: header,\\n\\t                data: []\\n\\t            };\\n\\t        });\\n\\t        for (var i = 0; i < tsvLines.length; i++) {\\n\\t            var items = trim(tsvLines[i]).split(itemSplitRegex);\\n\\t            categories.push(items.shift());\\n\\t            for (var j = 0; j < items.length; j++) {\\n\\t                series[j] && (series[j].data[i] = items[j]);\\n\\t            }\\n\\t        }\\n\\t        return {\\n\\t            series: series,\\n\\t            categories: categories\\n\\t        };\\n\\t    }\\n\\n\\t    /**\\n\\t     * @param {string} str\\n\\t     * @return {Array.<Object>}\\n\\t     * @inner\\n\\t     */\\n\\t    function parseListContents(str) {\\n\\t        var lines = str.split(/\\\\n+/g);\\n\\t        var seriesName = trim(lines.shift());\\n\\n\\t        var data = [];\\n\\t        for (var i = 0; i < lines.length; i++) {\\n\\t            var items = trim(lines[i]).split(itemSplitRegex);\\n\\t            var name = '';\\n\\t            var value;\\n\\t            var hasName = false;\\n\\t            if (isNaN(items[0])) { // First item is name\\n\\t                hasName = true;\\n\\t                name = items[0];\\n\\t                items = items.slice(1);\\n\\t                data[i] = {\\n\\t                    name: name,\\n\\t                    value: []\\n\\t                };\\n\\t                value = data[i].value;\\n\\t            }\\n\\t            else {\\n\\t                value = data[i] = [];\\n\\t            }\\n\\t            for (var j = 0; j < items.length; j++) {\\n\\t                value.push(+items[j]);\\n\\t            }\\n\\t            if (value.length === 1) {\\n\\t                hasName ? (data[i].value = value[0]) : (data[i] = value[0]);\\n\\t            }\\n\\t        }\\n\\n\\t        return {\\n\\t            name: seriesName,\\n\\t            data: data\\n\\t        };\\n\\t    }\\n\\n\\t    /**\\n\\t     * @param {string} str\\n\\t     * @param {Array.<Object>} blockMetaList\\n\\t     * @return {Object}\\n\\t     * @inner\\n\\t     */\\n\\t    function parseContents(str, blockMetaList) {\\n\\t        var blocks = str.split(new RegExp('\\\\n*' + BLOCK_SPLITER + '\\\\n*', 'g'));\\n\\t        var newOption = {\\n\\t            series: []\\n\\t        };\\n\\t        zrUtil.each(blocks, function (block, idx) {\\n\\t            if (isTSVFormat(block)) {\\n\\t                var result = parseTSVContents(block);\\n\\t                var blockMeta = blockMetaList[idx];\\n\\t                var axisKey = blockMeta.axisDim + 'Axis';\\n\\n\\t                if (blockMeta) {\\n\\t                    newOption[axisKey] = newOption[axisKey] || [];\\n\\t                    newOption[axisKey][blockMeta.axisIndex] = {\\n\\t                        data: result.categories\\n\\t                    };\\n\\t                    newOption.series = newOption.series.concat(result.series);\\n\\t                }\\n\\t            }\\n\\t            else {\\n\\t                var result = parseListContents(block);\\n\\t                newOption.series.push(result);\\n\\t            }\\n\\t        });\\n\\t        return newOption;\\n\\t    }\\n\\n\\t    /**\\n\\t     * @alias {module:echarts/component/toolbox/feature/DataView}\\n\\t     * @constructor\\n\\t     * @param {module:echarts/model/Model} model\\n\\t     */\\n\\t    function DataView(model) {\\n\\n\\t        this._dom = null;\\n\\n\\t        this.model = model;\\n\\t    }\\n\\n\\t    DataView.defaultOption = {\\n\\t        show: true,\\n\\t        readOnly: false,\\n\\t        optionToContent: null,\\n\\t        contentToOption: null,\\n\\n\\t        icon: 'M17.5,17.3H33 M17.5,17.3H33 M45.4,29.5h-28 M11.5,2v56H51V14.8L38.4,2H11.5z M38.4,2.2v12.7H51 M45.4,41.7h-28',\\n\\t        title: '数据视图',\\n\\t        lang: ['数据视图', '关闭', '刷新'],\\n\\t        backgroundColor: '#fff',\\n\\t        textColor: '#000',\\n\\t        textareaColor: '#fff',\\n\\t        textareaBorderColor: '#333',\\n\\t        buttonColor: '#c23531',\\n\\t        buttonTextColor: '#fff'\\n\\t    };\\n\\n\\t    DataView.prototype.onclick = function (ecModel, api) {\\n\\t        var container = api.getDom();\\n\\t        var model = this.model;\\n\\t        if (this._dom) {\\n\\t            container.removeChild(this._dom);\\n\\t        }\\n\\t        var root = document.createElement('div');\\n\\t        root.style.cssText = 'position:absolute;left:5px;top:5px;bottom:5px;right:5px;';\\n\\t        root.style.backgroundColor = model.get('backgroundColor') || '#fff';\\n\\n\\t        // Create elements\\n\\t        var header = document.createElement('h4');\\n\\t        var lang = model.get('lang') || [];\\n\\t        header.innerHTML = lang[0] || model.get('title');\\n\\t        header.style.cssText = 'margin: 10px 20px;';\\n\\t        header.style.color = model.get('textColor');\\n\\n\\t        var viewMain = document.createElement('div');\\n\\t        var textarea = document.createElement('textarea');\\n\\t        viewMain.style.cssText = 'display:block;width:100%;overflow:auto;';\\n\\n\\t        var optionToContent = model.get('optionToContent');\\n\\t        var contentToOption = model.get('contentToOption');\\n\\t        var result = getContentFromModel(ecModel);\\n\\t        if (typeof optionToContent === 'function') {\\n\\t            var htmlOrDom = optionToContent(api.getOption());\\n\\t            if (typeof htmlOrDom === 'string') {\\n\\t                viewMain.innerHTML = htmlOrDom;\\n\\t            }\\n\\t            else if (zrUtil.isDom(htmlOrDom)) {\\n\\t                viewMain.appendChild(htmlOrDom);\\n\\t            }\\n\\t        }\\n\\t        else {\\n\\t            // Use default textarea\\n\\t            viewMain.appendChild(textarea);\\n\\t            textarea.readOnly = model.get('readOnly');\\n\\t            textarea.style.cssText = 'width:100%;height:100%;font-family:monospace;font-size:14px;line-height:1.6rem;';\\n\\t            textarea.style.color = model.get('textColor');\\n\\t            textarea.style.borderColor = model.get('textareaBorderColor');\\n\\t            textarea.style.backgroundColor = model.get('textareaColor');\\n\\t            textarea.value = result.value;\\n\\t        }\\n\\n\\t        var blockMetaList = result.meta;\\n\\n\\t        var buttonContainer = document.createElement('div');\\n\\t        buttonContainer.style.cssText = 'position:absolute;bottom:0;left:0;right:0;';\\n\\n\\t        var buttonStyle = 'float:right;margin-right:20px;border:none;'\\n\\t            + 'cursor:pointer;padding:2px 5px;font-size:12px;border-radius:3px';\\n\\t        var closeButton = document.createElement('div');\\n\\t        var refreshButton = document.createElement('div');\\n\\n\\t        buttonStyle += ';background-color:' + model.get('buttonColor');\\n\\t        buttonStyle += ';color:' + model.get('buttonTextColor');\\n\\n\\t        var self = this;\\n\\n\\t        function close() {\\n\\t            container.removeChild(root);\\n\\t            self._dom = null;\\n\\t        }\\n\\t        eventTool.addEventListener(closeButton, 'click', close);\\n\\n\\t        eventTool.addEventListener(refreshButton, 'click', function () {\\n\\t            var newOption;\\n\\t            try {\\n\\t                if (typeof contentToOption === 'function') {\\n\\t                    newOption = contentToOption(viewMain, api.getOption());\\n\\t                }\\n\\t                else {\\n\\t                    newOption = parseContents(textarea.value, blockMetaList);\\n\\t                }\\n\\t            }\\n\\t            catch (e) {\\n\\t                close();\\n\\t                throw new Error('Data view format error ' + e);\\n\\t            }\\n\\t            if (newOption) {\\n\\t                api.dispatchAction({\\n\\t                    type: 'changeDataView',\\n\\t                    newOption: newOption\\n\\t                });\\n\\t            }\\n\\n\\t            close();\\n\\t        });\\n\\n\\t        closeButton.innerHTML = lang[1];\\n\\t        refreshButton.innerHTML = lang[2];\\n\\t        refreshButton.style.cssText = buttonStyle;\\n\\t        closeButton.style.cssText = buttonStyle;\\n\\n\\t        !model.get('readOnly') && buttonContainer.appendChild(refreshButton);\\n\\t        buttonContainer.appendChild(closeButton);\\n\\n\\t        // http://stackoverflow.com/questions/6637341/use-tab-to-indent-in-textarea\\n\\t        eventTool.addEventListener(textarea, 'keydown', function (e) {\\n\\t            if ((e.keyCode || e.which) === 9) {\\n\\t                // get caret position/selection\\n\\t                var val = this.value;\\n\\t                var start = this.selectionStart;\\n\\t                var end = this.selectionEnd;\\n\\n\\t                // set textarea value to: text before caret + tab + text after caret\\n\\t                this.value = val.substring(0, start) + ITEM_SPLITER + val.substring(end);\\n\\n\\t                // put caret at right position again\\n\\t                this.selectionStart = this.selectionEnd = start + 1;\\n\\n\\t                // prevent the focus lose\\n\\t                eventTool.stop(e);\\n\\t            }\\n\\t        });\\n\\n\\t        root.appendChild(header);\\n\\t        root.appendChild(viewMain);\\n\\t        root.appendChild(buttonContainer);\\n\\n\\t        viewMain.style.height = (container.clientHeight - 80) + 'px';\\n\\n\\t        container.appendChild(root);\\n\\t        this._dom = root;\\n\\t    };\\n\\n\\t    DataView.prototype.remove = function (ecModel, api) {\\n\\t        this._dom && api.getDom().removeChild(this._dom);\\n\\t    };\\n\\n\\t    DataView.prototype.dispose = function (ecModel, api) {\\n\\t        this.remove(ecModel, api);\\n\\t    };\\n\\n\\t    /**\\n\\t     * @inner\\n\\t     */\\n\\t    function tryMergeDataOption(newData, originalData) {\\n\\t        return zrUtil.map(newData, function (newVal, idx) {\\n\\t            var original = originalData && originalData[idx];\\n\\t            if (zrUtil.isObject(original) && !zrUtil.isArray(original)) {\\n\\t                if (zrUtil.isObject(newVal) && !zrUtil.isArray(newVal)) {\\n\\t                    newVal = newVal.value;\\n\\t                }\\n\\t                // Original data has option\\n\\t                return zrUtil.defaults({\\n\\t                    value: newVal\\n\\t                }, original);\\n\\t            }\\n\\t            else {\\n\\t                return newVal;\\n\\t            }\\n\\t        });\\n\\t    }\\n\\n\\t    __webpack_require__(357).register('dataView', DataView);\\n\\n\\t    __webpack_require__(1).registerAction({\\n\\t        type: 'changeDataView',\\n\\t        event: 'dataViewChanged',\\n\\t        update: 'prepareAndUpdate'\\n\\t    }, function (payload, ecModel) {\\n\\t        var newSeriesOptList = [];\\n\\t        zrUtil.each(payload.newOption.series, function (seriesOpt) {\\n\\t            var seriesModel = ecModel.getSeriesByName(seriesOpt.name)[0];\\n\\t            if (!seriesModel) {\\n\\t                // New created series\\n\\t                // Geuss the series type\\n\\t                newSeriesOptList.push(zrUtil.extend({\\n\\t                    // Default is scatter\\n\\t                    type: 'scatter'\\n\\t                }, seriesOpt));\\n\\t            }\\n\\t            else {\\n\\t                var originalData = seriesModel.get('data');\\n\\t                newSeriesOptList.push({\\n\\t                    name: seriesOpt.name,\\n\\t                    data: tryMergeDataOption(seriesOpt.data, originalData)\\n\\t                });\\n\\t            }\\n\\t        });\\n\\n\\t        ecModel.mergeOption(zrUtil.defaults({\\n\\t            series: newSeriesOptList\\n\\t        }, payload.newOption));\\n\\t    });\\n\\n\\t    module.exports = DataView;\\n\\n\\n/***/ },\\n/* 418 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t'use strict';\\n\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var BrushController = __webpack_require__(245);\\n\\t    var BrushTargetManager = __webpack_require__(352);\\n\\t    var history = __webpack_require__(419);\\n\\t    var sliderMove = __webpack_require__(239);\\n\\n\\t    var each = zrUtil.each;\\n\\n\\t    // Use dataZoomSelect\\n\\t    __webpack_require__(420);\\n\\n\\t    // Spectial component id start with \\\\0ec\\\\0, see echarts/model/Global.js~hasInnerId\\n\\t    var DATA_ZOOM_ID_BASE = '\\\\0_ec_\\\\0toolbox-dataZoom_';\\n\\n\\t    function DataZoom(model, ecModel, api) {\\n\\n\\t        /**\\n\\t         * @private\\n\\t         * @type {module:echarts/component/helper/BrushController}\\n\\t         */\\n\\t        (this._brushController = new BrushController(api.getZr()))\\n\\t            .on('brush', zrUtil.bind(this._onBrush, this))\\n\\t            .mount();\\n\\n\\t        /**\\n\\t         * @private\\n\\t         * @type {boolean}\\n\\t         */\\n\\t        this._isZoomActive;\\n\\t    }\\n\\n\\t    DataZoom.defaultOption = {\\n\\t        show: true,\\n\\t        // Icon group\\n\\t        icon: {\\n\\t            zoom: 'M0,13.5h26.9 M13.5,26.9V0 M32.1,13.5H58V58H13.5 V32.1',\\n\\t            back: 'M22,1.4L9.9,13.5l12.3,12.3 M10.3,13.5H54.9v44.6 H10.3v-26'\\n\\t        },\\n\\t        title: {\\n\\t            zoom: '区域缩放',\\n\\t            back: '区域缩放还原'\\n\\t        }\\n\\t    };\\n\\n\\t    var proto = DataZoom.prototype;\\n\\n\\t    proto.render = function (featureModel, ecModel, api, payload) {\\n\\t        this.model = featureModel;\\n\\t        this.ecModel = ecModel;\\n\\t        this.api = api;\\n\\n\\t        updateZoomBtnStatus(featureModel, ecModel, this, payload, api);\\n\\t        updateBackBtnStatus(featureModel, ecModel);\\n\\t    };\\n\\n\\t    proto.onclick = function (ecModel, api, type) {\\n\\t        handlers[type].call(this);\\n\\t    };\\n\\n\\t    proto.remove = function (ecModel, api) {\\n\\t        this._brushController.unmount();\\n\\t    };\\n\\n\\t    proto.dispose = function (ecModel, api) {\\n\\t        this._brushController.dispose();\\n\\t    };\\n\\n\\t    /**\\n\\t     * @private\\n\\t     */\\n\\t    var handlers = {\\n\\n\\t        zoom: function () {\\n\\t            var nextActive = !this._isZoomActive;\\n\\n\\t            this.api.dispatchAction({\\n\\t                type: 'takeGlobalCursor',\\n\\t                key: 'dataZoomSelect',\\n\\t                dataZoomSelectActive: nextActive\\n\\t            });\\n\\t        },\\n\\n\\t        back: function () {\\n\\t            this._dispatchZoomAction(history.pop(this.ecModel));\\n\\t        }\\n\\t    };\\n\\n\\t    /**\\n\\t     * @private\\n\\t     */\\n\\t    proto._onBrush = function (areas, opt) {\\n\\t        if (!opt.isEnd || !areas.length) {\\n\\t            return;\\n\\t        }\\n\\t        var snapshot = {};\\n\\t        var ecModel = this.ecModel;\\n\\n\\t        this._brushController.updateCovers([]); // remove cover\\n\\n\\t        var brushTargetManager = new BrushTargetManager(\\n\\t            retrieveAxisSetting(this.model.option), ecModel, {include: ['grid']}\\n\\t        );\\n\\t        brushTargetManager.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\\n\\t            if (coordSys.type !== 'cartesian2d') {\\n\\t                return;\\n\\t            }\\n\\n\\t            var brushType = area.brushType;\\n\\t            if (brushType === 'rect') {\\n\\t                setBatch('x', coordSys, coordRange[0]);\\n\\t                setBatch('y', coordSys, coordRange[1]);\\n\\t            }\\n\\t            else {\\n\\t                setBatch(({lineX: 'x', lineY: 'y'})[brushType], coordSys, coordRange);\\n\\t            }\\n\\t        });\\n\\n\\t        history.push(ecModel, snapshot);\\n\\n\\t        this._dispatchZoomAction(snapshot);\\n\\n\\t        function setBatch(dimName, coordSys, minMax) {\\n\\t            var axis = coordSys.getAxis(dimName);\\n\\t            var axisModel = axis.model;\\n\\t            var dataZoomModel = findDataZoom(dimName, axisModel, ecModel);\\n\\n\\t            // Restrict range.\\n\\t            var minMaxSpan = dataZoomModel.findRepresentativeAxisProxy(axisModel).getMinMaxSpan();\\n\\t            if (minMaxSpan.minValueSpan != null || minMaxSpan.maxValueSpan != null) {\\n\\t                minMax = sliderMove(\\n\\t                    0, minMax.slice(), axis.scale.getExtent(), 0,\\n\\t                    minMaxSpan.minValueSpan, minMaxSpan.maxValueSpan\\n\\t                );\\n\\t            }\\n\\n\\t            dataZoomModel && (snapshot[dataZoomModel.id] = {\\n\\t                dataZoomId: dataZoomModel.id,\\n\\t                startValue: minMax[0],\\n\\t                endValue: minMax[1]\\n\\t            });\\n\\t        }\\n\\n\\t        function findDataZoom(dimName, axisModel, ecModel) {\\n\\t            var found;\\n\\t            ecModel.eachComponent({mainType: 'dataZoom', subType: 'select'}, function (dzModel) {\\n\\t                var has = dzModel.getAxisModel(dimName, axisModel.componentIndex);\\n\\t                has && (found = dzModel);\\n\\t            });\\n\\t            return found;\\n\\t        }\\n\\t    };\\n\\n\\t    /**\\n\\t     * @private\\n\\t     */\\n\\t    proto._dispatchZoomAction = function (snapshot) {\\n\\t        var batch = [];\\n\\n\\t        // Convert from hash map to array.\\n\\t        each(snapshot, function (batchItem, dataZoomId) {\\n\\t            batch.push(zrUtil.clone(batchItem));\\n\\t        });\\n\\n\\t        batch.length && this.api.dispatchAction({\\n\\t            type: 'dataZoom',\\n\\t            from: this.uid,\\n\\t            batch: batch\\n\\t        });\\n\\t    };\\n\\n\\t    function retrieveAxisSetting(option) {\\n\\t        var setting = {};\\n\\t        // Compatible with previous setting: null => all axis, false => no axis.\\n\\t        zrUtil.each(['xAxisIndex', 'yAxisIndex'], function (name) {\\n\\t            setting[name] = option[name];\\n\\t            setting[name] == null && (setting[name] = 'all');\\n\\t            (setting[name] === false || setting[name] === 'none') && (setting[name] = []);\\n\\t        });\\n\\t        return setting;\\n\\t    }\\n\\n\\t    function updateBackBtnStatus(featureModel, ecModel) {\\n\\t        featureModel.setIconStatus(\\n\\t            'back',\\n\\t            history.count(ecModel) > 1 ? 'emphasis' : 'normal'\\n\\t        );\\n\\t    }\\n\\n\\t    function updateZoomBtnStatus(featureModel, ecModel, view, payload, api) {\\n\\t        var zoomActive = view._isZoomActive;\\n\\n\\t        if (payload && payload.type === 'takeGlobalCursor') {\\n\\t            zoomActive = payload.key === 'dataZoomSelect'\\n\\t                ? payload.dataZoomSelectActive : false;\\n\\t        }\\n\\n\\t        view._isZoomActive = zoomActive;\\n\\n\\t        featureModel.setIconStatus('zoom', zoomActive ? 'emphasis' : 'normal');\\n\\n\\t        var brushTargetManager = new BrushTargetManager(\\n\\t            retrieveAxisSetting(featureModel.option), ecModel, {include: ['grid']}\\n\\t        );\\n\\n\\t        view._brushController\\n\\t            .setPanels(brushTargetManager.makePanelOpts(api, function (targetInfo) {\\n\\t                return (targetInfo.xAxisDeclared && !targetInfo.yAxisDeclared)\\n\\t                    ? 'lineX'\\n\\t                    : (!targetInfo.xAxisDeclared && targetInfo.yAxisDeclared)\\n\\t                    ? 'lineY'\\n\\t                    : 'rect';\\n\\t            }))\\n\\t            .enableBrush(\\n\\t                zoomActive\\n\\t                ? {\\n\\t                    brushType: 'auto',\\n\\t                    brushStyle: {\\n\\t                        // FIXME user customized?\\n\\t                        lineWidth: 0,\\n\\t                        fill: 'rgba(0,0,0,0.2)'\\n\\t                    }\\n\\t                }\\n\\t                : false\\n\\t            );\\n\\t    }\\n\\n\\n\\t    __webpack_require__(357).register('dataZoom', DataZoom);\\n\\n\\n\\t    // Create special dataZoom option for select\\n\\t    __webpack_require__(1).registerPreprocessor(function (option) {\\n\\t        if (!option) {\\n\\t            return;\\n\\t        }\\n\\n\\t        var dataZoomOpts = option.dataZoom || (option.dataZoom = []);\\n\\t        if (!zrUtil.isArray(dataZoomOpts)) {\\n\\t            option.dataZoom = dataZoomOpts = [dataZoomOpts];\\n\\t        }\\n\\n\\t        var toolboxOpt = option.toolbox;\\n\\t        if (toolboxOpt) {\\n\\t            // Assume there is only one toolbox\\n\\t            if (zrUtil.isArray(toolboxOpt)) {\\n\\t                toolboxOpt = toolboxOpt[0];\\n\\t            }\\n\\n\\t            if (toolboxOpt && toolboxOpt.feature) {\\n\\t                var dataZoomOpt = toolboxOpt.feature.dataZoom;\\n\\t                addForAxis('xAxis', dataZoomOpt);\\n\\t                addForAxis('yAxis', dataZoomOpt);\\n\\t            }\\n\\t        }\\n\\n\\t        function addForAxis(axisName, dataZoomOpt) {\\n\\t            if (!dataZoomOpt) {\\n\\t                return;\\n\\t            }\\n\\n\\t            // Try not to modify model, because it is not merged yet.\\n\\t            var axisIndicesName = axisName + 'Index';\\n\\t            var givenAxisIndices = dataZoomOpt[axisIndicesName];\\n\\t            if (givenAxisIndices != null\\n\\t                && givenAxisIndices != 'all'\\n\\t                && !zrUtil.isArray(givenAxisIndices)\\n\\t            ) {\\n\\t                givenAxisIndices = (givenAxisIndices === false || givenAxisIndices === 'none') ? [] : [givenAxisIndices];\\n\\t            }\\n\\n\\t            forEachComponent(axisName, function (axisOpt, axisIndex) {\\n\\t                if (givenAxisIndices != null\\n\\t                    && givenAxisIndices != 'all'\\n\\t                    && zrUtil.indexOf(givenAxisIndices, axisIndex) === -1\\n\\t                ) {\\n\\t                    return;\\n\\t                }\\n\\t                var newOpt = {\\n\\t                    type: 'select',\\n\\t                    $fromToolbox: true,\\n\\t                    // Id for merge mapping.\\n\\t                    id: DATA_ZOOM_ID_BASE + axisName + axisIndex\\n\\t                };\\n\\t                // FIXME\\n\\t                // Only support one axis now.\\n\\t                newOpt[axisIndicesName] = axisIndex;\\n\\t                dataZoomOpts.push(newOpt);\\n\\t            });\\n\\t        }\\n\\n\\t        function forEachComponent(mainType, cb) {\\n\\t            var opts = option[mainType];\\n\\t            if (!zrUtil.isArray(opts)) {\\n\\t                opts = opts ? [opts] : [];\\n\\t            }\\n\\t            each(opts, cb);\\n\\t        }\\n\\t    });\\n\\n\\t    module.exports = DataZoom;\\n\\n\\n/***/ },\\n/* 419 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * @file History manager.\\n\\t */\\n\\n\\n\\t    var zrUtil = __webpack_require__(4);\\n\\t    var each = zrUtil.each;\\n\\n\\t    var ATTR = '\\\\0_ec_hist_store';\\n\\n\\t    var history = {\\n\\n\\t        /**\\n\\t         * @public\\n\\t         * @param {module:echarts/model/Global} ecModel\\n\\t         * @param {Object} newSnapshot {dataZoomId, batch: [payloadInfo, ...]}\\n\\t         */\\n\\t        push: function (ecModel, newSnapshot) {\\n\\t            var store = giveStore(ecModel);\\n\\n\\t            // If previous dataZoom can not be found,\\n\\t            // complete an range with current range.\\n\\t            each(newSnapshot, function (batchItem, dataZoomId) {\\n\\t                var i = store.length - 1;\\n\\t                for (; i >= 0; i--) {\\n\\t                    var snapshot = store[i];\\n\\t                    if (snapshot[dataZoomId]) {\\n\\t                        break;\\n\\t                    }\\n\\t                }\\n\\t                if (i < 0) {\\n\\t                    // No origin range set, create one by current range.\\n\\t                    var dataZoomModel = ecModel.queryComponents(\\n\\t                        {mainType: 'dataZoom', subType: 'select', id: dataZoomId}\\n\\t                    )[0];\\n\\t                    if (dataZoomModel) {\\n\\t                        var percentRange = dataZoomModel.getPercentRange();\\n\\t                        store[0][dataZoomId] = {\\n\\t                            dataZoomId: dataZoomId,\\n\\t                            start: percentRange[0],\\n\\t                            end: percentRange[1]\\n\\t                        };\\n\\t                    }\\n\\t                }\\n\\t            });\\n\\n\\t            store.push(newSnapshot);\\n\\t        },\\n\\n\\t        /**\\n\\t         * @public\\n\\t         * @param {module:echarts/model/Global} ecModel\\n\\t         * @return {Object} snapshot\\n\\t         */\\n\\t        pop: function (ecModel) {\\n\\t            var store = giveStore(ecModel);\\n\\t            var head = store[store.length - 1];\\n\\t            store.length > 1 && store.pop();\\n\\n\\t            // Find top for all dataZoom.\\n\\t            var snapshot = {};\\n\\t            each(head, function (batchItem, dataZoomId) {\\n\\t                for (var i = store.length - 1; i >= 0; i--) {\\n\\t                    var batchItem = store[i][dataZoomId];\\n\\t                    if (batchItem) {\\n\\t                        snapshot[dataZoomId] = batchItem;\\n\\t                        break;\\n\\t                    }\\n\\t                }\\n\\t            });\\n\\n\\t            return snapshot;\\n\\t        },\\n\\n\\t        /**\\n\\t         * @public\\n\\t         */\\n\\t        clear: function (ecModel) {\\n\\t            ecModel[ATTR] = null;\\n\\t        },\\n\\n\\t        /**\\n\\t         * @public\\n\\t         * @param {module:echarts/model/Global} ecModel\\n\\t         * @return {number} records. always >= 1.\\n\\t         */\\n\\t        count: function (ecModel) {\\n\\t            return giveStore(ecModel).length;\\n\\t        }\\n\\n\\t    };\\n\\n\\t    /**\\n\\t     * [{key: dataZoomId, value: {dataZoomId, range}}, ...]\\n\\t     * History length of each dataZoom may be different.\\n\\t     * this._history[0] is used to store origin range.\\n\\t     * @type {Array.<Object>}\\n\\t     */\\n\\t    function giveStore(ecModel) {\\n\\t        var store = ecModel[ATTR];\\n\\t        if (!store) {\\n\\t            store = ecModel[ATTR] = [{}];\\n\\t        }\\n\\t        return store;\\n\\t    }\\n\\n\\t    module.exports = history;\\n\\n\\n\\n/***/ },\\n/* 420 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * DataZoom component entry\\n\\t */\\n\\n\\n\\t    __webpack_require__(364);\\n\\n\\t    __webpack_require__(365);\\n\\t    __webpack_require__(368);\\n\\n\\t    __webpack_require__(421);\\n\\t    __webpack_require__(422);\\n\\n\\t    __webpack_require__(374);\\n\\t    __webpack_require__(375);\\n\\n\\n\\n/***/ },\\n/* 421 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * @file Data zoom model\\n\\t */\\n\\n\\n\\t    var DataZoomModel = __webpack_require__(365);\\n\\n\\t    module.exports = DataZoomModel.extend({\\n\\n\\t        type: 'dataZoom.select'\\n\\n\\t    });\\n\\n\\n\\n/***/ },\\n/* 422 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\t    module.exports = __webpack_require__(368).extend({\\n\\n\\t        type: 'dataZoom.select'\\n\\n\\t    });\\n\\n\\n\\n/***/ },\\n/* 423 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t'use strict';\\n\\n\\n\\t    var history = __webpack_require__(419);\\n\\n\\t    function Restore(model) {\\n\\t        this.model = model;\\n\\t    }\\n\\n\\t    Restore.defaultOption = {\\n\\t        show: true,\\n\\t        icon: 'M3.8,33.4 M47,18.9h9.8V8.7 M56.3,20.1 C52.1,9,40.5,0.6,26.8,2.1C12.6,3.7,1.6,16.2,2.1,30.6 M13,41.1H3.1v10.2 M3.7,39.9c4.2,11.1,15.8,19.5,29.5,18 c14.2-1.6,25.2-14.1,24.7-28.5',\\n\\t        title: '还原'\\n\\t    };\\n\\n\\t    var proto = Restore.prototype;\\n\\n\\t    proto.onclick = function (ecModel, api, type) {\\n\\t        history.clear(ecModel);\\n\\n\\t        api.dispatchAction({\\n\\t            type: 'restore',\\n\\t            from: this.uid\\n\\t        });\\n\\t    };\\n\\n\\n\\t    __webpack_require__(357).register('restore', Restore);\\n\\n\\n\\t    __webpack_require__(1).registerAction(\\n\\t        {type: 'restore', event: 'restore', update: 'prepareAndUpdate'},\\n\\t        function (payload, ecModel) {\\n\\t            ecModel.resetOption('recreate');\\n\\t        }\\n\\t    );\\n\\n\\t    module.exports = Restore;\\n\\n\\n/***/ },\\n/* 424 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\t    __webpack_require__(425);\\n\\t    __webpack_require__(82).registerPainter('vml', __webpack_require__(427));\\n\\n\\n/***/ },\\n/* 425 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t// http://www.w3.org/TR/NOTE-VML\\n\\t// TODO Use proxy like svg instead of overwrite brush methods\\n\\n\\n\\tif (!__webpack_require__(2).canvasSupported) {\\n\\t    var vec2 = __webpack_require__(10);\\n\\t    var BoundingRect = __webpack_require__(9);\\n\\t    var CMD = __webpack_require__(36).CMD;\\n\\t    var colorTool = __webpack_require__(31);\\n\\t    var textContain = __webpack_require__(8);\\n\\t    var RectText = __webpack_require__(35);\\n\\t    var Displayable = __webpack_require__(21);\\n\\t    var ZImage = __webpack_require__(49);\\n\\t    var Text = __webpack_require__(50);\\n\\t    var Path = __webpack_require__(20);\\n\\t    var PathProxy = __webpack_require__(36);\\n\\n\\t    var Gradient = __webpack_require__(66);\\n\\n\\t    var vmlCore = __webpack_require__(426);\\n\\n\\t    var round = Math.round;\\n\\t    var sqrt = Math.sqrt;\\n\\t    var abs = Math.abs;\\n\\t    var cos = Math.cos;\\n\\t    var sin = Math.sin;\\n\\t    var mathMax = Math.max;\\n\\n\\t    var applyTransform = vec2.applyTransform;\\n\\n\\t    var comma = ',';\\n\\t    var imageTransformPrefix = 'progid:DXImageTransform.Microsoft';\\n\\n\\t    var Z = 21600;\\n\\t    var Z2 = Z / 2;\\n\\n\\t    var ZLEVEL_BASE = 100000;\\n\\t    var Z_BASE = 1000;\\n\\n\\t    var initRootElStyle = function (el) {\\n\\t        el.style.cssText = 'position:absolute;left:0;top:0;width:1px;height:1px;';\\n\\t        el.coordsize = Z + ','  + Z;\\n\\t        el.coordorigin = '0,0';\\n\\t    };\\n\\n\\t    var encodeHtmlAttribute = function (s) {\\n\\t        return String(s).replace(/&/g, '&amp;').replace(/\\\"/g, '&quot;');\\n\\t    };\\n\\n\\t    var rgb2Str = function (r, g, b) {\\n\\t        return 'rgb(' + [r, g, b].join(',') + ')';\\n\\t    };\\n\\n\\t    var append = function (parent, child) {\\n\\t        if (child && parent && child.parentNode !== parent) {\\n\\t            parent.appendChild(child);\\n\\t        }\\n\\t    };\\n\\n\\t    var remove = function (parent, child) {\\n\\t        if (child && parent && child.parentNode === parent) {\\n\\t            parent.removeChild(child);\\n\\t        }\\n\\t    };\\n\\n\\t    var getZIndex = function (zlevel, z, z2) {\\n\\t        // z 的取值范围为 [0, 1000]\\n\\t        return (parseFloat(zlevel) || 0) * ZLEVEL_BASE + (parseFloat(z) || 0) * Z_BASE + z2;\\n\\t    };\\n\\n\\t    var parsePercent = function (value, maxValue) {\\n\\t        if (typeof value === 'string') {\\n\\t            if (value.lastIndexOf('%') >= 0) {\\n\\t                return parseFloat(value) / 100 * maxValue;\\n\\t            }\\n\\t            return parseFloat(value);\\n\\t        }\\n\\t        return value;\\n\\t    };\\n\\n\\t    /***************************************************\\n\\t     * PATH\\n\\t     **************************************************/\\n\\n\\t    var setColorAndOpacity = function (el, color, opacity) {\\n\\t        var colorArr = colorTool.parse(color);\\n\\t        opacity = +opacity;\\n\\t        if (isNaN(opacity)) {\\n\\t            opacity = 1;\\n\\t        }\\n\\t        if (colorArr) {\\n\\t            el.color = rgb2Str(colorArr[0], colorArr[1], colorArr[2]);\\n\\t            el.opacity = opacity * colorArr[3];\\n\\t        }\\n\\t    };\\n\\n\\t    var getColorAndAlpha = function (color) {\\n\\t        var colorArr = colorTool.parse(color);\\n\\t        return [\\n\\t            rgb2Str(colorArr[0], colorArr[1], colorArr[2]),\\n\\t            colorArr[3]\\n\\t        ];\\n\\t    };\\n\\n\\t    var updateFillNode = function (el, style, zrEl) {\\n\\t        // TODO pattern\\n\\t        var fill = style.fill;\\n\\t        if (fill != null) {\\n\\t            // Modified from excanvas\\n\\t            if (fill instanceof Gradient) {\\n\\t                var gradientType;\\n\\t                var angle = 0;\\n\\t                var focus = [0, 0];\\n\\t                // additional offset\\n\\t                var shift = 0;\\n\\t                // scale factor for offset\\n\\t                var expansion = 1;\\n\\t                var rect = zrEl.getBoundingRect();\\n\\t                var rectWidth = rect.width;\\n\\t                var rectHeight = rect.height;\\n\\t                if (fill.type === 'linear') {\\n\\t                    gradientType = 'gradient';\\n\\t                    var transform = zrEl.transform;\\n\\t                    var p0 = [fill.x * rectWidth, fill.y * rectHeight];\\n\\t                    var p1 = [fill.x2 * rectWidth, fill.y2 * rectHeight];\\n\\t                    if (transform) {\\n\\t                        applyTransform(p0, p0, transform);\\n\\t                        applyTransform(p1, p1, transform);\\n\\t                    }\\n\\t                    var dx = p1[0] - p0[0];\\n\\t                    var dy = p1[1] - p0[1];\\n\\t                    angle = Math.atan2(dx, dy) * 180 / Math.PI;\\n\\t                    // The angle should be a non-negative number.\\n\\t                    if (angle < 0) {\\n\\t                        angle += 360;\\n\\t                    }\\n\\n\\t                    // Very small angles produce an unexpected result because they are\\n\\t                    // converted to a scientific notation string.\\n\\t                    if (angle < 1e-6) {\\n\\t                        angle = 0;\\n\\t                    }\\n\\t                }\\n\\t                else {\\n\\t                    gradientType = 'gradientradial';\\n\\t                    var p0 = [fill.x * rectWidth, fill.y * rectHeight];\\n\\t                    var transform = zrEl.transform;\\n\\t                    var scale = zrEl.scale;\\n\\t                    var width = rectWidth;\\n\\t                    var height = rectHeight;\\n\\t                    focus = [\\n\\t                        // Percent in bounding rect\\n\\t                        (p0[0] - rect.x) / width,\\n\\t                        (p0[1] - rect.y) / height\\n\\t                    ];\\n\\t                    if (transform) {\\n\\t                        applyTransform(p0, p0, transform);\\n\\t                    }\\n\\n\\t                    width /= scale[0] * Z;\\n\\t                    height /= scale[1] * Z;\\n\\t                    var dimension = mathMax(width, height);\\n\\t                    shift = 2 * 0 / dimension;\\n\\t                    expansion = 2 * fill.r / dimension - shift;\\n\\t                }\\n\\n\\t                // We need to sort the color stops in ascending order by offset,\\n\\t                // otherwise IE won't interpret it correctly.\\n\\t                var stops = fill.colorStops.slice();\\n\\t                stops.sort(function(cs1, cs2) {\\n\\t                    return cs1.offset - cs2.offset;\\n\\t                });\\n\\n\\t                var length = stops.length;\\n\\t                // Color and alpha list of first and last stop\\n\\t                var colorAndAlphaList = [];\\n\\t                var colors = [];\\n\\t                for (var i = 0; i < length; i++) {\\n\\t                    var stop = stops[i];\\n\\t                    var colorAndAlpha = getColorAndAlpha(stop.color);\\n\\t                    colors.push(stop.offset * expansion + shift + ' ' + colorAndAlpha[0]);\\n\\t                    if (i === 0 || i === length - 1) {\\n\\t                        colorAndAlphaList.push(colorAndAlpha);\\n\\t                    }\\n\\t                }\\n\\n\\t                if (length >= 2) {\\n\\t                    var color1 = colorAndAlphaList[0][0];\\n\\t                    var color2 = colorAndAlphaList[1][0];\\n\\t                    var opacity1 = colorAndAlphaList[0][1] * style.opacity;\\n\\t                    var opacity2 = colorAndAlphaList[1][1] * style.opacity;\\n\\n\\t                    el.type = gradientType;\\n\\t                    el.method = 'none';\\n\\t                    el.focus = '100%';\\n\\t                    el.angle = angle;\\n\\t                    el.color = color1;\\n\\t                    el.color2 = color2;\\n\\t                    el.colors = colors.join(',');\\n\\t                    // When colors attribute is used, the meanings of opacity and o:opacity2\\n\\t                    // are reversed.\\n\\t                    el.opacity = opacity2;\\n\\t                    // FIXME g_o_:opacity ?\\n\\t                    el.opacity2 = opacity1;\\n\\t                }\\n\\t                if (gradientType === 'radial') {\\n\\t                    el.focusposition = focus.join(',');\\n\\t                }\\n\\t            }\\n\\t            else {\\n\\t                // FIXME Change from Gradient fill to color fill\\n\\t                setColorAndOpacity(el, fill, style.opacity);\\n\\t            }\\n\\t        }\\n\\t    };\\n\\n\\t    var updateStrokeNode = function (el, style) {\\n\\t        // if (style.lineJoin != null) {\\n\\t        //     el.joinstyle = style.lineJoin;\\n\\t        // }\\n\\t        // if (style.miterLimit != null) {\\n\\t        //     el.miterlimit = style.miterLimit * Z;\\n\\t        // }\\n\\t        // if (style.lineCap != null) {\\n\\t        //     el.endcap = style.lineCap;\\n\\t        // }\\n\\t        if (style.lineDash != null) {\\n\\t            el.dashstyle = style.lineDash.join(' ');\\n\\t        }\\n\\t        if (style.stroke != null && !(style.stroke instanceof Gradient)) {\\n\\t            setColorAndOpacity(el, style.stroke, style.opacity);\\n\\t        }\\n\\t    };\\n\\n\\t    var updateFillAndStroke = function (vmlEl, type, style, zrEl) {\\n\\t        var isFill = type == 'fill';\\n\\t        var el = vmlEl.getElementsByTagName(type)[0];\\n\\t        // Stroke must have lineWidth\\n\\t        if (style[type] != null && style[type] !== 'none' && (isFill || (!isFill && style.lineWidth))) {\\n\\t            vmlEl[isFill ? 'filled' : 'stroked'] = 'true';\\n\\t            // FIXME Remove before updating, or set `colors` will throw error\\n\\t            if (style[type] instanceof Gradient) {\\n\\t                remove(vmlEl, el);\\n\\t            }\\n\\t            if (!el) {\\n\\t                el = vmlCore.createNode(type);\\n\\t            }\\n\\n\\t            isFill ? updateFillNode(el, style, zrEl) : updateStrokeNode(el, style);\\n\\t            append(vmlEl, el);\\n\\t        }\\n\\t        else {\\n\\t            vmlEl[isFill ? 'filled' : 'stroked'] = 'false';\\n\\t            remove(vmlEl, el);\\n\\t        }\\n\\t    };\\n\\n\\t    var points = [[], [], []];\\n\\t    var pathDataToString = function (data, m) {\\n\\t        var M = CMD.M;\\n\\t        var C = CMD.C;\\n\\t        var L = CMD.L;\\n\\t        var A = CMD.A;\\n\\t        var Q = CMD.Q;\\n\\n\\t        var str = [];\\n\\t        var nPoint;\\n\\t        var cmdStr;\\n\\t        var cmd;\\n\\t        var i;\\n\\t        var xi;\\n\\t        var yi;\\n\\t        for (i = 0; i < data.length;) {\\n\\t            cmd = data[i++];\\n\\t            cmdStr = '';\\n\\t            nPoint = 0;\\n\\t            switch (cmd) {\\n\\t                case M:\\n\\t                    cmdStr = ' m ';\\n\\t                    nPoint = 1;\\n\\t                    xi = data[i++];\\n\\t                    yi = data[i++];\\n\\t                    points[0][0] = xi;\\n\\t                    points[0][1] = yi;\\n\\t                    break;\\n\\t                case L:\\n\\t                    cmdStr = ' l ';\\n\\t                    nPoint = 1;\\n\\t                    xi = data[i++];\\n\\t                    yi = data[i++];\\n\\t                    points[0][0] = xi;\\n\\t                    points[0][1] = yi;\\n\\t                    break;\\n\\t                case Q:\\n\\t                case C:\\n\\t                    cmdStr = ' c ';\\n\\t                    nPoint = 3;\\n\\t                    var x1 = data[i++];\\n\\t                    var y1 = data[i++];\\n\\t                    var x2 = data[i++];\\n\\t                    var y2 = data[i++];\\n\\t                    var x3;\\n\\t                    var y3;\\n\\t                    if (cmd === Q) {\\n\\t                        // Convert quadratic to cubic using degree elevation\\n\\t                        x3 = x2;\\n\\t                        y3 = y2;\\n\\t                        x2 = (x2 + 2 * x1) / 3;\\n\\t                        y2 = (y2 + 2 * y1) / 3;\\n\\t                        x1 = (xi + 2 * x1) / 3;\\n\\t                        y1 = (yi + 2 * y1) / 3;\\n\\t                    }\\n\\t                    else {\\n\\t                        x3 = data[i++];\\n\\t                        y3 = data[i++];\\n\\t                    }\\n\\t                    points[0][0] = x1;\\n\\t                    points[0][1] = y1;\\n\\t                    points[1][0] = x2;\\n\\t                    points[1][1] = y2;\\n\\t                    points[2][0] = x3;\\n\\t                    points[2][1] = y3;\\n\\n\\t                    xi = x3;\\n\\t                    yi = y3;\\n\\t                    break;\\n\\t                case A:\\n\\t                    var x = 0;\\n\\t                    var y = 0;\\n\\t                    var sx = 1;\\n\\t                    var sy = 1;\\n\\t                    var angle = 0;\\n\\t                    if (m) {\\n\\t                        // Extract SRT from matrix\\n\\t                        x = m[4];\\n\\t                        y = m[5];\\n\\t                        sx = sqrt(m[0] * m[0] + m[1] * m[1]);\\n\\t                        sy = sqrt(m[2] * m[2] + m[3] * m[3]);\\n\\t                        angle = Math.atan2(-m[1] / sy, m[0] / sx);\\n\\t                    }\\n\\n\\t                    var cx = data[i++];\\n\\t                    var cy = data[i++];\\n\\t                    var rx = data[i++];\\n\\t                    var ry = data[i++];\\n\\t                    var startAngle = data[i++] + angle;\\n\\t                    var endAngle = data[i++] + startAngle + angle;\\n\\t                    // FIXME\\n\\t                    // var psi = data[i++];\\n\\t                    i++;\\n\\t                    var clockwise = data[i++];\\n\\n\\t                    var x0 = cx + cos(startAngle) * rx;\\n\\t                    var y0 = cy + sin(startAngle) * ry;\\n\\n\\t                    var x1 = cx + cos(endAngle) * rx;\\n\\t                    var y1 = cy + sin(endAngle) * ry;\\n\\n\\t                    var type = clockwise ? ' wa ' : ' at ';\\n\\t                    if (Math.abs(x0 - x1) < 1e-4) {\\n\\t                        // IE won't render arches drawn counter clockwise if x0 == x1.\\n\\t                        if (Math.abs(endAngle - startAngle) > 1e-2) {\\n\\t                            // Offset x0 by 1/80 of a pixel. Use something\\n\\t                            // that can be represented in binary\\n\\t                            if (clockwise) {\\n\\t                                x0 += 270 / Z;\\n\\t                            }\\n\\t                        }\\n\\t                        else {\\n\\t                            // Avoid case draw full circle\\n\\t                            if (Math.abs(y0 - cy) < 1e-4) {\\n\\t                                if ((clockwise && x0 < cx) || (!clockwise && x0 > cx)) {\\n\\t                                    y1 -= 270 / Z;\\n\\t                                }\\n\\t                                else {\\n\\t                                    y1 += 270 / Z;\\n\\t                                }\\n\\t                            }\\n\\t                            else if ((clockwise && y0 < cy) || (!clockwise && y0 > cy)) {\\n\\t                                x1 += 270 / Z;\\n\\t                            }\\n\\t                            else {\\n\\t                                x1 -= 270 / Z;\\n\\t                            }\\n\\t                        }\\n\\t                    }\\n\\t                    str.push(\\n\\t                        type,\\n\\t                        round(((cx - rx) * sx + x) * Z - Z2), comma,\\n\\t                        round(((cy - ry) * sy + y) * Z - Z2), comma,\\n\\t                        round(((cx + rx) * sx + x) * Z - Z2), comma,\\n\\t                        round(((cy + ry) * sy + y) * Z - Z2), comma,\\n\\t                        round((x0 * sx + x) * Z - Z2), comma,\\n\\t                        round((y0 * sy + y) * Z - Z2), comma,\\n\\t                        round((x1 * sx + x) * Z - Z2), comma,\\n\\t                        round((y1 * sy + y) * Z - Z2)\\n\\t                    );\\n\\n\\t                    xi = x1;\\n\\t                    yi = y1;\\n\\t                    break;\\n\\t                case CMD.R:\\n\\t                    var p0 = points[0];\\n\\t                    var p1 = points[1];\\n\\t                    // x0, y0\\n\\t                    p0[0] = data[i++];\\n\\t                    p0[1] = data[i++];\\n\\t                    // x1, y1\\n\\t                    p1[0] = p0[0] + data[i++];\\n\\t                    p1[1] = p0[1] + data[i++];\\n\\n\\t                    if (m) {\\n\\t                        applyTransform(p0, p0, m);\\n\\t                        applyTransform(p1, p1, m);\\n\\t                    }\\n\\n\\t                    p0[0] = round(p0[0] * Z - Z2);\\n\\t                    p1[0] = round(p1[0] * Z - Z2);\\n\\t                    p0[1] = round(p0[1] * Z - Z2);\\n\\t                    p1[1] = round(p1[1] * Z - Z2);\\n\\t                    str.push(\\n\\t                        // x0, y0\\n\\t                        ' m ', p0[0], comma, p0[1],\\n\\t                        // x1, y0\\n\\t                        ' l ', p1[0], comma, p0[1],\\n\\t                        // x1, y1\\n\\t                        ' l ', p1[0], comma, p1[1],\\n\\t                        // x0, y1\\n\\t                        ' l ', p0[0], comma, p1[1]\\n\\t                    );\\n\\t                    break;\\n\\t                case CMD.Z:\\n\\t                    // FIXME Update xi, yi\\n\\t                    str.push(' x ');\\n\\t            }\\n\\n\\t            if (nPoint > 0) {\\n\\t                str.push(cmdStr);\\n\\t                for (var k = 0; k < nPoint; k++) {\\n\\t                    var p = points[k];\\n\\n\\t                    m && applyTransform(p, p, m);\\n\\t                    // 不 round 会非常慢\\n\\t                    str.push(\\n\\t                        round(p[0] * Z - Z2), comma, round(p[1] * Z - Z2),\\n\\t                        k < nPoint - 1 ? comma : ''\\n\\t                    );\\n\\t                }\\n\\t            }\\n\\t        }\\n\\n\\t        return str.join('');\\n\\t    };\\n\\n\\t    // Rewrite the original path method\\n\\t    Path.prototype.brushVML = function (vmlRoot) {\\n\\t        var style = this.style;\\n\\n\\t        var vmlEl = this._vmlEl;\\n\\t        if (!vmlEl) {\\n\\t            vmlEl = vmlCore.createNode('shape');\\n\\t            initRootElStyle(vmlEl);\\n\\n\\t            this._vmlEl = vmlEl;\\n\\t        }\\n\\n\\t        updateFillAndStroke(vmlEl, 'fill', style, this);\\n\\t        updateFillAndStroke(vmlEl, 'stroke', style, this);\\n\\n\\t        var m = this.transform;\\n\\t        var needTransform = m != null;\\n\\t        var strokeEl = vmlEl.getElementsByTagName('stroke')[0];\\n\\t        if (strokeEl) {\\n\\t            var lineWidth = style.lineWidth;\\n\\t            // Get the line scale.\\n\\t            // Determinant of this.m_ means how much the area is enlarged by the\\n\\t            // transformation. So its square root can be used as a scale factor\\n\\t            // for width.\\n\\t            if (needTransform && !style.strokeNoScale) {\\n\\t                var det = m[0] * m[3] - m[1] * m[2];\\n\\t                lineWidth *= sqrt(abs(det));\\n\\t            }\\n\\t            strokeEl.weight = lineWidth + 'px';\\n\\t        }\\n\\n\\t        var path = this.path || (this.path = new PathProxy());\\n\\t        if (this.__dirtyPath) {\\n\\t            path.beginPath();\\n\\t            this.buildPath(path, this.shape);\\n\\t            path.toStatic();\\n\\t            this.__dirtyPath = false;\\n\\t        }\\n\\n\\t        vmlEl.path = pathDataToString(path.data, this.transform);\\n\\n\\t        vmlEl.style.zIndex = getZIndex(this.zlevel, this.z, this.z2);\\n\\n\\t        // Append to root\\n\\t        append(vmlRoot, vmlEl);\\n\\n\\t        // Text\\n\\t        if (style.text != null) {\\n\\t            this.drawRectText(vmlRoot, this.getBoundingRect());\\n\\t        }\\n\\t        else {\\n\\t            this.removeRectText(vmlRoot);\\n\\t        }\\n\\t    };\\n\\n\\t    Path.prototype.onRemove = function (vmlRoot) {\\n\\t        remove(vmlRoot, this._vmlEl);\\n\\t        this.removeRectText(vmlRoot);\\n\\t    };\\n\\n\\t    Path.prototype.onAdd = function (vmlRoot) {\\n\\t        append(vmlRoot, this._vmlEl);\\n\\t        this.appendRectText(vmlRoot);\\n\\t    };\\n\\n\\t    /***************************************************\\n\\t     * IMAGE\\n\\t     **************************************************/\\n\\t    var isImage = function (img) {\\n\\t        // FIXME img instanceof Image 如果 img 是一个字符串的时候，IE8 下会报错\\n\\t        return (typeof img === 'object') && img.tagName && img.tagName.toUpperCase() === 'IMG';\\n\\t        // return img instanceof Image;\\n\\t    };\\n\\n\\t    // Rewrite the original path method\\n\\t    ZImage.prototype.brushVML = function (vmlRoot) {\\n\\t        var style = this.style;\\n\\t        var image = style.image;\\n\\n\\t        // Image original width, height\\n\\t        var ow;\\n\\t        var oh;\\n\\n\\t        if (isImage(image)) {\\n\\t            var src = image.src;\\n\\t            if (src === this._imageSrc) {\\n\\t                ow = this._imageWidth;\\n\\t                oh = this._imageHeight;\\n\\t            }\\n\\t            else {\\n\\t                var imageRuntimeStyle = image.runtimeStyle;\\n\\t                var oldRuntimeWidth = imageRuntimeStyle.width;\\n\\t                var oldRuntimeHeight = imageRuntimeStyle.height;\\n\\t                imageRuntimeStyle.width = 'auto';\\n\\t                imageRuntimeStyle.height = 'auto';\\n\\n\\t                // get the original size\\n\\t                ow = image.width;\\n\\t                oh = image.height;\\n\\n\\t                // and remove overides\\n\\t                imageRuntimeStyle.width = oldRuntimeWidth;\\n\\t                imageRuntimeStyle.height = oldRuntimeHeight;\\n\\n\\t                // Caching image original width, height and src\\n\\t                this._imageSrc = src;\\n\\t                this._imageWidth = ow;\\n\\t                this._imageHeight = oh;\\n\\t            }\\n\\t            image = src;\\n\\t        }\\n\\t        else {\\n\\t            if (image === this._imageSrc) {\\n\\t                ow = this._imageWidth;\\n\\t                oh = this._imageHeight;\\n\\t            }\\n\\t        }\\n\\t        if (!image) {\\n\\t            return;\\n\\t        }\\n\\n\\t        var x = style.x || 0;\\n\\t        var y = style.y || 0;\\n\\n\\t        var dw = style.width;\\n\\t        var dh = style.height;\\n\\n\\t        var sw = style.sWidth;\\n\\t        var sh = style.sHeight;\\n\\t        var sx = style.sx || 0;\\n\\t        var sy = style.sy || 0;\\n\\n\\t        var hasCrop = sw && sh;\\n\\n\\t        var vmlEl = this._vmlEl;\\n\\t        if (!vmlEl) {\\n\\t            // FIXME 使用 group 在 left, top 都不是 0 的时候就无法显示了。\\n\\t            // vmlEl = vmlCore.createNode('group');\\n\\t            vmlEl = vmlCore.doc.createElement('div');\\n\\t            initRootElStyle(vmlEl);\\n\\n\\t            this._vmlEl = vmlEl;\\n\\t        }\\n\\n\\t        var vmlElStyle = vmlEl.style;\\n\\t        var hasRotation = false;\\n\\t        var m;\\n\\t        var scaleX = 1;\\n\\t        var scaleY = 1;\\n\\t        if (this.transform) {\\n\\t            m = this.transform;\\n\\t            scaleX = sqrt(m[0] * m[0] + m[1] * m[1]);\\n\\t            scaleY = sqrt(m[2] * m[2] + m[3] * m[3]);\\n\\n\\t            hasRotation = m[1] || m[2];\\n\\t        }\\n\\t        if (hasRotation) {\\n\\t            // If filters are necessary (rotation exists), create them\\n\\t            // filters are bog-slow, so only create them if abbsolutely necessary\\n\\t            // The following check doesn't account for skews (which don't exist\\n\\t            // in the canvas spec (yet) anyway.\\n\\t            // From excanvas\\n\\t            var p0 = [x, y];\\n\\t            var p1 = [x + dw, y];\\n\\t            var p2 = [x, y + dh];\\n\\t            var p3 = [x + dw, y + dh];\\n\\t            applyTransform(p0, p0, m);\\n\\t            applyTransform(p1, p1, m);\\n\\t            applyTransform(p2, p2, m);\\n\\t            applyTransform(p3, p3, m);\\n\\n\\t            var maxX = mathMax(p0[0], p1[0], p2[0], p3[0]);\\n\\t            var maxY = mathMax(p0[1], p1[1], p2[1], p3[1]);\\n\\n\\t            var transformFilter = [];\\n\\t            transformFilter.push('M11=', m[0] / scaleX, comma,\\n\\t                        'M12=', m[2] / scaleY, comma,\\n\\t                        'M21=', m[1] / scaleX, comma,\\n\\t                        'M22=', m[3] / scaleY, comma,\\n\\t                        'Dx=', round(x * scaleX + m[4]), comma,\\n\\t                        'Dy=', round(y * scaleY + m[5]));\\n\\n\\t            vmlElStyle.padding = '0 ' + round(maxX) + 'px ' + round(maxY) + 'px 0';\\n\\t            // FIXME DXImageTransform 在 IE11 的兼容模式下不起作用\\n\\t            vmlElStyle.filter = imageTransformPrefix + '.Matrix('\\n\\t                + transformFilter.join('') + ', SizingMethod=clip)';\\n\\n\\t        }\\n\\t        else {\\n\\t            if (m) {\\n\\t                x = x * scaleX + m[4];\\n\\t                y = y * scaleY + m[5];\\n\\t            }\\n\\t            vmlElStyle.filter = '';\\n\\t            vmlElStyle.left = round(x) + 'px';\\n\\t            vmlElStyle.top = round(y) + 'px';\\n\\t        }\\n\\n\\t        var imageEl = this._imageEl;\\n\\t        var cropEl = this._cropEl;\\n\\n\\t        if (!imageEl) {\\n\\t            imageEl = vmlCore.doc.createElement('div');\\n\\t            this._imageEl = imageEl;\\n\\t        }\\n\\t        var imageELStyle = imageEl.style;\\n\\t        if (hasCrop) {\\n\\t            // Needs know image original width and height\\n\\t            if (! (ow && oh)) {\\n\\t                var tmpImage = new Image();\\n\\t                var self = this;\\n\\t                tmpImage.onload = function () {\\n\\t                    tmpImage.onload = null;\\n\\t                    ow = tmpImage.width;\\n\\t                    oh = tmpImage.height;\\n\\t                    // Adjust image width and height to fit the ratio destinationSize / sourceSize\\n\\t                    imageELStyle.width = round(scaleX * ow * dw / sw) + 'px';\\n\\t                    imageELStyle.height = round(scaleY * oh * dh / sh) + 'px';\\n\\n\\t                    // Caching image original width, height and src\\n\\t                    self._imageWidth = ow;\\n\\t                    self._imageHeight = oh;\\n\\t                    self._imageSrc = image;\\n\\t                };\\n\\t                tmpImage.src = image;\\n\\t            }\\n\\t            else {\\n\\t                imageELStyle.width = round(scaleX * ow * dw / sw) + 'px';\\n\\t                imageELStyle.height = round(scaleY * oh * dh / sh) + 'px';\\n\\t            }\\n\\n\\t            if (! cropEl) {\\n\\t                cropEl = vmlCore.doc.createElement('div');\\n\\t                cropEl.style.overflow = 'hidden';\\n\\t                this._cropEl = cropEl;\\n\\t            }\\n\\t            var cropElStyle = cropEl.style;\\n\\t            cropElStyle.width = round((dw + sx * dw / sw) * scaleX);\\n\\t            cropElStyle.height = round((dh + sy * dh / sh) * scaleY);\\n\\t            cropElStyle.filter = imageTransformPrefix + '.Matrix(Dx='\\n\\t                    + (-sx * dw / sw * scaleX) + ',Dy=' + (-sy * dh / sh * scaleY) + ')';\\n\\n\\t            if (! cropEl.parentNode) {\\n\\t                vmlEl.appendChild(cropEl);\\n\\t            }\\n\\t            if (imageEl.parentNode != cropEl) {\\n\\t                cropEl.appendChild(imageEl);\\n\\t            }\\n\\t        }\\n\\t        else {\\n\\t            imageELStyle.width = round(scaleX * dw) + 'px';\\n\\t            imageELStyle.height = round(scaleY * dh) + 'px';\\n\\n\\t            vmlEl.appendChild(imageEl);\\n\\n\\t            if (cropEl && cropEl.parentNode) {\\n\\t                vmlEl.removeChild(cropEl);\\n\\t                this._cropEl = null;\\n\\t            }\\n\\t        }\\n\\n\\t        var filterStr = '';\\n\\t        var alpha = style.opacity;\\n\\t        if (alpha < 1) {\\n\\t            filterStr += '.Alpha(opacity=' + round(alpha * 100) + ') ';\\n\\t        }\\n\\t        filterStr += imageTransformPrefix + '.AlphaImageLoader(src=' + image + ', SizingMethod=scale)';\\n\\n\\t        imageELStyle.filter = filterStr;\\n\\n\\t        vmlEl.style.zIndex = getZIndex(this.zlevel, this.z, this.z2);\\n\\n\\t        // Append to root\\n\\t        append(vmlRoot, vmlEl);\\n\\n\\t        // Text\\n\\t        if (style.text != null) {\\n\\t            this.drawRectText(vmlRoot, this.getBoundingRect());\\n\\t        }\\n\\t    };\\n\\n\\t    ZImage.prototype.onRemove = function (vmlRoot) {\\n\\t        remove(vmlRoot, this._vmlEl);\\n\\n\\t        this._vmlEl = null;\\n\\t        this._cropEl = null;\\n\\t        this._imageEl = null;\\n\\n\\t        this.removeRectText(vmlRoot);\\n\\t    };\\n\\n\\t    ZImage.prototype.onAdd = function (vmlRoot) {\\n\\t        append(vmlRoot, this._vmlEl);\\n\\t        this.appendRectText(vmlRoot);\\n\\t    };\\n\\n\\n\\t    /***************************************************\\n\\t     * TEXT\\n\\t     **************************************************/\\n\\n\\t    var DEFAULT_STYLE_NORMAL = 'normal';\\n\\n\\t    var fontStyleCache = {};\\n\\t    var fontStyleCacheCount = 0;\\n\\t    var MAX_FONT_CACHE_SIZE = 100;\\n\\t    var fontEl = document.createElement('div');\\n\\n\\t    var getFontStyle = function (fontString) {\\n\\t        var fontStyle = fontStyleCache[fontString];\\n\\t        if (!fontStyle) {\\n\\t            // Clear cache\\n\\t            if (fontStyleCacheCount > MAX_FONT_CACHE_SIZE) {\\n\\t                fontStyleCacheCount = 0;\\n\\t                fontStyleCache = {};\\n\\t            }\\n\\n\\t            var style = fontEl.style;\\n\\t            var fontFamily;\\n\\t            try {\\n\\t                style.font = fontString;\\n\\t                fontFamily = style.fontFamily.split(',')[0];\\n\\t            }\\n\\t            catch (e) {\\n\\t            }\\n\\n\\t            fontStyle = {\\n\\t                style: style.fontStyle || DEFAULT_STYLE_NORMAL,\\n\\t                variant: style.fontVariant || DEFAULT_STYLE_NORMAL,\\n\\t                weight: style.fontWeight || DEFAULT_STYLE_NORMAL,\\n\\t                size: parseFloat(style.fontSize || 12) | 0,\\n\\t                family: fontFamily || 'Microsoft YaHei'\\n\\t            };\\n\\n\\t            fontStyleCache[fontString] = fontStyle;\\n\\t            fontStyleCacheCount++;\\n\\t        }\\n\\t        return fontStyle;\\n\\t    };\\n\\n\\t    var textMeasureEl;\\n\\t    // Overwrite measure text method\\n\\t    textContain.measureText = function (text, textFont) {\\n\\t        var doc = vmlCore.doc;\\n\\t        if (!textMeasureEl) {\\n\\t            textMeasureEl = doc.createElement('div');\\n\\t            textMeasureEl.style.cssText = 'position:absolute;top:-20000px;left:0;'\\n\\t                + 'padding:0;margin:0;border:none;white-space:pre;';\\n\\t            vmlCore.doc.body.appendChild(textMeasureEl);\\n\\t        }\\n\\n\\t        try {\\n\\t            textMeasureEl.style.font = textFont;\\n\\t        } catch (ex) {\\n\\t            // Ignore failures to set to invalid font.\\n\\t        }\\n\\t        textMeasureEl.innerHTML = '';\\n\\t        // Don't use innerHTML or innerText because they allow markup/whitespace.\\n\\t        textMeasureEl.appendChild(doc.createTextNode(text));\\n\\t        return {\\n\\t            width: textMeasureEl.offsetWidth\\n\\t        };\\n\\t    };\\n\\n\\t    var tmpRect = new BoundingRect();\\n\\n\\t    var drawRectText = function (vmlRoot, rect, textRect, fromTextEl) {\\n\\n\\t        var style = this.style;\\n\\t        var text = style.text;\\n\\t        // Convert to string\\n\\t        text != null && (text += '');\\n\\t        if (!text) {\\n\\t            return;\\n\\t        }\\n\\n\\t        var x;\\n\\t        var y;\\n\\t        var align = style.textAlign;\\n\\t        var fontStyle = getFontStyle(style.textFont);\\n\\t        // FIXME encodeHtmlAttribute ?\\n\\t        var font = fontStyle.style + ' ' + fontStyle.variant + ' ' + fontStyle.weight + ' '\\n\\t            + fontStyle.size + 'px \\\"' + fontStyle.family + '\\\"';\\n\\n\\t        var baseline = style.textBaseline;\\n\\t        var verticalAlign = style.textVerticalAlign;\\n\\n\\t        textRect = textRect || textContain.getBoundingRect(text, font, align, baseline);\\n\\n\\t        // Transform rect to view space\\n\\t        var m = this.transform;\\n\\t        // Ignore transform for text in other element\\n\\t        if (m && !fromTextEl) {\\n\\t            tmpRect.copy(rect);\\n\\t            tmpRect.applyTransform(m);\\n\\t            rect = tmpRect;\\n\\t        }\\n\\n\\t        if (!fromTextEl) {\\n\\t            var textPosition = style.textPosition;\\n\\t            var distance = style.textDistance;\\n\\t            // Text position represented by coord\\n\\t            if (textPosition instanceof Array) {\\n\\t                x = rect.x + parsePercent(textPosition[0], rect.width);\\n\\t                y = rect.y + parsePercent(textPosition[1], rect.height);\\n\\n\\t                align = align || 'left';\\n\\t                baseline = baseline || 'top';\\n\\t            }\\n\\t            else {\\n\\t                var res = textContain.adjustTextPositionOnRect(\\n\\t                    textPosition, rect, textRect, distance\\n\\t                );\\n\\t                x = res.x;\\n\\t                y = res.y;\\n\\n\\t                // Default align and baseline when has textPosition\\n\\t                align = align || res.textAlign;\\n\\t                baseline = baseline || res.textBaseline;\\n\\t            }\\n\\t        }\\n\\t        else {\\n\\t            x = rect.x;\\n\\t            y = rect.y;\\n\\t        }\\n\\t        if (verticalAlign) {\\n\\t            switch (verticalAlign) {\\n\\t                case 'middle':\\n\\t                    y -= textRect.height / 2;\\n\\t                    break;\\n\\t                case 'bottom':\\n\\t                    y -= textRect.height;\\n\\t                    break;\\n\\t                // 'top'\\n\\t            }\\n\\t            // Ignore baseline\\n\\t            baseline = 'top';\\n\\t        }\\n\\n\\t        var fontSize = fontStyle.size;\\n\\t        // 1.75 is an arbitrary number, as there is no info about the text baseline\\n\\t        switch (baseline) {\\n\\t            case 'hanging':\\n\\t            case 'top':\\n\\t                y += fontSize / 1.75;\\n\\t                break;\\n\\t            case 'middle':\\n\\t                break;\\n\\t            default:\\n\\t            // case null:\\n\\t            // case 'alphabetic':\\n\\t            // case 'ideographic':\\n\\t            // case 'bottom':\\n\\t                y -= fontSize / 2.25;\\n\\t                break;\\n\\t        }\\n\\t        switch (align) {\\n\\t            case 'left':\\n\\t                break;\\n\\t            case 'center':\\n\\t                x -= textRect.width / 2;\\n\\t                break;\\n\\t            case 'right':\\n\\t                x -= textRect.width;\\n\\t                break;\\n\\t            // case 'end':\\n\\t                // align = elementStyle.direction == 'ltr' ? 'right' : 'left';\\n\\t                // break;\\n\\t            // case 'start':\\n\\t                // align = elementStyle.direction == 'rtl' ? 'right' : 'left';\\n\\t                // break;\\n\\t            // default:\\n\\t            //     align = 'left';\\n\\t        }\\n\\n\\t        var createNode = vmlCore.createNode;\\n\\n\\t        var textVmlEl = this._textVmlEl;\\n\\t        var pathEl;\\n\\t        var textPathEl;\\n\\t        var skewEl;\\n\\t        if (!textVmlEl) {\\n\\t            textVmlEl = createNode('line');\\n\\t            pathEl = createNode('path');\\n\\t            textPathEl = createNode('textpath');\\n\\t            skewEl = createNode('skew');\\n\\n\\t            // FIXME Why here is not cammel case\\n\\t            // Align 'center' seems wrong\\n\\t            textPathEl.style['v-text-align'] = 'left';\\n\\n\\t            initRootElStyle(textVmlEl);\\n\\n\\t            pathEl.textpathok = true;\\n\\t            textPathEl.on = true;\\n\\n\\t            textVmlEl.from = '0 0';\\n\\t            textVmlEl.to = '1000 0.05';\\n\\n\\t            append(textVmlEl, skewEl);\\n\\t            append(textVmlEl, pathEl);\\n\\t            append(textVmlEl, textPathEl);\\n\\n\\t            this._textVmlEl = textVmlEl;\\n\\t        }\\n\\t        else {\\n\\t            // 这里是在前面 appendChild 保证顺序的前提下\\n\\t            skewEl = textVmlEl.firstChild;\\n\\t            pathEl = skewEl.nextSibling;\\n\\t            textPathEl = pathEl.nextSibling;\\n\\t        }\\n\\n\\t        var coords = [x, y];\\n\\t        var textVmlElStyle = textVmlEl.style;\\n\\t        // Ignore transform for text in other element\\n\\t        if (m && fromTextEl) {\\n\\t            applyTransform(coords, coords, m);\\n\\n\\t            skewEl.on = true;\\n\\n\\t            skewEl.matrix = m[0].toFixed(3) + comma + m[2].toFixed(3) + comma +\\n\\t            m[1].toFixed(3) + comma + m[3].toFixed(3) + ',0,0';\\n\\n\\t            // Text position\\n\\t            skewEl.offset = (round(coords[0]) || 0) + ',' + (round(coords[1]) || 0);\\n\\t            // Left top point as origin\\n\\t            skewEl.origin = '0 0';\\n\\n\\t            textVmlElStyle.left = '0px';\\n\\t            textVmlElStyle.top = '0px';\\n\\t        }\\n\\t        else {\\n\\t            skewEl.on = false;\\n\\t            textVmlElStyle.left = round(x) + 'px';\\n\\t            textVmlElStyle.top = round(y) + 'px';\\n\\t        }\\n\\n\\t        textPathEl.string = encodeHtmlAttribute(text);\\n\\t        // TODO\\n\\t        try {\\n\\t            textPathEl.style.font = font;\\n\\t        }\\n\\t        // Error font format\\n\\t        catch (e) {}\\n\\n\\t        updateFillAndStroke(textVmlEl, 'fill', {\\n\\t            fill: fromTextEl ? style.fill : style.textFill,\\n\\t            opacity: style.opacity\\n\\t        }, this);\\n\\t        updateFillAndStroke(textVmlEl, 'stroke', {\\n\\t            stroke: fromTextEl ? style.stroke : style.textStroke,\\n\\t            opacity: style.opacity,\\n\\t            lineDash: style.lineDash\\n\\t        }, this);\\n\\n\\t        textVmlEl.style.zIndex = getZIndex(this.zlevel, this.z, this.z2);\\n\\n\\t        // Attached to root\\n\\t        append(vmlRoot, textVmlEl);\\n\\t    };\\n\\n\\t    var removeRectText = function (vmlRoot) {\\n\\t        remove(vmlRoot, this._textVmlEl);\\n\\t        this._textVmlEl = null;\\n\\t    };\\n\\n\\t    var appendRectText = function (vmlRoot) {\\n\\t        append(vmlRoot, this._textVmlEl);\\n\\t    };\\n\\n\\t    var list = [RectText, Displayable, ZImage, Path, Text];\\n\\n\\t    // In case Displayable has been mixed in RectText\\n\\t    for (var i = 0; i < list.length; i++) {\\n\\t        var proto = list[i].prototype;\\n\\t        proto.drawRectText = drawRectText;\\n\\t        proto.removeRectText = removeRectText;\\n\\t        proto.appendRectText = appendRectText;\\n\\t    }\\n\\n\\t    Text.prototype.brushVML = function (vmlRoot) {\\n\\t        var style = this.style;\\n\\t        if (style.text != null) {\\n\\t            this.drawRectText(vmlRoot, {\\n\\t                x: style.x || 0, y: style.y || 0,\\n\\t                width: 0, height: 0\\n\\t            }, this.getBoundingRect(), true);\\n\\t        }\\n\\t        else {\\n\\t            this.removeRectText(vmlRoot);\\n\\t        }\\n\\t    };\\n\\n\\t    Text.prototype.onRemove = function (vmlRoot) {\\n\\t        this.removeRectText(vmlRoot);\\n\\t    };\\n\\n\\t    Text.prototype.onAdd = function (vmlRoot) {\\n\\t        this.appendRectText(vmlRoot);\\n\\t    };\\n\\t}\\n\\n\\n/***/ },\\n/* 426 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t\\n\\n\\tif (!__webpack_require__(2).canvasSupported) {\\n\\t    var urn = 'urn:schemas-microsoft-com:vml';\\n\\n\\t    var createNode;\\n\\t    var win = window;\\n\\t    var doc = win.document;\\n\\n\\t    var vmlInited = false;\\n\\n\\t    try {\\n\\t        !doc.namespaces.zrvml && doc.namespaces.add('zrvml', urn);\\n\\t        createNode = function (tagName) {\\n\\t            return doc.createElement('<zrvml:' + tagName + ' class=\\\"zrvml\\\">');\\n\\t        };\\n\\t    }\\n\\t    catch (e) {\\n\\t        createNode = function (tagName) {\\n\\t            return doc.createElement('<' + tagName + ' xmlns=\\\"' + urn + '\\\" class=\\\"zrvml\\\">');\\n\\t        };\\n\\t    }\\n\\n\\t    // From raphael\\n\\t    var initVML = function () {\\n\\t        if (vmlInited) {\\n\\t            return;\\n\\t        }\\n\\t        vmlInited = true;\\n\\n\\t        var styleSheets = doc.styleSheets;\\n\\t        if (styleSheets.length < 31) {\\n\\t            doc.createStyleSheet().addRule('.zrvml', 'behavior:url(#default#VML)');\\n\\t        }\\n\\t        else {\\n\\t            // http://msdn.microsoft.com/en-us/library/ms531194%28VS.85%29.aspx\\n\\t            styleSheets[0].addRule('.zrvml', 'behavior:url(#default#VML)');\\n\\t        }\\n\\t    };\\n\\n\\t    // Not useing return to avoid error when converting to CommonJS module\\n\\t    module.exports = {\\n\\t        doc: doc,\\n\\t        initVML: initVML,\\n\\t        createNode: createNode\\n\\t    };\\n\\t}\\n\\n\\n/***/ },\\n/* 427 */\\n/***/ function(module, exports, __webpack_require__) {\\n\\n\\t/**\\n\\t * VML Painter.\\n\\t *\\n\\t * @module zrender/vml/Painter\\n\\t */\\n\\n\\n\\n\\t    var zrLog = __webpack_require__(33);\\n\\t    var vmlCore = __webpack_require__(426);\\n\\n\\t    function parseInt10(val) {\\n\\t        return parseInt(val, 10);\\n\\t    }\\n\\n\\t    /**\\n\\t     * @alias module:zrender/vml/Painter\\n\\t     */\\n\\t    function VMLPainter(root, storage) {\\n\\n\\t        vmlCore.initVML();\\n\\n\\t        this.root = root;\\n\\n\\t        this.storage = storage;\\n\\n\\t        var vmlViewport = document.createElement('div');\\n\\n\\t        var vmlRoot = document.createElement('div');\\n\\n\\t        vmlViewport.style.cssText = 'display:inline-block;overflow:hidden;position:relative;width:300px;height:150px;';\\n\\n\\t        vmlRoot.style.cssText = 'position:absolute;left:0;top:0;';\\n\\n\\t        root.appendChild(vmlViewport);\\n\\n\\t        this._vmlRoot = vmlRoot;\\n\\t        this._vmlViewport = vmlViewport;\\n\\n\\t        this.resize();\\n\\n\\t        // Modify storage\\n\\t        var oldDelFromStorage = storage.delFromStorage;\\n\\t        var oldAddToStorage = storage.addToStorage;\\n\\t        storage.delFromStorage = function (el) {\\n\\t            oldDelFromStorage.call(storage, el);\\n\\n\\t            if (el) {\\n\\t                el.onRemove && el.onRemove(vmlRoot);\\n\\t            }\\n\\t        };\\n\\n\\t        storage.addToStorage = function (el) {\\n\\t            // Displayable already has a vml node\\n\\t            el.onAdd && el.onAdd(vmlRoot);\\n\\n\\t            oldAddToStorage.call(storage, el);\\n\\t        };\\n\\n\\t        this._firstPaint = true;\\n\\t    }\\n\\n\\t    VMLPainter.prototype = {\\n\\n\\t        constructor: VMLPainter,\\n\\n\\t        /**\\n\\t         * @return {HTMLDivElement}\\n\\t         */\\n\\t        getViewportRoot: function () {\\n\\t            return this._vmlViewport;\\n\\t        },\\n\\n\\t        /**\\n\\t         * 刷新\\n\\t         */\\n\\t        refresh: function () {\\n\\n\\t            var list = this.storage.getDisplayList(true, true);\\n\\n\\t            this._paintList(list);\\n\\t        },\\n\\n\\t        _paintList: function (list) {\\n\\t            var vmlRoot = this._vmlRoot;\\n\\t            for (var i = 0; i < list.length; i++) {\\n\\t                var el = list[i];\\n\\t                if (el.invisible || el.ignore) {\\n\\t                    if (!el.__alreadyNotVisible) {\\n\\t                        el.onRemove(vmlRoot);\\n\\t                    }\\n\\t                    // Set as already invisible\\n\\t                    el.__alreadyNotVisible = true;\\n\\t                }\\n\\t                else {\\n\\t                    if (el.__alreadyNotVisible) {\\n\\t                        el.onAdd(vmlRoot);\\n\\t                    }\\n\\t                    el.__alreadyNotVisible = false;\\n\\t                    if (el.__dirty) {\\n\\t                        el.beforeBrush && el.beforeBrush();\\n\\t                        (el.brushVML || el.brush).call(el, vmlRoot);\\n\\t                        el.afterBrush && el.afterBrush();\\n\\t                    }\\n\\t                }\\n\\t                el.__dirty = false;\\n\\t            }\\n\\n\\t            if (this._firstPaint) {\\n\\t                // Detached from document at first time\\n\\t                // to avoid page refreshing too many times\\n\\n\\t                // FIXME 如果每次都先 removeChild 可能会导致一些填充和描边的效果改变\\n\\t                this._vmlViewport.appendChild(vmlRoot);\\n\\t                this._firstPaint = false;\\n\\t            }\\n\\t        },\\n\\n\\t        resize: function (width, height) {\\n\\t            var width = width == null ? this._getWidth() : width;\\n\\t            var height = height == null ? this._getHeight() : height;\\n\\n\\t            if (this._width != width || this._height != height) {\\n\\t                this._width = width;\\n\\t                this._height = height;\\n\\n\\t                var vmlViewportStyle = this._vmlViewport.style;\\n\\t                vmlViewportStyle.width = width + 'px';\\n\\t                vmlViewportStyle.height = height + 'px';\\n\\t            }\\n\\t        },\\n\\n\\t        dispose: function () {\\n\\t            this.root.innerHTML = '';\\n\\n\\t            this._vmlRoot =\\n\\t            this._vmlViewport =\\n\\t            this.storage = null;\\n\\t        },\\n\\n\\t        getWidth: function () {\\n\\t            return this._width;\\n\\t        },\\n\\n\\t        getHeight: function () {\\n\\t            return this._height;\\n\\t        },\\n\\n\\t        clear: function () {\\n\\t            if (this._vmlViewport) {\\n\\t                this.root.removeChild(this._vmlViewport);\\n\\t            }\\n\\t        },\\n\\n\\t        _getWidth: function () {\\n\\t            var root = this.root;\\n\\t            var stl = root.currentStyle;\\n\\n\\t            return ((root.clientWidth || parseInt10(stl.width))\\n\\t                    - parseInt10(stl.paddingLeft)\\n\\t                    - parseInt10(stl.paddingRight)) | 0;\\n\\t        },\\n\\n\\t        _getHeight: function () {\\n\\t            var root = this.root;\\n\\t            var stl = root.currentStyle;\\n\\n\\t            return ((root.clientHeight || parseInt10(stl.height))\\n\\t                    - parseInt10(stl.paddingTop)\\n\\t                    - parseInt10(stl.paddingBottom)) | 0;\\n\\t        }\\n\\t    };\\n\\n\\t    // Not supported methods\\n\\t    function createMethodNotSupport(method) {\\n\\t        return function () {\\n\\t            zrLog('In IE8.0 VML mode painter not support method \\\"' + method + '\\\"');\\n\\t        };\\n\\t    }\\n\\n\\t    var notSupportedMethods = [\\n\\t        'getLayer', 'insertLayer', 'eachLayer', 'eachBuiltinLayer', 'eachOtherLayer', 'getLayers',\\n\\t        'modLayer', 'delLayer', 'clearLayer', 'toDataURL', 'pathToImage'\\n\\t    ];\\n\\n\\t    for (var i = 0; i < notSupportedMethods.length; i++) {\\n\\t        var name = notSupportedMethods[i];\\n\\t        VMLPainter.prototype[name] = createMethodNotSupport(name);\\n\\t    }\\n\\n\\t    module.exports = VMLPainter;\\n\\n\\n/***/ }\\n/******/ ])\\n});\\n;\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/skadyeyes/代码/chart/~/raw-loader!/Users/skadyeyes/代码/chart/~/echarts/dist/echarts.js\n// module id = ../../../../raw-loader/index.js!../../../../echarts/dist/echarts.js\n// module chunks = 3","module.exports = \"(function (root, factory) {\\n    if (typeof define === 'function' && define.amd) {\\n        // AMD. Register as an anonymous module.\\n        define(['exports', 'echarts'], factory);\\n    } else if (typeof exports === 'object' && typeof exports.nodeName !== 'string') {\\n        // CommonJS\\n        factory(exports, require('echarts'));\\n    } else {\\n        // Browser globals\\n        factory({}, root.echarts);\\n    }\\n}(this, function (exports, echarts) {\\n    var log = function (msg) {\\n        if (typeof console !== 'undefined') {\\n            console && console.error && console.error(msg);\\n        }\\n    }\\n    if (!echarts) {\\n        log('ECharts is not Loaded');\\n        return;\\n    }\\n    if (!echarts.registerMap) {\\n        log('ECharts Map is not loaded')\\n        return;\\n    }\\n    echarts.registerMap('china', {\\\"type\\\":\\\"FeatureCollection\\\",\\\"features\\\":[{\\\"id\\\":\\\"710000\\\",\\\"type\\\":\\\"Feature\\\",\\\"geometry\\\":{\\\"type\\\":\\\"MultiPolygon\\\",\\\"coordinates\\\":[[\\\"@@°Ü¯Û\\\"],[\\\"@@ƛĴÕƊÉɼģºðʀ\\\\\\\\ƎsÆNŌÔĚänÜƤɊĂǀĆĴĤǊŨxĚĮǂƺòƌâÔ®ĮXŦţƸZûÐƕƑGđ¨ĭMó·ęcëƝɉlÝƯֹÅŃ^Ó·śŃǋƏďíåɛGɉ¿@ăƑ¥ĘWǬÏĶŁâ\\\"],[\\\"@@\\\\\\\\p|WoYG¿¥Ij@¢\\\"],[\\\"@@¡@V^RqBbAnTXeRz¤L«³I\\\"],[\\\"@@ÆEEkWqë @\\\"],[\\\"@@fced\\\"]],\\\"encodeOffsets\\\":[[[122886,24033]],[[123335,22980]],[[122375,24193]],[[122518,24117]],[[124427,22618]],[[124862,26043]]]},\\\"properties\\\":{\\\"cp\\\":[121.509062,25.044332],\\\"name\\\":\\\"台湾\\\",\\\"childNum\\\":6}},{\\\"id\\\":\\\"130000\\\",\\\"type\\\":\\\"Feature\\\",\\\"geometry\\\":{\\\"type\\\":\\\"MultiPolygon\\\",\\\"coordinates\\\":[[\\\"@@o~Z]ªrºc_ħ²G¼s`jÎŸnüsÂłNX_M`Ç½ÓnUKĜēs¤­©yrý§uģcJe\\\"],[\\\"@@U`Ts¿mÂ\\\"],[\\\"@@oºƋÄdeVDJj£J|ÅdzÂFt~KŨ¸IÆv|¢r}èonb}`RÎÄn°ÒdÞ²^®lnÐèĄlðÓ×]ªÆ}LiĂ±Ö`^°Ç¶p®đDcŋ`ZÔ¶êqvFÆN®ĆTH®¦O¾IbÐã´BĐɢŴÆíȦpĐÞXR·nndO¤OÀĈƒ­QgµFo|gȒęSWb©osx|hYhgŃfmÖĩnºTÌSp¢dYĤ¶UĈjlǐpäìë|³kÛfw²Xjz~ÂqbTÑěŨ@|oMzv¢ZrÃVw¬ŧĖ¸f°ÐTªqs{S¯r æÝlNd®²Ğ ǆiGĘJ¼lr}~K¨ŸƐÌWöÆzR¤lêmĞLÎ@¡|q]SvKÑcwpÏÏĿćènĪWlĄkT}J¤~ÈTdpddʾĬBVtEÀ¢ôPĎƗè@~kü\\\\\\\\rÊĔÖæW_§¼F´©òDòjYÈrbĞāøŀG{ƀ|¦ðrb|ÀH`pʞkvGpuARhÞÆǶgĘTǼƹS£¨¡ù³ŘÍ]¿ÂyôEP xX¶¹ÜO¡gÚ¡IwÃé¦ÅBÏ|Ç°N«úmH¯âDùyŜŲIÄuĐ¨D¸dɂFOhđ©OiÃ`ww^ÌkÑH«ƇǤŗĺtFu{Z}Ö@U´ʚLg®¯Oı°Ãw ^VbÉsmAê]]w§RRl£ȭµu¯b{ÍDěïÿȧuT£ġěŗƃĝQ¨fVƋƅn­a@³@ďyÃ½IĹÊKŭfċŰóxV@tƯJ]eR¾fe|rHA|h~Ėƍl§ÏlTíb ØoÅbbx³^zÃĶ¶Sj®AyÂhðk`«PËµEFÛ¬Y¨Ļrõqi¼Wi°§Ð±´°^[À|ĠO@ÆxO\\\\\\\\ta\\\\\\\\tĕtû{ġȧXýĪÓjùÎRb^ÎfK[ÝděYfíÙTyuUSyŌŏů@Oi½éŅ­aVcř§ax¹XŻácWU£ôãºQ¨÷Ñws¥qEHÙ|šYQoŕÇyáĂ£MÃ°oťÊP¡mWO¡v{ôvîēÜISpÌhp¨ jdeŔQÖjX³àĈ[n`Yp@UcM`RKhEbpŞlNut®EtqnsÁgAiúoHqCXhfgu~ÏWP½¢G^}¯ÅīGCÑ^ãziMáļMTÃƘrMc|O_¯Ŏ´|morDkO\\\\\\\\mĆJfl@cĢ¬¢aĦtRıÒ¾ùƀ^juųœK­UFyƝīÛ÷ąV×qƥV¿aȉd³BqPBmaËđŻģmÅ®V¹d^KKonYg¯XhqaLdu¥Ípǅ¡KąÅkĝęěhq}HyÃ]¹ǧ£Í÷¿qáµ§g¤o^á¾ZE¤i`ĳ{nOl»WÝĔįhgF[¿¡ßkOüš_ūiǱàUtėGyl}ÓM}jpEC~¡FtoQiHkk{Ãmï\\\"]],\\\"encodeOffsets\\\":[[[119712,40641]],[[121616,39981]],[[116462,37237]]]},\\\"properties\\\":{\\\"cp\\\":[114.502461,38.045474],\\\"name\\\":\\\"河北\\\",\\\"childNum\\\":3}},{\\\"id\\\":\\\"140000\\\",\\\"type\\\":\\\"Feature\\\",\\\"geometry\\\":{\\\"type\\\":\\\"Polygon\\\",\\\"coordinates\\\":[\\\"@@ÞĩÒSra}ÁyWix±Üe´lèßÓǏokćiµVZģ¡coTSË¹ĪmnÕńehZg{gtwªpXaĚThȑp{¶Eh®RćƑP¿£Pmc¸mQÝWďȥoÅîɡųAďä³aÏJ½¥PG­ąSM­EÅruµéYÓŌ_dĒCo­Èµ]¯_²ÕjāK~©ÅØ^ÔkïçămÏk]­±cÝ¯ÑÃmQÍ~_apm~ç¡qu{JÅŧ·Ls}EyÁÆcI{¤IiCfUcƌÃp§]ě«vD@¡SÀµMÅwuYY¡DbÑc¡h×]nkoQdaMç~eDÛtT©±@¥ù@É¡ZcW|WqOJmĩl«ħşvOÓ«IqăV¥D[mI~Ó¢cehiÍ]Ɠ~ĥqX·eƷn±}v[ěďŕ]_œ`¹§ÕōIo©b­s^}Ét±ū«³p£ÿ·Wµ|¡¥ăFÏs×¥ŅxÊdÒ{ºvĴÎêÌɊ²¶ü¨|ÞƸµȲLLúÉƎ¤ϊęĔV`_bªS^|dzY|dz¥pZbÆ£¶ÒK}tĦÔņƠPYznÍvX¶Ěn ĠÔzý¦ª÷ÑĸÙUȌ¸dòÜJð´ìúNM¬XZ´¤ŊǸ_tldI{¦ƀðĠȤ¥NehXnYGR° ƬDj¬¸|CĞKqºfƐiĺ©ª~ĆOQª ¤@ìǦɌ²æBÊTŸʂōĖĴŞȀÆÿȄlŤĒötÎ½î¼ĨXh|ªM¤Ðz\\\"],\\\"encodeOffsets\\\":[[116874,41716]]},\\\"properties\\\":{\\\"cp\\\":[112.549248,37.857014],\\\"name\\\":\\\"山西\\\",\\\"childNum\\\":1}},{\\\"id\\\":\\\"150000\\\",\\\"type\\\":\\\"Feature\\\",\\\"geometry\\\":{\\\"type\\\":\\\"MultiPolygon\\\",\\\"coordinates\\\":[[\\\"@@Č^â£ĂhĖMÈÄw\\\\\\\\fŦ°W ¢¾luŸDw\\\\\\\\̀ʉÌÛMĀ[bÓEn}¶Vcês¯PqFB|S³C|kñHdiÄ¥sŉÅPóÑÑE^ÅPpy_YtShQ·aHwsOnŉÃs©iqjUSiº]ïW«gW¡ARëśĳĘů`çõh]y»ǃǛҤxÒm~zf}pf|ÜroÈzrKÈĵSƧż؜Ġu¦ö\\\"],[\\\"@@sKCGS|úþXgp{ÁX¿ć{ƱȏñZáĔyoÁhA}ŅĆfdŉ_¹Y°ėǩÑ¡H¯¶oMQqð¡Ë|Ñ`ƭŁX½·óÛxğįÅcQs«tȋǅFù^it«Č¯[hAi©á¥ÇĚ×l|¹y¯YȵƓñǙµïċĻ|Düȭ¶¡oŽäÕG\\\\\\\\ÄT¿Òõr¯LguÏYęRƩɷŌO\\\\\\\\İÐ¢æ^Ŋ ĲȶȆbÜGĝ¬¿ĚVĎgª^íu½jÿĕęjık@Ľ]ėl¥ËĭûÁėéV©±ćn©­ȇÍq¯½YÃÔŉÉNÑÅÝy¹NqáʅDǡËñ­ƁYÅy̱os§ȋµʽǘǏƬɱàưN¢ƔÊuľýľώȪƺɂļxZĈ}ÌŉŪĺœĭFЛĽ̅ȣͽÒŵìƩÇϋÿȮǡŏçƑůĕ~Ç¼ȳÐUfdIxÿ\\\\\\\\G zâɏÙOº·pqy£@qþ@Ǟ˽IBäƣzsÂZÁàĻdñ°ŕzéØűzșCìDȐĴĺf®Àľưø@ɜÖÞKĊŇƄ§͑těï͡VAġÑÑ»d³öǍÝXĉĕÖ{þĉu¸ËʅğU̎éhɹƆ̗̮ȘǊ֥ड़ࡰţાíϲäʮW¬®ҌeרūȠkɬɻ̼ãüfƠSצɩςåȈHϚÎKǳͲOðÏȆƘ¼CϚǚ࢚˼ФÔ¤ƌĞ̪Qʤ´¼mȠJˀƲÀɠmǐnǔĎȆÞǠN~ʢĜ¶ƌĆĘźʆȬ˪ĚĒ¸ĞGȖƴƀj`ĢçĶāàŃºēĢĖćYÀŎüôQÐÂŎŞǆŞêƖoˆDĤÕºÑǘÛˤ³̀gńƘĔÀ^ªƂ`ªt¾äƚêĦĀ¼ÐĔǎ¨Ȕ»͠^ˮÊȦƤøxRrŜH¤¸ÂxDÄ|ø˂˜ƮÐ¬ɚwɲFjĔ²Äw°ǆdÀÉ_ĸdîàŎjÊêTĞªŌŜWÈ|tqĢUB~´°ÎFCU¼pĀēƄN¦¾O¶łKĊOjĚj´ĜYp{¦SĚÍ\\\\\\\\T×ªV÷Ší¨ÅDK°ßtŇĔK¨ǵÂcḷ̌ĚǣȄĽFlġUĵŇȣFʉɁMğįʏƶɷØŭOǽ«ƽū¹Ʊő̝Ȩ§ȞʘĖiɜɶʦ}¨֪ࠜ̀ƇǬ¹ǨE˦ĥªÔêFxúQEr´Wrh¤Ɛ \\\\\\\\talĈDJÜ|[Pll̚¸ƎGú´P¬W¦^¦H]prRn|or¾wLVnÇIujkmon£cX^Bh`¥V¦U¤¸}xRj[^xN[~ªxQ[`ªHÆÂExx^wN¶Ê|¨ìMrdYpoRzNyÀDs~bcfÌ`L¾n|¾T°c¨È¢ar¤`[|òDŞĔöxElÖdHÀI`Ď\\\\\\\\Àì~ÆR¼tf¦^¢ķ¶eÐÚMptgjɡČÅyġLûŇV®ÄÈƀĎ°P|ªVVªj¬ĚÒêp¬E|ŬÂc|ÀtƐK f{ĘFĒƌXƲąo½Ę\\\\\\\\¥o}Ûu£ç­kX{uĩ«āíÓUŅßŢqŤ¥lyň[oi{¦LńðFȪȖĒL¿Ìf£K£ʺoqNwğc`uetOj×°KJ±qÆġmĚŗos¬qehqsuH{¸kH¡ÊRǪÇƌbȆ¢´äÜ¢NìÉʖ¦â©Ż؛Ç@Vu»Aylßí¹ĵêÝlISò³C¹Ìâ²i¶Ìoú^H²CǜңǄ z¼g^èöŰ_Ĳĕê}gÁnUI«m]jvV¼euhwqAaW_µj»çjioQR¹ēÃßt@r³[ÛlćË^ÍÉáGOUÛOB±XkÅ¹£k|e]olkVÍ¼ÕqtaÏõjgÁ£§U^RLËnX°ÇBz^~wfvypV ¯ƫĉ˭ȫƗŷɿÿĿƑ˃ĝÿÃǃßËőó©ǐȍŒĖM×ÍEyxþp]ÉvïèvƀnÂĴÖ@V~Ĉ³MEĸÅĖtējyÄDXÄxGQuv_i¦aBçw˛wD©{tāmQ{EJ§KPśƘƿ¥@sCTÉ}ɃwƇy±gÑ}T[÷kÐç¦«SÒ¥¸ëBX½HáÅµÀğtSÝÂa[ƣ°¯¦Pï¡]£ġÒk®G²èQ°óMq}EóƐÇ\\\\\\\\@áügQÍu¥FTÕ¿Jû]|mvāÎYua^WoÀa·­ząÒot×¶CLƗi¯¤mƎHǊ¤îìɾŊìTdåwsRÖgĒųúÍġäÕ}Q¶¿A[¡{d×uQAMxVvMOmăl«ct[wº_ÇÊjbÂ£ĦS_éQZ_lwgOiýe`YYLq§IÁǳ£ÙË[ÕªuƏ³ÍTs·bÁĽäė[b[ŗfãcn¥îC¿÷µ[ŏÀQ­ōĉm¿Á^£mJVmL[{Ï_£F¥Ö{ŹA}×Wu©ÅaųĳƳhB{·TQqÙIķËZđ©Yc|M¡LeVUóK_QWk_ĥ¿ãZ»X\\\\\\\\ĴuUèlG®ěłTĠğDŃOrÍdÆÍz]±ŭ©Å]ÅÐ}UË¥©TċïxgckfWgi\\\\\\\\ÏĒ¥HkµEë{»ÏetcG±ahUiñiWsɁ·cCÕk]wȑ|ća}wVaĚá G°ùnM¬¯{ÈÐÆA¥ÄêJxÙ¢hP¢ÛºµwWOóFÁz^ÀŗÎú´§¢T¤ǻƺSėǵhÝÅQgvBHouʝl_o¿Ga{ïq{¥|ſĿHĂ÷aĝÇqZñiñC³ª»E`¨åXēÕqÉû[l}ç@čƘóO¿¡FUsAʽīccocÇS}£IS~ălkĩXçmĈŀÐoÐdxÒuL^T{r@¢ÍĝKén£kQyÅõËXŷƏL§~}kq»IHėǅjĝ»ÑÞoå°qTt|r©ÏS¯·eŨĕx«È[eM¿yupN~¹ÏyN£{©għWí»Í¾səšǅ_ÃĀɗ±ąĳĉʍŌŷSÉA±åǥɋ@ë£R©ąP©}ĹªƏj¹erLDĝ·{i«ƫC£µ\\\"]],\\\"encodeOffsets\\\":[[[127444,52594]],[[113793,40312]]]},\\\"properties\\\":{\\\"cp\\\":[111.670801,40.818311],\\\"name\\\":\\\"内蒙古\\\",\\\"childNum\\\":2}},{\\\"id\\\":\\\"210000\\\",\\\"type\\\":\\\"Feature\\\",\\\"geometry\\\":{\\\"type\\\":\\\"MultiPolygon\\\",\\\"coordinates\\\":[[\\\"@@L@@sa\\\"],[\\\"@@MnNm\\\"],[\\\"@@dc\\\"],[\\\"@@eÀC@b\\\"],[\\\"@@fXwkbrÄ`qg\\\"],[\\\"@@^jtWQ\\\"],[\\\"@@~ Y]c\\\"],[\\\"@@G`ĔN^_¿ZÃM\\\"],[\\\"@@iX¶BY\\\"],[\\\"@@YZ\\\"],[\\\"@@L_{Epf\\\"],[\\\"@@^WqCT\\\\\\\\\\\"],[\\\"@@\\\\\\\\[§t|¤_\\\"],[\\\"@@m`n_\\\"],[\\\"@@Ïxǌ{q_×^Giip\\\"],[\\\"@@@é^BntaÊU]x ¯ÄPĲ­°hʙK³VÕ@Y~|EvĹsÇ¦­L^pÃ²ŸÒG Ël]xxÄ_fT¤Ď¤cPC¨¸TVjbgH²sdÎdHt`B²¬GJję¶[ÐhjeXdlwhðSČ¦ªVÊÏÆZÆŶ®²^ÎyÅÎcPqńĚDMħĜŁH­kçvV[ĳ¼WYÀäĦ`XlR`ôLUVfK¢{NZdĒªYĸÌÚJRr¸SA|ƴgŴĴÆbvªØX~źB|¦ÕE¤Ð`\\\\\\\\|KUnnI]¤ÀÂĊnŎR®Ő¿¶\\\\\\\\ÀøíDm¦ÎbŨabaĘ\\\\\\\\ľãÂ¸atÎSƐ´©v\\\\\\\\ÖÚÌǴ¤Â¨JKrZ_ZfjþhPkx`YRIjJcVf~sCN¤ EhæmsHy¨SðÑÌ\\\\\\\\\\\\\\\\ĐRZk°IS§fqŒßýáĞÙÉÖ[^¯ǤŲê´\\\\\\\\¦¬ĆPM¯£»uïpùzExanµyoluqe¦W^£ÊL}ñrkqWňûPUP¡ôJoo·U}£[·¨@XĸDXm­ÛÝºGUCÁª½{íĂ^cjk¶Ã[q¤LÉö³cux«zZf²BWÇ®Yß½ve±ÃCý£W{Ú^q^sÑ·¨ÍOt¹·C¥GDrí@wÕKţÃ«V·i}xËÍ÷i©ĝɝǡ]{c±OW³Ya±_ç©HĕoƫŇqr³Lys[ñ³¯OSďOMisZ±ÅFC¥Pq{Ã[Pg}\\\\\\\\¿ghćOk^ģÁFıĉĥM­oEqqZûěŉ³F¦oĵhÕP{¯~TÍlªNßYÐ{Ps{ÃVUeĎwk±ŉVÓ½ŽJãÇÇ»Jm°dhcÀffdF~ĀeĖd`sx² ®EżĀdQÂd^~ăÔH¦\\\\\\\\LKpĄVez¤NP ǹÓRÆąJSh­a[¦´ÂghwmBÐ¨źhI|VV|p] Â¼èNä¶ÜBÖ¼L`¼bØæKVpoúNZÞÒKxpw|ÊEMnzEQIZZNBčÚFÜçmĩWĪñtÞĵÇñZ«uD±|Əlĳ¥ãn·±PmÍada CLǑkùó¡³Ï«QaċÏOÃ¥ÕđQȥċƭy³ÃA\\\"]],\\\"encodeOffsets\\\":[[[123686,41445]],[[126019,40435]],[[124393,40128]],[[126117,39963]],[[125322,40140]],[[126686,40700]],[[126041,40374]],[[125584,40168]],[[125453,40165]],[[125362,40214]],[[125280,40291]],[[125774,39997]],[[125976,40496]],[[125822,39993]],[[125509,40217]],[[122731,40949]]]},\\\"properties\\\":{\\\"cp\\\":[123.429096,41.796767],\\\"name\\\":\\\"辽宁\\\",\\\"childNum\\\":16}},{\\\"id\\\":\\\"220000\\\",\\\"type\\\":\\\"Feature\\\",\\\"geometry\\\":{\\\"type\\\":\\\"Polygon\\\",\\\"coordinates\\\":[\\\"@@pä³PClFbbÍzwBGĭZÅi»lY­ċ²SgkÇ£^Sqd¯R©é£¯S\\\\\\\\cZ¹iűƏCuƍÓXoR}M^o£R}oªU­FuuXHlEÅÏ©¤ÛmTþ¤D²ÄufàÀ­XXÈ±AeyYw¬dvõ´KÊ£\\\\\\\\rµÄlidā]|î©¾DÂVH¹Þ®ÜWnCķ W§@\\\\\\\\¸~¤Vp¸póIO¢VOŇürXql~òÉK]¤¥Xrfkvzpm¶bwyFoúvð¼¤ N°ąO¥«³[éǡű_°Õ\\\\\\\\ÚÊĝþâőàerR¨­JYlďQ[ ÏYëÐ§TGztnß¡gFkMāGÁ¤ia ÉÈ¹`\\\\\\\\xs¬dĆkNnuNUuP@vRY¾\\\\\\\\¢GªóĄ~RãÖÎĢùđŴÕhQxtcæëSɽŉíëǉ£ƍG£nj°KƘµDsØÑpyĆ¸®¿bXp]vbÍZuĂ{n^IüÀSÖ¦EvRÎûh@â[ƏÈô~FNr¯ôçR±­HÑlĢ^¤¢OðævxsŒ]ÞÁTĠs¶¿âÆGW¾ìA¦·TÑ¬è¥ÏÐJ¨¼ÒÖ¼ƦɄxÊ~StD@Ă¼Ŵ¡jlºWvÐzƦZÐ²CH AxiukdGgetqmcÛ£Ozy¥cE}|¾cZk¿uŐã[oxGikfeäT@SUwpiÚFM©£è^Ú`@v¶eňf heP¶täOlÃUgÞzŸU`l}ÔÆUvØ_Ō¬Öi^ĉi§²ÃB~¡ĈÚEgc|DC_Ȧm²rBx¼MÔ¦ŮdĨÃâYxƘDVÇĺĿg¿cwÅ\\\\\\\\¹¥Yĭl¤OvLjM_a W`zļMž·\\\\\\\\swqÝSAqŚĳ¯°kRē°wx^ĐkǂÒ\\\\\\\\]nrĂ}²ĊŲÒøãh·M{yMzysěnĒġV·°G³¼XÀ¤¹i´o¤ŃÈ`ÌǲÄUĞd\\\\\\\\iÖmÈBĤÜɲDEh LG¾ƀÄ¾{WaYÍÈĢĘÔRîĐj}ÇccjoUb½{h§Ǿ{KƖµÎ÷GĀÖŠåưÎs­lyiē«`å§H¥Ae^§GK}iã\\\\\\\\c]v©ģZmÃ|[M}ģTɟĵÂÂ`ÀçmFK¥ÚíÁbX³ÌQÒHof{]ept·GŋĜYünĎųVY^ydõkÅZW«WUa~U·SbwGçǑiW^qFuNĝ·EwUtW·Ýďæ©PuqEzwAVXRãQ`­©GMehccďÏd©ÑW_ÏYƅ»é\\\\\\\\ɹ~ǙG³mØ©BšuT§Ĥ½¢Ã_Ã½L¡ýqT^rme\\\\\\\\PpZZbyuybQefµ]UhĿDCmûvaÙNSkCwncćfv~YÇG\\\"],\\\"encodeOffsets\\\":[[130196,42528]]},\\\"properties\\\":{\\\"cp\\\":[125.3245,43.886841],\\\"name\\\":\\\"吉林\\\",\\\"childNum\\\":1}},{\\\"id\\\":\\\"230000\\\",\\\"type\\\":\\\"Feature\\\",\\\"geometry\\\":{\\\"type\\\":\\\"MultiPolygon\\\",\\\"coordinates\\\":[[\\\"@@ƨĶTLÇyqpÇÛqe{~oyen}s`qiXGù]Ëp½©lÉÁp]Þñ´FĂ^fäîºkàz¼BUvÈ@\\\"],[\\\"@@UµNÿ¥īèçHÍøƕ¶Lǽ|g¨|a¾pVidd~ÈiíďÓQġėÇZÎXb½|ſÃH½KFgɱCģÛÇAnjÕc[VĝǱÃËÇ_ £ń³pj£º¿»WH´¯U¸đĢmtĜyzzNN|g¸÷äűÑ±ĉā~mq^[ǁÑďlw]¯xQĔ¯l°řĴrBÞTxr[tŽ¸ĻN_yX`biNKuP£kZĮ¦[ºxÆÀdhĹŀUÈƗCwáZħÄŭcÓ¥»NAw±qȥnD`{ChdÙFć}¢A±Äj¨]ĊÕjŋ«×`VuÓÅ~_kŷVÝyhVkÄãPsOµfgeŇµf@u_Ù ÙcªNªÙEojVxT@ãSefjlwH\\\\\\\\pŏäÀvlY½d{F~¦dyz¤PÜndsrhfHcvlwjF£G±DÏƥYyÏu¹XikĿ¦ÏqƗǀOŜ¨LI|FRĂn sª|C˜zxAè¥bfudTrFWÁ¹Am|ĔĕsķÆF´N}ćUÕ@Áĳſmuçuð^ÊýowFzØÎĕNőǏȎôªÌŒǄàĀÄ˄ĞŀƒʀĀƘŸˮȬƬĊ°Uzouxe]}AyÈW¯ÌmKQ]Īºif¸ÄX|sZt|½ÚUÎ lk^p{f¤lºlÆW A²PVÜPHÊâ]ÎĈÌÜk´\\\\\\\\@qàsĔÄQºpRij¼èi`¶bXrBgxfv»uUi^v~J¬mVp´£´VWrnP½ì¢BX¬hðX¹^TjVriªjtŊÄmtPGx¸bgRsT`ZozÆO]ÒFôÒOÆŊvÅpcGêsx´DR{AEOr°x|íb³Wm~DVjºéNNËÜ˛ɶ­GxŷCSt}]ûōSmtuÇÃĕNāg»íT«u}ç½BĵÞʣ¥ëÊ¡MÛ³ãȅ¡ƋaǩÈÉQG¢·lG|tvgrrf«ptęŘnÅĢrI²¯LiØsPf_vĠdxM prʹL¤¤eËÀđKïÙVY§]Ióáĥ]ķK¥j|pŇ\\\\\\\\kzţ¦šnņäÔVĂîĪ¬|vW®l¤èØrxm¶ă~lÄƯĄ̈́öȄEÔ¤ØQĄĄ»ƢjȦOǺ¨ìSŖÆƬyQv`cwZSÌ®ü±Ǆ]ŀç¬B¬©ńzƺŷɄeeOĨSfm ĊƀP̎ēz©ĊÄÕÊmgÇsJ¥ƔŊśæÎÑqv¿íUOµªÂnĦÁ_½ä@êí£P}Ġ[@gġ}gɊ×ûÏWXá¢užƻÌsNÍ½ƎÁ§čŐAēeL³àydl¦ĘVçŁpśǆĽĺſÊQíÜçÛġÔsĕ¬Ǹ¯YßċġHµ ¡eå`ļrĉŘóƢFìĎWøxÊkƈdƬv|I|·©NqńRŀ¤éeŊŀàŀU²ŕƀBQ£Ď}L¹Îk@©ĈuǰųǨÚ§ƈnTËÇéƟÊcfčŤ^XmHĊĕË«W·ċëx³ǔķÐċJāwİ_ĸȀ^ôWr­°oú¬ĦŨK~ȰCĐ´Ƕ£fNÎèâw¢XnŮeÂÆĶ¾¾xäLĴĘlļO¤ÒĨA¢Êɚ¨®ØCÔ ŬGƠƦYĜĘÜƬDJg_ͥœ@čŅĻA¶¯@wÎqC½Ĉ»NăëKďÍQÙƫ[«ÃígßÔÇOÝáWñuZ¯ĥŕā¡ÑķJu¤E å¯°WKÉ±_d_}}vyõu¬ï¹ÓU±½@gÏ¿rÃ½DgCdµ°MFYxw¿CG£Rƛ½Õ{]L§{qqą¿BÇƻğëܭǊË|c²}Fµ}ÙRsÓpg±QNqǫŋRwŕnéÑÉK«SeYRŋ@{¤SJ}D Ûǖ֍]gr¡µŷjqWÛham³~S«Þ]\\\"]],\\\"encodeOffsets\\\":[[[127123,51780]],[[134456,44547]]]},\\\"properties\\\":{\\\"cp\\\":[126.642464,45.756967],\\\"name\\\":\\\"黑龙江\\\",\\\"childNum\\\":2}},{\\\"id\\\":\\\"320000\\\",\\\"type\\\":\\\"Feature\\\",\\\"geometry\\\":{\\\"type\\\":\\\"Polygon\\\",\\\"coordinates\\\":[\\\"@@cþÅPi`ZRu¥É\\\\\\\\]~°Y`µÓ^phÁbnÀşúòaĬºTÖŒbe¦¦{¸ZâćNp©Hr|^mjhSEb\\\\\\\\afv`sz^lkljÄtg¤D­¾X¿À|ĐiZȀåB·î}GL¢õcßjayBFµÏC^ĭcÙt¿sğH]j{s©HM¢QnDÀ©DaÜÞ·jgàiDbPufjDk`dPOîhw¡ĥ¥GP²ĐobºrYî¶aHŢ´ ]´rılw³r_{£DB_Ûdåuk|Ũ¯F Cºyr{XFye³Þċ¿ÂkĭB¿MvÛpm`rÚã@Ę¹hågËÖƿxnlč¶Åì½Ot¾dJlVJĂǀŞqvnO^JZż·Q}êÍÅmµÒ]ƍ¦Dq}¬R^èĂ´ŀĻĊIÔtĲyQŐĠMNtR®òLhĚs©»}OÓGZz¶A\\\\\\\\jĨFäOĤHYJvÞHNiÜaĎÉnFQlNM¤B´ĄNöɂtpŬdfåqm¿QûùŞÚb¤uŃJŴu»¹ĄlȖħŴw̌ŵ²ǹǠ͛hĭłƕrçü±Yxcitğ®jű¢KOķCoy`å®VTa­_Ā]ŐÝɞï²ʯÊ^]afYǸÃĆēĪȣJđ͍ôƋÄÄÍīçÛɈǥ£­ÛmY`ó£Z«§°Ó³QafusNıǅ_k}¢m[ÝóDµ¡RLčiXyÅNïă¡¸iĔÏNÌŕoēdōîåŤûHcs}~Ûwbù¹£¦ÓCtOPrE^ÒogĉIµÛÅʹK¤½phMü`oæŀ\\\"],\\\"encodeOffsets\\\":[[121740,32276]]},\\\"properties\\\":{\\\"cp\\\":[118.767413,32.041544],\\\"name\\\":\\\"江苏\\\",\\\"childNum\\\":1}},{\\\"id\\\":\\\"330000\\\",\\\"type\\\":\\\"Feature\\\",\\\"geometry\\\":{\\\"type\\\":\\\"MultiPolygon\\\",\\\"coordinates\\\":[[\\\"@@E^dQ]K\\\"],[\\\"@@jX^j\\\"],[\\\"@@sfbU\\\"],[\\\"@@qP\\\\\\\\xz[ck\\\"],[\\\"@@R¢FX}°[s_\\\"],[\\\"@@Cb\\\\\\\\}\\\"],[\\\"@@e|v\\\\\\\\la{u\\\"],[\\\"@@v~u}\\\"],[\\\"@@QxÂF¯}\\\"],[\\\"@@¹nvÞs¯o\\\"],[\\\"@@rSkUEj\\\"],[\\\"@@bi­ZP\\\"],[\\\"@@p[}INf\\\"],[\\\"@@À¿\\\"],[\\\"@@¹dnb\\\"],[\\\"@@rSBnR\\\"],[\\\"@@g~h}\\\"],[\\\"@@FlEk\\\"],[\\\"@@OdPc\\\"],[\\\"@@v[u\\\\\\\\\\\"],[\\\"@@FjâL~wyoo~sµL\\\\\\\\\\\"],[\\\"@@¬e¹aN\\\"],[\\\"@@\\\\\\\\nÔ¡q]L³ë\\\\\\\\ÿ®QÖ\\\"],[\\\"@@ÊA­©[¬\\\"],[\\\"@@Kxv­\\\"],[\\\"@@@hlIk]\\\"],[\\\"@@pW{o||j\\\"],[\\\"@@Md|_mC\\\"],[\\\"@@¢X£ÏylD¼XtH\\\"],[\\\"@@hlÜ[LykAvyfw^E¤\\\"],[\\\"@@fp¤MusR\\\"],[\\\"@@®_ma~LÁ¬Z\\\"],[\\\"@@iMxZ\\\"],[\\\"@@ZcYd\\\"],[\\\"@@Z~dOSo|A¿qZv\\\"],[\\\"@@@`EN¡v\\\"],[\\\"@@|TY{\\\"],[\\\"@@@n@m\\\"],[\\\"@@XWkCT\\\\\\\\\\\"],[\\\"@@ºwZRkĕWO¢\\\"],[\\\"@@X®±GrÆª\\\\\\\\ÔáXq{\\\"],[\\\"@@ůTG°ĄLHm°UC\\\"],[\\\"@@¤aÜx~}dtüGæţŎíĔcŖpMËÐjē¢·ðĄÆMzjWKĎ¢Q¶À_ê_Bıi«pZgf¤Nrq]§ĂN®«H±yƳí¾×ŸīàLłčŴǝĂíÀBŖÕªÁŖHŗŉåqûõi¨hÜ·ñt»¹ýv_[«¸mYL¯QªmĉÅdMgÇjcº«ę¬­K­´B«Âącoċ\\\\\\\\xKd¡gěŧ«®á[~ıxu·ÅKsËÉc¢Ù\\\\\\\\ĭƛëbf¹­ģSĜkáƉÔ­ĈZB{aMµfzŉfåÂŧįƋǝÊĕġć£g³ne­ą»@­¦S®\\\\\\\\ßðChiqªĭiAuA­µ_W¥ƣO\\\\\\\\lċĢttC¨£t`PZäuXßBsĻyekOđġĵHuXBµ]×­­\\\\\\\\°®¬F¢¾pµ¼kŘó¬Wät¸|@L¨¸µrºù³Ù~§WIZW®±Ð¨ÒÉx`²pĜrOògtÁZ}þÙ]¡FKwsPlU[}¦Rvn`hq¬\\\\\\\\nQ´ĘRWb_ rtČFIÖkĦPJ¶ÖÀÖJĈĄTĚòC ²@PúØz©Pî¢£CÈÚĒ±hŖl¬â~nm¨f©iļ«mntuÖZÜÄjL®EÌFª²iÊxØ¨IÈhhst\\\"],[\\\"@@o\\\\\\\\VzRZ}y\\\"],[\\\"@@@°¡mÛGĕ¨§Ianá[ýƤjfæØLäGr\\\"]],\\\"encodeOffsets\\\":[[[125592,31553]],[[125785,31436]],[[125729,31431]],[[125513,31380]],[[125223,30438]],[[125115,30114]],[[124815,29155]],[[124419,28746]],[[124095,28635]],[[124005,28609]],[[125000,30713]],[[125111,30698]],[[125078,30682]],[[125150,30684]],[[124014,28103]],[[125008,31331]],[[125411,31468]],[[125329,31479]],[[125626,30916]],[[125417,30956]],[[125254,30976]],[[125199,30997]],[[125095,31058]],[[125083,30915]],[[124885,31015]],[[125218,30798]],[[124867,30838]],[[124755,30788]],[[124802,30809]],[[125267,30657]],[[125218,30578]],[[125200,30562]],[[124968,30474]],[[125167,30396]],[[124955,29879]],[[124714,29781]],[[124762,29462]],[[124325,28754]],[[123990,28459]],[[125366,31477]],[[125115,30363]],[[125369,31139]],[[122495,31878]],[[125329,30690]],[[125192,30787]]]},\\\"properties\\\":{\\\"cp\\\":[120.153576,30.287459],\\\"name\\\":\\\"浙江\\\",\\\"childNum\\\":45}},{\\\"id\\\":\\\"340000\\\",\\\"type\\\":\\\"Feature\\\",\\\"geometry\\\":{\\\"type\\\":\\\"MultiPolygon\\\",\\\"coordinates\\\":[[\\\"@@^iuLX^\\\"],[\\\"@@e©Ehl\\\"],[\\\"@@°ZÆëĎµmkǀwÌÕæhºgBĝâqÙĊzÖgņtÀÁĂÆáhEz|WzqD¹°Eŧl{ævÜcA`¤C`|´qxĲkq^³³GšµbíZ¹qpa±ď OH¦Ħx¢gPícOl_iCveaOjChß¸iÝbÛªCC¿mRV§¢A|t^iĠGÀtÚsd]ĮÐDE¶zAb àiödK¡~H¸íæAǿYj{ď¿À½W®£ChÃsikkly]_teu[bFaTign{]GqªoĈMYá|·¥f¥őaSÕėNµñĞ«Im_m¿Âa]uĜp Z_§{Cäg¤°r[_YjÆOdý[I[á·¥Q_nùgL¾mvˊBÜÆ¶ĊJhpc¹O]iŠ]¥ jtsggJÇ§w×jÉ©±EFË­KiÛÃÕYvsm¬njĻª§emná}k«ŕgđ²ÙDÇ¤í¡ªOy×Où±@DñSęćăÕIÕ¿IµĥOjNÕËT¡¿tNæŇàåyķrĕq§ÄĩsWÆßF¶X®¿mwRIÞfßoG³¾©uyHį{Ɓħ¯AFnuPÍÔzVdàôº^Ðæd´oG¤{S¬ćxã}ŧ×Kǥĩ«ÕOEÐ·ÖdÖsƘÑ¨[Û^Xr¢¼§xvÄÆµ`K§ tÒ´Cvlo¸fzŨð¾NY´ı~ÉĔēßúLÃÃ_ÈÏ|]ÂÏFlg`ben¾¢pUh~ƴĖ¶_r sĄ~cƈ]|r c~`¼{À{ȒiJjz`îÀT¥Û³]u}fïQl{skloNdjäËzDvčoQďHI¦rbtHĔ~BmlRV_ħTLnñH±DL¼Lªl§Ťa¸ĚlK²\\\\\\\\RòvDcÎJbt[¤D@®hh~kt°ǾzÖ@¾ªdbYhüóZ ň¶vHrľ\\\\\\\\ÊJuxAT|dmÀO[ÃÔG·ĚąĐlŪÚpSJ¨ĸLvÞcPæķŨ®mÐálwKhïgA¢ųÆ©Þ¤OÈm°K´\\\"]],\\\"encodeOffsets\\\":[[[121722,32278]],[[119475,30423]],[[119168,35472]]]},\\\"properties\\\":{\\\"cp\\\":[117.283042,31.86119],\\\"name\\\":\\\"安徽\\\",\\\"childNum\\\":3}},{\\\"id\\\":\\\"350000\\\",\\\"type\\\":\\\"Feature\\\",\\\"geometry\\\":{\\\"type\\\":\\\"MultiPolygon\\\",\\\"coordinates\\\":[[\\\"@@zht´]\\\"],[\\\"@@aj^~ĆG©O\\\"],[\\\"@@ed¨C}}i\\\"],[\\\"@@@vPGsQ\\\"],[\\\"@@sBzddW]Q\\\"],[\\\"@@S¨Q{\\\"],[\\\"@@NVucW\\\"],[\\\"@@qptBAq\\\"],[\\\"@@¸[mu\\\"],[\\\"@@Q\\\\\\\\pD]_\\\"],[\\\"@@jSwUadpF\\\"],[\\\"@@eXª~\\\"],[\\\"@@AjvFso\\\"],[\\\"@@fT_Çí\\\\\\\\v|ba¦jZÆy°\\\"],[\\\"@@IjJi\\\"],[\\\"@@wJIx«¼AoNe{M­\\\"],[\\\"@@K±¡ÓČäeZ\\\"],[\\\"@@k¡¹Eh~c®wBkUplÀ¡I~Māe£bN¨gZý¡a±Öcp©PhI¢QqÇGj|¥U g[Ky¬ŏv@OptÉEF\\\\\\\\@ åA¬V{XģĐBycpě¼³Ăp·¤¥ohqqÚ¡ŅLs^Ã¡§qlÀhH¨MCe»åÇGD¥zPO£čÙkJA¼ßėuĕeûÒiÁŧSW¥Qûŗ½ùěcÝ§SùĩąSWó«íęACµeRåǃRCÒÇZÍ¢ź±^dlstjD¸ZpuÔâÃH¾oLUêÃÔjjēò´ĄWƛ^Ñ¥Ħ@ÇòmOw¡õyJyD}¢ďÑÈġfZda©º²z£NjD°Ötj¶¬ZSÎ~¾c°¶ÐmxO¸¢Pl´SL|¥AȪĖMņĲg®áIJČĒü` QF¬h|ĂJ@zµ |ê³È ¸UÖŬŬÀEttĸr]ðM¤ĶĲHtÏ AĬkvsq^aÎbvdfÊòSD´Z^xPsĂrvƞŀjJd×ŘÉ ®AÎ¦ĤdxĆqAZRÀMźnĊ»İÐZ YXæJyĊ²·¶q§·K@·{sXãô«lŗ¶»o½E¡­«¢±¨Y®Ø¶^AvWĶGĒĢPlzfļtàAvWYãO_¤sD§ssČġ[kƤPX¦`¶®BBvĪjv©jx[L¥àï[F¼ÍË»ğV`«Ip}ccÅĥZEãoP´B@D¸m±z«Ƴ¿å³BRØ¶Wlâþäą`]Z£Tc ĹGµ¶Hm@_©k¾xĨôȉðX«½đCIbćqK³ÁÄš¬OAwã»aLŉËĥW[ÂGIÂNxĳ¤D¢îĎÎB§°_JGs¥E@¤ućPåcuMuw¢BI¿]zG¹guĮck\\\\\\\\_\\\"]],\\\"encodeOffsets\\\":[[[123250,27563]],[[122541,27268]],[[123020,27189]],[[122916,27125]],[[122887,26845]],[[122808,26762]],[[122568,25912]],[[122778,26197]],[[122515,26757]],[[122816,26587]],[[123388,27005]],[[122450,26243]],[[122578,25962]],[[121255,25103]],[[120987,24903]],[[122339,25802]],[[121042,25093]],[[122439,26024]]]},\\\"properties\\\":{\\\"cp\\\":[119.306239,26.075302],\\\"name\\\":\\\"福建\\\",\\\"childNum\\\":18}},{\\\"id\\\":\\\"360000\\\",\\\"type\\\":\\\"Feature\\\",\\\"geometry\\\":{\\\"type\\\":\\\"Polygon\\\",\\\"coordinates\\\":[\\\"@@ĢĨƐgļ¼ÂMD~ņªe^\\\\\\\\^§ý©j×cZØ¨zdÒa¶lÒJìõ`oz÷@¤uŞ¸´ôęöY¼HČƶajlÞƩ¥éZ[|h}^U  ¥pĄžƦO lt¸Æ Q\\\\\\\\aÆ|CnÂOjt­ĚĤdÈF`¶@Ðë ¦ōÒ¨SêvHĢûXD®QgÄWiØPÞìºr¤ǆNĠ¢lĄtZoCƞÔºCxrpĠV®Ê{f_Y`_eq®Aot`@oDXfkp¨|s¬\\\\\\\\DÄSfè©Hn¬^DhÆyøJhØxĢĀLÊƠPżċĄwȠĚ¦G®ǒĤäTŠÆ~Ħw«|TF¡nc³Ïå¹]ĉđxe{ÎÓvOEm°BƂĨİ|Gvz½ª´HàpeJÝQxnÀW­EµàXÅĪt¨ÃĖrÄwÀFÎ|ňÓMå¼ibµ¯»åDT±m[r«_gmQu~¥V\\\\\\\\OkxtL E¢Ú^~ýêPóqoě±_Êw§ÑªåƗā¼mĉŹ¿NQYBąrwģcÍ¥B­ŗÊcØiIƝĿuqtāwO]³YCñTeÉcaubÍ]trluīBÐGsĵıN£ï^ķqss¿FūūVÕ·´Ç{éĈýÿOER_đûIċâJh­ŅıNȩĕB¦K{Tk³¡OP·wnµÏd¯}½TÍ«YiµÕsC¯iM¤­¦¯P|ÿUHvhe¥oFTuõ\\\\\\\\OSsMòđƇiaºćXĊĵà·çhƃ÷Ç{ígu^đgm[×zkKN¶Õ»lčÓ{XSÆv©_ÈëJbVkĔVÀ¤P¾ºÈMÖxlò~ªÚàGĂ¢B±ÌKyáV¼Ã~­`gsÙfIƋlę¹e|~udjuTlXµf`¿Jd[\\\\\\\\L²\\\"],\\\"encodeOffsets\\\":[[116689,26234]]},\\\"properties\\\":{\\\"cp\\\":[115.892151,28.676493],\\\"name\\\":\\\"江西\\\",\\\"childNum\\\":1}},{\\\"id\\\":\\\"370000\\\",\\\"type\\\":\\\"Feature\\\",\\\"geometry\\\":{\\\"type\\\":\\\"MultiPolygon\\\",\\\"coordinates\\\":[[\\\"@@Xjd]{K\\\"],[\\\"@@itbFHy\\\"],[\\\"@@HlGk\\\"],[\\\"@@TGy\\\"],[\\\"@@K¬U\\\"],[\\\"@@WdXc\\\"],[\\\"@@PtOs\\\"],[\\\"@@LnXhc\\\"],[\\\"@@ppVu]Or\\\"],[\\\"@@cdzAUa\\\"],[\\\"@@udRhnCI\\\"],[\\\"@@oIpR\\\"],[\\\"@@Ľč{fzƤîKÎMĮ]ZF½Y]â£ph¶¨râøÀÎǨ¤^ºÄGz~grĚĜlĞÆLĆǆ¢Îo¦cvKbgr°WhmZp L]LºcUÆ­nżĤÌĒbAnrOA´ȊcÀbƦUØrĆUÜøĬƞEzVL®öØBkŖÝĐĖ¹ŧ̄±ÀbÎÉnb²ĦhņBĖįĦåXćì@L¯´ywƕCéÃµė ƿ¸lµ¾Z|ZWyFY¨Mf~C¿`à_RÇzwƌfQnny´INoƬèôº|sTJULîVjǎ¾ĒØDz²XPn±ŴPè¸ŔLƔÜƺ_TüÃĤBBċÈöA´faM¨{«M`¶d¡ôÖ°mȰBÔjj´PM|c^d¤u¤Û´ä«ƢfPk¶Môl]Lb}su^ke{lCMrDÇ­]NÑFsmoõľHyGă{{çrnÓEƕZGª¹Fj¢ïWuøCǷë¡ąuhÛ¡^KxC`C\\\\\\\\bÅxì²ĝÝ¿_NīCȽĿåB¥¢·IŖÕy\\\\\\\\¹kxÃ£Č×GDyÃ¤ÁçFQ¡KtŵƋ]CgÏAùSedcÚźuYfyMmhUWpSyGwMPqŀÁ¼zK¶G­Y§Ë@´śÇµƕBm@IogZ¯uTMx}CVKï{éƵP_K«pÛÙqċtkkù]gTğwoɁsMõ³ăAN£MRkmEÊčÛbMjÝGuIZGPģãħE[iµBEuDPÔ~ª¼ęt]ûG§¡QMsğNPŏįzs£Ug{đJĿļā³]ç«Qr~¥CƎÑ^n¶ÆéÎR~Ż¸YI] PumŝrƿIā[xeÇ³L¯v¯s¬ÁY~}ťuŁgƋpÝĄ_ņī¶ÏSR´ÁP~¿Cyċßdwk´SsX|t`Ä ÈðAªìÎT°¦Dda^lĎDĶÚY°`ĪŴǒàŠv\\\\\\\\ebZHŖR¬ŢƱùęOÑM­³FÛWp[\\\"]],\\\"encodeOffsets\\\":[[[123806,39303]],[[123821,39266]],[[123742,39256]],[[123702,39203]],[[123649,39066]],[[123847,38933]],[[123580,38839]],[[123894,37288]],[[123043,36624]],[[123344,38676]],[[123522,38857]],[[123628,38858]],[[118260,36742]]]},\\\"properties\\\":{\\\"cp\\\":[117.000923,36.675807],\\\"name\\\":\\\"山东\\\",\\\"childNum\\\":13}},{\\\"id\\\":\\\"410000\\\",\\\"type\\\":\\\"Feature\\\",\\\"geometry\\\":{\\\"type\\\":\\\"Polygon\\\",\\\"coordinates\\\":[\\\"@@ýLùµP³swIÓxcŢĞð´E®ÚPtĴXØxÂ¶@«ŕŕQGYfa[şußǩđš_X³ĳÕčC]kbc¥CS¯ëÍB©÷³­Si_}mYTt³xlàcČzÀD}ÂOQ³ÐTĨ¯ƗòËŖ[hłŦv~}ÂZ«¤lPÇ£ªÝŴÅR§ØnhctâknÏ­ľŹUÓÝdKuķI§oTũÙďkęĆH¸Ó\\\\\\\\Ä¿PcnS{wBIvÉĽ[GqµuŇôYgûZca©@½Õǽys¯}lgg@­C\\\\\\\\£asIdÍuCQñ[L±ęk·ţb¨©kK»KC²òGKmĨS`UQnk}AGēsqaJ¥ĐGRĎpCuÌy ã iMcplk|tRkðev~^´¦ÜSí¿_iyjI|ȑ|¿_»d}q^{Ƈdă}tqµ`Ƴĕg}V¡om½faÇo³TTj¥tĠRyK{ùÓjuµ{t}uËRivGçJFjµÍyqÎàQÂFewixGw½Yŷpµú³XU½ġyłåkÚwZX·l¢Á¢KzOÎÎjc¼htoDHr|­J½}JZ_¯iPq{tę½ĕ¦Zpĵø«kQĹ¤]MÛfaQpě±ǽ¾]u­Fu÷nčÄ¯ADp}AjmcEÇaª³o³ÆÍSƇĈÙDIzËčľ^KLiÞñ[aA²zzÌ÷D|[íÄ³gfÕÞd®|`Ć~oĠƑô³ŊD×°¯CsøÀ«ìUMhTº¨¸ǡîSÔDruÂÇZÖEvPZW~ØÐtĄE¢¦Ðy¸bô´oŬ¬²Ês~]®tªapŎJ¨Öº_Ŕ`Ŗ^Đ\\\\\\\\Ĝu~m²Ƹ¸fWĦrƔ}Î^gjdfÔ¡J}\\\\\\\\n C¦þWxªJRÔŠu¬ĨĨmFdM{\\\\\\\\d\\\\\\\\YÊ¢ú@@¦ª²SÜsC}fNècbpRmlØ^gd¢aÒ¢CZZxvÆ¶N¿¢T@uC¬^ĊðÄn|lGlRjsp¢ED}Fio~ÔN~zkĘHVsǲßjŬŢ`Pûàl¢\\\\\\\\ÀEhİgÞē X¼Pk|m\\\"],\\\"encodeOffsets\\\":[[118256,37017]]},\\\"properties\\\":{\\\"cp\\\":[113.665412,34.757975],\\\"name\\\":\\\"河南\\\",\\\"childNum\\\":1}},{\\\"id\\\":\\\"420000\\\",\\\"type\\\":\\\"Feature\\\",\\\"geometry\\\":{\\\"type\\\":\\\"MultiPolygon\\\",\\\"coordinates\\\":[[\\\"@@AB\\\"],[\\\"@@lskt\\\"],[\\\"@@¾«}{ra®pîÃ\\\\\\\\{øCËyyB±b\\\\\\\\òÝjKL ]ĎĽÌJyÚCƈćÎT´Å´pb©ÈdFin~BCo°BĎÃømv®E^vǾ½Ĝ²RobÜeN^ĺ£R¬lĶ÷YoĖ¥Ě¾|sOr°jY`~I¾®I{GqpCgyl{£ÍÍyPLÂ¡¡¸kWxYlÙæŁĢz¾V´W¶ùŸo¾ZHxjwfxGNÁ³Xéæl¶EièIH ujÌQ~v|sv¶Ôi|ú¢FhQsğ¦SiŠBgÐE^ÁÐ{čnOÂÈUÎóĔÊēĲ}Z³½Mŧïeyp·uk³DsÑ¨L¶_ÅuÃ¨w»¡WqÜ]\\\\\\\\Ò§tƗcÕ¸ÕFÏǝĉăxŻČƟOKÉġÿ×wg÷IÅzCg]m«ªGeçÃTC«[t§{loWeC@ps_Bp­rf_``Z|ei¡oċMqow¹DƝÓDYpûsYkıǃ}s¥ç³[§cY§HK«Qy]¢wwö¸ïx¼ņ¾Xv®ÇÀµRĠÐHM±cÏdƒǍũȅȷ±DSyúĝ£ŤĀàtÖÿï[îb\\\\\\\\}pĭÉI±Ñy¿³x¯No|¹HÏÛmjúË~TuęjCöAwě¬Rđl¯ Ñb­ŇTĿ_[IčĄʿnM¦ğ\\\\\\\\É[T·k¹©oĕ@A¾wya¥Y\\\\\\\\¥Âaz¯ãÁ¡k¥ne£ÛwE©Êō¶˓uoj_U¡cF¹­[WvP©whuÕyBF`RqJUw\\\\\\\\i¡{jEPïÿ½fćQÑÀQ{°fLÔ~wXgītêÝ¾ĺHd³fJd]HJ²EoU¥HhwQsƐ»Xmg±çve]DmÍPoCc¾_hhøYrŊU¶eD°Č_N~øĹĚ·`z]Äþp¼äÌQv\\\\\\\\rCé¾TnkžŐÚÜa¼ÝƆĢ¶ÛodĔňÐ¢JqPb ¾|J¾fXƐîĨ_Z¯À}úƲN_ĒÄ^ĈaŐyp»CÇÄKñL³ġM²wrIÒŭxjb[n«øæà ^²­h¯ÚŐªÞ¸Y²ĒVø}Ā^İ´LÚm¥ÀJÞ{JVųÞŃx×sxxƈē ģMřÚðòIfĊŒ\\\\\\\\Ʈ±ŒdÊ§ĘDvČ_Àæ~Dċ´A®µ¨ØLV¦êHÒ¤\\\"]],\\\"encodeOffsets\\\":[[[113712,34000]],[[115612,30507]],[[113649,34054]]]},\\\"properties\\\":{\\\"cp\\\":[114.298572,30.584355],\\\"name\\\":\\\"湖北\\\",\\\"childNum\\\":3}},{\\\"id\\\":\\\"430000\\\",\\\"type\\\":\\\"Feature\\\",\\\"geometry\\\":{\\\"type\\\":\\\"MultiPolygon\\\",\\\"coordinates\\\":[[\\\"@@nFTs\\\"],[\\\"@@ßÅÆá½ÔXrCOËRïÿĩ­TooQyÓ[ŅBE¬ÎÓXaį§Ã¸G °ITxpúxÚĳ¥ÏĢ¾edÄ©ĸGàGhM¤Â_U}Ċ}¢pczfþg¤ÇòAVM\\\"],[\\\"@@©KA·³CQ±Á«³BUƑ¹AtćOwD]JiØSm¯b£ylXHËÑ±H«C^õľAÅ§¤É¥ïyuǙuA¢^{ÌC´­¦ŷJ£^[ª¿ĕ~ƇN skóā¹¿ï]ă~÷O§­@Vm¡Qđ¦¢Ĥ{ºjÔª¥nf´~Õo×ÛąMąıuZmZcÒ ĲĪ²SÊǄŶ¨ƚCÖŎªQØ¼rŭ­«}NÏürÊ¬mjr@ĘrTW ­SsdHzƓ^ÇÂyUi¯DÅYlŹu{hT}mĉ¹¥ěDÿë©ıÓ[Oº£¥ótł¹MÕƪ`PDiÛU¾ÅâìUñBÈ£ýhedy¡oċ`pfmjP~kZaZsÐd°wj§@Ĵ®w~^kÀÅKvNmX\\\\\\\\¨aŃqvíó¿F¤¡@ũÑVw}S@j}¾«pĂrªg àÀ²NJ¶¶DôK|^ª°LX¾ŴäPĪ±£EXd^¶ĲÞÜ~u¸ǔMRhsRe`ÄofIÔ\\\\\\\\Ø  ićymnú¨cj ¢»GČìƊÿÐ¨XeĈĀ¾Oð Fi ¢|[jVxrIQ_EzAN¦zLU`cªxOTu RLÄ¢dVi`p˔vŎµªÉF~Ød¢ºgİàw¸Áb[¦Zb¦z½xBĖ@ªpºlS¸Ö\\\\\\\\Ĕ[N¥ˀmĎăJ\\\\\\\\ŀ`ňSÚĖÁĐiOĜ«BxDõĚivSÌ}iùÜnÐºG{p°M´wÀÒzJ²ò¨ oTçüöoÛÿñőĞ¤ùTz²CȆȸǎŪƑÐc°dPÎğË¶[È½u¯½WM¡­ÉB·rínZÒ `¨GA¾\\\\\\\\pēXhÃRC­üWGġuTé§ŎÑ©ò³I±³}_EÃħg®ęisÁPDmÅ{b[RÅs·kPŽƥóRoOV~]{g\\\\\\\\êYƪ¦kÝbiċƵGZ»Ěõó·³vŝ£ø@pyö_ëIkÑµbcÑ§y×dYØªiþ¨[]f]Ņ©C}ÁN»hĻħƏĩ\\\"]],\\\"encodeOffsets\\\":[[[115640,30489]],[[112543,27312]],[[116690,26230]]]},\\\"properties\\\":{\\\"cp\\\":[112.982279,28.19409],\\\"name\\\":\\\"湖南\\\",\\\"childNum\\\":3}},{\\\"id\\\":\\\"440000\\\",\\\"type\\\":\\\"Feature\\\",\\\"geometry\\\":{\\\"type\\\":\\\"MultiPolygon\\\",\\\"coordinates\\\":[[\\\"@@QdAua\\\"],[\\\"@@lxDLo\\\"],[\\\"@@sbhNLo\\\"],[\\\"@@Ă ā\\\"],[\\\"@@WltO[[\\\"],[\\\"@@Kr]S\\\"],[\\\"@@eI]y\\\"],[\\\"@@I|Mym\\\"],[\\\"@@Û³LS¼Y\\\"],[\\\"@@nvºBëui©`¾\\\"],[\\\"@@zdÛJw®\\\"],[\\\"@@°¯\\\"],[\\\"@@a yAª¸ËJIxØ@ĀHAmÃV¡ofuo\\\"],[\\\"@@sŗÃÔėAƁZÄ ~°ČPäh\\\"],[\\\"@@¶ÝÌvmĞh­ıQ\\\"],[\\\"@@HdSjĒ¢D}waru«ZqadYM\\\"],[\\\"@@el\\\\\\\\LqqU\\\"],[\\\"@@~rMo\\\\\\\\\\\"],[\\\"@@f^C\\\"],[\\\"@@øPªoj÷ÍÝħXČx°Q¨ıXNv\\\"],[\\\"@@gÇƳo[~tly\\\"],[\\\"@@EÆC¿\\\"],[\\\"@@OP\\\"],[\\\"@@wđógĝ[³¡VÙæÅöMÌ³¹pÁaËýý©D©ÜJŹƕģGą¤{ÙūÇO²«BƱéAÒĥ¡«BhlmtÃPµyU¯ucd·w_bŝcīímGO|KPȏŹãŝIŕŭŕ@Óoo¿ē±ß}ŭĲWÈCőâUâǙIğŉ©IĳE×Á³AówXJþ±ÌÜÓĨ£L]ĈÙƺZǾĆĖMĸĤfÎĵlŨnÈĐtFFĤêk¶^k°f¶g}®Faf`vXŲxl¦ÔÁ²¬Ð¦pqÊÌ²iXØRDÎ}Ä@ZĠsx®AR~®ETtĄZƈfŠŠHâÒÐAµ\\\\\\\\S¸^wĖkRzalŜ|E¨ÈNĀňZTpBh£\\\\\\\\ĎƀuXĖtKL¶G|»ĺEļĞ~ÜĢÛĊrOÙîvd]n¬VÊĜ°RÖpMƂªFbwEÀ©\\\\\\\\¤]ŸI®¥D³|Ë]CöAŤ¦æ´¥¸Lv¼¢ĽBaôF~®²GÌÒEYzk¤°ahlVÕI^CxĈPsBƒºV¸@¾ªR²ĨN]´_eavSivc}p}Đ¼ƌkJÚe th_¸ ºx±ò_xNË²@ă¡ßH©Ùñ}wkNÕ¹ÇO½¿£ĕ]ly_WìIÇª`uTÅxYĒÖ¼kÖµMjJÚwn\\\\\\\\hĒv]îh|ÈƄøèg¸Ķß ĉĈWb¹ƀdéĘNTtP[öSvrCZaGubo´ŖÒÇĐ~¡zCIözx¢PnÈñ @ĥÒ¦]ƞV}³ăĔñiiÄÓVépKG½ÄÓávYoC·sitiaÀyŧÎ¡ÈYDÑům}ý|m[węõĉZÅxUO}÷N¹³ĉo_qtăqwµŁYÙǝŕ¹tïÛUÃ¯mRCºĭ|µÕÊK½Rē ó]GªęAx»HO£|ām¡diď×YïYWªŉOeÚtĐ«zđ¹TāúEá²\\\\\\\\ķÍ}jYàÙÆſ¿Çdğ·ùTßÇţʄ¡XgWÀǇğ·¿ÃOj YÇ÷Qěi\\\"]],\\\"encodeOffsets\\\":[[[117381,22988]],[[116552,22934]],[[116790,22617]],[[116973,22545]],[[116444,22536]],[[116931,22515]],[[116496,22490]],[[116453,22449]],[[113301,21439]],[[118726,21604]],[[118709,21486]],[[113210,20816]],[[115482,22082]],[[113171,21585]],[[113199,21590]],[[115232,22102]],[[115739,22373]],[[115134,22184]],[[113056,21175]],[[119573,21271]],[[119957,24020]],[[115859,22356]],[[116561,22649]],[[116285,22746]]]},\\\"properties\\\":{\\\"cp\\\":[113.280637,23.125178],\\\"name\\\":\\\"广东\\\",\\\"childNum\\\":24}},{\\\"id\\\":\\\"450000\\\",\\\"type\\\":\\\"Feature\\\",\\\"geometry\\\":{\\\"type\\\":\\\"MultiPolygon\\\",\\\"coordinates\\\":[[\\\"@@H TQ§A\\\"],[\\\"@@ĨÊªLƊDÎĹĐCǦė¸zÚGn£¾rªŀÜt¬@ÖÚSx~øOŒŶÐÂæȠ\\\\\\\\ÈÜObĖw^oÞLf¬°bI lTØBÌF£Ć¹gñĤaYt¿¤VSñK¸¤nM¼JE±½¸ñoÜCƆæĪ^ĚQÖ¦^f´QüÜÊz¯lzUĺš@ìp¶n]sxtx¶@~ÒĂJb©gk{°~c°`Ô¬rV\\\\\\\\la¼¤ôá`¯¹LCÆbxEræOv[H­[~|aB£ÖsºdAĐzNÂðsÞÆĤªbab`ho¡³F«èVlo¤ÔRzpp®SĪº¨ÖºNĳd`a¦¤F³ºDÎńĀìCĜº¦Ċ~nS|gźvZkCÆj°zVÈÁƔ]LÊFZgčP­kini«qÇczÍY®¬Ů»qR×ō©DÕ§ƙǃŵTÉĩ±ıdÑnYYĲvNĆĆØÜ Öp}e³¦m©iÓ|¹ħņ|ª¦QF¢Â¬ʖovg¿em^ucà÷gÕuíÙćĝ}FĻ¼Ĺ{µHKsLSđƃrč¤[AgoSŇYMÿ§Ç{FśbkylQxĕ]T·¶[BÑÏGáşşƇeăYSs­FQ}­BwtYğÃ@~CÍQ ×WjË±rÉ¥oÏ ±«ÓÂ¥kwWűmcih³K~µh¯e]lµélEģEďsmÇŧē`ãògK_ÛsUʝćğ¶höO¤Ǜn³c`¡y¦CezYwa[ďĵűMę§]XÎ_íÛ]éÛUćİÕBƣ±dy¹T^dûÅÑŦ·PĻþÙ`K¦¢ÍeĥR¿³£[~äu¼dltW¸oRM¢ď\\\\\\\\z}Æzdvň{ÎXF¶°Â_ÒÂÏL©ÖTmu¼ãlīkiqéfA·Êµ\\\\\\\\őDc¥ÝFyÔćcűH_hLÜêĺĐ¨c}rn`½Ì@¸¶ªVLhŒ\\\\\\\\Ţĺk~Ġið°|gtTĭĸ^xvKVGréAébUuMJVÃO¡qĂXËSģãlýà_juYÛÒBG^éÖ¶§EGÅzěƯ¤EkN[kdåucé¬dnYpAyČ{`]þ¯TbÜÈk¡ĠvàhÂƄ¢Jî¶²\\\"]],\\\"encodeOffsets\\\":[[[111707,21520]],[[107619,25527]]]},\\\"properties\\\":{\\\"cp\\\":[108.320004,22.82402],\\\"name\\\":\\\"广西\\\",\\\"childNum\\\":2}},{\\\"id\\\":\\\"460000\\\",\\\"type\\\":\\\"Feature\\\",\\\"geometry\\\":{\\\"type\\\":\\\"Polygon\\\",\\\"coordinates\\\":[\\\"@@¦Ŝil¢XƦƞòïè§ŞCêɕrŧůÇąĻõ·ĉ³œ̅kÇm@ċȧŧĥĽʉ­ƅſȓÒË¦ŝE}ºƑ[ÍĜȋ gÎfǐÏĤ¨êƺ\\\\\\\\Ɔ¸ĠĎvʄȀÐ¾jNðĀÒRZǆzÐŘÎ°H¨Ƣb²_Ġ \\\"],\\\"encodeOffsets\\\":[[112750,20508]]},\\\"properties\\\":{\\\"cp\\\":[110.33119,20.031971],\\\"name\\\":\\\"海南\\\",\\\"childNum\\\":1}},{\\\"id\\\":\\\"510000\\\",\\\"type\\\":\\\"Feature\\\",\\\"geometry\\\":{\\\"type\\\":\\\"MultiPolygon\\\",\\\"coordinates\\\":[[\\\"@@LqKr\\\"],[\\\"@@[ĻéV£_ţġñpG réÏ·~ąSfy×Í·ºſƽiÍıƣıĻmHH}siaX@iÇ°ÁÃ×t«­T¤JJJyJÈ`Ohß¦¡uËhIyCjmÿwZGTiSsOB²fNmsPa{M{õE^Hj}gYpaeu¯oáwHjÁ½M¡pMuåmni{fk\\\\\\\\oÎqCwEZ¼KĝAy{m÷LwO×SimRI¯rKõBS«sFe]fµ¢óY_ÆPRcue°Cbo×bd£ŌIHgtrnyPt¦foaXďxlBowz_{ÊéWiêEGhÜ¸ºuFĈIxf®Y½ĀǙ]¤EyF²ċw¸¿@g¢§RGv»áW`ÃĵJwi]t¥wO­½a[×]`Ãi­üL¦LabbTÀåc}ÍhÆh®BHî|îºÉk­¤Sy£ia©taį·Ɖ`ō¥UhOĝLk}©Fos´JmµlŁuønÑJWÎªYÀïAetTŅÓGË«bo{ıwodƟ½OġÜÂµxàNÖ¾P²§HKv¾]|BÆåoZ`¡Ø`ÀmºĠ~ÌÐ§nÇ¿¤]wğ@srğu~Io[é±¹ ¿ſđÓ@qg¹zƱřaí°KtÇ¤V»Ã[ĩǭƑ^ÇÓ@áťsZÏÅĭƋěpwDóÖáŻneQËq·GCœýS]x·ýq³OÕ¶Qzßti{řáÍÇWŝŭñzÇWpç¿JXĩè½cFÂLiVjx}\\\\\\\\NŇĖ¥GeJA¼ÄHfÈu~¸Æ«dE³ÉMA|bÒćhG¬CMõƤąAvüVéŀ_VÌ³ĐwQj´·ZeÈÁ¨X´Æ¡Qu·»ÕZ³ġqDoy`L¬gdp°şp¦ėìÅĮZ°Iähzĵf²å ĚÑKpIN|Ñz]ń·FU×é»R³MÉ»GM«kiér}Ã`¹ăÞmÈnÁîRǀ³ĜoİzŔwǶVÚ£À]ɜ»ĆlƂ²ĠþTº·àUȞÏʦ¶I«dĽĢdĬ¿»Ĕ×h\\\\\\\\c¬ä²GêëĤł¥ÀǿżÃÆMº}BÕĢyFVvwxBèĻĒ©ĈtCĢɽŠȣ¦āæ·HĽîôNÔ~^¤Ɗu^s¼{TA¼ø°¢İªDè¾Ň¶ÝJ®Z´ğ~Sn|ªWÚ©òzPOȸbð¢|øĞŒQìÛÐ@ĞǎRS¤Á§di´ezÝúØã]HqkIþËQÇ¦ÃsÇ¤[E¬ÉŪÍxXƒ·ÖƁİlƞ¹ª¹|XÊwnÆƄmÀêErĒtD®ċæcQE®³^ĭ¥©l}äQtoŖÜqÆkµªÔĻĴ¡@Ċ°B²Èw^^RsºTĀ£ŚæQPJvÄz^Đ¹Æ¯fLà´GC²dt­ĀRt¼¤ĦOðğfÔðDŨŁĞƘïPÈ®âbMüÀXZ ¸£@Å»»QÉ­]dsÖ×_Í_ÌêŮPrĔĐÕGĂeZÜîĘqBhtO ¤tE[h|YÔZśÎs´xº±Uñt|OĩĠºNbgþJy^dÂY Į]Řz¦gC³R`Āz¢Aj¸CL¤RÆ»@­Ŏk\\\\\\\\Ç´£YW}z@Z}Ã¶oû¶]´^NÒ}èNªPÍy¹`S°´ATeVamdUĐwʄvĮÕ\\\\\\\\uÆŗ¨Yp¹àZÂmWh{á}WØǍÉüwga§áCNęÎ[ĀÕĪgÖÉªXøx¬½Ů¦¦[NÎLÜUÖ´òrÙŠxR^JkĳnDX{U~ET{ļº¦PZcjF²Ė@pg¨B{u¨ŦyhoÚD®¯¢ WòàFÎ¤¨GDäz¦kŮPġqË¥À]eâÚ´ªKxīPÖ|æ[xÃ¤JÞĥsNÖ½I¬nĨY´®ÐƐmDŝuäđđEbee_v¡}ìęǊē}qÉåT¯µRs¡M@}ůaa­¯wvƉåZw\\\\\\\\Z{åû^\\\"]],\\\"encodeOffsets\\\":[[[108815,30935]],[[110617,31811]]]},\\\"properties\\\":{\\\"cp\\\":[104.065735,30.659462],\\\"name\\\":\\\"四川\\\",\\\"childNum\\\":2}},{\\\"id\\\":\\\"520000\\\",\\\"type\\\":\\\"Feature\\\",\\\"geometry\\\":{\\\"type\\\":\\\"MultiPolygon\\\",\\\"coordinates\\\":[[\\\"@@G\\\\\\\\lY£in\\\"],[\\\"@@q|mc¯tÏVSÎ\\\"],[\\\"@@hÑ£IsNgßHHªķÃh_¹¡ĝÄ§ń¦uÙùgS¯JH|sÝÅtÁïyMDč»eÕtA¤{b\\\\\\\\}G®u\\\\\\\\åPFqwÅaDK°ºâ_£ùbµmÁÛĹM[q|hlaªāI}Ñµ@swtwm^oµDéĽŠyVky°ÉûÛR³e¥]RÕěħ[ƅåÛDpJiVÂF²I»mN·£LbÒYbWsÀbpkiTZĄă¶Hq`ĥ_J¯ae«KpÝx]aĕÛPÇȟ[ÁåŵÏő÷Pw}TÙ@Õs«ĿÛq©½m¤ÙH·yǥĘĉBµĨÕnđ]K©œáGçş§ÕßgǗĦTèƤƺ{¶ÉHÎd¾ŚÊ·OÐjXWrãLyzÉAL¾ę¢bĶėy_qMĔąro¼hĊw¶øV¤w²Ĉ]ÊKx|`ź¦ÂÈdrcÈbe¸`I¼čTF´¼Óýȃr¹ÍJ©k_șl³´_pĐ`oÒh¶pa^ÓĔ}D»^Xy`d[KvJPhèhCrĂĚÂ^Êƌ wZL­Ġ£ÁbrzOIlMMĪŐžËr×ÎeŦtw|¢mKjSǘňĂStÎŦEtqFT¾Eì¬¬ôxÌO¢ K³ŀºäYPVgŎ¦ŊmŞ¼VZwVlz¤£Tl®ctĽÚó{G­AÇge~Îd¿æaSba¥KKûj®_Ä^\\\\\\\\Ø¾bP®¦x^sxjĶI_Ä Xâ¼Hu¨Qh¡À@Ëô}±GNìĎlT¸`V~R°tbÕĊ`¸úÛtÏFDu[MfqGH·¥yAztMFe|R_GkChZeÚ°tov`xbDnÐ{E}ZèxNEÞREn[Pv@{~rĆAB§EO¿|UZ~ìUf¨J²ĂÝÆsªB`s¶fvö¦Õ~dÔq¨¸º»uù[[§´sb¤¢zþF¢ÆÀhÂW\\\\\\\\ıËIÝo±ĭŠ£þÊs}¡R]ěDg´VG¢j±®èºÃmpU[Áëº°rÜbNu¸}º¼`niºÔXĄ¤¼ÔdaµÁ_ÃftQQgR·Ǔv}Ý×ĵ]µWc¤F²OĩųãW½¯K©]{LóµCIµ±Mß¿h©āq¬o½~@i~TUxŪÒ¢@£ÀEîôruńb[§nWuMÆLl¿]x}ĳ­½\\\"]],\\\"encodeOffsets\\\":[[[112158,27383]],[[112105,27474]],[[112095,27476]]]},\\\"properties\\\":{\\\"cp\\\":[106.713478,26.578343],\\\"name\\\":\\\"贵州\\\",\\\"childNum\\\":3}},{\\\"id\\\":\\\"530000\\\",\\\"type\\\":\\\"Feature\\\",\\\"geometry\\\":{\\\"type\\\":\\\"Polygon\\\",\\\"coordinates\\\":[\\\"@@[ùx½}ÑRHYīĺûsÍniEoã½Ya²ė{c¬ĝgĂsAØÅwďõzFjw}«Dx¿}Uũlê@HÅ­F¨ÇoJ´Ónũuą¡Ã¢pÒÅØ TF²xa²ËXcÊlHîAßËŁkŻƑŷÉ©hW­æßUËs¡¦}teèÆ¶StÇÇ}Fd£jĈZĆÆ¤Tč\\\\\\\\D}O÷£U§~ŃGåŃDĝ¸Tsd¶¶Bª¤u¢ŌĎo~t¾ÍŶÒtD¦ÚiôözØX²ghįh½Û±¯ÿm·zR¦Ɵ`ªŊÃh¢rOÔ´£Ym¼èêf¯ŪĽncÚbw\\\\\\\\zlvWªâ ¦gmĿBĹ£¢ƹřbĥkǫßeeZkÙIKueT»sVesbaĕ  ¶®dNĄÄpªy¼³BE®lGŭCǶwêżĔÂepÍÀQƞpC¼ŲÈ­AÎô¶RäQ^Øu¬°_Èôc´¹ò¨PÎ¢hlĎ¦´ĦÆ´sâÇŲPnÊD^¯°Upv}®BPÌªjǬxSöwlfòªvqĸ|`H­viļndĜ­Ćhňem·FyÞqóSį¯³X_ĞçêtryvL¤§z¦c¦¥jnŞklD¤øz½ĜàĂŧMÅ|áƆàÊcðÂFÜáŢ¥\\\\\\\\\\\\\\\\ºİøÒÐJĴîD¦zK²ǏÎEh~CD­hMn^ÌöÄ©ČZÀaüfɭyœpį´ěFűk]Ôě¢qlÅĆÙa¶~ÄqêljN¬¼HÊNQ´ê¼VØ¸E^ŃÒyM{JLoÒęæe±Ķygã¯JYÆĭĘëo¥Šo¯hcK«z_prC´ĢÖY¼ v¸¢RÅW³Â§fÇ¸Yi³xR´ďUË`êĿUûuĆBƣöNDH«ĈgÑaB{ÊNF´¬c·Åv}eÇÃGB»If¦HňĕM~[iwjUÁKE¾dĪçWIèÀoÈXòyŞŮÈXâÎŚj|àsRyµÖPr´þ ¸^wþTDŔHr¸RÌmfżÕâCôoxĜƌÆĮÐYtâŦÔ@]ÈǮƒ\\\\\\\\Ī¼Ä£UsÈ¯LbîƲŚºyhr@ĒÔƀÀ²º\\\\\\\\êpJ}ĠvqtĠ@^xÀ£È¨mËÏğ}n¹_¿¢×Y_æpÅA^{½Lu¨GO±Õ½ßM¶wÁĢÛPƢ¼pcĲx|apÌ¬HÐŊSfsðBZ¿©XÏÒKk÷Eû¿SrEFsÕūkóVǥŉiTL¡n{uxţÏhôŝ¬ğōNNJkyPaqÂğ¤K®YxÉƋÁ]āęDqçgOgILu\\\\\\\\_gz]W¼~CÔē]bµogpÑ_oď`´³Țkl`IªºÎȄqÔþ»E³ĎSJ»_f·adÇqÇc¥Á_Źw{L^É±ćxU£µ÷xgĉp»ĆqNē`rĘzaĵĚ¡K½ÊBzyäKXqiWPÏÉ¸½řÍcÊG|µƕƣGË÷k°_^ý|_zċBZocmø¯hhcæ\\\\\\\\lMFlư£ĜÆyHF¨µêÕ]HAàÓ^it `þßäkĤÎT~Wlÿ¨ÔPzUCNVv [jâôDôď[}z¿msSh¯{jïğl}šĹ[őgK©U·µË@¾m_~q¡f¹ÅË^»f³ø}Q¡ÖË³gÍ±^Ç\\\\\\\\ëÃA_¿bWÏ[¶ƛé£F{īZgm@|kHǭƁć¦UĔť×ë}ǝeďºȡȘÏíBÉ£āĘPªĳ¶ŉÿy©nď£G¹¡I±LÉĺÑdĉÜW¥}gÁ{aqÃ¥aıęÏZï`\\\"],\\\"encodeOffsets\\\":[[104636,22969]]},\\\"properties\\\":{\\\"cp\\\":[102.712251,25.040609],\\\"name\\\":\\\"云南\\\",\\\"childNum\\\":1}},{\\\"id\\\":\\\"540000\\\",\\\"type\\\":\\\"Feature\\\",\\\"geometry\\\":{\\\"type\\\":\\\"Polygon\\\",\\\"coordinates\\\":[\\\"@@ÂhľxŖxÒVºÅâAĪÝȆµę¯Ňa±r_w~uSÕňqOj]ɄQ£ZUDûoY»©M[L¼qãË{VÍçWVi]ë©Ä÷àyƛhÚU°adcQ~Mx¥cc¡ÙaSyFÖk­uRýq¿ÔµQĽ³aG{¿FµëªéĜÿª@¬·K·àariĕĀ«V»ŶĴūgèLǴŇƶaftèBŚ£^âǐÝ®M¦ÁǞÿ¬LhJ¾óƾÆºcxwf]Y´¦|QLn°adĊ\\\\\\\\¨oǀÍŎ´ĩĀd`tÊQŞŕ|¨C^©Ĉ¦¦ÎJĊ{ëĎjª²rÐl`¼Ą[t|¦Stè¾PÜK¸dƄı]s¤î_v¹ÎVòŦj£Əsc¬_Ğ´|Ł¦Av¦w`ăaÝaa­¢e¤ı²©ªSªÈMĄwÉØŔì@T¤Ę\\\\\\\\õª@þo´­xA sÂtŎKzó´ÇĊµ¢r^nĊ­Æ¬×üG¢³ {âĊ]G~bÀgVjzlhǶfOfdªB]pjTOtĊn¤}®¦Č¥d¢¼»ddY¼t¢eȤJ¤}Ǿ¡°§¤AÐlc@ĝsªćļđAçwxUuzEÖġ~AN¹ÄÅȀŻ¦¿ģŁéì±Hãd«g[Ø¼ēÀcīľġ¬cJµÐʥVȝ¸ßS¹ý±ğkƁ¼ą^ɛ¤Ûÿb[}¬ōõÃ]ËNm®g@Bg}ÍF±ǐyL¥íCIĳÏ÷Ñį[¹¦[âšEÛïÁÉdƅß{âNÆāŨß¾ě÷yC£k­´ÓH@Â¹TZ¥¢į·ÌAÐ§®Zcv½Z­¹|ÅWZqgW|ieZÅYVÓqdqbc²R@c¥Rã»GeeƃīQ}J[ÒK¬Ə|oėjġĠÑN¡ð¯EBčnwôɍėª²CλŹġǝʅįĭạ̃ūȹ]ΓͧgšsgȽóϧµǛęgſ¶ҍć`ĘąŌJÞä¤rÅň¥ÖÁUětęuůÞiĊÄÀ\\\\\\\\Æs¦ÓRb|Â^řÌkÄŷ¶½÷f±iMÝ@ĥ°G¬ÃM¥n£Øąğ¯ß§aëbéüÑOčk£{\\\\\\\\eµª×MÉfm«Ƒ{Å×Gŏǩãy³©WÑăû··Qòı}¯ãIéÕÂZ¨īès¶ZÈsæĔTŘvgÌsN@îá¾ó@ÙwU±ÉTå»£TđWxq¹Zobs[×¯cĩvėŧ³BM|¹kªħ¥TzNYnÝßpęrñĠĉRS~½ěVVµõ«M££µBĉ¥áºae~³AuĐh`Ü³ç@BÛïĿa©|z²Ý¼D£àč²ŸIûI āóK¥}rÝ_Á´éMaň¨~ªSĈ½½KÙóĿeƃÆB·¬ën×W|Uº}LJrƳlŒµ`bÔ`QÐÓ@s¬ñIÍ@ûws¡åQÑßÁ`ŋĴ{ĪTÚÅTSÄ³Yo|Ç[Ç¾µMW¢ĭiÕØ¿@MhpÕ]jéò¿OƇĆƇpêĉâlØwěsǩĵ¸cbU¹ř¨WavquSMzeo_^gsÏ·¥Ó@~¯¿RiīB\\\\\\\\qTGªÇĜçPoÿfñòą¦óQīÈáPābß{ZŗĸIæÅhnszÁCËìñÏ·ąĚÝUm®ó­L·ăUÈíoù´Êj°ŁŤ_uµ^°ìÇ@tĶĒ¡ÆM³Ģ«İĨÅ®ğRāðggheÆ¢zÊ©Ô\\\\\\\\°ÝĎz~ź¤PnMĪÖB£kné§żćĆKĒ°¼L¶èâz¨u¦¥LDĘz¬ýÎmĘd¾ßFzhg²Fy¦ĝ¤ċņbÎ@yĄæm°NĮZRÖíJ²öLĸÒ¨Y®ƌÐVàtt_ÚÂyĠz]ŢhzĎ{ÂĢXc|ÐqfO¢¤ögÌHNPKŖUú´xx[xvĐCûĀìÖT¬¸^}Ìsòd´_KgžLĴÀBon|H@Êx¦BpŰŌ¿fµƌA¾zǈRx¶FkĄźRzŀ~¶[´HnªVƞuĒ­È¨ƎcƽÌm¸ÁÈM¦x͊ëÀxǆBú^´W£dkɾĬpw˂ØɦļĬIŚÊnŔa¸~J°îlɌxĤÊÈðhÌ®gT´øàCÀ^ªerrƘd¢İP|Ė ŸWªĦ^¶´ÂLaT±üWƜǀRÂŶUńĖ[QhlLüAÜ\\\\\\\\qRĄ©\\\"],\\\"encodeOffsets\\\":[[90849,37210]]},\\\"properties\\\":{\\\"cp\\\":[91.132212,29.660361],\\\"name\\\":\\\"西藏\\\",\\\"childNum\\\":1}},{\\\"id\\\":\\\"610000\\\",\\\"type\\\":\\\"Feature\\\",\\\"geometry\\\":{\\\"type\\\":\\\"Polygon\\\",\\\"coordinates\\\":[\\\"@@p¢ȮµûGĦ}Ħðǚ¶òƄjɂz°{ºØkÈęâ¦jªBg\\\\\\\\ċ°s¬]jú EȌǆ¬stRÆdĠİwÜ¸ôW¾ƮłÒ_{Ìû¼jº¹¢GǪÒ¯ĘZ`ºŊecņą~BÂgzpâēòYǠȰÌTÎ¨ÂW|fcă§uF@N¢XLRMº[ğȣſï|¥Jkc`sŉǷY¹W@µ÷Kãï³ÛIcñ·VȋÚÒķø©þ¥yÓğęmWµÎumZyOŅƟĥÓ~sÑL¤µaÅY¦ocyZ{y c]{Ta©`U_Ěē£ωÊƍKùK¶ȱÝƷ§{û»ÅÁȹÍéuĳ|¹cÑdìUYOuFÕÈYvÁCqÓTǢí§·S¹NgV¬ë÷Át°DØ¯C´ŉƒópģ}ċcEËFéGU¥×K§­¶³BČ}C¿åċ`wġB·¤őcƭ²ő[Å^axwQOÿEËßŚĤNĔwƇÄńwĪ­o[_KÓª³ÙnKÇěÿ]ďă_d©·©Ýŏ°Ù®g]±ßå¬÷m\\\\\\\\iaǑkěX{¢|ZKlçhLtŇîŵœè[É@ƉĄEtƇÏ³­ħZ«mJ×¾MtÝĦ£IwÄå\\\\\\\\Õ{OwĬ©LÙ³ÙgBƕŀrÌĢŭO¥lãyC§HÍ£ßEñX¡­°ÙCgpťzb`wIvA|§hoĕ@E±iYd¥OĻ¹S|}F@¾oAO²{tfÜ¢FǂÒW²°BĤh^Wx{@¬­F¸¡ķn£P|ªĴ@^ĠĈæbÔc¶lYi^MicĎ°Â[ävï¶gv@ÀĬ·lJ¸sn|¼u~a]ÆÈtŌºJpþ£KKf~¦UbyäIĺãnÔ¿^­ŵMThĠÜ¤ko¼Ŏìąǜh`[tRd²Ĳ_XPrɲlXiL§à¹H°Ȧqº®QCbAŌJ¸ĕÚ³ĺ§ `d¨YjiZvRĺ±öVKkjGȊÄePĞZmļKÀ[`ösìhïÎoĬdtKÞ{¬èÒÒBÔpĲÇĬJŊ¦±J«Y§@·pHµàåVKepWftsAÅqC·¬ko«pHÆuK@oHĆÛķhxenS³àǍrqƶRbzy¸ËÐl¼EºpĤ¼x¼½~Ğà@ÚüdK^mÌSj\\\"],\\\"encodeOffsets\\\":[[110234,38774]]},\\\"properties\\\":{\\\"cp\\\":[108.948024,34.263161],\\\"name\\\":\\\"陕西\\\",\\\"childNum\\\":1}},{\\\"id\\\":\\\"620000\\\",\\\"type\\\":\\\"Feature\\\",\\\"geometry\\\":{\\\"type\\\":\\\"MultiPolygon\\\",\\\"coordinates\\\":[[\\\"@@VuUv\\\"],[\\\"@@ũEĠtt~nkh`Q¦ÅÄÜdwAb×ĠąJ¤DüègĺqBqj°lI¡ĨÒ¤úSHbjÎB°aZ¢KJO[|A£Dx}NĂ¬HUnrk kp¼Y kMJn[aGáÚÏ[½rc}aQxOgsPMnUsncZsKúvAtÞġ£®ĀYKdnFw¢JE°Latf`¼h¬we|Æbj}GA·~W`¢MC¤tL©Ĳ°qdfObÞĬ¹ttu`^ZúE`[@Æsîz®¡CƳƜG²R¢RmfwĸgÜą G@pzJM½mhVy¸uÈÔO±¨{LfæU¶ßGĂq\\\\\\\\ª¬²I¥IŉÈīoıÓÑAçÑ|«LÝcspīðÍgtë_õ\\\\\\\\ĉñLYnĝgRǡÁiHLlõUĹ²uQjYi§Z_c¨´ĹĖÙ·ŋIaBD­R¹ȥr¯GºßK¨jWkɱOqWĳ\\\\\\\\a­Q\\\\\\\\sg_ĆǛōëp»£lğÛgSŶN®À]ÓämĹãJaz¥V}Le¤Lýo¹IsŋÅÇ^bz³tmEÁ´a¹cčecÇNĊãÁ\\\\\\\\č¯dNj]jZµkÓdaćå]ğĳ@ ©O{¤ĸm¢E·®«|@Xwg]Aģ±¯XǁÑǳªcwQÚŝñsÕ³ÛV_ý¥\\\\\\\\ů¥©¾÷w©WÕÊĩhÿÖÁRo¸V¬âDb¨hûxÊ×ǌ~Zâg|XÁnßYoº§ZÅŘv[ĭÖʃuďxcVbnUSfB¯³_TzºÎO©çMÑ~M³]µ^püµÄY~y@X~¤Z³[Èōl@®Å¼£QK·Di¡ByÿQ_´D¥hŗy^ĭÁZ]cIzýah¹MĪğPs{ò²Vw¹t³ŜË[Ñ}X\\\\\\\\gsF£sPAgěp×ëfYHāďÖqēŭOÏëdLü\\\\\\\\it^c®RÊº¶¢H°mrY£B¹čIoľu¶uI]vģSQ{UŻÅ}QÂ|Ì°ƅ¤ĩŪU ęĄÌZÒ\\\\\\\\v²PĔ»ƢNHĂyAmƂwVm`]ÈbH`Ì¢²ILvĜH®¤Dlt_¢JJÄämèÔDëþgºƫaʎÌrêYi~ Îİ¤NpÀA¾Ĕ¼bð÷®üszMzÖĖQdȨýv§Tè|ªHÃ¾a¸|Ð ƒwKĢx¦ivr^ÿ ¸l öæfƟĴ·PJv}n\\\\\\\\h¹¶v·À|\\\\\\\\ƁĚN´ĜçèÁz]ġ¤²¨QÒŨTIlªťØ}¼˗ƦvÄùØEÂ«FïËIqōTvāÜŏíÛßÛVj³âwGăÂíNOPìyV³ŉĖýZso§HÑiYw[ß\\\\\\\\X¦¥c]ÔƩÜ·«jÐqvÁ¦m^ċ±R¦΋ƈťĚgÀ»IïĨʗƮ°ƝĻþÍAƉſ±tÍEÕÞāNUÍ¡\\\\\\\\ſčåÒʻĘm ƭÌŹöʥëQ¤µ­ÇcƕªoIýIÉ_mkl³ăƓ¦j¡YzŇi}Msßõīʋ }ÁVm_[n}eı­Uĥ¼ªI{Î§DÓƻėojqYhĹT©oūĶ£]ďxĩǑMĝq`B´ƃ˺Чç~²ņj@¥@đ´ί}ĥtPńÇ¾V¬ufÓÉCtÓ̻¹£G³]ƖƾŎĪŪĘ̖¨ʈĢƂlɘ۪üºňUðǜȢƢż̌ȦǼĤŊɲĖÂ­Kq´ï¦ºĒǲņɾªǀÞĈĂD½ĄĎÌŗĞrôñnN¼â¾ʄľԆ|Ǆ֦ज़ȗǉ̘̭ɺƅêgV̍ʆĠ·ÌĊv|ýĖÕWĊǎÞ´õ¼cÒÒBĢ͢UĜð͒s¨ňƃLĉÕÝ@ɛƯ÷¿Ľ­ĹeȏĳëCȚDŲyê×Ŗyò¯ļcÂßYtÁƤyAã˾J@ǝrý@¤rz¸oP¹ɐÚyáHĀ[JwcVeȴÏ»ÈĖ}ƒŰŐèȭǢόĀƪÈŶë;Ñ̆ȤМľĮEŔĹŊũ~ËUă{ĻƹɁύȩþĽvĽƓÉ@ēĽɲßǐƫʾǗĒpäWÐxnsÀ^ƆwW©¦cÅ¡Ji§vúF¶¨c~c¼īeXǚ\\\\\\\\đ¾JwÀďksãAfÕ¦L}waoZD½Ml«]eÒÅaÉ²áo½FõÛ]ĻÒ¡wYR£¢rvÓ®y®LFLzĈôe]gx}|KK}xklL]c¦£fRtív¦PĤoH{tK\\\"]],\\\"encodeOffsets\\\":[[[108619,36299]],[[108589,36341]]]},\\\"properties\\\":{\\\"cp\\\":[103.823557,36.058039],\\\"name\\\":\\\"甘肃\\\",\\\"childNum\\\":2}},{\\\"id\\\":\\\"630000\\\",\\\"type\\\":\\\"Feature\\\",\\\"geometry\\\":{\\\"type\\\":\\\"MultiPolygon\\\",\\\"coordinates\\\":[[\\\"@@InJm\\\"],[\\\"@@CÆ½OŃĦsΰ~Ē³¦@@Ņi±è}ШƄ˹A³r_ĞǒNĪĐw¤^ŬĵªpĺSZgrpiƼĘÔ¨C|ÍJ©Ħ»®VĲ~f\\\\\\\\m `UnÂ~ʌĬàöNt~ňjy¢ZiƔ¥Ąk´nl`JÊJþ©pdƖ®È£¶ìRʦźõƮËnʼėæÑƀĎ[¢VÎĂMÖÝÎF²sƊƀÎBļýƞ¯ʘƭðħ¼Jh¿ŦęΌƇ¥²Q]Č¥nuÂÏri¸¬ƪÛ^Ó¦d¥[Wàx\\\\\\\\ZjÒ¨GtpþYŊĕ´zUOëPîMĄÁxH´áiÜUàîÜŐĂÛSuŎrJðÌ¬EFÁú×uÃÎkrĒ{V}İ«O_ÌËĬ©ÓŧSRÑ±§Ģ£^ÂyèçěM³Ƃę{[¸¿uºµ[gt£¸OƤĿéYõ·kĀq]juw¥DĩƍõÇPéÄ½G©ã¤GuȧþRcÕĕNyyût­øï»a½ē¿BMoį£Íj}éZËqbʍƬh¹ìÿÓAçãnIÃ¡I`ks£CG­ěUy×Cy@¶ʡÊBnāzGơMē¼±O÷õJËĚăVĪũƆ£¯{ËL½ÌzżVR|ĠTbuvJvµhĻĖHAëáa­OÇðñęNwœľ·LmI±íĠĩPÉ×®ÿscB³±JKßĊ«`ađ»·QAmOVţéÿ¤¹SQt]]Çx±¯A@ĉĳ¢Óļ©l¶ÅÛrŕspãRk~¦ª]Į­´FRåd­ČsCqđéFn¿ÅƃmÉx{W©ºƝºįkÕƂƑ¸wWūÐ©ÈF£\\\\\\\\tÈ¥ÄRÈýÌJ lGr^×äùyÞ³fjc¨£ÂZ|ǓMĝÏ@ëÜőRĝ÷¡{aïȷPu°ËXÙ{©TmĠ}Y³­ÞIňµç½©C¡į÷¯B»|St»]vųs»}MÓ ÿʪƟǭA¡fs»PY¼c¡»¦cċ­¥£~msĉPSi^o©AecPeǵkgyUi¿h}aHĉ^|á´¡HØûÅ«ĉ®]m¡qĉ¶³ÈyôōLÁstB®wn±ă¥HSòė£Së@×œÊăxÇN©©T±ª£Ĳ¡fb®Þbb_Ą¥xu¥B{łĝ³«`dƐt¤ťiñÍUuºí`£^tƃĲc·ÛLO½sç¥Ts{ă\\\\\\\\_»kÏ±q©čiìĉ|ÍI¥ć¥]ª§D{ŝŖÉR_sÿc³ĪōƿÎ§p[ĉc¯bKmR¥{³Ze^wx¹dƽÅ½ôIg §Mĕ ƹĴ¿ǣÜÍ]Ý]snåA{eƭ`ǻŊĿ\\\\\\\\ĳŬűYÂÿ¬jĖqßb¸L«¸©@ěĀ©ê¶ìÀEH|´bRľÓ¶rÀQþvl®ÕETzÜdb hw¤{LRdcb¯ÙVgƜßzÃôì®^jUèXÎ|UäÌ»rK\\\\\\\\ªN¼pZCüVY¤ɃRi^rPŇTÖ}|br°qňbĚ°ªiƶGQ¾²x¦PmlŜ[Ĥ¡ΞsĦÔÏâ\\\\\\\\ªÚŒU\\\\\\\\f¢N²§x|¤§xĔsZPòʛ²SÐqF`ªVÞŜĶƨVZÌL`¢dŐIqr\\\\\\\\oäõFÎ·¤»Ŷ×h¹]ClÙ\\\\\\\\¦ďÌį¬řtTӺƙgQÇÓHţĒ´ÃbEÄlbʔC|CŮkƮ[ʼ¬ň´KŮÈΰÌĪ¶ƶlðļATUvdTGº̼ÔsÊDÔveOg\\\"]],\\\"encodeOffsets\\\":[[[105308,37219]],[[95370,40081]]]},\\\"properties\\\":{\\\"cp\\\":[101.778916,36.623178],\\\"name\\\":\\\"青海\\\",\\\"childNum\\\":2}},{\\\"id\\\":\\\"640000\\\",\\\"type\\\":\\\"Feature\\\",\\\"geometry\\\":{\\\"type\\\":\\\"MultiPolygon\\\",\\\"coordinates\\\":[[\\\"@@KëÀęĞ«Oęȿȕı]ŉ¡åįÕÔ«ǴõƪĚQÐZhv K°öqÀÑS[ÃÖHƖčËnL]ûcÙß@ĝ¾}w»»oģF¹»kÌÏ·{zP§B­¢íyÅt@@á]Yv_ssģ¼ißĻL¾ġsKD£¡N_X¸}B~HaiÅf{«x»ge_bsKF¯¡IxmELcÿZ¤­ĢÝsuBLùtYdmVtNmtOPhRw~bd¾qÐ\\\\\\\\âÙH\\\\\\\\bImlNZ»loqlVmGā§~QCw¤{A\\\\\\\\PKNY¯bFkC¥sks_Ã\\\\\\\\ă«¢ħkJi¯rrAhĹûç£CUĕĊ_ÔBixÅÙĄnªÑaM~ħpOu¥sîeQ¥¤^dkKwlL~{L~hw^ófćKyE­K­zuÔ¡qQ¤xZÑ¢^ļöÜ¾Ep±âbÊÑÆ^fk¬NC¾YpxbK~¥eÖäBlt¿Đx½I[ĒǙWf»Ĭ}d§dµùEuj¨IÆ¢¥dXªƅx¿]mtÏwßRĶX¢͎vÆzƂZò®ǢÌʆCrâºMÞzÆMÒÊÓŊZÄ¾r°Î®Ȉmª²ĈUªĚîøºĮ¦ÌĘk^FłĬhĚiĀĖ¾iİbjÕ\\\"],[\\\"@@mfwěwMrŢªv@G\\\"]],\\\"encodeOffsets\\\":[[[109366,40242]],[[108600,36303]]]},\\\"properties\\\":{\\\"cp\\\":[106.278179,38.46637],\\\"name\\\":\\\"宁夏\\\",\\\"childNum\\\":2}},{\\\"id\\\":\\\"650000\\\",\\\"type\\\":\\\"Feature\\\",\\\"geometry\\\":{\\\"type\\\":\\\"Polygon\\\",\\\"coordinates\\\":[\\\"@@QØĔ²X¨~ǘBºjʐßØvKƔX¨vĊOÃ·¢i@~cĝe_«E}QxgɪëÏÃ@sÅyXoŖ{ô«ŸuXêÎf`C¹ÂÿÐGĮÕĞXŪōŸMźÈƺQèĽôe|¿ƸJR¤ĘEjcUóº¯Ĩ_ŘÁMª÷Ð¥OéÈ¿ÖğǤǷÂFÒzÉx[]­Ĥĝœ¦EP}ûƥé¿İƷTėƫœŕƅƱB»Đ±ēO¦E}`cȺrĦáŖuÒª«ĲπdƺÏØZƴwʄ¤ĖGĐǂZĶèH¶}ÚZצʥĪï|ÇĦMŔ»İĝǈì¥Βba­¯¥ǕǚkĆŵĦɑĺƯxūД̵nơʃĽá½M»òmqóŘĝčË¾ăCćāƿÝɽ©ǱŅ¹đ¥³ðLrÁ®ɱĕģŉǻ̋ȥơŻǛȡVï¹Ň۩ûkɗġƁ§ʇė̕ĩũƽō^ƕUv£ƁQïƵkŏ½ΉÃŭÇ³LŇʻ«ƭ\\\\\\\\lŭD{ʓDkaFÃÄa³ŤđÔGRÈƚhSӹŚsİ«ĐË[¥ÚDkº^Øg¼ŵ¸£EÍöůŉT¡c_ËKYƧUśĵÝU_©rETÏʜ±OñtYwē¨{£¨uM³x½şL©Ùá[ÓÐĥ Νtģ¢\\\\\\\\śnkOw¥±T»ƷFɯàĩÞáB¹ÆÑUwŕĽw[mG½Èå~Æ÷QyěCFmĭZīŵVÁƿQƛûXS²b½KÏ½ĉS©ŷXĕ{ĕK·¥Ɨcqq©f¿]ßDõU³h­gËÇïģÉɋwk¯í}I·œbmÉřīJɥĻˁ×xoɹīlc¤³Xù]ǅA¿w͉ì¥wÇN·ÂËnƾƍdÇ§đ®ƝvUm©³G\\\\\\\\}µĿQyŹlăµEwǇQ½yƋBe¶ŋÀůo¥AÉw@{Gpm¿AĳŽKLh³`ñcËtW±»ÕSëüÿďDu\\\\\\\\wwwù³VLŕOMËGh£õP¡erÏd{ġWÁč|yšg^ğyÁzÙs`s|ÉåªÇ}m¢Ń¨`x¥ù^}Ì¥H«YªƅAÐ¹n~ź¯f¤áÀzgÇDIÔ´AňĀÒ¶ûEYospõD[{ù°]uJqU|Soċxţ[õÔĥkŋÞŭZËºóYËüċrw ÞkrťË¿XGÉbřaDü·Ē÷AÃª[ÄäIÂ®BÕĐÞ_¢āĠpÛÄȉĖġDKwbmÄNôfƫVÉviǳHQµâFù­Âœ³¦{YGd¢ĚÜO {Ö¦ÞÍÀP^bƾl[vt×ĈÍEË¨¡Đ~´î¸ùÎhuè`¸HÕŔVºwĠââWò@{ÙNÝ´ə²ȕn{¿¥{l÷eé^eďXj©î\\\\\\\\ªÑòÜìc\\\\\\\\üqÕ[Č¡xoÂċªbØ­ø|¶ȴZdÆÂońéG\\\\\\\\¼C°ÌÆn´nxÊOĨŪƴĸ¢¸òTxÊǪMīĞÖŲÃɎOvʦƢ~FRěò¿ġ~åŊúN¸qĘ[Ĕ¶ÂćnÒPĒÜvúĀÊbÖ{Äî¸~Ŕünp¤ÂH¾ĄYÒ©ÊfºmÔĘcDoĬMŬS¤s²ʘÚžȂVŦ èW°ªB|ĲXŔþÈJĦÆæFĚêYĂªĂ]øªŖNÞüAfɨJ¯ÎrDDĤ`mz\\\\\\\\§~D¬{vJÂ«lµĂb¤pŌŰNĄ¨ĊXW|ų ¿¾ɄĦƐMTòP÷fØĶK¢ȝ˔Sô¹òEð­`Ɩ½ǒÂň×äı§ĤƝ§C~¡hlåǺŦŞkâ~}FøàĲaĞfƠ¥Ŕd®U¸źXv¢aƆúŪtŠųƠjdƺƺÅìnrh\\\\\\\\ĺ¯äɝĦ]èpĄ¦´LƞĬ´ƤǬ˼Ēɸ¤rºǼ²¨zÌPðŀbþ¹ļD¢¹\\\\\\\\ĜÑŚ¶ZƄ³àjĨoâȴLÊȮĐ­ĚăÀêZǚŐ¤qȂ\\\\\\\\L¢ŌİfÆs|zºeªÙæ§΢{Ā´ƐÚ¬¨Ĵà²łhʺKÞºÖTiƢ¾ªì°`öøu®Ê¾ãØ\\\"],\\\"encodeOffsets\\\":[[88824,50096]]},\\\"properties\\\":{\\\"cp\\\":[87.617733,43.792818],\\\"name\\\":\\\"新疆\\\",\\\"childNum\\\":1}},{\\\"id\\\":\\\"110000\\\",\\\"type\\\":\\\"Feature\\\",\\\"geometry\\\":{\\\"type\\\":\\\"Polygon\\\",\\\"coordinates\\\":[\\\"@@ĽOÁûtŷmiÍt_H»Ĩ±d`¹­{bwYr³S]§§o¹qGtm_SŧoaFLgQN_dV@Zom_ć\\\\\\\\ßcÂ±x¯oœRcfe£o§ËgToÛJíĔóu|wP¤XnO¢ÉŦ¯rNÄā¤zâŖÈRpŢZÚ{GrFt¦Òx§ø¹RóäV¤XdżâºWbwŚ¨Ud®bêņ¾jnŎGŃŶnzÚSeîĜZczî¾i]ÍQaúÍÔiþĩȨWĢü|Ėu[qb[swP@ÅğP¿{\\\\\\\\¥A¨ÏÑ¨j¯X\\\\\\\\¯MKpA³[Hīu}}\\\"],\\\"encodeOffsets\\\":[[120023,41045]]},\\\"properties\\\":{\\\"cp\\\":[116.405285,39.904989],\\\"name\\\":\\\"北京\\\",\\\"childNum\\\":1}},{\\\"id\\\":\\\"120000\\\",\\\"type\\\":\\\"Feature\\\",\\\"geometry\\\":{\\\"type\\\":\\\"Polygon\\\",\\\"coordinates\\\":[\\\"@@ŬgX§Ü«E¶FÌ¬O_ïlÁgz±AXeµÄĵ{¶]gitgIj·¥îakS¨ÐƎk}ĕ{gBqGf{¿aU^fIư³õ{YıëNĿk©ïËZŏR§òoY×Ógcĥs¡bġ«@dekąI[nlPqCnp{ō³°`{PNdƗqSÄĻNNâyj]äÒD ĬH°Æ]~¡HO¾X}ÐxgpgWrDGpù^LrzWxZ^¨´T\\\\\\\\|~@IzbĤjeĊªz£®ĔvěLmV¾Ô_ÈNW~zbĬvG²ZmDM~~\\\"],\\\"encodeOffsets\\\":[[120237,41215]]},\\\"properties\\\":{\\\"cp\\\":[117.190182,39.125596],\\\"name\\\":\\\"天津\\\",\\\"childNum\\\":1}},{\\\"id\\\":\\\"310000\\\",\\\"type\\\":\\\"Feature\\\",\\\"geometry\\\":{\\\"type\\\":\\\"MultiPolygon\\\",\\\"coordinates\\\":[[\\\"@@ɧư¬EpƸÁxc\\\"],[\\\"@@©ª\\\"],[\\\"@@MA\\\"],[\\\"@@QpİE§ÉC¾\\\"],[\\\"@@bŝÕÕEȣÚƥêImɇǦèÜĠÚÃƌÃ͎ó\\\"],[\\\"@@ǜûȬɋŭ×^sYɍDŋŽąñCG²«ªč@h_p¯A{oloY¬j@Ĳ`gQÚhr|ǀ^MĲvtbe´R¯Ô¬¨Yô¤r]ìƬį\\\"]],\\\"encodeOffsets\\\":[[[124702,32062]],[[124547,32200]],[[124808,31991]],[[124726,32110]],[[124903,32376]],[[124438,32149]]]},\\\"properties\\\":{\\\"cp\\\":[121.472644,31.231706],\\\"name\\\":\\\"上海\\\",\\\"childNum\\\":6}},{\\\"id\\\":\\\"500000\\\",\\\"type\\\":\\\"Feature\\\",\\\"geometry\\\":{\\\"type\\\":\\\"MultiPolygon\\\",\\\"coordinates\\\":[[\\\"@@vjG~nGŘŬĶȂƀƾ¹¸ØÎezĆT¸}êÐqHðqĖä¥^CÆIj²p\\\\\\\\_ æüY|[YxƊæu°xb®Űb@~¢NQt°¶Sæ Ê~rǉĔëĚ¢~uf`faĔJåĊnÖ]jƎćÊ@£¾a®£Ű{ŶĕFègLk{Y|¡ĜWƔtƬJÑxq±ĢN´òKLÈÃ¼D|s`ŋć]Ã`đMûƱ½~Y°ħ`ƏíW½eI½{aOIrÏ¡ĕŇapµÜƅġ^ÖÛbÙŽŏml½SêqDu[RãË»ÿw`»y¸_ĺę}÷`M¯ċfCVµqŉ÷Zgg`d½pDOÎCn^uf²ènh¼WtƏxRGg¦pVFI±G^Ic´ecGĹÞ½sëĬhxW}KÓe­XsbkF¦LØgTkïƵNï¶}Gyw\\\\\\\\oñ¡nmĈzj@Óc£»Wă¹Ój_m»¹·~MvÛaq»­ê\\\\\\\\ÂoVnÓØÍ²«bq¿efE Ĝ^Q~ Évýş¤²ĮpEİ}zcĺL½¿gÅ¡ýE¡ya£³t\\\\\\\\¨\\\\\\\\vú»¼§·Ñr_oÒý¥u_n»_At©ÞÅ±ā§IVeëY}{VPÀFA¨ąB}q@|Ou\\\\\\\\FmQFÝMwå}]|FmÏCawu_p¯sfÙgYDHl`{QEfNysB¦zG¸rHeN\\\\\\\\CvEsÐùÜ_·ÖĉsaQ¯}_UxÃđqNH¬Äd^ÝŰR¬ã°wećJE·vÝ·HgéFXjÉê`|ypxkAwWĐpb¥eOsmzwqChóUQl¥F^lafanòsrEvfQdÁUVfÎvÜ^eftET¬ôA\\\\\\\\¢sJnQTjPØxøK|nBzĞ»LYFDxÓvr[ehľvN¢o¾NiÂxGpâ¬zbfZo~hGi]öF||NbtOMn eA±tPTLjpYQ|SHYĀxinzDJÌg¢và¥Pg_ÇzIIII£®S¬ØsÎ¼£N\\\"],[\\\"@@ifjN@s\\\"]],\\\"encodeOffsets\\\":[[[109628,30765]],[[111725,31320]]]},\\\"properties\\\":{\\\"cp\\\":[106.504962,29.533155],\\\"name\\\":\\\"重庆\\\",\\\"childNum\\\":2}},{\\\"id\\\":\\\"810000\\\",\\\"type\\\":\\\"Feature\\\",\\\"geometry\\\":{\\\"type\\\":\\\"MultiPolygon\\\",\\\"coordinates\\\":[[\\\"@@AlBk\\\"],[\\\"@@mn\\\"],[\\\"@@EpFo\\\"],[\\\"@@ea¢pl¸Eõ¹hj[]ÔCÎ@lj¡uBX´AI¹[yDU]W`çwZkmcMpÅv}IoJlcafŃK°ä¬XJmÐ đhI®æÔtSHnEÒrÈc\\\"],[\\\"@@rMUwAS®e\\\"]],\\\"encodeOffsets\\\":[[[117111,23002]],[[117072,22876]],[[117045,22887]],[[116975,23082]],[[116882,22747]]]},\\\"properties\\\":{\\\"cp\\\":[114.173355,22.320048],\\\"name\\\":\\\"香港\\\",\\\"childNum\\\":5}},{\\\"id\\\":\\\"820000\\\",\\\"type\\\":\\\"Feature\\\",\\\"geometry\\\":{\\\"type\\\":\\\"Polygon\\\",\\\"coordinates\\\":[\\\"@@kÊd°å§s\\\"],\\\"encodeOffsets\\\":[[116279,22639]]},\\\"properties\\\":{\\\"cp\\\":[113.54909,22.198951],\\\"name\\\":\\\"澳门\\\",\\\"childNum\\\":1}}],\\\"UTF8Encoding\\\":true});\\n}));\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/skadyeyes/代码/chart/~/raw-loader!/Users/skadyeyes/代码/chart/~/echarts/map/js/china.js\n// module id = ../../../../raw-loader/index.js!../../../../echarts/map/js/china.js\n// module chunks = 3","module.exports = \"/*!\\n * jQuery JavaScript Library v3.2.1\\n * https://jquery.com/\\n *\\n * Includes Sizzle.js\\n * https://sizzlejs.com/\\n *\\n * Copyright JS Foundation and other contributors\\n * Released under the MIT license\\n * https://jquery.org/license\\n *\\n * Date: 2017-03-20T18:59Z\\n */\\n( function( global, factory ) {\\n\\n\\t\\\"use strict\\\";\\n\\n\\tif ( typeof module === \\\"object\\\" && typeof module.exports === \\\"object\\\" ) {\\n\\n\\t\\t// For CommonJS and CommonJS-like environments where a proper `window`\\n\\t\\t// is present, execute the factory and get jQuery.\\n\\t\\t// For environments that do not have a `window` with a `document`\\n\\t\\t// (such as Node.js), expose a factory as module.exports.\\n\\t\\t// This accentuates the need for the creation of a real `window`.\\n\\t\\t// e.g. var jQuery = require(\\\"jquery\\\")(window);\\n\\t\\t// See ticket #14549 for more info.\\n\\t\\tmodule.exports = global.document ?\\n\\t\\t\\tfactory( global, true ) :\\n\\t\\t\\tfunction( w ) {\\n\\t\\t\\t\\tif ( !w.document ) {\\n\\t\\t\\t\\t\\tthrow new Error( \\\"jQuery requires a window with a document\\\" );\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\treturn factory( w );\\n\\t\\t\\t};\\n\\t} else {\\n\\t\\tfactory( global );\\n\\t}\\n\\n// Pass this if window is not defined yet\\n} )( typeof window !== \\\"undefined\\\" ? window : this, function( window, noGlobal ) {\\n\\n// Edge <= 12 - 13+, Firefox <=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1\\n// throw exceptions when non-strict code (e.g., ASP.NET 4.5) accesses strict mode\\n// arguments.callee.caller (trac-13335). But as of jQuery 3.0 (2016), strict mode should be common\\n// enough that all such attempts are guarded in a try block.\\n\\\"use strict\\\";\\n\\nvar arr = [];\\n\\nvar document = window.document;\\n\\nvar getProto = Object.getPrototypeOf;\\n\\nvar slice = arr.slice;\\n\\nvar concat = arr.concat;\\n\\nvar push = arr.push;\\n\\nvar indexOf = arr.indexOf;\\n\\nvar class2type = {};\\n\\nvar toString = class2type.toString;\\n\\nvar hasOwn = class2type.hasOwnProperty;\\n\\nvar fnToString = hasOwn.toString;\\n\\nvar ObjectFunctionString = fnToString.call( Object );\\n\\nvar support = {};\\n\\n\\n\\n\\tfunction DOMEval( code, doc ) {\\n\\t\\tdoc = doc || document;\\n\\n\\t\\tvar script = doc.createElement( \\\"script\\\" );\\n\\n\\t\\tscript.text = code;\\n\\t\\tdoc.head.appendChild( script ).parentNode.removeChild( script );\\n\\t}\\n/* global Symbol */\\n// Defining this global in .eslintrc.json would create a danger of using the global\\n// unguarded in another place, it seems safer to define global only for this module\\n\\n\\n\\nvar\\n\\tversion = \\\"3.2.1\\\",\\n\\n\\t// Define a local copy of jQuery\\n\\tjQuery = function( selector, context ) {\\n\\n\\t\\t// The jQuery object is actually just the init constructor 'enhanced'\\n\\t\\t// Need init if jQuery is called (just allow error to be thrown if not included)\\n\\t\\treturn new jQuery.fn.init( selector, context );\\n\\t},\\n\\n\\t// Support: Android <=4.0 only\\n\\t// Make sure we trim BOM and NBSP\\n\\trtrim = /^[\\\\s\\\\uFEFF\\\\xA0]+|[\\\\s\\\\uFEFF\\\\xA0]+$/g,\\n\\n\\t// Matches dashed string for camelizing\\n\\trmsPrefix = /^-ms-/,\\n\\trdashAlpha = /-([a-z])/g,\\n\\n\\t// Used by jQuery.camelCase as callback to replace()\\n\\tfcamelCase = function( all, letter ) {\\n\\t\\treturn letter.toUpperCase();\\n\\t};\\n\\njQuery.fn = jQuery.prototype = {\\n\\n\\t// The current version of jQuery being used\\n\\tjquery: version,\\n\\n\\tconstructor: jQuery,\\n\\n\\t// The default length of a jQuery object is 0\\n\\tlength: 0,\\n\\n\\ttoArray: function() {\\n\\t\\treturn slice.call( this );\\n\\t},\\n\\n\\t// Get the Nth element in the matched element set OR\\n\\t// Get the whole matched element set as a clean array\\n\\tget: function( num ) {\\n\\n\\t\\t// Return all the elements in a clean array\\n\\t\\tif ( num == null ) {\\n\\t\\t\\treturn slice.call( this );\\n\\t\\t}\\n\\n\\t\\t// Return just the one element from the set\\n\\t\\treturn num < 0 ? this[ num + this.length ] : this[ num ];\\n\\t},\\n\\n\\t// Take an array of elements and push it onto the stack\\n\\t// (returning the new matched element set)\\n\\tpushStack: function( elems ) {\\n\\n\\t\\t// Build a new jQuery matched element set\\n\\t\\tvar ret = jQuery.merge( this.constructor(), elems );\\n\\n\\t\\t// Add the old object onto the stack (as a reference)\\n\\t\\tret.prevObject = this;\\n\\n\\t\\t// Return the newly-formed element set\\n\\t\\treturn ret;\\n\\t},\\n\\n\\t// Execute a callback for every element in the matched set.\\n\\teach: function( callback ) {\\n\\t\\treturn jQuery.each( this, callback );\\n\\t},\\n\\n\\tmap: function( callback ) {\\n\\t\\treturn this.pushStack( jQuery.map( this, function( elem, i ) {\\n\\t\\t\\treturn callback.call( elem, i, elem );\\n\\t\\t} ) );\\n\\t},\\n\\n\\tslice: function() {\\n\\t\\treturn this.pushStack( slice.apply( this, arguments ) );\\n\\t},\\n\\n\\tfirst: function() {\\n\\t\\treturn this.eq( 0 );\\n\\t},\\n\\n\\tlast: function() {\\n\\t\\treturn this.eq( -1 );\\n\\t},\\n\\n\\teq: function( i ) {\\n\\t\\tvar len = this.length,\\n\\t\\t\\tj = +i + ( i < 0 ? len : 0 );\\n\\t\\treturn this.pushStack( j >= 0 && j < len ? [ this[ j ] ] : [] );\\n\\t},\\n\\n\\tend: function() {\\n\\t\\treturn this.prevObject || this.constructor();\\n\\t},\\n\\n\\t// For internal use only.\\n\\t// Behaves like an Array's method, not like a jQuery method.\\n\\tpush: push,\\n\\tsort: arr.sort,\\n\\tsplice: arr.splice\\n};\\n\\njQuery.extend = jQuery.fn.extend = function() {\\n\\tvar options, name, src, copy, copyIsArray, clone,\\n\\t\\ttarget = arguments[ 0 ] || {},\\n\\t\\ti = 1,\\n\\t\\tlength = arguments.length,\\n\\t\\tdeep = false;\\n\\n\\t// Handle a deep copy situation\\n\\tif ( typeof target === \\\"boolean\\\" ) {\\n\\t\\tdeep = target;\\n\\n\\t\\t// Skip the boolean and the target\\n\\t\\ttarget = arguments[ i ] || {};\\n\\t\\ti++;\\n\\t}\\n\\n\\t// Handle case when target is a string or something (possible in deep copy)\\n\\tif ( typeof target !== \\\"object\\\" && !jQuery.isFunction( target ) ) {\\n\\t\\ttarget = {};\\n\\t}\\n\\n\\t// Extend jQuery itself if only one argument is passed\\n\\tif ( i === length ) {\\n\\t\\ttarget = this;\\n\\t\\ti--;\\n\\t}\\n\\n\\tfor ( ; i < length; i++ ) {\\n\\n\\t\\t// Only deal with non-null/undefined values\\n\\t\\tif ( ( options = arguments[ i ] ) != null ) {\\n\\n\\t\\t\\t// Extend the base object\\n\\t\\t\\tfor ( name in options ) {\\n\\t\\t\\t\\tsrc = target[ name ];\\n\\t\\t\\t\\tcopy = options[ name ];\\n\\n\\t\\t\\t\\t// Prevent never-ending loop\\n\\t\\t\\t\\tif ( target === copy ) {\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// Recurse if we're merging plain objects or arrays\\n\\t\\t\\t\\tif ( deep && copy && ( jQuery.isPlainObject( copy ) ||\\n\\t\\t\\t\\t\\t( copyIsArray = Array.isArray( copy ) ) ) ) {\\n\\n\\t\\t\\t\\t\\tif ( copyIsArray ) {\\n\\t\\t\\t\\t\\t\\tcopyIsArray = false;\\n\\t\\t\\t\\t\\t\\tclone = src && Array.isArray( src ) ? src : [];\\n\\n\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\tclone = src && jQuery.isPlainObject( src ) ? src : {};\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t// Never move original objects, clone them\\n\\t\\t\\t\\t\\ttarget[ name ] = jQuery.extend( deep, clone, copy );\\n\\n\\t\\t\\t\\t// Don't bring in undefined values\\n\\t\\t\\t\\t} else if ( copy !== undefined ) {\\n\\t\\t\\t\\t\\ttarget[ name ] = copy;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\t// Return the modified object\\n\\treturn target;\\n};\\n\\njQuery.extend( {\\n\\n\\t// Unique for each copy of jQuery on the page\\n\\texpando: \\\"jQuery\\\" + ( version + Math.random() ).replace( /\\\\D/g, \\\"\\\" ),\\n\\n\\t// Assume jQuery is ready without the ready module\\n\\tisReady: true,\\n\\n\\terror: function( msg ) {\\n\\t\\tthrow new Error( msg );\\n\\t},\\n\\n\\tnoop: function() {},\\n\\n\\tisFunction: function( obj ) {\\n\\t\\treturn jQuery.type( obj ) === \\\"function\\\";\\n\\t},\\n\\n\\tisWindow: function( obj ) {\\n\\t\\treturn obj != null && obj === obj.window;\\n\\t},\\n\\n\\tisNumeric: function( obj ) {\\n\\n\\t\\t// As of jQuery 3.0, isNumeric is limited to\\n\\t\\t// strings and numbers (primitives or objects)\\n\\t\\t// that can be coerced to finite numbers (gh-2662)\\n\\t\\tvar type = jQuery.type( obj );\\n\\t\\treturn ( type === \\\"number\\\" || type === \\\"string\\\" ) &&\\n\\n\\t\\t\\t// parseFloat NaNs numeric-cast false positives (\\\"\\\")\\n\\t\\t\\t// ...but misinterprets leading-number strings, particularly hex literals (\\\"0x...\\\")\\n\\t\\t\\t// subtraction forces infinities to NaN\\n\\t\\t\\t!isNaN( obj - parseFloat( obj ) );\\n\\t},\\n\\n\\tisPlainObject: function( obj ) {\\n\\t\\tvar proto, Ctor;\\n\\n\\t\\t// Detect obvious negatives\\n\\t\\t// Use toString instead of jQuery.type to catch host objects\\n\\t\\tif ( !obj || toString.call( obj ) !== \\\"[object Object]\\\" ) {\\n\\t\\t\\treturn false;\\n\\t\\t}\\n\\n\\t\\tproto = getProto( obj );\\n\\n\\t\\t// Objects with no prototype (e.g., `Object.create( null )`) are plain\\n\\t\\tif ( !proto ) {\\n\\t\\t\\treturn true;\\n\\t\\t}\\n\\n\\t\\t// Objects with prototype are plain iff they were constructed by a global Object function\\n\\t\\tCtor = hasOwn.call( proto, \\\"constructor\\\" ) && proto.constructor;\\n\\t\\treturn typeof Ctor === \\\"function\\\" && fnToString.call( Ctor ) === ObjectFunctionString;\\n\\t},\\n\\n\\tisEmptyObject: function( obj ) {\\n\\n\\t\\t/* eslint-disable no-unused-vars */\\n\\t\\t// See https://github.com/eslint/eslint/issues/6125\\n\\t\\tvar name;\\n\\n\\t\\tfor ( name in obj ) {\\n\\t\\t\\treturn false;\\n\\t\\t}\\n\\t\\treturn true;\\n\\t},\\n\\n\\ttype: function( obj ) {\\n\\t\\tif ( obj == null ) {\\n\\t\\t\\treturn obj + \\\"\\\";\\n\\t\\t}\\n\\n\\t\\t// Support: Android <=2.3 only (functionish RegExp)\\n\\t\\treturn typeof obj === \\\"object\\\" || typeof obj === \\\"function\\\" ?\\n\\t\\t\\tclass2type[ toString.call( obj ) ] || \\\"object\\\" :\\n\\t\\t\\ttypeof obj;\\n\\t},\\n\\n\\t// Evaluates a script in a global context\\n\\tglobalEval: function( code ) {\\n\\t\\tDOMEval( code );\\n\\t},\\n\\n\\t// Convert dashed to camelCase; used by the css and data modules\\n\\t// Support: IE <=9 - 11, Edge 12 - 13\\n\\t// Microsoft forgot to hump their vendor prefix (#9572)\\n\\tcamelCase: function( string ) {\\n\\t\\treturn string.replace( rmsPrefix, \\\"ms-\\\" ).replace( rdashAlpha, fcamelCase );\\n\\t},\\n\\n\\teach: function( obj, callback ) {\\n\\t\\tvar length, i = 0;\\n\\n\\t\\tif ( isArrayLike( obj ) ) {\\n\\t\\t\\tlength = obj.length;\\n\\t\\t\\tfor ( ; i < length; i++ ) {\\n\\t\\t\\t\\tif ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {\\n\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t} else {\\n\\t\\t\\tfor ( i in obj ) {\\n\\t\\t\\t\\tif ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {\\n\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn obj;\\n\\t},\\n\\n\\t// Support: Android <=4.0 only\\n\\ttrim: function( text ) {\\n\\t\\treturn text == null ?\\n\\t\\t\\t\\\"\\\" :\\n\\t\\t\\t( text + \\\"\\\" ).replace( rtrim, \\\"\\\" );\\n\\t},\\n\\n\\t// results is for internal usage only\\n\\tmakeArray: function( arr, results ) {\\n\\t\\tvar ret = results || [];\\n\\n\\t\\tif ( arr != null ) {\\n\\t\\t\\tif ( isArrayLike( Object( arr ) ) ) {\\n\\t\\t\\t\\tjQuery.merge( ret,\\n\\t\\t\\t\\t\\ttypeof arr === \\\"string\\\" ?\\n\\t\\t\\t\\t\\t[ arr ] : arr\\n\\t\\t\\t\\t);\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tpush.call( ret, arr );\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn ret;\\n\\t},\\n\\n\\tinArray: function( elem, arr, i ) {\\n\\t\\treturn arr == null ? -1 : indexOf.call( arr, elem, i );\\n\\t},\\n\\n\\t// Support: Android <=4.0 only, PhantomJS 1 only\\n\\t// push.apply(_, arraylike) throws on ancient WebKit\\n\\tmerge: function( first, second ) {\\n\\t\\tvar len = +second.length,\\n\\t\\t\\tj = 0,\\n\\t\\t\\ti = first.length;\\n\\n\\t\\tfor ( ; j < len; j++ ) {\\n\\t\\t\\tfirst[ i++ ] = second[ j ];\\n\\t\\t}\\n\\n\\t\\tfirst.length = i;\\n\\n\\t\\treturn first;\\n\\t},\\n\\n\\tgrep: function( elems, callback, invert ) {\\n\\t\\tvar callbackInverse,\\n\\t\\t\\tmatches = [],\\n\\t\\t\\ti = 0,\\n\\t\\t\\tlength = elems.length,\\n\\t\\t\\tcallbackExpect = !invert;\\n\\n\\t\\t// Go through the array, only saving the items\\n\\t\\t// that pass the validator function\\n\\t\\tfor ( ; i < length; i++ ) {\\n\\t\\t\\tcallbackInverse = !callback( elems[ i ], i );\\n\\t\\t\\tif ( callbackInverse !== callbackExpect ) {\\n\\t\\t\\t\\tmatches.push( elems[ i ] );\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn matches;\\n\\t},\\n\\n\\t// arg is for internal usage only\\n\\tmap: function( elems, callback, arg ) {\\n\\t\\tvar length, value,\\n\\t\\t\\ti = 0,\\n\\t\\t\\tret = [];\\n\\n\\t\\t// Go through the array, translating each of the items to their new values\\n\\t\\tif ( isArrayLike( elems ) ) {\\n\\t\\t\\tlength = elems.length;\\n\\t\\t\\tfor ( ; i < length; i++ ) {\\n\\t\\t\\t\\tvalue = callback( elems[ i ], i, arg );\\n\\n\\t\\t\\t\\tif ( value != null ) {\\n\\t\\t\\t\\t\\tret.push( value );\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t// Go through every key on the object,\\n\\t\\t} else {\\n\\t\\t\\tfor ( i in elems ) {\\n\\t\\t\\t\\tvalue = callback( elems[ i ], i, arg );\\n\\n\\t\\t\\t\\tif ( value != null ) {\\n\\t\\t\\t\\t\\tret.push( value );\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t// Flatten any nested arrays\\n\\t\\treturn concat.apply( [], ret );\\n\\t},\\n\\n\\t// A global GUID counter for objects\\n\\tguid: 1,\\n\\n\\t// Bind a function to a context, optionally partially applying any\\n\\t// arguments.\\n\\tproxy: function( fn, context ) {\\n\\t\\tvar tmp, args, proxy;\\n\\n\\t\\tif ( typeof context === \\\"string\\\" ) {\\n\\t\\t\\ttmp = fn[ context ];\\n\\t\\t\\tcontext = fn;\\n\\t\\t\\tfn = tmp;\\n\\t\\t}\\n\\n\\t\\t// Quick check to determine if target is callable, in the spec\\n\\t\\t// this throws a TypeError, but we will just return undefined.\\n\\t\\tif ( !jQuery.isFunction( fn ) ) {\\n\\t\\t\\treturn undefined;\\n\\t\\t}\\n\\n\\t\\t// Simulated bind\\n\\t\\targs = slice.call( arguments, 2 );\\n\\t\\tproxy = function() {\\n\\t\\t\\treturn fn.apply( context || this, args.concat( slice.call( arguments ) ) );\\n\\t\\t};\\n\\n\\t\\t// Set the guid of unique handler to the same of original handler, so it can be removed\\n\\t\\tproxy.guid = fn.guid = fn.guid || jQuery.guid++;\\n\\n\\t\\treturn proxy;\\n\\t},\\n\\n\\tnow: Date.now,\\n\\n\\t// jQuery.support is not used in Core but other projects attach their\\n\\t// properties to it so it needs to exist.\\n\\tsupport: support\\n} );\\n\\nif ( typeof Symbol === \\\"function\\\" ) {\\n\\tjQuery.fn[ Symbol.iterator ] = arr[ Symbol.iterator ];\\n}\\n\\n// Populate the class2type map\\njQuery.each( \\\"Boolean Number String Function Array Date RegExp Object Error Symbol\\\".split( \\\" \\\" ),\\nfunction( i, name ) {\\n\\tclass2type[ \\\"[object \\\" + name + \\\"]\\\" ] = name.toLowerCase();\\n} );\\n\\nfunction isArrayLike( obj ) {\\n\\n\\t// Support: real iOS 8.2 only (not reproducible in simulator)\\n\\t// `in` check used to prevent JIT error (gh-2145)\\n\\t// hasOwn isn't used here due to false negatives\\n\\t// regarding Nodelist length in IE\\n\\tvar length = !!obj && \\\"length\\\" in obj && obj.length,\\n\\t\\ttype = jQuery.type( obj );\\n\\n\\tif ( type === \\\"function\\\" || jQuery.isWindow( obj ) ) {\\n\\t\\treturn false;\\n\\t}\\n\\n\\treturn type === \\\"array\\\" || length === 0 ||\\n\\t\\ttypeof length === \\\"number\\\" && length > 0 && ( length - 1 ) in obj;\\n}\\nvar Sizzle =\\n/*!\\n * Sizzle CSS Selector Engine v2.3.3\\n * https://sizzlejs.com/\\n *\\n * Copyright jQuery Foundation and other contributors\\n * Released under the MIT license\\n * http://jquery.org/license\\n *\\n * Date: 2016-08-08\\n */\\n(function( window ) {\\n\\nvar i,\\n\\tsupport,\\n\\tExpr,\\n\\tgetText,\\n\\tisXML,\\n\\ttokenize,\\n\\tcompile,\\n\\tselect,\\n\\toutermostContext,\\n\\tsortInput,\\n\\thasDuplicate,\\n\\n\\t// Local document vars\\n\\tsetDocument,\\n\\tdocument,\\n\\tdocElem,\\n\\tdocumentIsHTML,\\n\\trbuggyQSA,\\n\\trbuggyMatches,\\n\\tmatches,\\n\\tcontains,\\n\\n\\t// Instance-specific data\\n\\texpando = \\\"sizzle\\\" + 1 * new Date(),\\n\\tpreferredDoc = window.document,\\n\\tdirruns = 0,\\n\\tdone = 0,\\n\\tclassCache = createCache(),\\n\\ttokenCache = createCache(),\\n\\tcompilerCache = createCache(),\\n\\tsortOrder = function( a, b ) {\\n\\t\\tif ( a === b ) {\\n\\t\\t\\thasDuplicate = true;\\n\\t\\t}\\n\\t\\treturn 0;\\n\\t},\\n\\n\\t// Instance methods\\n\\thasOwn = ({}).hasOwnProperty,\\n\\tarr = [],\\n\\tpop = arr.pop,\\n\\tpush_native = arr.push,\\n\\tpush = arr.push,\\n\\tslice = arr.slice,\\n\\t// Use a stripped-down indexOf as it's faster than native\\n\\t// https://jsperf.com/thor-indexof-vs-for/5\\n\\tindexOf = function( list, elem ) {\\n\\t\\tvar i = 0,\\n\\t\\t\\tlen = list.length;\\n\\t\\tfor ( ; i < len; i++ ) {\\n\\t\\t\\tif ( list[i] === elem ) {\\n\\t\\t\\t\\treturn i;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\treturn -1;\\n\\t},\\n\\n\\tbooleans = \\\"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\\\",\\n\\n\\t// Regular expressions\\n\\n\\t// http://www.w3.org/TR/css3-selectors/#whitespace\\n\\twhitespace = \\\"[\\\\\\\\x20\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\f]\\\",\\n\\n\\t// http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier\\n\\tidentifier = \\\"(?:\\\\\\\\\\\\\\\\.|[\\\\\\\\w-]|[^\\\\0-\\\\\\\\xa0])+\\\",\\n\\n\\t// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors\\n\\tattributes = \\\"\\\\\\\\[\\\" + whitespace + \\\"*(\\\" + identifier + \\\")(?:\\\" + whitespace +\\n\\t\\t// Operator (capture 2)\\n\\t\\t\\\"*([*^$|!~]?=)\\\" + whitespace +\\n\\t\\t// \\\"Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]\\\"\\n\\t\\t\\\"*(?:'((?:\\\\\\\\\\\\\\\\.|[^\\\\\\\\\\\\\\\\'])*)'|\\\\\\\"((?:\\\\\\\\\\\\\\\\.|[^\\\\\\\\\\\\\\\\\\\\\\\"])*)\\\\\\\"|(\\\" + identifier + \\\"))|)\\\" + whitespace +\\n\\t\\t\\\"*\\\\\\\\]\\\",\\n\\n\\tpseudos = \\\":(\\\" + identifier + \\\")(?:\\\\\\\\((\\\" +\\n\\t\\t// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:\\n\\t\\t// 1. quoted (capture 3; capture 4 or capture 5)\\n\\t\\t\\\"('((?:\\\\\\\\\\\\\\\\.|[^\\\\\\\\\\\\\\\\'])*)'|\\\\\\\"((?:\\\\\\\\\\\\\\\\.|[^\\\\\\\\\\\\\\\\\\\\\\\"])*)\\\\\\\")|\\\" +\\n\\t\\t// 2. simple (capture 6)\\n\\t\\t\\\"((?:\\\\\\\\\\\\\\\\.|[^\\\\\\\\\\\\\\\\()[\\\\\\\\]]|\\\" + attributes + \\\")*)|\\\" +\\n\\t\\t// 3. anything else (capture 2)\\n\\t\\t\\\".*\\\" +\\n\\t\\t\\\")\\\\\\\\)|)\\\",\\n\\n\\t// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter\\n\\trwhitespace = new RegExp( whitespace + \\\"+\\\", \\\"g\\\" ),\\n\\trtrim = new RegExp( \\\"^\\\" + whitespace + \\\"+|((?:^|[^\\\\\\\\\\\\\\\\])(?:\\\\\\\\\\\\\\\\.)*)\\\" + whitespace + \\\"+$\\\", \\\"g\\\" ),\\n\\n\\trcomma = new RegExp( \\\"^\\\" + whitespace + \\\"*,\\\" + whitespace + \\\"*\\\" ),\\n\\trcombinators = new RegExp( \\\"^\\\" + whitespace + \\\"*([>+~]|\\\" + whitespace + \\\")\\\" + whitespace + \\\"*\\\" ),\\n\\n\\trattributeQuotes = new RegExp( \\\"=\\\" + whitespace + \\\"*([^\\\\\\\\]'\\\\\\\"]*?)\\\" + whitespace + \\\"*\\\\\\\\]\\\", \\\"g\\\" ),\\n\\n\\trpseudo = new RegExp( pseudos ),\\n\\tridentifier = new RegExp( \\\"^\\\" + identifier + \\\"$\\\" ),\\n\\n\\tmatchExpr = {\\n\\t\\t\\\"ID\\\": new RegExp( \\\"^#(\\\" + identifier + \\\")\\\" ),\\n\\t\\t\\\"CLASS\\\": new RegExp( \\\"^\\\\\\\\.(\\\" + identifier + \\\")\\\" ),\\n\\t\\t\\\"TAG\\\": new RegExp( \\\"^(\\\" + identifier + \\\"|[*])\\\" ),\\n\\t\\t\\\"ATTR\\\": new RegExp( \\\"^\\\" + attributes ),\\n\\t\\t\\\"PSEUDO\\\": new RegExp( \\\"^\\\" + pseudos ),\\n\\t\\t\\\"CHILD\\\": new RegExp( \\\"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\\\\\(\\\" + whitespace +\\n\\t\\t\\t\\\"*(even|odd|(([+-]|)(\\\\\\\\d*)n|)\\\" + whitespace + \\\"*(?:([+-]|)\\\" + whitespace +\\n\\t\\t\\t\\\"*(\\\\\\\\d+)|))\\\" + whitespace + \\\"*\\\\\\\\)|)\\\", \\\"i\\\" ),\\n\\t\\t\\\"bool\\\": new RegExp( \\\"^(?:\\\" + booleans + \\\")$\\\", \\\"i\\\" ),\\n\\t\\t// For use in libraries implementing .is()\\n\\t\\t// We use this for POS matching in `select`\\n\\t\\t\\\"needsContext\\\": new RegExp( \\\"^\\\" + whitespace + \\\"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\\\\\(\\\" +\\n\\t\\t\\twhitespace + \\\"*((?:-\\\\\\\\d)?\\\\\\\\d*)\\\" + whitespace + \\\"*\\\\\\\\)|)(?=[^-]|$)\\\", \\\"i\\\" )\\n\\t},\\n\\n\\trinputs = /^(?:input|select|textarea|button)$/i,\\n\\trheader = /^h\\\\d$/i,\\n\\n\\trnative = /^[^{]+\\\\{\\\\s*\\\\[native \\\\w/,\\n\\n\\t// Easily-parseable/retrievable ID or TAG or CLASS selectors\\n\\trquickExpr = /^(?:#([\\\\w-]+)|(\\\\w+)|\\\\.([\\\\w-]+))$/,\\n\\n\\trsibling = /[+~]/,\\n\\n\\t// CSS escapes\\n\\t// http://www.w3.org/TR/CSS21/syndata.html#escaped-characters\\n\\trunescape = new RegExp( \\\"\\\\\\\\\\\\\\\\([\\\\\\\\da-f]{1,6}\\\" + whitespace + \\\"?|(\\\" + whitespace + \\\")|.)\\\", \\\"ig\\\" ),\\n\\tfunescape = function( _, escaped, escapedWhitespace ) {\\n\\t\\tvar high = \\\"0x\\\" + escaped - 0x10000;\\n\\t\\t// NaN means non-codepoint\\n\\t\\t// Support: Firefox<24\\n\\t\\t// Workaround erroneous numeric interpretation of +\\\"0x\\\"\\n\\t\\treturn high !== high || escapedWhitespace ?\\n\\t\\t\\tescaped :\\n\\t\\t\\thigh < 0 ?\\n\\t\\t\\t\\t// BMP codepoint\\n\\t\\t\\t\\tString.fromCharCode( high + 0x10000 ) :\\n\\t\\t\\t\\t// Supplemental Plane codepoint (surrogate pair)\\n\\t\\t\\t\\tString.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );\\n\\t},\\n\\n\\t// CSS string/identifier serialization\\n\\t// https://drafts.csswg.org/cssom/#common-serializing-idioms\\n\\trcssescape = /([\\\\0-\\\\x1f\\\\x7f]|^-?\\\\d)|^-$|[^\\\\0-\\\\x1f\\\\x7f-\\\\uFFFF\\\\w-]/g,\\n\\tfcssescape = function( ch, asCodePoint ) {\\n\\t\\tif ( asCodePoint ) {\\n\\n\\t\\t\\t// U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER\\n\\t\\t\\tif ( ch === \\\"\\\\0\\\" ) {\\n\\t\\t\\t\\treturn \\\"\\\\uFFFD\\\";\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Control characters and (dependent upon position) numbers get escaped as code points\\n\\t\\t\\treturn ch.slice( 0, -1 ) + \\\"\\\\\\\\\\\" + ch.charCodeAt( ch.length - 1 ).toString( 16 ) + \\\" \\\";\\n\\t\\t}\\n\\n\\t\\t// Other potentially-special ASCII characters get backslash-escaped\\n\\t\\treturn \\\"\\\\\\\\\\\" + ch;\\n\\t},\\n\\n\\t// Used for iframes\\n\\t// See setDocument()\\n\\t// Removing the function wrapper causes a \\\"Permission Denied\\\"\\n\\t// error in IE\\n\\tunloadHandler = function() {\\n\\t\\tsetDocument();\\n\\t},\\n\\n\\tdisabledAncestor = addCombinator(\\n\\t\\tfunction( elem ) {\\n\\t\\t\\treturn elem.disabled === true && (\\\"form\\\" in elem || \\\"label\\\" in elem);\\n\\t\\t},\\n\\t\\t{ dir: \\\"parentNode\\\", next: \\\"legend\\\" }\\n\\t);\\n\\n// Optimize for push.apply( _, NodeList )\\ntry {\\n\\tpush.apply(\\n\\t\\t(arr = slice.call( preferredDoc.childNodes )),\\n\\t\\tpreferredDoc.childNodes\\n\\t);\\n\\t// Support: Android<4.0\\n\\t// Detect silently failing push.apply\\n\\tarr[ preferredDoc.childNodes.length ].nodeType;\\n} catch ( e ) {\\n\\tpush = { apply: arr.length ?\\n\\n\\t\\t// Leverage slice if possible\\n\\t\\tfunction( target, els ) {\\n\\t\\t\\tpush_native.apply( target, slice.call(els) );\\n\\t\\t} :\\n\\n\\t\\t// Support: IE<9\\n\\t\\t// Otherwise append directly\\n\\t\\tfunction( target, els ) {\\n\\t\\t\\tvar j = target.length,\\n\\t\\t\\t\\ti = 0;\\n\\t\\t\\t// Can't trust NodeList.length\\n\\t\\t\\twhile ( (target[j++] = els[i++]) ) {}\\n\\t\\t\\ttarget.length = j - 1;\\n\\t\\t}\\n\\t};\\n}\\n\\nfunction Sizzle( selector, context, results, seed ) {\\n\\tvar m, i, elem, nid, match, groups, newSelector,\\n\\t\\tnewContext = context && context.ownerDocument,\\n\\n\\t\\t// nodeType defaults to 9, since context defaults to document\\n\\t\\tnodeType = context ? context.nodeType : 9;\\n\\n\\tresults = results || [];\\n\\n\\t// Return early from calls with invalid selector or context\\n\\tif ( typeof selector !== \\\"string\\\" || !selector ||\\n\\t\\tnodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {\\n\\n\\t\\treturn results;\\n\\t}\\n\\n\\t// Try to shortcut find operations (as opposed to filters) in HTML documents\\n\\tif ( !seed ) {\\n\\n\\t\\tif ( ( context ? context.ownerDocument || context : preferredDoc ) !== document ) {\\n\\t\\t\\tsetDocument( context );\\n\\t\\t}\\n\\t\\tcontext = context || document;\\n\\n\\t\\tif ( documentIsHTML ) {\\n\\n\\t\\t\\t// If the selector is sufficiently simple, try using a \\\"get*By*\\\" DOM method\\n\\t\\t\\t// (excepting DocumentFragment context, where the methods don't exist)\\n\\t\\t\\tif ( nodeType !== 11 && (match = rquickExpr.exec( selector )) ) {\\n\\n\\t\\t\\t\\t// ID selector\\n\\t\\t\\t\\tif ( (m = match[1]) ) {\\n\\n\\t\\t\\t\\t\\t// Document context\\n\\t\\t\\t\\t\\tif ( nodeType === 9 ) {\\n\\t\\t\\t\\t\\t\\tif ( (elem = context.getElementById( m )) ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t// Support: IE, Opera, Webkit\\n\\t\\t\\t\\t\\t\\t\\t// TODO: identify versions\\n\\t\\t\\t\\t\\t\\t\\t// getElementById can match elements by name instead of ID\\n\\t\\t\\t\\t\\t\\t\\tif ( elem.id === m ) {\\n\\t\\t\\t\\t\\t\\t\\t\\tresults.push( elem );\\n\\t\\t\\t\\t\\t\\t\\t\\treturn results;\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\treturn results;\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t// Element context\\n\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\t// Support: IE, Opera, Webkit\\n\\t\\t\\t\\t\\t\\t// TODO: identify versions\\n\\t\\t\\t\\t\\t\\t// getElementById can match elements by name instead of ID\\n\\t\\t\\t\\t\\t\\tif ( newContext && (elem = newContext.getElementById( m )) &&\\n\\t\\t\\t\\t\\t\\t\\tcontains( context, elem ) &&\\n\\t\\t\\t\\t\\t\\t\\telem.id === m ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tresults.push( elem );\\n\\t\\t\\t\\t\\t\\t\\treturn results;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// Type selector\\n\\t\\t\\t\\t} else if ( match[2] ) {\\n\\t\\t\\t\\t\\tpush.apply( results, context.getElementsByTagName( selector ) );\\n\\t\\t\\t\\t\\treturn results;\\n\\n\\t\\t\\t\\t// Class selector\\n\\t\\t\\t\\t} else if ( (m = match[3]) && support.getElementsByClassName &&\\n\\t\\t\\t\\t\\tcontext.getElementsByClassName ) {\\n\\n\\t\\t\\t\\t\\tpush.apply( results, context.getElementsByClassName( m ) );\\n\\t\\t\\t\\t\\treturn results;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Take advantage of querySelectorAll\\n\\t\\t\\tif ( support.qsa &&\\n\\t\\t\\t\\t!compilerCache[ selector + \\\" \\\" ] &&\\n\\t\\t\\t\\t(!rbuggyQSA || !rbuggyQSA.test( selector )) ) {\\n\\n\\t\\t\\t\\tif ( nodeType !== 1 ) {\\n\\t\\t\\t\\t\\tnewContext = context;\\n\\t\\t\\t\\t\\tnewSelector = selector;\\n\\n\\t\\t\\t\\t// qSA looks outside Element context, which is not what we want\\n\\t\\t\\t\\t// Thanks to Andrew Dupont for this workaround technique\\n\\t\\t\\t\\t// Support: IE <=8\\n\\t\\t\\t\\t// Exclude object elements\\n\\t\\t\\t\\t} else if ( context.nodeName.toLowerCase() !== \\\"object\\\" ) {\\n\\n\\t\\t\\t\\t\\t// Capture the context ID, setting it first if necessary\\n\\t\\t\\t\\t\\tif ( (nid = context.getAttribute( \\\"id\\\" )) ) {\\n\\t\\t\\t\\t\\t\\tnid = nid.replace( rcssescape, fcssescape );\\n\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\tcontext.setAttribute( \\\"id\\\", (nid = expando) );\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t// Prefix every selector in the list\\n\\t\\t\\t\\t\\tgroups = tokenize( selector );\\n\\t\\t\\t\\t\\ti = groups.length;\\n\\t\\t\\t\\t\\twhile ( i-- ) {\\n\\t\\t\\t\\t\\t\\tgroups[i] = \\\"#\\\" + nid + \\\" \\\" + toSelector( groups[i] );\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\tnewSelector = groups.join( \\\",\\\" );\\n\\n\\t\\t\\t\\t\\t// Expand context for sibling selectors\\n\\t\\t\\t\\t\\tnewContext = rsibling.test( selector ) && testContext( context.parentNode ) ||\\n\\t\\t\\t\\t\\t\\tcontext;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif ( newSelector ) {\\n\\t\\t\\t\\t\\ttry {\\n\\t\\t\\t\\t\\t\\tpush.apply( results,\\n\\t\\t\\t\\t\\t\\t\\tnewContext.querySelectorAll( newSelector )\\n\\t\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t\\t\\treturn results;\\n\\t\\t\\t\\t\\t} catch ( qsaError ) {\\n\\t\\t\\t\\t\\t} finally {\\n\\t\\t\\t\\t\\t\\tif ( nid === expando ) {\\n\\t\\t\\t\\t\\t\\t\\tcontext.removeAttribute( \\\"id\\\" );\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\t// All others\\n\\treturn select( selector.replace( rtrim, \\\"$1\\\" ), context, results, seed );\\n}\\n\\n/**\\n * Create key-value caches of limited size\\n * @returns {function(string, object)} Returns the Object data after storing it on itself with\\n *\\tproperty name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)\\n *\\tdeleting the oldest entry\\n */\\nfunction createCache() {\\n\\tvar keys = [];\\n\\n\\tfunction cache( key, value ) {\\n\\t\\t// Use (key + \\\" \\\") to avoid collision with native prototype properties (see Issue #157)\\n\\t\\tif ( keys.push( key + \\\" \\\" ) > Expr.cacheLength ) {\\n\\t\\t\\t// Only keep the most recent entries\\n\\t\\t\\tdelete cache[ keys.shift() ];\\n\\t\\t}\\n\\t\\treturn (cache[ key + \\\" \\\" ] = value);\\n\\t}\\n\\treturn cache;\\n}\\n\\n/**\\n * Mark a function for special use by Sizzle\\n * @param {Function} fn The function to mark\\n */\\nfunction markFunction( fn ) {\\n\\tfn[ expando ] = true;\\n\\treturn fn;\\n}\\n\\n/**\\n * Support testing using an element\\n * @param {Function} fn Passed the created element and returns a boolean result\\n */\\nfunction assert( fn ) {\\n\\tvar el = document.createElement(\\\"fieldset\\\");\\n\\n\\ttry {\\n\\t\\treturn !!fn( el );\\n\\t} catch (e) {\\n\\t\\treturn false;\\n\\t} finally {\\n\\t\\t// Remove from its parent by default\\n\\t\\tif ( el.parentNode ) {\\n\\t\\t\\tel.parentNode.removeChild( el );\\n\\t\\t}\\n\\t\\t// release memory in IE\\n\\t\\tel = null;\\n\\t}\\n}\\n\\n/**\\n * Adds the same handler for all of the specified attrs\\n * @param {String} attrs Pipe-separated list of attributes\\n * @param {Function} handler The method that will be applied\\n */\\nfunction addHandle( attrs, handler ) {\\n\\tvar arr = attrs.split(\\\"|\\\"),\\n\\t\\ti = arr.length;\\n\\n\\twhile ( i-- ) {\\n\\t\\tExpr.attrHandle[ arr[i] ] = handler;\\n\\t}\\n}\\n\\n/**\\n * Checks document order of two siblings\\n * @param {Element} a\\n * @param {Element} b\\n * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b\\n */\\nfunction siblingCheck( a, b ) {\\n\\tvar cur = b && a,\\n\\t\\tdiff = cur && a.nodeType === 1 && b.nodeType === 1 &&\\n\\t\\t\\ta.sourceIndex - b.sourceIndex;\\n\\n\\t// Use IE sourceIndex if available on both nodes\\n\\tif ( diff ) {\\n\\t\\treturn diff;\\n\\t}\\n\\n\\t// Check if b follows a\\n\\tif ( cur ) {\\n\\t\\twhile ( (cur = cur.nextSibling) ) {\\n\\t\\t\\tif ( cur === b ) {\\n\\t\\t\\t\\treturn -1;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\treturn a ? 1 : -1;\\n}\\n\\n/**\\n * Returns a function to use in pseudos for input types\\n * @param {String} type\\n */\\nfunction createInputPseudo( type ) {\\n\\treturn function( elem ) {\\n\\t\\tvar name = elem.nodeName.toLowerCase();\\n\\t\\treturn name === \\\"input\\\" && elem.type === type;\\n\\t};\\n}\\n\\n/**\\n * Returns a function to use in pseudos for buttons\\n * @param {String} type\\n */\\nfunction createButtonPseudo( type ) {\\n\\treturn function( elem ) {\\n\\t\\tvar name = elem.nodeName.toLowerCase();\\n\\t\\treturn (name === \\\"input\\\" || name === \\\"button\\\") && elem.type === type;\\n\\t};\\n}\\n\\n/**\\n * Returns a function to use in pseudos for :enabled/:disabled\\n * @param {Boolean} disabled true for :disabled; false for :enabled\\n */\\nfunction createDisabledPseudo( disabled ) {\\n\\n\\t// Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable\\n\\treturn function( elem ) {\\n\\n\\t\\t// Only certain elements can match :enabled or :disabled\\n\\t\\t// https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled\\n\\t\\t// https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled\\n\\t\\tif ( \\\"form\\\" in elem ) {\\n\\n\\t\\t\\t// Check for inherited disabledness on relevant non-disabled elements:\\n\\t\\t\\t// * listed form-associated elements in a disabled fieldset\\n\\t\\t\\t//   https://html.spec.whatwg.org/multipage/forms.html#category-listed\\n\\t\\t\\t//   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled\\n\\t\\t\\t// * option elements in a disabled optgroup\\n\\t\\t\\t//   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled\\n\\t\\t\\t// All such elements have a \\\"form\\\" property.\\n\\t\\t\\tif ( elem.parentNode && elem.disabled === false ) {\\n\\n\\t\\t\\t\\t// Option elements defer to a parent optgroup if present\\n\\t\\t\\t\\tif ( \\\"label\\\" in elem ) {\\n\\t\\t\\t\\t\\tif ( \\\"label\\\" in elem.parentNode ) {\\n\\t\\t\\t\\t\\t\\treturn elem.parentNode.disabled === disabled;\\n\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\treturn elem.disabled === disabled;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// Support: IE 6 - 11\\n\\t\\t\\t\\t// Use the isDisabled shortcut property to check for disabled fieldset ancestors\\n\\t\\t\\t\\treturn elem.isDisabled === disabled ||\\n\\n\\t\\t\\t\\t\\t// Where there is no isDisabled, check manually\\n\\t\\t\\t\\t\\t/* jshint -W018 */\\n\\t\\t\\t\\t\\telem.isDisabled !== !disabled &&\\n\\t\\t\\t\\t\\t\\tdisabledAncestor( elem ) === disabled;\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn elem.disabled === disabled;\\n\\n\\t\\t// Try to winnow out elements that can't be disabled before trusting the disabled property.\\n\\t\\t// Some victims get caught in our net (label, legend, menu, track), but it shouldn't\\n\\t\\t// even exist on them, let alone have a boolean value.\\n\\t\\t} else if ( \\\"label\\\" in elem ) {\\n\\t\\t\\treturn elem.disabled === disabled;\\n\\t\\t}\\n\\n\\t\\t// Remaining elements are neither :enabled nor :disabled\\n\\t\\treturn false;\\n\\t};\\n}\\n\\n/**\\n * Returns a function to use in pseudos for positionals\\n * @param {Function} fn\\n */\\nfunction createPositionalPseudo( fn ) {\\n\\treturn markFunction(function( argument ) {\\n\\t\\targument = +argument;\\n\\t\\treturn markFunction(function( seed, matches ) {\\n\\t\\t\\tvar j,\\n\\t\\t\\t\\tmatchIndexes = fn( [], seed.length, argument ),\\n\\t\\t\\t\\ti = matchIndexes.length;\\n\\n\\t\\t\\t// Match elements found at the specified indexes\\n\\t\\t\\twhile ( i-- ) {\\n\\t\\t\\t\\tif ( seed[ (j = matchIndexes[i]) ] ) {\\n\\t\\t\\t\\t\\tseed[j] = !(matches[j] = seed[j]);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t});\\n\\t});\\n}\\n\\n/**\\n * Checks a node for validity as a Sizzle context\\n * @param {Element|Object=} context\\n * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value\\n */\\nfunction testContext( context ) {\\n\\treturn context && typeof context.getElementsByTagName !== \\\"undefined\\\" && context;\\n}\\n\\n// Expose support vars for convenience\\nsupport = Sizzle.support = {};\\n\\n/**\\n * Detects XML nodes\\n * @param {Element|Object} elem An element or a document\\n * @returns {Boolean} True iff elem is a non-HTML XML node\\n */\\nisXML = Sizzle.isXML = function( elem ) {\\n\\t// documentElement is verified for cases where it doesn't yet exist\\n\\t// (such as loading iframes in IE - #4833)\\n\\tvar documentElement = elem && (elem.ownerDocument || elem).documentElement;\\n\\treturn documentElement ? documentElement.nodeName !== \\\"HTML\\\" : false;\\n};\\n\\n/**\\n * Sets document-related variables once based on the current document\\n * @param {Element|Object} [doc] An element or document object to use to set the document\\n * @returns {Object} Returns the current document\\n */\\nsetDocument = Sizzle.setDocument = function( node ) {\\n\\tvar hasCompare, subWindow,\\n\\t\\tdoc = node ? node.ownerDocument || node : preferredDoc;\\n\\n\\t// Return early if doc is invalid or already selected\\n\\tif ( doc === document || doc.nodeType !== 9 || !doc.documentElement ) {\\n\\t\\treturn document;\\n\\t}\\n\\n\\t// Update global variables\\n\\tdocument = doc;\\n\\tdocElem = document.documentElement;\\n\\tdocumentIsHTML = !isXML( document );\\n\\n\\t// Support: IE 9-11, Edge\\n\\t// Accessing iframe documents after unload throws \\\"permission denied\\\" errors (jQuery #13936)\\n\\tif ( preferredDoc !== document &&\\n\\t\\t(subWindow = document.defaultView) && subWindow.top !== subWindow ) {\\n\\n\\t\\t// Support: IE 11, Edge\\n\\t\\tif ( subWindow.addEventListener ) {\\n\\t\\t\\tsubWindow.addEventListener( \\\"unload\\\", unloadHandler, false );\\n\\n\\t\\t// Support: IE 9 - 10 only\\n\\t\\t} else if ( subWindow.attachEvent ) {\\n\\t\\t\\tsubWindow.attachEvent( \\\"onunload\\\", unloadHandler );\\n\\t\\t}\\n\\t}\\n\\n\\t/* Attributes\\n\\t---------------------------------------------------------------------- */\\n\\n\\t// Support: IE<8\\n\\t// Verify that getAttribute really returns attributes and not properties\\n\\t// (excepting IE8 booleans)\\n\\tsupport.attributes = assert(function( el ) {\\n\\t\\tel.className = \\\"i\\\";\\n\\t\\treturn !el.getAttribute(\\\"className\\\");\\n\\t});\\n\\n\\t/* getElement(s)By*\\n\\t---------------------------------------------------------------------- */\\n\\n\\t// Check if getElementsByTagName(\\\"*\\\") returns only elements\\n\\tsupport.getElementsByTagName = assert(function( el ) {\\n\\t\\tel.appendChild( document.createComment(\\\"\\\") );\\n\\t\\treturn !el.getElementsByTagName(\\\"*\\\").length;\\n\\t});\\n\\n\\t// Support: IE<9\\n\\tsupport.getElementsByClassName = rnative.test( document.getElementsByClassName );\\n\\n\\t// Support: IE<10\\n\\t// Check if getElementById returns elements by name\\n\\t// The broken getElementById methods don't pick up programmatically-set names,\\n\\t// so use a roundabout getElementsByName test\\n\\tsupport.getById = assert(function( el ) {\\n\\t\\tdocElem.appendChild( el ).id = expando;\\n\\t\\treturn !document.getElementsByName || !document.getElementsByName( expando ).length;\\n\\t});\\n\\n\\t// ID filter and find\\n\\tif ( support.getById ) {\\n\\t\\tExpr.filter[\\\"ID\\\"] = function( id ) {\\n\\t\\t\\tvar attrId = id.replace( runescape, funescape );\\n\\t\\t\\treturn function( elem ) {\\n\\t\\t\\t\\treturn elem.getAttribute(\\\"id\\\") === attrId;\\n\\t\\t\\t};\\n\\t\\t};\\n\\t\\tExpr.find[\\\"ID\\\"] = function( id, context ) {\\n\\t\\t\\tif ( typeof context.getElementById !== \\\"undefined\\\" && documentIsHTML ) {\\n\\t\\t\\t\\tvar elem = context.getElementById( id );\\n\\t\\t\\t\\treturn elem ? [ elem ] : [];\\n\\t\\t\\t}\\n\\t\\t};\\n\\t} else {\\n\\t\\tExpr.filter[\\\"ID\\\"] =  function( id ) {\\n\\t\\t\\tvar attrId = id.replace( runescape, funescape );\\n\\t\\t\\treturn function( elem ) {\\n\\t\\t\\t\\tvar node = typeof elem.getAttributeNode !== \\\"undefined\\\" &&\\n\\t\\t\\t\\t\\telem.getAttributeNode(\\\"id\\\");\\n\\t\\t\\t\\treturn node && node.value === attrId;\\n\\t\\t\\t};\\n\\t\\t};\\n\\n\\t\\t// Support: IE 6 - 7 only\\n\\t\\t// getElementById is not reliable as a find shortcut\\n\\t\\tExpr.find[\\\"ID\\\"] = function( id, context ) {\\n\\t\\t\\tif ( typeof context.getElementById !== \\\"undefined\\\" && documentIsHTML ) {\\n\\t\\t\\t\\tvar node, i, elems,\\n\\t\\t\\t\\t\\telem = context.getElementById( id );\\n\\n\\t\\t\\t\\tif ( elem ) {\\n\\n\\t\\t\\t\\t\\t// Verify the id attribute\\n\\t\\t\\t\\t\\tnode = elem.getAttributeNode(\\\"id\\\");\\n\\t\\t\\t\\t\\tif ( node && node.value === id ) {\\n\\t\\t\\t\\t\\t\\treturn [ elem ];\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t// Fall back on getElementsByName\\n\\t\\t\\t\\t\\telems = context.getElementsByName( id );\\n\\t\\t\\t\\t\\ti = 0;\\n\\t\\t\\t\\t\\twhile ( (elem = elems[i++]) ) {\\n\\t\\t\\t\\t\\t\\tnode = elem.getAttributeNode(\\\"id\\\");\\n\\t\\t\\t\\t\\t\\tif ( node && node.value === id ) {\\n\\t\\t\\t\\t\\t\\t\\treturn [ elem ];\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\treturn [];\\n\\t\\t\\t}\\n\\t\\t};\\n\\t}\\n\\n\\t// Tag\\n\\tExpr.find[\\\"TAG\\\"] = support.getElementsByTagName ?\\n\\t\\tfunction( tag, context ) {\\n\\t\\t\\tif ( typeof context.getElementsByTagName !== \\\"undefined\\\" ) {\\n\\t\\t\\t\\treturn context.getElementsByTagName( tag );\\n\\n\\t\\t\\t// DocumentFragment nodes don't have gEBTN\\n\\t\\t\\t} else if ( support.qsa ) {\\n\\t\\t\\t\\treturn context.querySelectorAll( tag );\\n\\t\\t\\t}\\n\\t\\t} :\\n\\n\\t\\tfunction( tag, context ) {\\n\\t\\t\\tvar elem,\\n\\t\\t\\t\\ttmp = [],\\n\\t\\t\\t\\ti = 0,\\n\\t\\t\\t\\t// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too\\n\\t\\t\\t\\tresults = context.getElementsByTagName( tag );\\n\\n\\t\\t\\t// Filter out possible comments\\n\\t\\t\\tif ( tag === \\\"*\\\" ) {\\n\\t\\t\\t\\twhile ( (elem = results[i++]) ) {\\n\\t\\t\\t\\t\\tif ( elem.nodeType === 1 ) {\\n\\t\\t\\t\\t\\t\\ttmp.push( elem );\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\treturn tmp;\\n\\t\\t\\t}\\n\\t\\t\\treturn results;\\n\\t\\t};\\n\\n\\t// Class\\n\\tExpr.find[\\\"CLASS\\\"] = support.getElementsByClassName && function( className, context ) {\\n\\t\\tif ( typeof context.getElementsByClassName !== \\\"undefined\\\" && documentIsHTML ) {\\n\\t\\t\\treturn context.getElementsByClassName( className );\\n\\t\\t}\\n\\t};\\n\\n\\t/* QSA/matchesSelector\\n\\t---------------------------------------------------------------------- */\\n\\n\\t// QSA and matchesSelector support\\n\\n\\t// matchesSelector(:active) reports false when true (IE9/Opera 11.5)\\n\\trbuggyMatches = [];\\n\\n\\t// qSa(:focus) reports false when true (Chrome 21)\\n\\t// We allow this because of a bug in IE8/9 that throws an error\\n\\t// whenever `document.activeElement` is accessed on an iframe\\n\\t// So, we allow :focus to pass through QSA all the time to avoid the IE error\\n\\t// See https://bugs.jquery.com/ticket/13378\\n\\trbuggyQSA = [];\\n\\n\\tif ( (support.qsa = rnative.test( document.querySelectorAll )) ) {\\n\\t\\t// Build QSA regex\\n\\t\\t// Regex strategy adopted from Diego Perini\\n\\t\\tassert(function( el ) {\\n\\t\\t\\t// Select is set to empty string on purpose\\n\\t\\t\\t// This is to test IE's treatment of not explicitly\\n\\t\\t\\t// setting a boolean content attribute,\\n\\t\\t\\t// since its presence should be enough\\n\\t\\t\\t// https://bugs.jquery.com/ticket/12359\\n\\t\\t\\tdocElem.appendChild( el ).innerHTML = \\\"<a id='\\\" + expando + \\\"'></a>\\\" +\\n\\t\\t\\t\\t\\\"<select id='\\\" + expando + \\\"-\\\\r\\\\\\\\' msallowcapture=''>\\\" +\\n\\t\\t\\t\\t\\\"<option selected=''></option></select>\\\";\\n\\n\\t\\t\\t// Support: IE8, Opera 11-12.16\\n\\t\\t\\t// Nothing should be selected when empty strings follow ^= or $= or *=\\n\\t\\t\\t// The test attribute must be unknown in Opera but \\\"safe\\\" for WinRT\\n\\t\\t\\t// https://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section\\n\\t\\t\\tif ( el.querySelectorAll(\\\"[msallowcapture^='']\\\").length ) {\\n\\t\\t\\t\\trbuggyQSA.push( \\\"[*^$]=\\\" + whitespace + \\\"*(?:''|\\\\\\\"\\\\\\\")\\\" );\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Support: IE8\\n\\t\\t\\t// Boolean attributes and \\\"value\\\" are not treated correctly\\n\\t\\t\\tif ( !el.querySelectorAll(\\\"[selected]\\\").length ) {\\n\\t\\t\\t\\trbuggyQSA.push( \\\"\\\\\\\\[\\\" + whitespace + \\\"*(?:value|\\\" + booleans + \\\")\\\" );\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+\\n\\t\\t\\tif ( !el.querySelectorAll( \\\"[id~=\\\" + expando + \\\"-]\\\" ).length ) {\\n\\t\\t\\t\\trbuggyQSA.push(\\\"~=\\\");\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Webkit/Opera - :checked should return selected option elements\\n\\t\\t\\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\\n\\t\\t\\t// IE8 throws error here and will not see later tests\\n\\t\\t\\tif ( !el.querySelectorAll(\\\":checked\\\").length ) {\\n\\t\\t\\t\\trbuggyQSA.push(\\\":checked\\\");\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Support: Safari 8+, iOS 8+\\n\\t\\t\\t// https://bugs.webkit.org/show_bug.cgi?id=136851\\n\\t\\t\\t// In-page `selector#id sibling-combinator selector` fails\\n\\t\\t\\tif ( !el.querySelectorAll( \\\"a#\\\" + expando + \\\"+*\\\" ).length ) {\\n\\t\\t\\t\\trbuggyQSA.push(\\\".#.+[+~]\\\");\\n\\t\\t\\t}\\n\\t\\t});\\n\\n\\t\\tassert(function( el ) {\\n\\t\\t\\tel.innerHTML = \\\"<a href='' disabled='disabled'></a>\\\" +\\n\\t\\t\\t\\t\\\"<select disabled='disabled'><option/></select>\\\";\\n\\n\\t\\t\\t// Support: Windows 8 Native Apps\\n\\t\\t\\t// The type and name attributes are restricted during .innerHTML assignment\\n\\t\\t\\tvar input = document.createElement(\\\"input\\\");\\n\\t\\t\\tinput.setAttribute( \\\"type\\\", \\\"hidden\\\" );\\n\\t\\t\\tel.appendChild( input ).setAttribute( \\\"name\\\", \\\"D\\\" );\\n\\n\\t\\t\\t// Support: IE8\\n\\t\\t\\t// Enforce case-sensitivity of name attribute\\n\\t\\t\\tif ( el.querySelectorAll(\\\"[name=d]\\\").length ) {\\n\\t\\t\\t\\trbuggyQSA.push( \\\"name\\\" + whitespace + \\\"*[*^$|!~]?=\\\" );\\n\\t\\t\\t}\\n\\n\\t\\t\\t// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)\\n\\t\\t\\t// IE8 throws error here and will not see later tests\\n\\t\\t\\tif ( el.querySelectorAll(\\\":enabled\\\").length !== 2 ) {\\n\\t\\t\\t\\trbuggyQSA.push( \\\":enabled\\\", \\\":disabled\\\" );\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Support: IE9-11+\\n\\t\\t\\t// IE's :disabled selector does not pick up the children of disabled fieldsets\\n\\t\\t\\tdocElem.appendChild( el ).disabled = true;\\n\\t\\t\\tif ( el.querySelectorAll(\\\":disabled\\\").length !== 2 ) {\\n\\t\\t\\t\\trbuggyQSA.push( \\\":enabled\\\", \\\":disabled\\\" );\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Opera 10-11 does not throw on post-comma invalid pseudos\\n\\t\\t\\tel.querySelectorAll(\\\"*,:x\\\");\\n\\t\\t\\trbuggyQSA.push(\\\",.*:\\\");\\n\\t\\t});\\n\\t}\\n\\n\\tif ( (support.matchesSelector = rnative.test( (matches = docElem.matches ||\\n\\t\\tdocElem.webkitMatchesSelector ||\\n\\t\\tdocElem.mozMatchesSelector ||\\n\\t\\tdocElem.oMatchesSelector ||\\n\\t\\tdocElem.msMatchesSelector) )) ) {\\n\\n\\t\\tassert(function( el ) {\\n\\t\\t\\t// Check to see if it's possible to do matchesSelector\\n\\t\\t\\t// on a disconnected node (IE 9)\\n\\t\\t\\tsupport.disconnectedMatch = matches.call( el, \\\"*\\\" );\\n\\n\\t\\t\\t// This should fail with an exception\\n\\t\\t\\t// Gecko does not error, returns false instead\\n\\t\\t\\tmatches.call( el, \\\"[s!='']:x\\\" );\\n\\t\\t\\trbuggyMatches.push( \\\"!=\\\", pseudos );\\n\\t\\t});\\n\\t}\\n\\n\\trbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join(\\\"|\\\") );\\n\\trbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join(\\\"|\\\") );\\n\\n\\t/* Contains\\n\\t---------------------------------------------------------------------- */\\n\\thasCompare = rnative.test( docElem.compareDocumentPosition );\\n\\n\\t// Element contains another\\n\\t// Purposefully self-exclusive\\n\\t// As in, an element does not contain itself\\n\\tcontains = hasCompare || rnative.test( docElem.contains ) ?\\n\\t\\tfunction( a, b ) {\\n\\t\\t\\tvar adown = a.nodeType === 9 ? a.documentElement : a,\\n\\t\\t\\t\\tbup = b && b.parentNode;\\n\\t\\t\\treturn a === bup || !!( bup && bup.nodeType === 1 && (\\n\\t\\t\\t\\tadown.contains ?\\n\\t\\t\\t\\t\\tadown.contains( bup ) :\\n\\t\\t\\t\\t\\ta.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16\\n\\t\\t\\t));\\n\\t\\t} :\\n\\t\\tfunction( a, b ) {\\n\\t\\t\\tif ( b ) {\\n\\t\\t\\t\\twhile ( (b = b.parentNode) ) {\\n\\t\\t\\t\\t\\tif ( b === a ) {\\n\\t\\t\\t\\t\\t\\treturn true;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\treturn false;\\n\\t\\t};\\n\\n\\t/* Sorting\\n\\t---------------------------------------------------------------------- */\\n\\n\\t// Document order sorting\\n\\tsortOrder = hasCompare ?\\n\\tfunction( a, b ) {\\n\\n\\t\\t// Flag for duplicate removal\\n\\t\\tif ( a === b ) {\\n\\t\\t\\thasDuplicate = true;\\n\\t\\t\\treturn 0;\\n\\t\\t}\\n\\n\\t\\t// Sort on method existence if only one input has compareDocumentPosition\\n\\t\\tvar compare = !a.compareDocumentPosition - !b.compareDocumentPosition;\\n\\t\\tif ( compare ) {\\n\\t\\t\\treturn compare;\\n\\t\\t}\\n\\n\\t\\t// Calculate position if both inputs belong to the same document\\n\\t\\tcompare = ( a.ownerDocument || a ) === ( b.ownerDocument || b ) ?\\n\\t\\t\\ta.compareDocumentPosition( b ) :\\n\\n\\t\\t\\t// Otherwise we know they are disconnected\\n\\t\\t\\t1;\\n\\n\\t\\t// Disconnected nodes\\n\\t\\tif ( compare & 1 ||\\n\\t\\t\\t(!support.sortDetached && b.compareDocumentPosition( a ) === compare) ) {\\n\\n\\t\\t\\t// Choose the first element that is related to our preferred document\\n\\t\\t\\tif ( a === document || a.ownerDocument === preferredDoc && contains(preferredDoc, a) ) {\\n\\t\\t\\t\\treturn -1;\\n\\t\\t\\t}\\n\\t\\t\\tif ( b === document || b.ownerDocument === preferredDoc && contains(preferredDoc, b) ) {\\n\\t\\t\\t\\treturn 1;\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Maintain original order\\n\\t\\t\\treturn sortInput ?\\n\\t\\t\\t\\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\\n\\t\\t\\t\\t0;\\n\\t\\t}\\n\\n\\t\\treturn compare & 4 ? -1 : 1;\\n\\t} :\\n\\tfunction( a, b ) {\\n\\t\\t// Exit early if the nodes are identical\\n\\t\\tif ( a === b ) {\\n\\t\\t\\thasDuplicate = true;\\n\\t\\t\\treturn 0;\\n\\t\\t}\\n\\n\\t\\tvar cur,\\n\\t\\t\\ti = 0,\\n\\t\\t\\taup = a.parentNode,\\n\\t\\t\\tbup = b.parentNode,\\n\\t\\t\\tap = [ a ],\\n\\t\\t\\tbp = [ b ];\\n\\n\\t\\t// Parentless nodes are either documents or disconnected\\n\\t\\tif ( !aup || !bup ) {\\n\\t\\t\\treturn a === document ? -1 :\\n\\t\\t\\t\\tb === document ? 1 :\\n\\t\\t\\t\\taup ? -1 :\\n\\t\\t\\t\\tbup ? 1 :\\n\\t\\t\\t\\tsortInput ?\\n\\t\\t\\t\\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\\n\\t\\t\\t\\t0;\\n\\n\\t\\t// If the nodes are siblings, we can do a quick check\\n\\t\\t} else if ( aup === bup ) {\\n\\t\\t\\treturn siblingCheck( a, b );\\n\\t\\t}\\n\\n\\t\\t// Otherwise we need full lists of their ancestors for comparison\\n\\t\\tcur = a;\\n\\t\\twhile ( (cur = cur.parentNode) ) {\\n\\t\\t\\tap.unshift( cur );\\n\\t\\t}\\n\\t\\tcur = b;\\n\\t\\twhile ( (cur = cur.parentNode) ) {\\n\\t\\t\\tbp.unshift( cur );\\n\\t\\t}\\n\\n\\t\\t// Walk down the tree looking for a discrepancy\\n\\t\\twhile ( ap[i] === bp[i] ) {\\n\\t\\t\\ti++;\\n\\t\\t}\\n\\n\\t\\treturn i ?\\n\\t\\t\\t// Do a sibling check if the nodes have a common ancestor\\n\\t\\t\\tsiblingCheck( ap[i], bp[i] ) :\\n\\n\\t\\t\\t// Otherwise nodes in our document sort first\\n\\t\\t\\tap[i] === preferredDoc ? -1 :\\n\\t\\t\\tbp[i] === preferredDoc ? 1 :\\n\\t\\t\\t0;\\n\\t};\\n\\n\\treturn document;\\n};\\n\\nSizzle.matches = function( expr, elements ) {\\n\\treturn Sizzle( expr, null, null, elements );\\n};\\n\\nSizzle.matchesSelector = function( elem, expr ) {\\n\\t// Set document vars if needed\\n\\tif ( ( elem.ownerDocument || elem ) !== document ) {\\n\\t\\tsetDocument( elem );\\n\\t}\\n\\n\\t// Make sure that attribute selectors are quoted\\n\\texpr = expr.replace( rattributeQuotes, \\\"='$1']\\\" );\\n\\n\\tif ( support.matchesSelector && documentIsHTML &&\\n\\t\\t!compilerCache[ expr + \\\" \\\" ] &&\\n\\t\\t( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&\\n\\t\\t( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {\\n\\n\\t\\ttry {\\n\\t\\t\\tvar ret = matches.call( elem, expr );\\n\\n\\t\\t\\t// IE 9's matchesSelector returns false on disconnected nodes\\n\\t\\t\\tif ( ret || support.disconnectedMatch ||\\n\\t\\t\\t\\t\\t// As well, disconnected nodes are said to be in a document\\n\\t\\t\\t\\t\\t// fragment in IE 9\\n\\t\\t\\t\\t\\telem.document && elem.document.nodeType !== 11 ) {\\n\\t\\t\\t\\treturn ret;\\n\\t\\t\\t}\\n\\t\\t} catch (e) {}\\n\\t}\\n\\n\\treturn Sizzle( expr, document, null, [ elem ] ).length > 0;\\n};\\n\\nSizzle.contains = function( context, elem ) {\\n\\t// Set document vars if needed\\n\\tif ( ( context.ownerDocument || context ) !== document ) {\\n\\t\\tsetDocument( context );\\n\\t}\\n\\treturn contains( context, elem );\\n};\\n\\nSizzle.attr = function( elem, name ) {\\n\\t// Set document vars if needed\\n\\tif ( ( elem.ownerDocument || elem ) !== document ) {\\n\\t\\tsetDocument( elem );\\n\\t}\\n\\n\\tvar fn = Expr.attrHandle[ name.toLowerCase() ],\\n\\t\\t// Don't get fooled by Object.prototype properties (jQuery #13807)\\n\\t\\tval = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?\\n\\t\\t\\tfn( elem, name, !documentIsHTML ) :\\n\\t\\t\\tundefined;\\n\\n\\treturn val !== undefined ?\\n\\t\\tval :\\n\\t\\tsupport.attributes || !documentIsHTML ?\\n\\t\\t\\telem.getAttribute( name ) :\\n\\t\\t\\t(val = elem.getAttributeNode(name)) && val.specified ?\\n\\t\\t\\t\\tval.value :\\n\\t\\t\\t\\tnull;\\n};\\n\\nSizzle.escape = function( sel ) {\\n\\treturn (sel + \\\"\\\").replace( rcssescape, fcssescape );\\n};\\n\\nSizzle.error = function( msg ) {\\n\\tthrow new Error( \\\"Syntax error, unrecognized expression: \\\" + msg );\\n};\\n\\n/**\\n * Document sorting and removing duplicates\\n * @param {ArrayLike} results\\n */\\nSizzle.uniqueSort = function( results ) {\\n\\tvar elem,\\n\\t\\tduplicates = [],\\n\\t\\tj = 0,\\n\\t\\ti = 0;\\n\\n\\t// Unless we *know* we can detect duplicates, assume their presence\\n\\thasDuplicate = !support.detectDuplicates;\\n\\tsortInput = !support.sortStable && results.slice( 0 );\\n\\tresults.sort( sortOrder );\\n\\n\\tif ( hasDuplicate ) {\\n\\t\\twhile ( (elem = results[i++]) ) {\\n\\t\\t\\tif ( elem === results[ i ] ) {\\n\\t\\t\\t\\tj = duplicates.push( i );\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\twhile ( j-- ) {\\n\\t\\t\\tresults.splice( duplicates[ j ], 1 );\\n\\t\\t}\\n\\t}\\n\\n\\t// Clear input after sorting to release objects\\n\\t// See https://github.com/jquery/sizzle/pull/225\\n\\tsortInput = null;\\n\\n\\treturn results;\\n};\\n\\n/**\\n * Utility function for retrieving the text value of an array of DOM nodes\\n * @param {Array|Element} elem\\n */\\ngetText = Sizzle.getText = function( elem ) {\\n\\tvar node,\\n\\t\\tret = \\\"\\\",\\n\\t\\ti = 0,\\n\\t\\tnodeType = elem.nodeType;\\n\\n\\tif ( !nodeType ) {\\n\\t\\t// If no nodeType, this is expected to be an array\\n\\t\\twhile ( (node = elem[i++]) ) {\\n\\t\\t\\t// Do not traverse comment nodes\\n\\t\\t\\tret += getText( node );\\n\\t\\t}\\n\\t} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {\\n\\t\\t// Use textContent for elements\\n\\t\\t// innerText usage removed for consistency of new lines (jQuery #11153)\\n\\t\\tif ( typeof elem.textContent === \\\"string\\\" ) {\\n\\t\\t\\treturn elem.textContent;\\n\\t\\t} else {\\n\\t\\t\\t// Traverse its children\\n\\t\\t\\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\\n\\t\\t\\t\\tret += getText( elem );\\n\\t\\t\\t}\\n\\t\\t}\\n\\t} else if ( nodeType === 3 || nodeType === 4 ) {\\n\\t\\treturn elem.nodeValue;\\n\\t}\\n\\t// Do not include comment or processing instruction nodes\\n\\n\\treturn ret;\\n};\\n\\nExpr = Sizzle.selectors = {\\n\\n\\t// Can be adjusted by the user\\n\\tcacheLength: 50,\\n\\n\\tcreatePseudo: markFunction,\\n\\n\\tmatch: matchExpr,\\n\\n\\tattrHandle: {},\\n\\n\\tfind: {},\\n\\n\\trelative: {\\n\\t\\t\\\">\\\": { dir: \\\"parentNode\\\", first: true },\\n\\t\\t\\\" \\\": { dir: \\\"parentNode\\\" },\\n\\t\\t\\\"+\\\": { dir: \\\"previousSibling\\\", first: true },\\n\\t\\t\\\"~\\\": { dir: \\\"previousSibling\\\" }\\n\\t},\\n\\n\\tpreFilter: {\\n\\t\\t\\\"ATTR\\\": function( match ) {\\n\\t\\t\\tmatch[1] = match[1].replace( runescape, funescape );\\n\\n\\t\\t\\t// Move the given value to match[3] whether quoted or unquoted\\n\\t\\t\\tmatch[3] = ( match[3] || match[4] || match[5] || \\\"\\\" ).replace( runescape, funescape );\\n\\n\\t\\t\\tif ( match[2] === \\\"~=\\\" ) {\\n\\t\\t\\t\\tmatch[3] = \\\" \\\" + match[3] + \\\" \\\";\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn match.slice( 0, 4 );\\n\\t\\t},\\n\\n\\t\\t\\\"CHILD\\\": function( match ) {\\n\\t\\t\\t/* matches from matchExpr[\\\"CHILD\\\"]\\n\\t\\t\\t\\t1 type (only|nth|...)\\n\\t\\t\\t\\t2 what (child|of-type)\\n\\t\\t\\t\\t3 argument (even|odd|\\\\d*|\\\\d*n([+-]\\\\d+)?|...)\\n\\t\\t\\t\\t4 xn-component of xn+y argument ([+-]?\\\\d*n|)\\n\\t\\t\\t\\t5 sign of xn-component\\n\\t\\t\\t\\t6 x of xn-component\\n\\t\\t\\t\\t7 sign of y-component\\n\\t\\t\\t\\t8 y of y-component\\n\\t\\t\\t*/\\n\\t\\t\\tmatch[1] = match[1].toLowerCase();\\n\\n\\t\\t\\tif ( match[1].slice( 0, 3 ) === \\\"nth\\\" ) {\\n\\t\\t\\t\\t// nth-* requires argument\\n\\t\\t\\t\\tif ( !match[3] ) {\\n\\t\\t\\t\\t\\tSizzle.error( match[0] );\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// numeric x and y parameters for Expr.filter.CHILD\\n\\t\\t\\t\\t// remember that false/true cast respectively to 0/1\\n\\t\\t\\t\\tmatch[4] = +( match[4] ? match[5] + (match[6] || 1) : 2 * ( match[3] === \\\"even\\\" || match[3] === \\\"odd\\\" ) );\\n\\t\\t\\t\\tmatch[5] = +( ( match[7] + match[8] ) || match[3] === \\\"odd\\\" );\\n\\n\\t\\t\\t// other types prohibit arguments\\n\\t\\t\\t} else if ( match[3] ) {\\n\\t\\t\\t\\tSizzle.error( match[0] );\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn match;\\n\\t\\t},\\n\\n\\t\\t\\\"PSEUDO\\\": function( match ) {\\n\\t\\t\\tvar excess,\\n\\t\\t\\t\\tunquoted = !match[6] && match[2];\\n\\n\\t\\t\\tif ( matchExpr[\\\"CHILD\\\"].test( match[0] ) ) {\\n\\t\\t\\t\\treturn null;\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Accept quoted arguments as-is\\n\\t\\t\\tif ( match[3] ) {\\n\\t\\t\\t\\tmatch[2] = match[4] || match[5] || \\\"\\\";\\n\\n\\t\\t\\t// Strip excess characters from unquoted arguments\\n\\t\\t\\t} else if ( unquoted && rpseudo.test( unquoted ) &&\\n\\t\\t\\t\\t// Get excess from tokenize (recursively)\\n\\t\\t\\t\\t(excess = tokenize( unquoted, true )) &&\\n\\t\\t\\t\\t// advance to the next closing parenthesis\\n\\t\\t\\t\\t(excess = unquoted.indexOf( \\\")\\\", unquoted.length - excess ) - unquoted.length) ) {\\n\\n\\t\\t\\t\\t// excess is a negative index\\n\\t\\t\\t\\tmatch[0] = match[0].slice( 0, excess );\\n\\t\\t\\t\\tmatch[2] = unquoted.slice( 0, excess );\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Return only captures needed by the pseudo filter method (type and argument)\\n\\t\\t\\treturn match.slice( 0, 3 );\\n\\t\\t}\\n\\t},\\n\\n\\tfilter: {\\n\\n\\t\\t\\\"TAG\\\": function( nodeNameSelector ) {\\n\\t\\t\\tvar nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();\\n\\t\\t\\treturn nodeNameSelector === \\\"*\\\" ?\\n\\t\\t\\t\\tfunction() { return true; } :\\n\\t\\t\\t\\tfunction( elem ) {\\n\\t\\t\\t\\t\\treturn elem.nodeName && elem.nodeName.toLowerCase() === nodeName;\\n\\t\\t\\t\\t};\\n\\t\\t},\\n\\n\\t\\t\\\"CLASS\\\": function( className ) {\\n\\t\\t\\tvar pattern = classCache[ className + \\\" \\\" ];\\n\\n\\t\\t\\treturn pattern ||\\n\\t\\t\\t\\t(pattern = new RegExp( \\\"(^|\\\" + whitespace + \\\")\\\" + className + \\\"(\\\" + whitespace + \\\"|$)\\\" )) &&\\n\\t\\t\\t\\tclassCache( className, function( elem ) {\\n\\t\\t\\t\\t\\treturn pattern.test( typeof elem.className === \\\"string\\\" && elem.className || typeof elem.getAttribute !== \\\"undefined\\\" && elem.getAttribute(\\\"class\\\") || \\\"\\\" );\\n\\t\\t\\t\\t});\\n\\t\\t},\\n\\n\\t\\t\\\"ATTR\\\": function( name, operator, check ) {\\n\\t\\t\\treturn function( elem ) {\\n\\t\\t\\t\\tvar result = Sizzle.attr( elem, name );\\n\\n\\t\\t\\t\\tif ( result == null ) {\\n\\t\\t\\t\\t\\treturn operator === \\\"!=\\\";\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tif ( !operator ) {\\n\\t\\t\\t\\t\\treturn true;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tresult += \\\"\\\";\\n\\n\\t\\t\\t\\treturn operator === \\\"=\\\" ? result === check :\\n\\t\\t\\t\\t\\toperator === \\\"!=\\\" ? result !== check :\\n\\t\\t\\t\\t\\toperator === \\\"^=\\\" ? check && result.indexOf( check ) === 0 :\\n\\t\\t\\t\\t\\toperator === \\\"*=\\\" ? check && result.indexOf( check ) > -1 :\\n\\t\\t\\t\\t\\toperator === \\\"$=\\\" ? check && result.slice( -check.length ) === check :\\n\\t\\t\\t\\t\\toperator === \\\"~=\\\" ? ( \\\" \\\" + result.replace( rwhitespace, \\\" \\\" ) + \\\" \\\" ).indexOf( check ) > -1 :\\n\\t\\t\\t\\t\\toperator === \\\"|=\\\" ? result === check || result.slice( 0, check.length + 1 ) === check + \\\"-\\\" :\\n\\t\\t\\t\\t\\tfalse;\\n\\t\\t\\t};\\n\\t\\t},\\n\\n\\t\\t\\\"CHILD\\\": function( type, what, argument, first, last ) {\\n\\t\\t\\tvar simple = type.slice( 0, 3 ) !== \\\"nth\\\",\\n\\t\\t\\t\\tforward = type.slice( -4 ) !== \\\"last\\\",\\n\\t\\t\\t\\tofType = what === \\\"of-type\\\";\\n\\n\\t\\t\\treturn first === 1 && last === 0 ?\\n\\n\\t\\t\\t\\t// Shortcut for :nth-*(n)\\n\\t\\t\\t\\tfunction( elem ) {\\n\\t\\t\\t\\t\\treturn !!elem.parentNode;\\n\\t\\t\\t\\t} :\\n\\n\\t\\t\\t\\tfunction( elem, context, xml ) {\\n\\t\\t\\t\\t\\tvar cache, uniqueCache, outerCache, node, nodeIndex, start,\\n\\t\\t\\t\\t\\t\\tdir = simple !== forward ? \\\"nextSibling\\\" : \\\"previousSibling\\\",\\n\\t\\t\\t\\t\\t\\tparent = elem.parentNode,\\n\\t\\t\\t\\t\\t\\tname = ofType && elem.nodeName.toLowerCase(),\\n\\t\\t\\t\\t\\t\\tuseCache = !xml && !ofType,\\n\\t\\t\\t\\t\\t\\tdiff = false;\\n\\n\\t\\t\\t\\t\\tif ( parent ) {\\n\\n\\t\\t\\t\\t\\t\\t// :(first|last|only)-(child|of-type)\\n\\t\\t\\t\\t\\t\\tif ( simple ) {\\n\\t\\t\\t\\t\\t\\t\\twhile ( dir ) {\\n\\t\\t\\t\\t\\t\\t\\t\\tnode = elem;\\n\\t\\t\\t\\t\\t\\t\\t\\twhile ( (node = node[ dir ]) ) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif ( ofType ?\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tnode.nodeName.toLowerCase() === name :\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tnode.nodeType === 1 ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\treturn false;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\t// Reverse direction for :only-* (if we haven't yet done so)\\n\\t\\t\\t\\t\\t\\t\\t\\tstart = dir = type === \\\"only\\\" && !start && \\\"nextSibling\\\";\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\treturn true;\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\tstart = [ forward ? parent.firstChild : parent.lastChild ];\\n\\n\\t\\t\\t\\t\\t\\t// non-xml :nth-child(...) stores cache data on `parent`\\n\\t\\t\\t\\t\\t\\tif ( forward && useCache ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t// Seek `elem` from a previously-cached index\\n\\n\\t\\t\\t\\t\\t\\t\\t// ...in a gzip-friendly way\\n\\t\\t\\t\\t\\t\\t\\tnode = parent;\\n\\t\\t\\t\\t\\t\\t\\touterCache = node[ expando ] || (node[ expando ] = {});\\n\\n\\t\\t\\t\\t\\t\\t\\t// Support: IE <9 only\\n\\t\\t\\t\\t\\t\\t\\t// Defend against cloned attroperties (jQuery gh-1709)\\n\\t\\t\\t\\t\\t\\t\\tuniqueCache = outerCache[ node.uniqueID ] ||\\n\\t\\t\\t\\t\\t\\t\\t\\t(outerCache[ node.uniqueID ] = {});\\n\\n\\t\\t\\t\\t\\t\\t\\tcache = uniqueCache[ type ] || [];\\n\\t\\t\\t\\t\\t\\t\\tnodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];\\n\\t\\t\\t\\t\\t\\t\\tdiff = nodeIndex && cache[ 2 ];\\n\\t\\t\\t\\t\\t\\t\\tnode = nodeIndex && parent.childNodes[ nodeIndex ];\\n\\n\\t\\t\\t\\t\\t\\t\\twhile ( (node = ++nodeIndex && node && node[ dir ] ||\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t// Fallback to seeking `elem` from the start\\n\\t\\t\\t\\t\\t\\t\\t\\t(diff = nodeIndex = 0) || start.pop()) ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t// When found, cache indexes on `parent` and break\\n\\t\\t\\t\\t\\t\\t\\t\\tif ( node.nodeType === 1 && ++diff && node === elem ) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tuniqueCache[ type ] = [ dirruns, nodeIndex, diff ];\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t// Use previously-cached element index if available\\n\\t\\t\\t\\t\\t\\t\\tif ( useCache ) {\\n\\t\\t\\t\\t\\t\\t\\t\\t// ...in a gzip-friendly way\\n\\t\\t\\t\\t\\t\\t\\t\\tnode = elem;\\n\\t\\t\\t\\t\\t\\t\\t\\touterCache = node[ expando ] || (node[ expando ] = {});\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t// Support: IE <9 only\\n\\t\\t\\t\\t\\t\\t\\t\\t// Defend against cloned attroperties (jQuery gh-1709)\\n\\t\\t\\t\\t\\t\\t\\t\\tuniqueCache = outerCache[ node.uniqueID ] ||\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t(outerCache[ node.uniqueID ] = {});\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tcache = uniqueCache[ type ] || [];\\n\\t\\t\\t\\t\\t\\t\\t\\tnodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];\\n\\t\\t\\t\\t\\t\\t\\t\\tdiff = nodeIndex;\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\t// xml :nth-child(...)\\n\\t\\t\\t\\t\\t\\t\\t// or :nth-last-child(...) or :nth(-last)?-of-type(...)\\n\\t\\t\\t\\t\\t\\t\\tif ( diff === false ) {\\n\\t\\t\\t\\t\\t\\t\\t\\t// Use the same loop as above to seek `elem` from the start\\n\\t\\t\\t\\t\\t\\t\\t\\twhile ( (node = ++nodeIndex && node && node[ dir ] ||\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t(diff = nodeIndex = 0) || start.pop()) ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif ( ( ofType ?\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tnode.nodeName.toLowerCase() === name :\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tnode.nodeType === 1 ) &&\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t++diff ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// Cache the index of each encountered element\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tif ( useCache ) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\touterCache = node[ expando ] || (node[ expando ] = {});\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// Support: IE <9 only\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// Defend against cloned attroperties (jQuery gh-1709)\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tuniqueCache = outerCache[ node.uniqueID ] ||\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(outerCache[ node.uniqueID ] = {});\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tuniqueCache[ type ] = [ dirruns, diff ];\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tif ( node === elem ) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t// Incorporate the offset, then check against cycle size\\n\\t\\t\\t\\t\\t\\tdiff -= last;\\n\\t\\t\\t\\t\\t\\treturn diff === first || ( diff % first === 0 && diff / first >= 0 );\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t};\\n\\t\\t},\\n\\n\\t\\t\\\"PSEUDO\\\": function( pseudo, argument ) {\\n\\t\\t\\t// pseudo-class names are case-insensitive\\n\\t\\t\\t// http://www.w3.org/TR/selectors/#pseudo-classes\\n\\t\\t\\t// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters\\n\\t\\t\\t// Remember that setFilters inherits from pseudos\\n\\t\\t\\tvar args,\\n\\t\\t\\t\\tfn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||\\n\\t\\t\\t\\t\\tSizzle.error( \\\"unsupported pseudo: \\\" + pseudo );\\n\\n\\t\\t\\t// The user may use createPseudo to indicate that\\n\\t\\t\\t// arguments are needed to create the filter function\\n\\t\\t\\t// just as Sizzle does\\n\\t\\t\\tif ( fn[ expando ] ) {\\n\\t\\t\\t\\treturn fn( argument );\\n\\t\\t\\t}\\n\\n\\t\\t\\t// But maintain support for old signatures\\n\\t\\t\\tif ( fn.length > 1 ) {\\n\\t\\t\\t\\targs = [ pseudo, pseudo, \\\"\\\", argument ];\\n\\t\\t\\t\\treturn Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?\\n\\t\\t\\t\\t\\tmarkFunction(function( seed, matches ) {\\n\\t\\t\\t\\t\\t\\tvar idx,\\n\\t\\t\\t\\t\\t\\t\\tmatched = fn( seed, argument ),\\n\\t\\t\\t\\t\\t\\t\\ti = matched.length;\\n\\t\\t\\t\\t\\t\\twhile ( i-- ) {\\n\\t\\t\\t\\t\\t\\t\\tidx = indexOf( seed, matched[i] );\\n\\t\\t\\t\\t\\t\\t\\tseed[ idx ] = !( matches[ idx ] = matched[i] );\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}) :\\n\\t\\t\\t\\t\\tfunction( elem ) {\\n\\t\\t\\t\\t\\t\\treturn fn( elem, 0, args );\\n\\t\\t\\t\\t\\t};\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn fn;\\n\\t\\t}\\n\\t},\\n\\n\\tpseudos: {\\n\\t\\t// Potentially complex pseudos\\n\\t\\t\\\"not\\\": markFunction(function( selector ) {\\n\\t\\t\\t// Trim the selector passed to compile\\n\\t\\t\\t// to avoid treating leading and trailing\\n\\t\\t\\t// spaces as combinators\\n\\t\\t\\tvar input = [],\\n\\t\\t\\t\\tresults = [],\\n\\t\\t\\t\\tmatcher = compile( selector.replace( rtrim, \\\"$1\\\" ) );\\n\\n\\t\\t\\treturn matcher[ expando ] ?\\n\\t\\t\\t\\tmarkFunction(function( seed, matches, context, xml ) {\\n\\t\\t\\t\\t\\tvar elem,\\n\\t\\t\\t\\t\\t\\tunmatched = matcher( seed, null, xml, [] ),\\n\\t\\t\\t\\t\\t\\ti = seed.length;\\n\\n\\t\\t\\t\\t\\t// Match elements unmatched by `matcher`\\n\\t\\t\\t\\t\\twhile ( i-- ) {\\n\\t\\t\\t\\t\\t\\tif ( (elem = unmatched[i]) ) {\\n\\t\\t\\t\\t\\t\\t\\tseed[i] = !(matches[i] = elem);\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}) :\\n\\t\\t\\t\\tfunction( elem, context, xml ) {\\n\\t\\t\\t\\t\\tinput[0] = elem;\\n\\t\\t\\t\\t\\tmatcher( input, null, xml, results );\\n\\t\\t\\t\\t\\t// Don't keep the element (issue #299)\\n\\t\\t\\t\\t\\tinput[0] = null;\\n\\t\\t\\t\\t\\treturn !results.pop();\\n\\t\\t\\t\\t};\\n\\t\\t}),\\n\\n\\t\\t\\\"has\\\": markFunction(function( selector ) {\\n\\t\\t\\treturn function( elem ) {\\n\\t\\t\\t\\treturn Sizzle( selector, elem ).length > 0;\\n\\t\\t\\t};\\n\\t\\t}),\\n\\n\\t\\t\\\"contains\\\": markFunction(function( text ) {\\n\\t\\t\\ttext = text.replace( runescape, funescape );\\n\\t\\t\\treturn function( elem ) {\\n\\t\\t\\t\\treturn ( elem.textContent || elem.innerText || getText( elem ) ).indexOf( text ) > -1;\\n\\t\\t\\t};\\n\\t\\t}),\\n\\n\\t\\t// \\\"Whether an element is represented by a :lang() selector\\n\\t\\t// is based solely on the element's language value\\n\\t\\t// being equal to the identifier C,\\n\\t\\t// or beginning with the identifier C immediately followed by \\\"-\\\".\\n\\t\\t// The matching of C against the element's language value is performed case-insensitively.\\n\\t\\t// The identifier C does not have to be a valid language name.\\\"\\n\\t\\t// http://www.w3.org/TR/selectors/#lang-pseudo\\n\\t\\t\\\"lang\\\": markFunction( function( lang ) {\\n\\t\\t\\t// lang value must be a valid identifier\\n\\t\\t\\tif ( !ridentifier.test(lang || \\\"\\\") ) {\\n\\t\\t\\t\\tSizzle.error( \\\"unsupported lang: \\\" + lang );\\n\\t\\t\\t}\\n\\t\\t\\tlang = lang.replace( runescape, funescape ).toLowerCase();\\n\\t\\t\\treturn function( elem ) {\\n\\t\\t\\t\\tvar elemLang;\\n\\t\\t\\t\\tdo {\\n\\t\\t\\t\\t\\tif ( (elemLang = documentIsHTML ?\\n\\t\\t\\t\\t\\t\\telem.lang :\\n\\t\\t\\t\\t\\t\\telem.getAttribute(\\\"xml:lang\\\") || elem.getAttribute(\\\"lang\\\")) ) {\\n\\n\\t\\t\\t\\t\\t\\telemLang = elemLang.toLowerCase();\\n\\t\\t\\t\\t\\t\\treturn elemLang === lang || elemLang.indexOf( lang + \\\"-\\\" ) === 0;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t} while ( (elem = elem.parentNode) && elem.nodeType === 1 );\\n\\t\\t\\t\\treturn false;\\n\\t\\t\\t};\\n\\t\\t}),\\n\\n\\t\\t// Miscellaneous\\n\\t\\t\\\"target\\\": function( elem ) {\\n\\t\\t\\tvar hash = window.location && window.location.hash;\\n\\t\\t\\treturn hash && hash.slice( 1 ) === elem.id;\\n\\t\\t},\\n\\n\\t\\t\\\"root\\\": function( elem ) {\\n\\t\\t\\treturn elem === docElem;\\n\\t\\t},\\n\\n\\t\\t\\\"focus\\\": function( elem ) {\\n\\t\\t\\treturn elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);\\n\\t\\t},\\n\\n\\t\\t// Boolean properties\\n\\t\\t\\\"enabled\\\": createDisabledPseudo( false ),\\n\\t\\t\\\"disabled\\\": createDisabledPseudo( true ),\\n\\n\\t\\t\\\"checked\\\": function( elem ) {\\n\\t\\t\\t// In CSS3, :checked should return both checked and selected elements\\n\\t\\t\\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\\n\\t\\t\\tvar nodeName = elem.nodeName.toLowerCase();\\n\\t\\t\\treturn (nodeName === \\\"input\\\" && !!elem.checked) || (nodeName === \\\"option\\\" && !!elem.selected);\\n\\t\\t},\\n\\n\\t\\t\\\"selected\\\": function( elem ) {\\n\\t\\t\\t// Accessing this property makes selected-by-default\\n\\t\\t\\t// options in Safari work properly\\n\\t\\t\\tif ( elem.parentNode ) {\\n\\t\\t\\t\\telem.parentNode.selectedIndex;\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn elem.selected === true;\\n\\t\\t},\\n\\n\\t\\t// Contents\\n\\t\\t\\\"empty\\\": function( elem ) {\\n\\t\\t\\t// http://www.w3.org/TR/selectors/#empty-pseudo\\n\\t\\t\\t// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),\\n\\t\\t\\t//   but not by others (comment: 8; processing instruction: 7; etc.)\\n\\t\\t\\t// nodeType < 6 works because attributes (2) do not appear as children\\n\\t\\t\\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\\n\\t\\t\\t\\tif ( elem.nodeType < 6 ) {\\n\\t\\t\\t\\t\\treturn false;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\treturn true;\\n\\t\\t},\\n\\n\\t\\t\\\"parent\\\": function( elem ) {\\n\\t\\t\\treturn !Expr.pseudos[\\\"empty\\\"]( elem );\\n\\t\\t},\\n\\n\\t\\t// Element/input types\\n\\t\\t\\\"header\\\": function( elem ) {\\n\\t\\t\\treturn rheader.test( elem.nodeName );\\n\\t\\t},\\n\\n\\t\\t\\\"input\\\": function( elem ) {\\n\\t\\t\\treturn rinputs.test( elem.nodeName );\\n\\t\\t},\\n\\n\\t\\t\\\"button\\\": function( elem ) {\\n\\t\\t\\tvar name = elem.nodeName.toLowerCase();\\n\\t\\t\\treturn name === \\\"input\\\" && elem.type === \\\"button\\\" || name === \\\"button\\\";\\n\\t\\t},\\n\\n\\t\\t\\\"text\\\": function( elem ) {\\n\\t\\t\\tvar attr;\\n\\t\\t\\treturn elem.nodeName.toLowerCase() === \\\"input\\\" &&\\n\\t\\t\\t\\telem.type === \\\"text\\\" &&\\n\\n\\t\\t\\t\\t// Support: IE<8\\n\\t\\t\\t\\t// New HTML5 attribute values (e.g., \\\"search\\\") appear with elem.type === \\\"text\\\"\\n\\t\\t\\t\\t( (attr = elem.getAttribute(\\\"type\\\")) == null || attr.toLowerCase() === \\\"text\\\" );\\n\\t\\t},\\n\\n\\t\\t// Position-in-collection\\n\\t\\t\\\"first\\\": createPositionalPseudo(function() {\\n\\t\\t\\treturn [ 0 ];\\n\\t\\t}),\\n\\n\\t\\t\\\"last\\\": createPositionalPseudo(function( matchIndexes, length ) {\\n\\t\\t\\treturn [ length - 1 ];\\n\\t\\t}),\\n\\n\\t\\t\\\"eq\\\": createPositionalPseudo(function( matchIndexes, length, argument ) {\\n\\t\\t\\treturn [ argument < 0 ? argument + length : argument ];\\n\\t\\t}),\\n\\n\\t\\t\\\"even\\\": createPositionalPseudo(function( matchIndexes, length ) {\\n\\t\\t\\tvar i = 0;\\n\\t\\t\\tfor ( ; i < length; i += 2 ) {\\n\\t\\t\\t\\tmatchIndexes.push( i );\\n\\t\\t\\t}\\n\\t\\t\\treturn matchIndexes;\\n\\t\\t}),\\n\\n\\t\\t\\\"odd\\\": createPositionalPseudo(function( matchIndexes, length ) {\\n\\t\\t\\tvar i = 1;\\n\\t\\t\\tfor ( ; i < length; i += 2 ) {\\n\\t\\t\\t\\tmatchIndexes.push( i );\\n\\t\\t\\t}\\n\\t\\t\\treturn matchIndexes;\\n\\t\\t}),\\n\\n\\t\\t\\\"lt\\\": createPositionalPseudo(function( matchIndexes, length, argument ) {\\n\\t\\t\\tvar i = argument < 0 ? argument + length : argument;\\n\\t\\t\\tfor ( ; --i >= 0; ) {\\n\\t\\t\\t\\tmatchIndexes.push( i );\\n\\t\\t\\t}\\n\\t\\t\\treturn matchIndexes;\\n\\t\\t}),\\n\\n\\t\\t\\\"gt\\\": createPositionalPseudo(function( matchIndexes, length, argument ) {\\n\\t\\t\\tvar i = argument < 0 ? argument + length : argument;\\n\\t\\t\\tfor ( ; ++i < length; ) {\\n\\t\\t\\t\\tmatchIndexes.push( i );\\n\\t\\t\\t}\\n\\t\\t\\treturn matchIndexes;\\n\\t\\t})\\n\\t}\\n};\\n\\nExpr.pseudos[\\\"nth\\\"] = Expr.pseudos[\\\"eq\\\"];\\n\\n// Add button/input type pseudos\\nfor ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {\\n\\tExpr.pseudos[ i ] = createInputPseudo( i );\\n}\\nfor ( i in { submit: true, reset: true } ) {\\n\\tExpr.pseudos[ i ] = createButtonPseudo( i );\\n}\\n\\n// Easy API for creating new setFilters\\nfunction setFilters() {}\\nsetFilters.prototype = Expr.filters = Expr.pseudos;\\nExpr.setFilters = new setFilters();\\n\\ntokenize = Sizzle.tokenize = function( selector, parseOnly ) {\\n\\tvar matched, match, tokens, type,\\n\\t\\tsoFar, groups, preFilters,\\n\\t\\tcached = tokenCache[ selector + \\\" \\\" ];\\n\\n\\tif ( cached ) {\\n\\t\\treturn parseOnly ? 0 : cached.slice( 0 );\\n\\t}\\n\\n\\tsoFar = selector;\\n\\tgroups = [];\\n\\tpreFilters = Expr.preFilter;\\n\\n\\twhile ( soFar ) {\\n\\n\\t\\t// Comma and first run\\n\\t\\tif ( !matched || (match = rcomma.exec( soFar )) ) {\\n\\t\\t\\tif ( match ) {\\n\\t\\t\\t\\t// Don't consume trailing commas as valid\\n\\t\\t\\t\\tsoFar = soFar.slice( match[0].length ) || soFar;\\n\\t\\t\\t}\\n\\t\\t\\tgroups.push( (tokens = []) );\\n\\t\\t}\\n\\n\\t\\tmatched = false;\\n\\n\\t\\t// Combinators\\n\\t\\tif ( (match = rcombinators.exec( soFar )) ) {\\n\\t\\t\\tmatched = match.shift();\\n\\t\\t\\ttokens.push({\\n\\t\\t\\t\\tvalue: matched,\\n\\t\\t\\t\\t// Cast descendant combinators to space\\n\\t\\t\\t\\ttype: match[0].replace( rtrim, \\\" \\\" )\\n\\t\\t\\t});\\n\\t\\t\\tsoFar = soFar.slice( matched.length );\\n\\t\\t}\\n\\n\\t\\t// Filters\\n\\t\\tfor ( type in Expr.filter ) {\\n\\t\\t\\tif ( (match = matchExpr[ type ].exec( soFar )) && (!preFilters[ type ] ||\\n\\t\\t\\t\\t(match = preFilters[ type ]( match ))) ) {\\n\\t\\t\\t\\tmatched = match.shift();\\n\\t\\t\\t\\ttokens.push({\\n\\t\\t\\t\\t\\tvalue: matched,\\n\\t\\t\\t\\t\\ttype: type,\\n\\t\\t\\t\\t\\tmatches: match\\n\\t\\t\\t\\t});\\n\\t\\t\\t\\tsoFar = soFar.slice( matched.length );\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tif ( !matched ) {\\n\\t\\t\\tbreak;\\n\\t\\t}\\n\\t}\\n\\n\\t// Return the length of the invalid excess\\n\\t// if we're just parsing\\n\\t// Otherwise, throw an error or return tokens\\n\\treturn parseOnly ?\\n\\t\\tsoFar.length :\\n\\t\\tsoFar ?\\n\\t\\t\\tSizzle.error( selector ) :\\n\\t\\t\\t// Cache the tokens\\n\\t\\t\\ttokenCache( selector, groups ).slice( 0 );\\n};\\n\\nfunction toSelector( tokens ) {\\n\\tvar i = 0,\\n\\t\\tlen = tokens.length,\\n\\t\\tselector = \\\"\\\";\\n\\tfor ( ; i < len; i++ ) {\\n\\t\\tselector += tokens[i].value;\\n\\t}\\n\\treturn selector;\\n}\\n\\nfunction addCombinator( matcher, combinator, base ) {\\n\\tvar dir = combinator.dir,\\n\\t\\tskip = combinator.next,\\n\\t\\tkey = skip || dir,\\n\\t\\tcheckNonElements = base && key === \\\"parentNode\\\",\\n\\t\\tdoneName = done++;\\n\\n\\treturn combinator.first ?\\n\\t\\t// Check against closest ancestor/preceding element\\n\\t\\tfunction( elem, context, xml ) {\\n\\t\\t\\twhile ( (elem = elem[ dir ]) ) {\\n\\t\\t\\t\\tif ( elem.nodeType === 1 || checkNonElements ) {\\n\\t\\t\\t\\t\\treturn matcher( elem, context, xml );\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\treturn false;\\n\\t\\t} :\\n\\n\\t\\t// Check against all ancestor/preceding elements\\n\\t\\tfunction( elem, context, xml ) {\\n\\t\\t\\tvar oldCache, uniqueCache, outerCache,\\n\\t\\t\\t\\tnewCache = [ dirruns, doneName ];\\n\\n\\t\\t\\t// We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching\\n\\t\\t\\tif ( xml ) {\\n\\t\\t\\t\\twhile ( (elem = elem[ dir ]) ) {\\n\\t\\t\\t\\t\\tif ( elem.nodeType === 1 || checkNonElements ) {\\n\\t\\t\\t\\t\\t\\tif ( matcher( elem, context, xml ) ) {\\n\\t\\t\\t\\t\\t\\t\\treturn true;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t} else {\\n\\t\\t\\t\\twhile ( (elem = elem[ dir ]) ) {\\n\\t\\t\\t\\t\\tif ( elem.nodeType === 1 || checkNonElements ) {\\n\\t\\t\\t\\t\\t\\touterCache = elem[ expando ] || (elem[ expando ] = {});\\n\\n\\t\\t\\t\\t\\t\\t// Support: IE <9 only\\n\\t\\t\\t\\t\\t\\t// Defend against cloned attroperties (jQuery gh-1709)\\n\\t\\t\\t\\t\\t\\tuniqueCache = outerCache[ elem.uniqueID ] || (outerCache[ elem.uniqueID ] = {});\\n\\n\\t\\t\\t\\t\\t\\tif ( skip && skip === elem.nodeName.toLowerCase() ) {\\n\\t\\t\\t\\t\\t\\t\\telem = elem[ dir ] || elem;\\n\\t\\t\\t\\t\\t\\t} else if ( (oldCache = uniqueCache[ key ]) &&\\n\\t\\t\\t\\t\\t\\t\\toldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t// Assign to newCache so results back-propagate to previous elements\\n\\t\\t\\t\\t\\t\\t\\treturn (newCache[ 2 ] = oldCache[ 2 ]);\\n\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t// Reuse newcache so results back-propagate to previous elements\\n\\t\\t\\t\\t\\t\\t\\tuniqueCache[ key ] = newCache;\\n\\n\\t\\t\\t\\t\\t\\t\\t// A match means we're done; a fail means we have to keep checking\\n\\t\\t\\t\\t\\t\\t\\tif ( (newCache[ 2 ] = matcher( elem, context, xml )) ) {\\n\\t\\t\\t\\t\\t\\t\\t\\treturn true;\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\treturn false;\\n\\t\\t};\\n}\\n\\nfunction elementMatcher( matchers ) {\\n\\treturn matchers.length > 1 ?\\n\\t\\tfunction( elem, context, xml ) {\\n\\t\\t\\tvar i = matchers.length;\\n\\t\\t\\twhile ( i-- ) {\\n\\t\\t\\t\\tif ( !matchers[i]( elem, context, xml ) ) {\\n\\t\\t\\t\\t\\treturn false;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\treturn true;\\n\\t\\t} :\\n\\t\\tmatchers[0];\\n}\\n\\nfunction multipleContexts( selector, contexts, results ) {\\n\\tvar i = 0,\\n\\t\\tlen = contexts.length;\\n\\tfor ( ; i < len; i++ ) {\\n\\t\\tSizzle( selector, contexts[i], results );\\n\\t}\\n\\treturn results;\\n}\\n\\nfunction condense( unmatched, map, filter, context, xml ) {\\n\\tvar elem,\\n\\t\\tnewUnmatched = [],\\n\\t\\ti = 0,\\n\\t\\tlen = unmatched.length,\\n\\t\\tmapped = map != null;\\n\\n\\tfor ( ; i < len; i++ ) {\\n\\t\\tif ( (elem = unmatched[i]) ) {\\n\\t\\t\\tif ( !filter || filter( elem, context, xml ) ) {\\n\\t\\t\\t\\tnewUnmatched.push( elem );\\n\\t\\t\\t\\tif ( mapped ) {\\n\\t\\t\\t\\t\\tmap.push( i );\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\treturn newUnmatched;\\n}\\n\\nfunction setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {\\n\\tif ( postFilter && !postFilter[ expando ] ) {\\n\\t\\tpostFilter = setMatcher( postFilter );\\n\\t}\\n\\tif ( postFinder && !postFinder[ expando ] ) {\\n\\t\\tpostFinder = setMatcher( postFinder, postSelector );\\n\\t}\\n\\treturn markFunction(function( seed, results, context, xml ) {\\n\\t\\tvar temp, i, elem,\\n\\t\\t\\tpreMap = [],\\n\\t\\t\\tpostMap = [],\\n\\t\\t\\tpreexisting = results.length,\\n\\n\\t\\t\\t// Get initial elements from seed or context\\n\\t\\t\\telems = seed || multipleContexts( selector || \\\"*\\\", context.nodeType ? [ context ] : context, [] ),\\n\\n\\t\\t\\t// Prefilter to get matcher input, preserving a map for seed-results synchronization\\n\\t\\t\\tmatcherIn = preFilter && ( seed || !selector ) ?\\n\\t\\t\\t\\tcondense( elems, preMap, preFilter, context, xml ) :\\n\\t\\t\\t\\telems,\\n\\n\\t\\t\\tmatcherOut = matcher ?\\n\\t\\t\\t\\t// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,\\n\\t\\t\\t\\tpostFinder || ( seed ? preFilter : preexisting || postFilter ) ?\\n\\n\\t\\t\\t\\t\\t// ...intermediate processing is necessary\\n\\t\\t\\t\\t\\t[] :\\n\\n\\t\\t\\t\\t\\t// ...otherwise use results directly\\n\\t\\t\\t\\t\\tresults :\\n\\t\\t\\t\\tmatcherIn;\\n\\n\\t\\t// Find primary matches\\n\\t\\tif ( matcher ) {\\n\\t\\t\\tmatcher( matcherIn, matcherOut, context, xml );\\n\\t\\t}\\n\\n\\t\\t// Apply postFilter\\n\\t\\tif ( postFilter ) {\\n\\t\\t\\ttemp = condense( matcherOut, postMap );\\n\\t\\t\\tpostFilter( temp, [], context, xml );\\n\\n\\t\\t\\t// Un-match failing elements by moving them back to matcherIn\\n\\t\\t\\ti = temp.length;\\n\\t\\t\\twhile ( i-- ) {\\n\\t\\t\\t\\tif ( (elem = temp[i]) ) {\\n\\t\\t\\t\\t\\tmatcherOut[ postMap[i] ] = !(matcherIn[ postMap[i] ] = elem);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tif ( seed ) {\\n\\t\\t\\tif ( postFinder || preFilter ) {\\n\\t\\t\\t\\tif ( postFinder ) {\\n\\t\\t\\t\\t\\t// Get the final matcherOut by condensing this intermediate into postFinder contexts\\n\\t\\t\\t\\t\\ttemp = [];\\n\\t\\t\\t\\t\\ti = matcherOut.length;\\n\\t\\t\\t\\t\\twhile ( i-- ) {\\n\\t\\t\\t\\t\\t\\tif ( (elem = matcherOut[i]) ) {\\n\\t\\t\\t\\t\\t\\t\\t// Restore matcherIn since elem is not yet a final match\\n\\t\\t\\t\\t\\t\\t\\ttemp.push( (matcherIn[i] = elem) );\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\tpostFinder( null, (matcherOut = []), temp, xml );\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// Move matched elements from seed to results to keep them synchronized\\n\\t\\t\\t\\ti = matcherOut.length;\\n\\t\\t\\t\\twhile ( i-- ) {\\n\\t\\t\\t\\t\\tif ( (elem = matcherOut[i]) &&\\n\\t\\t\\t\\t\\t\\t(temp = postFinder ? indexOf( seed, elem ) : preMap[i]) > -1 ) {\\n\\n\\t\\t\\t\\t\\t\\tseed[temp] = !(results[temp] = elem);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t// Add elements to results, through postFinder if defined\\n\\t\\t} else {\\n\\t\\t\\tmatcherOut = condense(\\n\\t\\t\\t\\tmatcherOut === results ?\\n\\t\\t\\t\\t\\tmatcherOut.splice( preexisting, matcherOut.length ) :\\n\\t\\t\\t\\t\\tmatcherOut\\n\\t\\t\\t);\\n\\t\\t\\tif ( postFinder ) {\\n\\t\\t\\t\\tpostFinder( null, results, matcherOut, xml );\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tpush.apply( results, matcherOut );\\n\\t\\t\\t}\\n\\t\\t}\\n\\t});\\n}\\n\\nfunction matcherFromTokens( tokens ) {\\n\\tvar checkContext, matcher, j,\\n\\t\\tlen = tokens.length,\\n\\t\\tleadingRelative = Expr.relative[ tokens[0].type ],\\n\\t\\timplicitRelative = leadingRelative || Expr.relative[\\\" \\\"],\\n\\t\\ti = leadingRelative ? 1 : 0,\\n\\n\\t\\t// The foundational matcher ensures that elements are reachable from top-level context(s)\\n\\t\\tmatchContext = addCombinator( function( elem ) {\\n\\t\\t\\treturn elem === checkContext;\\n\\t\\t}, implicitRelative, true ),\\n\\t\\tmatchAnyContext = addCombinator( function( elem ) {\\n\\t\\t\\treturn indexOf( checkContext, elem ) > -1;\\n\\t\\t}, implicitRelative, true ),\\n\\t\\tmatchers = [ function( elem, context, xml ) {\\n\\t\\t\\tvar ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (\\n\\t\\t\\t\\t(checkContext = context).nodeType ?\\n\\t\\t\\t\\t\\tmatchContext( elem, context, xml ) :\\n\\t\\t\\t\\t\\tmatchAnyContext( elem, context, xml ) );\\n\\t\\t\\t// Avoid hanging onto element (issue #299)\\n\\t\\t\\tcheckContext = null;\\n\\t\\t\\treturn ret;\\n\\t\\t} ];\\n\\n\\tfor ( ; i < len; i++ ) {\\n\\t\\tif ( (matcher = Expr.relative[ tokens[i].type ]) ) {\\n\\t\\t\\tmatchers = [ addCombinator(elementMatcher( matchers ), matcher) ];\\n\\t\\t} else {\\n\\t\\t\\tmatcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches );\\n\\n\\t\\t\\t// Return special upon seeing a positional matcher\\n\\t\\t\\tif ( matcher[ expando ] ) {\\n\\t\\t\\t\\t// Find the next relative operator (if any) for proper handling\\n\\t\\t\\t\\tj = ++i;\\n\\t\\t\\t\\tfor ( ; j < len; j++ ) {\\n\\t\\t\\t\\t\\tif ( Expr.relative[ tokens[j].type ] ) {\\n\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\treturn setMatcher(\\n\\t\\t\\t\\t\\ti > 1 && elementMatcher( matchers ),\\n\\t\\t\\t\\t\\ti > 1 && toSelector(\\n\\t\\t\\t\\t\\t\\t// If the preceding token was a descendant combinator, insert an implicit any-element `*`\\n\\t\\t\\t\\t\\t\\ttokens.slice( 0, i - 1 ).concat({ value: tokens[ i - 2 ].type === \\\" \\\" ? \\\"*\\\" : \\\"\\\" })\\n\\t\\t\\t\\t\\t).replace( rtrim, \\\"$1\\\" ),\\n\\t\\t\\t\\t\\tmatcher,\\n\\t\\t\\t\\t\\ti < j && matcherFromTokens( tokens.slice( i, j ) ),\\n\\t\\t\\t\\t\\tj < len && matcherFromTokens( (tokens = tokens.slice( j )) ),\\n\\t\\t\\t\\t\\tj < len && toSelector( tokens )\\n\\t\\t\\t\\t);\\n\\t\\t\\t}\\n\\t\\t\\tmatchers.push( matcher );\\n\\t\\t}\\n\\t}\\n\\n\\treturn elementMatcher( matchers );\\n}\\n\\nfunction matcherFromGroupMatchers( elementMatchers, setMatchers ) {\\n\\tvar bySet = setMatchers.length > 0,\\n\\t\\tbyElement = elementMatchers.length > 0,\\n\\t\\tsuperMatcher = function( seed, context, xml, results, outermost ) {\\n\\t\\t\\tvar elem, j, matcher,\\n\\t\\t\\t\\tmatchedCount = 0,\\n\\t\\t\\t\\ti = \\\"0\\\",\\n\\t\\t\\t\\tunmatched = seed && [],\\n\\t\\t\\t\\tsetMatched = [],\\n\\t\\t\\t\\tcontextBackup = outermostContext,\\n\\t\\t\\t\\t// We must always have either seed elements or outermost context\\n\\t\\t\\t\\telems = seed || byElement && Expr.find[\\\"TAG\\\"]( \\\"*\\\", outermost ),\\n\\t\\t\\t\\t// Use integer dirruns iff this is the outermost matcher\\n\\t\\t\\t\\tdirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1),\\n\\t\\t\\t\\tlen = elems.length;\\n\\n\\t\\t\\tif ( outermost ) {\\n\\t\\t\\t\\toutermostContext = context === document || context || outermost;\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Add elements passing elementMatchers directly to results\\n\\t\\t\\t// Support: IE<9, Safari\\n\\t\\t\\t// Tolerate NodeList properties (IE: \\\"length\\\"; Safari: <number>) matching elements by id\\n\\t\\t\\tfor ( ; i !== len && (elem = elems[i]) != null; i++ ) {\\n\\t\\t\\t\\tif ( byElement && elem ) {\\n\\t\\t\\t\\t\\tj = 0;\\n\\t\\t\\t\\t\\tif ( !context && elem.ownerDocument !== document ) {\\n\\t\\t\\t\\t\\t\\tsetDocument( elem );\\n\\t\\t\\t\\t\\t\\txml = !documentIsHTML;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\twhile ( (matcher = elementMatchers[j++]) ) {\\n\\t\\t\\t\\t\\t\\tif ( matcher( elem, context || document, xml) ) {\\n\\t\\t\\t\\t\\t\\t\\tresults.push( elem );\\n\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\tif ( outermost ) {\\n\\t\\t\\t\\t\\t\\tdirruns = dirrunsUnique;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// Track unmatched elements for set filters\\n\\t\\t\\t\\tif ( bySet ) {\\n\\t\\t\\t\\t\\t// They will have gone through all possible matchers\\n\\t\\t\\t\\t\\tif ( (elem = !matcher && elem) ) {\\n\\t\\t\\t\\t\\t\\tmatchedCount--;\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t// Lengthen the array for every element, matched or not\\n\\t\\t\\t\\t\\tif ( seed ) {\\n\\t\\t\\t\\t\\t\\tunmatched.push( elem );\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\t// `i` is now the count of elements visited above, and adding it to `matchedCount`\\n\\t\\t\\t// makes the latter nonnegative.\\n\\t\\t\\tmatchedCount += i;\\n\\n\\t\\t\\t// Apply set filters to unmatched elements\\n\\t\\t\\t// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`\\n\\t\\t\\t// equals `i`), unless we didn't visit _any_ elements in the above loop because we have\\n\\t\\t\\t// no element matchers and no seed.\\n\\t\\t\\t// Incrementing an initially-string \\\"0\\\" `i` allows `i` to remain a string only in that\\n\\t\\t\\t// case, which will result in a \\\"00\\\" `matchedCount` that differs from `i` but is also\\n\\t\\t\\t// numerically zero.\\n\\t\\t\\tif ( bySet && i !== matchedCount ) {\\n\\t\\t\\t\\tj = 0;\\n\\t\\t\\t\\twhile ( (matcher = setMatchers[j++]) ) {\\n\\t\\t\\t\\t\\tmatcher( unmatched, setMatched, context, xml );\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif ( seed ) {\\n\\t\\t\\t\\t\\t// Reintegrate element matches to eliminate the need for sorting\\n\\t\\t\\t\\t\\tif ( matchedCount > 0 ) {\\n\\t\\t\\t\\t\\t\\twhile ( i-- ) {\\n\\t\\t\\t\\t\\t\\t\\tif ( !(unmatched[i] || setMatched[i]) ) {\\n\\t\\t\\t\\t\\t\\t\\t\\tsetMatched[i] = pop.call( results );\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t// Discard index placeholder values to get only actual matches\\n\\t\\t\\t\\t\\tsetMatched = condense( setMatched );\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// Add matches to results\\n\\t\\t\\t\\tpush.apply( results, setMatched );\\n\\n\\t\\t\\t\\t// Seedless set matches succeeding multiple successful matchers stipulate sorting\\n\\t\\t\\t\\tif ( outermost && !seed && setMatched.length > 0 &&\\n\\t\\t\\t\\t\\t( matchedCount + setMatchers.length ) > 1 ) {\\n\\n\\t\\t\\t\\t\\tSizzle.uniqueSort( results );\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Override manipulation of globals by nested matchers\\n\\t\\t\\tif ( outermost ) {\\n\\t\\t\\t\\tdirruns = dirrunsUnique;\\n\\t\\t\\t\\toutermostContext = contextBackup;\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn unmatched;\\n\\t\\t};\\n\\n\\treturn bySet ?\\n\\t\\tmarkFunction( superMatcher ) :\\n\\t\\tsuperMatcher;\\n}\\n\\ncompile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {\\n\\tvar i,\\n\\t\\tsetMatchers = [],\\n\\t\\telementMatchers = [],\\n\\t\\tcached = compilerCache[ selector + \\\" \\\" ];\\n\\n\\tif ( !cached ) {\\n\\t\\t// Generate a function of recursive functions that can be used to check each element\\n\\t\\tif ( !match ) {\\n\\t\\t\\tmatch = tokenize( selector );\\n\\t\\t}\\n\\t\\ti = match.length;\\n\\t\\twhile ( i-- ) {\\n\\t\\t\\tcached = matcherFromTokens( match[i] );\\n\\t\\t\\tif ( cached[ expando ] ) {\\n\\t\\t\\t\\tsetMatchers.push( cached );\\n\\t\\t\\t} else {\\n\\t\\t\\t\\telementMatchers.push( cached );\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t// Cache the compiled function\\n\\t\\tcached = compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatchers ) );\\n\\n\\t\\t// Save selector and tokenization\\n\\t\\tcached.selector = selector;\\n\\t}\\n\\treturn cached;\\n};\\n\\n/**\\n * A low-level selection function that works with Sizzle's compiled\\n *  selector functions\\n * @param {String|Function} selector A selector or a pre-compiled\\n *  selector function built with Sizzle.compile\\n * @param {Element} context\\n * @param {Array} [results]\\n * @param {Array} [seed] A set of elements to match against\\n */\\nselect = Sizzle.select = function( selector, context, results, seed ) {\\n\\tvar i, tokens, token, type, find,\\n\\t\\tcompiled = typeof selector === \\\"function\\\" && selector,\\n\\t\\tmatch = !seed && tokenize( (selector = compiled.selector || selector) );\\n\\n\\tresults = results || [];\\n\\n\\t// Try to minimize operations if there is only one selector in the list and no seed\\n\\t// (the latter of which guarantees us context)\\n\\tif ( match.length === 1 ) {\\n\\n\\t\\t// Reduce context if the leading compound selector is an ID\\n\\t\\ttokens = match[0] = match[0].slice( 0 );\\n\\t\\tif ( tokens.length > 2 && (token = tokens[0]).type === \\\"ID\\\" &&\\n\\t\\t\\t\\tcontext.nodeType === 9 && documentIsHTML && Expr.relative[ tokens[1].type ] ) {\\n\\n\\t\\t\\tcontext = ( Expr.find[\\\"ID\\\"]( token.matches[0].replace(runescape, funescape), context ) || [] )[0];\\n\\t\\t\\tif ( !context ) {\\n\\t\\t\\t\\treturn results;\\n\\n\\t\\t\\t// Precompiled matchers will still verify ancestry, so step up a level\\n\\t\\t\\t} else if ( compiled ) {\\n\\t\\t\\t\\tcontext = context.parentNode;\\n\\t\\t\\t}\\n\\n\\t\\t\\tselector = selector.slice( tokens.shift().value.length );\\n\\t\\t}\\n\\n\\t\\t// Fetch a seed set for right-to-left matching\\n\\t\\ti = matchExpr[\\\"needsContext\\\"].test( selector ) ? 0 : tokens.length;\\n\\t\\twhile ( i-- ) {\\n\\t\\t\\ttoken = tokens[i];\\n\\n\\t\\t\\t// Abort if we hit a combinator\\n\\t\\t\\tif ( Expr.relative[ (type = token.type) ] ) {\\n\\t\\t\\t\\tbreak;\\n\\t\\t\\t}\\n\\t\\t\\tif ( (find = Expr.find[ type ]) ) {\\n\\t\\t\\t\\t// Search, expanding context for leading sibling combinators\\n\\t\\t\\t\\tif ( (seed = find(\\n\\t\\t\\t\\t\\ttoken.matches[0].replace( runescape, funescape ),\\n\\t\\t\\t\\t\\trsibling.test( tokens[0].type ) && testContext( context.parentNode ) || context\\n\\t\\t\\t\\t)) ) {\\n\\n\\t\\t\\t\\t\\t// If seed is empty or no tokens remain, we can return early\\n\\t\\t\\t\\t\\ttokens.splice( i, 1 );\\n\\t\\t\\t\\t\\tselector = seed.length && toSelector( tokens );\\n\\t\\t\\t\\t\\tif ( !selector ) {\\n\\t\\t\\t\\t\\t\\tpush.apply( results, seed );\\n\\t\\t\\t\\t\\t\\treturn results;\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\t// Compile and execute a filtering function if one is not provided\\n\\t// Provide `match` to avoid retokenization if we modified the selector above\\n\\t( compiled || compile( selector, match ) )(\\n\\t\\tseed,\\n\\t\\tcontext,\\n\\t\\t!documentIsHTML,\\n\\t\\tresults,\\n\\t\\t!context || rsibling.test( selector ) && testContext( context.parentNode ) || context\\n\\t);\\n\\treturn results;\\n};\\n\\n// One-time assignments\\n\\n// Sort stability\\nsupport.sortStable = expando.split(\\\"\\\").sort( sortOrder ).join(\\\"\\\") === expando;\\n\\n// Support: Chrome 14-35+\\n// Always assume duplicates if they aren't passed to the comparison function\\nsupport.detectDuplicates = !!hasDuplicate;\\n\\n// Initialize against the default document\\nsetDocument();\\n\\n// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)\\n// Detached nodes confoundingly follow *each other*\\nsupport.sortDetached = assert(function( el ) {\\n\\t// Should return 1, but returns 4 (following)\\n\\treturn el.compareDocumentPosition( document.createElement(\\\"fieldset\\\") ) & 1;\\n});\\n\\n// Support: IE<8\\n// Prevent attribute/property \\\"interpolation\\\"\\n// https://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx\\nif ( !assert(function( el ) {\\n\\tel.innerHTML = \\\"<a href='#'></a>\\\";\\n\\treturn el.firstChild.getAttribute(\\\"href\\\") === \\\"#\\\" ;\\n}) ) {\\n\\taddHandle( \\\"type|href|height|width\\\", function( elem, name, isXML ) {\\n\\t\\tif ( !isXML ) {\\n\\t\\t\\treturn elem.getAttribute( name, name.toLowerCase() === \\\"type\\\" ? 1 : 2 );\\n\\t\\t}\\n\\t});\\n}\\n\\n// Support: IE<9\\n// Use defaultValue in place of getAttribute(\\\"value\\\")\\nif ( !support.attributes || !assert(function( el ) {\\n\\tel.innerHTML = \\\"<input/>\\\";\\n\\tel.firstChild.setAttribute( \\\"value\\\", \\\"\\\" );\\n\\treturn el.firstChild.getAttribute( \\\"value\\\" ) === \\\"\\\";\\n}) ) {\\n\\taddHandle( \\\"value\\\", function( elem, name, isXML ) {\\n\\t\\tif ( !isXML && elem.nodeName.toLowerCase() === \\\"input\\\" ) {\\n\\t\\t\\treturn elem.defaultValue;\\n\\t\\t}\\n\\t});\\n}\\n\\n// Support: IE<9\\n// Use getAttributeNode to fetch booleans when getAttribute lies\\nif ( !assert(function( el ) {\\n\\treturn el.getAttribute(\\\"disabled\\\") == null;\\n}) ) {\\n\\taddHandle( booleans, function( elem, name, isXML ) {\\n\\t\\tvar val;\\n\\t\\tif ( !isXML ) {\\n\\t\\t\\treturn elem[ name ] === true ? name.toLowerCase() :\\n\\t\\t\\t\\t\\t(val = elem.getAttributeNode( name )) && val.specified ?\\n\\t\\t\\t\\t\\tval.value :\\n\\t\\t\\t\\tnull;\\n\\t\\t}\\n\\t});\\n}\\n\\nreturn Sizzle;\\n\\n})( window );\\n\\n\\n\\njQuery.find = Sizzle;\\njQuery.expr = Sizzle.selectors;\\n\\n// Deprecated\\njQuery.expr[ \\\":\\\" ] = jQuery.expr.pseudos;\\njQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;\\njQuery.text = Sizzle.getText;\\njQuery.isXMLDoc = Sizzle.isXML;\\njQuery.contains = Sizzle.contains;\\njQuery.escapeSelector = Sizzle.escape;\\n\\n\\n\\n\\nvar dir = function( elem, dir, until ) {\\n\\tvar matched = [],\\n\\t\\ttruncate = until !== undefined;\\n\\n\\twhile ( ( elem = elem[ dir ] ) && elem.nodeType !== 9 ) {\\n\\t\\tif ( elem.nodeType === 1 ) {\\n\\t\\t\\tif ( truncate && jQuery( elem ).is( until ) ) {\\n\\t\\t\\t\\tbreak;\\n\\t\\t\\t}\\n\\t\\t\\tmatched.push( elem );\\n\\t\\t}\\n\\t}\\n\\treturn matched;\\n};\\n\\n\\nvar siblings = function( n, elem ) {\\n\\tvar matched = [];\\n\\n\\tfor ( ; n; n = n.nextSibling ) {\\n\\t\\tif ( n.nodeType === 1 && n !== elem ) {\\n\\t\\t\\tmatched.push( n );\\n\\t\\t}\\n\\t}\\n\\n\\treturn matched;\\n};\\n\\n\\nvar rneedsContext = jQuery.expr.match.needsContext;\\n\\n\\n\\nfunction nodeName( elem, name ) {\\n\\n  return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();\\n\\n};\\nvar rsingleTag = ( /^<([a-z][^\\\\/\\\\0>:\\\\x20\\\\t\\\\r\\\\n\\\\f]*)[\\\\x20\\\\t\\\\r\\\\n\\\\f]*\\\\/?>(?:<\\\\/\\\\1>|)$/i );\\n\\n\\n\\nvar risSimple = /^.[^:#\\\\[\\\\.,]*$/;\\n\\n// Implement the identical functionality for filter and not\\nfunction winnow( elements, qualifier, not ) {\\n\\tif ( jQuery.isFunction( qualifier ) ) {\\n\\t\\treturn jQuery.grep( elements, function( elem, i ) {\\n\\t\\t\\treturn !!qualifier.call( elem, i, elem ) !== not;\\n\\t\\t} );\\n\\t}\\n\\n\\t// Single element\\n\\tif ( qualifier.nodeType ) {\\n\\t\\treturn jQuery.grep( elements, function( elem ) {\\n\\t\\t\\treturn ( elem === qualifier ) !== not;\\n\\t\\t} );\\n\\t}\\n\\n\\t// Arraylike of elements (jQuery, arguments, Array)\\n\\tif ( typeof qualifier !== \\\"string\\\" ) {\\n\\t\\treturn jQuery.grep( elements, function( elem ) {\\n\\t\\t\\treturn ( indexOf.call( qualifier, elem ) > -1 ) !== not;\\n\\t\\t} );\\n\\t}\\n\\n\\t// Simple selector that can be filtered directly, removing non-Elements\\n\\tif ( risSimple.test( qualifier ) ) {\\n\\t\\treturn jQuery.filter( qualifier, elements, not );\\n\\t}\\n\\n\\t// Complex selector, compare the two sets, removing non-Elements\\n\\tqualifier = jQuery.filter( qualifier, elements );\\n\\treturn jQuery.grep( elements, function( elem ) {\\n\\t\\treturn ( indexOf.call( qualifier, elem ) > -1 ) !== not && elem.nodeType === 1;\\n\\t} );\\n}\\n\\njQuery.filter = function( expr, elems, not ) {\\n\\tvar elem = elems[ 0 ];\\n\\n\\tif ( not ) {\\n\\t\\texpr = \\\":not(\\\" + expr + \\\")\\\";\\n\\t}\\n\\n\\tif ( elems.length === 1 && elem.nodeType === 1 ) {\\n\\t\\treturn jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [];\\n\\t}\\n\\n\\treturn jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {\\n\\t\\treturn elem.nodeType === 1;\\n\\t} ) );\\n};\\n\\njQuery.fn.extend( {\\n\\tfind: function( selector ) {\\n\\t\\tvar i, ret,\\n\\t\\t\\tlen = this.length,\\n\\t\\t\\tself = this;\\n\\n\\t\\tif ( typeof selector !== \\\"string\\\" ) {\\n\\t\\t\\treturn this.pushStack( jQuery( selector ).filter( function() {\\n\\t\\t\\t\\tfor ( i = 0; i < len; i++ ) {\\n\\t\\t\\t\\t\\tif ( jQuery.contains( self[ i ], this ) ) {\\n\\t\\t\\t\\t\\t\\treturn true;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t} ) );\\n\\t\\t}\\n\\n\\t\\tret = this.pushStack( [] );\\n\\n\\t\\tfor ( i = 0; i < len; i++ ) {\\n\\t\\t\\tjQuery.find( selector, self[ i ], ret );\\n\\t\\t}\\n\\n\\t\\treturn len > 1 ? jQuery.uniqueSort( ret ) : ret;\\n\\t},\\n\\tfilter: function( selector ) {\\n\\t\\treturn this.pushStack( winnow( this, selector || [], false ) );\\n\\t},\\n\\tnot: function( selector ) {\\n\\t\\treturn this.pushStack( winnow( this, selector || [], true ) );\\n\\t},\\n\\tis: function( selector ) {\\n\\t\\treturn !!winnow(\\n\\t\\t\\tthis,\\n\\n\\t\\t\\t// If this is a positional/relative selector, check membership in the returned set\\n\\t\\t\\t// so $(\\\"p:first\\\").is(\\\"p:last\\\") won't return true for a doc with two \\\"p\\\".\\n\\t\\t\\ttypeof selector === \\\"string\\\" && rneedsContext.test( selector ) ?\\n\\t\\t\\t\\tjQuery( selector ) :\\n\\t\\t\\t\\tselector || [],\\n\\t\\t\\tfalse\\n\\t\\t).length;\\n\\t}\\n} );\\n\\n\\n// Initialize a jQuery object\\n\\n\\n// A central reference to the root jQuery(document)\\nvar rootjQuery,\\n\\n\\t// A simple way to check for HTML strings\\n\\t// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)\\n\\t// Strict HTML recognition (#11290: must start with <)\\n\\t// Shortcut simple #id case for speed\\n\\trquickExpr = /^(?:\\\\s*(<[\\\\w\\\\W]+>)[^>]*|#([\\\\w-]+))$/,\\n\\n\\tinit = jQuery.fn.init = function( selector, context, root ) {\\n\\t\\tvar match, elem;\\n\\n\\t\\t// HANDLE: $(\\\"\\\"), $(null), $(undefined), $(false)\\n\\t\\tif ( !selector ) {\\n\\t\\t\\treturn this;\\n\\t\\t}\\n\\n\\t\\t// Method init() accepts an alternate rootjQuery\\n\\t\\t// so migrate can support jQuery.sub (gh-2101)\\n\\t\\troot = root || rootjQuery;\\n\\n\\t\\t// Handle HTML strings\\n\\t\\tif ( typeof selector === \\\"string\\\" ) {\\n\\t\\t\\tif ( selector[ 0 ] === \\\"<\\\" &&\\n\\t\\t\\t\\tselector[ selector.length - 1 ] === \\\">\\\" &&\\n\\t\\t\\t\\tselector.length >= 3 ) {\\n\\n\\t\\t\\t\\t// Assume that strings that start and end with <> are HTML and skip the regex check\\n\\t\\t\\t\\tmatch = [ null, selector, null ];\\n\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tmatch = rquickExpr.exec( selector );\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Match html or make sure no context is specified for #id\\n\\t\\t\\tif ( match && ( match[ 1 ] || !context ) ) {\\n\\n\\t\\t\\t\\t// HANDLE: $(html) -> $(array)\\n\\t\\t\\t\\tif ( match[ 1 ] ) {\\n\\t\\t\\t\\t\\tcontext = context instanceof jQuery ? context[ 0 ] : context;\\n\\n\\t\\t\\t\\t\\t// Option to run scripts is true for back-compat\\n\\t\\t\\t\\t\\t// Intentionally let the error be thrown if parseHTML is not present\\n\\t\\t\\t\\t\\tjQuery.merge( this, jQuery.parseHTML(\\n\\t\\t\\t\\t\\t\\tmatch[ 1 ],\\n\\t\\t\\t\\t\\t\\tcontext && context.nodeType ? context.ownerDocument || context : document,\\n\\t\\t\\t\\t\\t\\ttrue\\n\\t\\t\\t\\t\\t) );\\n\\n\\t\\t\\t\\t\\t// HANDLE: $(html, props)\\n\\t\\t\\t\\t\\tif ( rsingleTag.test( match[ 1 ] ) && jQuery.isPlainObject( context ) ) {\\n\\t\\t\\t\\t\\t\\tfor ( match in context ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t// Properties of context are called as methods if possible\\n\\t\\t\\t\\t\\t\\t\\tif ( jQuery.isFunction( this[ match ] ) ) {\\n\\t\\t\\t\\t\\t\\t\\t\\tthis[ match ]( context[ match ] );\\n\\n\\t\\t\\t\\t\\t\\t\\t// ...and otherwise set as attributes\\n\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\tthis.attr( match, context[ match ] );\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\treturn this;\\n\\n\\t\\t\\t\\t// HANDLE: $(#id)\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\telem = document.getElementById( match[ 2 ] );\\n\\n\\t\\t\\t\\t\\tif ( elem ) {\\n\\n\\t\\t\\t\\t\\t\\t// Inject the element directly into the jQuery object\\n\\t\\t\\t\\t\\t\\tthis[ 0 ] = elem;\\n\\t\\t\\t\\t\\t\\tthis.length = 1;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\treturn this;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t// HANDLE: $(expr, $(...))\\n\\t\\t\\t} else if ( !context || context.jquery ) {\\n\\t\\t\\t\\treturn ( context || root ).find( selector );\\n\\n\\t\\t\\t// HANDLE: $(expr, context)\\n\\t\\t\\t// (which is just equivalent to: $(context).find(expr)\\n\\t\\t\\t} else {\\n\\t\\t\\t\\treturn this.constructor( context ).find( selector );\\n\\t\\t\\t}\\n\\n\\t\\t// HANDLE: $(DOMElement)\\n\\t\\t} else if ( selector.nodeType ) {\\n\\t\\t\\tthis[ 0 ] = selector;\\n\\t\\t\\tthis.length = 1;\\n\\t\\t\\treturn this;\\n\\n\\t\\t// HANDLE: $(function)\\n\\t\\t// Shortcut for document ready\\n\\t\\t} else if ( jQuery.isFunction( selector ) ) {\\n\\t\\t\\treturn root.ready !== undefined ?\\n\\t\\t\\t\\troot.ready( selector ) :\\n\\n\\t\\t\\t\\t// Execute immediately if ready is not present\\n\\t\\t\\t\\tselector( jQuery );\\n\\t\\t}\\n\\n\\t\\treturn jQuery.makeArray( selector, this );\\n\\t};\\n\\n// Give the init function the jQuery prototype for later instantiation\\ninit.prototype = jQuery.fn;\\n\\n// Initialize central reference\\nrootjQuery = jQuery( document );\\n\\n\\nvar rparentsprev = /^(?:parents|prev(?:Until|All))/,\\n\\n\\t// Methods guaranteed to produce a unique set when starting from a unique set\\n\\tguaranteedUnique = {\\n\\t\\tchildren: true,\\n\\t\\tcontents: true,\\n\\t\\tnext: true,\\n\\t\\tprev: true\\n\\t};\\n\\njQuery.fn.extend( {\\n\\thas: function( target ) {\\n\\t\\tvar targets = jQuery( target, this ),\\n\\t\\t\\tl = targets.length;\\n\\n\\t\\treturn this.filter( function() {\\n\\t\\t\\tvar i = 0;\\n\\t\\t\\tfor ( ; i < l; i++ ) {\\n\\t\\t\\t\\tif ( jQuery.contains( this, targets[ i ] ) ) {\\n\\t\\t\\t\\t\\treturn true;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t} );\\n\\t},\\n\\n\\tclosest: function( selectors, context ) {\\n\\t\\tvar cur,\\n\\t\\t\\ti = 0,\\n\\t\\t\\tl = this.length,\\n\\t\\t\\tmatched = [],\\n\\t\\t\\ttargets = typeof selectors !== \\\"string\\\" && jQuery( selectors );\\n\\n\\t\\t// Positional selectors never match, since there's no _selection_ context\\n\\t\\tif ( !rneedsContext.test( selectors ) ) {\\n\\t\\t\\tfor ( ; i < l; i++ ) {\\n\\t\\t\\t\\tfor ( cur = this[ i ]; cur && cur !== context; cur = cur.parentNode ) {\\n\\n\\t\\t\\t\\t\\t// Always skip document fragments\\n\\t\\t\\t\\t\\tif ( cur.nodeType < 11 && ( targets ?\\n\\t\\t\\t\\t\\t\\ttargets.index( cur ) > -1 :\\n\\n\\t\\t\\t\\t\\t\\t// Don't pass non-elements to Sizzle\\n\\t\\t\\t\\t\\t\\tcur.nodeType === 1 &&\\n\\t\\t\\t\\t\\t\\t\\tjQuery.find.matchesSelector( cur, selectors ) ) ) {\\n\\n\\t\\t\\t\\t\\t\\tmatched.push( cur );\\n\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn this.pushStack( matched.length > 1 ? jQuery.uniqueSort( matched ) : matched );\\n\\t},\\n\\n\\t// Determine the position of an element within the set\\n\\tindex: function( elem ) {\\n\\n\\t\\t// No argument, return index in parent\\n\\t\\tif ( !elem ) {\\n\\t\\t\\treturn ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;\\n\\t\\t}\\n\\n\\t\\t// Index in selector\\n\\t\\tif ( typeof elem === \\\"string\\\" ) {\\n\\t\\t\\treturn indexOf.call( jQuery( elem ), this[ 0 ] );\\n\\t\\t}\\n\\n\\t\\t// Locate the position of the desired element\\n\\t\\treturn indexOf.call( this,\\n\\n\\t\\t\\t// If it receives a jQuery object, the first element is used\\n\\t\\t\\telem.jquery ? elem[ 0 ] : elem\\n\\t\\t);\\n\\t},\\n\\n\\tadd: function( selector, context ) {\\n\\t\\treturn this.pushStack(\\n\\t\\t\\tjQuery.uniqueSort(\\n\\t\\t\\t\\tjQuery.merge( this.get(), jQuery( selector, context ) )\\n\\t\\t\\t)\\n\\t\\t);\\n\\t},\\n\\n\\taddBack: function( selector ) {\\n\\t\\treturn this.add( selector == null ?\\n\\t\\t\\tthis.prevObject : this.prevObject.filter( selector )\\n\\t\\t);\\n\\t}\\n} );\\n\\nfunction sibling( cur, dir ) {\\n\\twhile ( ( cur = cur[ dir ] ) && cur.nodeType !== 1 ) {}\\n\\treturn cur;\\n}\\n\\njQuery.each( {\\n\\tparent: function( elem ) {\\n\\t\\tvar parent = elem.parentNode;\\n\\t\\treturn parent && parent.nodeType !== 11 ? parent : null;\\n\\t},\\n\\tparents: function( elem ) {\\n\\t\\treturn dir( elem, \\\"parentNode\\\" );\\n\\t},\\n\\tparentsUntil: function( elem, i, until ) {\\n\\t\\treturn dir( elem, \\\"parentNode\\\", until );\\n\\t},\\n\\tnext: function( elem ) {\\n\\t\\treturn sibling( elem, \\\"nextSibling\\\" );\\n\\t},\\n\\tprev: function( elem ) {\\n\\t\\treturn sibling( elem, \\\"previousSibling\\\" );\\n\\t},\\n\\tnextAll: function( elem ) {\\n\\t\\treturn dir( elem, \\\"nextSibling\\\" );\\n\\t},\\n\\tprevAll: function( elem ) {\\n\\t\\treturn dir( elem, \\\"previousSibling\\\" );\\n\\t},\\n\\tnextUntil: function( elem, i, until ) {\\n\\t\\treturn dir( elem, \\\"nextSibling\\\", until );\\n\\t},\\n\\tprevUntil: function( elem, i, until ) {\\n\\t\\treturn dir( elem, \\\"previousSibling\\\", until );\\n\\t},\\n\\tsiblings: function( elem ) {\\n\\t\\treturn siblings( ( elem.parentNode || {} ).firstChild, elem );\\n\\t},\\n\\tchildren: function( elem ) {\\n\\t\\treturn siblings( elem.firstChild );\\n\\t},\\n\\tcontents: function( elem ) {\\n        if ( nodeName( elem, \\\"iframe\\\" ) ) {\\n            return elem.contentDocument;\\n        }\\n\\n        // Support: IE 9 - 11 only, iOS 7 only, Android Browser <=4.3 only\\n        // Treat the template element as a regular one in browsers that\\n        // don't support it.\\n        if ( nodeName( elem, \\\"template\\\" ) ) {\\n            elem = elem.content || elem;\\n        }\\n\\n        return jQuery.merge( [], elem.childNodes );\\n\\t}\\n}, function( name, fn ) {\\n\\tjQuery.fn[ name ] = function( until, selector ) {\\n\\t\\tvar matched = jQuery.map( this, fn, until );\\n\\n\\t\\tif ( name.slice( -5 ) !== \\\"Until\\\" ) {\\n\\t\\t\\tselector = until;\\n\\t\\t}\\n\\n\\t\\tif ( selector && typeof selector === \\\"string\\\" ) {\\n\\t\\t\\tmatched = jQuery.filter( selector, matched );\\n\\t\\t}\\n\\n\\t\\tif ( this.length > 1 ) {\\n\\n\\t\\t\\t// Remove duplicates\\n\\t\\t\\tif ( !guaranteedUnique[ name ] ) {\\n\\t\\t\\t\\tjQuery.uniqueSort( matched );\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Reverse order for parents* and prev-derivatives\\n\\t\\t\\tif ( rparentsprev.test( name ) ) {\\n\\t\\t\\t\\tmatched.reverse();\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn this.pushStack( matched );\\n\\t};\\n} );\\nvar rnothtmlwhite = ( /[^\\\\x20\\\\t\\\\r\\\\n\\\\f]+/g );\\n\\n\\n\\n// Convert String-formatted options into Object-formatted ones\\nfunction createOptions( options ) {\\n\\tvar object = {};\\n\\tjQuery.each( options.match( rnothtmlwhite ) || [], function( _, flag ) {\\n\\t\\tobject[ flag ] = true;\\n\\t} );\\n\\treturn object;\\n}\\n\\n/*\\n * Create a callback list using the following parameters:\\n *\\n *\\toptions: an optional list of space-separated options that will change how\\n *\\t\\t\\tthe callback list behaves or a more traditional option object\\n *\\n * By default a callback list will act like an event callback list and can be\\n * \\\"fired\\\" multiple times.\\n *\\n * Possible options:\\n *\\n *\\tonce:\\t\\t\\twill ensure the callback list can only be fired once (like a Deferred)\\n *\\n *\\tmemory:\\t\\t\\twill keep track of previous values and will call any callback added\\n *\\t\\t\\t\\t\\tafter the list has been fired right away with the latest \\\"memorized\\\"\\n *\\t\\t\\t\\t\\tvalues (like a Deferred)\\n *\\n *\\tunique:\\t\\t\\twill ensure a callback can only be added once (no duplicate in the list)\\n *\\n *\\tstopOnFalse:\\tinterrupt callings when a callback returns false\\n *\\n */\\njQuery.Callbacks = function( options ) {\\n\\n\\t// Convert options from String-formatted to Object-formatted if needed\\n\\t// (we check in cache first)\\n\\toptions = typeof options === \\\"string\\\" ?\\n\\t\\tcreateOptions( options ) :\\n\\t\\tjQuery.extend( {}, options );\\n\\n\\tvar // Flag to know if list is currently firing\\n\\t\\tfiring,\\n\\n\\t\\t// Last fire value for non-forgettable lists\\n\\t\\tmemory,\\n\\n\\t\\t// Flag to know if list was already fired\\n\\t\\tfired,\\n\\n\\t\\t// Flag to prevent firing\\n\\t\\tlocked,\\n\\n\\t\\t// Actual callback list\\n\\t\\tlist = [],\\n\\n\\t\\t// Queue of execution data for repeatable lists\\n\\t\\tqueue = [],\\n\\n\\t\\t// Index of currently firing callback (modified by add/remove as needed)\\n\\t\\tfiringIndex = -1,\\n\\n\\t\\t// Fire callbacks\\n\\t\\tfire = function() {\\n\\n\\t\\t\\t// Enforce single-firing\\n\\t\\t\\tlocked = locked || options.once;\\n\\n\\t\\t\\t// Execute callbacks for all pending executions,\\n\\t\\t\\t// respecting firingIndex overrides and runtime changes\\n\\t\\t\\tfired = firing = true;\\n\\t\\t\\tfor ( ; queue.length; firingIndex = -1 ) {\\n\\t\\t\\t\\tmemory = queue.shift();\\n\\t\\t\\t\\twhile ( ++firingIndex < list.length ) {\\n\\n\\t\\t\\t\\t\\t// Run callback and check for early termination\\n\\t\\t\\t\\t\\tif ( list[ firingIndex ].apply( memory[ 0 ], memory[ 1 ] ) === false &&\\n\\t\\t\\t\\t\\t\\toptions.stopOnFalse ) {\\n\\n\\t\\t\\t\\t\\t\\t// Jump to end and forget the data so .add doesn't re-fire\\n\\t\\t\\t\\t\\t\\tfiringIndex = list.length;\\n\\t\\t\\t\\t\\t\\tmemory = false;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Forget the data if we're done with it\\n\\t\\t\\tif ( !options.memory ) {\\n\\t\\t\\t\\tmemory = false;\\n\\t\\t\\t}\\n\\n\\t\\t\\tfiring = false;\\n\\n\\t\\t\\t// Clean up if we're done firing for good\\n\\t\\t\\tif ( locked ) {\\n\\n\\t\\t\\t\\t// Keep an empty list if we have data for future add calls\\n\\t\\t\\t\\tif ( memory ) {\\n\\t\\t\\t\\t\\tlist = [];\\n\\n\\t\\t\\t\\t// Otherwise, this object is spent\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tlist = \\\"\\\";\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t},\\n\\n\\t\\t// Actual Callbacks object\\n\\t\\tself = {\\n\\n\\t\\t\\t// Add a callback or a collection of callbacks to the list\\n\\t\\t\\tadd: function() {\\n\\t\\t\\t\\tif ( list ) {\\n\\n\\t\\t\\t\\t\\t// If we have memory from a past run, we should fire after adding\\n\\t\\t\\t\\t\\tif ( memory && !firing ) {\\n\\t\\t\\t\\t\\t\\tfiringIndex = list.length - 1;\\n\\t\\t\\t\\t\\t\\tqueue.push( memory );\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t( function add( args ) {\\n\\t\\t\\t\\t\\t\\tjQuery.each( args, function( _, arg ) {\\n\\t\\t\\t\\t\\t\\t\\tif ( jQuery.isFunction( arg ) ) {\\n\\t\\t\\t\\t\\t\\t\\t\\tif ( !options.unique || !self.has( arg ) ) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tlist.push( arg );\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t} else if ( arg && arg.length && jQuery.type( arg ) !== \\\"string\\\" ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t// Inspect recursively\\n\\t\\t\\t\\t\\t\\t\\t\\tadd( arg );\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t} );\\n\\t\\t\\t\\t\\t} )( arguments );\\n\\n\\t\\t\\t\\t\\tif ( memory && !firing ) {\\n\\t\\t\\t\\t\\t\\tfire();\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\treturn this;\\n\\t\\t\\t},\\n\\n\\t\\t\\t// Remove a callback from the list\\n\\t\\t\\tremove: function() {\\n\\t\\t\\t\\tjQuery.each( arguments, function( _, arg ) {\\n\\t\\t\\t\\t\\tvar index;\\n\\t\\t\\t\\t\\twhile ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {\\n\\t\\t\\t\\t\\t\\tlist.splice( index, 1 );\\n\\n\\t\\t\\t\\t\\t\\t// Handle firing indexes\\n\\t\\t\\t\\t\\t\\tif ( index <= firingIndex ) {\\n\\t\\t\\t\\t\\t\\t\\tfiringIndex--;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t} );\\n\\t\\t\\t\\treturn this;\\n\\t\\t\\t},\\n\\n\\t\\t\\t// Check if a given callback is in the list.\\n\\t\\t\\t// If no argument is given, return whether or not list has callbacks attached.\\n\\t\\t\\thas: function( fn ) {\\n\\t\\t\\t\\treturn fn ?\\n\\t\\t\\t\\t\\tjQuery.inArray( fn, list ) > -1 :\\n\\t\\t\\t\\t\\tlist.length > 0;\\n\\t\\t\\t},\\n\\n\\t\\t\\t// Remove all callbacks from the list\\n\\t\\t\\tempty: function() {\\n\\t\\t\\t\\tif ( list ) {\\n\\t\\t\\t\\t\\tlist = [];\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\treturn this;\\n\\t\\t\\t},\\n\\n\\t\\t\\t// Disable .fire and .add\\n\\t\\t\\t// Abort any current/pending executions\\n\\t\\t\\t// Clear all callbacks and values\\n\\t\\t\\tdisable: function() {\\n\\t\\t\\t\\tlocked = queue = [];\\n\\t\\t\\t\\tlist = memory = \\\"\\\";\\n\\t\\t\\t\\treturn this;\\n\\t\\t\\t},\\n\\t\\t\\tdisabled: function() {\\n\\t\\t\\t\\treturn !list;\\n\\t\\t\\t},\\n\\n\\t\\t\\t// Disable .fire\\n\\t\\t\\t// Also disable .add unless we have memory (since it would have no effect)\\n\\t\\t\\t// Abort any pending executions\\n\\t\\t\\tlock: function() {\\n\\t\\t\\t\\tlocked = queue = [];\\n\\t\\t\\t\\tif ( !memory && !firing ) {\\n\\t\\t\\t\\t\\tlist = memory = \\\"\\\";\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\treturn this;\\n\\t\\t\\t},\\n\\t\\t\\tlocked: function() {\\n\\t\\t\\t\\treturn !!locked;\\n\\t\\t\\t},\\n\\n\\t\\t\\t// Call all callbacks with the given context and arguments\\n\\t\\t\\tfireWith: function( context, args ) {\\n\\t\\t\\t\\tif ( !locked ) {\\n\\t\\t\\t\\t\\targs = args || [];\\n\\t\\t\\t\\t\\targs = [ context, args.slice ? args.slice() : args ];\\n\\t\\t\\t\\t\\tqueue.push( args );\\n\\t\\t\\t\\t\\tif ( !firing ) {\\n\\t\\t\\t\\t\\t\\tfire();\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\treturn this;\\n\\t\\t\\t},\\n\\n\\t\\t\\t// Call all the callbacks with the given arguments\\n\\t\\t\\tfire: function() {\\n\\t\\t\\t\\tself.fireWith( this, arguments );\\n\\t\\t\\t\\treturn this;\\n\\t\\t\\t},\\n\\n\\t\\t\\t// To know if the callbacks have already been called at least once\\n\\t\\t\\tfired: function() {\\n\\t\\t\\t\\treturn !!fired;\\n\\t\\t\\t}\\n\\t\\t};\\n\\n\\treturn self;\\n};\\n\\n\\nfunction Identity( v ) {\\n\\treturn v;\\n}\\nfunction Thrower( ex ) {\\n\\tthrow ex;\\n}\\n\\nfunction adoptValue( value, resolve, reject, noValue ) {\\n\\tvar method;\\n\\n\\ttry {\\n\\n\\t\\t// Check for promise aspect first to privilege synchronous behavior\\n\\t\\tif ( value && jQuery.isFunction( ( method = value.promise ) ) ) {\\n\\t\\t\\tmethod.call( value ).done( resolve ).fail( reject );\\n\\n\\t\\t// Other thenables\\n\\t\\t} else if ( value && jQuery.isFunction( ( method = value.then ) ) ) {\\n\\t\\t\\tmethod.call( value, resolve, reject );\\n\\n\\t\\t// Other non-thenables\\n\\t\\t} else {\\n\\n\\t\\t\\t// Control `resolve` arguments by letting Array#slice cast boolean `noValue` to integer:\\n\\t\\t\\t// * false: [ value ].slice( 0 ) => resolve( value )\\n\\t\\t\\t// * true: [ value ].slice( 1 ) => resolve()\\n\\t\\t\\tresolve.apply( undefined, [ value ].slice( noValue ) );\\n\\t\\t}\\n\\n\\t// For Promises/A+, convert exceptions into rejections\\n\\t// Since jQuery.when doesn't unwrap thenables, we can skip the extra checks appearing in\\n\\t// Deferred#then to conditionally suppress rejection.\\n\\t} catch ( value ) {\\n\\n\\t\\t// Support: Android 4.0 only\\n\\t\\t// Strict mode functions invoked without .call/.apply get global-object context\\n\\t\\treject.apply( undefined, [ value ] );\\n\\t}\\n}\\n\\njQuery.extend( {\\n\\n\\tDeferred: function( func ) {\\n\\t\\tvar tuples = [\\n\\n\\t\\t\\t\\t// action, add listener, callbacks,\\n\\t\\t\\t\\t// ... .then handlers, argument index, [final state]\\n\\t\\t\\t\\t[ \\\"notify\\\", \\\"progress\\\", jQuery.Callbacks( \\\"memory\\\" ),\\n\\t\\t\\t\\t\\tjQuery.Callbacks( \\\"memory\\\" ), 2 ],\\n\\t\\t\\t\\t[ \\\"resolve\\\", \\\"done\\\", jQuery.Callbacks( \\\"once memory\\\" ),\\n\\t\\t\\t\\t\\tjQuery.Callbacks( \\\"once memory\\\" ), 0, \\\"resolved\\\" ],\\n\\t\\t\\t\\t[ \\\"reject\\\", \\\"fail\\\", jQuery.Callbacks( \\\"once memory\\\" ),\\n\\t\\t\\t\\t\\tjQuery.Callbacks( \\\"once memory\\\" ), 1, \\\"rejected\\\" ]\\n\\t\\t\\t],\\n\\t\\t\\tstate = \\\"pending\\\",\\n\\t\\t\\tpromise = {\\n\\t\\t\\t\\tstate: function() {\\n\\t\\t\\t\\t\\treturn state;\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\talways: function() {\\n\\t\\t\\t\\t\\tdeferred.done( arguments ).fail( arguments );\\n\\t\\t\\t\\t\\treturn this;\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\\"catch\\\": function( fn ) {\\n\\t\\t\\t\\t\\treturn promise.then( null, fn );\\n\\t\\t\\t\\t},\\n\\n\\t\\t\\t\\t// Keep pipe for back-compat\\n\\t\\t\\t\\tpipe: function( /* fnDone, fnFail, fnProgress */ ) {\\n\\t\\t\\t\\t\\tvar fns = arguments;\\n\\n\\t\\t\\t\\t\\treturn jQuery.Deferred( function( newDefer ) {\\n\\t\\t\\t\\t\\t\\tjQuery.each( tuples, function( i, tuple ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t// Map tuples (progress, done, fail) to arguments (done, fail, progress)\\n\\t\\t\\t\\t\\t\\t\\tvar fn = jQuery.isFunction( fns[ tuple[ 4 ] ] ) && fns[ tuple[ 4 ] ];\\n\\n\\t\\t\\t\\t\\t\\t\\t// deferred.progress(function() { bind to newDefer or newDefer.notify })\\n\\t\\t\\t\\t\\t\\t\\t// deferred.done(function() { bind to newDefer or newDefer.resolve })\\n\\t\\t\\t\\t\\t\\t\\t// deferred.fail(function() { bind to newDefer or newDefer.reject })\\n\\t\\t\\t\\t\\t\\t\\tdeferred[ tuple[ 1 ] ]( function() {\\n\\t\\t\\t\\t\\t\\t\\t\\tvar returned = fn && fn.apply( this, arguments );\\n\\t\\t\\t\\t\\t\\t\\t\\tif ( returned && jQuery.isFunction( returned.promise ) ) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\treturned.promise()\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t.progress( newDefer.notify )\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t.done( newDefer.resolve )\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t.fail( newDefer.reject );\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tnewDefer[ tuple[ 0 ] + \\\"With\\\" ](\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tthis,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tfn ? [ returned ] : arguments\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t} );\\n\\t\\t\\t\\t\\t\\t} );\\n\\t\\t\\t\\t\\t\\tfns = null;\\n\\t\\t\\t\\t\\t} ).promise();\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\tthen: function( onFulfilled, onRejected, onProgress ) {\\n\\t\\t\\t\\t\\tvar maxDepth = 0;\\n\\t\\t\\t\\t\\tfunction resolve( depth, deferred, handler, special ) {\\n\\t\\t\\t\\t\\t\\treturn function() {\\n\\t\\t\\t\\t\\t\\t\\tvar that = this,\\n\\t\\t\\t\\t\\t\\t\\t\\targs = arguments,\\n\\t\\t\\t\\t\\t\\t\\t\\tmightThrow = function() {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tvar returned, then;\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t// Support: Promises/A+ section 2.3.3.3.3\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t// https://promisesaplus.com/#point-59\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t// Ignore double-resolution attempts\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif ( depth < maxDepth ) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\treturn;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\treturned = handler.apply( that, args );\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t// Support: Promises/A+ section 2.3.1\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t// https://promisesaplus.com/#point-48\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif ( returned === deferred.promise() ) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tthrow new TypeError( \\\"Thenable self-resolution\\\" );\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t// Support: Promises/A+ sections 2.3.3.1, 3.5\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t// https://promisesaplus.com/#point-54\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t// https://promisesaplus.com/#point-75\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t// Retrieve `then` only once\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tthen = returned &&\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// Support: Promises/A+ section 2.3.4\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// https://promisesaplus.com/#point-64\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// Only check objects and functions for thenability\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t( typeof returned === \\\"object\\\" ||\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\ttypeof returned === \\\"function\\\" ) &&\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\treturned.then;\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t// Handle a returned thenable\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif ( jQuery.isFunction( then ) ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// Special processors (notify) just wait for resolution\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tif ( special ) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tthen.call(\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\treturned,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tresolve( maxDepth, deferred, Identity, special ),\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tresolve( maxDepth, deferred, Thrower, special )\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t);\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// Normal processors (resolve) also hook into progress\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// ...and disregard older resolution values\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tmaxDepth++;\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tthen.call(\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\treturned,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tresolve( maxDepth, deferred, Identity, special ),\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tresolve( maxDepth, deferred, Thrower, special ),\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tresolve( maxDepth, deferred, Identity,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tdeferred.notifyWith )\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t// Handle all other returned values\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// Only substitute handlers pass on context\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// and multiple values (non-spec behavior)\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tif ( handler !== Identity ) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tthat = undefined;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\targs = [ returned ];\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// Process the value(s)\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// Default process is resolve\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t( special || deferred.resolveWith )( that, args );\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t// Only normal processors (resolve) catch and reject exceptions\\n\\t\\t\\t\\t\\t\\t\\t\\tprocess = special ?\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tmightThrow :\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tfunction() {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\ttry {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tmightThrow();\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t} catch ( e ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tif ( jQuery.Deferred.exceptionHook ) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tjQuery.Deferred.exceptionHook( e,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tprocess.stackTrace );\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// Support: Promises/A+ section 2.3.3.3.4.1\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// https://promisesaplus.com/#point-61\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// Ignore post-resolution exceptions\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tif ( depth + 1 >= maxDepth ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// Only substitute handlers pass on context\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// and multiple values (non-spec behavior)\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tif ( handler !== Thrower ) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tthat = undefined;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\targs = [ e ];\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tdeferred.rejectWith( that, args );\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t};\\n\\n\\t\\t\\t\\t\\t\\t\\t// Support: Promises/A+ section 2.3.3.3.1\\n\\t\\t\\t\\t\\t\\t\\t// https://promisesaplus.com/#point-57\\n\\t\\t\\t\\t\\t\\t\\t// Re-resolve promises immediately to dodge false rejection from\\n\\t\\t\\t\\t\\t\\t\\t// subsequent errors\\n\\t\\t\\t\\t\\t\\t\\tif ( depth ) {\\n\\t\\t\\t\\t\\t\\t\\t\\tprocess();\\n\\t\\t\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t// Call an optional hook to record the stack, in case of exception\\n\\t\\t\\t\\t\\t\\t\\t\\t// since it's otherwise lost when execution goes async\\n\\t\\t\\t\\t\\t\\t\\t\\tif ( jQuery.Deferred.getStackHook ) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tprocess.stackTrace = jQuery.Deferred.getStackHook();\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\twindow.setTimeout( process );\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\treturn jQuery.Deferred( function( newDefer ) {\\n\\n\\t\\t\\t\\t\\t\\t// progress_handlers.add( ... )\\n\\t\\t\\t\\t\\t\\ttuples[ 0 ][ 3 ].add(\\n\\t\\t\\t\\t\\t\\t\\tresolve(\\n\\t\\t\\t\\t\\t\\t\\t\\t0,\\n\\t\\t\\t\\t\\t\\t\\t\\tnewDefer,\\n\\t\\t\\t\\t\\t\\t\\t\\tjQuery.isFunction( onProgress ) ?\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tonProgress :\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tIdentity,\\n\\t\\t\\t\\t\\t\\t\\t\\tnewDefer.notifyWith\\n\\t\\t\\t\\t\\t\\t\\t)\\n\\t\\t\\t\\t\\t\\t);\\n\\n\\t\\t\\t\\t\\t\\t// fulfilled_handlers.add( ... )\\n\\t\\t\\t\\t\\t\\ttuples[ 1 ][ 3 ].add(\\n\\t\\t\\t\\t\\t\\t\\tresolve(\\n\\t\\t\\t\\t\\t\\t\\t\\t0,\\n\\t\\t\\t\\t\\t\\t\\t\\tnewDefer,\\n\\t\\t\\t\\t\\t\\t\\t\\tjQuery.isFunction( onFulfilled ) ?\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tonFulfilled :\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tIdentity\\n\\t\\t\\t\\t\\t\\t\\t)\\n\\t\\t\\t\\t\\t\\t);\\n\\n\\t\\t\\t\\t\\t\\t// rejected_handlers.add( ... )\\n\\t\\t\\t\\t\\t\\ttuples[ 2 ][ 3 ].add(\\n\\t\\t\\t\\t\\t\\t\\tresolve(\\n\\t\\t\\t\\t\\t\\t\\t\\t0,\\n\\t\\t\\t\\t\\t\\t\\t\\tnewDefer,\\n\\t\\t\\t\\t\\t\\t\\t\\tjQuery.isFunction( onRejected ) ?\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tonRejected :\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tThrower\\n\\t\\t\\t\\t\\t\\t\\t)\\n\\t\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t\\t} ).promise();\\n\\t\\t\\t\\t},\\n\\n\\t\\t\\t\\t// Get a promise for this deferred\\n\\t\\t\\t\\t// If obj is provided, the promise aspect is added to the object\\n\\t\\t\\t\\tpromise: function( obj ) {\\n\\t\\t\\t\\t\\treturn obj != null ? jQuery.extend( obj, promise ) : promise;\\n\\t\\t\\t\\t}\\n\\t\\t\\t},\\n\\t\\t\\tdeferred = {};\\n\\n\\t\\t// Add list-specific methods\\n\\t\\tjQuery.each( tuples, function( i, tuple ) {\\n\\t\\t\\tvar list = tuple[ 2 ],\\n\\t\\t\\t\\tstateString = tuple[ 5 ];\\n\\n\\t\\t\\t// promise.progress = list.add\\n\\t\\t\\t// promise.done = list.add\\n\\t\\t\\t// promise.fail = list.add\\n\\t\\t\\tpromise[ tuple[ 1 ] ] = list.add;\\n\\n\\t\\t\\t// Handle state\\n\\t\\t\\tif ( stateString ) {\\n\\t\\t\\t\\tlist.add(\\n\\t\\t\\t\\t\\tfunction() {\\n\\n\\t\\t\\t\\t\\t\\t// state = \\\"resolved\\\" (i.e., fulfilled)\\n\\t\\t\\t\\t\\t\\t// state = \\\"rejected\\\"\\n\\t\\t\\t\\t\\t\\tstate = stateString;\\n\\t\\t\\t\\t\\t},\\n\\n\\t\\t\\t\\t\\t// rejected_callbacks.disable\\n\\t\\t\\t\\t\\t// fulfilled_callbacks.disable\\n\\t\\t\\t\\t\\ttuples[ 3 - i ][ 2 ].disable,\\n\\n\\t\\t\\t\\t\\t// progress_callbacks.lock\\n\\t\\t\\t\\t\\ttuples[ 0 ][ 2 ].lock\\n\\t\\t\\t\\t);\\n\\t\\t\\t}\\n\\n\\t\\t\\t// progress_handlers.fire\\n\\t\\t\\t// fulfilled_handlers.fire\\n\\t\\t\\t// rejected_handlers.fire\\n\\t\\t\\tlist.add( tuple[ 3 ].fire );\\n\\n\\t\\t\\t// deferred.notify = function() { deferred.notifyWith(...) }\\n\\t\\t\\t// deferred.resolve = function() { deferred.resolveWith(...) }\\n\\t\\t\\t// deferred.reject = function() { deferred.rejectWith(...) }\\n\\t\\t\\tdeferred[ tuple[ 0 ] ] = function() {\\n\\t\\t\\t\\tdeferred[ tuple[ 0 ] + \\\"With\\\" ]( this === deferred ? undefined : this, arguments );\\n\\t\\t\\t\\treturn this;\\n\\t\\t\\t};\\n\\n\\t\\t\\t// deferred.notifyWith = list.fireWith\\n\\t\\t\\t// deferred.resolveWith = list.fireWith\\n\\t\\t\\t// deferred.rejectWith = list.fireWith\\n\\t\\t\\tdeferred[ tuple[ 0 ] + \\\"With\\\" ] = list.fireWith;\\n\\t\\t} );\\n\\n\\t\\t// Make the deferred a promise\\n\\t\\tpromise.promise( deferred );\\n\\n\\t\\t// Call given func if any\\n\\t\\tif ( func ) {\\n\\t\\t\\tfunc.call( deferred, deferred );\\n\\t\\t}\\n\\n\\t\\t// All done!\\n\\t\\treturn deferred;\\n\\t},\\n\\n\\t// Deferred helper\\n\\twhen: function( singleValue ) {\\n\\t\\tvar\\n\\n\\t\\t\\t// count of uncompleted subordinates\\n\\t\\t\\tremaining = arguments.length,\\n\\n\\t\\t\\t// count of unprocessed arguments\\n\\t\\t\\ti = remaining,\\n\\n\\t\\t\\t// subordinate fulfillment data\\n\\t\\t\\tresolveContexts = Array( i ),\\n\\t\\t\\tresolveValues = slice.call( arguments ),\\n\\n\\t\\t\\t// the master Deferred\\n\\t\\t\\tmaster = jQuery.Deferred(),\\n\\n\\t\\t\\t// subordinate callback factory\\n\\t\\t\\tupdateFunc = function( i ) {\\n\\t\\t\\t\\treturn function( value ) {\\n\\t\\t\\t\\t\\tresolveContexts[ i ] = this;\\n\\t\\t\\t\\t\\tresolveValues[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;\\n\\t\\t\\t\\t\\tif ( !( --remaining ) ) {\\n\\t\\t\\t\\t\\t\\tmaster.resolveWith( resolveContexts, resolveValues );\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t};\\n\\t\\t\\t};\\n\\n\\t\\t// Single- and empty arguments are adopted like Promise.resolve\\n\\t\\tif ( remaining <= 1 ) {\\n\\t\\t\\tadoptValue( singleValue, master.done( updateFunc( i ) ).resolve, master.reject,\\n\\t\\t\\t\\t!remaining );\\n\\n\\t\\t\\t// Use .then() to unwrap secondary thenables (cf. gh-3000)\\n\\t\\t\\tif ( master.state() === \\\"pending\\\" ||\\n\\t\\t\\t\\tjQuery.isFunction( resolveValues[ i ] && resolveValues[ i ].then ) ) {\\n\\n\\t\\t\\t\\treturn master.then();\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t// Multiple arguments are aggregated like Promise.all array elements\\n\\t\\twhile ( i-- ) {\\n\\t\\t\\tadoptValue( resolveValues[ i ], updateFunc( i ), master.reject );\\n\\t\\t}\\n\\n\\t\\treturn master.promise();\\n\\t}\\n} );\\n\\n\\n// These usually indicate a programmer mistake during development,\\n// warn about them ASAP rather than swallowing them by default.\\nvar rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;\\n\\njQuery.Deferred.exceptionHook = function( error, stack ) {\\n\\n\\t// Support: IE 8 - 9 only\\n\\t// Console exists when dev tools are open, which can happen at any time\\n\\tif ( window.console && window.console.warn && error && rerrorNames.test( error.name ) ) {\\n\\t\\twindow.console.warn( \\\"jQuery.Deferred exception: \\\" + error.message, error.stack, stack );\\n\\t}\\n};\\n\\n\\n\\n\\njQuery.readyException = function( error ) {\\n\\twindow.setTimeout( function() {\\n\\t\\tthrow error;\\n\\t} );\\n};\\n\\n\\n\\n\\n// The deferred used on DOM ready\\nvar readyList = jQuery.Deferred();\\n\\njQuery.fn.ready = function( fn ) {\\n\\n\\treadyList\\n\\t\\t.then( fn )\\n\\n\\t\\t// Wrap jQuery.readyException in a function so that the lookup\\n\\t\\t// happens at the time of error handling instead of callback\\n\\t\\t// registration.\\n\\t\\t.catch( function( error ) {\\n\\t\\t\\tjQuery.readyException( error );\\n\\t\\t} );\\n\\n\\treturn this;\\n};\\n\\njQuery.extend( {\\n\\n\\t// Is the DOM ready to be used? Set to true once it occurs.\\n\\tisReady: false,\\n\\n\\t// A counter to track how many items to wait for before\\n\\t// the ready event fires. See #6781\\n\\treadyWait: 1,\\n\\n\\t// Handle when the DOM is ready\\n\\tready: function( wait ) {\\n\\n\\t\\t// Abort if there are pending holds or we're already ready\\n\\t\\tif ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\t// Remember that the DOM is ready\\n\\t\\tjQuery.isReady = true;\\n\\n\\t\\t// If a normal DOM Ready event fired, decrement, and wait if need be\\n\\t\\tif ( wait !== true && --jQuery.readyWait > 0 ) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\t// If there are functions bound, to execute\\n\\t\\treadyList.resolveWith( document, [ jQuery ] );\\n\\t}\\n} );\\n\\njQuery.ready.then = readyList.then;\\n\\n// The ready event handler and self cleanup method\\nfunction completed() {\\n\\tdocument.removeEventListener( \\\"DOMContentLoaded\\\", completed );\\n\\twindow.removeEventListener( \\\"load\\\", completed );\\n\\tjQuery.ready();\\n}\\n\\n// Catch cases where $(document).ready() is called\\n// after the browser event has already occurred.\\n// Support: IE <=9 - 10 only\\n// Older IE sometimes signals \\\"interactive\\\" too soon\\nif ( document.readyState === \\\"complete\\\" ||\\n\\t( document.readyState !== \\\"loading\\\" && !document.documentElement.doScroll ) ) {\\n\\n\\t// Handle it asynchronously to allow scripts the opportunity to delay ready\\n\\twindow.setTimeout( jQuery.ready );\\n\\n} else {\\n\\n\\t// Use the handy event callback\\n\\tdocument.addEventListener( \\\"DOMContentLoaded\\\", completed );\\n\\n\\t// A fallback to window.onload, that will always work\\n\\twindow.addEventListener( \\\"load\\\", completed );\\n}\\n\\n\\n\\n\\n// Multifunctional method to get and set values of a collection\\n// The value/s can optionally be executed if it's a function\\nvar access = function( elems, fn, key, value, chainable, emptyGet, raw ) {\\n\\tvar i = 0,\\n\\t\\tlen = elems.length,\\n\\t\\tbulk = key == null;\\n\\n\\t// Sets many values\\n\\tif ( jQuery.type( key ) === \\\"object\\\" ) {\\n\\t\\tchainable = true;\\n\\t\\tfor ( i in key ) {\\n\\t\\t\\taccess( elems, fn, i, key[ i ], true, emptyGet, raw );\\n\\t\\t}\\n\\n\\t// Sets one value\\n\\t} else if ( value !== undefined ) {\\n\\t\\tchainable = true;\\n\\n\\t\\tif ( !jQuery.isFunction( value ) ) {\\n\\t\\t\\traw = true;\\n\\t\\t}\\n\\n\\t\\tif ( bulk ) {\\n\\n\\t\\t\\t// Bulk operations run against the entire set\\n\\t\\t\\tif ( raw ) {\\n\\t\\t\\t\\tfn.call( elems, value );\\n\\t\\t\\t\\tfn = null;\\n\\n\\t\\t\\t// ...except when executing function values\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tbulk = fn;\\n\\t\\t\\t\\tfn = function( elem, key, value ) {\\n\\t\\t\\t\\t\\treturn bulk.call( jQuery( elem ), value );\\n\\t\\t\\t\\t};\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tif ( fn ) {\\n\\t\\t\\tfor ( ; i < len; i++ ) {\\n\\t\\t\\t\\tfn(\\n\\t\\t\\t\\t\\telems[ i ], key, raw ?\\n\\t\\t\\t\\t\\tvalue :\\n\\t\\t\\t\\t\\tvalue.call( elems[ i ], i, fn( elems[ i ], key ) )\\n\\t\\t\\t\\t);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\tif ( chainable ) {\\n\\t\\treturn elems;\\n\\t}\\n\\n\\t// Gets\\n\\tif ( bulk ) {\\n\\t\\treturn fn.call( elems );\\n\\t}\\n\\n\\treturn len ? fn( elems[ 0 ], key ) : emptyGet;\\n};\\nvar acceptData = function( owner ) {\\n\\n\\t// Accepts only:\\n\\t//  - Node\\n\\t//    - Node.ELEMENT_NODE\\n\\t//    - Node.DOCUMENT_NODE\\n\\t//  - Object\\n\\t//    - Any\\n\\treturn owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );\\n};\\n\\n\\n\\n\\nfunction Data() {\\n\\tthis.expando = jQuery.expando + Data.uid++;\\n}\\n\\nData.uid = 1;\\n\\nData.prototype = {\\n\\n\\tcache: function( owner ) {\\n\\n\\t\\t// Check if the owner object already has a cache\\n\\t\\tvar value = owner[ this.expando ];\\n\\n\\t\\t// If not, create one\\n\\t\\tif ( !value ) {\\n\\t\\t\\tvalue = {};\\n\\n\\t\\t\\t// We can accept data for non-element nodes in modern browsers,\\n\\t\\t\\t// but we should not, see #8335.\\n\\t\\t\\t// Always return an empty object.\\n\\t\\t\\tif ( acceptData( owner ) ) {\\n\\n\\t\\t\\t\\t// If it is a node unlikely to be stringify-ed or looped over\\n\\t\\t\\t\\t// use plain assignment\\n\\t\\t\\t\\tif ( owner.nodeType ) {\\n\\t\\t\\t\\t\\towner[ this.expando ] = value;\\n\\n\\t\\t\\t\\t// Otherwise secure it in a non-enumerable property\\n\\t\\t\\t\\t// configurable must be true to allow the property to be\\n\\t\\t\\t\\t// deleted when data is removed\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tObject.defineProperty( owner, this.expando, {\\n\\t\\t\\t\\t\\t\\tvalue: value,\\n\\t\\t\\t\\t\\t\\tconfigurable: true\\n\\t\\t\\t\\t\\t} );\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn value;\\n\\t},\\n\\tset: function( owner, data, value ) {\\n\\t\\tvar prop,\\n\\t\\t\\tcache = this.cache( owner );\\n\\n\\t\\t// Handle: [ owner, key, value ] args\\n\\t\\t// Always use camelCase key (gh-2257)\\n\\t\\tif ( typeof data === \\\"string\\\" ) {\\n\\t\\t\\tcache[ jQuery.camelCase( data ) ] = value;\\n\\n\\t\\t// Handle: [ owner, { properties } ] args\\n\\t\\t} else {\\n\\n\\t\\t\\t// Copy the properties one-by-one to the cache object\\n\\t\\t\\tfor ( prop in data ) {\\n\\t\\t\\t\\tcache[ jQuery.camelCase( prop ) ] = data[ prop ];\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\treturn cache;\\n\\t},\\n\\tget: function( owner, key ) {\\n\\t\\treturn key === undefined ?\\n\\t\\t\\tthis.cache( owner ) :\\n\\n\\t\\t\\t// Always use camelCase key (gh-2257)\\n\\t\\t\\towner[ this.expando ] && owner[ this.expando ][ jQuery.camelCase( key ) ];\\n\\t},\\n\\taccess: function( owner, key, value ) {\\n\\n\\t\\t// In cases where either:\\n\\t\\t//\\n\\t\\t//   1. No key was specified\\n\\t\\t//   2. A string key was specified, but no value provided\\n\\t\\t//\\n\\t\\t// Take the \\\"read\\\" path and allow the get method to determine\\n\\t\\t// which value to return, respectively either:\\n\\t\\t//\\n\\t\\t//   1. The entire cache object\\n\\t\\t//   2. The data stored at the key\\n\\t\\t//\\n\\t\\tif ( key === undefined ||\\n\\t\\t\\t\\t( ( key && typeof key === \\\"string\\\" ) && value === undefined ) ) {\\n\\n\\t\\t\\treturn this.get( owner, key );\\n\\t\\t}\\n\\n\\t\\t// When the key is not a string, or both a key and value\\n\\t\\t// are specified, set or extend (existing objects) with either:\\n\\t\\t//\\n\\t\\t//   1. An object of properties\\n\\t\\t//   2. A key and value\\n\\t\\t//\\n\\t\\tthis.set( owner, key, value );\\n\\n\\t\\t// Since the \\\"set\\\" path can have two possible entry points\\n\\t\\t// return the expected data based on which path was taken[*]\\n\\t\\treturn value !== undefined ? value : key;\\n\\t},\\n\\tremove: function( owner, key ) {\\n\\t\\tvar i,\\n\\t\\t\\tcache = owner[ this.expando ];\\n\\n\\t\\tif ( cache === undefined ) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tif ( key !== undefined ) {\\n\\n\\t\\t\\t// Support array or space separated string of keys\\n\\t\\t\\tif ( Array.isArray( key ) ) {\\n\\n\\t\\t\\t\\t// If key is an array of keys...\\n\\t\\t\\t\\t// We always set camelCase keys, so remove that.\\n\\t\\t\\t\\tkey = key.map( jQuery.camelCase );\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tkey = jQuery.camelCase( key );\\n\\n\\t\\t\\t\\t// If a key with the spaces exists, use it.\\n\\t\\t\\t\\t// Otherwise, create an array by matching non-whitespace\\n\\t\\t\\t\\tkey = key in cache ?\\n\\t\\t\\t\\t\\t[ key ] :\\n\\t\\t\\t\\t\\t( key.match( rnothtmlwhite ) || [] );\\n\\t\\t\\t}\\n\\n\\t\\t\\ti = key.length;\\n\\n\\t\\t\\twhile ( i-- ) {\\n\\t\\t\\t\\tdelete cache[ key[ i ] ];\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t// Remove the expando if there's no more data\\n\\t\\tif ( key === undefined || jQuery.isEmptyObject( cache ) ) {\\n\\n\\t\\t\\t// Support: Chrome <=35 - 45\\n\\t\\t\\t// Webkit & Blink performance suffers when deleting properties\\n\\t\\t\\t// from DOM nodes, so set to undefined instead\\n\\t\\t\\t// https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)\\n\\t\\t\\tif ( owner.nodeType ) {\\n\\t\\t\\t\\towner[ this.expando ] = undefined;\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tdelete owner[ this.expando ];\\n\\t\\t\\t}\\n\\t\\t}\\n\\t},\\n\\thasData: function( owner ) {\\n\\t\\tvar cache = owner[ this.expando ];\\n\\t\\treturn cache !== undefined && !jQuery.isEmptyObject( cache );\\n\\t}\\n};\\nvar dataPriv = new Data();\\n\\nvar dataUser = new Data();\\n\\n\\n\\n//\\tImplementation Summary\\n//\\n//\\t1. Enforce API surface and semantic compatibility with 1.9.x branch\\n//\\t2. Improve the module's maintainability by reducing the storage\\n//\\t\\tpaths to a single mechanism.\\n//\\t3. Use the same single mechanism to support \\\"private\\\" and \\\"user\\\" data.\\n//\\t4. _Never_ expose \\\"private\\\" data to user code (TODO: Drop _data, _removeData)\\n//\\t5. Avoid exposing implementation details on user objects (eg. expando properties)\\n//\\t6. Provide a clear path for implementation upgrade to WeakMap in 2014\\n\\nvar rbrace = /^(?:\\\\{[\\\\w\\\\W]*\\\\}|\\\\[[\\\\w\\\\W]*\\\\])$/,\\n\\trmultiDash = /[A-Z]/g;\\n\\nfunction getData( data ) {\\n\\tif ( data === \\\"true\\\" ) {\\n\\t\\treturn true;\\n\\t}\\n\\n\\tif ( data === \\\"false\\\" ) {\\n\\t\\treturn false;\\n\\t}\\n\\n\\tif ( data === \\\"null\\\" ) {\\n\\t\\treturn null;\\n\\t}\\n\\n\\t// Only convert to a number if it doesn't change the string\\n\\tif ( data === +data + \\\"\\\" ) {\\n\\t\\treturn +data;\\n\\t}\\n\\n\\tif ( rbrace.test( data ) ) {\\n\\t\\treturn JSON.parse( data );\\n\\t}\\n\\n\\treturn data;\\n}\\n\\nfunction dataAttr( elem, key, data ) {\\n\\tvar name;\\n\\n\\t// If nothing was found internally, try to fetch any\\n\\t// data from the HTML5 data-* attribute\\n\\tif ( data === undefined && elem.nodeType === 1 ) {\\n\\t\\tname = \\\"data-\\\" + key.replace( rmultiDash, \\\"-$&\\\" ).toLowerCase();\\n\\t\\tdata = elem.getAttribute( name );\\n\\n\\t\\tif ( typeof data === \\\"string\\\" ) {\\n\\t\\t\\ttry {\\n\\t\\t\\t\\tdata = getData( data );\\n\\t\\t\\t} catch ( e ) {}\\n\\n\\t\\t\\t// Make sure we set the data so it isn't changed later\\n\\t\\t\\tdataUser.set( elem, key, data );\\n\\t\\t} else {\\n\\t\\t\\tdata = undefined;\\n\\t\\t}\\n\\t}\\n\\treturn data;\\n}\\n\\njQuery.extend( {\\n\\thasData: function( elem ) {\\n\\t\\treturn dataUser.hasData( elem ) || dataPriv.hasData( elem );\\n\\t},\\n\\n\\tdata: function( elem, name, data ) {\\n\\t\\treturn dataUser.access( elem, name, data );\\n\\t},\\n\\n\\tremoveData: function( elem, name ) {\\n\\t\\tdataUser.remove( elem, name );\\n\\t},\\n\\n\\t// TODO: Now that all calls to _data and _removeData have been replaced\\n\\t// with direct calls to dataPriv methods, these can be deprecated.\\n\\t_data: function( elem, name, data ) {\\n\\t\\treturn dataPriv.access( elem, name, data );\\n\\t},\\n\\n\\t_removeData: function( elem, name ) {\\n\\t\\tdataPriv.remove( elem, name );\\n\\t}\\n} );\\n\\njQuery.fn.extend( {\\n\\tdata: function( key, value ) {\\n\\t\\tvar i, name, data,\\n\\t\\t\\telem = this[ 0 ],\\n\\t\\t\\tattrs = elem && elem.attributes;\\n\\n\\t\\t// Gets all values\\n\\t\\tif ( key === undefined ) {\\n\\t\\t\\tif ( this.length ) {\\n\\t\\t\\t\\tdata = dataUser.get( elem );\\n\\n\\t\\t\\t\\tif ( elem.nodeType === 1 && !dataPriv.get( elem, \\\"hasDataAttrs\\\" ) ) {\\n\\t\\t\\t\\t\\ti = attrs.length;\\n\\t\\t\\t\\t\\twhile ( i-- ) {\\n\\n\\t\\t\\t\\t\\t\\t// Support: IE 11 only\\n\\t\\t\\t\\t\\t\\t// The attrs elements can be null (#14894)\\n\\t\\t\\t\\t\\t\\tif ( attrs[ i ] ) {\\n\\t\\t\\t\\t\\t\\t\\tname = attrs[ i ].name;\\n\\t\\t\\t\\t\\t\\t\\tif ( name.indexOf( \\\"data-\\\" ) === 0 ) {\\n\\t\\t\\t\\t\\t\\t\\t\\tname = jQuery.camelCase( name.slice( 5 ) );\\n\\t\\t\\t\\t\\t\\t\\t\\tdataAttr( elem, name, data[ name ] );\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\tdataPriv.set( elem, \\\"hasDataAttrs\\\", true );\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn data;\\n\\t\\t}\\n\\n\\t\\t// Sets multiple values\\n\\t\\tif ( typeof key === \\\"object\\\" ) {\\n\\t\\t\\treturn this.each( function() {\\n\\t\\t\\t\\tdataUser.set( this, key );\\n\\t\\t\\t} );\\n\\t\\t}\\n\\n\\t\\treturn access( this, function( value ) {\\n\\t\\t\\tvar data;\\n\\n\\t\\t\\t// The calling jQuery object (element matches) is not empty\\n\\t\\t\\t// (and therefore has an element appears at this[ 0 ]) and the\\n\\t\\t\\t// `value` parameter was not undefined. An empty jQuery object\\n\\t\\t\\t// will result in `undefined` for elem = this[ 0 ] which will\\n\\t\\t\\t// throw an exception if an attempt to read a data cache is made.\\n\\t\\t\\tif ( elem && value === undefined ) {\\n\\n\\t\\t\\t\\t// Attempt to get data from the cache\\n\\t\\t\\t\\t// The key will always be camelCased in Data\\n\\t\\t\\t\\tdata = dataUser.get( elem, key );\\n\\t\\t\\t\\tif ( data !== undefined ) {\\n\\t\\t\\t\\t\\treturn data;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// Attempt to \\\"discover\\\" the data in\\n\\t\\t\\t\\t// HTML5 custom data-* attrs\\n\\t\\t\\t\\tdata = dataAttr( elem, key );\\n\\t\\t\\t\\tif ( data !== undefined ) {\\n\\t\\t\\t\\t\\treturn data;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// We tried really hard, but the data doesn't exist.\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Set the data...\\n\\t\\t\\tthis.each( function() {\\n\\n\\t\\t\\t\\t// We always store the camelCased key\\n\\t\\t\\t\\tdataUser.set( this, key, value );\\n\\t\\t\\t} );\\n\\t\\t}, null, value, arguments.length > 1, null, true );\\n\\t},\\n\\n\\tremoveData: function( key ) {\\n\\t\\treturn this.each( function() {\\n\\t\\t\\tdataUser.remove( this, key );\\n\\t\\t} );\\n\\t}\\n} );\\n\\n\\njQuery.extend( {\\n\\tqueue: function( elem, type, data ) {\\n\\t\\tvar queue;\\n\\n\\t\\tif ( elem ) {\\n\\t\\t\\ttype = ( type || \\\"fx\\\" ) + \\\"queue\\\";\\n\\t\\t\\tqueue = dataPriv.get( elem, type );\\n\\n\\t\\t\\t// Speed up dequeue by getting out quickly if this is just a lookup\\n\\t\\t\\tif ( data ) {\\n\\t\\t\\t\\tif ( !queue || Array.isArray( data ) ) {\\n\\t\\t\\t\\t\\tqueue = dataPriv.access( elem, type, jQuery.makeArray( data ) );\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tqueue.push( data );\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\treturn queue || [];\\n\\t\\t}\\n\\t},\\n\\n\\tdequeue: function( elem, type ) {\\n\\t\\ttype = type || \\\"fx\\\";\\n\\n\\t\\tvar queue = jQuery.queue( elem, type ),\\n\\t\\t\\tstartLength = queue.length,\\n\\t\\t\\tfn = queue.shift(),\\n\\t\\t\\thooks = jQuery._queueHooks( elem, type ),\\n\\t\\t\\tnext = function() {\\n\\t\\t\\t\\tjQuery.dequeue( elem, type );\\n\\t\\t\\t};\\n\\n\\t\\t// If the fx queue is dequeued, always remove the progress sentinel\\n\\t\\tif ( fn === \\\"inprogress\\\" ) {\\n\\t\\t\\tfn = queue.shift();\\n\\t\\t\\tstartLength--;\\n\\t\\t}\\n\\n\\t\\tif ( fn ) {\\n\\n\\t\\t\\t// Add a progress sentinel to prevent the fx queue from being\\n\\t\\t\\t// automatically dequeued\\n\\t\\t\\tif ( type === \\\"fx\\\" ) {\\n\\t\\t\\t\\tqueue.unshift( \\\"inprogress\\\" );\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Clear up the last queue stop function\\n\\t\\t\\tdelete hooks.stop;\\n\\t\\t\\tfn.call( elem, next, hooks );\\n\\t\\t}\\n\\n\\t\\tif ( !startLength && hooks ) {\\n\\t\\t\\thooks.empty.fire();\\n\\t\\t}\\n\\t},\\n\\n\\t// Not public - generate a queueHooks object, or return the current one\\n\\t_queueHooks: function( elem, type ) {\\n\\t\\tvar key = type + \\\"queueHooks\\\";\\n\\t\\treturn dataPriv.get( elem, key ) || dataPriv.access( elem, key, {\\n\\t\\t\\tempty: jQuery.Callbacks( \\\"once memory\\\" ).add( function() {\\n\\t\\t\\t\\tdataPriv.remove( elem, [ type + \\\"queue\\\", key ] );\\n\\t\\t\\t} )\\n\\t\\t} );\\n\\t}\\n} );\\n\\njQuery.fn.extend( {\\n\\tqueue: function( type, data ) {\\n\\t\\tvar setter = 2;\\n\\n\\t\\tif ( typeof type !== \\\"string\\\" ) {\\n\\t\\t\\tdata = type;\\n\\t\\t\\ttype = \\\"fx\\\";\\n\\t\\t\\tsetter--;\\n\\t\\t}\\n\\n\\t\\tif ( arguments.length < setter ) {\\n\\t\\t\\treturn jQuery.queue( this[ 0 ], type );\\n\\t\\t}\\n\\n\\t\\treturn data === undefined ?\\n\\t\\t\\tthis :\\n\\t\\t\\tthis.each( function() {\\n\\t\\t\\t\\tvar queue = jQuery.queue( this, type, data );\\n\\n\\t\\t\\t\\t// Ensure a hooks for this queue\\n\\t\\t\\t\\tjQuery._queueHooks( this, type );\\n\\n\\t\\t\\t\\tif ( type === \\\"fx\\\" && queue[ 0 ] !== \\\"inprogress\\\" ) {\\n\\t\\t\\t\\t\\tjQuery.dequeue( this, type );\\n\\t\\t\\t\\t}\\n\\t\\t\\t} );\\n\\t},\\n\\tdequeue: function( type ) {\\n\\t\\treturn this.each( function() {\\n\\t\\t\\tjQuery.dequeue( this, type );\\n\\t\\t} );\\n\\t},\\n\\tclearQueue: function( type ) {\\n\\t\\treturn this.queue( type || \\\"fx\\\", [] );\\n\\t},\\n\\n\\t// Get a promise resolved when queues of a certain type\\n\\t// are emptied (fx is the type by default)\\n\\tpromise: function( type, obj ) {\\n\\t\\tvar tmp,\\n\\t\\t\\tcount = 1,\\n\\t\\t\\tdefer = jQuery.Deferred(),\\n\\t\\t\\telements = this,\\n\\t\\t\\ti = this.length,\\n\\t\\t\\tresolve = function() {\\n\\t\\t\\t\\tif ( !( --count ) ) {\\n\\t\\t\\t\\t\\tdefer.resolveWith( elements, [ elements ] );\\n\\t\\t\\t\\t}\\n\\t\\t\\t};\\n\\n\\t\\tif ( typeof type !== \\\"string\\\" ) {\\n\\t\\t\\tobj = type;\\n\\t\\t\\ttype = undefined;\\n\\t\\t}\\n\\t\\ttype = type || \\\"fx\\\";\\n\\n\\t\\twhile ( i-- ) {\\n\\t\\t\\ttmp = dataPriv.get( elements[ i ], type + \\\"queueHooks\\\" );\\n\\t\\t\\tif ( tmp && tmp.empty ) {\\n\\t\\t\\t\\tcount++;\\n\\t\\t\\t\\ttmp.empty.add( resolve );\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\tresolve();\\n\\t\\treturn defer.promise( obj );\\n\\t}\\n} );\\nvar pnum = ( /[+-]?(?:\\\\d*\\\\.|)\\\\d+(?:[eE][+-]?\\\\d+|)/ ).source;\\n\\nvar rcssNum = new RegExp( \\\"^(?:([+-])=|)(\\\" + pnum + \\\")([a-z%]*)$\\\", \\\"i\\\" );\\n\\n\\nvar cssExpand = [ \\\"Top\\\", \\\"Right\\\", \\\"Bottom\\\", \\\"Left\\\" ];\\n\\nvar isHiddenWithinTree = function( elem, el ) {\\n\\n\\t\\t// isHiddenWithinTree might be called from jQuery#filter function;\\n\\t\\t// in that case, element will be second argument\\n\\t\\telem = el || elem;\\n\\n\\t\\t// Inline style trumps all\\n\\t\\treturn elem.style.display === \\\"none\\\" ||\\n\\t\\t\\telem.style.display === \\\"\\\" &&\\n\\n\\t\\t\\t// Otherwise, check computed style\\n\\t\\t\\t// Support: Firefox <=43 - 45\\n\\t\\t\\t// Disconnected elements can have computed display: none, so first confirm that elem is\\n\\t\\t\\t// in the document.\\n\\t\\t\\tjQuery.contains( elem.ownerDocument, elem ) &&\\n\\n\\t\\t\\tjQuery.css( elem, \\\"display\\\" ) === \\\"none\\\";\\n\\t};\\n\\nvar swap = function( elem, options, callback, args ) {\\n\\tvar ret, name,\\n\\t\\told = {};\\n\\n\\t// Remember the old values, and insert the new ones\\n\\tfor ( name in options ) {\\n\\t\\told[ name ] = elem.style[ name ];\\n\\t\\telem.style[ name ] = options[ name ];\\n\\t}\\n\\n\\tret = callback.apply( elem, args || [] );\\n\\n\\t// Revert the old values\\n\\tfor ( name in options ) {\\n\\t\\telem.style[ name ] = old[ name ];\\n\\t}\\n\\n\\treturn ret;\\n};\\n\\n\\n\\n\\nfunction adjustCSS( elem, prop, valueParts, tween ) {\\n\\tvar adjusted,\\n\\t\\tscale = 1,\\n\\t\\tmaxIterations = 20,\\n\\t\\tcurrentValue = tween ?\\n\\t\\t\\tfunction() {\\n\\t\\t\\t\\treturn tween.cur();\\n\\t\\t\\t} :\\n\\t\\t\\tfunction() {\\n\\t\\t\\t\\treturn jQuery.css( elem, prop, \\\"\\\" );\\n\\t\\t\\t},\\n\\t\\tinitial = currentValue(),\\n\\t\\tunit = valueParts && valueParts[ 3 ] || ( jQuery.cssNumber[ prop ] ? \\\"\\\" : \\\"px\\\" ),\\n\\n\\t\\t// Starting value computation is required for potential unit mismatches\\n\\t\\tinitialInUnit = ( jQuery.cssNumber[ prop ] || unit !== \\\"px\\\" && +initial ) &&\\n\\t\\t\\trcssNum.exec( jQuery.css( elem, prop ) );\\n\\n\\tif ( initialInUnit && initialInUnit[ 3 ] !== unit ) {\\n\\n\\t\\t// Trust units reported by jQuery.css\\n\\t\\tunit = unit || initialInUnit[ 3 ];\\n\\n\\t\\t// Make sure we update the tween properties later on\\n\\t\\tvalueParts = valueParts || [];\\n\\n\\t\\t// Iteratively approximate from a nonzero starting point\\n\\t\\tinitialInUnit = +initial || 1;\\n\\n\\t\\tdo {\\n\\n\\t\\t\\t// If previous iteration zeroed out, double until we get *something*.\\n\\t\\t\\t// Use string for doubling so we don't accidentally see scale as unchanged below\\n\\t\\t\\tscale = scale || \\\".5\\\";\\n\\n\\t\\t\\t// Adjust and apply\\n\\t\\t\\tinitialInUnit = initialInUnit / scale;\\n\\t\\t\\tjQuery.style( elem, prop, initialInUnit + unit );\\n\\n\\t\\t// Update scale, tolerating zero or NaN from tween.cur()\\n\\t\\t// Break the loop if scale is unchanged or perfect, or if we've just had enough.\\n\\t\\t} while (\\n\\t\\t\\tscale !== ( scale = currentValue() / initial ) && scale !== 1 && --maxIterations\\n\\t\\t);\\n\\t}\\n\\n\\tif ( valueParts ) {\\n\\t\\tinitialInUnit = +initialInUnit || +initial || 0;\\n\\n\\t\\t// Apply relative offset (+=/-=) if specified\\n\\t\\tadjusted = valueParts[ 1 ] ?\\n\\t\\t\\tinitialInUnit + ( valueParts[ 1 ] + 1 ) * valueParts[ 2 ] :\\n\\t\\t\\t+valueParts[ 2 ];\\n\\t\\tif ( tween ) {\\n\\t\\t\\ttween.unit = unit;\\n\\t\\t\\ttween.start = initialInUnit;\\n\\t\\t\\ttween.end = adjusted;\\n\\t\\t}\\n\\t}\\n\\treturn adjusted;\\n}\\n\\n\\nvar defaultDisplayMap = {};\\n\\nfunction getDefaultDisplay( elem ) {\\n\\tvar temp,\\n\\t\\tdoc = elem.ownerDocument,\\n\\t\\tnodeName = elem.nodeName,\\n\\t\\tdisplay = defaultDisplayMap[ nodeName ];\\n\\n\\tif ( display ) {\\n\\t\\treturn display;\\n\\t}\\n\\n\\ttemp = doc.body.appendChild( doc.createElement( nodeName ) );\\n\\tdisplay = jQuery.css( temp, \\\"display\\\" );\\n\\n\\ttemp.parentNode.removeChild( temp );\\n\\n\\tif ( display === \\\"none\\\" ) {\\n\\t\\tdisplay = \\\"block\\\";\\n\\t}\\n\\tdefaultDisplayMap[ nodeName ] = display;\\n\\n\\treturn display;\\n}\\n\\nfunction showHide( elements, show ) {\\n\\tvar display, elem,\\n\\t\\tvalues = [],\\n\\t\\tindex = 0,\\n\\t\\tlength = elements.length;\\n\\n\\t// Determine new display value for elements that need to change\\n\\tfor ( ; index < length; index++ ) {\\n\\t\\telem = elements[ index ];\\n\\t\\tif ( !elem.style ) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tdisplay = elem.style.display;\\n\\t\\tif ( show ) {\\n\\n\\t\\t\\t// Since we force visibility upon cascade-hidden elements, an immediate (and slow)\\n\\t\\t\\t// check is required in this first loop unless we have a nonempty display value (either\\n\\t\\t\\t// inline or about-to-be-restored)\\n\\t\\t\\tif ( display === \\\"none\\\" ) {\\n\\t\\t\\t\\tvalues[ index ] = dataPriv.get( elem, \\\"display\\\" ) || null;\\n\\t\\t\\t\\tif ( !values[ index ] ) {\\n\\t\\t\\t\\t\\telem.style.display = \\\"\\\";\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\tif ( elem.style.display === \\\"\\\" && isHiddenWithinTree( elem ) ) {\\n\\t\\t\\t\\tvalues[ index ] = getDefaultDisplay( elem );\\n\\t\\t\\t}\\n\\t\\t} else {\\n\\t\\t\\tif ( display !== \\\"none\\\" ) {\\n\\t\\t\\t\\tvalues[ index ] = \\\"none\\\";\\n\\n\\t\\t\\t\\t// Remember what we're overwriting\\n\\t\\t\\t\\tdataPriv.set( elem, \\\"display\\\", display );\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\t// Set the display of the elements in a second loop to avoid constant reflow\\n\\tfor ( index = 0; index < length; index++ ) {\\n\\t\\tif ( values[ index ] != null ) {\\n\\t\\t\\telements[ index ].style.display = values[ index ];\\n\\t\\t}\\n\\t}\\n\\n\\treturn elements;\\n}\\n\\njQuery.fn.extend( {\\n\\tshow: function() {\\n\\t\\treturn showHide( this, true );\\n\\t},\\n\\thide: function() {\\n\\t\\treturn showHide( this );\\n\\t},\\n\\ttoggle: function( state ) {\\n\\t\\tif ( typeof state === \\\"boolean\\\" ) {\\n\\t\\t\\treturn state ? this.show() : this.hide();\\n\\t\\t}\\n\\n\\t\\treturn this.each( function() {\\n\\t\\t\\tif ( isHiddenWithinTree( this ) ) {\\n\\t\\t\\t\\tjQuery( this ).show();\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tjQuery( this ).hide();\\n\\t\\t\\t}\\n\\t\\t} );\\n\\t}\\n} );\\nvar rcheckableType = ( /^(?:checkbox|radio)$/i );\\n\\nvar rtagName = ( /<([a-z][^\\\\/\\\\0>\\\\x20\\\\t\\\\r\\\\n\\\\f]+)/i );\\n\\nvar rscriptType = ( /^$|\\\\/(?:java|ecma)script/i );\\n\\n\\n\\n// We have to close these tags to support XHTML (#13200)\\nvar wrapMap = {\\n\\n\\t// Support: IE <=9 only\\n\\toption: [ 1, \\\"<select multiple='multiple'>\\\", \\\"</select>\\\" ],\\n\\n\\t// XHTML parsers do not magically insert elements in the\\n\\t// same way that tag soup parsers do. So we cannot shorten\\n\\t// this by omitting <tbody> or other required elements.\\n\\tthead: [ 1, \\\"<table>\\\", \\\"</table>\\\" ],\\n\\tcol: [ 2, \\\"<table><colgroup>\\\", \\\"</colgroup></table>\\\" ],\\n\\ttr: [ 2, \\\"<table><tbody>\\\", \\\"</tbody></table>\\\" ],\\n\\ttd: [ 3, \\\"<table><tbody><tr>\\\", \\\"</tr></tbody></table>\\\" ],\\n\\n\\t_default: [ 0, \\\"\\\", \\\"\\\" ]\\n};\\n\\n// Support: IE <=9 only\\nwrapMap.optgroup = wrapMap.option;\\n\\nwrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\\nwrapMap.th = wrapMap.td;\\n\\n\\nfunction getAll( context, tag ) {\\n\\n\\t// Support: IE <=9 - 11 only\\n\\t// Use typeof to avoid zero-argument method invocation on host objects (#15151)\\n\\tvar ret;\\n\\n\\tif ( typeof context.getElementsByTagName !== \\\"undefined\\\" ) {\\n\\t\\tret = context.getElementsByTagName( tag || \\\"*\\\" );\\n\\n\\t} else if ( typeof context.querySelectorAll !== \\\"undefined\\\" ) {\\n\\t\\tret = context.querySelectorAll( tag || \\\"*\\\" );\\n\\n\\t} else {\\n\\t\\tret = [];\\n\\t}\\n\\n\\tif ( tag === undefined || tag && nodeName( context, tag ) ) {\\n\\t\\treturn jQuery.merge( [ context ], ret );\\n\\t}\\n\\n\\treturn ret;\\n}\\n\\n\\n// Mark scripts as having already been evaluated\\nfunction setGlobalEval( elems, refElements ) {\\n\\tvar i = 0,\\n\\t\\tl = elems.length;\\n\\n\\tfor ( ; i < l; i++ ) {\\n\\t\\tdataPriv.set(\\n\\t\\t\\telems[ i ],\\n\\t\\t\\t\\\"globalEval\\\",\\n\\t\\t\\t!refElements || dataPriv.get( refElements[ i ], \\\"globalEval\\\" )\\n\\t\\t);\\n\\t}\\n}\\n\\n\\nvar rhtml = /<|&#?\\\\w+;/;\\n\\nfunction buildFragment( elems, context, scripts, selection, ignored ) {\\n\\tvar elem, tmp, tag, wrap, contains, j,\\n\\t\\tfragment = context.createDocumentFragment(),\\n\\t\\tnodes = [],\\n\\t\\ti = 0,\\n\\t\\tl = elems.length;\\n\\n\\tfor ( ; i < l; i++ ) {\\n\\t\\telem = elems[ i ];\\n\\n\\t\\tif ( elem || elem === 0 ) {\\n\\n\\t\\t\\t// Add nodes directly\\n\\t\\t\\tif ( jQuery.type( elem ) === \\\"object\\\" ) {\\n\\n\\t\\t\\t\\t// Support: Android <=4.0 only, PhantomJS 1 only\\n\\t\\t\\t\\t// push.apply(_, arraylike) throws on ancient WebKit\\n\\t\\t\\t\\tjQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );\\n\\n\\t\\t\\t// Convert non-html into a text node\\n\\t\\t\\t} else if ( !rhtml.test( elem ) ) {\\n\\t\\t\\t\\tnodes.push( context.createTextNode( elem ) );\\n\\n\\t\\t\\t// Convert html into DOM nodes\\n\\t\\t\\t} else {\\n\\t\\t\\t\\ttmp = tmp || fragment.appendChild( context.createElement( \\\"div\\\" ) );\\n\\n\\t\\t\\t\\t// Deserialize a standard representation\\n\\t\\t\\t\\ttag = ( rtagName.exec( elem ) || [ \\\"\\\", \\\"\\\" ] )[ 1 ].toLowerCase();\\n\\t\\t\\t\\twrap = wrapMap[ tag ] || wrapMap._default;\\n\\t\\t\\t\\ttmp.innerHTML = wrap[ 1 ] + jQuery.htmlPrefilter( elem ) + wrap[ 2 ];\\n\\n\\t\\t\\t\\t// Descend through wrappers to the right content\\n\\t\\t\\t\\tj = wrap[ 0 ];\\n\\t\\t\\t\\twhile ( j-- ) {\\n\\t\\t\\t\\t\\ttmp = tmp.lastChild;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// Support: Android <=4.0 only, PhantomJS 1 only\\n\\t\\t\\t\\t// push.apply(_, arraylike) throws on ancient WebKit\\n\\t\\t\\t\\tjQuery.merge( nodes, tmp.childNodes );\\n\\n\\t\\t\\t\\t// Remember the top-level container\\n\\t\\t\\t\\ttmp = fragment.firstChild;\\n\\n\\t\\t\\t\\t// Ensure the created nodes are orphaned (#12392)\\n\\t\\t\\t\\ttmp.textContent = \\\"\\\";\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\t// Remove wrapper from fragment\\n\\tfragment.textContent = \\\"\\\";\\n\\n\\ti = 0;\\n\\twhile ( ( elem = nodes[ i++ ] ) ) {\\n\\n\\t\\t// Skip elements already in the context collection (trac-4087)\\n\\t\\tif ( selection && jQuery.inArray( elem, selection ) > -1 ) {\\n\\t\\t\\tif ( ignored ) {\\n\\t\\t\\t\\tignored.push( elem );\\n\\t\\t\\t}\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tcontains = jQuery.contains( elem.ownerDocument, elem );\\n\\n\\t\\t// Append to fragment\\n\\t\\ttmp = getAll( fragment.appendChild( elem ), \\\"script\\\" );\\n\\n\\t\\t// Preserve script evaluation history\\n\\t\\tif ( contains ) {\\n\\t\\t\\tsetGlobalEval( tmp );\\n\\t\\t}\\n\\n\\t\\t// Capture executables\\n\\t\\tif ( scripts ) {\\n\\t\\t\\tj = 0;\\n\\t\\t\\twhile ( ( elem = tmp[ j++ ] ) ) {\\n\\t\\t\\t\\tif ( rscriptType.test( elem.type || \\\"\\\" ) ) {\\n\\t\\t\\t\\t\\tscripts.push( elem );\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\treturn fragment;\\n}\\n\\n\\n( function() {\\n\\tvar fragment = document.createDocumentFragment(),\\n\\t\\tdiv = fragment.appendChild( document.createElement( \\\"div\\\" ) ),\\n\\t\\tinput = document.createElement( \\\"input\\\" );\\n\\n\\t// Support: Android 4.0 - 4.3 only\\n\\t// Check state lost if the name is set (#11217)\\n\\t// Support: Windows Web Apps (WWA)\\n\\t// `name` and `type` must use .setAttribute for WWA (#14901)\\n\\tinput.setAttribute( \\\"type\\\", \\\"radio\\\" );\\n\\tinput.setAttribute( \\\"checked\\\", \\\"checked\\\" );\\n\\tinput.setAttribute( \\\"name\\\", \\\"t\\\" );\\n\\n\\tdiv.appendChild( input );\\n\\n\\t// Support: Android <=4.1 only\\n\\t// Older WebKit doesn't clone checked state correctly in fragments\\n\\tsupport.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;\\n\\n\\t// Support: IE <=11 only\\n\\t// Make sure textarea (and checkbox) defaultValue is properly cloned\\n\\tdiv.innerHTML = \\\"<textarea>x</textarea>\\\";\\n\\tsupport.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;\\n} )();\\nvar documentElement = document.documentElement;\\n\\n\\n\\nvar\\n\\trkeyEvent = /^key/,\\n\\trmouseEvent = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,\\n\\trtypenamespace = /^([^.]*)(?:\\\\.(.+)|)/;\\n\\nfunction returnTrue() {\\n\\treturn true;\\n}\\n\\nfunction returnFalse() {\\n\\treturn false;\\n}\\n\\n// Support: IE <=9 only\\n// See #13393 for more info\\nfunction safeActiveElement() {\\n\\ttry {\\n\\t\\treturn document.activeElement;\\n\\t} catch ( err ) { }\\n}\\n\\nfunction on( elem, types, selector, data, fn, one ) {\\n\\tvar origFn, type;\\n\\n\\t// Types can be a map of types/handlers\\n\\tif ( typeof types === \\\"object\\\" ) {\\n\\n\\t\\t// ( types-Object, selector, data )\\n\\t\\tif ( typeof selector !== \\\"string\\\" ) {\\n\\n\\t\\t\\t// ( types-Object, data )\\n\\t\\t\\tdata = data || selector;\\n\\t\\t\\tselector = undefined;\\n\\t\\t}\\n\\t\\tfor ( type in types ) {\\n\\t\\t\\ton( elem, type, selector, data, types[ type ], one );\\n\\t\\t}\\n\\t\\treturn elem;\\n\\t}\\n\\n\\tif ( data == null && fn == null ) {\\n\\n\\t\\t// ( types, fn )\\n\\t\\tfn = selector;\\n\\t\\tdata = selector = undefined;\\n\\t} else if ( fn == null ) {\\n\\t\\tif ( typeof selector === \\\"string\\\" ) {\\n\\n\\t\\t\\t// ( types, selector, fn )\\n\\t\\t\\tfn = data;\\n\\t\\t\\tdata = undefined;\\n\\t\\t} else {\\n\\n\\t\\t\\t// ( types, data, fn )\\n\\t\\t\\tfn = data;\\n\\t\\t\\tdata = selector;\\n\\t\\t\\tselector = undefined;\\n\\t\\t}\\n\\t}\\n\\tif ( fn === false ) {\\n\\t\\tfn = returnFalse;\\n\\t} else if ( !fn ) {\\n\\t\\treturn elem;\\n\\t}\\n\\n\\tif ( one === 1 ) {\\n\\t\\torigFn = fn;\\n\\t\\tfn = function( event ) {\\n\\n\\t\\t\\t// Can use an empty set, since event contains the info\\n\\t\\t\\tjQuery().off( event );\\n\\t\\t\\treturn origFn.apply( this, arguments );\\n\\t\\t};\\n\\n\\t\\t// Use same guid so caller can remove using origFn\\n\\t\\tfn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );\\n\\t}\\n\\treturn elem.each( function() {\\n\\t\\tjQuery.event.add( this, types, fn, data, selector );\\n\\t} );\\n}\\n\\n/*\\n * Helper functions for managing events -- not part of the public interface.\\n * Props to Dean Edwards' addEvent library for many of the ideas.\\n */\\njQuery.event = {\\n\\n\\tglobal: {},\\n\\n\\tadd: function( elem, types, handler, data, selector ) {\\n\\n\\t\\tvar handleObjIn, eventHandle, tmp,\\n\\t\\t\\tevents, t, handleObj,\\n\\t\\t\\tspecial, handlers, type, namespaces, origType,\\n\\t\\t\\telemData = dataPriv.get( elem );\\n\\n\\t\\t// Don't attach events to noData or text/comment nodes (but allow plain objects)\\n\\t\\tif ( !elemData ) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\t// Caller can pass in an object of custom data in lieu of the handler\\n\\t\\tif ( handler.handler ) {\\n\\t\\t\\thandleObjIn = handler;\\n\\t\\t\\thandler = handleObjIn.handler;\\n\\t\\t\\tselector = handleObjIn.selector;\\n\\t\\t}\\n\\n\\t\\t// Ensure that invalid selectors throw exceptions at attach time\\n\\t\\t// Evaluate against documentElement in case elem is a non-element node (e.g., document)\\n\\t\\tif ( selector ) {\\n\\t\\t\\tjQuery.find.matchesSelector( documentElement, selector );\\n\\t\\t}\\n\\n\\t\\t// Make sure that the handler has a unique ID, used to find/remove it later\\n\\t\\tif ( !handler.guid ) {\\n\\t\\t\\thandler.guid = jQuery.guid++;\\n\\t\\t}\\n\\n\\t\\t// Init the element's event structure and main handler, if this is the first\\n\\t\\tif ( !( events = elemData.events ) ) {\\n\\t\\t\\tevents = elemData.events = {};\\n\\t\\t}\\n\\t\\tif ( !( eventHandle = elemData.handle ) ) {\\n\\t\\t\\teventHandle = elemData.handle = function( e ) {\\n\\n\\t\\t\\t\\t// Discard the second event of a jQuery.event.trigger() and\\n\\t\\t\\t\\t// when an event is called after a page has unloaded\\n\\t\\t\\t\\treturn typeof jQuery !== \\\"undefined\\\" && jQuery.event.triggered !== e.type ?\\n\\t\\t\\t\\t\\tjQuery.event.dispatch.apply( elem, arguments ) : undefined;\\n\\t\\t\\t};\\n\\t\\t}\\n\\n\\t\\t// Handle multiple events separated by a space\\n\\t\\ttypes = ( types || \\\"\\\" ).match( rnothtmlwhite ) || [ \\\"\\\" ];\\n\\t\\tt = types.length;\\n\\t\\twhile ( t-- ) {\\n\\t\\t\\ttmp = rtypenamespace.exec( types[ t ] ) || [];\\n\\t\\t\\ttype = origType = tmp[ 1 ];\\n\\t\\t\\tnamespaces = ( tmp[ 2 ] || \\\"\\\" ).split( \\\".\\\" ).sort();\\n\\n\\t\\t\\t// There *must* be a type, no attaching namespace-only handlers\\n\\t\\t\\tif ( !type ) {\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\t// If event changes its type, use the special event handlers for the changed type\\n\\t\\t\\tspecial = jQuery.event.special[ type ] || {};\\n\\n\\t\\t\\t// If selector defined, determine special event api type, otherwise given type\\n\\t\\t\\ttype = ( selector ? special.delegateType : special.bindType ) || type;\\n\\n\\t\\t\\t// Update special based on newly reset type\\n\\t\\t\\tspecial = jQuery.event.special[ type ] || {};\\n\\n\\t\\t\\t// handleObj is passed to all event handlers\\n\\t\\t\\thandleObj = jQuery.extend( {\\n\\t\\t\\t\\ttype: type,\\n\\t\\t\\t\\torigType: origType,\\n\\t\\t\\t\\tdata: data,\\n\\t\\t\\t\\thandler: handler,\\n\\t\\t\\t\\tguid: handler.guid,\\n\\t\\t\\t\\tselector: selector,\\n\\t\\t\\t\\tneedsContext: selector && jQuery.expr.match.needsContext.test( selector ),\\n\\t\\t\\t\\tnamespace: namespaces.join( \\\".\\\" )\\n\\t\\t\\t}, handleObjIn );\\n\\n\\t\\t\\t// Init the event handler queue if we're the first\\n\\t\\t\\tif ( !( handlers = events[ type ] ) ) {\\n\\t\\t\\t\\thandlers = events[ type ] = [];\\n\\t\\t\\t\\thandlers.delegateCount = 0;\\n\\n\\t\\t\\t\\t// Only use addEventListener if the special events handler returns false\\n\\t\\t\\t\\tif ( !special.setup ||\\n\\t\\t\\t\\t\\tspecial.setup.call( elem, data, namespaces, eventHandle ) === false ) {\\n\\n\\t\\t\\t\\t\\tif ( elem.addEventListener ) {\\n\\t\\t\\t\\t\\t\\telem.addEventListener( type, eventHandle );\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( special.add ) {\\n\\t\\t\\t\\tspecial.add.call( elem, handleObj );\\n\\n\\t\\t\\t\\tif ( !handleObj.handler.guid ) {\\n\\t\\t\\t\\t\\thandleObj.handler.guid = handler.guid;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Add to the element's handler list, delegates in front\\n\\t\\t\\tif ( selector ) {\\n\\t\\t\\t\\thandlers.splice( handlers.delegateCount++, 0, handleObj );\\n\\t\\t\\t} else {\\n\\t\\t\\t\\thandlers.push( handleObj );\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Keep track of which events have ever been used, for event optimization\\n\\t\\t\\tjQuery.event.global[ type ] = true;\\n\\t\\t}\\n\\n\\t},\\n\\n\\t// Detach an event or set of events from an element\\n\\tremove: function( elem, types, handler, selector, mappedTypes ) {\\n\\n\\t\\tvar j, origCount, tmp,\\n\\t\\t\\tevents, t, handleObj,\\n\\t\\t\\tspecial, handlers, type, namespaces, origType,\\n\\t\\t\\telemData = dataPriv.hasData( elem ) && dataPriv.get( elem );\\n\\n\\t\\tif ( !elemData || !( events = elemData.events ) ) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\t// Once for each type.namespace in types; type may be omitted\\n\\t\\ttypes = ( types || \\\"\\\" ).match( rnothtmlwhite ) || [ \\\"\\\" ];\\n\\t\\tt = types.length;\\n\\t\\twhile ( t-- ) {\\n\\t\\t\\ttmp = rtypenamespace.exec( types[ t ] ) || [];\\n\\t\\t\\ttype = origType = tmp[ 1 ];\\n\\t\\t\\tnamespaces = ( tmp[ 2 ] || \\\"\\\" ).split( \\\".\\\" ).sort();\\n\\n\\t\\t\\t// Unbind all events (on this namespace, if provided) for the element\\n\\t\\t\\tif ( !type ) {\\n\\t\\t\\t\\tfor ( type in events ) {\\n\\t\\t\\t\\t\\tjQuery.event.remove( elem, type + types[ t ], handler, selector, true );\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tspecial = jQuery.event.special[ type ] || {};\\n\\t\\t\\ttype = ( selector ? special.delegateType : special.bindType ) || type;\\n\\t\\t\\thandlers = events[ type ] || [];\\n\\t\\t\\ttmp = tmp[ 2 ] &&\\n\\t\\t\\t\\tnew RegExp( \\\"(^|\\\\\\\\.)\\\" + namespaces.join( \\\"\\\\\\\\.(?:.*\\\\\\\\.|)\\\" ) + \\\"(\\\\\\\\.|$)\\\" );\\n\\n\\t\\t\\t// Remove matching events\\n\\t\\t\\torigCount = j = handlers.length;\\n\\t\\t\\twhile ( j-- ) {\\n\\t\\t\\t\\thandleObj = handlers[ j ];\\n\\n\\t\\t\\t\\tif ( ( mappedTypes || origType === handleObj.origType ) &&\\n\\t\\t\\t\\t\\t( !handler || handler.guid === handleObj.guid ) &&\\n\\t\\t\\t\\t\\t( !tmp || tmp.test( handleObj.namespace ) ) &&\\n\\t\\t\\t\\t\\t( !selector || selector === handleObj.selector ||\\n\\t\\t\\t\\t\\t\\tselector === \\\"**\\\" && handleObj.selector ) ) {\\n\\t\\t\\t\\t\\thandlers.splice( j, 1 );\\n\\n\\t\\t\\t\\t\\tif ( handleObj.selector ) {\\n\\t\\t\\t\\t\\t\\thandlers.delegateCount--;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\tif ( special.remove ) {\\n\\t\\t\\t\\t\\t\\tspecial.remove.call( elem, handleObj );\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Remove generic event handler if we removed something and no more handlers exist\\n\\t\\t\\t// (avoids potential for endless recursion during removal of special event handlers)\\n\\t\\t\\tif ( origCount && !handlers.length ) {\\n\\t\\t\\t\\tif ( !special.teardown ||\\n\\t\\t\\t\\t\\tspecial.teardown.call( elem, namespaces, elemData.handle ) === false ) {\\n\\n\\t\\t\\t\\t\\tjQuery.removeEvent( elem, type, elemData.handle );\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tdelete events[ type ];\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t// Remove data and the expando if it's no longer used\\n\\t\\tif ( jQuery.isEmptyObject( events ) ) {\\n\\t\\t\\tdataPriv.remove( elem, \\\"handle events\\\" );\\n\\t\\t}\\n\\t},\\n\\n\\tdispatch: function( nativeEvent ) {\\n\\n\\t\\t// Make a writable jQuery.Event from the native event object\\n\\t\\tvar event = jQuery.event.fix( nativeEvent );\\n\\n\\t\\tvar i, j, ret, matched, handleObj, handlerQueue,\\n\\t\\t\\targs = new Array( arguments.length ),\\n\\t\\t\\thandlers = ( dataPriv.get( this, \\\"events\\\" ) || {} )[ event.type ] || [],\\n\\t\\t\\tspecial = jQuery.event.special[ event.type ] || {};\\n\\n\\t\\t// Use the fix-ed jQuery.Event rather than the (read-only) native event\\n\\t\\targs[ 0 ] = event;\\n\\n\\t\\tfor ( i = 1; i < arguments.length; i++ ) {\\n\\t\\t\\targs[ i ] = arguments[ i ];\\n\\t\\t}\\n\\n\\t\\tevent.delegateTarget = this;\\n\\n\\t\\t// Call the preDispatch hook for the mapped type, and let it bail if desired\\n\\t\\tif ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\t// Determine handlers\\n\\t\\thandlerQueue = jQuery.event.handlers.call( this, event, handlers );\\n\\n\\t\\t// Run delegates first; they may want to stop propagation beneath us\\n\\t\\ti = 0;\\n\\t\\twhile ( ( matched = handlerQueue[ i++ ] ) && !event.isPropagationStopped() ) {\\n\\t\\t\\tevent.currentTarget = matched.elem;\\n\\n\\t\\t\\tj = 0;\\n\\t\\t\\twhile ( ( handleObj = matched.handlers[ j++ ] ) &&\\n\\t\\t\\t\\t!event.isImmediatePropagationStopped() ) {\\n\\n\\t\\t\\t\\t// Triggered event must either 1) have no namespace, or 2) have namespace(s)\\n\\t\\t\\t\\t// a subset or equal to those in the bound event (both can have no namespace).\\n\\t\\t\\t\\tif ( !event.rnamespace || event.rnamespace.test( handleObj.namespace ) ) {\\n\\n\\t\\t\\t\\t\\tevent.handleObj = handleObj;\\n\\t\\t\\t\\t\\tevent.data = handleObj.data;\\n\\n\\t\\t\\t\\t\\tret = ( ( jQuery.event.special[ handleObj.origType ] || {} ).handle ||\\n\\t\\t\\t\\t\\t\\thandleObj.handler ).apply( matched.elem, args );\\n\\n\\t\\t\\t\\t\\tif ( ret !== undefined ) {\\n\\t\\t\\t\\t\\t\\tif ( ( event.result = ret ) === false ) {\\n\\t\\t\\t\\t\\t\\t\\tevent.preventDefault();\\n\\t\\t\\t\\t\\t\\t\\tevent.stopPropagation();\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t// Call the postDispatch hook for the mapped type\\n\\t\\tif ( special.postDispatch ) {\\n\\t\\t\\tspecial.postDispatch.call( this, event );\\n\\t\\t}\\n\\n\\t\\treturn event.result;\\n\\t},\\n\\n\\thandlers: function( event, handlers ) {\\n\\t\\tvar i, handleObj, sel, matchedHandlers, matchedSelectors,\\n\\t\\t\\thandlerQueue = [],\\n\\t\\t\\tdelegateCount = handlers.delegateCount,\\n\\t\\t\\tcur = event.target;\\n\\n\\t\\t// Find delegate handlers\\n\\t\\tif ( delegateCount &&\\n\\n\\t\\t\\t// Support: IE <=9\\n\\t\\t\\t// Black-hole SVG <use> instance trees (trac-13180)\\n\\t\\t\\tcur.nodeType &&\\n\\n\\t\\t\\t// Support: Firefox <=42\\n\\t\\t\\t// Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)\\n\\t\\t\\t// https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click\\n\\t\\t\\t// Support: IE 11 only\\n\\t\\t\\t// ...but not arrow key \\\"clicks\\\" of radio inputs, which can have `button` -1 (gh-2343)\\n\\t\\t\\t!( event.type === \\\"click\\\" && event.button >= 1 ) ) {\\n\\n\\t\\t\\tfor ( ; cur !== this; cur = cur.parentNode || this ) {\\n\\n\\t\\t\\t\\t// Don't check non-elements (#13208)\\n\\t\\t\\t\\t// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)\\n\\t\\t\\t\\tif ( cur.nodeType === 1 && !( event.type === \\\"click\\\" && cur.disabled === true ) ) {\\n\\t\\t\\t\\t\\tmatchedHandlers = [];\\n\\t\\t\\t\\t\\tmatchedSelectors = {};\\n\\t\\t\\t\\t\\tfor ( i = 0; i < delegateCount; i++ ) {\\n\\t\\t\\t\\t\\t\\thandleObj = handlers[ i ];\\n\\n\\t\\t\\t\\t\\t\\t// Don't conflict with Object.prototype properties (#13203)\\n\\t\\t\\t\\t\\t\\tsel = handleObj.selector + \\\" \\\";\\n\\n\\t\\t\\t\\t\\t\\tif ( matchedSelectors[ sel ] === undefined ) {\\n\\t\\t\\t\\t\\t\\t\\tmatchedSelectors[ sel ] = handleObj.needsContext ?\\n\\t\\t\\t\\t\\t\\t\\t\\tjQuery( sel, this ).index( cur ) > -1 :\\n\\t\\t\\t\\t\\t\\t\\t\\tjQuery.find( sel, this, null, [ cur ] ).length;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\tif ( matchedSelectors[ sel ] ) {\\n\\t\\t\\t\\t\\t\\t\\tmatchedHandlers.push( handleObj );\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\tif ( matchedHandlers.length ) {\\n\\t\\t\\t\\t\\t\\thandlerQueue.push( { elem: cur, handlers: matchedHandlers } );\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t// Add the remaining (directly-bound) handlers\\n\\t\\tcur = this;\\n\\t\\tif ( delegateCount < handlers.length ) {\\n\\t\\t\\thandlerQueue.push( { elem: cur, handlers: handlers.slice( delegateCount ) } );\\n\\t\\t}\\n\\n\\t\\treturn handlerQueue;\\n\\t},\\n\\n\\taddProp: function( name, hook ) {\\n\\t\\tObject.defineProperty( jQuery.Event.prototype, name, {\\n\\t\\t\\tenumerable: true,\\n\\t\\t\\tconfigurable: true,\\n\\n\\t\\t\\tget: jQuery.isFunction( hook ) ?\\n\\t\\t\\t\\tfunction() {\\n\\t\\t\\t\\t\\tif ( this.originalEvent ) {\\n\\t\\t\\t\\t\\t\\t\\treturn hook( this.originalEvent );\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t} :\\n\\t\\t\\t\\tfunction() {\\n\\t\\t\\t\\t\\tif ( this.originalEvent ) {\\n\\t\\t\\t\\t\\t\\t\\treturn this.originalEvent[ name ];\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t},\\n\\n\\t\\t\\tset: function( value ) {\\n\\t\\t\\t\\tObject.defineProperty( this, name, {\\n\\t\\t\\t\\t\\tenumerable: true,\\n\\t\\t\\t\\t\\tconfigurable: true,\\n\\t\\t\\t\\t\\twritable: true,\\n\\t\\t\\t\\t\\tvalue: value\\n\\t\\t\\t\\t} );\\n\\t\\t\\t}\\n\\t\\t} );\\n\\t},\\n\\n\\tfix: function( originalEvent ) {\\n\\t\\treturn originalEvent[ jQuery.expando ] ?\\n\\t\\t\\toriginalEvent :\\n\\t\\t\\tnew jQuery.Event( originalEvent );\\n\\t},\\n\\n\\tspecial: {\\n\\t\\tload: {\\n\\n\\t\\t\\t// Prevent triggered image.load events from bubbling to window.load\\n\\t\\t\\tnoBubble: true\\n\\t\\t},\\n\\t\\tfocus: {\\n\\n\\t\\t\\t// Fire native event if possible so blur/focus sequence is correct\\n\\t\\t\\ttrigger: function() {\\n\\t\\t\\t\\tif ( this !== safeActiveElement() && this.focus ) {\\n\\t\\t\\t\\t\\tthis.focus();\\n\\t\\t\\t\\t\\treturn false;\\n\\t\\t\\t\\t}\\n\\t\\t\\t},\\n\\t\\t\\tdelegateType: \\\"focusin\\\"\\n\\t\\t},\\n\\t\\tblur: {\\n\\t\\t\\ttrigger: function() {\\n\\t\\t\\t\\tif ( this === safeActiveElement() && this.blur ) {\\n\\t\\t\\t\\t\\tthis.blur();\\n\\t\\t\\t\\t\\treturn false;\\n\\t\\t\\t\\t}\\n\\t\\t\\t},\\n\\t\\t\\tdelegateType: \\\"focusout\\\"\\n\\t\\t},\\n\\t\\tclick: {\\n\\n\\t\\t\\t// For checkbox, fire native event so checked state will be right\\n\\t\\t\\ttrigger: function() {\\n\\t\\t\\t\\tif ( this.type === \\\"checkbox\\\" && this.click && nodeName( this, \\\"input\\\" ) ) {\\n\\t\\t\\t\\t\\tthis.click();\\n\\t\\t\\t\\t\\treturn false;\\n\\t\\t\\t\\t}\\n\\t\\t\\t},\\n\\n\\t\\t\\t// For cross-browser consistency, don't fire native .click() on links\\n\\t\\t\\t_default: function( event ) {\\n\\t\\t\\t\\treturn nodeName( event.target, \\\"a\\\" );\\n\\t\\t\\t}\\n\\t\\t},\\n\\n\\t\\tbeforeunload: {\\n\\t\\t\\tpostDispatch: function( event ) {\\n\\n\\t\\t\\t\\t// Support: Firefox 20+\\n\\t\\t\\t\\t// Firefox doesn't alert if the returnValue field is not set.\\n\\t\\t\\t\\tif ( event.result !== undefined && event.originalEvent ) {\\n\\t\\t\\t\\t\\tevent.originalEvent.returnValue = event.result;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n};\\n\\njQuery.removeEvent = function( elem, type, handle ) {\\n\\n\\t// This \\\"if\\\" is needed for plain objects\\n\\tif ( elem.removeEventListener ) {\\n\\t\\telem.removeEventListener( type, handle );\\n\\t}\\n};\\n\\njQuery.Event = function( src, props ) {\\n\\n\\t// Allow instantiation without the 'new' keyword\\n\\tif ( !( this instanceof jQuery.Event ) ) {\\n\\t\\treturn new jQuery.Event( src, props );\\n\\t}\\n\\n\\t// Event object\\n\\tif ( src && src.type ) {\\n\\t\\tthis.originalEvent = src;\\n\\t\\tthis.type = src.type;\\n\\n\\t\\t// Events bubbling up the document may have been marked as prevented\\n\\t\\t// by a handler lower down the tree; reflect the correct value.\\n\\t\\tthis.isDefaultPrevented = src.defaultPrevented ||\\n\\t\\t\\t\\tsrc.defaultPrevented === undefined &&\\n\\n\\t\\t\\t\\t// Support: Android <=2.3 only\\n\\t\\t\\t\\tsrc.returnValue === false ?\\n\\t\\t\\treturnTrue :\\n\\t\\t\\treturnFalse;\\n\\n\\t\\t// Create target properties\\n\\t\\t// Support: Safari <=6 - 7 only\\n\\t\\t// Target should not be a text node (#504, #13143)\\n\\t\\tthis.target = ( src.target && src.target.nodeType === 3 ) ?\\n\\t\\t\\tsrc.target.parentNode :\\n\\t\\t\\tsrc.target;\\n\\n\\t\\tthis.currentTarget = src.currentTarget;\\n\\t\\tthis.relatedTarget = src.relatedTarget;\\n\\n\\t// Event type\\n\\t} else {\\n\\t\\tthis.type = src;\\n\\t}\\n\\n\\t// Put explicitly provided properties onto the event object\\n\\tif ( props ) {\\n\\t\\tjQuery.extend( this, props );\\n\\t}\\n\\n\\t// Create a timestamp if incoming event doesn't have one\\n\\tthis.timeStamp = src && src.timeStamp || jQuery.now();\\n\\n\\t// Mark it as fixed\\n\\tthis[ jQuery.expando ] = true;\\n};\\n\\n// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding\\n// https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\\njQuery.Event.prototype = {\\n\\tconstructor: jQuery.Event,\\n\\tisDefaultPrevented: returnFalse,\\n\\tisPropagationStopped: returnFalse,\\n\\tisImmediatePropagationStopped: returnFalse,\\n\\tisSimulated: false,\\n\\n\\tpreventDefault: function() {\\n\\t\\tvar e = this.originalEvent;\\n\\n\\t\\tthis.isDefaultPrevented = returnTrue;\\n\\n\\t\\tif ( e && !this.isSimulated ) {\\n\\t\\t\\te.preventDefault();\\n\\t\\t}\\n\\t},\\n\\tstopPropagation: function() {\\n\\t\\tvar e = this.originalEvent;\\n\\n\\t\\tthis.isPropagationStopped = returnTrue;\\n\\n\\t\\tif ( e && !this.isSimulated ) {\\n\\t\\t\\te.stopPropagation();\\n\\t\\t}\\n\\t},\\n\\tstopImmediatePropagation: function() {\\n\\t\\tvar e = this.originalEvent;\\n\\n\\t\\tthis.isImmediatePropagationStopped = returnTrue;\\n\\n\\t\\tif ( e && !this.isSimulated ) {\\n\\t\\t\\te.stopImmediatePropagation();\\n\\t\\t}\\n\\n\\t\\tthis.stopPropagation();\\n\\t}\\n};\\n\\n// Includes all common event props including KeyEvent and MouseEvent specific props\\njQuery.each( {\\n\\taltKey: true,\\n\\tbubbles: true,\\n\\tcancelable: true,\\n\\tchangedTouches: true,\\n\\tctrlKey: true,\\n\\tdetail: true,\\n\\teventPhase: true,\\n\\tmetaKey: true,\\n\\tpageX: true,\\n\\tpageY: true,\\n\\tshiftKey: true,\\n\\tview: true,\\n\\t\\\"char\\\": true,\\n\\tcharCode: true,\\n\\tkey: true,\\n\\tkeyCode: true,\\n\\tbutton: true,\\n\\tbuttons: true,\\n\\tclientX: true,\\n\\tclientY: true,\\n\\toffsetX: true,\\n\\toffsetY: true,\\n\\tpointerId: true,\\n\\tpointerType: true,\\n\\tscreenX: true,\\n\\tscreenY: true,\\n\\ttargetTouches: true,\\n\\ttoElement: true,\\n\\ttouches: true,\\n\\n\\twhich: function( event ) {\\n\\t\\tvar button = event.button;\\n\\n\\t\\t// Add which for key events\\n\\t\\tif ( event.which == null && rkeyEvent.test( event.type ) ) {\\n\\t\\t\\treturn event.charCode != null ? event.charCode : event.keyCode;\\n\\t\\t}\\n\\n\\t\\t// Add which for click: 1 === left; 2 === middle; 3 === right\\n\\t\\tif ( !event.which && button !== undefined && rmouseEvent.test( event.type ) ) {\\n\\t\\t\\tif ( button & 1 ) {\\n\\t\\t\\t\\treturn 1;\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( button & 2 ) {\\n\\t\\t\\t\\treturn 3;\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( button & 4 ) {\\n\\t\\t\\t\\treturn 2;\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn 0;\\n\\t\\t}\\n\\n\\t\\treturn event.which;\\n\\t}\\n}, jQuery.event.addProp );\\n\\n// Create mouseenter/leave events using mouseover/out and event-time checks\\n// so that event delegation works in jQuery.\\n// Do the same for pointerenter/pointerleave and pointerover/pointerout\\n//\\n// Support: Safari 7 only\\n// Safari sends mouseenter too often; see:\\n// https://bugs.chromium.org/p/chromium/issues/detail?id=470258\\n// for the description of the bug (it existed in older Chrome versions as well).\\njQuery.each( {\\n\\tmouseenter: \\\"mouseover\\\",\\n\\tmouseleave: \\\"mouseout\\\",\\n\\tpointerenter: \\\"pointerover\\\",\\n\\tpointerleave: \\\"pointerout\\\"\\n}, function( orig, fix ) {\\n\\tjQuery.event.special[ orig ] = {\\n\\t\\tdelegateType: fix,\\n\\t\\tbindType: fix,\\n\\n\\t\\thandle: function( event ) {\\n\\t\\t\\tvar ret,\\n\\t\\t\\t\\ttarget = this,\\n\\t\\t\\t\\trelated = event.relatedTarget,\\n\\t\\t\\t\\thandleObj = event.handleObj;\\n\\n\\t\\t\\t// For mouseenter/leave call the handler if related is outside the target.\\n\\t\\t\\t// NB: No relatedTarget if the mouse left/entered the browser window\\n\\t\\t\\tif ( !related || ( related !== target && !jQuery.contains( target, related ) ) ) {\\n\\t\\t\\t\\tevent.type = handleObj.origType;\\n\\t\\t\\t\\tret = handleObj.handler.apply( this, arguments );\\n\\t\\t\\t\\tevent.type = fix;\\n\\t\\t\\t}\\n\\t\\t\\treturn ret;\\n\\t\\t}\\n\\t};\\n} );\\n\\njQuery.fn.extend( {\\n\\n\\ton: function( types, selector, data, fn ) {\\n\\t\\treturn on( this, types, selector, data, fn );\\n\\t},\\n\\tone: function( types, selector, data, fn ) {\\n\\t\\treturn on( this, types, selector, data, fn, 1 );\\n\\t},\\n\\toff: function( types, selector, fn ) {\\n\\t\\tvar handleObj, type;\\n\\t\\tif ( types && types.preventDefault && types.handleObj ) {\\n\\n\\t\\t\\t// ( event )  dispatched jQuery.Event\\n\\t\\t\\thandleObj = types.handleObj;\\n\\t\\t\\tjQuery( types.delegateTarget ).off(\\n\\t\\t\\t\\thandleObj.namespace ?\\n\\t\\t\\t\\t\\thandleObj.origType + \\\".\\\" + handleObj.namespace :\\n\\t\\t\\t\\t\\thandleObj.origType,\\n\\t\\t\\t\\thandleObj.selector,\\n\\t\\t\\t\\thandleObj.handler\\n\\t\\t\\t);\\n\\t\\t\\treturn this;\\n\\t\\t}\\n\\t\\tif ( typeof types === \\\"object\\\" ) {\\n\\n\\t\\t\\t// ( types-object [, selector] )\\n\\t\\t\\tfor ( type in types ) {\\n\\t\\t\\t\\tthis.off( type, selector, types[ type ] );\\n\\t\\t\\t}\\n\\t\\t\\treturn this;\\n\\t\\t}\\n\\t\\tif ( selector === false || typeof selector === \\\"function\\\" ) {\\n\\n\\t\\t\\t// ( types [, fn] )\\n\\t\\t\\tfn = selector;\\n\\t\\t\\tselector = undefined;\\n\\t\\t}\\n\\t\\tif ( fn === false ) {\\n\\t\\t\\tfn = returnFalse;\\n\\t\\t}\\n\\t\\treturn this.each( function() {\\n\\t\\t\\tjQuery.event.remove( this, types, fn, selector );\\n\\t\\t} );\\n\\t}\\n} );\\n\\n\\nvar\\n\\n\\t/* eslint-disable max-len */\\n\\n\\t// See https://github.com/eslint/eslint/issues/3229\\n\\trxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\\\\/\\\\0>\\\\x20\\\\t\\\\r\\\\n\\\\f]*)[^>]*)\\\\/>/gi,\\n\\n\\t/* eslint-enable */\\n\\n\\t// Support: IE <=10 - 11, Edge 12 - 13\\n\\t// In IE/Edge using regex groups here causes severe slowdowns.\\n\\t// See https://connect.microsoft.com/IE/feedback/details/1736512/\\n\\trnoInnerhtml = /<script|<style|<link/i,\\n\\n\\t// checked=\\\"checked\\\" or checked\\n\\trchecked = /checked\\\\s*(?:[^=]|=\\\\s*.checked.)/i,\\n\\trscriptTypeMasked = /^true\\\\/(.*)/,\\n\\trcleanScript = /^\\\\s*<!(?:\\\\[CDATA\\\\[|--)|(?:\\\\]\\\\]|--)>\\\\s*$/g;\\n\\n// Prefer a tbody over its parent table for containing new rows\\nfunction manipulationTarget( elem, content ) {\\n\\tif ( nodeName( elem, \\\"table\\\" ) &&\\n\\t\\tnodeName( content.nodeType !== 11 ? content : content.firstChild, \\\"tr\\\" ) ) {\\n\\n\\t\\treturn jQuery( \\\">tbody\\\", elem )[ 0 ] || elem;\\n\\t}\\n\\n\\treturn elem;\\n}\\n\\n// Replace/restore the type attribute of script elements for safe DOM manipulation\\nfunction disableScript( elem ) {\\n\\telem.type = ( elem.getAttribute( \\\"type\\\" ) !== null ) + \\\"/\\\" + elem.type;\\n\\treturn elem;\\n}\\nfunction restoreScript( elem ) {\\n\\tvar match = rscriptTypeMasked.exec( elem.type );\\n\\n\\tif ( match ) {\\n\\t\\telem.type = match[ 1 ];\\n\\t} else {\\n\\t\\telem.removeAttribute( \\\"type\\\" );\\n\\t}\\n\\n\\treturn elem;\\n}\\n\\nfunction cloneCopyEvent( src, dest ) {\\n\\tvar i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;\\n\\n\\tif ( dest.nodeType !== 1 ) {\\n\\t\\treturn;\\n\\t}\\n\\n\\t// 1. Copy private data: events, handlers, etc.\\n\\tif ( dataPriv.hasData( src ) ) {\\n\\t\\tpdataOld = dataPriv.access( src );\\n\\t\\tpdataCur = dataPriv.set( dest, pdataOld );\\n\\t\\tevents = pdataOld.events;\\n\\n\\t\\tif ( events ) {\\n\\t\\t\\tdelete pdataCur.handle;\\n\\t\\t\\tpdataCur.events = {};\\n\\n\\t\\t\\tfor ( type in events ) {\\n\\t\\t\\t\\tfor ( i = 0, l = events[ type ].length; i < l; i++ ) {\\n\\t\\t\\t\\t\\tjQuery.event.add( dest, type, events[ type ][ i ] );\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\t// 2. Copy user data\\n\\tif ( dataUser.hasData( src ) ) {\\n\\t\\tudataOld = dataUser.access( src );\\n\\t\\tudataCur = jQuery.extend( {}, udataOld );\\n\\n\\t\\tdataUser.set( dest, udataCur );\\n\\t}\\n}\\n\\n// Fix IE bugs, see support tests\\nfunction fixInput( src, dest ) {\\n\\tvar nodeName = dest.nodeName.toLowerCase();\\n\\n\\t// Fails to persist the checked state of a cloned checkbox or radio button.\\n\\tif ( nodeName === \\\"input\\\" && rcheckableType.test( src.type ) ) {\\n\\t\\tdest.checked = src.checked;\\n\\n\\t// Fails to return the selected option to the default selected state when cloning options\\n\\t} else if ( nodeName === \\\"input\\\" || nodeName === \\\"textarea\\\" ) {\\n\\t\\tdest.defaultValue = src.defaultValue;\\n\\t}\\n}\\n\\nfunction domManip( collection, args, callback, ignored ) {\\n\\n\\t// Flatten any nested arrays\\n\\targs = concat.apply( [], args );\\n\\n\\tvar fragment, first, scripts, hasScripts, node, doc,\\n\\t\\ti = 0,\\n\\t\\tl = collection.length,\\n\\t\\tiNoClone = l - 1,\\n\\t\\tvalue = args[ 0 ],\\n\\t\\tisFunction = jQuery.isFunction( value );\\n\\n\\t// We can't cloneNode fragments that contain checked, in WebKit\\n\\tif ( isFunction ||\\n\\t\\t\\t( l > 1 && typeof value === \\\"string\\\" &&\\n\\t\\t\\t\\t!support.checkClone && rchecked.test( value ) ) ) {\\n\\t\\treturn collection.each( function( index ) {\\n\\t\\t\\tvar self = collection.eq( index );\\n\\t\\t\\tif ( isFunction ) {\\n\\t\\t\\t\\targs[ 0 ] = value.call( this, index, self.html() );\\n\\t\\t\\t}\\n\\t\\t\\tdomManip( self, args, callback, ignored );\\n\\t\\t} );\\n\\t}\\n\\n\\tif ( l ) {\\n\\t\\tfragment = buildFragment( args, collection[ 0 ].ownerDocument, false, collection, ignored );\\n\\t\\tfirst = fragment.firstChild;\\n\\n\\t\\tif ( fragment.childNodes.length === 1 ) {\\n\\t\\t\\tfragment = first;\\n\\t\\t}\\n\\n\\t\\t// Require either new content or an interest in ignored elements to invoke the callback\\n\\t\\tif ( first || ignored ) {\\n\\t\\t\\tscripts = jQuery.map( getAll( fragment, \\\"script\\\" ), disableScript );\\n\\t\\t\\thasScripts = scripts.length;\\n\\n\\t\\t\\t// Use the original fragment for the last item\\n\\t\\t\\t// instead of the first because it can end up\\n\\t\\t\\t// being emptied incorrectly in certain situations (#8070).\\n\\t\\t\\tfor ( ; i < l; i++ ) {\\n\\t\\t\\t\\tnode = fragment;\\n\\n\\t\\t\\t\\tif ( i !== iNoClone ) {\\n\\t\\t\\t\\t\\tnode = jQuery.clone( node, true, true );\\n\\n\\t\\t\\t\\t\\t// Keep references to cloned scripts for later restoration\\n\\t\\t\\t\\t\\tif ( hasScripts ) {\\n\\n\\t\\t\\t\\t\\t\\t// Support: Android <=4.0 only, PhantomJS 1 only\\n\\t\\t\\t\\t\\t\\t// push.apply(_, arraylike) throws on ancient WebKit\\n\\t\\t\\t\\t\\t\\tjQuery.merge( scripts, getAll( node, \\\"script\\\" ) );\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tcallback.call( collection[ i ], node, i );\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( hasScripts ) {\\n\\t\\t\\t\\tdoc = scripts[ scripts.length - 1 ].ownerDocument;\\n\\n\\t\\t\\t\\t// Reenable scripts\\n\\t\\t\\t\\tjQuery.map( scripts, restoreScript );\\n\\n\\t\\t\\t\\t// Evaluate executable scripts on first document insertion\\n\\t\\t\\t\\tfor ( i = 0; i < hasScripts; i++ ) {\\n\\t\\t\\t\\t\\tnode = scripts[ i ];\\n\\t\\t\\t\\t\\tif ( rscriptType.test( node.type || \\\"\\\" ) &&\\n\\t\\t\\t\\t\\t\\t!dataPriv.access( node, \\\"globalEval\\\" ) &&\\n\\t\\t\\t\\t\\t\\tjQuery.contains( doc, node ) ) {\\n\\n\\t\\t\\t\\t\\t\\tif ( node.src ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t// Optional AJAX dependency, but won't run scripts if not present\\n\\t\\t\\t\\t\\t\\t\\tif ( jQuery._evalUrl ) {\\n\\t\\t\\t\\t\\t\\t\\t\\tjQuery._evalUrl( node.src );\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\tDOMEval( node.textContent.replace( rcleanScript, \\\"\\\" ), doc );\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\treturn collection;\\n}\\n\\nfunction remove( elem, selector, keepData ) {\\n\\tvar node,\\n\\t\\tnodes = selector ? jQuery.filter( selector, elem ) : elem,\\n\\t\\ti = 0;\\n\\n\\tfor ( ; ( node = nodes[ i ] ) != null; i++ ) {\\n\\t\\tif ( !keepData && node.nodeType === 1 ) {\\n\\t\\t\\tjQuery.cleanData( getAll( node ) );\\n\\t\\t}\\n\\n\\t\\tif ( node.parentNode ) {\\n\\t\\t\\tif ( keepData && jQuery.contains( node.ownerDocument, node ) ) {\\n\\t\\t\\t\\tsetGlobalEval( getAll( node, \\\"script\\\" ) );\\n\\t\\t\\t}\\n\\t\\t\\tnode.parentNode.removeChild( node );\\n\\t\\t}\\n\\t}\\n\\n\\treturn elem;\\n}\\n\\njQuery.extend( {\\n\\thtmlPrefilter: function( html ) {\\n\\t\\treturn html.replace( rxhtmlTag, \\\"<$1></$2>\\\" );\\n\\t},\\n\\n\\tclone: function( elem, dataAndEvents, deepDataAndEvents ) {\\n\\t\\tvar i, l, srcElements, destElements,\\n\\t\\t\\tclone = elem.cloneNode( true ),\\n\\t\\t\\tinPage = jQuery.contains( elem.ownerDocument, elem );\\n\\n\\t\\t// Fix IE cloning issues\\n\\t\\tif ( !support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) &&\\n\\t\\t\\t\\t!jQuery.isXMLDoc( elem ) ) {\\n\\n\\t\\t\\t// We eschew Sizzle here for performance reasons: https://jsperf.com/getall-vs-sizzle/2\\n\\t\\t\\tdestElements = getAll( clone );\\n\\t\\t\\tsrcElements = getAll( elem );\\n\\n\\t\\t\\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\\n\\t\\t\\t\\tfixInput( srcElements[ i ], destElements[ i ] );\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t// Copy the events from the original to the clone\\n\\t\\tif ( dataAndEvents ) {\\n\\t\\t\\tif ( deepDataAndEvents ) {\\n\\t\\t\\t\\tsrcElements = srcElements || getAll( elem );\\n\\t\\t\\t\\tdestElements = destElements || getAll( clone );\\n\\n\\t\\t\\t\\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\\n\\t\\t\\t\\t\\tcloneCopyEvent( srcElements[ i ], destElements[ i ] );\\n\\t\\t\\t\\t}\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tcloneCopyEvent( elem, clone );\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t// Preserve script evaluation history\\n\\t\\tdestElements = getAll( clone, \\\"script\\\" );\\n\\t\\tif ( destElements.length > 0 ) {\\n\\t\\t\\tsetGlobalEval( destElements, !inPage && getAll( elem, \\\"script\\\" ) );\\n\\t\\t}\\n\\n\\t\\t// Return the cloned set\\n\\t\\treturn clone;\\n\\t},\\n\\n\\tcleanData: function( elems ) {\\n\\t\\tvar data, elem, type,\\n\\t\\t\\tspecial = jQuery.event.special,\\n\\t\\t\\ti = 0;\\n\\n\\t\\tfor ( ; ( elem = elems[ i ] ) !== undefined; i++ ) {\\n\\t\\t\\tif ( acceptData( elem ) ) {\\n\\t\\t\\t\\tif ( ( data = elem[ dataPriv.expando ] ) ) {\\n\\t\\t\\t\\t\\tif ( data.events ) {\\n\\t\\t\\t\\t\\t\\tfor ( type in data.events ) {\\n\\t\\t\\t\\t\\t\\t\\tif ( special[ type ] ) {\\n\\t\\t\\t\\t\\t\\t\\t\\tjQuery.event.remove( elem, type );\\n\\n\\t\\t\\t\\t\\t\\t\\t// This is a shortcut to avoid jQuery.event.remove's overhead\\n\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\tjQuery.removeEvent( elem, type, data.handle );\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t// Support: Chrome <=35 - 45+\\n\\t\\t\\t\\t\\t// Assign undefined instead of using delete, see Data#remove\\n\\t\\t\\t\\t\\telem[ dataPriv.expando ] = undefined;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tif ( elem[ dataUser.expando ] ) {\\n\\n\\t\\t\\t\\t\\t// Support: Chrome <=35 - 45+\\n\\t\\t\\t\\t\\t// Assign undefined instead of using delete, see Data#remove\\n\\t\\t\\t\\t\\telem[ dataUser.expando ] = undefined;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n} );\\n\\njQuery.fn.extend( {\\n\\tdetach: function( selector ) {\\n\\t\\treturn remove( this, selector, true );\\n\\t},\\n\\n\\tremove: function( selector ) {\\n\\t\\treturn remove( this, selector );\\n\\t},\\n\\n\\ttext: function( value ) {\\n\\t\\treturn access( this, function( value ) {\\n\\t\\t\\treturn value === undefined ?\\n\\t\\t\\t\\tjQuery.text( this ) :\\n\\t\\t\\t\\tthis.empty().each( function() {\\n\\t\\t\\t\\t\\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\\n\\t\\t\\t\\t\\t\\tthis.textContent = value;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t} );\\n\\t\\t}, null, value, arguments.length );\\n\\t},\\n\\n\\tappend: function() {\\n\\t\\treturn domManip( this, arguments, function( elem ) {\\n\\t\\t\\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\\n\\t\\t\\t\\tvar target = manipulationTarget( this, elem );\\n\\t\\t\\t\\ttarget.appendChild( elem );\\n\\t\\t\\t}\\n\\t\\t} );\\n\\t},\\n\\n\\tprepend: function() {\\n\\t\\treturn domManip( this, arguments, function( elem ) {\\n\\t\\t\\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\\n\\t\\t\\t\\tvar target = manipulationTarget( this, elem );\\n\\t\\t\\t\\ttarget.insertBefore( elem, target.firstChild );\\n\\t\\t\\t}\\n\\t\\t} );\\n\\t},\\n\\n\\tbefore: function() {\\n\\t\\treturn domManip( this, arguments, function( elem ) {\\n\\t\\t\\tif ( this.parentNode ) {\\n\\t\\t\\t\\tthis.parentNode.insertBefore( elem, this );\\n\\t\\t\\t}\\n\\t\\t} );\\n\\t},\\n\\n\\tafter: function() {\\n\\t\\treturn domManip( this, arguments, function( elem ) {\\n\\t\\t\\tif ( this.parentNode ) {\\n\\t\\t\\t\\tthis.parentNode.insertBefore( elem, this.nextSibling );\\n\\t\\t\\t}\\n\\t\\t} );\\n\\t},\\n\\n\\tempty: function() {\\n\\t\\tvar elem,\\n\\t\\t\\ti = 0;\\n\\n\\t\\tfor ( ; ( elem = this[ i ] ) != null; i++ ) {\\n\\t\\t\\tif ( elem.nodeType === 1 ) {\\n\\n\\t\\t\\t\\t// Prevent memory leaks\\n\\t\\t\\t\\tjQuery.cleanData( getAll( elem, false ) );\\n\\n\\t\\t\\t\\t// Remove any remaining nodes\\n\\t\\t\\t\\telem.textContent = \\\"\\\";\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn this;\\n\\t},\\n\\n\\tclone: function( dataAndEvents, deepDataAndEvents ) {\\n\\t\\tdataAndEvents = dataAndEvents == null ? false : dataAndEvents;\\n\\t\\tdeepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;\\n\\n\\t\\treturn this.map( function() {\\n\\t\\t\\treturn jQuery.clone( this, dataAndEvents, deepDataAndEvents );\\n\\t\\t} );\\n\\t},\\n\\n\\thtml: function( value ) {\\n\\t\\treturn access( this, function( value ) {\\n\\t\\t\\tvar elem = this[ 0 ] || {},\\n\\t\\t\\t\\ti = 0,\\n\\t\\t\\t\\tl = this.length;\\n\\n\\t\\t\\tif ( value === undefined && elem.nodeType === 1 ) {\\n\\t\\t\\t\\treturn elem.innerHTML;\\n\\t\\t\\t}\\n\\n\\t\\t\\t// See if we can take a shortcut and just use innerHTML\\n\\t\\t\\tif ( typeof value === \\\"string\\\" && !rnoInnerhtml.test( value ) &&\\n\\t\\t\\t\\t!wrapMap[ ( rtagName.exec( value ) || [ \\\"\\\", \\\"\\\" ] )[ 1 ].toLowerCase() ] ) {\\n\\n\\t\\t\\t\\tvalue = jQuery.htmlPrefilter( value );\\n\\n\\t\\t\\t\\ttry {\\n\\t\\t\\t\\t\\tfor ( ; i < l; i++ ) {\\n\\t\\t\\t\\t\\t\\telem = this[ i ] || {};\\n\\n\\t\\t\\t\\t\\t\\t// Remove element nodes and prevent memory leaks\\n\\t\\t\\t\\t\\t\\tif ( elem.nodeType === 1 ) {\\n\\t\\t\\t\\t\\t\\t\\tjQuery.cleanData( getAll( elem, false ) );\\n\\t\\t\\t\\t\\t\\t\\telem.innerHTML = value;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\telem = 0;\\n\\n\\t\\t\\t\\t// If using innerHTML throws an exception, use the fallback method\\n\\t\\t\\t\\t} catch ( e ) {}\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( elem ) {\\n\\t\\t\\t\\tthis.empty().append( value );\\n\\t\\t\\t}\\n\\t\\t}, null, value, arguments.length );\\n\\t},\\n\\n\\treplaceWith: function() {\\n\\t\\tvar ignored = [];\\n\\n\\t\\t// Make the changes, replacing each non-ignored context element with the new content\\n\\t\\treturn domManip( this, arguments, function( elem ) {\\n\\t\\t\\tvar parent = this.parentNode;\\n\\n\\t\\t\\tif ( jQuery.inArray( this, ignored ) < 0 ) {\\n\\t\\t\\t\\tjQuery.cleanData( getAll( this ) );\\n\\t\\t\\t\\tif ( parent ) {\\n\\t\\t\\t\\t\\tparent.replaceChild( elem, this );\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t// Force callback invocation\\n\\t\\t}, ignored );\\n\\t}\\n} );\\n\\njQuery.each( {\\n\\tappendTo: \\\"append\\\",\\n\\tprependTo: \\\"prepend\\\",\\n\\tinsertBefore: \\\"before\\\",\\n\\tinsertAfter: \\\"after\\\",\\n\\treplaceAll: \\\"replaceWith\\\"\\n}, function( name, original ) {\\n\\tjQuery.fn[ name ] = function( selector ) {\\n\\t\\tvar elems,\\n\\t\\t\\tret = [],\\n\\t\\t\\tinsert = jQuery( selector ),\\n\\t\\t\\tlast = insert.length - 1,\\n\\t\\t\\ti = 0;\\n\\n\\t\\tfor ( ; i <= last; i++ ) {\\n\\t\\t\\telems = i === last ? this : this.clone( true );\\n\\t\\t\\tjQuery( insert[ i ] )[ original ]( elems );\\n\\n\\t\\t\\t// Support: Android <=4.0 only, PhantomJS 1 only\\n\\t\\t\\t// .get() because push.apply(_, arraylike) throws on ancient WebKit\\n\\t\\t\\tpush.apply( ret, elems.get() );\\n\\t\\t}\\n\\n\\t\\treturn this.pushStack( ret );\\n\\t};\\n} );\\nvar rmargin = ( /^margin/ );\\n\\nvar rnumnonpx = new RegExp( \\\"^(\\\" + pnum + \\\")(?!px)[a-z%]+$\\\", \\\"i\\\" );\\n\\nvar getStyles = function( elem ) {\\n\\n\\t\\t// Support: IE <=11 only, Firefox <=30 (#15098, #14150)\\n\\t\\t// IE throws on elements created in popups\\n\\t\\t// FF meanwhile throws on frame elements through \\\"defaultView.getComputedStyle\\\"\\n\\t\\tvar view = elem.ownerDocument.defaultView;\\n\\n\\t\\tif ( !view || !view.opener ) {\\n\\t\\t\\tview = window;\\n\\t\\t}\\n\\n\\t\\treturn view.getComputedStyle( elem );\\n\\t};\\n\\n\\n\\n( function() {\\n\\n\\t// Executing both pixelPosition & boxSizingReliable tests require only one layout\\n\\t// so they're executed at the same time to save the second computation.\\n\\tfunction computeStyleTests() {\\n\\n\\t\\t// This is a singleton, we need to execute it only once\\n\\t\\tif ( !div ) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tdiv.style.cssText =\\n\\t\\t\\t\\\"box-sizing:border-box;\\\" +\\n\\t\\t\\t\\\"position:relative;display:block;\\\" +\\n\\t\\t\\t\\\"margin:auto;border:1px;padding:1px;\\\" +\\n\\t\\t\\t\\\"top:1%;width:50%\\\";\\n\\t\\tdiv.innerHTML = \\\"\\\";\\n\\t\\tdocumentElement.appendChild( container );\\n\\n\\t\\tvar divStyle = window.getComputedStyle( div );\\n\\t\\tpixelPositionVal = divStyle.top !== \\\"1%\\\";\\n\\n\\t\\t// Support: Android 4.0 - 4.3 only, Firefox <=3 - 44\\n\\t\\treliableMarginLeftVal = divStyle.marginLeft === \\\"2px\\\";\\n\\t\\tboxSizingReliableVal = divStyle.width === \\\"4px\\\";\\n\\n\\t\\t// Support: Android 4.0 - 4.3 only\\n\\t\\t// Some styles come back with percentage values, even though they shouldn't\\n\\t\\tdiv.style.marginRight = \\\"50%\\\";\\n\\t\\tpixelMarginRightVal = divStyle.marginRight === \\\"4px\\\";\\n\\n\\t\\tdocumentElement.removeChild( container );\\n\\n\\t\\t// Nullify the div so it wouldn't be stored in the memory and\\n\\t\\t// it will also be a sign that checks already performed\\n\\t\\tdiv = null;\\n\\t}\\n\\n\\tvar pixelPositionVal, boxSizingReliableVal, pixelMarginRightVal, reliableMarginLeftVal,\\n\\t\\tcontainer = document.createElement( \\\"div\\\" ),\\n\\t\\tdiv = document.createElement( \\\"div\\\" );\\n\\n\\t// Finish early in limited (non-browser) environments\\n\\tif ( !div.style ) {\\n\\t\\treturn;\\n\\t}\\n\\n\\t// Support: IE <=9 - 11 only\\n\\t// Style of cloned element affects source element cloned (#8908)\\n\\tdiv.style.backgroundClip = \\\"content-box\\\";\\n\\tdiv.cloneNode( true ).style.backgroundClip = \\\"\\\";\\n\\tsupport.clearCloneStyle = div.style.backgroundClip === \\\"content-box\\\";\\n\\n\\tcontainer.style.cssText = \\\"border:0;width:8px;height:0;top:0;left:-9999px;\\\" +\\n\\t\\t\\\"padding:0;margin-top:1px;position:absolute\\\";\\n\\tcontainer.appendChild( div );\\n\\n\\tjQuery.extend( support, {\\n\\t\\tpixelPosition: function() {\\n\\t\\t\\tcomputeStyleTests();\\n\\t\\t\\treturn pixelPositionVal;\\n\\t\\t},\\n\\t\\tboxSizingReliable: function() {\\n\\t\\t\\tcomputeStyleTests();\\n\\t\\t\\treturn boxSizingReliableVal;\\n\\t\\t},\\n\\t\\tpixelMarginRight: function() {\\n\\t\\t\\tcomputeStyleTests();\\n\\t\\t\\treturn pixelMarginRightVal;\\n\\t\\t},\\n\\t\\treliableMarginLeft: function() {\\n\\t\\t\\tcomputeStyleTests();\\n\\t\\t\\treturn reliableMarginLeftVal;\\n\\t\\t}\\n\\t} );\\n} )();\\n\\n\\nfunction curCSS( elem, name, computed ) {\\n\\tvar width, minWidth, maxWidth, ret,\\n\\n\\t\\t// Support: Firefox 51+\\n\\t\\t// Retrieving style before computed somehow\\n\\t\\t// fixes an issue with getting wrong values\\n\\t\\t// on detached elements\\n\\t\\tstyle = elem.style;\\n\\n\\tcomputed = computed || getStyles( elem );\\n\\n\\t// getPropertyValue is needed for:\\n\\t//   .css('filter') (IE 9 only, #12537)\\n\\t//   .css('--customProperty) (#3144)\\n\\tif ( computed ) {\\n\\t\\tret = computed.getPropertyValue( name ) || computed[ name ];\\n\\n\\t\\tif ( ret === \\\"\\\" && !jQuery.contains( elem.ownerDocument, elem ) ) {\\n\\t\\t\\tret = jQuery.style( elem, name );\\n\\t\\t}\\n\\n\\t\\t// A tribute to the \\\"awesome hack by Dean Edwards\\\"\\n\\t\\t// Android Browser returns percentage for some values,\\n\\t\\t// but width seems to be reliably pixels.\\n\\t\\t// This is against the CSSOM draft spec:\\n\\t\\t// https://drafts.csswg.org/cssom/#resolved-values\\n\\t\\tif ( !support.pixelMarginRight() && rnumnonpx.test( ret ) && rmargin.test( name ) ) {\\n\\n\\t\\t\\t// Remember the original values\\n\\t\\t\\twidth = style.width;\\n\\t\\t\\tminWidth = style.minWidth;\\n\\t\\t\\tmaxWidth = style.maxWidth;\\n\\n\\t\\t\\t// Put in the new values to get a computed value out\\n\\t\\t\\tstyle.minWidth = style.maxWidth = style.width = ret;\\n\\t\\t\\tret = computed.width;\\n\\n\\t\\t\\t// Revert the changed values\\n\\t\\t\\tstyle.width = width;\\n\\t\\t\\tstyle.minWidth = minWidth;\\n\\t\\t\\tstyle.maxWidth = maxWidth;\\n\\t\\t}\\n\\t}\\n\\n\\treturn ret !== undefined ?\\n\\n\\t\\t// Support: IE <=9 - 11 only\\n\\t\\t// IE returns zIndex value as an integer.\\n\\t\\tret + \\\"\\\" :\\n\\t\\tret;\\n}\\n\\n\\nfunction addGetHookIf( conditionFn, hookFn ) {\\n\\n\\t// Define the hook, we'll check on the first run if it's really needed.\\n\\treturn {\\n\\t\\tget: function() {\\n\\t\\t\\tif ( conditionFn() ) {\\n\\n\\t\\t\\t\\t// Hook not needed (or it's not possible to use it due\\n\\t\\t\\t\\t// to missing dependency), remove it.\\n\\t\\t\\t\\tdelete this.get;\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Hook needed; redefine it so that the support test is not executed again.\\n\\t\\t\\treturn ( this.get = hookFn ).apply( this, arguments );\\n\\t\\t}\\n\\t};\\n}\\n\\n\\nvar\\n\\n\\t// Swappable if display is none or starts with table\\n\\t// except \\\"table\\\", \\\"table-cell\\\", or \\\"table-caption\\\"\\n\\t// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display\\n\\trdisplayswap = /^(none|table(?!-c[ea]).+)/,\\n\\trcustomProp = /^--/,\\n\\tcssShow = { position: \\\"absolute\\\", visibility: \\\"hidden\\\", display: \\\"block\\\" },\\n\\tcssNormalTransform = {\\n\\t\\tletterSpacing: \\\"0\\\",\\n\\t\\tfontWeight: \\\"400\\\"\\n\\t},\\n\\n\\tcssPrefixes = [ \\\"Webkit\\\", \\\"Moz\\\", \\\"ms\\\" ],\\n\\temptyStyle = document.createElement( \\\"div\\\" ).style;\\n\\n// Return a css property mapped to a potentially vendor prefixed property\\nfunction vendorPropName( name ) {\\n\\n\\t// Shortcut for names that are not vendor prefixed\\n\\tif ( name in emptyStyle ) {\\n\\t\\treturn name;\\n\\t}\\n\\n\\t// Check for vendor prefixed names\\n\\tvar capName = name[ 0 ].toUpperCase() + name.slice( 1 ),\\n\\t\\ti = cssPrefixes.length;\\n\\n\\twhile ( i-- ) {\\n\\t\\tname = cssPrefixes[ i ] + capName;\\n\\t\\tif ( name in emptyStyle ) {\\n\\t\\t\\treturn name;\\n\\t\\t}\\n\\t}\\n}\\n\\n// Return a property mapped along what jQuery.cssProps suggests or to\\n// a vendor prefixed property.\\nfunction finalPropName( name ) {\\n\\tvar ret = jQuery.cssProps[ name ];\\n\\tif ( !ret ) {\\n\\t\\tret = jQuery.cssProps[ name ] = vendorPropName( name ) || name;\\n\\t}\\n\\treturn ret;\\n}\\n\\nfunction setPositiveNumber( elem, value, subtract ) {\\n\\n\\t// Any relative (+/-) values have already been\\n\\t// normalized at this point\\n\\tvar matches = rcssNum.exec( value );\\n\\treturn matches ?\\n\\n\\t\\t// Guard against undefined \\\"subtract\\\", e.g., when used as in cssHooks\\n\\t\\tMath.max( 0, matches[ 2 ] - ( subtract || 0 ) ) + ( matches[ 3 ] || \\\"px\\\" ) :\\n\\t\\tvalue;\\n}\\n\\nfunction augmentWidthOrHeight( elem, name, extra, isBorderBox, styles ) {\\n\\tvar i,\\n\\t\\tval = 0;\\n\\n\\t// If we already have the right measurement, avoid augmentation\\n\\tif ( extra === ( isBorderBox ? \\\"border\\\" : \\\"content\\\" ) ) {\\n\\t\\ti = 4;\\n\\n\\t// Otherwise initialize for horizontal or vertical properties\\n\\t} else {\\n\\t\\ti = name === \\\"width\\\" ? 1 : 0;\\n\\t}\\n\\n\\tfor ( ; i < 4; i += 2 ) {\\n\\n\\t\\t// Both box models exclude margin, so add it if we want it\\n\\t\\tif ( extra === \\\"margin\\\" ) {\\n\\t\\t\\tval += jQuery.css( elem, extra + cssExpand[ i ], true, styles );\\n\\t\\t}\\n\\n\\t\\tif ( isBorderBox ) {\\n\\n\\t\\t\\t// border-box includes padding, so remove it if we want content\\n\\t\\t\\tif ( extra === \\\"content\\\" ) {\\n\\t\\t\\t\\tval -= jQuery.css( elem, \\\"padding\\\" + cssExpand[ i ], true, styles );\\n\\t\\t\\t}\\n\\n\\t\\t\\t// At this point, extra isn't border nor margin, so remove border\\n\\t\\t\\tif ( extra !== \\\"margin\\\" ) {\\n\\t\\t\\t\\tval -= jQuery.css( elem, \\\"border\\\" + cssExpand[ i ] + \\\"Width\\\", true, styles );\\n\\t\\t\\t}\\n\\t\\t} else {\\n\\n\\t\\t\\t// At this point, extra isn't content, so add padding\\n\\t\\t\\tval += jQuery.css( elem, \\\"padding\\\" + cssExpand[ i ], true, styles );\\n\\n\\t\\t\\t// At this point, extra isn't content nor padding, so add border\\n\\t\\t\\tif ( extra !== \\\"padding\\\" ) {\\n\\t\\t\\t\\tval += jQuery.css( elem, \\\"border\\\" + cssExpand[ i ] + \\\"Width\\\", true, styles );\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\treturn val;\\n}\\n\\nfunction getWidthOrHeight( elem, name, extra ) {\\n\\n\\t// Start with computed style\\n\\tvar valueIsBorderBox,\\n\\t\\tstyles = getStyles( elem ),\\n\\t\\tval = curCSS( elem, name, styles ),\\n\\t\\tisBorderBox = jQuery.css( elem, \\\"boxSizing\\\", false, styles ) === \\\"border-box\\\";\\n\\n\\t// Computed unit is not pixels. Stop here and return.\\n\\tif ( rnumnonpx.test( val ) ) {\\n\\t\\treturn val;\\n\\t}\\n\\n\\t// Check for style in case a browser which returns unreliable values\\n\\t// for getComputedStyle silently falls back to the reliable elem.style\\n\\tvalueIsBorderBox = isBorderBox &&\\n\\t\\t( support.boxSizingReliable() || val === elem.style[ name ] );\\n\\n\\t// Fall back to offsetWidth/Height when value is \\\"auto\\\"\\n\\t// This happens for inline elements with no explicit setting (gh-3571)\\n\\tif ( val === \\\"auto\\\" ) {\\n\\t\\tval = elem[ \\\"offset\\\" + name[ 0 ].toUpperCase() + name.slice( 1 ) ];\\n\\t}\\n\\n\\t// Normalize \\\"\\\", auto, and prepare for extra\\n\\tval = parseFloat( val ) || 0;\\n\\n\\t// Use the active box-sizing model to add/subtract irrelevant styles\\n\\treturn ( val +\\n\\t\\taugmentWidthOrHeight(\\n\\t\\t\\telem,\\n\\t\\t\\tname,\\n\\t\\t\\textra || ( isBorderBox ? \\\"border\\\" : \\\"content\\\" ),\\n\\t\\t\\tvalueIsBorderBox,\\n\\t\\t\\tstyles\\n\\t\\t)\\n\\t) + \\\"px\\\";\\n}\\n\\njQuery.extend( {\\n\\n\\t// Add in style property hooks for overriding the default\\n\\t// behavior of getting and setting a style property\\n\\tcssHooks: {\\n\\t\\topacity: {\\n\\t\\t\\tget: function( elem, computed ) {\\n\\t\\t\\t\\tif ( computed ) {\\n\\n\\t\\t\\t\\t\\t// We should always get a number back from opacity\\n\\t\\t\\t\\t\\tvar ret = curCSS( elem, \\\"opacity\\\" );\\n\\t\\t\\t\\t\\treturn ret === \\\"\\\" ? \\\"1\\\" : ret;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t},\\n\\n\\t// Don't automatically add \\\"px\\\" to these possibly-unitless properties\\n\\tcssNumber: {\\n\\t\\t\\\"animationIterationCount\\\": true,\\n\\t\\t\\\"columnCount\\\": true,\\n\\t\\t\\\"fillOpacity\\\": true,\\n\\t\\t\\\"flexGrow\\\": true,\\n\\t\\t\\\"flexShrink\\\": true,\\n\\t\\t\\\"fontWeight\\\": true,\\n\\t\\t\\\"lineHeight\\\": true,\\n\\t\\t\\\"opacity\\\": true,\\n\\t\\t\\\"order\\\": true,\\n\\t\\t\\\"orphans\\\": true,\\n\\t\\t\\\"widows\\\": true,\\n\\t\\t\\\"zIndex\\\": true,\\n\\t\\t\\\"zoom\\\": true\\n\\t},\\n\\n\\t// Add in properties whose names you wish to fix before\\n\\t// setting or getting the value\\n\\tcssProps: {\\n\\t\\t\\\"float\\\": \\\"cssFloat\\\"\\n\\t},\\n\\n\\t// Get and set the style property on a DOM Node\\n\\tstyle: function( elem, name, value, extra ) {\\n\\n\\t\\t// Don't set styles on text and comment nodes\\n\\t\\tif ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\t// Make sure that we're working with the right name\\n\\t\\tvar ret, type, hooks,\\n\\t\\t\\torigName = jQuery.camelCase( name ),\\n\\t\\t\\tisCustomProp = rcustomProp.test( name ),\\n\\t\\t\\tstyle = elem.style;\\n\\n\\t\\t// Make sure that we're working with the right name. We don't\\n\\t\\t// want to query the value if it is a CSS custom property\\n\\t\\t// since they are user-defined.\\n\\t\\tif ( !isCustomProp ) {\\n\\t\\t\\tname = finalPropName( origName );\\n\\t\\t}\\n\\n\\t\\t// Gets hook for the prefixed version, then unprefixed version\\n\\t\\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\\n\\n\\t\\t// Check if we're setting a value\\n\\t\\tif ( value !== undefined ) {\\n\\t\\t\\ttype = typeof value;\\n\\n\\t\\t\\t// Convert \\\"+=\\\" or \\\"-=\\\" to relative numbers (#7345)\\n\\t\\t\\tif ( type === \\\"string\\\" && ( ret = rcssNum.exec( value ) ) && ret[ 1 ] ) {\\n\\t\\t\\t\\tvalue = adjustCSS( elem, name, ret );\\n\\n\\t\\t\\t\\t// Fixes bug #9237\\n\\t\\t\\t\\ttype = \\\"number\\\";\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Make sure that null and NaN values aren't set (#7116)\\n\\t\\t\\tif ( value == null || value !== value ) {\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\n\\t\\t\\t// If a number was passed in, add the unit (except for certain CSS properties)\\n\\t\\t\\tif ( type === \\\"number\\\" ) {\\n\\t\\t\\t\\tvalue += ret && ret[ 3 ] || ( jQuery.cssNumber[ origName ] ? \\\"\\\" : \\\"px\\\" );\\n\\t\\t\\t}\\n\\n\\t\\t\\t// background-* props affect original clone's values\\n\\t\\t\\tif ( !support.clearCloneStyle && value === \\\"\\\" && name.indexOf( \\\"background\\\" ) === 0 ) {\\n\\t\\t\\t\\tstyle[ name ] = \\\"inherit\\\";\\n\\t\\t\\t}\\n\\n\\t\\t\\t// If a hook was provided, use that value, otherwise just set the specified value\\n\\t\\t\\tif ( !hooks || !( \\\"set\\\" in hooks ) ||\\n\\t\\t\\t\\t( value = hooks.set( elem, value, extra ) ) !== undefined ) {\\n\\n\\t\\t\\t\\tif ( isCustomProp ) {\\n\\t\\t\\t\\t\\tstyle.setProperty( name, value );\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tstyle[ name ] = value;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t} else {\\n\\n\\t\\t\\t// If a hook was provided get the non-computed value from there\\n\\t\\t\\tif ( hooks && \\\"get\\\" in hooks &&\\n\\t\\t\\t\\t( ret = hooks.get( elem, false, extra ) ) !== undefined ) {\\n\\n\\t\\t\\t\\treturn ret;\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Otherwise just get the value from the style object\\n\\t\\t\\treturn style[ name ];\\n\\t\\t}\\n\\t},\\n\\n\\tcss: function( elem, name, extra, styles ) {\\n\\t\\tvar val, num, hooks,\\n\\t\\t\\torigName = jQuery.camelCase( name ),\\n\\t\\t\\tisCustomProp = rcustomProp.test( name );\\n\\n\\t\\t// Make sure that we're working with the right name. We don't\\n\\t\\t// want to modify the value if it is a CSS custom property\\n\\t\\t// since they are user-defined.\\n\\t\\tif ( !isCustomProp ) {\\n\\t\\t\\tname = finalPropName( origName );\\n\\t\\t}\\n\\n\\t\\t// Try prefixed name followed by the unprefixed name\\n\\t\\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\\n\\n\\t\\t// If a hook was provided get the computed value from there\\n\\t\\tif ( hooks && \\\"get\\\" in hooks ) {\\n\\t\\t\\tval = hooks.get( elem, true, extra );\\n\\t\\t}\\n\\n\\t\\t// Otherwise, if a way to get the computed value exists, use that\\n\\t\\tif ( val === undefined ) {\\n\\t\\t\\tval = curCSS( elem, name, styles );\\n\\t\\t}\\n\\n\\t\\t// Convert \\\"normal\\\" to computed value\\n\\t\\tif ( val === \\\"normal\\\" && name in cssNormalTransform ) {\\n\\t\\t\\tval = cssNormalTransform[ name ];\\n\\t\\t}\\n\\n\\t\\t// Make numeric if forced or a qualifier was provided and val looks numeric\\n\\t\\tif ( extra === \\\"\\\" || extra ) {\\n\\t\\t\\tnum = parseFloat( val );\\n\\t\\t\\treturn extra === true || isFinite( num ) ? num || 0 : val;\\n\\t\\t}\\n\\n\\t\\treturn val;\\n\\t}\\n} );\\n\\njQuery.each( [ \\\"height\\\", \\\"width\\\" ], function( i, name ) {\\n\\tjQuery.cssHooks[ name ] = {\\n\\t\\tget: function( elem, computed, extra ) {\\n\\t\\t\\tif ( computed ) {\\n\\n\\t\\t\\t\\t// Certain elements can have dimension info if we invisibly show them\\n\\t\\t\\t\\t// but it must have a current display style that would benefit\\n\\t\\t\\t\\treturn rdisplayswap.test( jQuery.css( elem, \\\"display\\\" ) ) &&\\n\\n\\t\\t\\t\\t\\t// Support: Safari 8+\\n\\t\\t\\t\\t\\t// Table columns in Safari have non-zero offsetWidth & zero\\n\\t\\t\\t\\t\\t// getBoundingClientRect().width unless display is changed.\\n\\t\\t\\t\\t\\t// Support: IE <=11 only\\n\\t\\t\\t\\t\\t// Running getBoundingClientRect on a disconnected node\\n\\t\\t\\t\\t\\t// in IE throws an error.\\n\\t\\t\\t\\t\\t( !elem.getClientRects().length || !elem.getBoundingClientRect().width ) ?\\n\\t\\t\\t\\t\\t\\tswap( elem, cssShow, function() {\\n\\t\\t\\t\\t\\t\\t\\treturn getWidthOrHeight( elem, name, extra );\\n\\t\\t\\t\\t\\t\\t} ) :\\n\\t\\t\\t\\t\\t\\tgetWidthOrHeight( elem, name, extra );\\n\\t\\t\\t}\\n\\t\\t},\\n\\n\\t\\tset: function( elem, value, extra ) {\\n\\t\\t\\tvar matches,\\n\\t\\t\\t\\tstyles = extra && getStyles( elem ),\\n\\t\\t\\t\\tsubtract = extra && augmentWidthOrHeight(\\n\\t\\t\\t\\t\\telem,\\n\\t\\t\\t\\t\\tname,\\n\\t\\t\\t\\t\\textra,\\n\\t\\t\\t\\t\\tjQuery.css( elem, \\\"boxSizing\\\", false, styles ) === \\\"border-box\\\",\\n\\t\\t\\t\\t\\tstyles\\n\\t\\t\\t\\t);\\n\\n\\t\\t\\t// Convert to pixels if value adjustment is needed\\n\\t\\t\\tif ( subtract && ( matches = rcssNum.exec( value ) ) &&\\n\\t\\t\\t\\t( matches[ 3 ] || \\\"px\\\" ) !== \\\"px\\\" ) {\\n\\n\\t\\t\\t\\telem.style[ name ] = value;\\n\\t\\t\\t\\tvalue = jQuery.css( elem, name );\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn setPositiveNumber( elem, value, subtract );\\n\\t\\t}\\n\\t};\\n} );\\n\\njQuery.cssHooks.marginLeft = addGetHookIf( support.reliableMarginLeft,\\n\\tfunction( elem, computed ) {\\n\\t\\tif ( computed ) {\\n\\t\\t\\treturn ( parseFloat( curCSS( elem, \\\"marginLeft\\\" ) ) ||\\n\\t\\t\\t\\telem.getBoundingClientRect().left -\\n\\t\\t\\t\\t\\tswap( elem, { marginLeft: 0 }, function() {\\n\\t\\t\\t\\t\\t\\treturn elem.getBoundingClientRect().left;\\n\\t\\t\\t\\t\\t} )\\n\\t\\t\\t\\t) + \\\"px\\\";\\n\\t\\t}\\n\\t}\\n);\\n\\n// These hooks are used by animate to expand properties\\njQuery.each( {\\n\\tmargin: \\\"\\\",\\n\\tpadding: \\\"\\\",\\n\\tborder: \\\"Width\\\"\\n}, function( prefix, suffix ) {\\n\\tjQuery.cssHooks[ prefix + suffix ] = {\\n\\t\\texpand: function( value ) {\\n\\t\\t\\tvar i = 0,\\n\\t\\t\\t\\texpanded = {},\\n\\n\\t\\t\\t\\t// Assumes a single number if not a string\\n\\t\\t\\t\\tparts = typeof value === \\\"string\\\" ? value.split( \\\" \\\" ) : [ value ];\\n\\n\\t\\t\\tfor ( ; i < 4; i++ ) {\\n\\t\\t\\t\\texpanded[ prefix + cssExpand[ i ] + suffix ] =\\n\\t\\t\\t\\t\\tparts[ i ] || parts[ i - 2 ] || parts[ 0 ];\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn expanded;\\n\\t\\t}\\n\\t};\\n\\n\\tif ( !rmargin.test( prefix ) ) {\\n\\t\\tjQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;\\n\\t}\\n} );\\n\\njQuery.fn.extend( {\\n\\tcss: function( name, value ) {\\n\\t\\treturn access( this, function( elem, name, value ) {\\n\\t\\t\\tvar styles, len,\\n\\t\\t\\t\\tmap = {},\\n\\t\\t\\t\\ti = 0;\\n\\n\\t\\t\\tif ( Array.isArray( name ) ) {\\n\\t\\t\\t\\tstyles = getStyles( elem );\\n\\t\\t\\t\\tlen = name.length;\\n\\n\\t\\t\\t\\tfor ( ; i < len; i++ ) {\\n\\t\\t\\t\\t\\tmap[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\treturn map;\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn value !== undefined ?\\n\\t\\t\\t\\tjQuery.style( elem, name, value ) :\\n\\t\\t\\t\\tjQuery.css( elem, name );\\n\\t\\t}, name, value, arguments.length > 1 );\\n\\t}\\n} );\\n\\n\\nfunction Tween( elem, options, prop, end, easing ) {\\n\\treturn new Tween.prototype.init( elem, options, prop, end, easing );\\n}\\njQuery.Tween = Tween;\\n\\nTween.prototype = {\\n\\tconstructor: Tween,\\n\\tinit: function( elem, options, prop, end, easing, unit ) {\\n\\t\\tthis.elem = elem;\\n\\t\\tthis.prop = prop;\\n\\t\\tthis.easing = easing || jQuery.easing._default;\\n\\t\\tthis.options = options;\\n\\t\\tthis.start = this.now = this.cur();\\n\\t\\tthis.end = end;\\n\\t\\tthis.unit = unit || ( jQuery.cssNumber[ prop ] ? \\\"\\\" : \\\"px\\\" );\\n\\t},\\n\\tcur: function() {\\n\\t\\tvar hooks = Tween.propHooks[ this.prop ];\\n\\n\\t\\treturn hooks && hooks.get ?\\n\\t\\t\\thooks.get( this ) :\\n\\t\\t\\tTween.propHooks._default.get( this );\\n\\t},\\n\\trun: function( percent ) {\\n\\t\\tvar eased,\\n\\t\\t\\thooks = Tween.propHooks[ this.prop ];\\n\\n\\t\\tif ( this.options.duration ) {\\n\\t\\t\\tthis.pos = eased = jQuery.easing[ this.easing ](\\n\\t\\t\\t\\tpercent, this.options.duration * percent, 0, 1, this.options.duration\\n\\t\\t\\t);\\n\\t\\t} else {\\n\\t\\t\\tthis.pos = eased = percent;\\n\\t\\t}\\n\\t\\tthis.now = ( this.end - this.start ) * eased + this.start;\\n\\n\\t\\tif ( this.options.step ) {\\n\\t\\t\\tthis.options.step.call( this.elem, this.now, this );\\n\\t\\t}\\n\\n\\t\\tif ( hooks && hooks.set ) {\\n\\t\\t\\thooks.set( this );\\n\\t\\t} else {\\n\\t\\t\\tTween.propHooks._default.set( this );\\n\\t\\t}\\n\\t\\treturn this;\\n\\t}\\n};\\n\\nTween.prototype.init.prototype = Tween.prototype;\\n\\nTween.propHooks = {\\n\\t_default: {\\n\\t\\tget: function( tween ) {\\n\\t\\t\\tvar result;\\n\\n\\t\\t\\t// Use a property on the element directly when it is not a DOM element,\\n\\t\\t\\t// or when there is no matching style property that exists.\\n\\t\\t\\tif ( tween.elem.nodeType !== 1 ||\\n\\t\\t\\t\\ttween.elem[ tween.prop ] != null && tween.elem.style[ tween.prop ] == null ) {\\n\\t\\t\\t\\treturn tween.elem[ tween.prop ];\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Passing an empty string as a 3rd parameter to .css will automatically\\n\\t\\t\\t// attempt a parseFloat and fallback to a string if the parse fails.\\n\\t\\t\\t// Simple values such as \\\"10px\\\" are parsed to Float;\\n\\t\\t\\t// complex values such as \\\"rotate(1rad)\\\" are returned as-is.\\n\\t\\t\\tresult = jQuery.css( tween.elem, tween.prop, \\\"\\\" );\\n\\n\\t\\t\\t// Empty strings, null, undefined and \\\"auto\\\" are converted to 0.\\n\\t\\t\\treturn !result || result === \\\"auto\\\" ? 0 : result;\\n\\t\\t},\\n\\t\\tset: function( tween ) {\\n\\n\\t\\t\\t// Use step hook for back compat.\\n\\t\\t\\t// Use cssHook if its there.\\n\\t\\t\\t// Use .style if available and use plain properties where available.\\n\\t\\t\\tif ( jQuery.fx.step[ tween.prop ] ) {\\n\\t\\t\\t\\tjQuery.fx.step[ tween.prop ]( tween );\\n\\t\\t\\t} else if ( tween.elem.nodeType === 1 &&\\n\\t\\t\\t\\t( tween.elem.style[ jQuery.cssProps[ tween.prop ] ] != null ||\\n\\t\\t\\t\\t\\tjQuery.cssHooks[ tween.prop ] ) ) {\\n\\t\\t\\t\\tjQuery.style( tween.elem, tween.prop, tween.now + tween.unit );\\n\\t\\t\\t} else {\\n\\t\\t\\t\\ttween.elem[ tween.prop ] = tween.now;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n};\\n\\n// Support: IE <=9 only\\n// Panic based approach to setting things on disconnected nodes\\nTween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {\\n\\tset: function( tween ) {\\n\\t\\tif ( tween.elem.nodeType && tween.elem.parentNode ) {\\n\\t\\t\\ttween.elem[ tween.prop ] = tween.now;\\n\\t\\t}\\n\\t}\\n};\\n\\njQuery.easing = {\\n\\tlinear: function( p ) {\\n\\t\\treturn p;\\n\\t},\\n\\tswing: function( p ) {\\n\\t\\treturn 0.5 - Math.cos( p * Math.PI ) / 2;\\n\\t},\\n\\t_default: \\\"swing\\\"\\n};\\n\\njQuery.fx = Tween.prototype.init;\\n\\n// Back compat <1.8 extension point\\njQuery.fx.step = {};\\n\\n\\n\\n\\nvar\\n\\tfxNow, inProgress,\\n\\trfxtypes = /^(?:toggle|show|hide)$/,\\n\\trrun = /queueHooks$/;\\n\\nfunction schedule() {\\n\\tif ( inProgress ) {\\n\\t\\tif ( document.hidden === false && window.requestAnimationFrame ) {\\n\\t\\t\\twindow.requestAnimationFrame( schedule );\\n\\t\\t} else {\\n\\t\\t\\twindow.setTimeout( schedule, jQuery.fx.interval );\\n\\t\\t}\\n\\n\\t\\tjQuery.fx.tick();\\n\\t}\\n}\\n\\n// Animations created synchronously will run synchronously\\nfunction createFxNow() {\\n\\twindow.setTimeout( function() {\\n\\t\\tfxNow = undefined;\\n\\t} );\\n\\treturn ( fxNow = jQuery.now() );\\n}\\n\\n// Generate parameters to create a standard animation\\nfunction genFx( type, includeWidth ) {\\n\\tvar which,\\n\\t\\ti = 0,\\n\\t\\tattrs = { height: type };\\n\\n\\t// If we include width, step value is 1 to do all cssExpand values,\\n\\t// otherwise step value is 2 to skip over Left and Right\\n\\tincludeWidth = includeWidth ? 1 : 0;\\n\\tfor ( ; i < 4; i += 2 - includeWidth ) {\\n\\t\\twhich = cssExpand[ i ];\\n\\t\\tattrs[ \\\"margin\\\" + which ] = attrs[ \\\"padding\\\" + which ] = type;\\n\\t}\\n\\n\\tif ( includeWidth ) {\\n\\t\\tattrs.opacity = attrs.width = type;\\n\\t}\\n\\n\\treturn attrs;\\n}\\n\\nfunction createTween( value, prop, animation ) {\\n\\tvar tween,\\n\\t\\tcollection = ( Animation.tweeners[ prop ] || [] ).concat( Animation.tweeners[ \\\"*\\\" ] ),\\n\\t\\tindex = 0,\\n\\t\\tlength = collection.length;\\n\\tfor ( ; index < length; index++ ) {\\n\\t\\tif ( ( tween = collection[ index ].call( animation, prop, value ) ) ) {\\n\\n\\t\\t\\t// We're done with this property\\n\\t\\t\\treturn tween;\\n\\t\\t}\\n\\t}\\n}\\n\\nfunction defaultPrefilter( elem, props, opts ) {\\n\\tvar prop, value, toggle, hooks, oldfire, propTween, restoreDisplay, display,\\n\\t\\tisBox = \\\"width\\\" in props || \\\"height\\\" in props,\\n\\t\\tanim = this,\\n\\t\\torig = {},\\n\\t\\tstyle = elem.style,\\n\\t\\thidden = elem.nodeType && isHiddenWithinTree( elem ),\\n\\t\\tdataShow = dataPriv.get( elem, \\\"fxshow\\\" );\\n\\n\\t// Queue-skipping animations hijack the fx hooks\\n\\tif ( !opts.queue ) {\\n\\t\\thooks = jQuery._queueHooks( elem, \\\"fx\\\" );\\n\\t\\tif ( hooks.unqueued == null ) {\\n\\t\\t\\thooks.unqueued = 0;\\n\\t\\t\\toldfire = hooks.empty.fire;\\n\\t\\t\\thooks.empty.fire = function() {\\n\\t\\t\\t\\tif ( !hooks.unqueued ) {\\n\\t\\t\\t\\t\\toldfire();\\n\\t\\t\\t\\t}\\n\\t\\t\\t};\\n\\t\\t}\\n\\t\\thooks.unqueued++;\\n\\n\\t\\tanim.always( function() {\\n\\n\\t\\t\\t// Ensure the complete handler is called before this completes\\n\\t\\t\\tanim.always( function() {\\n\\t\\t\\t\\thooks.unqueued--;\\n\\t\\t\\t\\tif ( !jQuery.queue( elem, \\\"fx\\\" ).length ) {\\n\\t\\t\\t\\t\\thooks.empty.fire();\\n\\t\\t\\t\\t}\\n\\t\\t\\t} );\\n\\t\\t} );\\n\\t}\\n\\n\\t// Detect show/hide animations\\n\\tfor ( prop in props ) {\\n\\t\\tvalue = props[ prop ];\\n\\t\\tif ( rfxtypes.test( value ) ) {\\n\\t\\t\\tdelete props[ prop ];\\n\\t\\t\\ttoggle = toggle || value === \\\"toggle\\\";\\n\\t\\t\\tif ( value === ( hidden ? \\\"hide\\\" : \\\"show\\\" ) ) {\\n\\n\\t\\t\\t\\t// Pretend to be hidden if this is a \\\"show\\\" and\\n\\t\\t\\t\\t// there is still data from a stopped show/hide\\n\\t\\t\\t\\tif ( value === \\\"show\\\" && dataShow && dataShow[ prop ] !== undefined ) {\\n\\t\\t\\t\\t\\thidden = true;\\n\\n\\t\\t\\t\\t// Ignore all other no-op show/hide data\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\torig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );\\n\\t\\t}\\n\\t}\\n\\n\\t// Bail out if this is a no-op like .hide().hide()\\n\\tpropTween = !jQuery.isEmptyObject( props );\\n\\tif ( !propTween && jQuery.isEmptyObject( orig ) ) {\\n\\t\\treturn;\\n\\t}\\n\\n\\t// Restrict \\\"overflow\\\" and \\\"display\\\" styles during box animations\\n\\tif ( isBox && elem.nodeType === 1 ) {\\n\\n\\t\\t// Support: IE <=9 - 11, Edge 12 - 13\\n\\t\\t// Record all 3 overflow attributes because IE does not infer the shorthand\\n\\t\\t// from identically-valued overflowX and overflowY\\n\\t\\topts.overflow = [ style.overflow, style.overflowX, style.overflowY ];\\n\\n\\t\\t// Identify a display type, preferring old show/hide data over the CSS cascade\\n\\t\\trestoreDisplay = dataShow && dataShow.display;\\n\\t\\tif ( restoreDisplay == null ) {\\n\\t\\t\\trestoreDisplay = dataPriv.get( elem, \\\"display\\\" );\\n\\t\\t}\\n\\t\\tdisplay = jQuery.css( elem, \\\"display\\\" );\\n\\t\\tif ( display === \\\"none\\\" ) {\\n\\t\\t\\tif ( restoreDisplay ) {\\n\\t\\t\\t\\tdisplay = restoreDisplay;\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t// Get nonempty value(s) by temporarily forcing visibility\\n\\t\\t\\t\\tshowHide( [ elem ], true );\\n\\t\\t\\t\\trestoreDisplay = elem.style.display || restoreDisplay;\\n\\t\\t\\t\\tdisplay = jQuery.css( elem, \\\"display\\\" );\\n\\t\\t\\t\\tshowHide( [ elem ] );\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t// Animate inline elements as inline-block\\n\\t\\tif ( display === \\\"inline\\\" || display === \\\"inline-block\\\" && restoreDisplay != null ) {\\n\\t\\t\\tif ( jQuery.css( elem, \\\"float\\\" ) === \\\"none\\\" ) {\\n\\n\\t\\t\\t\\t// Restore the original display value at the end of pure show/hide animations\\n\\t\\t\\t\\tif ( !propTween ) {\\n\\t\\t\\t\\t\\tanim.done( function() {\\n\\t\\t\\t\\t\\t\\tstyle.display = restoreDisplay;\\n\\t\\t\\t\\t\\t} );\\n\\t\\t\\t\\t\\tif ( restoreDisplay == null ) {\\n\\t\\t\\t\\t\\t\\tdisplay = style.display;\\n\\t\\t\\t\\t\\t\\trestoreDisplay = display === \\\"none\\\" ? \\\"\\\" : display;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tstyle.display = \\\"inline-block\\\";\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\tif ( opts.overflow ) {\\n\\t\\tstyle.overflow = \\\"hidden\\\";\\n\\t\\tanim.always( function() {\\n\\t\\t\\tstyle.overflow = opts.overflow[ 0 ];\\n\\t\\t\\tstyle.overflowX = opts.overflow[ 1 ];\\n\\t\\t\\tstyle.overflowY = opts.overflow[ 2 ];\\n\\t\\t} );\\n\\t}\\n\\n\\t// Implement show/hide animations\\n\\tpropTween = false;\\n\\tfor ( prop in orig ) {\\n\\n\\t\\t// General show/hide setup for this element animation\\n\\t\\tif ( !propTween ) {\\n\\t\\t\\tif ( dataShow ) {\\n\\t\\t\\t\\tif ( \\\"hidden\\\" in dataShow ) {\\n\\t\\t\\t\\t\\thidden = dataShow.hidden;\\n\\t\\t\\t\\t}\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tdataShow = dataPriv.access( elem, \\\"fxshow\\\", { display: restoreDisplay } );\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Store hidden/visible for toggle so `.stop().toggle()` \\\"reverses\\\"\\n\\t\\t\\tif ( toggle ) {\\n\\t\\t\\t\\tdataShow.hidden = !hidden;\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Show elements before animating them\\n\\t\\t\\tif ( hidden ) {\\n\\t\\t\\t\\tshowHide( [ elem ], true );\\n\\t\\t\\t}\\n\\n\\t\\t\\t/* eslint-disable no-loop-func */\\n\\n\\t\\t\\tanim.done( function() {\\n\\n\\t\\t\\t/* eslint-enable no-loop-func */\\n\\n\\t\\t\\t\\t// The final step of a \\\"hide\\\" animation is actually hiding the element\\n\\t\\t\\t\\tif ( !hidden ) {\\n\\t\\t\\t\\t\\tshowHide( [ elem ] );\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tdataPriv.remove( elem, \\\"fxshow\\\" );\\n\\t\\t\\t\\tfor ( prop in orig ) {\\n\\t\\t\\t\\t\\tjQuery.style( elem, prop, orig[ prop ] );\\n\\t\\t\\t\\t}\\n\\t\\t\\t} );\\n\\t\\t}\\n\\n\\t\\t// Per-property setup\\n\\t\\tpropTween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );\\n\\t\\tif ( !( prop in dataShow ) ) {\\n\\t\\t\\tdataShow[ prop ] = propTween.start;\\n\\t\\t\\tif ( hidden ) {\\n\\t\\t\\t\\tpropTween.end = propTween.start;\\n\\t\\t\\t\\tpropTween.start = 0;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n}\\n\\nfunction propFilter( props, specialEasing ) {\\n\\tvar index, name, easing, value, hooks;\\n\\n\\t// camelCase, specialEasing and expand cssHook pass\\n\\tfor ( index in props ) {\\n\\t\\tname = jQuery.camelCase( index );\\n\\t\\teasing = specialEasing[ name ];\\n\\t\\tvalue = props[ index ];\\n\\t\\tif ( Array.isArray( value ) ) {\\n\\t\\t\\teasing = value[ 1 ];\\n\\t\\t\\tvalue = props[ index ] = value[ 0 ];\\n\\t\\t}\\n\\n\\t\\tif ( index !== name ) {\\n\\t\\t\\tprops[ name ] = value;\\n\\t\\t\\tdelete props[ index ];\\n\\t\\t}\\n\\n\\t\\thooks = jQuery.cssHooks[ name ];\\n\\t\\tif ( hooks && \\\"expand\\\" in hooks ) {\\n\\t\\t\\tvalue = hooks.expand( value );\\n\\t\\t\\tdelete props[ name ];\\n\\n\\t\\t\\t// Not quite $.extend, this won't overwrite existing keys.\\n\\t\\t\\t// Reusing 'index' because we have the correct \\\"name\\\"\\n\\t\\t\\tfor ( index in value ) {\\n\\t\\t\\t\\tif ( !( index in props ) ) {\\n\\t\\t\\t\\t\\tprops[ index ] = value[ index ];\\n\\t\\t\\t\\t\\tspecialEasing[ index ] = easing;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t} else {\\n\\t\\t\\tspecialEasing[ name ] = easing;\\n\\t\\t}\\n\\t}\\n}\\n\\nfunction Animation( elem, properties, options ) {\\n\\tvar result,\\n\\t\\tstopped,\\n\\t\\tindex = 0,\\n\\t\\tlength = Animation.prefilters.length,\\n\\t\\tdeferred = jQuery.Deferred().always( function() {\\n\\n\\t\\t\\t// Don't match elem in the :animated selector\\n\\t\\t\\tdelete tick.elem;\\n\\t\\t} ),\\n\\t\\ttick = function() {\\n\\t\\t\\tif ( stopped ) {\\n\\t\\t\\t\\treturn false;\\n\\t\\t\\t}\\n\\t\\t\\tvar currentTime = fxNow || createFxNow(),\\n\\t\\t\\t\\tremaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),\\n\\n\\t\\t\\t\\t// Support: Android 2.3 only\\n\\t\\t\\t\\t// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)\\n\\t\\t\\t\\ttemp = remaining / animation.duration || 0,\\n\\t\\t\\t\\tpercent = 1 - temp,\\n\\t\\t\\t\\tindex = 0,\\n\\t\\t\\t\\tlength = animation.tweens.length;\\n\\n\\t\\t\\tfor ( ; index < length; index++ ) {\\n\\t\\t\\t\\tanimation.tweens[ index ].run( percent );\\n\\t\\t\\t}\\n\\n\\t\\t\\tdeferred.notifyWith( elem, [ animation, percent, remaining ] );\\n\\n\\t\\t\\t// If there's more to do, yield\\n\\t\\t\\tif ( percent < 1 && length ) {\\n\\t\\t\\t\\treturn remaining;\\n\\t\\t\\t}\\n\\n\\t\\t\\t// If this was an empty animation, synthesize a final progress notification\\n\\t\\t\\tif ( !length ) {\\n\\t\\t\\t\\tdeferred.notifyWith( elem, [ animation, 1, 0 ] );\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Resolve the animation and report its conclusion\\n\\t\\t\\tdeferred.resolveWith( elem, [ animation ] );\\n\\t\\t\\treturn false;\\n\\t\\t},\\n\\t\\tanimation = deferred.promise( {\\n\\t\\t\\telem: elem,\\n\\t\\t\\tprops: jQuery.extend( {}, properties ),\\n\\t\\t\\topts: jQuery.extend( true, {\\n\\t\\t\\t\\tspecialEasing: {},\\n\\t\\t\\t\\teasing: jQuery.easing._default\\n\\t\\t\\t}, options ),\\n\\t\\t\\toriginalProperties: properties,\\n\\t\\t\\toriginalOptions: options,\\n\\t\\t\\tstartTime: fxNow || createFxNow(),\\n\\t\\t\\tduration: options.duration,\\n\\t\\t\\ttweens: [],\\n\\t\\t\\tcreateTween: function( prop, end ) {\\n\\t\\t\\t\\tvar tween = jQuery.Tween( elem, animation.opts, prop, end,\\n\\t\\t\\t\\t\\t\\tanimation.opts.specialEasing[ prop ] || animation.opts.easing );\\n\\t\\t\\t\\tanimation.tweens.push( tween );\\n\\t\\t\\t\\treturn tween;\\n\\t\\t\\t},\\n\\t\\t\\tstop: function( gotoEnd ) {\\n\\t\\t\\t\\tvar index = 0,\\n\\n\\t\\t\\t\\t\\t// If we are going to the end, we want to run all the tweens\\n\\t\\t\\t\\t\\t// otherwise we skip this part\\n\\t\\t\\t\\t\\tlength = gotoEnd ? animation.tweens.length : 0;\\n\\t\\t\\t\\tif ( stopped ) {\\n\\t\\t\\t\\t\\treturn this;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tstopped = true;\\n\\t\\t\\t\\tfor ( ; index < length; index++ ) {\\n\\t\\t\\t\\t\\tanimation.tweens[ index ].run( 1 );\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// Resolve when we played the last frame; otherwise, reject\\n\\t\\t\\t\\tif ( gotoEnd ) {\\n\\t\\t\\t\\t\\tdeferred.notifyWith( elem, [ animation, 1, 0 ] );\\n\\t\\t\\t\\t\\tdeferred.resolveWith( elem, [ animation, gotoEnd ] );\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tdeferred.rejectWith( elem, [ animation, gotoEnd ] );\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\treturn this;\\n\\t\\t\\t}\\n\\t\\t} ),\\n\\t\\tprops = animation.props;\\n\\n\\tpropFilter( props, animation.opts.specialEasing );\\n\\n\\tfor ( ; index < length; index++ ) {\\n\\t\\tresult = Animation.prefilters[ index ].call( animation, elem, props, animation.opts );\\n\\t\\tif ( result ) {\\n\\t\\t\\tif ( jQuery.isFunction( result.stop ) ) {\\n\\t\\t\\t\\tjQuery._queueHooks( animation.elem, animation.opts.queue ).stop =\\n\\t\\t\\t\\t\\tjQuery.proxy( result.stop, result );\\n\\t\\t\\t}\\n\\t\\t\\treturn result;\\n\\t\\t}\\n\\t}\\n\\n\\tjQuery.map( props, createTween, animation );\\n\\n\\tif ( jQuery.isFunction( animation.opts.start ) ) {\\n\\t\\tanimation.opts.start.call( elem, animation );\\n\\t}\\n\\n\\t// Attach callbacks from options\\n\\tanimation\\n\\t\\t.progress( animation.opts.progress )\\n\\t\\t.done( animation.opts.done, animation.opts.complete )\\n\\t\\t.fail( animation.opts.fail )\\n\\t\\t.always( animation.opts.always );\\n\\n\\tjQuery.fx.timer(\\n\\t\\tjQuery.extend( tick, {\\n\\t\\t\\telem: elem,\\n\\t\\t\\tanim: animation,\\n\\t\\t\\tqueue: animation.opts.queue\\n\\t\\t} )\\n\\t);\\n\\n\\treturn animation;\\n}\\n\\njQuery.Animation = jQuery.extend( Animation, {\\n\\n\\ttweeners: {\\n\\t\\t\\\"*\\\": [ function( prop, value ) {\\n\\t\\t\\tvar tween = this.createTween( prop, value );\\n\\t\\t\\tadjustCSS( tween.elem, prop, rcssNum.exec( value ), tween );\\n\\t\\t\\treturn tween;\\n\\t\\t} ]\\n\\t},\\n\\n\\ttweener: function( props, callback ) {\\n\\t\\tif ( jQuery.isFunction( props ) ) {\\n\\t\\t\\tcallback = props;\\n\\t\\t\\tprops = [ \\\"*\\\" ];\\n\\t\\t} else {\\n\\t\\t\\tprops = props.match( rnothtmlwhite );\\n\\t\\t}\\n\\n\\t\\tvar prop,\\n\\t\\t\\tindex = 0,\\n\\t\\t\\tlength = props.length;\\n\\n\\t\\tfor ( ; index < length; index++ ) {\\n\\t\\t\\tprop = props[ index ];\\n\\t\\t\\tAnimation.tweeners[ prop ] = Animation.tweeners[ prop ] || [];\\n\\t\\t\\tAnimation.tweeners[ prop ].unshift( callback );\\n\\t\\t}\\n\\t},\\n\\n\\tprefilters: [ defaultPrefilter ],\\n\\n\\tprefilter: function( callback, prepend ) {\\n\\t\\tif ( prepend ) {\\n\\t\\t\\tAnimation.prefilters.unshift( callback );\\n\\t\\t} else {\\n\\t\\t\\tAnimation.prefilters.push( callback );\\n\\t\\t}\\n\\t}\\n} );\\n\\njQuery.speed = function( speed, easing, fn ) {\\n\\tvar opt = speed && typeof speed === \\\"object\\\" ? jQuery.extend( {}, speed ) : {\\n\\t\\tcomplete: fn || !fn && easing ||\\n\\t\\t\\tjQuery.isFunction( speed ) && speed,\\n\\t\\tduration: speed,\\n\\t\\teasing: fn && easing || easing && !jQuery.isFunction( easing ) && easing\\n\\t};\\n\\n\\t// Go to the end state if fx are off\\n\\tif ( jQuery.fx.off ) {\\n\\t\\topt.duration = 0;\\n\\n\\t} else {\\n\\t\\tif ( typeof opt.duration !== \\\"number\\\" ) {\\n\\t\\t\\tif ( opt.duration in jQuery.fx.speeds ) {\\n\\t\\t\\t\\topt.duration = jQuery.fx.speeds[ opt.duration ];\\n\\n\\t\\t\\t} else {\\n\\t\\t\\t\\topt.duration = jQuery.fx.speeds._default;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\t// Normalize opt.queue - true/undefined/null -> \\\"fx\\\"\\n\\tif ( opt.queue == null || opt.queue === true ) {\\n\\t\\topt.queue = \\\"fx\\\";\\n\\t}\\n\\n\\t// Queueing\\n\\topt.old = opt.complete;\\n\\n\\topt.complete = function() {\\n\\t\\tif ( jQuery.isFunction( opt.old ) ) {\\n\\t\\t\\topt.old.call( this );\\n\\t\\t}\\n\\n\\t\\tif ( opt.queue ) {\\n\\t\\t\\tjQuery.dequeue( this, opt.queue );\\n\\t\\t}\\n\\t};\\n\\n\\treturn opt;\\n};\\n\\njQuery.fn.extend( {\\n\\tfadeTo: function( speed, to, easing, callback ) {\\n\\n\\t\\t// Show any hidden elements after setting opacity to 0\\n\\t\\treturn this.filter( isHiddenWithinTree ).css( \\\"opacity\\\", 0 ).show()\\n\\n\\t\\t\\t// Animate to the value specified\\n\\t\\t\\t.end().animate( { opacity: to }, speed, easing, callback );\\n\\t},\\n\\tanimate: function( prop, speed, easing, callback ) {\\n\\t\\tvar empty = jQuery.isEmptyObject( prop ),\\n\\t\\t\\toptall = jQuery.speed( speed, easing, callback ),\\n\\t\\t\\tdoAnimation = function() {\\n\\n\\t\\t\\t\\t// Operate on a copy of prop so per-property easing won't be lost\\n\\t\\t\\t\\tvar anim = Animation( this, jQuery.extend( {}, prop ), optall );\\n\\n\\t\\t\\t\\t// Empty animations, or finishing resolves immediately\\n\\t\\t\\t\\tif ( empty || dataPriv.get( this, \\\"finish\\\" ) ) {\\n\\t\\t\\t\\t\\tanim.stop( true );\\n\\t\\t\\t\\t}\\n\\t\\t\\t};\\n\\t\\t\\tdoAnimation.finish = doAnimation;\\n\\n\\t\\treturn empty || optall.queue === false ?\\n\\t\\t\\tthis.each( doAnimation ) :\\n\\t\\t\\tthis.queue( optall.queue, doAnimation );\\n\\t},\\n\\tstop: function( type, clearQueue, gotoEnd ) {\\n\\t\\tvar stopQueue = function( hooks ) {\\n\\t\\t\\tvar stop = hooks.stop;\\n\\t\\t\\tdelete hooks.stop;\\n\\t\\t\\tstop( gotoEnd );\\n\\t\\t};\\n\\n\\t\\tif ( typeof type !== \\\"string\\\" ) {\\n\\t\\t\\tgotoEnd = clearQueue;\\n\\t\\t\\tclearQueue = type;\\n\\t\\t\\ttype = undefined;\\n\\t\\t}\\n\\t\\tif ( clearQueue && type !== false ) {\\n\\t\\t\\tthis.queue( type || \\\"fx\\\", [] );\\n\\t\\t}\\n\\n\\t\\treturn this.each( function() {\\n\\t\\t\\tvar dequeue = true,\\n\\t\\t\\t\\tindex = type != null && type + \\\"queueHooks\\\",\\n\\t\\t\\t\\ttimers = jQuery.timers,\\n\\t\\t\\t\\tdata = dataPriv.get( this );\\n\\n\\t\\t\\tif ( index ) {\\n\\t\\t\\t\\tif ( data[ index ] && data[ index ].stop ) {\\n\\t\\t\\t\\t\\tstopQueue( data[ index ] );\\n\\t\\t\\t\\t}\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tfor ( index in data ) {\\n\\t\\t\\t\\t\\tif ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {\\n\\t\\t\\t\\t\\t\\tstopQueue( data[ index ] );\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\tfor ( index = timers.length; index--; ) {\\n\\t\\t\\t\\tif ( timers[ index ].elem === this &&\\n\\t\\t\\t\\t\\t( type == null || timers[ index ].queue === type ) ) {\\n\\n\\t\\t\\t\\t\\ttimers[ index ].anim.stop( gotoEnd );\\n\\t\\t\\t\\t\\tdequeue = false;\\n\\t\\t\\t\\t\\ttimers.splice( index, 1 );\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Start the next in the queue if the last step wasn't forced.\\n\\t\\t\\t// Timers currently will call their complete callbacks, which\\n\\t\\t\\t// will dequeue but only if they were gotoEnd.\\n\\t\\t\\tif ( dequeue || !gotoEnd ) {\\n\\t\\t\\t\\tjQuery.dequeue( this, type );\\n\\t\\t\\t}\\n\\t\\t} );\\n\\t},\\n\\tfinish: function( type ) {\\n\\t\\tif ( type !== false ) {\\n\\t\\t\\ttype = type || \\\"fx\\\";\\n\\t\\t}\\n\\t\\treturn this.each( function() {\\n\\t\\t\\tvar index,\\n\\t\\t\\t\\tdata = dataPriv.get( this ),\\n\\t\\t\\t\\tqueue = data[ type + \\\"queue\\\" ],\\n\\t\\t\\t\\thooks = data[ type + \\\"queueHooks\\\" ],\\n\\t\\t\\t\\ttimers = jQuery.timers,\\n\\t\\t\\t\\tlength = queue ? queue.length : 0;\\n\\n\\t\\t\\t// Enable finishing flag on private data\\n\\t\\t\\tdata.finish = true;\\n\\n\\t\\t\\t// Empty the queue first\\n\\t\\t\\tjQuery.queue( this, type, [] );\\n\\n\\t\\t\\tif ( hooks && hooks.stop ) {\\n\\t\\t\\t\\thooks.stop.call( this, true );\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Look for any active animations, and finish them\\n\\t\\t\\tfor ( index = timers.length; index--; ) {\\n\\t\\t\\t\\tif ( timers[ index ].elem === this && timers[ index ].queue === type ) {\\n\\t\\t\\t\\t\\ttimers[ index ].anim.stop( true );\\n\\t\\t\\t\\t\\ttimers.splice( index, 1 );\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Look for any animations in the old queue and finish them\\n\\t\\t\\tfor ( index = 0; index < length; index++ ) {\\n\\t\\t\\t\\tif ( queue[ index ] && queue[ index ].finish ) {\\n\\t\\t\\t\\t\\tqueue[ index ].finish.call( this );\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Turn off finishing flag\\n\\t\\t\\tdelete data.finish;\\n\\t\\t} );\\n\\t}\\n} );\\n\\njQuery.each( [ \\\"toggle\\\", \\\"show\\\", \\\"hide\\\" ], function( i, name ) {\\n\\tvar cssFn = jQuery.fn[ name ];\\n\\tjQuery.fn[ name ] = function( speed, easing, callback ) {\\n\\t\\treturn speed == null || typeof speed === \\\"boolean\\\" ?\\n\\t\\t\\tcssFn.apply( this, arguments ) :\\n\\t\\t\\tthis.animate( genFx( name, true ), speed, easing, callback );\\n\\t};\\n} );\\n\\n// Generate shortcuts for custom animations\\njQuery.each( {\\n\\tslideDown: genFx( \\\"show\\\" ),\\n\\tslideUp: genFx( \\\"hide\\\" ),\\n\\tslideToggle: genFx( \\\"toggle\\\" ),\\n\\tfadeIn: { opacity: \\\"show\\\" },\\n\\tfadeOut: { opacity: \\\"hide\\\" },\\n\\tfadeToggle: { opacity: \\\"toggle\\\" }\\n}, function( name, props ) {\\n\\tjQuery.fn[ name ] = function( speed, easing, callback ) {\\n\\t\\treturn this.animate( props, speed, easing, callback );\\n\\t};\\n} );\\n\\njQuery.timers = [];\\njQuery.fx.tick = function() {\\n\\tvar timer,\\n\\t\\ti = 0,\\n\\t\\ttimers = jQuery.timers;\\n\\n\\tfxNow = jQuery.now();\\n\\n\\tfor ( ; i < timers.length; i++ ) {\\n\\t\\ttimer = timers[ i ];\\n\\n\\t\\t// Run the timer and safely remove it when done (allowing for external removal)\\n\\t\\tif ( !timer() && timers[ i ] === timer ) {\\n\\t\\t\\ttimers.splice( i--, 1 );\\n\\t\\t}\\n\\t}\\n\\n\\tif ( !timers.length ) {\\n\\t\\tjQuery.fx.stop();\\n\\t}\\n\\tfxNow = undefined;\\n};\\n\\njQuery.fx.timer = function( timer ) {\\n\\tjQuery.timers.push( timer );\\n\\tjQuery.fx.start();\\n};\\n\\njQuery.fx.interval = 13;\\njQuery.fx.start = function() {\\n\\tif ( inProgress ) {\\n\\t\\treturn;\\n\\t}\\n\\n\\tinProgress = true;\\n\\tschedule();\\n};\\n\\njQuery.fx.stop = function() {\\n\\tinProgress = null;\\n};\\n\\njQuery.fx.speeds = {\\n\\tslow: 600,\\n\\tfast: 200,\\n\\n\\t// Default speed\\n\\t_default: 400\\n};\\n\\n\\n// Based off of the plugin by Clint Helfers, with permission.\\n// https://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/\\njQuery.fn.delay = function( time, type ) {\\n\\ttime = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;\\n\\ttype = type || \\\"fx\\\";\\n\\n\\treturn this.queue( type, function( next, hooks ) {\\n\\t\\tvar timeout = window.setTimeout( next, time );\\n\\t\\thooks.stop = function() {\\n\\t\\t\\twindow.clearTimeout( timeout );\\n\\t\\t};\\n\\t} );\\n};\\n\\n\\n( function() {\\n\\tvar input = document.createElement( \\\"input\\\" ),\\n\\t\\tselect = document.createElement( \\\"select\\\" ),\\n\\t\\topt = select.appendChild( document.createElement( \\\"option\\\" ) );\\n\\n\\tinput.type = \\\"checkbox\\\";\\n\\n\\t// Support: Android <=4.3 only\\n\\t// Default value for a checkbox should be \\\"on\\\"\\n\\tsupport.checkOn = input.value !== \\\"\\\";\\n\\n\\t// Support: IE <=11 only\\n\\t// Must access selectedIndex to make default options select\\n\\tsupport.optSelected = opt.selected;\\n\\n\\t// Support: IE <=11 only\\n\\t// An input loses its value after becoming a radio\\n\\tinput = document.createElement( \\\"input\\\" );\\n\\tinput.value = \\\"t\\\";\\n\\tinput.type = \\\"radio\\\";\\n\\tsupport.radioValue = input.value === \\\"t\\\";\\n} )();\\n\\n\\nvar boolHook,\\n\\tattrHandle = jQuery.expr.attrHandle;\\n\\njQuery.fn.extend( {\\n\\tattr: function( name, value ) {\\n\\t\\treturn access( this, jQuery.attr, name, value, arguments.length > 1 );\\n\\t},\\n\\n\\tremoveAttr: function( name ) {\\n\\t\\treturn this.each( function() {\\n\\t\\t\\tjQuery.removeAttr( this, name );\\n\\t\\t} );\\n\\t}\\n} );\\n\\njQuery.extend( {\\n\\tattr: function( elem, name, value ) {\\n\\t\\tvar ret, hooks,\\n\\t\\t\\tnType = elem.nodeType;\\n\\n\\t\\t// Don't get/set attributes on text, comment and attribute nodes\\n\\t\\tif ( nType === 3 || nType === 8 || nType === 2 ) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\t// Fallback to prop when attributes are not supported\\n\\t\\tif ( typeof elem.getAttribute === \\\"undefined\\\" ) {\\n\\t\\t\\treturn jQuery.prop( elem, name, value );\\n\\t\\t}\\n\\n\\t\\t// Attribute hooks are determined by the lowercase version\\n\\t\\t// Grab necessary hook if one is defined\\n\\t\\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\\n\\t\\t\\thooks = jQuery.attrHooks[ name.toLowerCase() ] ||\\n\\t\\t\\t\\t( jQuery.expr.match.bool.test( name ) ? boolHook : undefined );\\n\\t\\t}\\n\\n\\t\\tif ( value !== undefined ) {\\n\\t\\t\\tif ( value === null ) {\\n\\t\\t\\t\\tjQuery.removeAttr( elem, name );\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( hooks && \\\"set\\\" in hooks &&\\n\\t\\t\\t\\t( ret = hooks.set( elem, value, name ) ) !== undefined ) {\\n\\t\\t\\t\\treturn ret;\\n\\t\\t\\t}\\n\\n\\t\\t\\telem.setAttribute( name, value + \\\"\\\" );\\n\\t\\t\\treturn value;\\n\\t\\t}\\n\\n\\t\\tif ( hooks && \\\"get\\\" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {\\n\\t\\t\\treturn ret;\\n\\t\\t}\\n\\n\\t\\tret = jQuery.find.attr( elem, name );\\n\\n\\t\\t// Non-existent attributes return null, we normalize to undefined\\n\\t\\treturn ret == null ? undefined : ret;\\n\\t},\\n\\n\\tattrHooks: {\\n\\t\\ttype: {\\n\\t\\t\\tset: function( elem, value ) {\\n\\t\\t\\t\\tif ( !support.radioValue && value === \\\"radio\\\" &&\\n\\t\\t\\t\\t\\tnodeName( elem, \\\"input\\\" ) ) {\\n\\t\\t\\t\\t\\tvar val = elem.value;\\n\\t\\t\\t\\t\\telem.setAttribute( \\\"type\\\", value );\\n\\t\\t\\t\\t\\tif ( val ) {\\n\\t\\t\\t\\t\\t\\telem.value = val;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\treturn value;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t},\\n\\n\\tremoveAttr: function( elem, value ) {\\n\\t\\tvar name,\\n\\t\\t\\ti = 0,\\n\\n\\t\\t\\t// Attribute names can contain non-HTML whitespace characters\\n\\t\\t\\t// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\\n\\t\\t\\tattrNames = value && value.match( rnothtmlwhite );\\n\\n\\t\\tif ( attrNames && elem.nodeType === 1 ) {\\n\\t\\t\\twhile ( ( name = attrNames[ i++ ] ) ) {\\n\\t\\t\\t\\telem.removeAttribute( name );\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n} );\\n\\n// Hooks for boolean attributes\\nboolHook = {\\n\\tset: function( elem, value, name ) {\\n\\t\\tif ( value === false ) {\\n\\n\\t\\t\\t// Remove boolean attributes when set to false\\n\\t\\t\\tjQuery.removeAttr( elem, name );\\n\\t\\t} else {\\n\\t\\t\\telem.setAttribute( name, name );\\n\\t\\t}\\n\\t\\treturn name;\\n\\t}\\n};\\n\\njQuery.each( jQuery.expr.match.bool.source.match( /\\\\w+/g ), function( i, name ) {\\n\\tvar getter = attrHandle[ name ] || jQuery.find.attr;\\n\\n\\tattrHandle[ name ] = function( elem, name, isXML ) {\\n\\t\\tvar ret, handle,\\n\\t\\t\\tlowercaseName = name.toLowerCase();\\n\\n\\t\\tif ( !isXML ) {\\n\\n\\t\\t\\t// Avoid an infinite loop by temporarily removing this function from the getter\\n\\t\\t\\thandle = attrHandle[ lowercaseName ];\\n\\t\\t\\tattrHandle[ lowercaseName ] = ret;\\n\\t\\t\\tret = getter( elem, name, isXML ) != null ?\\n\\t\\t\\t\\tlowercaseName :\\n\\t\\t\\t\\tnull;\\n\\t\\t\\tattrHandle[ lowercaseName ] = handle;\\n\\t\\t}\\n\\t\\treturn ret;\\n\\t};\\n} );\\n\\n\\n\\n\\nvar rfocusable = /^(?:input|select|textarea|button)$/i,\\n\\trclickable = /^(?:a|area)$/i;\\n\\njQuery.fn.extend( {\\n\\tprop: function( name, value ) {\\n\\t\\treturn access( this, jQuery.prop, name, value, arguments.length > 1 );\\n\\t},\\n\\n\\tremoveProp: function( name ) {\\n\\t\\treturn this.each( function() {\\n\\t\\t\\tdelete this[ jQuery.propFix[ name ] || name ];\\n\\t\\t} );\\n\\t}\\n} );\\n\\njQuery.extend( {\\n\\tprop: function( elem, name, value ) {\\n\\t\\tvar ret, hooks,\\n\\t\\t\\tnType = elem.nodeType;\\n\\n\\t\\t// Don't get/set properties on text, comment and attribute nodes\\n\\t\\tif ( nType === 3 || nType === 8 || nType === 2 ) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\\n\\n\\t\\t\\t// Fix name and attach hooks\\n\\t\\t\\tname = jQuery.propFix[ name ] || name;\\n\\t\\t\\thooks = jQuery.propHooks[ name ];\\n\\t\\t}\\n\\n\\t\\tif ( value !== undefined ) {\\n\\t\\t\\tif ( hooks && \\\"set\\\" in hooks &&\\n\\t\\t\\t\\t( ret = hooks.set( elem, value, name ) ) !== undefined ) {\\n\\t\\t\\t\\treturn ret;\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn ( elem[ name ] = value );\\n\\t\\t}\\n\\n\\t\\tif ( hooks && \\\"get\\\" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {\\n\\t\\t\\treturn ret;\\n\\t\\t}\\n\\n\\t\\treturn elem[ name ];\\n\\t},\\n\\n\\tpropHooks: {\\n\\t\\ttabIndex: {\\n\\t\\t\\tget: function( elem ) {\\n\\n\\t\\t\\t\\t// Support: IE <=9 - 11 only\\n\\t\\t\\t\\t// elem.tabIndex doesn't always return the\\n\\t\\t\\t\\t// correct value when it hasn't been explicitly set\\n\\t\\t\\t\\t// https://web.archive.org/web/20141116233347/http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/\\n\\t\\t\\t\\t// Use proper attribute retrieval(#12072)\\n\\t\\t\\t\\tvar tabindex = jQuery.find.attr( elem, \\\"tabindex\\\" );\\n\\n\\t\\t\\t\\tif ( tabindex ) {\\n\\t\\t\\t\\t\\treturn parseInt( tabindex, 10 );\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif (\\n\\t\\t\\t\\t\\trfocusable.test( elem.nodeName ) ||\\n\\t\\t\\t\\t\\trclickable.test( elem.nodeName ) &&\\n\\t\\t\\t\\t\\telem.href\\n\\t\\t\\t\\t) {\\n\\t\\t\\t\\t\\treturn 0;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\treturn -1;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t},\\n\\n\\tpropFix: {\\n\\t\\t\\\"for\\\": \\\"htmlFor\\\",\\n\\t\\t\\\"class\\\": \\\"className\\\"\\n\\t}\\n} );\\n\\n// Support: IE <=11 only\\n// Accessing the selectedIndex property\\n// forces the browser to respect setting selected\\n// on the option\\n// The getter ensures a default option is selected\\n// when in an optgroup\\n// eslint rule \\\"no-unused-expressions\\\" is disabled for this code\\n// since it considers such accessions noop\\nif ( !support.optSelected ) {\\n\\tjQuery.propHooks.selected = {\\n\\t\\tget: function( elem ) {\\n\\n\\t\\t\\t/* eslint no-unused-expressions: \\\"off\\\" */\\n\\n\\t\\t\\tvar parent = elem.parentNode;\\n\\t\\t\\tif ( parent && parent.parentNode ) {\\n\\t\\t\\t\\tparent.parentNode.selectedIndex;\\n\\t\\t\\t}\\n\\t\\t\\treturn null;\\n\\t\\t},\\n\\t\\tset: function( elem ) {\\n\\n\\t\\t\\t/* eslint no-unused-expressions: \\\"off\\\" */\\n\\n\\t\\t\\tvar parent = elem.parentNode;\\n\\t\\t\\tif ( parent ) {\\n\\t\\t\\t\\tparent.selectedIndex;\\n\\n\\t\\t\\t\\tif ( parent.parentNode ) {\\n\\t\\t\\t\\t\\tparent.parentNode.selectedIndex;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t};\\n}\\n\\njQuery.each( [\\n\\t\\\"tabIndex\\\",\\n\\t\\\"readOnly\\\",\\n\\t\\\"maxLength\\\",\\n\\t\\\"cellSpacing\\\",\\n\\t\\\"cellPadding\\\",\\n\\t\\\"rowSpan\\\",\\n\\t\\\"colSpan\\\",\\n\\t\\\"useMap\\\",\\n\\t\\\"frameBorder\\\",\\n\\t\\\"contentEditable\\\"\\n], function() {\\n\\tjQuery.propFix[ this.toLowerCase() ] = this;\\n} );\\n\\n\\n\\n\\n\\t// Strip and collapse whitespace according to HTML spec\\n\\t// https://html.spec.whatwg.org/multipage/infrastructure.html#strip-and-collapse-whitespace\\n\\tfunction stripAndCollapse( value ) {\\n\\t\\tvar tokens = value.match( rnothtmlwhite ) || [];\\n\\t\\treturn tokens.join( \\\" \\\" );\\n\\t}\\n\\n\\nfunction getClass( elem ) {\\n\\treturn elem.getAttribute && elem.getAttribute( \\\"class\\\" ) || \\\"\\\";\\n}\\n\\njQuery.fn.extend( {\\n\\taddClass: function( value ) {\\n\\t\\tvar classes, elem, cur, curValue, clazz, j, finalValue,\\n\\t\\t\\ti = 0;\\n\\n\\t\\tif ( jQuery.isFunction( value ) ) {\\n\\t\\t\\treturn this.each( function( j ) {\\n\\t\\t\\t\\tjQuery( this ).addClass( value.call( this, j, getClass( this ) ) );\\n\\t\\t\\t} );\\n\\t\\t}\\n\\n\\t\\tif ( typeof value === \\\"string\\\" && value ) {\\n\\t\\t\\tclasses = value.match( rnothtmlwhite ) || [];\\n\\n\\t\\t\\twhile ( ( elem = this[ i++ ] ) ) {\\n\\t\\t\\t\\tcurValue = getClass( elem );\\n\\t\\t\\t\\tcur = elem.nodeType === 1 && ( \\\" \\\" + stripAndCollapse( curValue ) + \\\" \\\" );\\n\\n\\t\\t\\t\\tif ( cur ) {\\n\\t\\t\\t\\t\\tj = 0;\\n\\t\\t\\t\\t\\twhile ( ( clazz = classes[ j++ ] ) ) {\\n\\t\\t\\t\\t\\t\\tif ( cur.indexOf( \\\" \\\" + clazz + \\\" \\\" ) < 0 ) {\\n\\t\\t\\t\\t\\t\\t\\tcur += clazz + \\\" \\\";\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t// Only assign if different to avoid unneeded rendering.\\n\\t\\t\\t\\t\\tfinalValue = stripAndCollapse( cur );\\n\\t\\t\\t\\t\\tif ( curValue !== finalValue ) {\\n\\t\\t\\t\\t\\t\\telem.setAttribute( \\\"class\\\", finalValue );\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn this;\\n\\t},\\n\\n\\tremoveClass: function( value ) {\\n\\t\\tvar classes, elem, cur, curValue, clazz, j, finalValue,\\n\\t\\t\\ti = 0;\\n\\n\\t\\tif ( jQuery.isFunction( value ) ) {\\n\\t\\t\\treturn this.each( function( j ) {\\n\\t\\t\\t\\tjQuery( this ).removeClass( value.call( this, j, getClass( this ) ) );\\n\\t\\t\\t} );\\n\\t\\t}\\n\\n\\t\\tif ( !arguments.length ) {\\n\\t\\t\\treturn this.attr( \\\"class\\\", \\\"\\\" );\\n\\t\\t}\\n\\n\\t\\tif ( typeof value === \\\"string\\\" && value ) {\\n\\t\\t\\tclasses = value.match( rnothtmlwhite ) || [];\\n\\n\\t\\t\\twhile ( ( elem = this[ i++ ] ) ) {\\n\\t\\t\\t\\tcurValue = getClass( elem );\\n\\n\\t\\t\\t\\t// This expression is here for better compressibility (see addClass)\\n\\t\\t\\t\\tcur = elem.nodeType === 1 && ( \\\" \\\" + stripAndCollapse( curValue ) + \\\" \\\" );\\n\\n\\t\\t\\t\\tif ( cur ) {\\n\\t\\t\\t\\t\\tj = 0;\\n\\t\\t\\t\\t\\twhile ( ( clazz = classes[ j++ ] ) ) {\\n\\n\\t\\t\\t\\t\\t\\t// Remove *all* instances\\n\\t\\t\\t\\t\\t\\twhile ( cur.indexOf( \\\" \\\" + clazz + \\\" \\\" ) > -1 ) {\\n\\t\\t\\t\\t\\t\\t\\tcur = cur.replace( \\\" \\\" + clazz + \\\" \\\", \\\" \\\" );\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t// Only assign if different to avoid unneeded rendering.\\n\\t\\t\\t\\t\\tfinalValue = stripAndCollapse( cur );\\n\\t\\t\\t\\t\\tif ( curValue !== finalValue ) {\\n\\t\\t\\t\\t\\t\\telem.setAttribute( \\\"class\\\", finalValue );\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn this;\\n\\t},\\n\\n\\ttoggleClass: function( value, stateVal ) {\\n\\t\\tvar type = typeof value;\\n\\n\\t\\tif ( typeof stateVal === \\\"boolean\\\" && type === \\\"string\\\" ) {\\n\\t\\t\\treturn stateVal ? this.addClass( value ) : this.removeClass( value );\\n\\t\\t}\\n\\n\\t\\tif ( jQuery.isFunction( value ) ) {\\n\\t\\t\\treturn this.each( function( i ) {\\n\\t\\t\\t\\tjQuery( this ).toggleClass(\\n\\t\\t\\t\\t\\tvalue.call( this, i, getClass( this ), stateVal ),\\n\\t\\t\\t\\t\\tstateVal\\n\\t\\t\\t\\t);\\n\\t\\t\\t} );\\n\\t\\t}\\n\\n\\t\\treturn this.each( function() {\\n\\t\\t\\tvar className, i, self, classNames;\\n\\n\\t\\t\\tif ( type === \\\"string\\\" ) {\\n\\n\\t\\t\\t\\t// Toggle individual class names\\n\\t\\t\\t\\ti = 0;\\n\\t\\t\\t\\tself = jQuery( this );\\n\\t\\t\\t\\tclassNames = value.match( rnothtmlwhite ) || [];\\n\\n\\t\\t\\t\\twhile ( ( className = classNames[ i++ ] ) ) {\\n\\n\\t\\t\\t\\t\\t// Check each className given, space separated list\\n\\t\\t\\t\\t\\tif ( self.hasClass( className ) ) {\\n\\t\\t\\t\\t\\t\\tself.removeClass( className );\\n\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\tself.addClass( className );\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t// Toggle whole class name\\n\\t\\t\\t} else if ( value === undefined || type === \\\"boolean\\\" ) {\\n\\t\\t\\t\\tclassName = getClass( this );\\n\\t\\t\\t\\tif ( className ) {\\n\\n\\t\\t\\t\\t\\t// Store className if set\\n\\t\\t\\t\\t\\tdataPriv.set( this, \\\"__className__\\\", className );\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// If the element has a class name or if we're passed `false`,\\n\\t\\t\\t\\t// then remove the whole classname (if there was one, the above saved it).\\n\\t\\t\\t\\t// Otherwise bring back whatever was previously saved (if anything),\\n\\t\\t\\t\\t// falling back to the empty string if nothing was stored.\\n\\t\\t\\t\\tif ( this.setAttribute ) {\\n\\t\\t\\t\\t\\tthis.setAttribute( \\\"class\\\",\\n\\t\\t\\t\\t\\t\\tclassName || value === false ?\\n\\t\\t\\t\\t\\t\\t\\\"\\\" :\\n\\t\\t\\t\\t\\t\\tdataPriv.get( this, \\\"__className__\\\" ) || \\\"\\\"\\n\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t} );\\n\\t},\\n\\n\\thasClass: function( selector ) {\\n\\t\\tvar className, elem,\\n\\t\\t\\ti = 0;\\n\\n\\t\\tclassName = \\\" \\\" + selector + \\\" \\\";\\n\\t\\twhile ( ( elem = this[ i++ ] ) ) {\\n\\t\\t\\tif ( elem.nodeType === 1 &&\\n\\t\\t\\t\\t( \\\" \\\" + stripAndCollapse( getClass( elem ) ) + \\\" \\\" ).indexOf( className ) > -1 ) {\\n\\t\\t\\t\\t\\treturn true;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn false;\\n\\t}\\n} );\\n\\n\\n\\n\\nvar rreturn = /\\\\r/g;\\n\\njQuery.fn.extend( {\\n\\tval: function( value ) {\\n\\t\\tvar hooks, ret, isFunction,\\n\\t\\t\\telem = this[ 0 ];\\n\\n\\t\\tif ( !arguments.length ) {\\n\\t\\t\\tif ( elem ) {\\n\\t\\t\\t\\thooks = jQuery.valHooks[ elem.type ] ||\\n\\t\\t\\t\\t\\tjQuery.valHooks[ elem.nodeName.toLowerCase() ];\\n\\n\\t\\t\\t\\tif ( hooks &&\\n\\t\\t\\t\\t\\t\\\"get\\\" in hooks &&\\n\\t\\t\\t\\t\\t( ret = hooks.get( elem, \\\"value\\\" ) ) !== undefined\\n\\t\\t\\t\\t) {\\n\\t\\t\\t\\t\\treturn ret;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tret = elem.value;\\n\\n\\t\\t\\t\\t// Handle most common string cases\\n\\t\\t\\t\\tif ( typeof ret === \\\"string\\\" ) {\\n\\t\\t\\t\\t\\treturn ret.replace( rreturn, \\\"\\\" );\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// Handle cases where value is null/undef or number\\n\\t\\t\\t\\treturn ret == null ? \\\"\\\" : ret;\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tisFunction = jQuery.isFunction( value );\\n\\n\\t\\treturn this.each( function( i ) {\\n\\t\\t\\tvar val;\\n\\n\\t\\t\\tif ( this.nodeType !== 1 ) {\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( isFunction ) {\\n\\t\\t\\t\\tval = value.call( this, i, jQuery( this ).val() );\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tval = value;\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Treat null/undefined as \\\"\\\"; convert numbers to string\\n\\t\\t\\tif ( val == null ) {\\n\\t\\t\\t\\tval = \\\"\\\";\\n\\n\\t\\t\\t} else if ( typeof val === \\\"number\\\" ) {\\n\\t\\t\\t\\tval += \\\"\\\";\\n\\n\\t\\t\\t} else if ( Array.isArray( val ) ) {\\n\\t\\t\\t\\tval = jQuery.map( val, function( value ) {\\n\\t\\t\\t\\t\\treturn value == null ? \\\"\\\" : value + \\\"\\\";\\n\\t\\t\\t\\t} );\\n\\t\\t\\t}\\n\\n\\t\\t\\thooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];\\n\\n\\t\\t\\t// If set returns undefined, fall back to normal setting\\n\\t\\t\\tif ( !hooks || !( \\\"set\\\" in hooks ) || hooks.set( this, val, \\\"value\\\" ) === undefined ) {\\n\\t\\t\\t\\tthis.value = val;\\n\\t\\t\\t}\\n\\t\\t} );\\n\\t}\\n} );\\n\\njQuery.extend( {\\n\\tvalHooks: {\\n\\t\\toption: {\\n\\t\\t\\tget: function( elem ) {\\n\\n\\t\\t\\t\\tvar val = jQuery.find.attr( elem, \\\"value\\\" );\\n\\t\\t\\t\\treturn val != null ?\\n\\t\\t\\t\\t\\tval :\\n\\n\\t\\t\\t\\t\\t// Support: IE <=10 - 11 only\\n\\t\\t\\t\\t\\t// option.text throws exceptions (#14686, #14858)\\n\\t\\t\\t\\t\\t// Strip and collapse whitespace\\n\\t\\t\\t\\t\\t// https://html.spec.whatwg.org/#strip-and-collapse-whitespace\\n\\t\\t\\t\\t\\tstripAndCollapse( jQuery.text( elem ) );\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\tselect: {\\n\\t\\t\\tget: function( elem ) {\\n\\t\\t\\t\\tvar value, option, i,\\n\\t\\t\\t\\t\\toptions = elem.options,\\n\\t\\t\\t\\t\\tindex = elem.selectedIndex,\\n\\t\\t\\t\\t\\tone = elem.type === \\\"select-one\\\",\\n\\t\\t\\t\\t\\tvalues = one ? null : [],\\n\\t\\t\\t\\t\\tmax = one ? index + 1 : options.length;\\n\\n\\t\\t\\t\\tif ( index < 0 ) {\\n\\t\\t\\t\\t\\ti = max;\\n\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\ti = one ? index : 0;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// Loop through all the selected options\\n\\t\\t\\t\\tfor ( ; i < max; i++ ) {\\n\\t\\t\\t\\t\\toption = options[ i ];\\n\\n\\t\\t\\t\\t\\t// Support: IE <=9 only\\n\\t\\t\\t\\t\\t// IE8-9 doesn't update selected after form reset (#2551)\\n\\t\\t\\t\\t\\tif ( ( option.selected || i === index ) &&\\n\\n\\t\\t\\t\\t\\t\\t\\t// Don't return options that are disabled or in a disabled optgroup\\n\\t\\t\\t\\t\\t\\t\\t!option.disabled &&\\n\\t\\t\\t\\t\\t\\t\\t( !option.parentNode.disabled ||\\n\\t\\t\\t\\t\\t\\t\\t\\t!nodeName( option.parentNode, \\\"optgroup\\\" ) ) ) {\\n\\n\\t\\t\\t\\t\\t\\t// Get the specific value for the option\\n\\t\\t\\t\\t\\t\\tvalue = jQuery( option ).val();\\n\\n\\t\\t\\t\\t\\t\\t// We don't need an array for one selects\\n\\t\\t\\t\\t\\t\\tif ( one ) {\\n\\t\\t\\t\\t\\t\\t\\treturn value;\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t// Multi-Selects return an array\\n\\t\\t\\t\\t\\t\\tvalues.push( value );\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\treturn values;\\n\\t\\t\\t},\\n\\n\\t\\t\\tset: function( elem, value ) {\\n\\t\\t\\t\\tvar optionSet, option,\\n\\t\\t\\t\\t\\toptions = elem.options,\\n\\t\\t\\t\\t\\tvalues = jQuery.makeArray( value ),\\n\\t\\t\\t\\t\\ti = options.length;\\n\\n\\t\\t\\t\\twhile ( i-- ) {\\n\\t\\t\\t\\t\\toption = options[ i ];\\n\\n\\t\\t\\t\\t\\t/* eslint-disable no-cond-assign */\\n\\n\\t\\t\\t\\t\\tif ( option.selected =\\n\\t\\t\\t\\t\\t\\tjQuery.inArray( jQuery.valHooks.option.get( option ), values ) > -1\\n\\t\\t\\t\\t\\t) {\\n\\t\\t\\t\\t\\t\\toptionSet = true;\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t/* eslint-enable no-cond-assign */\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// Force browsers to behave consistently when non-matching value is set\\n\\t\\t\\t\\tif ( !optionSet ) {\\n\\t\\t\\t\\t\\telem.selectedIndex = -1;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\treturn values;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n} );\\n\\n// Radios and checkboxes getter/setter\\njQuery.each( [ \\\"radio\\\", \\\"checkbox\\\" ], function() {\\n\\tjQuery.valHooks[ this ] = {\\n\\t\\tset: function( elem, value ) {\\n\\t\\t\\tif ( Array.isArray( value ) ) {\\n\\t\\t\\t\\treturn ( elem.checked = jQuery.inArray( jQuery( elem ).val(), value ) > -1 );\\n\\t\\t\\t}\\n\\t\\t}\\n\\t};\\n\\tif ( !support.checkOn ) {\\n\\t\\tjQuery.valHooks[ this ].get = function( elem ) {\\n\\t\\t\\treturn elem.getAttribute( \\\"value\\\" ) === null ? \\\"on\\\" : elem.value;\\n\\t\\t};\\n\\t}\\n} );\\n\\n\\n\\n\\n// Return jQuery for attributes-only inclusion\\n\\n\\nvar rfocusMorph = /^(?:focusinfocus|focusoutblur)$/;\\n\\njQuery.extend( jQuery.event, {\\n\\n\\ttrigger: function( event, data, elem, onlyHandlers ) {\\n\\n\\t\\tvar i, cur, tmp, bubbleType, ontype, handle, special,\\n\\t\\t\\teventPath = [ elem || document ],\\n\\t\\t\\ttype = hasOwn.call( event, \\\"type\\\" ) ? event.type : event,\\n\\t\\t\\tnamespaces = hasOwn.call( event, \\\"namespace\\\" ) ? event.namespace.split( \\\".\\\" ) : [];\\n\\n\\t\\tcur = tmp = elem = elem || document;\\n\\n\\t\\t// Don't do events on text and comment nodes\\n\\t\\tif ( elem.nodeType === 3 || elem.nodeType === 8 ) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\t// focus/blur morphs to focusin/out; ensure we're not firing them right now\\n\\t\\tif ( rfocusMorph.test( type + jQuery.event.triggered ) ) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tif ( type.indexOf( \\\".\\\" ) > -1 ) {\\n\\n\\t\\t\\t// Namespaced trigger; create a regexp to match event type in handle()\\n\\t\\t\\tnamespaces = type.split( \\\".\\\" );\\n\\t\\t\\ttype = namespaces.shift();\\n\\t\\t\\tnamespaces.sort();\\n\\t\\t}\\n\\t\\tontype = type.indexOf( \\\":\\\" ) < 0 && \\\"on\\\" + type;\\n\\n\\t\\t// Caller can pass in a jQuery.Event object, Object, or just an event type string\\n\\t\\tevent = event[ jQuery.expando ] ?\\n\\t\\t\\tevent :\\n\\t\\t\\tnew jQuery.Event( type, typeof event === \\\"object\\\" && event );\\n\\n\\t\\t// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)\\n\\t\\tevent.isTrigger = onlyHandlers ? 2 : 3;\\n\\t\\tevent.namespace = namespaces.join( \\\".\\\" );\\n\\t\\tevent.rnamespace = event.namespace ?\\n\\t\\t\\tnew RegExp( \\\"(^|\\\\\\\\.)\\\" + namespaces.join( \\\"\\\\\\\\.(?:.*\\\\\\\\.|)\\\" ) + \\\"(\\\\\\\\.|$)\\\" ) :\\n\\t\\t\\tnull;\\n\\n\\t\\t// Clean up the event in case it is being reused\\n\\t\\tevent.result = undefined;\\n\\t\\tif ( !event.target ) {\\n\\t\\t\\tevent.target = elem;\\n\\t\\t}\\n\\n\\t\\t// Clone any incoming data and prepend the event, creating the handler arg list\\n\\t\\tdata = data == null ?\\n\\t\\t\\t[ event ] :\\n\\t\\t\\tjQuery.makeArray( data, [ event ] );\\n\\n\\t\\t// Allow special events to draw outside the lines\\n\\t\\tspecial = jQuery.event.special[ type ] || {};\\n\\t\\tif ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\t// Determine event propagation path in advance, per W3C events spec (#9951)\\n\\t\\t// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)\\n\\t\\tif ( !onlyHandlers && !special.noBubble && !jQuery.isWindow( elem ) ) {\\n\\n\\t\\t\\tbubbleType = special.delegateType || type;\\n\\t\\t\\tif ( !rfocusMorph.test( bubbleType + type ) ) {\\n\\t\\t\\t\\tcur = cur.parentNode;\\n\\t\\t\\t}\\n\\t\\t\\tfor ( ; cur; cur = cur.parentNode ) {\\n\\t\\t\\t\\teventPath.push( cur );\\n\\t\\t\\t\\ttmp = cur;\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Only add window if we got to document (e.g., not plain obj or detached DOM)\\n\\t\\t\\tif ( tmp === ( elem.ownerDocument || document ) ) {\\n\\t\\t\\t\\teventPath.push( tmp.defaultView || tmp.parentWindow || window );\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t// Fire handlers on the event path\\n\\t\\ti = 0;\\n\\t\\twhile ( ( cur = eventPath[ i++ ] ) && !event.isPropagationStopped() ) {\\n\\n\\t\\t\\tevent.type = i > 1 ?\\n\\t\\t\\t\\tbubbleType :\\n\\t\\t\\t\\tspecial.bindType || type;\\n\\n\\t\\t\\t// jQuery handler\\n\\t\\t\\thandle = ( dataPriv.get( cur, \\\"events\\\" ) || {} )[ event.type ] &&\\n\\t\\t\\t\\tdataPriv.get( cur, \\\"handle\\\" );\\n\\t\\t\\tif ( handle ) {\\n\\t\\t\\t\\thandle.apply( cur, data );\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Native handler\\n\\t\\t\\thandle = ontype && cur[ ontype ];\\n\\t\\t\\tif ( handle && handle.apply && acceptData( cur ) ) {\\n\\t\\t\\t\\tevent.result = handle.apply( cur, data );\\n\\t\\t\\t\\tif ( event.result === false ) {\\n\\t\\t\\t\\t\\tevent.preventDefault();\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\tevent.type = type;\\n\\n\\t\\t// If nobody prevented the default action, do it now\\n\\t\\tif ( !onlyHandlers && !event.isDefaultPrevented() ) {\\n\\n\\t\\t\\tif ( ( !special._default ||\\n\\t\\t\\t\\tspecial._default.apply( eventPath.pop(), data ) === false ) &&\\n\\t\\t\\t\\tacceptData( elem ) ) {\\n\\n\\t\\t\\t\\t// Call a native DOM method on the target with the same name as the event.\\n\\t\\t\\t\\t// Don't do default actions on window, that's where global variables be (#6170)\\n\\t\\t\\t\\tif ( ontype && jQuery.isFunction( elem[ type ] ) && !jQuery.isWindow( elem ) ) {\\n\\n\\t\\t\\t\\t\\t// Don't re-trigger an onFOO event when we call its FOO() method\\n\\t\\t\\t\\t\\ttmp = elem[ ontype ];\\n\\n\\t\\t\\t\\t\\tif ( tmp ) {\\n\\t\\t\\t\\t\\t\\telem[ ontype ] = null;\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t// Prevent re-triggering of the same event, since we already bubbled it above\\n\\t\\t\\t\\t\\tjQuery.event.triggered = type;\\n\\t\\t\\t\\t\\telem[ type ]();\\n\\t\\t\\t\\t\\tjQuery.event.triggered = undefined;\\n\\n\\t\\t\\t\\t\\tif ( tmp ) {\\n\\t\\t\\t\\t\\t\\telem[ ontype ] = tmp;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn event.result;\\n\\t},\\n\\n\\t// Piggyback on a donor event to simulate a different one\\n\\t// Used only for `focus(in | out)` events\\n\\tsimulate: function( type, elem, event ) {\\n\\t\\tvar e = jQuery.extend(\\n\\t\\t\\tnew jQuery.Event(),\\n\\t\\t\\tevent,\\n\\t\\t\\t{\\n\\t\\t\\t\\ttype: type,\\n\\t\\t\\t\\tisSimulated: true\\n\\t\\t\\t}\\n\\t\\t);\\n\\n\\t\\tjQuery.event.trigger( e, null, elem );\\n\\t}\\n\\n} );\\n\\njQuery.fn.extend( {\\n\\n\\ttrigger: function( type, data ) {\\n\\t\\treturn this.each( function() {\\n\\t\\t\\tjQuery.event.trigger( type, data, this );\\n\\t\\t} );\\n\\t},\\n\\ttriggerHandler: function( type, data ) {\\n\\t\\tvar elem = this[ 0 ];\\n\\t\\tif ( elem ) {\\n\\t\\t\\treturn jQuery.event.trigger( type, data, elem, true );\\n\\t\\t}\\n\\t}\\n} );\\n\\n\\njQuery.each( ( \\\"blur focus focusin focusout resize scroll click dblclick \\\" +\\n\\t\\\"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave \\\" +\\n\\t\\\"change select submit keydown keypress keyup contextmenu\\\" ).split( \\\" \\\" ),\\n\\tfunction( i, name ) {\\n\\n\\t// Handle event binding\\n\\tjQuery.fn[ name ] = function( data, fn ) {\\n\\t\\treturn arguments.length > 0 ?\\n\\t\\t\\tthis.on( name, null, data, fn ) :\\n\\t\\t\\tthis.trigger( name );\\n\\t};\\n} );\\n\\njQuery.fn.extend( {\\n\\thover: function( fnOver, fnOut ) {\\n\\t\\treturn this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );\\n\\t}\\n} );\\n\\n\\n\\n\\nsupport.focusin = \\\"onfocusin\\\" in window;\\n\\n\\n// Support: Firefox <=44\\n// Firefox doesn't have focus(in | out) events\\n// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787\\n//\\n// Support: Chrome <=48 - 49, Safari <=9.0 - 9.1\\n// focus(in | out) events fire after focus & blur events,\\n// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order\\n// Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857\\nif ( !support.focusin ) {\\n\\tjQuery.each( { focus: \\\"focusin\\\", blur: \\\"focusout\\\" }, function( orig, fix ) {\\n\\n\\t\\t// Attach a single capturing handler on the document while someone wants focusin/focusout\\n\\t\\tvar handler = function( event ) {\\n\\t\\t\\tjQuery.event.simulate( fix, event.target, jQuery.event.fix( event ) );\\n\\t\\t};\\n\\n\\t\\tjQuery.event.special[ fix ] = {\\n\\t\\t\\tsetup: function() {\\n\\t\\t\\t\\tvar doc = this.ownerDocument || this,\\n\\t\\t\\t\\t\\tattaches = dataPriv.access( doc, fix );\\n\\n\\t\\t\\t\\tif ( !attaches ) {\\n\\t\\t\\t\\t\\tdoc.addEventListener( orig, handler, true );\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tdataPriv.access( doc, fix, ( attaches || 0 ) + 1 );\\n\\t\\t\\t},\\n\\t\\t\\tteardown: function() {\\n\\t\\t\\t\\tvar doc = this.ownerDocument || this,\\n\\t\\t\\t\\t\\tattaches = dataPriv.access( doc, fix ) - 1;\\n\\n\\t\\t\\t\\tif ( !attaches ) {\\n\\t\\t\\t\\t\\tdoc.removeEventListener( orig, handler, true );\\n\\t\\t\\t\\t\\tdataPriv.remove( doc, fix );\\n\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tdataPriv.access( doc, fix, attaches );\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t};\\n\\t} );\\n}\\nvar location = window.location;\\n\\nvar nonce = jQuery.now();\\n\\nvar rquery = ( /\\\\?/ );\\n\\n\\n\\n// Cross-browser xml parsing\\njQuery.parseXML = function( data ) {\\n\\tvar xml;\\n\\tif ( !data || typeof data !== \\\"string\\\" ) {\\n\\t\\treturn null;\\n\\t}\\n\\n\\t// Support: IE 9 - 11 only\\n\\t// IE throws on parseFromString with invalid input.\\n\\ttry {\\n\\t\\txml = ( new window.DOMParser() ).parseFromString( data, \\\"text/xml\\\" );\\n\\t} catch ( e ) {\\n\\t\\txml = undefined;\\n\\t}\\n\\n\\tif ( !xml || xml.getElementsByTagName( \\\"parsererror\\\" ).length ) {\\n\\t\\tjQuery.error( \\\"Invalid XML: \\\" + data );\\n\\t}\\n\\treturn xml;\\n};\\n\\n\\nvar\\n\\trbracket = /\\\\[\\\\]$/,\\n\\trCRLF = /\\\\r?\\\\n/g,\\n\\trsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,\\n\\trsubmittable = /^(?:input|select|textarea|keygen)/i;\\n\\nfunction buildParams( prefix, obj, traditional, add ) {\\n\\tvar name;\\n\\n\\tif ( Array.isArray( obj ) ) {\\n\\n\\t\\t// Serialize array item.\\n\\t\\tjQuery.each( obj, function( i, v ) {\\n\\t\\t\\tif ( traditional || rbracket.test( prefix ) ) {\\n\\n\\t\\t\\t\\t// Treat each array item as a scalar.\\n\\t\\t\\t\\tadd( prefix, v );\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t// Item is non-scalar (array or object), encode its numeric index.\\n\\t\\t\\t\\tbuildParams(\\n\\t\\t\\t\\t\\tprefix + \\\"[\\\" + ( typeof v === \\\"object\\\" && v != null ? i : \\\"\\\" ) + \\\"]\\\",\\n\\t\\t\\t\\t\\tv,\\n\\t\\t\\t\\t\\ttraditional,\\n\\t\\t\\t\\t\\tadd\\n\\t\\t\\t\\t);\\n\\t\\t\\t}\\n\\t\\t} );\\n\\n\\t} else if ( !traditional && jQuery.type( obj ) === \\\"object\\\" ) {\\n\\n\\t\\t// Serialize object item.\\n\\t\\tfor ( name in obj ) {\\n\\t\\t\\tbuildParams( prefix + \\\"[\\\" + name + \\\"]\\\", obj[ name ], traditional, add );\\n\\t\\t}\\n\\n\\t} else {\\n\\n\\t\\t// Serialize scalar item.\\n\\t\\tadd( prefix, obj );\\n\\t}\\n}\\n\\n// Serialize an array of form elements or a set of\\n// key/values into a query string\\njQuery.param = function( a, traditional ) {\\n\\tvar prefix,\\n\\t\\ts = [],\\n\\t\\tadd = function( key, valueOrFunction ) {\\n\\n\\t\\t\\t// If value is a function, invoke it and use its return value\\n\\t\\t\\tvar value = jQuery.isFunction( valueOrFunction ) ?\\n\\t\\t\\t\\tvalueOrFunction() :\\n\\t\\t\\t\\tvalueOrFunction;\\n\\n\\t\\t\\ts[ s.length ] = encodeURIComponent( key ) + \\\"=\\\" +\\n\\t\\t\\t\\tencodeURIComponent( value == null ? \\\"\\\" : value );\\n\\t\\t};\\n\\n\\t// If an array was passed in, assume that it is an array of form elements.\\n\\tif ( Array.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {\\n\\n\\t\\t// Serialize the form elements\\n\\t\\tjQuery.each( a, function() {\\n\\t\\t\\tadd( this.name, this.value );\\n\\t\\t} );\\n\\n\\t} else {\\n\\n\\t\\t// If traditional, encode the \\\"old\\\" way (the way 1.3.2 or older\\n\\t\\t// did it), otherwise encode params recursively.\\n\\t\\tfor ( prefix in a ) {\\n\\t\\t\\tbuildParams( prefix, a[ prefix ], traditional, add );\\n\\t\\t}\\n\\t}\\n\\n\\t// Return the resulting serialization\\n\\treturn s.join( \\\"&\\\" );\\n};\\n\\njQuery.fn.extend( {\\n\\tserialize: function() {\\n\\t\\treturn jQuery.param( this.serializeArray() );\\n\\t},\\n\\tserializeArray: function() {\\n\\t\\treturn this.map( function() {\\n\\n\\t\\t\\t// Can add propHook for \\\"elements\\\" to filter or add form elements\\n\\t\\t\\tvar elements = jQuery.prop( this, \\\"elements\\\" );\\n\\t\\t\\treturn elements ? jQuery.makeArray( elements ) : this;\\n\\t\\t} )\\n\\t\\t.filter( function() {\\n\\t\\t\\tvar type = this.type;\\n\\n\\t\\t\\t// Use .is( \\\":disabled\\\" ) so that fieldset[disabled] works\\n\\t\\t\\treturn this.name && !jQuery( this ).is( \\\":disabled\\\" ) &&\\n\\t\\t\\t\\trsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&\\n\\t\\t\\t\\t( this.checked || !rcheckableType.test( type ) );\\n\\t\\t} )\\n\\t\\t.map( function( i, elem ) {\\n\\t\\t\\tvar val = jQuery( this ).val();\\n\\n\\t\\t\\tif ( val == null ) {\\n\\t\\t\\t\\treturn null;\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( Array.isArray( val ) ) {\\n\\t\\t\\t\\treturn jQuery.map( val, function( val ) {\\n\\t\\t\\t\\t\\treturn { name: elem.name, value: val.replace( rCRLF, \\\"\\\\r\\\\n\\\" ) };\\n\\t\\t\\t\\t} );\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn { name: elem.name, value: val.replace( rCRLF, \\\"\\\\r\\\\n\\\" ) };\\n\\t\\t} ).get();\\n\\t}\\n} );\\n\\n\\nvar\\n\\tr20 = /%20/g,\\n\\trhash = /#.*$/,\\n\\trantiCache = /([?&])_=[^&]*/,\\n\\trheaders = /^(.*?):[ \\\\t]*([^\\\\r\\\\n]*)$/mg,\\n\\n\\t// #7653, #8125, #8152: local protocol detection\\n\\trlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,\\n\\trnoContent = /^(?:GET|HEAD)$/,\\n\\trprotocol = /^\\\\/\\\\//,\\n\\n\\t/* Prefilters\\n\\t * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)\\n\\t * 2) These are called:\\n\\t *    - BEFORE asking for a transport\\n\\t *    - AFTER param serialization (s.data is a string if s.processData is true)\\n\\t * 3) key is the dataType\\n\\t * 4) the catchall symbol \\\"*\\\" can be used\\n\\t * 5) execution will start with transport dataType and THEN continue down to \\\"*\\\" if needed\\n\\t */\\n\\tprefilters = {},\\n\\n\\t/* Transports bindings\\n\\t * 1) key is the dataType\\n\\t * 2) the catchall symbol \\\"*\\\" can be used\\n\\t * 3) selection will start with transport dataType and THEN go to \\\"*\\\" if needed\\n\\t */\\n\\ttransports = {},\\n\\n\\t// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression\\n\\tallTypes = \\\"*/\\\".concat( \\\"*\\\" ),\\n\\n\\t// Anchor tag for parsing the document origin\\n\\toriginAnchor = document.createElement( \\\"a\\\" );\\n\\toriginAnchor.href = location.href;\\n\\n// Base \\\"constructor\\\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\\nfunction addToPrefiltersOrTransports( structure ) {\\n\\n\\t// dataTypeExpression is optional and defaults to \\\"*\\\"\\n\\treturn function( dataTypeExpression, func ) {\\n\\n\\t\\tif ( typeof dataTypeExpression !== \\\"string\\\" ) {\\n\\t\\t\\tfunc = dataTypeExpression;\\n\\t\\t\\tdataTypeExpression = \\\"*\\\";\\n\\t\\t}\\n\\n\\t\\tvar dataType,\\n\\t\\t\\ti = 0,\\n\\t\\t\\tdataTypes = dataTypeExpression.toLowerCase().match( rnothtmlwhite ) || [];\\n\\n\\t\\tif ( jQuery.isFunction( func ) ) {\\n\\n\\t\\t\\t// For each dataType in the dataTypeExpression\\n\\t\\t\\twhile ( ( dataType = dataTypes[ i++ ] ) ) {\\n\\n\\t\\t\\t\\t// Prepend if requested\\n\\t\\t\\t\\tif ( dataType[ 0 ] === \\\"+\\\" ) {\\n\\t\\t\\t\\t\\tdataType = dataType.slice( 1 ) || \\\"*\\\";\\n\\t\\t\\t\\t\\t( structure[ dataType ] = structure[ dataType ] || [] ).unshift( func );\\n\\n\\t\\t\\t\\t// Otherwise append\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t( structure[ dataType ] = structure[ dataType ] || [] ).push( func );\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t};\\n}\\n\\n// Base inspection function for prefilters and transports\\nfunction inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {\\n\\n\\tvar inspected = {},\\n\\t\\tseekingTransport = ( structure === transports );\\n\\n\\tfunction inspect( dataType ) {\\n\\t\\tvar selected;\\n\\t\\tinspected[ dataType ] = true;\\n\\t\\tjQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {\\n\\t\\t\\tvar dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );\\n\\t\\t\\tif ( typeof dataTypeOrTransport === \\\"string\\\" &&\\n\\t\\t\\t\\t!seekingTransport && !inspected[ dataTypeOrTransport ] ) {\\n\\n\\t\\t\\t\\toptions.dataTypes.unshift( dataTypeOrTransport );\\n\\t\\t\\t\\tinspect( dataTypeOrTransport );\\n\\t\\t\\t\\treturn false;\\n\\t\\t\\t} else if ( seekingTransport ) {\\n\\t\\t\\t\\treturn !( selected = dataTypeOrTransport );\\n\\t\\t\\t}\\n\\t\\t} );\\n\\t\\treturn selected;\\n\\t}\\n\\n\\treturn inspect( options.dataTypes[ 0 ] ) || !inspected[ \\\"*\\\" ] && inspect( \\\"*\\\" );\\n}\\n\\n// A special extend for ajax options\\n// that takes \\\"flat\\\" options (not to be deep extended)\\n// Fixes #9887\\nfunction ajaxExtend( target, src ) {\\n\\tvar key, deep,\\n\\t\\tflatOptions = jQuery.ajaxSettings.flatOptions || {};\\n\\n\\tfor ( key in src ) {\\n\\t\\tif ( src[ key ] !== undefined ) {\\n\\t\\t\\t( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];\\n\\t\\t}\\n\\t}\\n\\tif ( deep ) {\\n\\t\\tjQuery.extend( true, target, deep );\\n\\t}\\n\\n\\treturn target;\\n}\\n\\n/* Handles responses to an ajax request:\\n * - finds the right dataType (mediates between content-type and expected dataType)\\n * - returns the corresponding response\\n */\\nfunction ajaxHandleResponses( s, jqXHR, responses ) {\\n\\n\\tvar ct, type, finalDataType, firstDataType,\\n\\t\\tcontents = s.contents,\\n\\t\\tdataTypes = s.dataTypes;\\n\\n\\t// Remove auto dataType and get content-type in the process\\n\\twhile ( dataTypes[ 0 ] === \\\"*\\\" ) {\\n\\t\\tdataTypes.shift();\\n\\t\\tif ( ct === undefined ) {\\n\\t\\t\\tct = s.mimeType || jqXHR.getResponseHeader( \\\"Content-Type\\\" );\\n\\t\\t}\\n\\t}\\n\\n\\t// Check if we're dealing with a known content-type\\n\\tif ( ct ) {\\n\\t\\tfor ( type in contents ) {\\n\\t\\t\\tif ( contents[ type ] && contents[ type ].test( ct ) ) {\\n\\t\\t\\t\\tdataTypes.unshift( type );\\n\\t\\t\\t\\tbreak;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\t// Check to see if we have a response for the expected dataType\\n\\tif ( dataTypes[ 0 ] in responses ) {\\n\\t\\tfinalDataType = dataTypes[ 0 ];\\n\\t} else {\\n\\n\\t\\t// Try convertible dataTypes\\n\\t\\tfor ( type in responses ) {\\n\\t\\t\\tif ( !dataTypes[ 0 ] || s.converters[ type + \\\" \\\" + dataTypes[ 0 ] ] ) {\\n\\t\\t\\t\\tfinalDataType = type;\\n\\t\\t\\t\\tbreak;\\n\\t\\t\\t}\\n\\t\\t\\tif ( !firstDataType ) {\\n\\t\\t\\t\\tfirstDataType = type;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t// Or just use first one\\n\\t\\tfinalDataType = finalDataType || firstDataType;\\n\\t}\\n\\n\\t// If we found a dataType\\n\\t// We add the dataType to the list if needed\\n\\t// and return the corresponding response\\n\\tif ( finalDataType ) {\\n\\t\\tif ( finalDataType !== dataTypes[ 0 ] ) {\\n\\t\\t\\tdataTypes.unshift( finalDataType );\\n\\t\\t}\\n\\t\\treturn responses[ finalDataType ];\\n\\t}\\n}\\n\\n/* Chain conversions given the request and the original response\\n * Also sets the responseXXX fields on the jqXHR instance\\n */\\nfunction ajaxConvert( s, response, jqXHR, isSuccess ) {\\n\\tvar conv2, current, conv, tmp, prev,\\n\\t\\tconverters = {},\\n\\n\\t\\t// Work with a copy of dataTypes in case we need to modify it for conversion\\n\\t\\tdataTypes = s.dataTypes.slice();\\n\\n\\t// Create converters map with lowercased keys\\n\\tif ( dataTypes[ 1 ] ) {\\n\\t\\tfor ( conv in s.converters ) {\\n\\t\\t\\tconverters[ conv.toLowerCase() ] = s.converters[ conv ];\\n\\t\\t}\\n\\t}\\n\\n\\tcurrent = dataTypes.shift();\\n\\n\\t// Convert to each sequential dataType\\n\\twhile ( current ) {\\n\\n\\t\\tif ( s.responseFields[ current ] ) {\\n\\t\\t\\tjqXHR[ s.responseFields[ current ] ] = response;\\n\\t\\t}\\n\\n\\t\\t// Apply the dataFilter if provided\\n\\t\\tif ( !prev && isSuccess && s.dataFilter ) {\\n\\t\\t\\tresponse = s.dataFilter( response, s.dataType );\\n\\t\\t}\\n\\n\\t\\tprev = current;\\n\\t\\tcurrent = dataTypes.shift();\\n\\n\\t\\tif ( current ) {\\n\\n\\t\\t\\t// There's only work to do if current dataType is non-auto\\n\\t\\t\\tif ( current === \\\"*\\\" ) {\\n\\n\\t\\t\\t\\tcurrent = prev;\\n\\n\\t\\t\\t// Convert response if prev dataType is non-auto and differs from current\\n\\t\\t\\t} else if ( prev !== \\\"*\\\" && prev !== current ) {\\n\\n\\t\\t\\t\\t// Seek a direct converter\\n\\t\\t\\t\\tconv = converters[ prev + \\\" \\\" + current ] || converters[ \\\"* \\\" + current ];\\n\\n\\t\\t\\t\\t// If none found, seek a pair\\n\\t\\t\\t\\tif ( !conv ) {\\n\\t\\t\\t\\t\\tfor ( conv2 in converters ) {\\n\\n\\t\\t\\t\\t\\t\\t// If conv2 outputs current\\n\\t\\t\\t\\t\\t\\ttmp = conv2.split( \\\" \\\" );\\n\\t\\t\\t\\t\\t\\tif ( tmp[ 1 ] === current ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t// If prev can be converted to accepted input\\n\\t\\t\\t\\t\\t\\t\\tconv = converters[ prev + \\\" \\\" + tmp[ 0 ] ] ||\\n\\t\\t\\t\\t\\t\\t\\t\\tconverters[ \\\"* \\\" + tmp[ 0 ] ];\\n\\t\\t\\t\\t\\t\\t\\tif ( conv ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t// Condense equivalence converters\\n\\t\\t\\t\\t\\t\\t\\t\\tif ( conv === true ) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tconv = converters[ conv2 ];\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t// Otherwise, insert the intermediate dataType\\n\\t\\t\\t\\t\\t\\t\\t\\t} else if ( converters[ conv2 ] !== true ) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tcurrent = tmp[ 0 ];\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tdataTypes.unshift( tmp[ 1 ] );\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// Apply converter (if not an equivalence)\\n\\t\\t\\t\\tif ( conv !== true ) {\\n\\n\\t\\t\\t\\t\\t// Unless errors are allowed to bubble, catch and return them\\n\\t\\t\\t\\t\\tif ( conv && s.throws ) {\\n\\t\\t\\t\\t\\t\\tresponse = conv( response );\\n\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\ttry {\\n\\t\\t\\t\\t\\t\\t\\tresponse = conv( response );\\n\\t\\t\\t\\t\\t\\t} catch ( e ) {\\n\\t\\t\\t\\t\\t\\t\\treturn {\\n\\t\\t\\t\\t\\t\\t\\t\\tstate: \\\"parsererror\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\terror: conv ? e : \\\"No conversion from \\\" + prev + \\\" to \\\" + current\\n\\t\\t\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\treturn { state: \\\"success\\\", data: response };\\n}\\n\\njQuery.extend( {\\n\\n\\t// Counter for holding the number of active queries\\n\\tactive: 0,\\n\\n\\t// Last-Modified header cache for next request\\n\\tlastModified: {},\\n\\tetag: {},\\n\\n\\tajaxSettings: {\\n\\t\\turl: location.href,\\n\\t\\ttype: \\\"GET\\\",\\n\\t\\tisLocal: rlocalProtocol.test( location.protocol ),\\n\\t\\tglobal: true,\\n\\t\\tprocessData: true,\\n\\t\\tasync: true,\\n\\t\\tcontentType: \\\"application/x-www-form-urlencoded; charset=UTF-8\\\",\\n\\n\\t\\t/*\\n\\t\\ttimeout: 0,\\n\\t\\tdata: null,\\n\\t\\tdataType: null,\\n\\t\\tusername: null,\\n\\t\\tpassword: null,\\n\\t\\tcache: null,\\n\\t\\tthrows: false,\\n\\t\\ttraditional: false,\\n\\t\\theaders: {},\\n\\t\\t*/\\n\\n\\t\\taccepts: {\\n\\t\\t\\t\\\"*\\\": allTypes,\\n\\t\\t\\ttext: \\\"text/plain\\\",\\n\\t\\t\\thtml: \\\"text/html\\\",\\n\\t\\t\\txml: \\\"application/xml, text/xml\\\",\\n\\t\\t\\tjson: \\\"application/json, text/javascript\\\"\\n\\t\\t},\\n\\n\\t\\tcontents: {\\n\\t\\t\\txml: /\\\\bxml\\\\b/,\\n\\t\\t\\thtml: /\\\\bhtml/,\\n\\t\\t\\tjson: /\\\\bjson\\\\b/\\n\\t\\t},\\n\\n\\t\\tresponseFields: {\\n\\t\\t\\txml: \\\"responseXML\\\",\\n\\t\\t\\ttext: \\\"responseText\\\",\\n\\t\\t\\tjson: \\\"responseJSON\\\"\\n\\t\\t},\\n\\n\\t\\t// Data converters\\n\\t\\t// Keys separate source (or catchall \\\"*\\\") and destination types with a single space\\n\\t\\tconverters: {\\n\\n\\t\\t\\t// Convert anything to text\\n\\t\\t\\t\\\"* text\\\": String,\\n\\n\\t\\t\\t// Text to html (true = no transformation)\\n\\t\\t\\t\\\"text html\\\": true,\\n\\n\\t\\t\\t// Evaluate text as a json expression\\n\\t\\t\\t\\\"text json\\\": JSON.parse,\\n\\n\\t\\t\\t// Parse text as xml\\n\\t\\t\\t\\\"text xml\\\": jQuery.parseXML\\n\\t\\t},\\n\\n\\t\\t// For options that shouldn't be deep extended:\\n\\t\\t// you can add your own custom options here if\\n\\t\\t// and when you create one that shouldn't be\\n\\t\\t// deep extended (see ajaxExtend)\\n\\t\\tflatOptions: {\\n\\t\\t\\turl: true,\\n\\t\\t\\tcontext: true\\n\\t\\t}\\n\\t},\\n\\n\\t// Creates a full fledged settings object into target\\n\\t// with both ajaxSettings and settings fields.\\n\\t// If target is omitted, writes into ajaxSettings.\\n\\tajaxSetup: function( target, settings ) {\\n\\t\\treturn settings ?\\n\\n\\t\\t\\t// Building a settings object\\n\\t\\t\\tajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :\\n\\n\\t\\t\\t// Extending ajaxSettings\\n\\t\\t\\tajaxExtend( jQuery.ajaxSettings, target );\\n\\t},\\n\\n\\tajaxPrefilter: addToPrefiltersOrTransports( prefilters ),\\n\\tajaxTransport: addToPrefiltersOrTransports( transports ),\\n\\n\\t// Main method\\n\\tajax: function( url, options ) {\\n\\n\\t\\t// If url is an object, simulate pre-1.5 signature\\n\\t\\tif ( typeof url === \\\"object\\\" ) {\\n\\t\\t\\toptions = url;\\n\\t\\t\\turl = undefined;\\n\\t\\t}\\n\\n\\t\\t// Force options to be an object\\n\\t\\toptions = options || {};\\n\\n\\t\\tvar transport,\\n\\n\\t\\t\\t// URL without anti-cache param\\n\\t\\t\\tcacheURL,\\n\\n\\t\\t\\t// Response headers\\n\\t\\t\\tresponseHeadersString,\\n\\t\\t\\tresponseHeaders,\\n\\n\\t\\t\\t// timeout handle\\n\\t\\t\\ttimeoutTimer,\\n\\n\\t\\t\\t// Url cleanup var\\n\\t\\t\\turlAnchor,\\n\\n\\t\\t\\t// Request state (becomes false upon send and true upon completion)\\n\\t\\t\\tcompleted,\\n\\n\\t\\t\\t// To know if global events are to be dispatched\\n\\t\\t\\tfireGlobals,\\n\\n\\t\\t\\t// Loop variable\\n\\t\\t\\ti,\\n\\n\\t\\t\\t// uncached part of the url\\n\\t\\t\\tuncached,\\n\\n\\t\\t\\t// Create the final options object\\n\\t\\t\\ts = jQuery.ajaxSetup( {}, options ),\\n\\n\\t\\t\\t// Callbacks context\\n\\t\\t\\tcallbackContext = s.context || s,\\n\\n\\t\\t\\t// Context for global events is callbackContext if it is a DOM node or jQuery collection\\n\\t\\t\\tglobalEventContext = s.context &&\\n\\t\\t\\t\\t( callbackContext.nodeType || callbackContext.jquery ) ?\\n\\t\\t\\t\\t\\tjQuery( callbackContext ) :\\n\\t\\t\\t\\t\\tjQuery.event,\\n\\n\\t\\t\\t// Deferreds\\n\\t\\t\\tdeferred = jQuery.Deferred(),\\n\\t\\t\\tcompleteDeferred = jQuery.Callbacks( \\\"once memory\\\" ),\\n\\n\\t\\t\\t// Status-dependent callbacks\\n\\t\\t\\tstatusCode = s.statusCode || {},\\n\\n\\t\\t\\t// Headers (they are sent all at once)\\n\\t\\t\\trequestHeaders = {},\\n\\t\\t\\trequestHeadersNames = {},\\n\\n\\t\\t\\t// Default abort message\\n\\t\\t\\tstrAbort = \\\"canceled\\\",\\n\\n\\t\\t\\t// Fake xhr\\n\\t\\t\\tjqXHR = {\\n\\t\\t\\t\\treadyState: 0,\\n\\n\\t\\t\\t\\t// Builds headers hashtable if needed\\n\\t\\t\\t\\tgetResponseHeader: function( key ) {\\n\\t\\t\\t\\t\\tvar match;\\n\\t\\t\\t\\t\\tif ( completed ) {\\n\\t\\t\\t\\t\\t\\tif ( !responseHeaders ) {\\n\\t\\t\\t\\t\\t\\t\\tresponseHeaders = {};\\n\\t\\t\\t\\t\\t\\t\\twhile ( ( match = rheaders.exec( responseHeadersString ) ) ) {\\n\\t\\t\\t\\t\\t\\t\\t\\tresponseHeaders[ match[ 1 ].toLowerCase() ] = match[ 2 ];\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\tmatch = responseHeaders[ key.toLowerCase() ];\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\treturn match == null ? null : match;\\n\\t\\t\\t\\t},\\n\\n\\t\\t\\t\\t// Raw string\\n\\t\\t\\t\\tgetAllResponseHeaders: function() {\\n\\t\\t\\t\\t\\treturn completed ? responseHeadersString : null;\\n\\t\\t\\t\\t},\\n\\n\\t\\t\\t\\t// Caches the header\\n\\t\\t\\t\\tsetRequestHeader: function( name, value ) {\\n\\t\\t\\t\\t\\tif ( completed == null ) {\\n\\t\\t\\t\\t\\t\\tname = requestHeadersNames[ name.toLowerCase() ] =\\n\\t\\t\\t\\t\\t\\t\\trequestHeadersNames[ name.toLowerCase() ] || name;\\n\\t\\t\\t\\t\\t\\trequestHeaders[ name ] = value;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\treturn this;\\n\\t\\t\\t\\t},\\n\\n\\t\\t\\t\\t// Overrides response content-type header\\n\\t\\t\\t\\toverrideMimeType: function( type ) {\\n\\t\\t\\t\\t\\tif ( completed == null ) {\\n\\t\\t\\t\\t\\t\\ts.mimeType = type;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\treturn this;\\n\\t\\t\\t\\t},\\n\\n\\t\\t\\t\\t// Status-dependent callbacks\\n\\t\\t\\t\\tstatusCode: function( map ) {\\n\\t\\t\\t\\t\\tvar code;\\n\\t\\t\\t\\t\\tif ( map ) {\\n\\t\\t\\t\\t\\t\\tif ( completed ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t// Execute the appropriate callbacks\\n\\t\\t\\t\\t\\t\\t\\tjqXHR.always( map[ jqXHR.status ] );\\n\\t\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\t\\t// Lazy-add the new callbacks in a way that preserves old ones\\n\\t\\t\\t\\t\\t\\t\\tfor ( code in map ) {\\n\\t\\t\\t\\t\\t\\t\\t\\tstatusCode[ code ] = [ statusCode[ code ], map[ code ] ];\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\treturn this;\\n\\t\\t\\t\\t},\\n\\n\\t\\t\\t\\t// Cancel the request\\n\\t\\t\\t\\tabort: function( statusText ) {\\n\\t\\t\\t\\t\\tvar finalText = statusText || strAbort;\\n\\t\\t\\t\\t\\tif ( transport ) {\\n\\t\\t\\t\\t\\t\\ttransport.abort( finalText );\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\tdone( 0, finalText );\\n\\t\\t\\t\\t\\treturn this;\\n\\t\\t\\t\\t}\\n\\t\\t\\t};\\n\\n\\t\\t// Attach deferreds\\n\\t\\tdeferred.promise( jqXHR );\\n\\n\\t\\t// Add protocol if not provided (prefilters might expect it)\\n\\t\\t// Handle falsy url in the settings object (#10093: consistency with old signature)\\n\\t\\t// We also use the url parameter if available\\n\\t\\ts.url = ( ( url || s.url || location.href ) + \\\"\\\" )\\n\\t\\t\\t.replace( rprotocol, location.protocol + \\\"//\\\" );\\n\\n\\t\\t// Alias method option to type as per ticket #12004\\n\\t\\ts.type = options.method || options.type || s.method || s.type;\\n\\n\\t\\t// Extract dataTypes list\\n\\t\\ts.dataTypes = ( s.dataType || \\\"*\\\" ).toLowerCase().match( rnothtmlwhite ) || [ \\\"\\\" ];\\n\\n\\t\\t// A cross-domain request is in order when the origin doesn't match the current origin.\\n\\t\\tif ( s.crossDomain == null ) {\\n\\t\\t\\turlAnchor = document.createElement( \\\"a\\\" );\\n\\n\\t\\t\\t// Support: IE <=8 - 11, Edge 12 - 13\\n\\t\\t\\t// IE throws exception on accessing the href property if url is malformed,\\n\\t\\t\\t// e.g. http://example.com:80x/\\n\\t\\t\\ttry {\\n\\t\\t\\t\\turlAnchor.href = s.url;\\n\\n\\t\\t\\t\\t// Support: IE <=8 - 11 only\\n\\t\\t\\t\\t// Anchor's host property isn't correctly set when s.url is relative\\n\\t\\t\\t\\turlAnchor.href = urlAnchor.href;\\n\\t\\t\\t\\ts.crossDomain = originAnchor.protocol + \\\"//\\\" + originAnchor.host !==\\n\\t\\t\\t\\t\\turlAnchor.protocol + \\\"//\\\" + urlAnchor.host;\\n\\t\\t\\t} catch ( e ) {\\n\\n\\t\\t\\t\\t// If there is an error parsing the URL, assume it is crossDomain,\\n\\t\\t\\t\\t// it can be rejected by the transport if it is invalid\\n\\t\\t\\t\\ts.crossDomain = true;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t// Convert data if not already a string\\n\\t\\tif ( s.data && s.processData && typeof s.data !== \\\"string\\\" ) {\\n\\t\\t\\ts.data = jQuery.param( s.data, s.traditional );\\n\\t\\t}\\n\\n\\t\\t// Apply prefilters\\n\\t\\tinspectPrefiltersOrTransports( prefilters, s, options, jqXHR );\\n\\n\\t\\t// If request was aborted inside a prefilter, stop there\\n\\t\\tif ( completed ) {\\n\\t\\t\\treturn jqXHR;\\n\\t\\t}\\n\\n\\t\\t// We can fire global events as of now if asked to\\n\\t\\t// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)\\n\\t\\tfireGlobals = jQuery.event && s.global;\\n\\n\\t\\t// Watch for a new set of requests\\n\\t\\tif ( fireGlobals && jQuery.active++ === 0 ) {\\n\\t\\t\\tjQuery.event.trigger( \\\"ajaxStart\\\" );\\n\\t\\t}\\n\\n\\t\\t// Uppercase the type\\n\\t\\ts.type = s.type.toUpperCase();\\n\\n\\t\\t// Determine if request has content\\n\\t\\ts.hasContent = !rnoContent.test( s.type );\\n\\n\\t\\t// Save the URL in case we're toying with the If-Modified-Since\\n\\t\\t// and/or If-None-Match header later on\\n\\t\\t// Remove hash to simplify url manipulation\\n\\t\\tcacheURL = s.url.replace( rhash, \\\"\\\" );\\n\\n\\t\\t// More options handling for requests with no content\\n\\t\\tif ( !s.hasContent ) {\\n\\n\\t\\t\\t// Remember the hash so we can put it back\\n\\t\\t\\tuncached = s.url.slice( cacheURL.length );\\n\\n\\t\\t\\t// If data is available, append data to url\\n\\t\\t\\tif ( s.data ) {\\n\\t\\t\\t\\tcacheURL += ( rquery.test( cacheURL ) ? \\\"&\\\" : \\\"?\\\" ) + s.data;\\n\\n\\t\\t\\t\\t// #9682: remove data so that it's not used in an eventual retry\\n\\t\\t\\t\\tdelete s.data;\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Add or update anti-cache param if needed\\n\\t\\t\\tif ( s.cache === false ) {\\n\\t\\t\\t\\tcacheURL = cacheURL.replace( rantiCache, \\\"$1\\\" );\\n\\t\\t\\t\\tuncached = ( rquery.test( cacheURL ) ? \\\"&\\\" : \\\"?\\\" ) + \\\"_=\\\" + ( nonce++ ) + uncached;\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Put hash and anti-cache on the URL that will be requested (gh-1732)\\n\\t\\t\\ts.url = cacheURL + uncached;\\n\\n\\t\\t// Change '%20' to '+' if this is encoded form body content (gh-2658)\\n\\t\\t} else if ( s.data && s.processData &&\\n\\t\\t\\t( s.contentType || \\\"\\\" ).indexOf( \\\"application/x-www-form-urlencoded\\\" ) === 0 ) {\\n\\t\\t\\ts.data = s.data.replace( r20, \\\"+\\\" );\\n\\t\\t}\\n\\n\\t\\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\\n\\t\\tif ( s.ifModified ) {\\n\\t\\t\\tif ( jQuery.lastModified[ cacheURL ] ) {\\n\\t\\t\\t\\tjqXHR.setRequestHeader( \\\"If-Modified-Since\\\", jQuery.lastModified[ cacheURL ] );\\n\\t\\t\\t}\\n\\t\\t\\tif ( jQuery.etag[ cacheURL ] ) {\\n\\t\\t\\t\\tjqXHR.setRequestHeader( \\\"If-None-Match\\\", jQuery.etag[ cacheURL ] );\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t// Set the correct header, if data is being sent\\n\\t\\tif ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {\\n\\t\\t\\tjqXHR.setRequestHeader( \\\"Content-Type\\\", s.contentType );\\n\\t\\t}\\n\\n\\t\\t// Set the Accepts header for the server, depending on the dataType\\n\\t\\tjqXHR.setRequestHeader(\\n\\t\\t\\t\\\"Accept\\\",\\n\\t\\t\\ts.dataTypes[ 0 ] && s.accepts[ s.dataTypes[ 0 ] ] ?\\n\\t\\t\\t\\ts.accepts[ s.dataTypes[ 0 ] ] +\\n\\t\\t\\t\\t\\t( s.dataTypes[ 0 ] !== \\\"*\\\" ? \\\", \\\" + allTypes + \\\"; q=0.01\\\" : \\\"\\\" ) :\\n\\t\\t\\t\\ts.accepts[ \\\"*\\\" ]\\n\\t\\t);\\n\\n\\t\\t// Check for headers option\\n\\t\\tfor ( i in s.headers ) {\\n\\t\\t\\tjqXHR.setRequestHeader( i, s.headers[ i ] );\\n\\t\\t}\\n\\n\\t\\t// Allow custom headers/mimetypes and early abort\\n\\t\\tif ( s.beforeSend &&\\n\\t\\t\\t( s.beforeSend.call( callbackContext, jqXHR, s ) === false || completed ) ) {\\n\\n\\t\\t\\t// Abort if not done already and return\\n\\t\\t\\treturn jqXHR.abort();\\n\\t\\t}\\n\\n\\t\\t// Aborting is no longer a cancellation\\n\\t\\tstrAbort = \\\"abort\\\";\\n\\n\\t\\t// Install callbacks on deferreds\\n\\t\\tcompleteDeferred.add( s.complete );\\n\\t\\tjqXHR.done( s.success );\\n\\t\\tjqXHR.fail( s.error );\\n\\n\\t\\t// Get transport\\n\\t\\ttransport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );\\n\\n\\t\\t// If no transport, we auto-abort\\n\\t\\tif ( !transport ) {\\n\\t\\t\\tdone( -1, \\\"No Transport\\\" );\\n\\t\\t} else {\\n\\t\\t\\tjqXHR.readyState = 1;\\n\\n\\t\\t\\t// Send global event\\n\\t\\t\\tif ( fireGlobals ) {\\n\\t\\t\\t\\tglobalEventContext.trigger( \\\"ajaxSend\\\", [ jqXHR, s ] );\\n\\t\\t\\t}\\n\\n\\t\\t\\t// If request was aborted inside ajaxSend, stop there\\n\\t\\t\\tif ( completed ) {\\n\\t\\t\\t\\treturn jqXHR;\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Timeout\\n\\t\\t\\tif ( s.async && s.timeout > 0 ) {\\n\\t\\t\\t\\ttimeoutTimer = window.setTimeout( function() {\\n\\t\\t\\t\\t\\tjqXHR.abort( \\\"timeout\\\" );\\n\\t\\t\\t\\t}, s.timeout );\\n\\t\\t\\t}\\n\\n\\t\\t\\ttry {\\n\\t\\t\\t\\tcompleted = false;\\n\\t\\t\\t\\ttransport.send( requestHeaders, done );\\n\\t\\t\\t} catch ( e ) {\\n\\n\\t\\t\\t\\t// Rethrow post-completion exceptions\\n\\t\\t\\t\\tif ( completed ) {\\n\\t\\t\\t\\t\\tthrow e;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// Propagate others as results\\n\\t\\t\\t\\tdone( -1, e );\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t// Callback for when everything is done\\n\\t\\tfunction done( status, nativeStatusText, responses, headers ) {\\n\\t\\t\\tvar isSuccess, success, error, response, modified,\\n\\t\\t\\t\\tstatusText = nativeStatusText;\\n\\n\\t\\t\\t// Ignore repeat invocations\\n\\t\\t\\tif ( completed ) {\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\n\\t\\t\\tcompleted = true;\\n\\n\\t\\t\\t// Clear timeout if it exists\\n\\t\\t\\tif ( timeoutTimer ) {\\n\\t\\t\\t\\twindow.clearTimeout( timeoutTimer );\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Dereference transport for early garbage collection\\n\\t\\t\\t// (no matter how long the jqXHR object will be used)\\n\\t\\t\\ttransport = undefined;\\n\\n\\t\\t\\t// Cache response headers\\n\\t\\t\\tresponseHeadersString = headers || \\\"\\\";\\n\\n\\t\\t\\t// Set readyState\\n\\t\\t\\tjqXHR.readyState = status > 0 ? 4 : 0;\\n\\n\\t\\t\\t// Determine if successful\\n\\t\\t\\tisSuccess = status >= 200 && status < 300 || status === 304;\\n\\n\\t\\t\\t// Get response data\\n\\t\\t\\tif ( responses ) {\\n\\t\\t\\t\\tresponse = ajaxHandleResponses( s, jqXHR, responses );\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Convert no matter what (that way responseXXX fields are always set)\\n\\t\\t\\tresponse = ajaxConvert( s, response, jqXHR, isSuccess );\\n\\n\\t\\t\\t// If successful, handle type chaining\\n\\t\\t\\tif ( isSuccess ) {\\n\\n\\t\\t\\t\\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\\n\\t\\t\\t\\tif ( s.ifModified ) {\\n\\t\\t\\t\\t\\tmodified = jqXHR.getResponseHeader( \\\"Last-Modified\\\" );\\n\\t\\t\\t\\t\\tif ( modified ) {\\n\\t\\t\\t\\t\\t\\tjQuery.lastModified[ cacheURL ] = modified;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\tmodified = jqXHR.getResponseHeader( \\\"etag\\\" );\\n\\t\\t\\t\\t\\tif ( modified ) {\\n\\t\\t\\t\\t\\t\\tjQuery.etag[ cacheURL ] = modified;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// if no content\\n\\t\\t\\t\\tif ( status === 204 || s.type === \\\"HEAD\\\" ) {\\n\\t\\t\\t\\t\\tstatusText = \\\"nocontent\\\";\\n\\n\\t\\t\\t\\t// if not modified\\n\\t\\t\\t\\t} else if ( status === 304 ) {\\n\\t\\t\\t\\t\\tstatusText = \\\"notmodified\\\";\\n\\n\\t\\t\\t\\t// If we have data, let's convert it\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tstatusText = response.state;\\n\\t\\t\\t\\t\\tsuccess = response.data;\\n\\t\\t\\t\\t\\terror = response.error;\\n\\t\\t\\t\\t\\tisSuccess = !error;\\n\\t\\t\\t\\t}\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t// Extract error from statusText and normalize for non-aborts\\n\\t\\t\\t\\terror = statusText;\\n\\t\\t\\t\\tif ( status || !statusText ) {\\n\\t\\t\\t\\t\\tstatusText = \\\"error\\\";\\n\\t\\t\\t\\t\\tif ( status < 0 ) {\\n\\t\\t\\t\\t\\t\\tstatus = 0;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Set data for the fake xhr object\\n\\t\\t\\tjqXHR.status = status;\\n\\t\\t\\tjqXHR.statusText = ( nativeStatusText || statusText ) + \\\"\\\";\\n\\n\\t\\t\\t// Success/Error\\n\\t\\t\\tif ( isSuccess ) {\\n\\t\\t\\t\\tdeferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tdeferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Status-dependent callbacks\\n\\t\\t\\tjqXHR.statusCode( statusCode );\\n\\t\\t\\tstatusCode = undefined;\\n\\n\\t\\t\\tif ( fireGlobals ) {\\n\\t\\t\\t\\tglobalEventContext.trigger( isSuccess ? \\\"ajaxSuccess\\\" : \\\"ajaxError\\\",\\n\\t\\t\\t\\t\\t[ jqXHR, s, isSuccess ? success : error ] );\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Complete\\n\\t\\t\\tcompleteDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );\\n\\n\\t\\t\\tif ( fireGlobals ) {\\n\\t\\t\\t\\tglobalEventContext.trigger( \\\"ajaxComplete\\\", [ jqXHR, s ] );\\n\\n\\t\\t\\t\\t// Handle the global AJAX counter\\n\\t\\t\\t\\tif ( !( --jQuery.active ) ) {\\n\\t\\t\\t\\t\\tjQuery.event.trigger( \\\"ajaxStop\\\" );\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn jqXHR;\\n\\t},\\n\\n\\tgetJSON: function( url, data, callback ) {\\n\\t\\treturn jQuery.get( url, data, callback, \\\"json\\\" );\\n\\t},\\n\\n\\tgetScript: function( url, callback ) {\\n\\t\\treturn jQuery.get( url, undefined, callback, \\\"script\\\" );\\n\\t}\\n} );\\n\\njQuery.each( [ \\\"get\\\", \\\"post\\\" ], function( i, method ) {\\n\\tjQuery[ method ] = function( url, data, callback, type ) {\\n\\n\\t\\t// Shift arguments if data argument was omitted\\n\\t\\tif ( jQuery.isFunction( data ) ) {\\n\\t\\t\\ttype = type || callback;\\n\\t\\t\\tcallback = data;\\n\\t\\t\\tdata = undefined;\\n\\t\\t}\\n\\n\\t\\t// The url can be an options object (which then must have .url)\\n\\t\\treturn jQuery.ajax( jQuery.extend( {\\n\\t\\t\\turl: url,\\n\\t\\t\\ttype: method,\\n\\t\\t\\tdataType: type,\\n\\t\\t\\tdata: data,\\n\\t\\t\\tsuccess: callback\\n\\t\\t}, jQuery.isPlainObject( url ) && url ) );\\n\\t};\\n} );\\n\\n\\njQuery._evalUrl = function( url ) {\\n\\treturn jQuery.ajax( {\\n\\t\\turl: url,\\n\\n\\t\\t// Make this explicit, since user can override this through ajaxSetup (#11264)\\n\\t\\ttype: \\\"GET\\\",\\n\\t\\tdataType: \\\"script\\\",\\n\\t\\tcache: true,\\n\\t\\tasync: false,\\n\\t\\tglobal: false,\\n\\t\\t\\\"throws\\\": true\\n\\t} );\\n};\\n\\n\\njQuery.fn.extend( {\\n\\twrapAll: function( html ) {\\n\\t\\tvar wrap;\\n\\n\\t\\tif ( this[ 0 ] ) {\\n\\t\\t\\tif ( jQuery.isFunction( html ) ) {\\n\\t\\t\\t\\thtml = html.call( this[ 0 ] );\\n\\t\\t\\t}\\n\\n\\t\\t\\t// The elements to wrap the target around\\n\\t\\t\\twrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );\\n\\n\\t\\t\\tif ( this[ 0 ].parentNode ) {\\n\\t\\t\\t\\twrap.insertBefore( this[ 0 ] );\\n\\t\\t\\t}\\n\\n\\t\\t\\twrap.map( function() {\\n\\t\\t\\t\\tvar elem = this;\\n\\n\\t\\t\\t\\twhile ( elem.firstElementChild ) {\\n\\t\\t\\t\\t\\telem = elem.firstElementChild;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\treturn elem;\\n\\t\\t\\t} ).append( this );\\n\\t\\t}\\n\\n\\t\\treturn this;\\n\\t},\\n\\n\\twrapInner: function( html ) {\\n\\t\\tif ( jQuery.isFunction( html ) ) {\\n\\t\\t\\treturn this.each( function( i ) {\\n\\t\\t\\t\\tjQuery( this ).wrapInner( html.call( this, i ) );\\n\\t\\t\\t} );\\n\\t\\t}\\n\\n\\t\\treturn this.each( function() {\\n\\t\\t\\tvar self = jQuery( this ),\\n\\t\\t\\t\\tcontents = self.contents();\\n\\n\\t\\t\\tif ( contents.length ) {\\n\\t\\t\\t\\tcontents.wrapAll( html );\\n\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tself.append( html );\\n\\t\\t\\t}\\n\\t\\t} );\\n\\t},\\n\\n\\twrap: function( html ) {\\n\\t\\tvar isFunction = jQuery.isFunction( html );\\n\\n\\t\\treturn this.each( function( i ) {\\n\\t\\t\\tjQuery( this ).wrapAll( isFunction ? html.call( this, i ) : html );\\n\\t\\t} );\\n\\t},\\n\\n\\tunwrap: function( selector ) {\\n\\t\\tthis.parent( selector ).not( \\\"body\\\" ).each( function() {\\n\\t\\t\\tjQuery( this ).replaceWith( this.childNodes );\\n\\t\\t} );\\n\\t\\treturn this;\\n\\t}\\n} );\\n\\n\\njQuery.expr.pseudos.hidden = function( elem ) {\\n\\treturn !jQuery.expr.pseudos.visible( elem );\\n};\\njQuery.expr.pseudos.visible = function( elem ) {\\n\\treturn !!( elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length );\\n};\\n\\n\\n\\n\\njQuery.ajaxSettings.xhr = function() {\\n\\ttry {\\n\\t\\treturn new window.XMLHttpRequest();\\n\\t} catch ( e ) {}\\n};\\n\\nvar xhrSuccessStatus = {\\n\\n\\t\\t// File protocol always yields status code 0, assume 200\\n\\t\\t0: 200,\\n\\n\\t\\t// Support: IE <=9 only\\n\\t\\t// #1450: sometimes IE returns 1223 when it should be 204\\n\\t\\t1223: 204\\n\\t},\\n\\txhrSupported = jQuery.ajaxSettings.xhr();\\n\\nsupport.cors = !!xhrSupported && ( \\\"withCredentials\\\" in xhrSupported );\\nsupport.ajax = xhrSupported = !!xhrSupported;\\n\\njQuery.ajaxTransport( function( options ) {\\n\\tvar callback, errorCallback;\\n\\n\\t// Cross domain only allowed if supported through XMLHttpRequest\\n\\tif ( support.cors || xhrSupported && !options.crossDomain ) {\\n\\t\\treturn {\\n\\t\\t\\tsend: function( headers, complete ) {\\n\\t\\t\\t\\tvar i,\\n\\t\\t\\t\\t\\txhr = options.xhr();\\n\\n\\t\\t\\t\\txhr.open(\\n\\t\\t\\t\\t\\toptions.type,\\n\\t\\t\\t\\t\\toptions.url,\\n\\t\\t\\t\\t\\toptions.async,\\n\\t\\t\\t\\t\\toptions.username,\\n\\t\\t\\t\\t\\toptions.password\\n\\t\\t\\t\\t);\\n\\n\\t\\t\\t\\t// Apply custom fields if provided\\n\\t\\t\\t\\tif ( options.xhrFields ) {\\n\\t\\t\\t\\t\\tfor ( i in options.xhrFields ) {\\n\\t\\t\\t\\t\\t\\txhr[ i ] = options.xhrFields[ i ];\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// Override mime type if needed\\n\\t\\t\\t\\tif ( options.mimeType && xhr.overrideMimeType ) {\\n\\t\\t\\t\\t\\txhr.overrideMimeType( options.mimeType );\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// X-Requested-With header\\n\\t\\t\\t\\t// For cross-domain requests, seeing as conditions for a preflight are\\n\\t\\t\\t\\t// akin to a jigsaw puzzle, we simply never set it to be sure.\\n\\t\\t\\t\\t// (it can always be set on a per-request basis or even using ajaxSetup)\\n\\t\\t\\t\\t// For same-domain requests, won't change header if already provided.\\n\\t\\t\\t\\tif ( !options.crossDomain && !headers[ \\\"X-Requested-With\\\" ] ) {\\n\\t\\t\\t\\t\\theaders[ \\\"X-Requested-With\\\" ] = \\\"XMLHttpRequest\\\";\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// Set headers\\n\\t\\t\\t\\tfor ( i in headers ) {\\n\\t\\t\\t\\t\\txhr.setRequestHeader( i, headers[ i ] );\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// Callback\\n\\t\\t\\t\\tcallback = function( type ) {\\n\\t\\t\\t\\t\\treturn function() {\\n\\t\\t\\t\\t\\t\\tif ( callback ) {\\n\\t\\t\\t\\t\\t\\t\\tcallback = errorCallback = xhr.onload =\\n\\t\\t\\t\\t\\t\\t\\t\\txhr.onerror = xhr.onabort = xhr.onreadystatechange = null;\\n\\n\\t\\t\\t\\t\\t\\t\\tif ( type === \\\"abort\\\" ) {\\n\\t\\t\\t\\t\\t\\t\\t\\txhr.abort();\\n\\t\\t\\t\\t\\t\\t\\t} else if ( type === \\\"error\\\" ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t// Support: IE <=9 only\\n\\t\\t\\t\\t\\t\\t\\t\\t// On a manual native abort, IE9 throws\\n\\t\\t\\t\\t\\t\\t\\t\\t// errors on any property access that is not readyState\\n\\t\\t\\t\\t\\t\\t\\t\\tif ( typeof xhr.status !== \\\"number\\\" ) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tcomplete( 0, \\\"error\\\" );\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tcomplete(\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// File: protocol always yields status 0; see #8605, #14207\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\txhr.status,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\txhr.statusText\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\tcomplete(\\n\\t\\t\\t\\t\\t\\t\\t\\t\\txhrSuccessStatus[ xhr.status ] || xhr.status,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\txhr.statusText,\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t// Support: IE <=9 only\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t// IE9 has no XHR2 but throws on binary (trac-11426)\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t// For XHR2 non-text, let the caller handle it (gh-2498)\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t( xhr.responseType || \\\"text\\\" ) !== \\\"text\\\"  ||\\n\\t\\t\\t\\t\\t\\t\\t\\t\\ttypeof xhr.responseText !== \\\"string\\\" ?\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ binary: xhr.response } :\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ text: xhr.responseText },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\txhr.getAllResponseHeaders()\\n\\t\\t\\t\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t};\\n\\n\\t\\t\\t\\t// Listen to events\\n\\t\\t\\t\\txhr.onload = callback();\\n\\t\\t\\t\\terrorCallback = xhr.onerror = callback( \\\"error\\\" );\\n\\n\\t\\t\\t\\t// Support: IE 9 only\\n\\t\\t\\t\\t// Use onreadystatechange to replace onabort\\n\\t\\t\\t\\t// to handle uncaught aborts\\n\\t\\t\\t\\tif ( xhr.onabort !== undefined ) {\\n\\t\\t\\t\\t\\txhr.onabort = errorCallback;\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\txhr.onreadystatechange = function() {\\n\\n\\t\\t\\t\\t\\t\\t// Check readyState before timeout as it changes\\n\\t\\t\\t\\t\\t\\tif ( xhr.readyState === 4 ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t// Allow onerror to be called first,\\n\\t\\t\\t\\t\\t\\t\\t// but that will not handle a native abort\\n\\t\\t\\t\\t\\t\\t\\t// Also, save errorCallback to a variable\\n\\t\\t\\t\\t\\t\\t\\t// as xhr.onerror cannot be accessed\\n\\t\\t\\t\\t\\t\\t\\twindow.setTimeout( function() {\\n\\t\\t\\t\\t\\t\\t\\t\\tif ( callback ) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\terrorCallback();\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t} );\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// Create the abort callback\\n\\t\\t\\t\\tcallback = callback( \\\"abort\\\" );\\n\\n\\t\\t\\t\\ttry {\\n\\n\\t\\t\\t\\t\\t// Do send the request (this may raise an exception)\\n\\t\\t\\t\\t\\txhr.send( options.hasContent && options.data || null );\\n\\t\\t\\t\\t} catch ( e ) {\\n\\n\\t\\t\\t\\t\\t// #14683: Only rethrow if this hasn't been notified as an error yet\\n\\t\\t\\t\\t\\tif ( callback ) {\\n\\t\\t\\t\\t\\t\\tthrow e;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t},\\n\\n\\t\\t\\tabort: function() {\\n\\t\\t\\t\\tif ( callback ) {\\n\\t\\t\\t\\t\\tcallback();\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t};\\n\\t}\\n} );\\n\\n\\n\\n\\n// Prevent auto-execution of scripts when no explicit dataType was provided (See gh-2432)\\njQuery.ajaxPrefilter( function( s ) {\\n\\tif ( s.crossDomain ) {\\n\\t\\ts.contents.script = false;\\n\\t}\\n} );\\n\\n// Install script dataType\\njQuery.ajaxSetup( {\\n\\taccepts: {\\n\\t\\tscript: \\\"text/javascript, application/javascript, \\\" +\\n\\t\\t\\t\\\"application/ecmascript, application/x-ecmascript\\\"\\n\\t},\\n\\tcontents: {\\n\\t\\tscript: /\\\\b(?:java|ecma)script\\\\b/\\n\\t},\\n\\tconverters: {\\n\\t\\t\\\"text script\\\": function( text ) {\\n\\t\\t\\tjQuery.globalEval( text );\\n\\t\\t\\treturn text;\\n\\t\\t}\\n\\t}\\n} );\\n\\n// Handle cache's special case and crossDomain\\njQuery.ajaxPrefilter( \\\"script\\\", function( s ) {\\n\\tif ( s.cache === undefined ) {\\n\\t\\ts.cache = false;\\n\\t}\\n\\tif ( s.crossDomain ) {\\n\\t\\ts.type = \\\"GET\\\";\\n\\t}\\n} );\\n\\n// Bind script tag hack transport\\njQuery.ajaxTransport( \\\"script\\\", function( s ) {\\n\\n\\t// This transport only deals with cross domain requests\\n\\tif ( s.crossDomain ) {\\n\\t\\tvar script, callback;\\n\\t\\treturn {\\n\\t\\t\\tsend: function( _, complete ) {\\n\\t\\t\\t\\tscript = jQuery( \\\"<script>\\\" ).prop( {\\n\\t\\t\\t\\t\\tcharset: s.scriptCharset,\\n\\t\\t\\t\\t\\tsrc: s.url\\n\\t\\t\\t\\t} ).on(\\n\\t\\t\\t\\t\\t\\\"load error\\\",\\n\\t\\t\\t\\t\\tcallback = function( evt ) {\\n\\t\\t\\t\\t\\t\\tscript.remove();\\n\\t\\t\\t\\t\\t\\tcallback = null;\\n\\t\\t\\t\\t\\t\\tif ( evt ) {\\n\\t\\t\\t\\t\\t\\t\\tcomplete( evt.type === \\\"error\\\" ? 404 : 200, evt.type );\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t);\\n\\n\\t\\t\\t\\t// Use native DOM manipulation to avoid our domManip AJAX trickery\\n\\t\\t\\t\\tdocument.head.appendChild( script[ 0 ] );\\n\\t\\t\\t},\\n\\t\\t\\tabort: function() {\\n\\t\\t\\t\\tif ( callback ) {\\n\\t\\t\\t\\t\\tcallback();\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t};\\n\\t}\\n} );\\n\\n\\n\\n\\nvar oldCallbacks = [],\\n\\trjsonp = /(=)\\\\?(?=&|$)|\\\\?\\\\?/;\\n\\n// Default jsonp settings\\njQuery.ajaxSetup( {\\n\\tjsonp: \\\"callback\\\",\\n\\tjsonpCallback: function() {\\n\\t\\tvar callback = oldCallbacks.pop() || ( jQuery.expando + \\\"_\\\" + ( nonce++ ) );\\n\\t\\tthis[ callback ] = true;\\n\\t\\treturn callback;\\n\\t}\\n} );\\n\\n// Detect, normalize options and install callbacks for jsonp requests\\njQuery.ajaxPrefilter( \\\"json jsonp\\\", function( s, originalSettings, jqXHR ) {\\n\\n\\tvar callbackName, overwritten, responseContainer,\\n\\t\\tjsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?\\n\\t\\t\\t\\\"url\\\" :\\n\\t\\t\\ttypeof s.data === \\\"string\\\" &&\\n\\t\\t\\t\\t( s.contentType || \\\"\\\" )\\n\\t\\t\\t\\t\\t.indexOf( \\\"application/x-www-form-urlencoded\\\" ) === 0 &&\\n\\t\\t\\t\\trjsonp.test( s.data ) && \\\"data\\\"\\n\\t\\t);\\n\\n\\t// Handle iff the expected data type is \\\"jsonp\\\" or we have a parameter to set\\n\\tif ( jsonProp || s.dataTypes[ 0 ] === \\\"jsonp\\\" ) {\\n\\n\\t\\t// Get callback name, remembering preexisting value associated with it\\n\\t\\tcallbackName = s.jsonpCallback = jQuery.isFunction( s.jsonpCallback ) ?\\n\\t\\t\\ts.jsonpCallback() :\\n\\t\\t\\ts.jsonpCallback;\\n\\n\\t\\t// Insert callback into url or form data\\n\\t\\tif ( jsonProp ) {\\n\\t\\t\\ts[ jsonProp ] = s[ jsonProp ].replace( rjsonp, \\\"$1\\\" + callbackName );\\n\\t\\t} else if ( s.jsonp !== false ) {\\n\\t\\t\\ts.url += ( rquery.test( s.url ) ? \\\"&\\\" : \\\"?\\\" ) + s.jsonp + \\\"=\\\" + callbackName;\\n\\t\\t}\\n\\n\\t\\t// Use data converter to retrieve json after script execution\\n\\t\\ts.converters[ \\\"script json\\\" ] = function() {\\n\\t\\t\\tif ( !responseContainer ) {\\n\\t\\t\\t\\tjQuery.error( callbackName + \\\" was not called\\\" );\\n\\t\\t\\t}\\n\\t\\t\\treturn responseContainer[ 0 ];\\n\\t\\t};\\n\\n\\t\\t// Force json dataType\\n\\t\\ts.dataTypes[ 0 ] = \\\"json\\\";\\n\\n\\t\\t// Install callback\\n\\t\\toverwritten = window[ callbackName ];\\n\\t\\twindow[ callbackName ] = function() {\\n\\t\\t\\tresponseContainer = arguments;\\n\\t\\t};\\n\\n\\t\\t// Clean-up function (fires after converters)\\n\\t\\tjqXHR.always( function() {\\n\\n\\t\\t\\t// If previous value didn't exist - remove it\\n\\t\\t\\tif ( overwritten === undefined ) {\\n\\t\\t\\t\\tjQuery( window ).removeProp( callbackName );\\n\\n\\t\\t\\t// Otherwise restore preexisting value\\n\\t\\t\\t} else {\\n\\t\\t\\t\\twindow[ callbackName ] = overwritten;\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Save back as free\\n\\t\\t\\tif ( s[ callbackName ] ) {\\n\\n\\t\\t\\t\\t// Make sure that re-using the options doesn't screw things around\\n\\t\\t\\t\\ts.jsonpCallback = originalSettings.jsonpCallback;\\n\\n\\t\\t\\t\\t// Save the callback name for future use\\n\\t\\t\\t\\toldCallbacks.push( callbackName );\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Call if it was a function and we have a response\\n\\t\\t\\tif ( responseContainer && jQuery.isFunction( overwritten ) ) {\\n\\t\\t\\t\\toverwritten( responseContainer[ 0 ] );\\n\\t\\t\\t}\\n\\n\\t\\t\\tresponseContainer = overwritten = undefined;\\n\\t\\t} );\\n\\n\\t\\t// Delegate to script\\n\\t\\treturn \\\"script\\\";\\n\\t}\\n} );\\n\\n\\n\\n\\n// Support: Safari 8 only\\n// In Safari 8 documents created via document.implementation.createHTMLDocument\\n// collapse sibling forms: the second one becomes a child of the first one.\\n// Because of that, this security measure has to be disabled in Safari 8.\\n// https://bugs.webkit.org/show_bug.cgi?id=137337\\nsupport.createHTMLDocument = ( function() {\\n\\tvar body = document.implementation.createHTMLDocument( \\\"\\\" ).body;\\n\\tbody.innerHTML = \\\"<form></form><form></form>\\\";\\n\\treturn body.childNodes.length === 2;\\n} )();\\n\\n\\n// Argument \\\"data\\\" should be string of html\\n// context (optional): If specified, the fragment will be created in this context,\\n// defaults to document\\n// keepScripts (optional): If true, will include scripts passed in the html string\\njQuery.parseHTML = function( data, context, keepScripts ) {\\n\\tif ( typeof data !== \\\"string\\\" ) {\\n\\t\\treturn [];\\n\\t}\\n\\tif ( typeof context === \\\"boolean\\\" ) {\\n\\t\\tkeepScripts = context;\\n\\t\\tcontext = false;\\n\\t}\\n\\n\\tvar base, parsed, scripts;\\n\\n\\tif ( !context ) {\\n\\n\\t\\t// Stop scripts or inline event handlers from being executed immediately\\n\\t\\t// by using document.implementation\\n\\t\\tif ( support.createHTMLDocument ) {\\n\\t\\t\\tcontext = document.implementation.createHTMLDocument( \\\"\\\" );\\n\\n\\t\\t\\t// Set the base href for the created document\\n\\t\\t\\t// so any parsed elements with URLs\\n\\t\\t\\t// are based on the document's URL (gh-2965)\\n\\t\\t\\tbase = context.createElement( \\\"base\\\" );\\n\\t\\t\\tbase.href = document.location.href;\\n\\t\\t\\tcontext.head.appendChild( base );\\n\\t\\t} else {\\n\\t\\t\\tcontext = document;\\n\\t\\t}\\n\\t}\\n\\n\\tparsed = rsingleTag.exec( data );\\n\\tscripts = !keepScripts && [];\\n\\n\\t// Single tag\\n\\tif ( parsed ) {\\n\\t\\treturn [ context.createElement( parsed[ 1 ] ) ];\\n\\t}\\n\\n\\tparsed = buildFragment( [ data ], context, scripts );\\n\\n\\tif ( scripts && scripts.length ) {\\n\\t\\tjQuery( scripts ).remove();\\n\\t}\\n\\n\\treturn jQuery.merge( [], parsed.childNodes );\\n};\\n\\n\\n/**\\n * Load a url into a page\\n */\\njQuery.fn.load = function( url, params, callback ) {\\n\\tvar selector, type, response,\\n\\t\\tself = this,\\n\\t\\toff = url.indexOf( \\\" \\\" );\\n\\n\\tif ( off > -1 ) {\\n\\t\\tselector = stripAndCollapse( url.slice( off ) );\\n\\t\\turl = url.slice( 0, off );\\n\\t}\\n\\n\\t// If it's a function\\n\\tif ( jQuery.isFunction( params ) ) {\\n\\n\\t\\t// We assume that it's the callback\\n\\t\\tcallback = params;\\n\\t\\tparams = undefined;\\n\\n\\t// Otherwise, build a param string\\n\\t} else if ( params && typeof params === \\\"object\\\" ) {\\n\\t\\ttype = \\\"POST\\\";\\n\\t}\\n\\n\\t// If we have elements to modify, make the request\\n\\tif ( self.length > 0 ) {\\n\\t\\tjQuery.ajax( {\\n\\t\\t\\turl: url,\\n\\n\\t\\t\\t// If \\\"type\\\" variable is undefined, then \\\"GET\\\" method will be used.\\n\\t\\t\\t// Make value of this field explicit since\\n\\t\\t\\t// user can override it through ajaxSetup method\\n\\t\\t\\ttype: type || \\\"GET\\\",\\n\\t\\t\\tdataType: \\\"html\\\",\\n\\t\\t\\tdata: params\\n\\t\\t} ).done( function( responseText ) {\\n\\n\\t\\t\\t// Save response for use in complete callback\\n\\t\\t\\tresponse = arguments;\\n\\n\\t\\t\\tself.html( selector ?\\n\\n\\t\\t\\t\\t// If a selector was specified, locate the right elements in a dummy div\\n\\t\\t\\t\\t// Exclude scripts to avoid IE 'Permission Denied' errors\\n\\t\\t\\t\\tjQuery( \\\"<div>\\\" ).append( jQuery.parseHTML( responseText ) ).find( selector ) :\\n\\n\\t\\t\\t\\t// Otherwise use the full result\\n\\t\\t\\t\\tresponseText );\\n\\n\\t\\t// If the request succeeds, this function gets \\\"data\\\", \\\"status\\\", \\\"jqXHR\\\"\\n\\t\\t// but they are ignored because response was set above.\\n\\t\\t// If it fails, this function gets \\\"jqXHR\\\", \\\"status\\\", \\\"error\\\"\\n\\t\\t} ).always( callback && function( jqXHR, status ) {\\n\\t\\t\\tself.each( function() {\\n\\t\\t\\t\\tcallback.apply( this, response || [ jqXHR.responseText, status, jqXHR ] );\\n\\t\\t\\t} );\\n\\t\\t} );\\n\\t}\\n\\n\\treturn this;\\n};\\n\\n\\n\\n\\n// Attach a bunch of functions for handling common AJAX events\\njQuery.each( [\\n\\t\\\"ajaxStart\\\",\\n\\t\\\"ajaxStop\\\",\\n\\t\\\"ajaxComplete\\\",\\n\\t\\\"ajaxError\\\",\\n\\t\\\"ajaxSuccess\\\",\\n\\t\\\"ajaxSend\\\"\\n], function( i, type ) {\\n\\tjQuery.fn[ type ] = function( fn ) {\\n\\t\\treturn this.on( type, fn );\\n\\t};\\n} );\\n\\n\\n\\n\\njQuery.expr.pseudos.animated = function( elem ) {\\n\\treturn jQuery.grep( jQuery.timers, function( fn ) {\\n\\t\\treturn elem === fn.elem;\\n\\t} ).length;\\n};\\n\\n\\n\\n\\njQuery.offset = {\\n\\tsetOffset: function( elem, options, i ) {\\n\\t\\tvar curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,\\n\\t\\t\\tposition = jQuery.css( elem, \\\"position\\\" ),\\n\\t\\t\\tcurElem = jQuery( elem ),\\n\\t\\t\\tprops = {};\\n\\n\\t\\t// Set position first, in-case top/left are set even on static elem\\n\\t\\tif ( position === \\\"static\\\" ) {\\n\\t\\t\\telem.style.position = \\\"relative\\\";\\n\\t\\t}\\n\\n\\t\\tcurOffset = curElem.offset();\\n\\t\\tcurCSSTop = jQuery.css( elem, \\\"top\\\" );\\n\\t\\tcurCSSLeft = jQuery.css( elem, \\\"left\\\" );\\n\\t\\tcalculatePosition = ( position === \\\"absolute\\\" || position === \\\"fixed\\\" ) &&\\n\\t\\t\\t( curCSSTop + curCSSLeft ).indexOf( \\\"auto\\\" ) > -1;\\n\\n\\t\\t// Need to be able to calculate position if either\\n\\t\\t// top or left is auto and position is either absolute or fixed\\n\\t\\tif ( calculatePosition ) {\\n\\t\\t\\tcurPosition = curElem.position();\\n\\t\\t\\tcurTop = curPosition.top;\\n\\t\\t\\tcurLeft = curPosition.left;\\n\\n\\t\\t} else {\\n\\t\\t\\tcurTop = parseFloat( curCSSTop ) || 0;\\n\\t\\t\\tcurLeft = parseFloat( curCSSLeft ) || 0;\\n\\t\\t}\\n\\n\\t\\tif ( jQuery.isFunction( options ) ) {\\n\\n\\t\\t\\t// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)\\n\\t\\t\\toptions = options.call( elem, i, jQuery.extend( {}, curOffset ) );\\n\\t\\t}\\n\\n\\t\\tif ( options.top != null ) {\\n\\t\\t\\tprops.top = ( options.top - curOffset.top ) + curTop;\\n\\t\\t}\\n\\t\\tif ( options.left != null ) {\\n\\t\\t\\tprops.left = ( options.left - curOffset.left ) + curLeft;\\n\\t\\t}\\n\\n\\t\\tif ( \\\"using\\\" in options ) {\\n\\t\\t\\toptions.using.call( elem, props );\\n\\n\\t\\t} else {\\n\\t\\t\\tcurElem.css( props );\\n\\t\\t}\\n\\t}\\n};\\n\\njQuery.fn.extend( {\\n\\toffset: function( options ) {\\n\\n\\t\\t// Preserve chaining for setter\\n\\t\\tif ( arguments.length ) {\\n\\t\\t\\treturn options === undefined ?\\n\\t\\t\\t\\tthis :\\n\\t\\t\\t\\tthis.each( function( i ) {\\n\\t\\t\\t\\t\\tjQuery.offset.setOffset( this, options, i );\\n\\t\\t\\t\\t} );\\n\\t\\t}\\n\\n\\t\\tvar doc, docElem, rect, win,\\n\\t\\t\\telem = this[ 0 ];\\n\\n\\t\\tif ( !elem ) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\t// Return zeros for disconnected and hidden (display: none) elements (gh-2310)\\n\\t\\t// Support: IE <=11 only\\n\\t\\t// Running getBoundingClientRect on a\\n\\t\\t// disconnected node in IE throws an error\\n\\t\\tif ( !elem.getClientRects().length ) {\\n\\t\\t\\treturn { top: 0, left: 0 };\\n\\t\\t}\\n\\n\\t\\trect = elem.getBoundingClientRect();\\n\\n\\t\\tdoc = elem.ownerDocument;\\n\\t\\tdocElem = doc.documentElement;\\n\\t\\twin = doc.defaultView;\\n\\n\\t\\treturn {\\n\\t\\t\\ttop: rect.top + win.pageYOffset - docElem.clientTop,\\n\\t\\t\\tleft: rect.left + win.pageXOffset - docElem.clientLeft\\n\\t\\t};\\n\\t},\\n\\n\\tposition: function() {\\n\\t\\tif ( !this[ 0 ] ) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tvar offsetParent, offset,\\n\\t\\t\\telem = this[ 0 ],\\n\\t\\t\\tparentOffset = { top: 0, left: 0 };\\n\\n\\t\\t// Fixed elements are offset from window (parentOffset = {top:0, left: 0},\\n\\t\\t// because it is its only offset parent\\n\\t\\tif ( jQuery.css( elem, \\\"position\\\" ) === \\\"fixed\\\" ) {\\n\\n\\t\\t\\t// Assume getBoundingClientRect is there when computed position is fixed\\n\\t\\t\\toffset = elem.getBoundingClientRect();\\n\\n\\t\\t} else {\\n\\n\\t\\t\\t// Get *real* offsetParent\\n\\t\\t\\toffsetParent = this.offsetParent();\\n\\n\\t\\t\\t// Get correct offsets\\n\\t\\t\\toffset = this.offset();\\n\\t\\t\\tif ( !nodeName( offsetParent[ 0 ], \\\"html\\\" ) ) {\\n\\t\\t\\t\\tparentOffset = offsetParent.offset();\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Add offsetParent borders\\n\\t\\t\\tparentOffset = {\\n\\t\\t\\t\\ttop: parentOffset.top + jQuery.css( offsetParent[ 0 ], \\\"borderTopWidth\\\", true ),\\n\\t\\t\\t\\tleft: parentOffset.left + jQuery.css( offsetParent[ 0 ], \\\"borderLeftWidth\\\", true )\\n\\t\\t\\t};\\n\\t\\t}\\n\\n\\t\\t// Subtract parent offsets and element margins\\n\\t\\treturn {\\n\\t\\t\\ttop: offset.top - parentOffset.top - jQuery.css( elem, \\\"marginTop\\\", true ),\\n\\t\\t\\tleft: offset.left - parentOffset.left - jQuery.css( elem, \\\"marginLeft\\\", true )\\n\\t\\t};\\n\\t},\\n\\n\\t// This method will return documentElement in the following cases:\\n\\t// 1) For the element inside the iframe without offsetParent, this method will return\\n\\t//    documentElement of the parent window\\n\\t// 2) For the hidden or detached element\\n\\t// 3) For body or html element, i.e. in case of the html node - it will return itself\\n\\t//\\n\\t// but those exceptions were never presented as a real life use-cases\\n\\t// and might be considered as more preferable results.\\n\\t//\\n\\t// This logic, however, is not guaranteed and can change at any point in the future\\n\\toffsetParent: function() {\\n\\t\\treturn this.map( function() {\\n\\t\\t\\tvar offsetParent = this.offsetParent;\\n\\n\\t\\t\\twhile ( offsetParent && jQuery.css( offsetParent, \\\"position\\\" ) === \\\"static\\\" ) {\\n\\t\\t\\t\\toffsetParent = offsetParent.offsetParent;\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn offsetParent || documentElement;\\n\\t\\t} );\\n\\t}\\n} );\\n\\n// Create scrollLeft and scrollTop methods\\njQuery.each( { scrollLeft: \\\"pageXOffset\\\", scrollTop: \\\"pageYOffset\\\" }, function( method, prop ) {\\n\\tvar top = \\\"pageYOffset\\\" === prop;\\n\\n\\tjQuery.fn[ method ] = function( val ) {\\n\\t\\treturn access( this, function( elem, method, val ) {\\n\\n\\t\\t\\t// Coalesce documents and windows\\n\\t\\t\\tvar win;\\n\\t\\t\\tif ( jQuery.isWindow( elem ) ) {\\n\\t\\t\\t\\twin = elem;\\n\\t\\t\\t} else if ( elem.nodeType === 9 ) {\\n\\t\\t\\t\\twin = elem.defaultView;\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( val === undefined ) {\\n\\t\\t\\t\\treturn win ? win[ prop ] : elem[ method ];\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( win ) {\\n\\t\\t\\t\\twin.scrollTo(\\n\\t\\t\\t\\t\\t!top ? val : win.pageXOffset,\\n\\t\\t\\t\\t\\ttop ? val : win.pageYOffset\\n\\t\\t\\t\\t);\\n\\n\\t\\t\\t} else {\\n\\t\\t\\t\\telem[ method ] = val;\\n\\t\\t\\t}\\n\\t\\t}, method, val, arguments.length );\\n\\t};\\n} );\\n\\n// Support: Safari <=7 - 9.1, Chrome <=37 - 49\\n// Add the top/left cssHooks using jQuery.fn.position\\n// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084\\n// Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347\\n// getComputedStyle returns percent when specified for top/left/bottom/right;\\n// rather than make the css module depend on the offset module, just check for it here\\njQuery.each( [ \\\"top\\\", \\\"left\\\" ], function( i, prop ) {\\n\\tjQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,\\n\\t\\tfunction( elem, computed ) {\\n\\t\\t\\tif ( computed ) {\\n\\t\\t\\t\\tcomputed = curCSS( elem, prop );\\n\\n\\t\\t\\t\\t// If curCSS returns percentage, fallback to offset\\n\\t\\t\\t\\treturn rnumnonpx.test( computed ) ?\\n\\t\\t\\t\\t\\tjQuery( elem ).position()[ prop ] + \\\"px\\\" :\\n\\t\\t\\t\\t\\tcomputed;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t);\\n} );\\n\\n\\n// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods\\njQuery.each( { Height: \\\"height\\\", Width: \\\"width\\\" }, function( name, type ) {\\n\\tjQuery.each( { padding: \\\"inner\\\" + name, content: type, \\\"\\\": \\\"outer\\\" + name },\\n\\t\\tfunction( defaultExtra, funcName ) {\\n\\n\\t\\t// Margin is only for outerHeight, outerWidth\\n\\t\\tjQuery.fn[ funcName ] = function( margin, value ) {\\n\\t\\t\\tvar chainable = arguments.length && ( defaultExtra || typeof margin !== \\\"boolean\\\" ),\\n\\t\\t\\t\\textra = defaultExtra || ( margin === true || value === true ? \\\"margin\\\" : \\\"border\\\" );\\n\\n\\t\\t\\treturn access( this, function( elem, type, value ) {\\n\\t\\t\\t\\tvar doc;\\n\\n\\t\\t\\t\\tif ( jQuery.isWindow( elem ) ) {\\n\\n\\t\\t\\t\\t\\t// $( window ).outerWidth/Height return w/h including scrollbars (gh-1729)\\n\\t\\t\\t\\t\\treturn funcName.indexOf( \\\"outer\\\" ) === 0 ?\\n\\t\\t\\t\\t\\t\\telem[ \\\"inner\\\" + name ] :\\n\\t\\t\\t\\t\\t\\telem.document.documentElement[ \\\"client\\\" + name ];\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// Get document width or height\\n\\t\\t\\t\\tif ( elem.nodeType === 9 ) {\\n\\t\\t\\t\\t\\tdoc = elem.documentElement;\\n\\n\\t\\t\\t\\t\\t// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],\\n\\t\\t\\t\\t\\t// whichever is greatest\\n\\t\\t\\t\\t\\treturn Math.max(\\n\\t\\t\\t\\t\\t\\telem.body[ \\\"scroll\\\" + name ], doc[ \\\"scroll\\\" + name ],\\n\\t\\t\\t\\t\\t\\telem.body[ \\\"offset\\\" + name ], doc[ \\\"offset\\\" + name ],\\n\\t\\t\\t\\t\\t\\tdoc[ \\\"client\\\" + name ]\\n\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\treturn value === undefined ?\\n\\n\\t\\t\\t\\t\\t// Get width or height on the element, requesting but not forcing parseFloat\\n\\t\\t\\t\\t\\tjQuery.css( elem, type, extra ) :\\n\\n\\t\\t\\t\\t\\t// Set width or height on the element\\n\\t\\t\\t\\t\\tjQuery.style( elem, type, value, extra );\\n\\t\\t\\t}, type, chainable ? margin : undefined, chainable );\\n\\t\\t};\\n\\t} );\\n} );\\n\\n\\njQuery.fn.extend( {\\n\\n\\tbind: function( types, data, fn ) {\\n\\t\\treturn this.on( types, null, data, fn );\\n\\t},\\n\\tunbind: function( types, fn ) {\\n\\t\\treturn this.off( types, null, fn );\\n\\t},\\n\\n\\tdelegate: function( selector, types, data, fn ) {\\n\\t\\treturn this.on( types, selector, data, fn );\\n\\t},\\n\\tundelegate: function( selector, types, fn ) {\\n\\n\\t\\t// ( namespace ) or ( selector, types [, fn] )\\n\\t\\treturn arguments.length === 1 ?\\n\\t\\t\\tthis.off( selector, \\\"**\\\" ) :\\n\\t\\t\\tthis.off( types, selector || \\\"**\\\", fn );\\n\\t}\\n} );\\n\\njQuery.holdReady = function( hold ) {\\n\\tif ( hold ) {\\n\\t\\tjQuery.readyWait++;\\n\\t} else {\\n\\t\\tjQuery.ready( true );\\n\\t}\\n};\\njQuery.isArray = Array.isArray;\\njQuery.parseJSON = JSON.parse;\\njQuery.nodeName = nodeName;\\n\\n\\n\\n\\n// Register as a named AMD module, since jQuery can be concatenated with other\\n// files that may use define, but not via a proper concatenation script that\\n// understands anonymous AMD modules. A named AMD is safest and most robust\\n// way to register. Lowercase jquery is used because AMD module names are\\n// derived from file names, and jQuery is normally delivered in a lowercase\\n// file name. Do this after creating the global so that if an AMD module wants\\n// to call noConflict to hide this version of jQuery, it will work.\\n\\n// Note that for maximum portability, libraries that are not jQuery should\\n// declare themselves as anonymous modules, and avoid setting a global if an\\n// AMD loader is present. jQuery is a special case. For more information, see\\n// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon\\n\\nif ( typeof define === \\\"function\\\" && define.amd ) {\\n\\tdefine( \\\"jquery\\\", [], function() {\\n\\t\\treturn jQuery;\\n\\t} );\\n}\\n\\n\\n\\n\\nvar\\n\\n\\t// Map over jQuery in case of overwrite\\n\\t_jQuery = window.jQuery,\\n\\n\\t// Map over the $ in case of overwrite\\n\\t_$ = window.$;\\n\\njQuery.noConflict = function( deep ) {\\n\\tif ( window.$ === jQuery ) {\\n\\t\\twindow.$ = _$;\\n\\t}\\n\\n\\tif ( deep && window.jQuery === jQuery ) {\\n\\t\\twindow.jQuery = _jQuery;\\n\\t}\\n\\n\\treturn jQuery;\\n};\\n\\n// Expose jQuery and $ identifiers, even in AMD\\n// (#7102#comment:10, https://github.com/jquery/jquery/pull/557)\\n// and CommonJS for browser emulators (#13566)\\nif ( !noGlobal ) {\\n\\twindow.jQuery = window.$ = jQuery;\\n}\\n\\n\\n\\n\\nreturn jQuery;\\n} );\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/skadyeyes/代码/chart/~/raw-loader!/Users/skadyeyes/代码/chart/~/jquery/dist/jquery.js\n// module id = ../../../../raw-loader/index.js!../../../../jquery/dist/jquery.js\n// module chunks = 3","module.exports = \"\\n/* **********************************************\\n     Begin prism-core.js\\n********************************************** */\\n\\nvar _self = (typeof window !== 'undefined')\\n\\t? window   // if in browser\\n\\t: (\\n\\t\\t(typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope)\\n\\t\\t? self // if in worker\\n\\t\\t: {}   // if in node js\\n\\t);\\n\\n/**\\n * Prism: Lightweight, robust, elegant syntax highlighting\\n * MIT license http://www.opensource.org/licenses/mit-license.php/\\n * @author Lea Verou http://lea.verou.me\\n */\\n\\nvar Prism = (function(){\\n\\n// Private helper vars\\nvar lang = /\\\\blang(?:uage)?-(\\\\w+)\\\\b/i;\\nvar uniqueId = 0;\\n\\nvar _ = _self.Prism = {\\n\\tutil: {\\n\\t\\tencode: function (tokens) {\\n\\t\\t\\tif (tokens instanceof Token) {\\n\\t\\t\\t\\treturn new Token(tokens.type, _.util.encode(tokens.content), tokens.alias);\\n\\t\\t\\t} else if (_.util.type(tokens) === 'Array') {\\n\\t\\t\\t\\treturn tokens.map(_.util.encode);\\n\\t\\t\\t} else {\\n\\t\\t\\t\\treturn tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\\\u00a0/g, ' ');\\n\\t\\t\\t}\\n\\t\\t},\\n\\n\\t\\ttype: function (o) {\\n\\t\\t\\treturn Object.prototype.toString.call(o).match(/\\\\[object (\\\\w+)\\\\]/)[1];\\n\\t\\t},\\n\\n\\t\\tobjId: function (obj) {\\n\\t\\t\\tif (!obj['__id']) {\\n\\t\\t\\t\\tObject.defineProperty(obj, '__id', { value: ++uniqueId });\\n\\t\\t\\t}\\n\\t\\t\\treturn obj['__id'];\\n\\t\\t},\\n\\n\\t\\t// Deep clone a language definition (e.g. to extend it)\\n\\t\\tclone: function (o) {\\n\\t\\t\\tvar type = _.util.type(o);\\n\\n\\t\\t\\tswitch (type) {\\n\\t\\t\\t\\tcase 'Object':\\n\\t\\t\\t\\t\\tvar clone = {};\\n\\n\\t\\t\\t\\t\\tfor (var key in o) {\\n\\t\\t\\t\\t\\t\\tif (o.hasOwnProperty(key)) {\\n\\t\\t\\t\\t\\t\\t\\tclone[key] = _.util.clone(o[key]);\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\treturn clone;\\n\\n\\t\\t\\t\\tcase 'Array':\\n\\t\\t\\t\\t\\t// Check for existence for IE8\\n\\t\\t\\t\\t\\treturn o.map && o.map(function(v) { return _.util.clone(v); });\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn o;\\n\\t\\t}\\n\\t},\\n\\n\\tlanguages: {\\n\\t\\textend: function (id, redef) {\\n\\t\\t\\tvar lang = _.util.clone(_.languages[id]);\\n\\n\\t\\t\\tfor (var key in redef) {\\n\\t\\t\\t\\tlang[key] = redef[key];\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn lang;\\n\\t\\t},\\n\\n\\t\\t/**\\n\\t\\t * Insert a token before another token in a language literal\\n\\t\\t * As this needs to recreate the object (we cannot actually insert before keys in object literals),\\n\\t\\t * we cannot just provide an object, we need anobject and a key.\\n\\t\\t * @param inside The key (or language id) of the parent\\n\\t\\t * @param before The key to insert before. If not provided, the function appends instead.\\n\\t\\t * @param insert Object with the key/value pairs to insert\\n\\t\\t * @param root The object that contains `inside`. If equal to Prism.languages, it can be omitted.\\n\\t\\t */\\n\\t\\tinsertBefore: function (inside, before, insert, root) {\\n\\t\\t\\troot = root || _.languages;\\n\\t\\t\\tvar grammar = root[inside];\\n\\n\\t\\t\\tif (arguments.length == 2) {\\n\\t\\t\\t\\tinsert = arguments[1];\\n\\n\\t\\t\\t\\tfor (var newToken in insert) {\\n\\t\\t\\t\\t\\tif (insert.hasOwnProperty(newToken)) {\\n\\t\\t\\t\\t\\t\\tgrammar[newToken] = insert[newToken];\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\treturn grammar;\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar ret = {};\\n\\n\\t\\t\\tfor (var token in grammar) {\\n\\n\\t\\t\\t\\tif (grammar.hasOwnProperty(token)) {\\n\\n\\t\\t\\t\\t\\tif (token == before) {\\n\\n\\t\\t\\t\\t\\t\\tfor (var newToken in insert) {\\n\\n\\t\\t\\t\\t\\t\\t\\tif (insert.hasOwnProperty(newToken)) {\\n\\t\\t\\t\\t\\t\\t\\t\\tret[newToken] = insert[newToken];\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tret[token] = grammar[token];\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Update references in other language definitions\\n\\t\\t\\t_.languages.DFS(_.languages, function(key, value) {\\n\\t\\t\\t\\tif (value === root[inside] && key != inside) {\\n\\t\\t\\t\\t\\tthis[key] = ret;\\n\\t\\t\\t\\t}\\n\\t\\t\\t});\\n\\n\\t\\t\\treturn root[inside] = ret;\\n\\t\\t},\\n\\n\\t\\t// Traverse a language definition with Depth First Search\\n\\t\\tDFS: function(o, callback, type, visited) {\\n\\t\\t\\tvisited = visited || {};\\n\\t\\t\\tfor (var i in o) {\\n\\t\\t\\t\\tif (o.hasOwnProperty(i)) {\\n\\t\\t\\t\\t\\tcallback.call(o, i, o[i], type || i);\\n\\n\\t\\t\\t\\t\\tif (_.util.type(o[i]) === 'Object' && !visited[_.util.objId(o[i])]) {\\n\\t\\t\\t\\t\\t\\tvisited[_.util.objId(o[i])] = true;\\n\\t\\t\\t\\t\\t\\t_.languages.DFS(o[i], callback, null, visited);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\telse if (_.util.type(o[i]) === 'Array' && !visited[_.util.objId(o[i])]) {\\n\\t\\t\\t\\t\\t\\tvisited[_.util.objId(o[i])] = true;\\n\\t\\t\\t\\t\\t\\t_.languages.DFS(o[i], callback, i, visited);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t},\\n\\tplugins: {},\\n\\n\\thighlightAll: function(async, callback) {\\n\\t\\tvar env = {\\n\\t\\t\\tcallback: callback,\\n\\t\\t\\tselector: 'code[class*=\\\"language-\\\"], [class*=\\\"language-\\\"] code, code[class*=\\\"lang-\\\"], [class*=\\\"lang-\\\"] code'\\n\\t\\t};\\n\\n\\t\\t_.hooks.run(\\\"before-highlightall\\\", env);\\n\\n\\t\\tvar elements = env.elements || document.querySelectorAll(env.selector);\\n\\n\\t\\tfor (var i=0, element; element = elements[i++];) {\\n\\t\\t\\t_.highlightElement(element, async === true, env.callback);\\n\\t\\t}\\n\\t},\\n\\n\\thighlightElement: function(element, async, callback) {\\n\\t\\t// Find language\\n\\t\\tvar language, grammar, parent = element;\\n\\n\\t\\twhile (parent && !lang.test(parent.className)) {\\n\\t\\t\\tparent = parent.parentNode;\\n\\t\\t}\\n\\n\\t\\tif (parent) {\\n\\t\\t\\tlanguage = (parent.className.match(lang) || [,''])[1].toLowerCase();\\n\\t\\t\\tgrammar = _.languages[language];\\n\\t\\t}\\n\\n\\t\\t// Set language on the element, if not present\\n\\t\\telement.className = element.className.replace(lang, '').replace(/\\\\s+/g, ' ') + ' language-' + language;\\n\\n\\t\\t// Set language on the parent, for styling\\n\\t\\tparent = element.parentNode;\\n\\n\\t\\tif (/pre/i.test(parent.nodeName)) {\\n\\t\\t\\tparent.className = parent.className.replace(lang, '').replace(/\\\\s+/g, ' ') + ' language-' + language;\\n\\t\\t}\\n\\n\\t\\tvar code = element.textContent;\\n\\n\\t\\tvar env = {\\n\\t\\t\\telement: element,\\n\\t\\t\\tlanguage: language,\\n\\t\\t\\tgrammar: grammar,\\n\\t\\t\\tcode: code\\n\\t\\t};\\n\\n\\t\\t_.hooks.run('before-sanity-check', env);\\n\\n\\t\\tif (!env.code || !env.grammar) {\\n\\t\\t\\tif (env.code) {\\n\\t\\t\\t\\tenv.element.textContent = env.code;\\n\\t\\t\\t}\\n\\t\\t\\t_.hooks.run('complete', env);\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\t_.hooks.run('before-highlight', env);\\n\\n\\t\\tif (async && _self.Worker) {\\n\\t\\t\\tvar worker = new Worker(_.filename);\\n\\n\\t\\t\\tworker.onmessage = function(evt) {\\n\\t\\t\\t\\tenv.highlightedCode = evt.data;\\n\\n\\t\\t\\t\\t_.hooks.run('before-insert', env);\\n\\n\\t\\t\\t\\tenv.element.innerHTML = env.highlightedCode;\\n\\n\\t\\t\\t\\tcallback && callback.call(env.element);\\n\\t\\t\\t\\t_.hooks.run('after-highlight', env);\\n\\t\\t\\t\\t_.hooks.run('complete', env);\\n\\t\\t\\t};\\n\\n\\t\\t\\tworker.postMessage(JSON.stringify({\\n\\t\\t\\t\\tlanguage: env.language,\\n\\t\\t\\t\\tcode: env.code,\\n\\t\\t\\t\\timmediateClose: true\\n\\t\\t\\t}));\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\tenv.highlightedCode = _.highlight(env.code, env.grammar, env.language);\\n\\n\\t\\t\\t_.hooks.run('before-insert', env);\\n\\n\\t\\t\\tenv.element.innerHTML = env.highlightedCode;\\n\\n\\t\\t\\tcallback && callback.call(element);\\n\\n\\t\\t\\t_.hooks.run('after-highlight', env);\\n\\t\\t\\t_.hooks.run('complete', env);\\n\\t\\t}\\n\\t},\\n\\n\\thighlight: function (text, grammar, language) {\\n\\t\\tvar tokens = _.tokenize(text, grammar);\\n\\t\\treturn Token.stringify(_.util.encode(tokens), language);\\n\\t},\\n\\n\\ttokenize: function(text, grammar, language) {\\n\\t\\tvar Token = _.Token;\\n\\n\\t\\tvar strarr = [text];\\n\\n\\t\\tvar rest = grammar.rest;\\n\\n\\t\\tif (rest) {\\n\\t\\t\\tfor (var token in rest) {\\n\\t\\t\\t\\tgrammar[token] = rest[token];\\n\\t\\t\\t}\\n\\n\\t\\t\\tdelete grammar.rest;\\n\\t\\t}\\n\\n\\t\\ttokenloop: for (var token in grammar) {\\n\\t\\t\\tif(!grammar.hasOwnProperty(token) || !grammar[token]) {\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tvar patterns = grammar[token];\\n\\t\\t\\tpatterns = (_.util.type(patterns) === \\\"Array\\\") ? patterns : [patterns];\\n\\n\\t\\t\\tfor (var j = 0; j < patterns.length; ++j) {\\n\\t\\t\\t\\tvar pattern = patterns[j],\\n\\t\\t\\t\\t\\tinside = pattern.inside,\\n\\t\\t\\t\\t\\tlookbehind = !!pattern.lookbehind,\\n\\t\\t\\t\\t\\tgreedy = !!pattern.greedy,\\n\\t\\t\\t\\t\\tlookbehindLength = 0,\\n\\t\\t\\t\\t\\talias = pattern.alias;\\n\\n\\t\\t\\t\\tif (greedy && !pattern.pattern.global) {\\n\\t\\t\\t\\t\\t// Without the global flag, lastIndex won't work\\n\\t\\t\\t\\t\\tvar flags = pattern.pattern.toString().match(/[imuy]*$/)[0];\\n\\t\\t\\t\\t\\tpattern.pattern = RegExp(pattern.pattern.source, flags + \\\"g\\\");\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tpattern = pattern.pattern || pattern;\\n\\n\\t\\t\\t\\t// Don’t cache length as it changes during the loop\\n\\t\\t\\t\\tfor (var i=0, pos = 0; i<strarr.length; pos += strarr[i].length, ++i) {\\n\\n\\t\\t\\t\\t\\tvar str = strarr[i];\\n\\n\\t\\t\\t\\t\\tif (strarr.length > text.length) {\\n\\t\\t\\t\\t\\t\\t// Something went terribly wrong, ABORT, ABORT!\\n\\t\\t\\t\\t\\t\\tbreak tokenloop;\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tif (str instanceof Token) {\\n\\t\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tpattern.lastIndex = 0;\\n\\n\\t\\t\\t\\t\\tvar match = pattern.exec(str),\\n\\t\\t\\t\\t\\t    delNum = 1;\\n\\n\\t\\t\\t\\t\\t// Greedy patterns can override/remove up to two previously matched tokens\\n\\t\\t\\t\\t\\tif (!match && greedy && i != strarr.length - 1) {\\n\\t\\t\\t\\t\\t\\tpattern.lastIndex = pos;\\n\\t\\t\\t\\t\\t\\tmatch = pattern.exec(text);\\n\\t\\t\\t\\t\\t\\tif (!match) {\\n\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\tvar from = match.index + (lookbehind ? match[1].length : 0),\\n\\t\\t\\t\\t\\t\\t    to = match.index + match[0].length,\\n\\t\\t\\t\\t\\t\\t    k = i,\\n\\t\\t\\t\\t\\t\\t    p = pos;\\n\\n\\t\\t\\t\\t\\t\\tfor (var len = strarr.length; k < len && p < to; ++k) {\\n\\t\\t\\t\\t\\t\\t\\tp += strarr[k].length;\\n\\t\\t\\t\\t\\t\\t\\t// Move the index i to the element in strarr that is closest to from\\n\\t\\t\\t\\t\\t\\t\\tif (from >= p) {\\n\\t\\t\\t\\t\\t\\t\\t\\t++i;\\n\\t\\t\\t\\t\\t\\t\\t\\tpos = p;\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t/*\\n\\t\\t\\t\\t\\t\\t * If strarr[i] is a Token, then the match starts inside another Token, which is invalid\\n\\t\\t\\t\\t\\t\\t * If strarr[k - 1] is greedy we are in conflict with another greedy pattern\\n\\t\\t\\t\\t\\t\\t */\\n\\t\\t\\t\\t\\t\\tif (strarr[i] instanceof Token || strarr[k - 1].greedy) {\\n\\t\\t\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t// Number of tokens to delete and replace with the new match\\n\\t\\t\\t\\t\\t\\tdelNum = k - i;\\n\\t\\t\\t\\t\\t\\tstr = text.slice(pos, p);\\n\\t\\t\\t\\t\\t\\tmatch.index -= pos;\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tif (!match) {\\n\\t\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tif(lookbehind) {\\n\\t\\t\\t\\t\\t\\tlookbehindLength = match[1].length;\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tvar from = match.index + lookbehindLength,\\n\\t\\t\\t\\t\\t    match = match[0].slice(lookbehindLength),\\n\\t\\t\\t\\t\\t    to = from + match.length,\\n\\t\\t\\t\\t\\t    before = str.slice(0, from),\\n\\t\\t\\t\\t\\t    after = str.slice(to);\\n\\n\\t\\t\\t\\t\\tvar args = [i, delNum];\\n\\n\\t\\t\\t\\t\\tif (before) {\\n\\t\\t\\t\\t\\t\\targs.push(before);\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tvar wrapped = new Token(token, inside? _.tokenize(match, inside) : match, alias, match, greedy);\\n\\n\\t\\t\\t\\t\\targs.push(wrapped);\\n\\n\\t\\t\\t\\t\\tif (after) {\\n\\t\\t\\t\\t\\t\\targs.push(after);\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tArray.prototype.splice.apply(strarr, args);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn strarr;\\n\\t},\\n\\n\\thooks: {\\n\\t\\tall: {},\\n\\n\\t\\tadd: function (name, callback) {\\n\\t\\t\\tvar hooks = _.hooks.all;\\n\\n\\t\\t\\thooks[name] = hooks[name] || [];\\n\\n\\t\\t\\thooks[name].push(callback);\\n\\t\\t},\\n\\n\\t\\trun: function (name, env) {\\n\\t\\t\\tvar callbacks = _.hooks.all[name];\\n\\n\\t\\t\\tif (!callbacks || !callbacks.length) {\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\n\\t\\t\\tfor (var i=0, callback; callback = callbacks[i++];) {\\n\\t\\t\\t\\tcallback(env);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n};\\n\\nvar Token = _.Token = function(type, content, alias, matchedStr, greedy) {\\n\\tthis.type = type;\\n\\tthis.content = content;\\n\\tthis.alias = alias;\\n\\t// Copy of the full string this token was created from\\n\\tthis.length = (matchedStr || \\\"\\\").length|0;\\n\\tthis.greedy = !!greedy;\\n};\\n\\nToken.stringify = function(o, language, parent) {\\n\\tif (typeof o == 'string') {\\n\\t\\treturn o;\\n\\t}\\n\\n\\tif (_.util.type(o) === 'Array') {\\n\\t\\treturn o.map(function(element) {\\n\\t\\t\\treturn Token.stringify(element, language, o);\\n\\t\\t}).join('');\\n\\t}\\n\\n\\tvar env = {\\n\\t\\ttype: o.type,\\n\\t\\tcontent: Token.stringify(o.content, language, parent),\\n\\t\\ttag: 'span',\\n\\t\\tclasses: ['token', o.type],\\n\\t\\tattributes: {},\\n\\t\\tlanguage: language,\\n\\t\\tparent: parent\\n\\t};\\n\\n\\tif (env.type == 'comment') {\\n\\t\\tenv.attributes['spellcheck'] = 'true';\\n\\t}\\n\\n\\tif (o.alias) {\\n\\t\\tvar aliases = _.util.type(o.alias) === 'Array' ? o.alias : [o.alias];\\n\\t\\tArray.prototype.push.apply(env.classes, aliases);\\n\\t}\\n\\n\\t_.hooks.run('wrap', env);\\n\\n\\tvar attributes = Object.keys(env.attributes).map(function(name) {\\n\\t\\treturn name + '=\\\"' + (env.attributes[name] || '').replace(/\\\"/g, '&quot;') + '\\\"';\\n\\t}).join(' ');\\n\\n\\treturn '<' + env.tag + ' class=\\\"' + env.classes.join(' ') + '\\\"' + (attributes ? ' ' + attributes : '') + '>' + env.content + '</' + env.tag + '>';\\n\\n};\\n\\nif (!_self.document) {\\n\\tif (!_self.addEventListener) {\\n\\t\\t// in Node.js\\n\\t\\treturn _self.Prism;\\n\\t}\\n \\t// In worker\\n\\t_self.addEventListener('message', function(evt) {\\n\\t\\tvar message = JSON.parse(evt.data),\\n\\t\\t    lang = message.language,\\n\\t\\t    code = message.code,\\n\\t\\t    immediateClose = message.immediateClose;\\n\\n\\t\\t_self.postMessage(_.highlight(code, _.languages[lang], lang));\\n\\t\\tif (immediateClose) {\\n\\t\\t\\t_self.close();\\n\\t\\t}\\n\\t}, false);\\n\\n\\treturn _self.Prism;\\n}\\n\\n//Get current script and highlight\\nvar script = document.currentScript || [].slice.call(document.getElementsByTagName(\\\"script\\\")).pop();\\n\\nif (script) {\\n\\t_.filename = script.src;\\n\\n\\tif (document.addEventListener && !script.hasAttribute('data-manual')) {\\n\\t\\tif(document.readyState !== \\\"loading\\\") {\\n\\t\\t\\tif (window.requestAnimationFrame) {\\n\\t\\t\\t\\twindow.requestAnimationFrame(_.highlightAll);\\n\\t\\t\\t} else {\\n\\t\\t\\t\\twindow.setTimeout(_.highlightAll, 16);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\tdocument.addEventListener('DOMContentLoaded', _.highlightAll);\\n\\t\\t}\\n\\t}\\n}\\n\\nreturn _self.Prism;\\n\\n})();\\n\\nif (typeof module !== 'undefined' && module.exports) {\\n\\tmodule.exports = Prism;\\n}\\n\\n// hack for components to work correctly in node.js\\nif (typeof global !== 'undefined') {\\n\\tglobal.Prism = Prism;\\n}\\n\\n\\n/* **********************************************\\n     Begin prism-markup.js\\n********************************************** */\\n\\nPrism.languages.markup = {\\n\\t'comment': /<!--[\\\\w\\\\W]*?-->/,\\n\\t'prolog': /<\\\\?[\\\\w\\\\W]+?\\\\?>/,\\n\\t'doctype': /<!DOCTYPE[\\\\w\\\\W]+?>/i,\\n\\t'cdata': /<!\\\\[CDATA\\\\[[\\\\w\\\\W]*?]]>/i,\\n\\t'tag': {\\n\\t\\tpattern: /<\\\\/?(?!\\\\d)[^\\\\s>\\\\/=$<]+(?:\\\\s+[^\\\\s>\\\\/=]+(?:=(?:(\\\"|')(?:\\\\\\\\\\\\1|\\\\\\\\?(?!\\\\1)[\\\\w\\\\W])*\\\\1|[^\\\\s'\\\">=]+))?)*\\\\s*\\\\/?>/i,\\n\\t\\tinside: {\\n\\t\\t\\t'tag': {\\n\\t\\t\\t\\tpattern: /^<\\\\/?[^\\\\s>\\\\/]+/i,\\n\\t\\t\\t\\tinside: {\\n\\t\\t\\t\\t\\t'punctuation': /^<\\\\/?/,\\n\\t\\t\\t\\t\\t'namespace': /^[^\\\\s>\\\\/:]+:/\\n\\t\\t\\t\\t}\\n\\t\\t\\t},\\n\\t\\t\\t'attr-value': {\\n\\t\\t\\t\\tpattern: /=(?:('|\\\")[\\\\w\\\\W]*?(\\\\1)|[^\\\\s>]+)/i,\\n\\t\\t\\t\\tinside: {\\n\\t\\t\\t\\t\\t'punctuation': /[=>\\\"']/\\n\\t\\t\\t\\t}\\n\\t\\t\\t},\\n\\t\\t\\t'punctuation': /\\\\/?>/,\\n\\t\\t\\t'attr-name': {\\n\\t\\t\\t\\tpattern: /[^\\\\s>\\\\/]+/,\\n\\t\\t\\t\\tinside: {\\n\\t\\t\\t\\t\\t'namespace': /^[^\\\\s>\\\\/:]+:/\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\t},\\n\\t'entity': /&#?[\\\\da-z]{1,8};/i\\n};\\n\\n// Plugin to make entity title show the real entity, idea by Roman Komarov\\nPrism.hooks.add('wrap', function(env) {\\n\\n\\tif (env.type === 'entity') {\\n\\t\\tenv.attributes['title'] = env.content.replace(/&amp;/, '&');\\n\\t}\\n});\\n\\nPrism.languages.xml = Prism.languages.markup;\\nPrism.languages.html = Prism.languages.markup;\\nPrism.languages.mathml = Prism.languages.markup;\\nPrism.languages.svg = Prism.languages.markup;\\n\\n\\n/* **********************************************\\n     Begin prism-css.js\\n********************************************** */\\n\\nPrism.languages.css = {\\n\\t'comment': /\\\\/\\\\*[\\\\w\\\\W]*?\\\\*\\\\//,\\n\\t'atrule': {\\n\\t\\tpattern: /@[\\\\w-]+?.*?(;|(?=\\\\s*\\\\{))/i,\\n\\t\\tinside: {\\n\\t\\t\\t'rule': /@[\\\\w-]+/\\n\\t\\t\\t// See rest below\\n\\t\\t}\\n\\t},\\n\\t'url': /url\\\\((?:([\\\"'])(\\\\\\\\(?:\\\\r\\\\n|[\\\\w\\\\W])|(?!\\\\1)[^\\\\\\\\\\\\r\\\\n])*\\\\1|.*?)\\\\)/i,\\n\\t'selector': /[^\\\\{\\\\}\\\\s][^\\\\{\\\\};]*?(?=\\\\s*\\\\{)/,\\n\\t'string': {\\n\\t\\tpattern: /(\\\"|')(\\\\\\\\(?:\\\\r\\\\n|[\\\\w\\\\W])|(?!\\\\1)[^\\\\\\\\\\\\r\\\\n])*\\\\1/,\\n\\t\\tgreedy: true\\n\\t},\\n\\t'property': /(\\\\b|\\\\B)[\\\\w-]+(?=\\\\s*:)/i,\\n\\t'important': /\\\\B!important\\\\b/i,\\n\\t'function': /[-a-z0-9]+(?=\\\\()/i,\\n\\t'punctuation': /[(){};:]/\\n};\\n\\nPrism.languages.css['atrule'].inside.rest = Prism.util.clone(Prism.languages.css);\\n\\nif (Prism.languages.markup) {\\n\\tPrism.languages.insertBefore('markup', 'tag', {\\n\\t\\t'style': {\\n\\t\\t\\tpattern: /(<style[\\\\w\\\\W]*?>)[\\\\w\\\\W]*?(?=<\\\\/style>)/i,\\n\\t\\t\\tlookbehind: true,\\n\\t\\t\\tinside: Prism.languages.css,\\n\\t\\t\\talias: 'language-css'\\n\\t\\t}\\n\\t});\\n\\t\\n\\tPrism.languages.insertBefore('inside', 'attr-value', {\\n\\t\\t'style-attr': {\\n\\t\\t\\tpattern: /\\\\s*style=(\\\"|').*?\\\\1/i,\\n\\t\\t\\tinside: {\\n\\t\\t\\t\\t'attr-name': {\\n\\t\\t\\t\\t\\tpattern: /^\\\\s*style/i,\\n\\t\\t\\t\\t\\tinside: Prism.languages.markup.tag.inside\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t'punctuation': /^\\\\s*=\\\\s*['\\\"]|['\\\"]\\\\s*$/,\\n\\t\\t\\t\\t'attr-value': {\\n\\t\\t\\t\\t\\tpattern: /.+/i,\\n\\t\\t\\t\\t\\tinside: Prism.languages.css\\n\\t\\t\\t\\t}\\n\\t\\t\\t},\\n\\t\\t\\talias: 'language-css'\\n\\t\\t}\\n\\t}, Prism.languages.markup.tag);\\n}\\n\\n/* **********************************************\\n     Begin prism-clike.js\\n********************************************** */\\n\\nPrism.languages.clike = {\\n\\t'comment': [\\n\\t\\t{\\n\\t\\t\\tpattern: /(^|[^\\\\\\\\])\\\\/\\\\*[\\\\w\\\\W]*?\\\\*\\\\//,\\n\\t\\t\\tlookbehind: true\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\tpattern: /(^|[^\\\\\\\\:])\\\\/\\\\/.*/,\\n\\t\\t\\tlookbehind: true\\n\\t\\t}\\n\\t],\\n\\t'string': {\\n\\t\\tpattern: /([\\\"'])(\\\\\\\\(?:\\\\r\\\\n|[\\\\s\\\\S])|(?!\\\\1)[^\\\\\\\\\\\\r\\\\n])*\\\\1/,\\n\\t\\tgreedy: true\\n\\t},\\n\\t'class-name': {\\n\\t\\tpattern: /((?:\\\\b(?:class|interface|extends|implements|trait|instanceof|new)\\\\s+)|(?:catch\\\\s+\\\\())[a-z0-9_\\\\.\\\\\\\\]+/i,\\n\\t\\tlookbehind: true,\\n\\t\\tinside: {\\n\\t\\t\\tpunctuation: /(\\\\.|\\\\\\\\)/\\n\\t\\t}\\n\\t},\\n\\t'keyword': /\\\\b(if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\\\b/,\\n\\t'boolean': /\\\\b(true|false)\\\\b/,\\n\\t'function': /[a-z0-9_]+(?=\\\\()/i,\\n\\t'number': /\\\\b-?(?:0x[\\\\da-f]+|\\\\d*\\\\.?\\\\d+(?:e[+-]?\\\\d+)?)\\\\b/i,\\n\\t'operator': /--?|\\\\+\\\\+?|!=?=?|<=?|>=?|==?=?|&&?|\\\\|\\\\|?|\\\\?|\\\\*|\\\\/|~|\\\\^|%/,\\n\\t'punctuation': /[{}[\\\\];(),.:]/\\n};\\n\\n\\n/* **********************************************\\n     Begin prism-javascript.js\\n********************************************** */\\n\\nPrism.languages.javascript = Prism.languages.extend('clike', {\\n\\t'keyword': /\\\\b(as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|var|void|while|with|yield)\\\\b/,\\n\\t'number': /\\\\b-?(0x[\\\\dA-Fa-f]+|0b[01]+|0o[0-7]+|\\\\d*\\\\.?\\\\d+([Ee][+-]?\\\\d+)?|NaN|Infinity)\\\\b/,\\n\\t// Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\\n\\t'function': /[_$a-zA-Z\\\\xA0-\\\\uFFFF][_$a-zA-Z0-9\\\\xA0-\\\\uFFFF]*(?=\\\\()/i,\\n\\t'operator': /--?|\\\\+\\\\+?|!=?=?|<=?|>=?|==?=?|&&?|\\\\|\\\\|?|\\\\?|\\\\*\\\\*?|\\\\/|~|\\\\^|%|\\\\.{3}/\\n});\\n\\nPrism.languages.insertBefore('javascript', 'keyword', {\\n\\t'regex': {\\n\\t\\tpattern: /(^|[^/])\\\\/(?!\\\\/)(\\\\[.+?]|\\\\\\\\.|[^/\\\\\\\\\\\\r\\\\n])+\\\\/[gimyu]{0,5}(?=\\\\s*($|[\\\\r\\\\n,.;})]))/,\\n\\t\\tlookbehind: true,\\n\\t\\tgreedy: true\\n\\t}\\n});\\n\\nPrism.languages.insertBefore('javascript', 'string', {\\n\\t'template-string': {\\n\\t\\tpattern: /`(?:\\\\\\\\\\\\\\\\|\\\\\\\\?[^\\\\\\\\])*?`/,\\n\\t\\tgreedy: true,\\n\\t\\tinside: {\\n\\t\\t\\t'interpolation': {\\n\\t\\t\\t\\tpattern: /\\\\$\\\\{[^}]+\\\\}/,\\n\\t\\t\\t\\tinside: {\\n\\t\\t\\t\\t\\t'interpolation-punctuation': {\\n\\t\\t\\t\\t\\t\\tpattern: /^\\\\$\\\\{|\\\\}$/,\\n\\t\\t\\t\\t\\t\\talias: 'punctuation'\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\trest: Prism.languages.javascript\\n\\t\\t\\t\\t}\\n\\t\\t\\t},\\n\\t\\t\\t'string': /[\\\\s\\\\S]+/\\n\\t\\t}\\n\\t}\\n});\\n\\nif (Prism.languages.markup) {\\n\\tPrism.languages.insertBefore('markup', 'tag', {\\n\\t\\t'script': {\\n\\t\\t\\tpattern: /(<script[\\\\w\\\\W]*?>)[\\\\w\\\\W]*?(?=<\\\\/script>)/i,\\n\\t\\t\\tlookbehind: true,\\n\\t\\t\\tinside: Prism.languages.javascript,\\n\\t\\t\\talias: 'language-javascript'\\n\\t\\t}\\n\\t});\\n}\\n\\nPrism.languages.js = Prism.languages.javascript;\\n\\n/* **********************************************\\n     Begin prism-file-highlight.js\\n********************************************** */\\n\\n(function () {\\n\\tif (typeof self === 'undefined' || !self.Prism || !self.document || !document.querySelector) {\\n\\t\\treturn;\\n\\t}\\n\\n\\tself.Prism.fileHighlight = function() {\\n\\n\\t\\tvar Extensions = {\\n\\t\\t\\t'js': 'javascript',\\n\\t\\t\\t'py': 'python',\\n\\t\\t\\t'rb': 'ruby',\\n\\t\\t\\t'ps1': 'powershell',\\n\\t\\t\\t'psm1': 'powershell',\\n\\t\\t\\t'sh': 'bash',\\n\\t\\t\\t'bat': 'batch',\\n\\t\\t\\t'h': 'c',\\n\\t\\t\\t'tex': 'latex'\\n\\t\\t};\\n\\n\\t\\tif(Array.prototype.forEach) { // Check to prevent error in IE8\\n\\t\\t\\tArray.prototype.slice.call(document.querySelectorAll('pre[data-src]')).forEach(function (pre) {\\n\\t\\t\\t\\tvar src = pre.getAttribute('data-src');\\n\\n\\t\\t\\t\\tvar language, parent = pre;\\n\\t\\t\\t\\tvar lang = /\\\\blang(?:uage)?-(?!\\\\*)(\\\\w+)\\\\b/i;\\n\\t\\t\\t\\twhile (parent && !lang.test(parent.className)) {\\n\\t\\t\\t\\t\\tparent = parent.parentNode;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif (parent) {\\n\\t\\t\\t\\t\\tlanguage = (pre.className.match(lang) || [, ''])[1];\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif (!language) {\\n\\t\\t\\t\\t\\tvar extension = (src.match(/\\\\.(\\\\w+)$/) || [, ''])[1];\\n\\t\\t\\t\\t\\tlanguage = Extensions[extension] || extension;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tvar code = document.createElement('code');\\n\\t\\t\\t\\tcode.className = 'language-' + language;\\n\\n\\t\\t\\t\\tpre.textContent = '';\\n\\n\\t\\t\\t\\tcode.textContent = 'Loading…';\\n\\n\\t\\t\\t\\tpre.appendChild(code);\\n\\n\\t\\t\\t\\tvar xhr = new XMLHttpRequest();\\n\\n\\t\\t\\t\\txhr.open('GET', src, true);\\n\\n\\t\\t\\t\\txhr.onreadystatechange = function () {\\n\\t\\t\\t\\t\\tif (xhr.readyState == 4) {\\n\\n\\t\\t\\t\\t\\t\\tif (xhr.status < 400 && xhr.responseText) {\\n\\t\\t\\t\\t\\t\\t\\tcode.textContent = xhr.responseText;\\n\\n\\t\\t\\t\\t\\t\\t\\tPrism.highlightElement(code);\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\telse if (xhr.status >= 400) {\\n\\t\\t\\t\\t\\t\\t\\tcode.textContent = '✖ Error ' + xhr.status + ' while fetching file: ' + xhr.statusText;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\telse {\\n\\t\\t\\t\\t\\t\\t\\tcode.textContent = '✖ Error: File does not exist or is empty';\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t};\\n\\n\\t\\t\\t\\txhr.send(null);\\n\\t\\t\\t});\\n\\t\\t}\\n\\n\\t};\\n\\n\\tdocument.addEventListener('DOMContentLoaded', self.Prism.fileHighlight);\\n\\n})();\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/skadyeyes/代码/chart/~/raw-loader!/Users/skadyeyes/代码/chart/~/prismjs/prism.js\n// module id = ../../../../raw-loader/index.js!../../../../prismjs/prism.js\n// module chunks = 3","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nmodule.exports = function(src) {\r\n\tif (typeof execScript !== \"undefined\")\r\n\t\texecScript(src);\r\n\telse\r\n\t\teval.call(null, src);\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/skadyeyes/代码/chart/~/script-loader/addScript.js\n// module id = ../../../../script-loader/addScript.js\n// module chunks = 3","require(\"!!/Users/skadyeyes/代码/chart/node_modules/script-loader/addScript.js\")(require(\"!!/Users/skadyeyes/代码/chart/node_modules/raw-loader/index.js!/Users/skadyeyes/代码/chart/node_modules/bootstrap-table/dist/bootstrap-table.min.js\"))\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/skadyeyes/代码/chart/~/script-loader!/Users/skadyeyes/代码/chart/~/bootstrap-table/dist/bootstrap-table.min.js\n// module id = ../../../../script-loader/index.js!../../../../bootstrap-table/dist/bootstrap-table.min.js\n// module chunks = 3","require(\"!!/Users/skadyeyes/代码/chart/node_modules/script-loader/addScript.js\")(require(\"!!/Users/skadyeyes/代码/chart/node_modules/raw-loader/index.js!/Users/skadyeyes/代码/chart/node_modules/bootstrap-table/dist/locale/bootstrap-table-zh-CN.min.js\"))\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/skadyeyes/代码/chart/~/script-loader!/Users/skadyeyes/代码/chart/~/bootstrap-table/dist/locale/bootstrap-table-zh-CN.min.js\n// module id = ../../../../script-loader/index.js!../../../../bootstrap-table/dist/locale/bootstrap-table-zh-CN.min.js\n// module chunks = 3","require(\"!!/Users/skadyeyes/代码/chart/node_modules/script-loader/addScript.js\")(require(\"!!/Users/skadyeyes/代码/chart/node_modules/raw-loader/index.js!/Users/skadyeyes/代码/chart/node_modules/bootstrap/dist/js/bootstrap.min.js\"))\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/skadyeyes/代码/chart/~/script-loader!/Users/skadyeyes/代码/chart/~/bootstrap/dist/js/bootstrap.min.js\n// module id = ../../../../script-loader/index.js!../../../../bootstrap/dist/js/bootstrap.min.js\n// module chunks = 3","require(\"!!/Users/skadyeyes/代码/chart/node_modules/script-loader/addScript.js\")(require(\"!!/Users/skadyeyes/代码/chart/node_modules/raw-loader/index.js!/Users/skadyeyes/代码/chart/node_modules/echarts/dist/echarts.js\"))\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/skadyeyes/代码/chart/~/script-loader!/Users/skadyeyes/代码/chart/~/echarts/dist/echarts.js\n// module id = ../../../../script-loader/index.js!../../../../echarts/dist/echarts.js\n// module chunks = 3","require(\"!!/Users/skadyeyes/代码/chart/node_modules/script-loader/addScript.js\")(require(\"!!/Users/skadyeyes/代码/chart/node_modules/raw-loader/index.js!/Users/skadyeyes/代码/chart/node_modules/echarts/map/js/china.js\"))\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/skadyeyes/代码/chart/~/script-loader!/Users/skadyeyes/代码/chart/~/echarts/map/js/china.js\n// module id = ../../../../script-loader/index.js!../../../../echarts/map/js/china.js\n// module chunks = 3","require(\"!!/Users/skadyeyes/代码/chart/node_modules/script-loader/addScript.js\")(require(\"!!/Users/skadyeyes/代码/chart/node_modules/raw-loader/index.js!/Users/skadyeyes/代码/chart/node_modules/jquery/dist/jquery.js\"))\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/skadyeyes/代码/chart/~/script-loader!/Users/skadyeyes/代码/chart/~/jquery/dist/jquery.js\n// module id = ../../../../script-loader/index.js!../../../../jquery/dist/jquery.js\n// module chunks = 3","require(\"!!/Users/skadyeyes/代码/chart/node_modules/script-loader/addScript.js\")(require(\"!!/Users/skadyeyes/代码/chart/node_modules/raw-loader/index.js!/Users/skadyeyes/代码/chart/node_modules/prismjs/prism.js\"))\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/skadyeyes/代码/chart/~/script-loader!/Users/skadyeyes/代码/chart/~/prismjs/prism.js\n// module id = ../../../../script-loader/index.js!../../../../prismjs/prism.js\n// module chunks = 3"],"sourceRoot":"webpack:///"}